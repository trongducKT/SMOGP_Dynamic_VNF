{"1": [{"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server / ( ARS + ( MRS / ( FirstVNF_RAM_Server + ( DDR + Const ) ) ) ) ) )", "choosing": "( ( RMSe / RMSe ) * ( MUR - CS ) )", "obj1": 0.3661417322834646, "obj2": 0.5466050145260434}, {"determining": "( Max( Const,( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( Min( ( ( ( ( ( MUR * MUC ) / ( RRSe - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) ,Min( Max( MUM,( RRSe - RMSe ) ) ,RRSe ) ) ,( DS / MUM ) )", "obj1": 0.45866141732283466, "obj2": 0.4496066832853467}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,MUR ) / ( RRSe - DS ) )", "obj1": 0.3464566929133858, "obj2": 0.5748186488955874}, {"determining": "( ( ( Max( CRS,FirstVNF_RAM_Server ) + MDR ) + Max( PN,FirstVNF_RAM ) ) - Min( AMS ,DDR ) )", "choosing": "Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_RAM ) - Min( FirstVNF_RAM ,PN ) )", "choosing": "( ( MUM - MUR ) / ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,( MRS - MDR ) ) + AMS ),Min( ACS ,FirstVNF_RAM ) )", "choosing": "( ( MLU / MUC ) / ( MUM / ( Max( MUR,RRSe ) - RMSe ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6999354736839013}, {"determining": "( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( Min( MUM ,RCSe ) * Min( RCSe ,DS ) )", "obj1": 0.6062992125984252, "obj2": 0.28863990552272434}, {"determining": "( ( Const + DDR ) + ( MRS - ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Min( RMSe ,RMSe ) * ( MUR + DS ) )", "obj1": 0.9625984251968503, "obj2": 0.04624123735644682}, {"determining": "( Max( PN,ACS ) * ( CRS - CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.24606299212598426, "obj2": 0.6203592920139329}, {"determining": "( ( Min( ( MRS + ( ( MDR - FirstVNF_CPU_Server ) * Max( FirstVNF_RAM,( FirstVNF_CPU / Max( BR,CRS ) ) ) ) ) ,FirstVNF_RAM_Server ) / Max( Min( FirstVNF_RAM ,ACS ),FirstVNF_RAM ) ) * Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( RMSe,Min( MLU ,MUM ) ) ) + ( MLU * Max( ( RRSe * MUC ),( ( ( RCSe * RRSe ) * RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + Max( RRS,ARS ) ) ,( AMS - MRS ) )", "choosing": "Max( ( MLU * RCSe ),( ( MUM - MUM ) - DS ) )", "obj1": 0.17125984251968504, "obj2": 0.7454476966048986}, {"determining": "( ( BR * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( ( ( MUR - MUC ) - Max( MLU,MLU ) ) + Max( MUM,MUR ) ) / Max( MUM,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8471497170121559}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( CRS / ( ( MDR / FirstVNF_Mem_Server ) + MDR ) ) )", "choosing": "( Max( MUR,( CS - Min( MUC ,( RMSe - RRSe ) ) ) ) - Min( MUR ,RRSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6784244889898579}, {"determining": "Min( Min( MDR ,FirstVNF_Mem_Server ) ,( Const - FirstVNF_CPU ) )", "choosing": "( ( RRSe / RMSe ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / RRSe ) ,Min( RRSe ,DS ) )", "obj1": 0.4251968503937008, "obj2": 0.47584271103263387}, {"determining": "( Min( Min( ACS ,ACS ) ,( MRS / FirstVNF_Mem_Server ) ) * ( ( BR * DDR ) - ( ACS / Max( AMS,BR ) ) ) )", "choosing": "( ( Max( RCSe,DS ) / ( MUC * MUR ) ) / ( ( MUM * ( ( MUM - ( RRSe / DS ) ) * MLU ) ) + ( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( PN + AMS ) )", "choosing": "Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) )", "obj1": 0.2559055118110236, "obj2": 0.6143039654417172}, {"determining": "( Max( ( FirstVNF_Mem * Const ),Const ) + Max( Max( ACS,ACS ),FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( DS * RCSe ) + ( MUM - CS ) ),( ( RMSe / RCSe ) / ( RRSe / MUR ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6530571733949192}, {"determining": "( ( Min( FirstVNF_CPU ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( Min( BR ,RRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( RCSe * DS ) * Max( DS,MLU ) ) * ( Min( MUM ,MUC ) * ( MLU / Max( MUR,( MUR - DS ) ) ) ) ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( MUM + Min( MUM ,RMSe ) ) / ( RRSe - RMSe ) )", "obj1": 0.7401574803149606, "obj2": 0.22329344869173343}, {"determining": "Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( ( DDR + ( FirstVNF_Mem / ACS ) ) + Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) - FirstVNF_Mem_Server ),MDR ),( Const * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC * CS ) + MUR ) + RMSe ) - ( RCSe * ( RMSe + Max( MUM,MLU ) ) ) ) / ( RRSe + DS ) ) * RMSe ),( ( DS - RMSe ) / RMSe ) ) - Min( ( CS / RMSe ) ,Max( MUM,MUR ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5619305432143454}, {"determining": "Max( ( MDR * Max( CRS,BR ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem / DDR ) ) )", "choosing": "Min( ( ( RRSe + RCSe ) + ( MUM + RCSe ) ) ,( Max( ( MLU + ( Min( MLU ,( ( MUC + RCSe ) + ( RMSe / MLU ) ) ) + DS ) ),MLU ) / ( MUC * RCSe ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7522641384316933}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,( ( MDR / MDR ) * FirstVNF_CPU ) ) / ( AMS / CRS ) ) )", "choosing": "Min( ( Max( RCSe,DS ) / Max( DS,CS ) ) ,( RMSe * Max( Min( MUM ,MLU ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( MRS,MDR ) ) )", "choosing": "Min( ( DS - RMSe ) ,Min( ( MUC - MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Max( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Max( ACS,PN ) ),( ( ACS - FirstVNF_CPU_Server ) * ( MRS + BR ) ) ) ,BR ),ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,RCSe ) * ( Min( Min( MUR ,CS ) ,MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( CS + MLU ),RRSe ) + RCSe ) / ( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( Max( DS,DS ) + ( RRSe + ( DS + CS ) ) )", "obj1": 0.9133858267716536, "obj2": 0.09167260199523555}, {"determining": "Max( Max( ( ( ACS * FirstVNF_Mem ) - Min( ACS ,MDR ) ),( ( ACS - FirstVNF_Mem_Server ) * ( CRS / FirstVNF_RAM_Server ) ) ),( Min( ( PN * FirstVNF_CPU_Server ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Max( ( PN + ARS ),Max( FirstVNF_RAM,CRS ) ) ) )", "choosing": "( Min( MUC ,( Min( RCSe ,MLU ) + DS ) ) - Max( RCSe,MUM ) )", "obj1": 0.1968503937007874, "obj2": 0.6885792759925061}, {"determining": "Min( Max( Min( ( FirstVNF_RAM / AMS ) ,( FirstVNF_Mem_Server * Const ) ),Max( ( FirstVNF_Mem + MDR ),( MRS / ARS ) ) ) ,( Min( Max( PN,BR ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( Min( CS ,RMSe ),RMSe ) + RMSe ) - RMSe ) - ( ( ( DS + RCSe ) - ( CS + RMSe ) ) - Min( ( CS / RCSe ) ,( RRSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( ( MDR + ACS ) + ( ARS - ARS ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7582329153227932}, {"determining": "Max( ( FirstVNF_CPU + BR ),Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( ( Max( ( RRSe / RMSe ),( RRSe - MLU ) ) / ( ( CS / CS ) / ( MUC * MUM ) ) ) ,Min( ( Max( RRSe,MUC ) * ( DS - RCSe ) ) ,( Min( DS ,MLU ) + ( MUM / CS ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.5849731262836957}, {"determining": "Max( ( FirstVNF_CPU + Const ),Min( Max( RRS,FirstVNF_CPU ) ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( DS - Max( MUC,DS ) ),( ( ( MLU / RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,Max( RRS,FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + ( FirstVNF_Mem / Min( CRS ,CRS ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) + Max( ACS,Min( PN ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( CS,( CS / MUM ) ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - PN ) / ( DDR - AMS ) ) ),( ( ( FirstVNF_CPU + FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( ( ( MLU * MUM ) / Min( RCSe ,MUR ) ) + ( ( MUM - RCSe ) - ( MLU - RRSe ) ) ) - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - MUR ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6484745386820782}, {"determining": "Max( ( ( CRS - Min( DDR ,CRS ) ) - PN ),Min( ( FirstVNF_Mem * PN ) ,Max( ( Const + Const ),ACS ) ) )", "choosing": "( ( MUM * ( RRSe - CS ) ) / ( Min( MLU ,RRSe ) / MUR ) )", "obj1": 0.2874015748031496, "obj2": 0.5988214964929385}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 0.5216535433070866, "obj2": 0.4023352424008532}], "2": [{"determining": "( ( BR / FirstVNF_Mem ) * ( DDR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server + Min( MRS ,( MDR * CRS ) ) ) ) ) )", "choosing": "( Min( MUC ,MUM ) - ( RRSe + ( Max( ( ( ( ( MUM + MUC ) + RCSe ) * ( MLU * MUM ) ) / Min( ( Min( RCSe ,RMSe ) / CS ) ,MUR ) ),MUR ) * Max( MUR,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( CRS,FirstVNF_RAM_Server ) + MDR ) + Max( PN,FirstVNF_RAM ) ) - Min( AMS ,DDR ) )", "choosing": "Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM_Server ,BR ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) )", "choosing": "Min( ( MUR - RCSe ) ,Max( ( DS - ( MUM * MUM ) ),( ( MUR - DS ) - RMSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8532069332313231}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( MUM + Min( MUM ,RMSe ) ) / ( RRSe - RMSe ) )", "obj1": 0.7401574803149606, "obj2": 0.22071918410881494}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 0.5216535433070866, "obj2": 0.4023352424008532}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "( Min( MUC ,MUM ) * ( RMSe * RMSe ) )", "obj1": 0.6023622047244095, "obj2": 0.2857875115241587}, {"determining": "( ( ( ( Max( ( ACS + ( ( CRS + MDR ) * BR ) ),BR ) / FirstVNF_Mem_Server ) - FirstVNF_Mem ) / FirstVNF_RAM_Server ) - ( ( AMS + BR ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + MUM ) + MUM ) / Min( RCSe ,CS ) ) / ( ( MUC / RMSe ) / Max( MUM,MLU ) ) ),( RMSe + Min( DS ,RMSe ) ) )", "obj1": 0.8385826771653543, "obj2": 0.1171175378896677}, {"determining": "( Max( Const,( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( Min( ( ( ( ( ( MUR * MUC ) / ( RRSe - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) ,Min( Max( MUM,( RRSe - RMSe ) ) ,RRSe ) ) ,( DS / MUM ) )", "obj1": 0.45866141732283466, "obj2": 0.4496066832853467}, {"determining": "( ( Const + DDR ) + ( MRS - ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "( Min( RMSe ,RMSe ) * ( MUR + DS ) )", "obj1": 0.9625984251968503, "obj2": 0.04624123735644682}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "Min( ( MUC * DS ) ,( RCSe + RMSe ) )", "obj1": 0.6515748031496063, "obj2": 0.2438635063150857}, {"determining": "( ( FirstVNF_Mem_Server - ( Max( Max( FirstVNF_Mem_Server,CRS ),( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) + Max( DDR,PN ) )", "choosing": "Max( ( MLU * RRSe ),( MUC - MUR ) )", "obj1": 0.8956692913385826, "obj2": 0.10825050983647563}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUC,RMSe ) / ( MUM * RCSe ) )", "obj1": 0.9094488188976378, "obj2": 0.0788975024822699}, {"determining": "( AMS * ( Const - MDR ) )", "choosing": "( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) )", "obj1": 0.6456692913385826, "obj2": 0.2527223140953185}, {"determining": "( ( ( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * BR ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.19488188976377951, "obj2": 0.6498782949021844}, {"determining": "( ( Max( Min( CRS ,BR ),( Const - ARS ) ) + ( ( FirstVNF_RAM / MRS ) + ( ( FirstVNF_CPU_Server + ( AMS + Max( FirstVNF_Mem,AMS ) ) ) / ACS ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( Max( DS,DS ) + Min( ( DS + Min( RMSe ,( ( MUR * ( RRSe * ( RRSe - RRSe ) ) ) / ( ( MUM + MLU ) * Min( MLU ,( RCSe + DS ) ) ) ) ) ) ,( DS * ( ( ( RCSe / Min( MUC ,MLU ) ) - MLU ) / ( RRSe * ( RRSe - RCSe ) ) ) ) ) )", "obj1": 0.9350393700787402, "obj2": 0.058610839148961896}, {"determining": "( ( ( BR / AMS ) + FirstVNF_RAM ) / ( Max( ( Max( MDR,( PN + FirstVNF_Mem_Server ) ) / PN ),Max( DDR,ACS ) ) - ( ( FirstVNF_Mem / FirstVNF_CPU ) * ( BR * RRS ) ) ) )", "choosing": "( ( RRSe - RMSe ) / ( ( CS * MLU ) + Min( RCSe ,RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0032502200492830094}, {"determining": "Min( ( ARS + Max( RRS,ARS ) ) ,( AMS - MRS ) )", "choosing": "Max( ( MLU * RCSe ),( ( MUM - MUM ) - DS ) )", "obj1": 0.17125984251968504, "obj2": 0.7454476966048986}, {"determining": "( ( FirstVNF_CPU / MDR ) - ( ( RRS + ( FirstVNF_Mem / ACS ) ) / ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MLU - Max( MUC,MUM ) ) ,( DS - RMSe ) )", "obj1": 0.18110236220472442, "obj2": 0.6962998461305476}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MLU + MUM ) / RMSe ) / ( RRSe - ( MLU - ( MLU + MUM ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.8296551977348127}, {"determining": "( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * Const ) - CRS ) / Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,MUR ) / ( ( ( ( ( ( ( RCSe - RRSe ) / RRSe ) + ( Min( DS ,RRSe ) / ( MLU + MLU ) ) ) - ( RRSe * ( ( MLU + MUM ) + ( MUM * MUM ) ) ) ) + ( ( Min( RRSe ,MLU ) - MUC ) * ( CS - ( MUM * RCSe ) ) ) ) / ( ( MUR - MUR ) + Max( Min( ( ( MUR / RCSe ) - ( DS * RRSe ) ) ,( Max( MUM,MUR ) * DS ) ),( MLU + ( MLU * Max( RCSe,RCSe ) ) ) ) ) ) - ( DS - ( MUM * MUM ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5566210205767296}, {"determining": "( ( ( Const * ( RRS / ( CRS * RRS ) ) ) * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( MUC / MUR ) / Max( MUM,RCSe ) )", "obj1": 0.13188976377952755, "obj2": 0.795460352205703}, {"determining": "( Max( ( Max( FirstVNF_RAM,( FirstVNF_Mem - Max( MDR,( ( Const - MDR ) * AMS ) ) ) ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - MUM ) / DS ) * MUM ) * CS ) + RRSe ) ,( Max( ( RRSe - RMSe ),RRSe ) * RRSe ) ) ,Max( ( ( MUM / RRSe ) + ( Max( Max( Max( MLU,( MUC - MUR ) ),( DS + CS ) ),DS ) / RMSe ) ),Min( MLU ,Min( MUR ,( Min( ( Max( RRSe,MUC ) + MUM ) ,MUM ) - MUR ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5244216595969938}, {"determining": "( ( ( Max( Const,DDR ) + ( DDR * FirstVNF_CPU_Server ) ) / Max( Max( PN,MDR ),( DDR - FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( MLU - Max( MLU,MUM ) ) / ( MUR + CS ) )", "obj1": 0.18700787401574803, "obj2": 0.691386505833862}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + ( RRS * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( MUM,MUR ) ,Min( DS ,RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.46515606314562985}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - PN ) / ( DDR - AMS ) ) ),( ( ( FirstVNF_CPU + FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( ( ( MLU * MUM ) / Min( RCSe ,MUR ) ) + ( ( MUM - RCSe ) - ( MLU - RRSe ) ) ) - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - MUR ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6484745386820782}, {"determining": "Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / RRSe ) ,Min( RRSe ,DS ) )", "obj1": 0.4251968503937008, "obj2": 0.47584271103263387}, {"determining": "( ( Min( FirstVNF_CPU ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( Min( BR ,RRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( RCSe * DS ) * Max( DS,MLU ) ) * ( Min( MUM ,MUC ) * ( MLU / Max( MUR,( MUR - DS ) ) ) ) ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "Max( ( ( ( ( DDR - AMS ) - ( Min( ( RRS * FirstVNF_CPU ) ,FirstVNF_CPU ) * Min( ACS ,FirstVNF_CPU ) ) ) - Min( FirstVNF_RAM_Server ,AMS ) ) + FirstVNF_RAM ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,MUC ) / Max( ( RCSe / Max( CS,MUC ) ),MUR ) )", "obj1": 0.24015748031496062, "obj2": 0.6384501702280795}, {"determining": "Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU - RRSe ) / ( RMSe + MUR ) ) - Max( MUR,Min( MLU ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5185160820127822}, {"determining": "Max( Max( FirstVNF_CPU,BR ),( FirstVNF_RAM_Server / Max( FirstVNF_CPU_Server,( FirstVNF_RAM * CRS ) ) ) )", "choosing": "Min( ( Max( ( RRSe / RMSe ),( RRSe - MLU ) ) / ( ( CS / CS ) / ( RRSe * MUM ) ) ) ,Min( ( Max( RRSe,MUC ) * ( MUM - ( Max( ( MUM - Max( RCSe,RRSe ) ),RRSe ) * Min( DS ,MUC ) ) ) ) ,( Min( MLU ,DS ) + ( MUM / CS ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7627645646681022}, {"determining": "Max( Max( ( Const * Const ),( FirstVNF_CPU_Server - ( FirstVNF_RAM * RRS ) ) ),Max( Max( MRS,ARS ),( Const + PN ) ) )", "choosing": "( Min( ( MUM - MUC ) ,( RMSe - RRSe ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7817968947036406}, {"determining": "( ( Const * ( RRS / ( CRS * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( RMSe - CS ) )", "obj1": 0.2933070866141732, "obj2": 0.5893595444424655}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - CRS ) )", "choosing": "( ( DS / Max( MLU,( MLU / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2440944881889764, "obj2": 0.616751590687186}, {"determining": "( ( BR * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( ( ( MUR - MUC ) - Max( MLU,MLU ) ) + Max( MUM,MUR ) ) / Max( MUM,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8471497170121559}, {"determining": "( ( ( ARS + ACS ) / ( FirstVNF_Mem_Server + CRS ) ) + Min( ( CRS + FirstVNF_CPU ) ,( ( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MLU / RRSe ) ,( MUM / ( MUR + CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5585803323322388}, {"determining": "Max( ( FirstVNF_RAM_Server + AMS ),( ACS - FirstVNF_RAM ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,MUR ) )", "obj1": 0.14960629921259844, "obj2": 0.7528428619761236}, {"determining": "Max( Min( RRS ,Min( RRS ,( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_RAM / Const ) ) + FirstVNF_CPU ) ) ),( FirstVNF_CPU - Const ) )", "choosing": "Max( Max( ( CS * ( Max( MLU,RMSe ) + CS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( ( Min( Min( MUM ,( CS - Min( MUC ,( RCSe / RRSe ) ) ) ) ,RRSe ) / ( RMSe + MUR ) ) ,Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "Max( ( MDR * Max( CRS,BR ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem / DDR ) ) )", "choosing": "Min( ( ( RRSe + RCSe ) + ( MUM + RCSe ) ) ,( Max( ( MLU + ( Min( MLU ,( ( MUC + RCSe ) + ( RMSe / MLU ) ) ) + DS ) ),MLU ) / ( MUC * RCSe ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7522641384316933}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( RRSe - ( ( RRSe / RMSe ) / ( MLU + MUM ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5973384822419828}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server / ( ARS + ( MRS / ( FirstVNF_RAM_Server + ( DDR + Const ) ) ) ) ) )", "choosing": "( ( RMSe / RMSe ) * ( MUR - CS ) )", "obj1": 0.3110236220472441, "obj2": 0.572948219603633}, {"determining": "Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / BR ),Min( Const ,RRS ) )", "choosing": "Min( Min( RMSe ,CS ) ,Max( RMSe,MUC ) )", "obj1": 0.2677165354330709, "obj2": 0.59849425052775}, {"determining": "Min( ACS ,Max( AMS,MRS ) )", "choosing": "Max( ( MLU - RCSe ),( RMSe - Min( MUC ,CS ) ) )", "obj1": 0.265748031496063, "obj2": 0.6027887585983073}, {"determining": "( Max( Const,( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( Min( ( ( ( ( ( MUR * MUC ) / ( RRSe - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) ,Min( Max( MUM,( RRSe - RMSe ) ) ,RRSe ) ) ,( DS / MUM ) )", "obj1": 0.39763779527559057, "obj2": 0.4996147608940644}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server / ( ARS + ( MRS / ( FirstVNF_RAM_Server + ( DDR + Const ) ) ) ) ) )", "choosing": "( ( RMSe / RMSe ) * ( MUR - CS ) )", "obj1": 0.3110236220472441, "obj2": 0.572948219603633}, {"determining": "( Max( Max( AMS,Const ),RRS ) / Max( MDR,FirstVNF_Mem ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( ( CS / ( RCSe * Min( CS ,( MUM / MUC ) ) ) ),( RRSe - RMSe ) ) * RRSe ) ) ,Min( DS ,MUM ) )", "obj1": 0.39960629921259844, "obj2": 0.49416526095759705}, {"determining": "Min( ( ( BR / PN ) - ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( RRSe - RCSe ) + ( ( MUM / Min( MUM ,CS ) ) + Min( ( Min( ( Max( Min( MUM ,MUR ),MUC ) - ( MUR - RCSe ) ) ,( RCSe / ( MUC * MUC ) ) ) + RMSe ) ,( DS / DS ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.6073050886384743}, {"determining": "Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( ( DDR + ( FirstVNF_Mem / ACS ) ) + Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) - FirstVNF_Mem_Server ),MDR ),( Const * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC * CS ) + MUR ) + RMSe ) - ( RCSe * ( RMSe + Max( MUM,MLU ) ) ) ) / ( RRSe + DS ) ) * RMSe ),( ( DS - RMSe ) / RMSe ) ) - Min( ( CS / RMSe ) ,Max( MUM,MUR ) ) )", "obj1": 0.25, "obj2": 0.6051348108622675}, {"determining": "Min( Min( MDR ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MLU + MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5902197602252255}, {"determining": "( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( Min( MUM ,RCSe ) * Min( RCSe ,DS ) )", "obj1": 0.6496062992125984, "obj2": 0.2447032310948041}, {"determining": "( ( Const * ( RRS / ( CRS * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( RMSe - CS ) )", "obj1": 0.31496062992125984, "obj2": 0.5645177702849765}, {"determining": "Max( ( FirstVNF_CPU + Const ),Min( Max( RRS,FirstVNF_CPU ) ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( DS - Max( MUC,DS ) ),( ( ( MLU / RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( Const * ( RRS / ( CRS * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( RMSe - CS ) )", "obj1": 0.31496062992125984, "obj2": 0.5645177702849765}, {"determining": "( Max( Const,( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( Min( ( ( ( ( ( MUR * MUC ) / ( RRSe - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) ,Min( Max( MUM,( RRSe - RMSe ) ) ,RRSe ) ) ,( DS / MUM ) )", "obj1": 0.39763779527559057, "obj2": 0.4996147608940644}, {"determining": "( ( ( BR / AMS ) + FirstVNF_RAM ) / ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( BR * RRS ) ) - Max( ( ARS / PN ),Max( DDR,ACS ) ) ) )", "choosing": "Max( ( ( ( CS + MUR ) * Max( MUM,MLU ) ) / ( ( MUM + MUM ) + Min( RCSe ,CS ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( BR / AMS ) + FirstVNF_RAM ) / ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( BR * RRS ) ) - Max( ( ARS / PN ),Max( DDR,ACS ) ) ) )", "choosing": "Max( ( ( ( CS + MUR ) * Max( MUM,MLU ) ) / ( ( MUM + MUM ) + Min( RCSe ,CS ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( ( DDR + ( FirstVNF_Mem / ACS ) ) + Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) - FirstVNF_Mem_Server ),MDR ),( Const * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC * CS ) + MUR ) + RMSe ) - ( RCSe * ( RMSe + Max( MUM,MLU ) ) ) ) / ( RRSe + DS ) ) * RMSe ),( ( DS - RMSe ) / RMSe ) ) - Min( ( CS / RMSe ) ,Max( MUM,MUR ) ) )", "obj1": 0.25, "obj2": 0.6051348108622675}, {"determining": "( ( MRS / FirstVNF_RAM ) - Min( FirstVNF_RAM ,PN ) )", "choosing": "( ( MUM - MUR ) / ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MRS + ( ( MDR - FirstVNF_CPU_Server ) * Max( FirstVNF_RAM,( FirstVNF_CPU / Max( BR,CRS ) ) ) ) ) ,FirstVNF_RAM_Server ) / Max( Min( FirstVNF_RAM ,ACS ),FirstVNF_RAM ) ) * Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( RMSe,Min( MLU ,MUM ) ) ) + ( MLU * Max( ( RRSe * MUC ),( ( ( RCSe * RRSe ) * RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MDR ,FirstVNF_Mem_Server ) ,( Const - FirstVNF_CPU ) )", "choosing": "( ( RRSe / RMSe ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ACS ,ACS ) ,( MRS / FirstVNF_Mem_Server ) ) * ( ( BR * DDR ) - ( ACS / Max( AMS,BR ) ) ) )", "choosing": "( ( Max( RCSe,DS ) / ( MUC * MUR ) ) / ( ( MUM * ( ( MUM - ( RRSe / DS ) ) * MLU ) ) + ( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,( ( MDR / MDR ) * FirstVNF_CPU ) ) / ( AMS / CRS ) ) )", "choosing": "Min( ( Max( RCSe,DS ) / Max( DS,CS ) ) ,( RMSe * Max( Min( MUM ,MLU ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( MRS,MDR ) ) )", "choosing": "Min( ( DS - RMSe ) ,Min( ( MUC - MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Max( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Max( ACS,PN ) ),( ( ACS - FirstVNF_CPU_Server ) * ( MRS + BR ) ) ) ,BR ),ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,RCSe ) * ( Min( Min( MUR ,CS ) ,MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( CS + MLU ),RRSe ) + RCSe ) / ( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( ( FirstVNF_RAM / AMS ) ,( FirstVNF_Mem_Server * Const ) ),Max( ( FirstVNF_Mem + MDR ),( MRS / ARS ) ) ) ,( Min( Max( PN,BR ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( Min( CS ,RMSe ),RMSe ) + RMSe ) - RMSe ) - ( ( ( DS + RCSe ) - ( CS + RMSe ) ) - Min( ( CS / RCSe ) ,( RRSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,Max( RRS,FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + ( FirstVNF_Mem / Min( CRS ,CRS ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) + Max( ACS,Min( PN ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( CS,( CS / MUM ) ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + RRS ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( CS + MLU ),( Min( RMSe ,MUC ) + ( MUM * DS ) ) ) + RCSe ) / ( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + Min( FirstVNF_Mem_Server ,( BR * MDR ) ) )", "choosing": "( ( Max( ( CS + MLU ),Max( CS,( RRSe - MUC ) ) ) + RCSe ) / ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + ( Const - FirstVNF_CPU ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( ( RRSe + ( DS + CS ) ) * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( Max( DS,Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) ) ) + ( RRSe + ( DS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,RRS ) * ( CRS - Const ) )", "choosing": "( ( MUC / RCSe ) - Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( ( Min( ACS ,AMS ) * ( Const - MDR ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( MLU / ( Min( MUC ,MUM ) * ( RMSe * RMSe ) ) ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( PN - BR ) ) / Max( Max( ( AMS / Const ),Const ),( CRS + AMS ) ) ) ,( MRS * ( Max( BR,ARS ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe / ( Min( MLU ,Max( ( Max( RCSe,DS ) + RRSe ),RMSe ) ) - RRSe ) ) * DS ) + Min( Min( ( DS / MUM ) ,RRSe ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + Min( FirstVNF_RAM_Server ,( CRS - ( PN + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) ,Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU - MUR ) / ( MUR + CS ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( Const - FirstVNF_RAM_Server ),( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( MRS - CRS ) * CRS ) ),( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) ) ) )", "choosing": "Min( ( Min( ( ( Min( CS ,RMSe ) - ( CS - Max( ( CS * DS ),MUR ) ) ) + DS ) ,( DS + ( ( ( MLU / Max( RCSe,MLU ) ) - Min( DS ,( RRSe / RRSe ) ) ) / MUC ) ) ) * Min( RCSe ,RMSe ) ) ,( Max( RMSe,RMSe ) - ( MUM + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Min( ACS ,BR ) + Const ) + ( CRS * ( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + FirstVNF_CPU ) / ( MRS - FirstVNF_CPU_Server ) ) ) ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * Max( MDR,MDR ) ) ) ) + ( ( ( MDR / MDR ) - ( AMS / PN ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( Min( CS ,MLU ),RRSe ) / RCSe ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,ACS ) / ACS ) + Max( DDR,PN ) ) ,( Const - FirstVNF_CPU ) )", "choosing": "( ( MUC / ( MLU - RRSe ) ) / ( MLU + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MDR ,FirstVNF_Mem_Server ) ,( Const - FirstVNF_CPU ) )", "choosing": "( ( RRSe / RMSe ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * BR ) / ( MDR * Min( Const ,( MRS - CRS ) ) ) )", "choosing": "( ( RRSe * ( RRSe - RMSe ) ) * Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Max( ( Min( FirstVNF_RAM ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) ),Max( Max( MRS,ARS ),( Const + PN ) ) ) / FirstVNF_Mem ) + ( CRS * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( ( ( DS + RCSe ) - ( RCSe - MUC ) ) + MLU ),RRSe ) + RCSe ) / ( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,FirstVNF_Mem ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( MUM + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),Max( MRS,MDR ) ) )", "choosing": "Min( Max( ( ( CS + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) ,Min( ( MUC - MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Max( ACS,FirstVNF_Mem ) ) - ( ( ( ( ( FirstVNF_RAM + RRS ) - MRS ) - ( Max( ( RRS - ACS ),RRS ) - FirstVNF_RAM ) ) * ( ARS + ( ARS + Min( ( Const + FirstVNF_CPU_Server ) ,( Const + PN ) ) ) ) ) - RRS ) )", "choosing": "( ( ( MLU * ( MUR - ( ( MUR / RRSe ) + MUC ) ) ) - RMSe ) * Min( Min( RCSe ,RMSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Max( ACS,FirstVNF_Mem ) ) - ( ( ( ( ( FirstVNF_RAM + RRS ) - MRS ) - ( Max( ( RRS - ACS ),RRS ) - FirstVNF_RAM ) ) * ( ARS + ( ARS + Min( ( Const + FirstVNF_CPU_Server ) ,( Const + PN ) ) ) ) ) - RRS ) )", "choosing": "( ( ( MLU * ( MUR - ( ( MUR / RRSe ) + MUC ) ) ) - RMSe ) * Min( Min( RCSe ,RMSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( ( FirstVNF_RAM / AMS ) ,AMS ),Max( ( FirstVNF_Mem + MDR ),( MRS / ARS ) ) ) ,( Min( Max( PN,BR ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( CS,RMSe ) * ( RRSe - MUM ) ) / Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - ( ( ( DS + RCSe ) - ( CS - RMSe ) ) - Min( ( CS / RCSe ) ,( RRSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( ( FirstVNF_RAM / AMS ) ,( PN * FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem + MDR ),( MRS / ARS ) ) ) ,( Min( Max( PN,BR ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC * DS ) ,( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Const - FirstVNF_CPU ) )", "choosing": "( ( RRSe / RMSe ) / ( ( DS - MUR ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_RAM ) + ( ( ( MDR / MDR ) + ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( CS + MLU ),( MLU / ( Max( Min( Min( RCSe ,CS ) ,RMSe ),( Min( DS ,RRSe ) - MUC ) ) * RCSe ) ) ) + RCSe ) / Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * CRS ) ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_Mem + CRS ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / Min( FirstVNF_RAM ,( FirstVNF_CPU - ( BR / AMS ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( MLU / MUC ) + CS ),RRSe ) + ( DS / DS ) ) / ( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,BR ) / ( FirstVNF_Mem / DDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( RRSe + RCSe ) + ( CS + RCSe ) ) ,( ( MUR + RCSe ) / ( MUC * RCSe ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Max( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Max( ACS,PN ) ),( ( ACS - FirstVNF_CPU_Server ) * ( MRS + BR ) ) ) ,BR ),ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,RCSe ) * ( Min( Min( MUR ,CS ) ,MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Max( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Max( ACS,PN ) ),( ( ACS - FirstVNF_CPU_Server ) * ( MRS + BR ) ) ) ,BR ),ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,RCSe ) * ( Min( Min( MUR ,CS ) ,MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + ( Min( PN ,MDR ) + ( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RRSe ,MLU ),( RRSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( Max( ACS,( CRS * AMS ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + ( Min( PN ,MDR ) + BR ) )", "choosing": "( Min( ( Min( RCSe ,( Min( ( DS / ( DS + MUC ) ) ,RMSe ) * MUC ) ) / ( ( Max( CS,DS ) / MLU ) + ( ( CS * RCSe ) + ( MUM + ( MUC / RCSe ) ) ) ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MDR ,FirstVNF_Mem_Server ) ,( Const - FirstVNF_CPU ) )", "choosing": "( ( RRSe / RMSe ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + ( Min( PN ,MDR ) + BR ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + ( FirstVNF_Mem / Min( CRS ,CRS ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) + Max( ACS,Min( PN ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( CS,( CS / MUM ) ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( MRS - ( FirstVNF_CPU_Server * MDR ) ) / ( Min( BR ,RRS ) + FirstVNF_CPU_Server ) )", "choosing": "( MUR / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) * ( DDR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server + Min( MRS ,( MDR * CRS ) ) ) ) ) )", "choosing": "( Min( MUC ,MUM ) - ( RRSe + ( Max( ( ( ( ( MUM + MUC ) + RCSe ) * ( MLU * MUM ) ) / Min( ( Min( RCSe ,RMSe ) / CS ) ,MUR ) ),MUR ) * Max( MUR,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM_Server ,BR ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) )", "choosing": "Min( ( MUR - RCSe ) ,Max( ( DS - ( MUM * MUM ) ),( ( MUR - DS ) - RMSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8532069332313231}, {"determining": "( ( ( Min( MDR ,FirstVNF_RAM_Server ) - DDR ) * RRS ) * ( CRS - ( ( ( MRS + Max( ( CRS + Min( ARS ,ARS ) ),FirstVNF_CPU ) ) * ARS ) / ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS + RRSe ) - ( MUM * ( MLU / MUC ) ) )", "obj1": 0.4862204724409449, "obj2": 0.3861464196584804}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( CS + MLU ),RRSe ) * Min( RCSe ,RMSe ) ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.7637795275590551, "obj2": 0.15974720448727328}, {"determining": "( Max( Const,( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( Min( ( ( ( ( ( MUR * MUC ) / ( RRSe - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) ,Min( Max( MUM,( RRSe - RMSe ) ) ,RRSe ) ) ,( DS / MUM ) )", "obj1": 0.45866141732283466, "obj2": 0.4496066832853467}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( MUM + Min( MUM ,RMSe ) ) / ( ( Max( DS,RCSe ) / Max( DS,CS ) ) - RMSe ) )", "obj1": 0.8188976377952756, "obj2": 0.13208684274357707}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - PN ) / ( DDR - AMS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( MUM - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - MUR ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.5748031496062992, "obj2": 0.30706941869628945}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( FirstVNF_RAM,PN ) ) * FirstVNF_Mem_Server ) + Const ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / ( DS * ( RRSe + RRSe ) ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - ( MUR + ( Max( Max( MUM,( CS / MUC ) ),MUC ) * CS ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.23614852564168004}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "( Min( MUC ,MUM ) * ( RMSe * RMSe ) )", "obj1": 0.6023622047244095, "obj2": 0.2857875115241587}, {"determining": "( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( ( Max( ( CS + MLU ),( Min( RMSe ,MUC ) + ( MUM * DS ) ) ) + RCSe ) / ( CS - RRSe ) )", "obj1": 0.547244094488189, "obj2": 0.3721286021634817}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( MUM + Min( MUM ,RMSe ) ) / ( RRSe - RMSe ) )", "obj1": 0.7401574803149606, "obj2": 0.22053412976234285}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Min( BR ,Min( ( DDR / FirstVNF_CPU_Server ) ,CRS ) ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / Max( DS,MUC ) ) - ( ( ( Max( ( RRSe * ( RCSe * MUR ) ),MUM ) + ( MUM - RCSe ) ) - RRSe ) - ( ( Max( RMSe,MUR ) * ( MLU * Min( MUR ,RRSe ) ) ) / DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6471870999782813}, {"determining": "( ( Const - MDR ) / ( MRS + ( RRS * PN ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * Max( MUM,( RRSe / ( MUC - ( DS / MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.6259842519685039, "obj2": 0.2479955003552559}, {"determining": "( ( Max( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + ( FirstVNF_Mem / Min( CRS ,CRS ) ) ) * FirstVNF_CPU_Server ) ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * RCSe ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 0.7618110236220472, "obj2": 0.21143125823196546}, {"determining": "( ( ( ( Max( ( ACS + ( ( CRS + MDR ) * BR ) ),BR ) / FirstVNF_Mem_Server ) - FirstVNF_Mem ) / FirstVNF_RAM_Server ) - ( ( AMS + BR ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + MUM ) + MUM ) / Min( RCSe ,CS ) ) / ( ( MUC / RMSe ) / Max( MUM,MLU ) ) ),( RMSe + Min( DS ,RMSe ) ) )", "obj1": 0.8385826771653543, "obj2": 0.1171175378896677}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUC,RMSe ) / ( MUM * RCSe ) )", "obj1": 0.9094488188976378, "obj2": 0.0788975024822699}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MLU + MUM ) / RMSe ) / ( RRSe - ( MLU - ( Max( ( ( CS + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + MUM ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6313921734006921}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( MLU / MLU ) * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.1141732283464567, "obj2": 0.8096378057377123}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "( ( Max( ( CS + MLU ),( MLU / ( Max( Min( Min( RCSe ,CS ) ,RMSe ),( Min( DS ,RRSe ) - MUC ) ) * RCSe ) ) ) + RCSe ) / Max( RRSe,RMSe ) )", "obj1": 0.5393700787401575, "obj2": 0.3791948127348077}, {"determining": "( ( FirstVNF_Mem_Server - ( Max( Max( FirstVNF_Mem_Server,( Min( MDR ,( CRS * FirstVNF_RAM ) ) / ACS ) ),( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) ) / ( MDR / ARS ) ) ) + Max( DDR,PN ) )", "choosing": "Max( MLU,( ( Max( MUC,MUR ) + RMSe ) - MUR ) )", "obj1": 0.8838582677165354, "obj2": 0.11386857905257404}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "( ( FirstVNF_Mem_Server - ( Max( Max( FirstVNF_Mem_Server,CRS ),( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) + Max( DDR,PN ) )", "choosing": "Max( ( MLU * RRSe ),( MUC - MUR ) )", "obj1": 0.8956692913385826, "obj2": 0.10825050983647563}, {"determining": "( ( ( BR / AMS ) + FirstVNF_RAM ) / ( Max( ( Max( MDR,( PN + FirstVNF_Mem_Server ) ) / PN ),Max( DDR,ACS ) ) - ( ( FirstVNF_Mem / FirstVNF_CPU ) * ( BR * RRS ) ) ) )", "choosing": "( ( RRSe - RMSe ) / ( ( CS * MLU ) + Min( RCSe ,RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0032502200492830094}, {"determining": "( ( Max( Min( CRS ,BR ),( Const - ARS ) ) + ( ( AMS / MRS ) + ( PN / MRS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( Max( DS,DS ) + ( RMSe + RMSe ) )", "obj1": 0.9665354330708661, "obj2": 0.02889296305932687}, {"determining": "( ( BR / FirstVNF_Mem ) * ( DDR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server + ( BR * ( BR - CRS ) ) ) ) ) )", "choosing": "( Min( CS ,MUM ) - ( ( ( MUR - MUC ) - Max( MLU,MLU ) ) + ( ( MLU - MUC ) + ( MUR * MUM ) ) ) )", "obj1": 0.9507874015748031, "obj2": 0.05447405923600046}, {"determining": "Max( ( FirstVNF_RAM_Server + AMS ),( ACS - FirstVNF_RAM ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6905222223050884}, {"determining": "Max( ( FirstVNF_RAM_Server + AMS ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) )", "choosing": "( ( MLU / MUC ) / Max( ( MLU - Max( MLU,MUM ) ),MUR ) )", "obj1": 0.14960629921259844, "obj2": 0.7519890145983883}, {"determining": "( ( Const * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,DS )", "obj1": 0.4251968503937008, "obj2": 0.47127041696024696}, {"determining": "( Min( Max( Const,Min( Max( PN,Const ) ,ACS ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( ( ( ( ( MUR / ( RRSe - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) * ( RMSe * RMSe ) )", "obj1": 0.5846456692913385, "obj2": 0.3059871159086649}, {"determining": "Max( ( FirstVNF_RAM_Server + AMS ),Min( Min( MDR ,FirstVNF_Mem_Server ) ,( Const - FirstVNF_CPU ) ) )", "choosing": "( ( MLU / MUC ) / Max( ( ( RRSe / RMSe ) / ( MLU + MUM ) ),MUR ) )", "obj1": 0.17519685039370078, "obj2": 0.7144812085215825}, {"determining": "( Max( ( Max( FirstVNF_RAM,( FirstVNF_Mem - Max( MDR,( ( Const - MDR ) * AMS ) ) ) ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - MUM ) / DS ) * MUM ) * CS ) + RRSe ) ,( Max( ( RRSe - RMSe ),RRSe ) * RRSe ) ) ,Max( ( ( MUM / RRSe ) + ( Max( Max( Max( MLU,( MUC - MUR ) ),( DS + CS ) ),DS ) / RMSe ) ),Min( MLU ,Min( MUR ,( Min( ( Max( RRSe,MUC ) + MUM ) ,MUM ) - MUR ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5244216595969938}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "Min( ( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.655511811023622, "obj2": 0.23994327818221015}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( ( Min( Min( FirstVNF_RAM ,Min( Max( Const,ARS ) ,MRS ) ) ,MRS ) - CRS ) - ( AMS / CRS ) ) + FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RRSe ,MLU ),( ( Min( CS ,( ( MUC - ( Max( RMSe,CS ) / DS ) ) - MUR ) ) - ( RCSe - MUC ) ) / RCSe ) )", "obj1": 0.3484251968503937, "obj2": 0.5491232861485399}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + ( RRS * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( MUM,MUR ) ,Min( DS ,RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.46515606314562985}, {"determining": "Max( Max( ( Const * Const ),( FirstVNF_CPU_Server - ( FirstVNF_RAM * RRS ) ) ),Max( Max( MRS,ARS ),( Const + PN ) ) )", "choosing": "( Min( ( MUM - MUC ) ,( RMSe - RRSe ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7817968947036406}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( MLU / MUC ) / Max( MUM,MLU ) )", "obj1": 0.9606299212598425, "obj2": 0.0293433604429159}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * ( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) ) ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUC,RMSe ) / CS )", "obj1": 0.9251968503937008, "obj2": 0.06271000947283427}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * ( Max( ACS,FirstVNF_Mem ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( MLU * RRSe ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6199961231404293}, {"determining": "( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * Const ) - CRS ) / Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,MUR ) / ( ( ( ( ( ( ( RCSe - RRSe ) / RRSe ) + ( Min( DS ,RRSe ) / ( MLU + MLU ) ) ) - ( RRSe * ( ( MLU + MUM ) + ( MUM * MUM ) ) ) ) + ( ( Min( RRSe ,MLU ) - MUC ) * ( CS - ( MUM * RCSe ) ) ) ) / ( ( MUR - MUR ) + Max( Min( ( ( MUR / RCSe ) - ( DS * RRSe ) ) ,( Max( MUM,MUR ) * DS ) ),( MLU + ( MLU * Max( RCSe,RCSe ) ) ) ) ) ) - ( DS - ( MUM * MUM ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5566210205767296}, {"determining": "( ( FirstVNF_CPU / MDR ) - ( ( RRS + ( FirstVNF_Mem / ACS ) ) / ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MLU - Max( MUC,MUM ) ) ,( DS - RMSe ) )", "obj1": 0.18110236220472442, "obj2": 0.6962998461305476}, {"determining": "( ( ( ARS + ACS ) / ( FirstVNF_Mem_Server + CRS ) ) + Min( ( CRS + FirstVNF_CPU ) ,( ( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MLU / RRSe ) ,( MUM / ( MUR + CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5585803323322388}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MDR + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - ( Min( MUR ,DS ) * ( MUM * MUR ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.5044573648504532}, {"determining": "Max( Max( FirstVNF_CPU,BR ),( FirstVNF_RAM_Server / Max( FirstVNF_CPU_Server,( FirstVNF_RAM * CRS ) ) ) )", "choosing": "Min( ( Max( ( RRSe / RMSe ),( RRSe - MLU ) ) / ( ( CS / CS ) / ( RRSe * MUM ) ) ) ,Min( ( Max( RRSe,MUC ) * ( MUM - ( Max( ( MUM - Max( RCSe,RRSe ) ),RRSe ) * Min( DS ,MUC ) ) ) ) ,( Min( MLU ,DS ) + ( MUM / CS ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7627645646681022}, {"determining": "Max( ( Const - FirstVNF_CPU ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * MRS ) - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( ( CS * DS ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( Min( RCSe ,RRSe ) - RCSe ) - Max( ( MLU + MUM ),Max( MUR,MUR ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( Min( MUM ,RCSe ) * Min( RCSe ,DS ) )", "obj1": 0.6496062992125984, "obj2": 0.2447032310948041}, {"determining": "Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / BR ),Min( Const ,RRS ) )", "choosing": "Min( Min( RMSe ,CS ) ,Max( RMSe,MUC ) )", "obj1": 0.2677165354330709, "obj2": 0.59849425052775}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( RRSe - ( ( RRSe / RMSe ) / ( MLU + MUM ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5973384822419828}, {"determining": "( ( Min( FirstVNF_CPU ,Max( CRS,( MRS * CRS ) ) ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( DDR + CRS ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( ( MUR * MLU ),CS ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( DS,DS ) ) ) ,MUM ) - ( ( ( MUC - ( DS - MUR ) ) + MUM ) + RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.7981880809718809}, {"determining": "( ( Max( Min( CRS ,BR ),( Const - ARS ) ) + ( ( FirstVNF_RAM / MRS ) + ( ( FirstVNF_CPU_Server + ( AMS + Max( FirstVNF_Mem,AMS ) ) ) / ACS ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( Max( DS,DS ) + Min( ( DS + Min( RMSe ,( ( MUR * ( RRSe * ( RRSe - RRSe ) ) ) / ( ( MUM + MLU ) * Min( MLU ,( RCSe + DS ) ) ) ) ) ) ,( DS * ( ( ( RCSe / Min( MUC ,MLU ) ) - MLU ) / ( RRSe * ( RRSe - RCSe ) ) ) ) ) )", "obj1": 0.9350393700787402, "obj2": 0.058610839148961896}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( RRS + FirstVNF_RAM ) ),( Max( Max( ( Min( Max( Max( FirstVNF_CPU,FirstVNF_RAM ),PN ) ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( ( ( MUR * ( RRSe - RCSe ) ) - ( Min( MLU ,( RMSe * DS ) ) - MUM ) ) / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( RRSe + MUR ) ) )", "obj1": 0.2618110236220472, "obj2": 0.6024752910926007}, {"determining": "( Max( Const,( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( Min( ( ( ( ( ( MUR * MUC ) / ( RRSe - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) ,Min( Max( MUM,( RRSe - RMSe ) ) ,RRSe ) ) ,( DS / MUM ) )", "obj1": 0.39763779527559057, "obj2": 0.4996147608940644}, {"determining": "( ( ( Const * ( RRS / ( CRS * RRS ) ) ) * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( MUC / MUR ) / Max( MUM,RCSe ) )", "obj1": 0.13188976377952755, "obj2": 0.795460352205703}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - CRS ) )", "choosing": "( ( DS / Max( MLU,( MLU / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2440944881889764, "obj2": 0.616751590687186}, {"determining": "( ( Const * ( RRS / ( CRS * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( RMSe - CS ) )", "obj1": 0.2933070866141732, "obj2": 0.5893595444424655}, {"determining": "( ( Const * ( RRS / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + MDR ) ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( ( RRSe / RCSe ) / MUR ) ,( RMSe - CS ) )", "obj1": 0.2992125984251969, "obj2": 0.582513596862787}, {"determining": "Min( ( ARS + Max( RRS,( DDR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) ,( AMS - MRS ) )", "choosing": "Max( ( MLU - MUC ),( ( MUM - MUM ) - DS ) )", "obj1": 0.14763779527559054, "obj2": 0.7615379205409333}, {"determining": "( Max( Max( AMS,Const ),RRS ) / Max( MDR,FirstVNF_Mem ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( ( CS / ( RCSe * Min( CS ,( MUM / MUC ) ) ) ),( RRSe - RMSe ) ) * RRSe ) ) ,Min( DS ,MUM ) )", "obj1": 0.39960629921259844, "obj2": 0.49416526095759705}, {"determining": "Min( ( ( BR / PN ) - ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( RRSe - RCSe ) + ( ( MUM / Min( MUM ,CS ) ) + Min( ( Min( ( Max( Min( MUM ,MUR ),MUC ) - ( MUR - RCSe ) ) ,( RCSe / ( MUC * MUC ) ) ) + RMSe ) ,( DS / DS ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.6073050886384743}, {"determining": "( Max( BR,Min( FirstVNF_Mem ,( ( DDR + ACS ) * ( FirstVNF_Mem_Server + Min( Const ,( ( DDR + Const ) - ( CRS - MDR ) ) ) ) ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) ) * MRS ) ),( Min( Min( FirstVNF_CPU ,PN ) ,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( ( ( DS + ( RMSe * Min( MLU ,MUM ) ) ) - RMSe ),RRSe ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.3051181102362205, "obj2": 0.5768640659113203}, {"determining": "Max( Min( RRS ,Min( RRS ,( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_RAM / Const ) ) + FirstVNF_CPU ) ) ),( FirstVNF_CPU - Const ) )", "choosing": "Max( Max( ( CS * ( Max( MLU,RMSe ) + CS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( ( Min( Min( MUM ,( CS - Min( MUC ,( RCSe / RRSe ) ) ) ) ,RRSe ) / ( RMSe + MUR ) ) ,Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.5135198387086665}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + MDR ) )", "choosing": "Min( ( RRSe / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.4330708661417323, "obj2": 0.46749795962510454}, {"determining": "Min( Min( MDR ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MLU + MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5902197602252255}, {"determining": "Min( Min( MDR ,FirstVNF_Mem_Server ) ,( RRS / ( CRS * RRS ) ) )", "choosing": "( ( ( RMSe - CS ) / ( RRSe - DS ) ) / ( MLU + MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5693196777141281}, {"determining": "( ( ( Max( Const,DDR ) + ( DDR * FirstVNF_CPU_Server ) ) / Max( Max( PN,MDR ),( DDR - FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( MLU - Max( MLU,MUM ) ) / ( MUR + CS ) )", "obj1": 0.18700787401574803, "obj2": 0.691386505833862}, {"determining": "( ( Min( FirstVNF_RAM_Server ,ACS ) - ( ( MDR + FirstVNF_CPU_Server ) - AMS ) ) / ( ( FirstVNF_RAM + MDR ) / ( FirstVNF_CPU + PN ) ) )", "choosing": "( ( Min( RCSe ,Max( MLU,CS ) ) * ( MUM * MUR ) ) / ( Min( ( ( Min( MLU ,( MUM - RMSe ) ) / MUM ) / Max( ( RRSe + ( RRSe - CS ) ),( MUR * CS ) ) ) ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.37598425196850394, "obj2": 0.5118706647370208}, {"determining": "Min( Min( MDR ,FirstVNF_Mem_Server ) ,( Const - MDR ) )", "choosing": "( ( Min( MUM ,MUR ) / ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) ) / ( MLU + MUM ) )", "obj1": 0.5433070866141733, "obj2": 0.3737955975821802}, {"determining": "Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU - RRSe ) / ( RMSe + MUR ) ) - Max( MUR,Min( MLU ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5185160820127822}, {"determining": "( ( Const * ( RRS / ( FirstVNF_CPU * RRS ) ) ) / ( ( Max( ( ( CRS / FirstVNF_RAM ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) ) * DDR ) )", "choosing": "Min( Min( ( DS * CS ) ,MLU ) ,Min( ( MUM * RCSe ) ,CS ) )", "obj1": 0.9291338582677166, "obj2": 0.05881336621363032}, {"determining": "Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( ( DDR + ( FirstVNF_Mem / ACS ) ) + Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) - FirstVNF_Mem_Server ),MDR ),( Const * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC * CS ) + MUR ) + RMSe ) - ( RCSe * ( RMSe + Max( MUM,MLU ) ) ) ) / ( RRSe + DS ) ) * RMSe ),( ( DS - RMSe ) / RMSe ) ) - Min( ( CS / RMSe ) ,Max( MUM,MUR ) ) )", "obj1": 0.25, "obj2": 0.6051348108622675}, {"determining": "Max( ( FirstVNF_CPU - Const ),FirstVNF_Mem_Server )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5185160820127822}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,Max( RRS,FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) + ( ( MUM / ( MUR + CS ) ) - MLU ) )", "obj1": 0.30118110236220474, "obj2": 0.5783938845969624}, {"determining": "Min( Min( FirstVNF_Mem_Server ,DDR ) ,( ( RRS - BR ) - FirstVNF_Mem ) )", "choosing": "Min( ( MUR - MUR ) ,( Min( RCSe ,MUM ) + Max( CS,DS ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5671968333643922}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "Min( ( MUC * DS ) ,( RCSe + RMSe ) )", "obj1": 0.6515748031496063, "obj2": 0.2438635063150857}, {"determining": "( ( Const * ( RRS / ( CRS * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( RMSe - CS ) )", "obj1": 0.31496062992125984, "obj2": 0.5645177702849765}, {"determining": "( ( ( BR / AMS ) + FirstVNF_RAM ) / ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( BR * Max( BR,Min( Max( PN,Const ) ,ACS ) ) ) ) - Max( ( ARS / PN ),Max( DDR,ACS ) ) ) )", "choosing": "( ( MUM + Min( MUM ,RMSe ) ) / ( RRSe - Max( MLU,( RRSe - RMSe ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006712413989081544}, {"determining": "( ( ( Const * ( RRS / Min( FirstVNF_Mem_Server ,Min( MDR ,FirstVNF_Mem_Server ) ) ) ) * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( MUC / MUR ) / Max( MUM,Min( MUM ,MUR ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7976340611682905}, {"determining": "( ( Const * ( RRS / ( CRS * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( RMSe - CS ) )", "obj1": 0.31496062992125984, "obj2": 0.5645177702849765}, {"determining": "( Max( Const,( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( Min( ( ( ( ( ( MUR * MUC ) / ( RRSe - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) ,Min( Max( MUM,( RRSe - RMSe ) ) ,RRSe ) ) ,( DS / MUM ) )", "obj1": 0.39763779527559057, "obj2": 0.4996147608940644}, {"determining": "Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( ( DDR + ( FirstVNF_Mem / ACS ) ) + Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) - FirstVNF_Mem_Server ),MDR ),( Const * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC * CS ) + MUR ) + RMSe ) - ( RCSe * ( RMSe + Max( MUM,MLU ) ) ) ) / ( RRSe + DS ) ) * RMSe ),( ( DS - RMSe ) / RMSe ) ) - Min( ( CS / RMSe ) ,Max( MUM,MUR ) ) )", "obj1": 0.25, "obj2": 0.6051348108622675}, {"determining": "( ( ( Max( CRS,FirstVNF_RAM_Server ) + MDR ) + Max( PN,FirstVNF_RAM ) ) - Min( AMS ,DDR ) )", "choosing": "Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_RAM ) - Min( FirstVNF_RAM ,PN ) )", "choosing": "( ( MUM - MUR ) / ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MRS + ( ( MDR - FirstVNF_CPU_Server ) * Max( FirstVNF_RAM,( FirstVNF_CPU / Max( BR,CRS ) ) ) ) ) ,FirstVNF_RAM_Server ) / Max( Min( FirstVNF_RAM ,ACS ),FirstVNF_RAM ) ) * Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( RMSe,Min( MLU ,MUM ) ) ) + ( MLU * Max( ( RRSe * MUC ),( ( ( RCSe * RRSe ) * RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MDR ,FirstVNF_Mem_Server ) ,( Const - FirstVNF_CPU ) )", "choosing": "( ( RRSe / RMSe ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ACS ,ACS ) ,( MRS / FirstVNF_Mem_Server ) ) * ( ( BR * DDR ) - ( ACS / Max( AMS,BR ) ) ) )", "choosing": "( ( Max( RCSe,DS ) / ( MUC * MUR ) ) / ( ( MUM * ( ( MUM - ( RRSe / DS ) ) * MLU ) ) + ( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,( ( MDR / MDR ) * FirstVNF_CPU ) ) / ( AMS / CRS ) ) )", "choosing": "Min( ( Max( RCSe,DS ) / Max( DS,CS ) ) ,( RMSe * Max( Min( MUM ,MLU ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( MRS,MDR ) ) )", "choosing": "Min( ( DS - RMSe ) ,Min( ( MUC - MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Max( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Max( ACS,PN ) ),( ( ACS - FirstVNF_CPU_Server ) * ( MRS + BR ) ) ) ,BR ),ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,RCSe ) * ( Min( Min( MUR ,CS ) ,MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( CS + MLU ),RRSe ) + RCSe ) / ( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( ( FirstVNF_RAM / AMS ) ,( FirstVNF_Mem_Server * Const ) ),Max( ( FirstVNF_Mem + MDR ),( MRS / ARS ) ) ) ,( Min( Max( PN,BR ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( Min( CS ,RMSe ),RMSe ) + RMSe ) - RMSe ) - ( ( ( DS + RCSe ) - ( CS + RMSe ) ) - Min( ( CS / RCSe ) ,( RRSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,Max( RRS,FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + ( FirstVNF_Mem / Min( CRS ,CRS ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) + Max( ACS,Min( PN ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( CS,( CS / MUM ) ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + RRS ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( CS + MLU ),( Min( RMSe ,MUC ) + ( MUM * DS ) ) ) + RCSe ) / ( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + Min( FirstVNF_Mem_Server ,( BR * MDR ) ) )", "choosing": "( ( Max( ( CS + MLU ),Max( CS,( RRSe - MUC ) ) ) + RCSe ) / ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + ( Const - FirstVNF_CPU ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( ( RRSe + ( DS + CS ) ) * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( Max( DS,Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) ) ) + ( RRSe + ( DS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,RRS ) * ( CRS - Const ) )", "choosing": "( ( MUC / RCSe ) - Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( ( Min( ACS ,AMS ) * ( Const - MDR ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( MLU / ( Min( MUC ,MUM ) * ( RMSe * RMSe ) ) ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( PN - BR ) ) / Max( Max( ( AMS / Const ),Const ),( CRS + AMS ) ) ) ,( MRS * ( Max( BR,ARS ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe / ( Min( MLU ,Max( ( Max( RCSe,DS ) + RRSe ),RMSe ) ) - RRSe ) ) * DS ) + Min( Min( ( DS / MUM ) ,RRSe ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( Min( FirstVNF_Mem_Server ,DDR ) ,( ( RRS - BR ) - FirstVNF_Mem ) )", "choosing": "Min( ( MUR - MUR ) ,( Min( RCSe ,MUM ) + Max( CS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_CPU_Server * MDR ) ) / ( Min( BR ,RRS ) + FirstVNF_CPU_Server ) )", "choosing": "( MUR / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM_Server ,BR ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) )", "choosing": "Min( ( MUR - RCSe ) ,Max( ( DS - ( MUM * MUM ) ),( ( MUR - DS ) - RMSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8532069332313231}, {"determining": "( ( ( Min( MDR ,FirstVNF_RAM_Server ) - DDR ) * RRS ) * ( CRS - ( ( ( MRS + Max( ( CRS + Min( ARS ,ARS ) ),FirstVNF_CPU ) ) * ARS ) / ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS + RRSe ) - ( MUM * ( MLU / MUC ) ) )", "obj1": 0.4862204724409449, "obj2": 0.3861464196584804}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( CS + MLU ),RRSe ) * Min( RCSe ,RMSe ) ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.7637795275590551, "obj2": 0.15974720448727328}, {"determining": "( Max( Const,( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( Min( ( ( ( ( ( MUR * MUC ) / ( RRSe - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) ,Min( Max( MUM,( RRSe - RMSe ) ) ,RRSe ) ) ,( DS / MUM ) )", "obj1": 0.45866141732283466, "obj2": 0.4496066832853467}, {"determining": "( Min( ACS ,AMS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Min( ( MUC * DS ) ,( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) )", "obj1": 0.8937007874015748, "obj2": 0.042948950142552185}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) ) / ( DDR - AMS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( MUM - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - ( ( MLU / MLU ) * DS ) ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.5275590551181102, "obj2": 0.3591187179111727}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( Max( MUC,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),Max( MUR,MUR ) ) )", "obj1": 0.812992125984252, "obj2": 0.1268630654711498}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - ( CS + MLU ) ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8818897637795275, "obj2": 0.07541621968183067}, {"determining": "( Min( Max( Const,Min( Max( PN,Const ) ,ACS ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( ( ( ( ( MUR / ( RRSe - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) * ( RMSe * RMSe ) )", "obj1": 0.5610236220472441, "obj2": 0.33755697873856255}, {"determining": "( ( ( MRS + CRS ) - ( ( Max( ( Max( PN,( MDR / MRS ) ) * DDR ),Max( ( ( MRS - CRS ) * ( FirstVNF_Mem * Const ) ),ACS ) ) + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem + ( ( ( ( ( Max( DDR,FirstVNF_CPU ) - FirstVNF_Mem_Server ) - ( Max( AMS,ACS ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) / FirstVNF_Mem ) * AMS ) * RRS ) ) )", "choosing": "( ( MLU / MUM ) / Max( Max( ( ( ( DS / Max( CS,RCSe ) ) + MLU ) + CS ),MUC ),MLU ) )", "obj1": 0.9606299212598425, "obj2": 0.02924989052785105}, {"determining": "( ( Min( ( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( ( ( ( MUM + MUM ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.844488188976378, "obj2": 0.10607590673727786}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - PN ) / ( DDR - AMS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( MUM - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - MUR ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.5748031496062992, "obj2": 0.30706941869628945}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( MUM + Min( MUM ,RMSe ) ) / ( RRSe - RMSe ) )", "obj1": 0.7401574803149606, "obj2": 0.22053412976234285}, {"determining": "( ( Max( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + ( FirstVNF_Mem / Min( CRS ,CRS ) ) ) * FirstVNF_CPU_Server ) ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( MLU / MUC ) / Max( ( ( RRSe / RMSe ) / ( MLU + MUM ) ),MUR ) )", "obj1": 0.7086614173228346, "obj2": 0.23338016168720427}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "( ( Max( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + ( FirstVNF_Mem / Min( CRS ,CRS ) ) ) * FirstVNF_CPU_Server ) ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * RCSe ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 0.7618110236220472, "obj2": 0.21143125823196546}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( FirstVNF_RAM,PN ) ) * FirstVNF_Mem_Server ) + Const ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / ( DS * ( RRSe + RRSe ) ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - ( MUR + ( Max( Max( MUM,( CS / MUC ) ),MUC ) * CS ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.23614852564168004}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Min( BR ,Min( ( DDR / FirstVNF_CPU_Server ) ,CRS ) ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / Max( DS,MUC ) ) - ( ( ( Max( ( RRSe * ( RCSe * MUR ) ),MUM ) + ( MUM - RCSe ) ) - RRSe ) - ( ( Max( RMSe,MUR ) * ( MLU * Min( MUR ,RRSe ) ) ) / DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6471870999782813}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( MLU / MLU ) * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.1141732283464567, "obj2": 0.8096378057377123}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + MUM ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.610236220472441, "obj2": 0.27379399559150563}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( FirstVNF_CPU / MDR ) - Min( ( RRS + ( FirstVNF_Mem / ACS ) ) ,Min( MDR ,RRS ) ) ) )", "choosing": "Max( Min( RRSe ,MUR ),( RRSe / RCSe ) )", "obj1": 0.9881889763779528, "obj2": 0.011698557279835271}, {"determining": "( ( ( ( Max( ( ACS + ( ( CRS + MDR ) * BR ) ),BR ) / FirstVNF_Mem_Server ) - FirstVNF_Mem ) / FirstVNF_RAM_Server ) - ( ( AMS + BR ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + MUM ) + MUM ) / Min( RCSe ,CS ) ) / ( ( MUC / RMSe ) / Max( MUM,MLU ) ) ),( RMSe + Min( DS ,RMSe ) ) )", "obj1": 0.8385826771653543, "obj2": 0.1171175378896677}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "Min( ( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.655511811023622, "obj2": 0.23994327818221015}, {"determining": "Max( ( FirstVNF_RAM_Server + ( DDR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ),( ACS - FirstVNF_RAM ) )", "choosing": "( ( MUM - MUM ) / Max( MLU,MUR ) )", "obj1": 0.19291338582677164, "obj2": 0.684013174773902}, {"determining": "( ( Max( Min( CRS ,BR ),( Const - ARS ) ) + ( ( AMS / MRS ) + ( PN / MRS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( Max( DS,DS ) + ( RMSe + RMSe ) )", "obj1": 0.9665354330708661, "obj2": 0.02889296305932687}, {"determining": "Max( Max( ( Const * Const ),( FirstVNF_CPU_Server - ( FirstVNF_RAM * RRS ) ) ),Max( Max( MRS,ARS ),( Const + PN ) ) )", "choosing": "( Min( ( MUM - MUC ) ,( RMSe - RRSe ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7817968947036406}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + ( RRS * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( MUM,MUR ) ,Min( DS ,RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.46515606314562985}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "Min( ( MUC / MUR ) ,( RMSe - CS ) )", "obj1": 0.6181102362204725, "obj2": 0.25538732893584515}, {"determining": "( ( Const - MDR ) / ( MRS + ( RRS * PN ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * Max( MUM,( RRSe / ( MUC - ( DS / MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.6259842519685039, "obj2": 0.2479955003552559}, {"determining": "( Max( ( Max( FirstVNF_RAM,( FirstVNF_Mem - Max( MDR,( ( Const - MDR ) * AMS ) ) ) ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - MUM ) / DS ) * MUM ) * CS ) + RRSe ) ,( Max( ( RRSe - RMSe ),RRSe ) * RRSe ) ) ,Max( ( ( MUM / RRSe ) + ( Max( Max( Max( MLU,( MUC - MUR ) ),( DS + CS ) ),DS ) / RMSe ) ),Min( MLU ,Min( MUR ,( Min( ( Max( RRSe,MUC ) + MUM ) ,MUM ) - MUR ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5244216595969938}, {"determining": "( Min( ( Min( Max( PN,MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( ( Max( ( CS + MLU ),( Min( RMSe ,MUC ) + ( MUM * DS ) ) ) + RCSe ) / ( MLU - Max( MLU,MUM ) ) )", "obj1": 0.5826771653543307, "obj2": 0.2845840363758626}, {"determining": "( ( ( MDR * Const ) - CRS ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( ( CS + MLU ),RRSe ) * Min( RCSe ,RMSe ) ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.1732283464566929, "obj2": 0.7070782538861744}, {"determining": "( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( ( MLU - Max( MLU,MUM ) ) / ( MUR + CS ) )", "obj1": 0.5885826771653543, "obj2": 0.2807477544689296}, {"determining": "( ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / Max( ( MDR + FirstVNF_RAM ),Min( RRS ,PN ) ) )", "choosing": "( ( Min( RCSe ,RRSe ) * ( MUM * MUR ) ) / ( Min( ( ( Max( CS,( CS / MUM ) ) / MUM ) / Max( MUM,( Min( ( MUC * DS ) ,( RCSe + RCSe ) ) * ( RMSe * RMSe ) ) ) ) ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.6456692913385826, "obj2": 0.2413826536267414}, {"determining": "( ( FirstVNF_Mem_Server + ( Min( ( DDR * FirstVNF_Mem ) ,AMS ) - MDR ) ) + Max( ACS,Min( PN ,Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU / MUC ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,Max( MUR,( CS + ( ( ( MLU * Max( MUM,RMSe ) ) + MUM ) * RMSe ) ) ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7481035553799478}, {"determining": "( ( ( ARS + ACS ) / ( FirstVNF_Mem_Server + CRS ) ) + Min( ( CRS + FirstVNF_CPU ) ,( ( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MLU / RRSe ) ,( MUM / ( MUR + CS ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5420767469375345}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MDR + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - ( Min( MUR ,DS ) * ( MUM * MUR ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.5044573648504532}, {"determining": "( Max( Const,( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( ( MUC / MUR ) ,DS )", "obj1": 0.41929133858267714, "obj2": 0.47860141014520535}, {"determining": "Max( ( FirstVNF_RAM_Server + AMS ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) )", "choosing": "( ( MLU / MUC ) / Max( ( MLU - Max( MLU,MUM ) ),MUR ) )", "obj1": 0.14173228346456693, "obj2": 0.7620489900371513}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( CRS - CRS ) ),( Max( Max( ( Min( Min( DDR ,PN ) ,( ( PN + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( ( RMSe / MUR ) - Min( ( CS * ( ( Max( ( CS + MUM ),MUR ) * ( ( RCSe * MUR ) + MUC ) ) - DS ) ) ,MUM ) ) - Min( ( CS / RMSe ) ,( RRSe + MUR ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5765081596888176}, {"determining": "( ( Max( ( ( MRS + FirstVNF_RAM ) - ( Max( ( FirstVNF_RAM_Server + AMS ),Min( Min( MDR ,FirstVNF_Mem_Server ) ,( Const - FirstVNF_CPU ) ) ) * FirstVNF_CPU_Server ) ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * RCSe ) ,RCSe ) ,MLU )", "obj1": 0.7578740157480315, "obj2": 0.2158201326865185}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - ACS ) ) - ( FirstVNF_RAM - ( PN - ( ( FirstVNF_Mem_Server * Min( PN ,Min( Const ,FirstVNF_CPU ) ) ) / BR ) ) ) ) ,Max( ACS,( ( MDR - Const ) * DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5674492617475534}, {"determining": "Max( Max( FirstVNF_CPU,BR ),( FirstVNF_RAM_Server / Max( FirstVNF_CPU_Server,( FirstVNF_RAM * CRS ) ) ) )", "choosing": "Min( ( MUR - Min( ( DS + RMSe ) ,Min( CS ,MUR ) ) ) ,Max( RMSe,MUC ) )", "obj1": 0.281496062992126, "obj2": 0.5831279858924849}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + MDR ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MLU + MUM ) )", "obj1": 0.328740157480315, "obj2": 0.5576855310901854}, {"determining": "( ( ( Const * ( RRS / ( CRS * RRS ) ) ) * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( MLU * RRSe ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6412543951808312}, {"determining": "Max( Min( RRS ,Min( RRS ,( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_RAM / Const ) ) + FirstVNF_CPU ) ) ),( FirstVNF_CPU - Const ) )", "choosing": "Max( Max( ( CS * ( Max( MLU,RMSe ) + CS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( ( Min( Min( MUM ,( CS - Min( MUC ,( RCSe / RRSe ) ) ) ) ,RRSe ) / ( RMSe + MUR ) ) ,Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Max( BR,Min( FirstVNF_Mem ,( ( DDR + ACS ) * ( FirstVNF_Mem_Server + Min( Const ,( ( DDR + Const ) - ( CRS - MDR ) ) ) ) ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) ) * MRS ) ),( Min( Min( FirstVNF_CPU ,PN ) ,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( ( ( DS + ( RMSe * Min( MLU ,MUM ) ) ) - RMSe ),RRSe ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5376752392824141}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - CRS ) )", "choosing": "( ( DS / Max( MLU,( MLU / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.5962408279625019}, {"determining": "( ( ( Const * ( RRS / ( CRS * RRS ) ) ) * ( DDR + MDR ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( MLU * RRSe ) ) ) / Max( MUM,RCSe ) )", "obj1": 0.2125984251968504, "obj2": 0.6375602440521277}, {"determining": "Min( ( ( BR / PN ) - ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( RRSe - RCSe ) + ( ( MUM / Min( MUM ,CS ) ) + Min( ( Min( ( Max( Min( MUM ,MUR ),MUC ) - ( MUR - RCSe ) ) ,( RCSe / ( MUC * MUC ) ) ) + RMSe ) ,( DS / DS ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.6073050886384743}, {"determining": "( Max( Const,( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( Min( ( ( ( ( ( MUR * MUC ) / ( RRSe - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) ,Min( Max( MUM,( RRSe - RMSe ) ) ,RRSe ) ) ,( DS / MUM ) )", "obj1": 0.39763779527559057, "obj2": 0.4996147608940644}, {"determining": "( FirstVNF_CPU_Server + Max( ACS,Min( PN ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( CS,( CS / MUM ) ) / MUM ) / Max( MUM,( MUR * DS ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6922578042754671}, {"determining": "( ( ( Const * ( RRS / ( CRS * RRS ) ) ) * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( MUC / MUR ) / Max( MUM,RCSe ) )", "obj1": 0.13188976377952755, "obj2": 0.795460352205703}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( ( DDR + ( FirstVNF_Mem / ACS ) ) + Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) - FirstVNF_Mem_Server ),MDR ),( Const * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC * CS ) + MUR ) + RMSe ) - ( RCSe * ( RMSe + Max( MUM,MLU ) ) ) ) / ( RRSe + DS ) ) * RMSe ),( ( DS - RMSe ) / RMSe ) ) - Min( ( CS / RMSe ) ,Max( MUM,MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6148232149865687}, {"determining": "Max( Max( RRS,Const ),( FirstVNF_Mem_Server / ARS ) )", "choosing": "Min( ( Max( ( RRSe / RMSe ),( RRSe - MUM ) ) / ( ( CS / CS ) / ( MUC * MUM ) ) ) ,Min( ( ( MUC + MUC ) - MUM ) ,( Min( DS ,MLU ) + ( MUM / CS ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7601131008192845}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,( FirstVNF_Mem_Server - CRS ) )", "choosing": "( MLU / ( MLU + MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.7006940558534905}, {"determining": "( ( ( BR / AMS ) + FirstVNF_RAM ) / ( Max( ( Max( MDR,( PN + FirstVNF_Mem_Server ) ) / PN ),Max( DDR,ACS ) ) - ( ( FirstVNF_Mem / FirstVNF_CPU ) * ( BR * RRS ) ) ) )", "choosing": "( ( RRSe - RMSe ) / ( ( CS * MLU ) + Min( RCSe ,RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0032502200492830094}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MLU + MUM ) / RMSe ) / ( RRSe - ( MLU - ( Max( ( ( CS + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + MUM ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6313921734006921}, {"determining": "( ( ( ARS + ACS ) / ( FirstVNF_Mem_Server + CRS ) ) + Min( ( CRS + FirstVNF_CPU ) ,( ( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MLU / RRSe ) ,( MUM / ( MUR + CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5585803323322388}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Max( Max( ( Min( MDR ,BR ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / MLU ) ,( DS + MUR ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6242063113971849}, {"determining": "( ( Min( FirstVNF_CPU ,Max( CRS,( MRS * CRS ) ) ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( DDR + CRS ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( ( MUR * MLU ),CS ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( DS,DS ) ) ) ,MUM ) - ( ( ( MUC - ( DS - MUR ) ) + MUM ) + RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.7981880809718809}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6046197864864384}, {"determining": "Max( ( FirstVNF_RAM_Server + AMS ),( ACS - FirstVNF_RAM ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,MUR ) )", "obj1": 0.14960629921259844, "obj2": 0.7489278664469734}, {"determining": "( Max( Max( AMS,Const ),RRS ) / Max( MDR,FirstVNF_Mem ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( ( CS / ( RCSe * Min( CS ,( MUM / MUC ) ) ) ),( RRSe - RMSe ) ) * RRSe ) ) ,Min( DS ,MUM ) )", "obj1": 0.39960629921259844, "obj2": 0.49416526095759705}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.5135198387086665}, {"determining": "Min( Min( FirstVNF_Mem_Server ,DDR ) ,( ( RRS - BR ) - FirstVNF_Mem ) )", "choosing": "Min( ( MUR - MUR ) ,( Min( RCSe ,MUM ) + Max( CS,DS ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5671968333643922}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - CRS ) )", "choosing": "( ( DS / Max( MLU,( MLU / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.27165354330708663, "obj2": 0.5857847121754066}, {"determining": "( Max( BR,Min( FirstVNF_Mem ,( ( DDR + ACS ) * ( FirstVNF_Mem_Server + Min( Const ,( ( DDR + Const ) - ( CRS - MDR ) ) ) ) ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) ) * MRS ) ),( Min( Min( FirstVNF_CPU ,PN ) ,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( ( ( DS + ( RMSe * Min( MLU ,MUM ) ) ) - RMSe ),RRSe ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5376752392824141}, {"determining": "( ( Const * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,DS )", "obj1": 0.4330708661417323, "obj2": 0.4662640354652157}, {"determining": "( ( Min( FirstVNF_CPU ,Max( CRS,( MRS * CRS ) ) ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( DDR + CRS ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( ( MUR * MLU ),CS ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( DS,DS ) ) ) ,MUM ) - ( ( ( MUC - ( DS - MUR ) ) + MUM ) + RCSe ) )", "obj1": 0.12007874015748031, "obj2": 0.8075279370994598}, {"determining": "( ( Min( FirstVNF_RAM_Server ,ACS ) - ( ( MDR + FirstVNF_CPU_Server ) - AMS ) ) / ( ( FirstVNF_RAM + MDR ) / ( FirstVNF_CPU + PN ) ) )", "choosing": "( ( Min( RCSe ,Max( MLU,CS ) ) * ( MUM * MUR ) ) / ( Min( ( ( Min( MLU ,( MUM - RMSe ) ) / MUM ) / Max( ( RRSe + ( RRSe - CS ) ),( MUR * CS ) ) ) ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.37598425196850394, "obj2": 0.5118706647370208}, {"determining": "Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU - RRSe ) / ( RMSe + MUR ) ) - Max( MUR,Min( MLU ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5185160820127822}, {"determining": "Max( ( FirstVNF_CPU - Const ),FirstVNF_Mem_Server )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5185160820127822}, {"determining": "( ( Const * ( RRS / ( ( PN - ( FirstVNF_CPU_Server - CRS ) ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( ( ( RRSe * ( MUC * ( ( ( MLU / CS ) + ( MUM / DS ) ) * RCSe ) ) ) * RCSe ) / MUC ) ,DS )", "obj1": 0.42322834645669294, "obj2": 0.4749709334232238}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( ( RRS / BR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MLU + MUM ) / RMSe ) / ( RRSe - ( MLU - ( Max( ( ( CS + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( ( DS / ( DS * MUC ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6306757463790528}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6286527916028742}, {"determining": "Min( ( ( BR / PN ) - ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( RRSe - RCSe ) + ( ( MUM / Min( MUM ,CS ) ) + Min( ( Min( ( Max( Min( MUM ,MUR ),MUC ) - ( MUR - RCSe ) ) ,( RCSe / ( MUC * MUC ) ) ) + RMSe ) ,( DS / DS ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5921085194164484}, {"determining": "Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( ( DDR + ( FirstVNF_Mem / ACS ) ) + Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) - FirstVNF_Mem_Server ),MDR ),( Const * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC * CS ) + MUR ) + RMSe ) - ( RCSe * ( RMSe + Max( MUM,MLU ) ) ) ) / ( RRSe + DS ) ) * RMSe ),( ( DS - RMSe ) / RMSe ) ) - Min( ( CS / RMSe ) ,Max( MUM,MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6148232149865687}, {"determining": "( ( Const * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * FirstVNF_Mem ) )", "choosing": "Min( ( DS / MUR ) ,DS )", "obj1": 0.4251968503937008, "obj2": 0.47127041696024696}, {"determining": "Min( ( ( BR / PN ) - ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( RRSe - RCSe ) + ( ( MUM / Min( MUM ,CS ) ) + Min( ( Min( ( Max( Min( MUM ,MUR ),MUC ) - ( MUR - RCSe ) ) ,( RCSe / ( MUC * MUC ) ) ) + RMSe ) ,( DS / DS ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5921085194164484}, {"determining": "( ( Const * ( RRS / ( CRS * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( RMSe - CS ) )", "obj1": 0.31496062992125984, "obj2": 0.5645177702849765}, {"determining": "Max( ( Const - FirstVNF_CPU ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * MRS ) - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( ( CS * DS ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( Min( RCSe ,RRSe ) - RCSe ) - Max( ( MLU + MUM ),Max( MUR,MUR ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( BR / AMS ) + FirstVNF_RAM ) / ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( BR * Max( BR,Min( Max( PN,Const ) ,ACS ) ) ) ) - Max( ( ARS / PN ),Max( DDR,ACS ) ) ) )", "choosing": "( ( MUM + Min( MUM ,RMSe ) ) / ( RRSe - Max( MLU,( RRSe - RMSe ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006712413989081544}, {"determining": "( ( ( Const * ( RRS / Min( FirstVNF_Mem_Server ,Min( MDR ,FirstVNF_Mem_Server ) ) ) ) * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( MUC / MUR ) / Max( MUM,Min( MUM ,MUR ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7976340611682905}, {"determining": "( ( Const * ( RRS / ( CRS * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( RMSe - CS ) )", "obj1": 0.31496062992125984, "obj2": 0.5645177702849765}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - CRS ) )", "choosing": "( ( DS / Max( MLU,( MLU / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.27165354330708663, "obj2": 0.5857847121754066}, {"determining": "( ( Min( FirstVNF_CPU ,Max( CRS,( MRS * CRS ) ) ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( DDR + CRS ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( ( MUR * MLU ),CS ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( DS,DS ) ) ) ,MUM ) - ( ( ( MUC - ( DS - MUR ) ) + MUM ) + RCSe ) )", "obj1": 0.12007874015748031, "obj2": 0.8075279370994598}, {"determining": "( ( Const * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,DS )", "obj1": 0.4251968503937008, "obj2": 0.47127041696024696}, {"determining": "( Max( Const,( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( Min( ( ( ( ( ( MUR * MUC ) / ( RRSe - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) ,Min( Max( MUM,( RRSe - RMSe ) ) ,RRSe ) ) ,( DS / MUM ) )", "obj1": 0.39763779527559057, "obj2": 0.4996147608940644}, {"determining": "Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( ( DDR + ( FirstVNF_Mem / ACS ) ) + Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) - FirstVNF_Mem_Server ),MDR ),( Const * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC * CS ) + MUR ) + RMSe ) - ( RCSe * ( RMSe + Max( MUM,MLU ) ) ) ) / ( RRSe + DS ) ) * RMSe ),( ( DS - RMSe ) / RMSe ) ) - Min( ( CS / RMSe ) ,Max( MUM,MUR ) ) )", "obj1": 0.25, "obj2": 0.6051348108622675}, {"determining": "Min( Min( Min( ACS ,AMS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - CRS ) )", "choosing": "Min( MUM ,( RMSe - CS ) )", "obj1": 0.3110236220472441, "obj2": 0.5671968333643922}, {"determining": "Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( ( DDR + ( FirstVNF_Mem / ACS ) ) + Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) - FirstVNF_Mem_Server ),MDR ),( Const * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC * CS ) + MUR ) + RMSe ) - ( RCSe * ( RMSe + Max( MUM,MLU ) ) ) ) / ( RRSe + DS ) ) * RMSe ),( ( DS - RMSe ) / RMSe ) ) - Min( ( CS / RMSe ) ,Max( MUM,MUR ) ) )", "obj1": 0.25, "obj2": 0.6051348108622675}, {"determining": "( ( BR / FirstVNF_Mem ) * ( DDR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server + Min( MRS ,( MDR * CRS ) ) ) ) ) )", "choosing": "( Min( MUC ,MUM ) - ( RRSe + ( Max( ( ( ( ( MUM + MUC ) + RCSe ) * ( MLU * MUM ) ) / Min( ( Min( RCSe ,RMSe ) / CS ) ,MUR ) ),MUR ) * Max( MUR,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( CRS,FirstVNF_RAM_Server ) + MDR ) + Max( PN,FirstVNF_RAM ) ) - Min( AMS ,DDR ) )", "choosing": "Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_RAM ) - Min( FirstVNF_RAM ,PN ) )", "choosing": "( ( MUM - MUR ) / ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MRS + ( ( MDR - FirstVNF_CPU_Server ) * Max( FirstVNF_RAM,( FirstVNF_CPU / Max( BR,CRS ) ) ) ) ) ,FirstVNF_RAM_Server ) / Max( Min( FirstVNF_RAM ,ACS ),FirstVNF_RAM ) ) * Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( RMSe,Min( MLU ,MUM ) ) ) + ( MLU * Max( ( RRSe * MUC ),( ( ( RCSe * RRSe ) * RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MDR ,FirstVNF_Mem_Server ) ,( Const - FirstVNF_CPU ) )", "choosing": "( ( RRSe / RMSe ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * ( MRS - CRS ) ) ) ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,( FirstVNF_Mem_Server - CRS ) )", "choosing": "( MLU / Min( MUR ,( Min( ( Max( RRSe,MUC ) + MUM ) ,MUM ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem_Server ,DDR ) ,( ( RRS - BR ) - FirstVNF_Mem ) )", "choosing": "Min( ( MUR - MUR ) ,( Min( RCSe ,MUM ) + Max( CS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( RRS - PN ) * Max( DDR,CRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( BR * CRS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( RCSe + ( ( CS + Max( MLU,MUM ) ) - MUC ) ) - DS ) ),MUR ) / ( MLU / ( DS * ( MLU / MLU ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8198884265464628}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( Max( MUC,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),Max( MUR,MUR ) ) )", "obj1": 0.812992125984252, "obj2": 0.1268630654711498}, {"determining": "( Max( ACS,Max( FirstVNF_Mem,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( ( AMS + ( Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( DS / ( RRSe * MUC ) ) + Min( MUM ,( ( Min( ( ( DS - RMSe ) - CS ) ,( DS / DS ) ) * RRSe ) - RMSe ) ) ) / ( RRSe - RMSe ) )", "obj1": 0.734251968503937, "obj2": 0.1740880836016263}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( ACS,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) ) )", "obj1": 0.47834645669291337, "obj2": 0.4249502222311897}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( CS + MLU ),RRSe ) * Min( RCSe ,RMSe ) ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.7637795275590551, "obj2": 0.15974720448727323}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - ( CS + MLU ) ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.0877725475575934}, {"determining": "( ( Max( ( ( MRS + FirstVNF_RAM ) - ( Max( ( FirstVNF_RAM_Server + AMS ),Min( Min( MDR ,FirstVNF_Mem_Server ) ,( Const - FirstVNF_CPU ) ) ) * FirstVNF_CPU_Server ) ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( Max( BR,Min( MRS ,( ( MRS - Max( ARS,Min( ARS ,BR ) ) ) / BR ) ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( Min( ( MUC + ( ( ( Max( CS,( CS / MUM ) ) / MUM ) / Max( MUM,( MUR * DS ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( Max( MUM,( ( RMSe + Max( RMSe,( ( RRSe + MUC ) * Min( MUR ,DS ) ) ) ) * DS ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.23317576709547366}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( Max( DDR,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / ( ACS - ( DDR * ( FirstVNF_RAM - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( MUM / Min( MUM ,CS ) ) + Min( ( Min( ( Max( ( MLU + MUM ),( MLU - MUC ) ) - ( MUR - RCSe ) ) ,( RCSe / ( DS * MUC ) ) ) + RMSe ) ,( DS / DS ) ) ) )", "obj1": 0.9488188976377953, "obj2": 0.04069317994188473}, {"determining": "Max( ( Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) ) - Const ),Min( RRS ,( Const / ( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( ( CS * DS ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / MLU ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4409448818897638, "obj2": 0.4490996800587823}, {"determining": "( Min( ACS ,Max( Min( FirstVNF_RAM_Server ,BR ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Min( ( Min( ( MUR - RCSe ) ,Max( ( DS - ( MUM * MUM ) ),( ( MUR - DS ) - RMSe ) ) ) * DS ) ,( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) )", "obj1": 0.8759842519685039, "obj2": 0.059301009382146504}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + MUM ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.610236220472441, "obj2": 0.27379399559150563}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "( ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / Max( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ,Const ) + FirstVNF_RAM ),( Const - ( PN - FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe / MUM ) - Min( CS ,( CS - ( ( MUR - Max( RCSe,CS ) ) / CS ) ) ) )", "obj1": 0.5728346456692913, "obj2": 0.27908905348376967}, {"determining": "( ( ( Min( MDR ,FirstVNF_RAM_Server ) - DDR ) * RRS ) * ( CRS - ( ( ( MRS + Max( ( CRS + Min( ARS ,ARS ) ),FirstVNF_CPU ) ) * ARS ) / ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS + RRSe ) - ( MUM * ( MLU / MUC ) ) )", "obj1": 0.4862204724409449, "obj2": 0.3861464196584804}, {"determining": "( Min( ACS ,AMS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + DS ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.8937007874015748, "obj2": 0.041850986141240526}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MDR + FirstVNF_RAM ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * BR ) / ( MDR * FirstVNF_Mem ) ) - CRS ) )", "choosing": "( Max( MUM,( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.515748031496063, "obj2": 0.3737574359830527}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( MRS * AMS ) - ( Const * Const ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) ) / ( DDR - AMS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( MUM - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - ( ( Min( ( MUM - MUC ) ,( RMSe - RRSe ) ) / MLU ) * DS ) ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.5649606299212598, "obj2": 0.31267092598100177}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( FirstVNF_RAM,PN ) ) * FirstVNF_Mem_Server ) + Const ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / ( DS * ( RRSe + RRSe ) ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - ( MUR + ( Max( Max( MUM,( CS / MUC ) ),MUC ) * CS ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.23614852564168004}, {"determining": "( ( ( ( Max( ( ACS + ( ( CRS + MDR ) * BR ) ),BR ) / FirstVNF_Mem_Server ) - FirstVNF_Mem ) / FirstVNF_RAM_Server ) - ( ( AMS + BR ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + MUM ) + MUM ) / Min( RCSe ,CS ) ) / ( ( MUC / RMSe ) / Max( MUM,MLU ) ) ),( RMSe + Min( DS ,RMSe ) ) )", "obj1": 0.8385826771653543, "obj2": 0.1171175378896677}, {"determining": "( ( Min( ( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( ( ( ( MUM + MUM ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.844488188976378, "obj2": 0.10607590673727786}, {"determining": "( Min( Max( Const,Min( Max( PN,Const ) ,ACS ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( ( ( ( ( MUR / ( RRSe - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) * ( RMSe * RMSe ) )", "obj1": 0.5610236220472441, "obj2": 0.33755697873856255}, {"determining": "( Max( PN,ACS ) * ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( MRS + MRS ) ) * BR ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( Min( DS ,DS ) + ( DS + MUC ) ) / Max( DS,RCSe ) )", "obj1": 0.48031496062992124, "obj2": 0.3963508149877325}, {"determining": "( ( Const * ( FirstVNF_CPU_Server / ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "( ( ( ( ( ( Max( ( MUR * MUM ),( DS * MUC ) ) / ( MUR - ( RRSe / CS ) ) ) + MLU ) * CS ) - RCSe ) - ( MLU + MUR ) ) / ( DS + MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.6812259181574725}, {"determining": "Max( Max( ( Const * Const ),( FirstVNF_CPU_Server - ( FirstVNF_RAM * RRS ) ) ),Max( Max( MRS,ARS ),( Const + PN ) ) )", "choosing": "( Min( ( MUM - MUC ) ,( RMSe - RRSe ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7817968947036406}, {"determining": "( ( ( MDR * Const ) - CRS ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( ( CS + MLU ),RRSe ) * Min( RCSe ,RMSe ) ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.1732283464566929, "obj2": 0.7070782538861744}, {"determining": "( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( ( MLU - Max( MLU,MUM ) ) / ( MUR + CS ) )", "obj1": 0.5688976377952756, "obj2": 0.2933003607400364}, {"determining": "( Max( ( Max( FirstVNF_RAM,( FirstVNF_Mem - Max( MDR,( ( Const - MDR ) * AMS ) ) ) ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - MUM ) / DS ) * MUM ) * CS ) + RRSe ) ,( Max( ( RRSe - RMSe ),RRSe ) * RRSe ) ) ,Max( ( ( MUM / RRSe ) + ( Max( Max( Max( MLU,( MUC - MUR ) ),( DS + CS ) ),DS ) / RMSe ) ),Min( MLU ,Min( MUR ,( Min( ( Max( RRSe,MUC ) + MUM ) ,MUM ) - MUR ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5244216595969938}, {"determining": "Max( ( FirstVNF_RAM_Server + AMS ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) )", "choosing": "( ( MLU / MUC ) / Max( ( MLU - Max( MLU,MUM ) ),MUR ) )", "obj1": 0.14173228346456693, "obj2": 0.7620489900371513}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6502599198292992}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "Min( ( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) ,Min( DS ,Max( ( ( ( ( Max( MUR,DS ) + MUM ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) ) ) )", "obj1": 0.65748031496063, "obj2": 0.23758265999439282}, {"determining": "( ( AMS + ( Min( BR ,Min( ( ACS * CRS ) ,FirstVNF_RAM_Server ) ) + ( DDR + MDR ) ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( Max( ( RRSe * ( RCSe * MUR ) ),MUM ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.018245284534443584}, {"determining": "( ( FirstVNF_Mem_Server + ( Min( ( DDR * FirstVNF_Mem ) ,AMS ) - MDR ) ) + Max( ACS,Min( PN ,Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU / MUC ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,Max( MUR,( CS + ( ( ( MLU * Max( MUM,RMSe ) ) + MUM ) * RMSe ) ) ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7481035553799478}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / ( ( ( Max( CRS,FirstVNF_RAM_Server ) + MDR ) + Max( PN,FirstVNF_RAM ) ) - Min( AMS ,DDR ) ) ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - ( CS + MLU ) ) / Max( MUC,( MUR / MUR ) ) ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.5393700787401575, "obj2": 0.3496498080772324}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - DS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6181102362204725, "obj2": 0.2550330189554355}, {"determining": "( Max( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) ) * CRS ) ),( Min( Min( FirstVNF_CPU ,PN ) ,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( MUR,DS ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.04335239924870517}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( Const / Max( DDR,PN ) ) ) )", "choosing": "Max( Max( ( CS * DS ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( RMSe / RCSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4738313939194966}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5920357388442476}, {"determining": "( Max( PN,ACS ) * ( ( ( ( MRS + Min( MDR ,FirstVNF_RAM_Server ) ) * BR ) / ( MDR * FirstVNF_Mem ) ) - CRS ) )", "choosing": "( ( RMSe / MUR ) - Max( ( RRSe * MUC ),( ( ( RCSe * RRSe ) * RMSe ) * CS ) ) )", "obj1": 0.547244094488189, "obj2": 0.3427693752542492}, {"determining": "( Max( ACS,FirstVNF_Mem ) - ( ( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) )", "obj1": 0.75, "obj2": 0.16951870370419758}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) ) / ( DDR - AMS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( MUM - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - ( ( MLU / MLU ) * DS ) ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.5275590551181102, "obj2": 0.3591187179111727}, {"determining": "Max( Max( FirstVNF_CPU,BR ),( FirstVNF_RAM_Server / Max( FirstVNF_CPU_Server,( FirstVNF_RAM * CRS ) ) ) )", "choosing": "Min( ( MUR - Min( ( DS + RMSe ) ,Min( CS ,MUR ) ) ) ,Max( RMSe,MUC ) )", "obj1": 0.281496062992126, "obj2": 0.5831279858924849}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( CS * ( ( ( MUR * MUC ) / ( RRSe - ( ( MUR - MLU ) - ( ( DS * RRSe ) * ( RCSe / MUR ) ) ) ) ) * MUM ) ) - Min( ( Min( MUR ,MUC ) - ( MUM / DS ) ) ,( ( CS / RRSe ) / Min( MUR ,CS ) ) ) )", "obj1": 0.9625984251968503, "obj2": 0.02299298994425096}, {"determining": "Max( Min( RRS ,Max( RRS,( MRS + FirstVNF_CPU ) ) ),( FirstVNF_CPU - Const ) )", "choosing": "Max( Max( ( CS * ( CS + Max( MLU,RMSe ) ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) ,Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.38976377952755903, "obj2": 0.4966358616439483}, {"determining": "( Max( Const,( BR / ( ( BR + FirstVNF_Mem_Server ) / DDR ) ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( Min( ( ( ( ( ( MUR * MUC ) / ( DS - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) ,Min( Max( MUM,( RRSe - RMSe ) ) ,RRSe ) ) ,( DS / MUM ) )", "obj1": 0.29133858267716534, "obj2": 0.5727200404058872}, {"determining": "( Max( ( Max( FirstVNF_RAM,( FirstVNF_Mem - Max( MDR,( ( Const - MDR ) * AMS ) ) ) ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( MLU / ( ( MLU / MLU ) * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.11023622047244094, "obj2": 0.8069094452650712}, {"determining": "( Max( BR,Min( FirstVNF_Mem ,( ( DDR + ACS ) * ( FirstVNF_Mem_Server + Min( Const ,( ( DDR + Const ) + ( CRS - MDR ) ) ) ) ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) ) * MRS ) ),( Min( ACS ,( DDR / ( PN * RRS ) ) ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + MLU ) ,( Max( Min( ( ( Max( RCSe,CS ) / MLU ) / ( MUC + Min( RRSe ,RCSe ) ) ) ,RMSe ),RRSe ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.5028906723679414}, {"determining": "( Max( BR,Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) ) * CRS ) ),( Min( Min( FirstVNF_CPU ,PN ) ,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5513720441063616}, {"determining": "( ( Min( FirstVNF_CPU ,Max( CRS,( MRS * CRS ) ) ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( DDR + CRS ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( ( MUR * MLU ),CS ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( DS,DS ) ) ) ,MUM ) - ( ( ( MUC - ( DS - MUR ) ) + MUM ) + RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.7981880809718809}, {"determining": "( ( Max( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + ( FirstVNF_Mem / Min( CRS ,CRS ) ) ) * FirstVNF_CPU_Server ) ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( MLU / MUC ) / Max( ( MLU - Max( MLU,MUM ) ),MUR ) )", "obj1": 0.7086614173228346, "obj2": 0.23317576709547366}, {"determining": "( ( ( Const * ( RRS / ( CRS * RRS ) ) ) * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( MLU * RRSe ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6412543951808312}, {"determining": "( Max( PN,ACS ) * ( ( ( ( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * BR ) / ( MDR * FirstVNF_Mem ) ) - ( ACS - Const ) ) )", "choosing": "( ( DS - RCSe ) - Min( CS ,MUM ) )", "obj1": 0.9862204724409449, "obj2": 0.009627027566101946}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) / ( DDR - FirstVNF_CPU_Server ) ) ) ) / ( DDR + MRS ) ) ),( ( ( Min( AMS ,ACS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( Max( Min( ( MUR * Max( RRSe,Min( ( ( MLU * RCSe ) * ( MUR + MUR ) ) ,( MLU + RMSe ) ) ) ) ,( CS + RCSe ) ),( MUR - MUM ) ) - MUM )", "obj1": 0.5196850393700787, "obj2": 0.36293839624588864}, {"determining": "( ( ( ARS + ACS ) / ( FirstVNF_Mem_Server + CRS ) ) + Min( ( CRS + FirstVNF_CPU ) ,( ( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MLU / RRSe ) ,( MUM / ( MUR + CS ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5420767469375345}, {"determining": "( ( Const * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6024395687396575}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - ACS ) ) - ( FirstVNF_RAM - ( PN - ( ( FirstVNF_Mem_Server * Min( PN ,Min( Const ,FirstVNF_CPU ) ) ) / BR ) ) ) ) ,Max( ACS,( ( MDR - Const ) * DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5674492617475534}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( ACS - MDR ) ) * ( RRS / ( CRS * RRS ) ) ) * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( RMSe / MUM ) - Min( MUM ,RRSe ) )", "obj1": 0.2125984251968504, "obj2": 0.6370407928374384}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe + ( RMSe - RMSe ) ) ,( ( MUM + CS ) / ( CS - DS ) ) ),( ( RCSe - Min( RCSe ,RRSe ) ) - Max( ( MLU + MUM ),Max( MUR,MUR ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.24091560297337816}, {"determining": "( Min( AMS ,AMS ) / Max( ( MDR * FirstVNF_RAM ),( FirstVNF_CPU + CRS ) ) )", "choosing": "( Min( ( ( ( MUM - RRSe ) * Max( DS,RMSe ) ) + MUR ) ,MUM ) - Min( ( Min( MUR ,MUC ) - ( MUM / DS ) ) ,( ( CS / RRSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8081943611772082}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Min( BR ,Min( ( DDR / FirstVNF_CPU_Server ) ,CRS ) ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / Max( DS,MUC ) ) - ( ( ( Max( ( RRSe * ( RCSe * MUR ) ),MUM ) + ( MUM - RCSe ) ) - RRSe ) - ( ( Max( RMSe,MUR ) * ( MLU * Min( MUR ,RRSe ) ) ) / DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6471870999782813}, {"determining": "Max( ( MDR / MDR ),Min( ( FirstVNF_RAM + Max( Max( MRS,FirstVNF_Mem ),FirstVNF_CPU ) ) ,RRS ) )", "choosing": "Max( ( MLU / ( MLU - MUC ) ),Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.490390840010288}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( CS,( ( ( ( MUC + MUM ) * RCSe ) * ( ( MUR * MUR ) + CS ) ) / MUM ) ) / RMSe ),MUR ) ,Min( RCSe ,DS ) )", "obj1": 0.43700787401574803, "obj2": 0.46041311103596083}, {"determining": "( ( ( Const * ( RRS / ( CRS * RRS ) ) ) * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( MUC / MUR ) / Max( MUM,RCSe ) )", "obj1": 0.13188976377952755, "obj2": 0.795460352205703}, {"determining": "( ( ARS / ( Min( FirstVNF_RAM ,ACS ) * FirstVNF_RAM ) ) * Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / MUR ) - Min( CS ,MUM ) )", "obj1": 0.24606299212598426, "obj2": 0.6125890892524164}, {"determining": "( Max( BR,Min( FirstVNF_Mem ,( ( DDR + ACS ) * ( FirstVNF_Mem_Server + Min( Const ,( ( DDR + Const ) - ( CRS - MDR ) ) ) ) ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) ) * MRS ) ),( Min( Min( FirstVNF_CPU ,PN ) ,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( ( ( DS + ( RMSe * Min( MLU ,MUM ) ) ) - RMSe ),RRSe ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5376752392824141}, {"determining": "( ( ( ARS + ACS ) / ( FirstVNF_Mem_Server + CRS ) ) + Min( ( CRS + FirstVNF_CPU ) ,( ( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MLU / RRSe ) ,( MUM / ( MUR + CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5585803323322388}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( ( Min( ARS ,FirstVNF_CPU ) * Const ) + AMS ) ) ),( ACS - ( ( FirstVNF_RAM + MRS ) - ( ( Max( MDR,( ( Const - MDR ) * AMS ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( Max( ( MUC - MUR ),MLU ),( DS / CS ) ) / MLU ) * DS ) ) / Max( Max( DS,RCSe ),MUR ) )", "obj1": 0.14566929133858267, "obj2": 0.7522695162460593}, {"determining": "( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.695725117478396}, {"determining": "( ( Const - MDR ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.6338582677165354, "obj2": 0.24222487528832376}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "Min( ( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.655511811023622, "obj2": 0.23994327818221015}, {"determining": "( ( Const - MDR ) / ( MRS + ( RRS * PN ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * Max( MUM,( RRSe / ( MUC - ( DS / MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.6259842519685039, "obj2": 0.2479955003552559}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Max( Max( ( Min( MDR ,BR ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / MLU ) ,( DS + MUR ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6242063113971849}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MLU + MUM ) / RMSe ) / ( RRSe - ( MLU - ( Max( ( ( CS + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + MUM ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6313921734006921}, {"determining": "Max( ( Const - FirstVNF_CPU ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * MRS ) - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( ( CS * DS ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( Min( RCSe ,RRSe ) - RCSe ) - Max( ( MLU + MUM ),Max( MUR,MUR ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( FirstVNF_CPU_Server + Max( ACS,Min( PN ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( CS,( CS / MUM ) ) / MUM ) / Max( MUM,( MUR * DS ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6922578042754671}, {"determining": "Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( ( DDR + ( FirstVNF_Mem / ACS ) ) + Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) - FirstVNF_Mem_Server ),MDR ),( Const * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC * CS ) + MUR ) + RMSe ) - ( RCSe * ( RMSe + Max( MUM,MLU ) ) ) ) / ( RRSe + DS ) ) * RMSe ),( ( DS - RMSe ) / RMSe ) ) - Min( ( CS / RMSe ) ,Max( MUM,MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6148232149865687}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( FirstVNF_RAM,PN ) ) * FirstVNF_Mem_Server ) + Const ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / ( DS * ( RRSe + RRSe ) ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - ( MUR + ( Max( Max( MUM,( CS / MUC ) ),MUC ) * CS ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.16045482119650067}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - CRS ) )", "choosing": "( ( DS / Max( MLU,( MLU / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.24803149606299213, "obj2": 0.6050126738237325}, {"determining": "( ( ( MRS + CRS ) - ( ( Max( ( Max( PN,( MDR / MRS ) ) * DDR ),Max( ( ( MRS - CRS ) * ( FirstVNF_Mem * Const ) ),ACS ) ) + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem + ( ( ( ( ( Max( DDR,FirstVNF_CPU ) - FirstVNF_Mem_Server ) - ( Max( AMS,ACS ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) / FirstVNF_Mem ) * AMS ) * RRS ) ) )", "choosing": "( ( MLU / MUM ) / Max( Max( ( ( ( DS / Max( CS,RCSe ) ) + MLU ) + CS ),MUC ),MLU ) )", "obj1": 0.9606299212598425, "obj2": 0.02924989052785105}, {"determining": "( ( ( BR / AMS ) + FirstVNF_RAM ) / ( Max( ( Max( MDR,( PN + FirstVNF_Mem_Server ) ) / PN ),Max( DDR,ACS ) ) - ( ( FirstVNF_Mem / FirstVNF_CPU ) * ( BR * RRS ) ) ) )", "choosing": "( ( RRSe - RMSe ) / ( ( CS * MLU ) + Min( RCSe ,RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0032502200492830094}, {"determining": "Max( Min( RRS ,Min( RRS ,( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_RAM / Const ) ) + FirstVNF_CPU ) ) ),( FirstVNF_CPU - Const ) )", "choosing": "Max( Max( ( CS * ( Max( MLU,RMSe ) + CS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( ( Min( Min( MUM ,( CS - Min( MUC ,( RCSe / RRSe ) ) ) ) ,RRSe ) / ( RMSe + MUR ) ) ,Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "Min( Min( FirstVNF_Mem_Server ,DDR ) ,( ( RRS - BR ) - FirstVNF_Mem ) )", "choosing": "Min( ( MUR - MUR ) ,( Min( RCSe ,MUM ) + Max( CS,DS ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5671968333643922}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - CRS ) )", "choosing": "( ( DS / Max( MLU,( MLU / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.27165354330708663, "obj2": 0.5857847121754066}, {"determining": "( Max( BR,Min( FirstVNF_Mem ,( ( DDR + ACS ) * ( FirstVNF_Mem_Server + Min( Const ,( ( DDR + Const ) - ( CRS - MDR ) ) ) ) ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ( MRS * DDR ) ) / ( MRS - FirstVNF_CPU_Server ) ) ) * MRS ) ),( Min( Min( FirstVNF_CPU ,PN ) ,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( ( ( DS + ( RMSe * Min( MLU ,MUM ) ) ) - DS ),RRSe ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.5394247095743366}, {"determining": "( ( Min( FirstVNF_RAM_Server ,ACS ) - ( ( MDR + FirstVNF_CPU_Server ) - AMS ) ) / ( ( FirstVNF_RAM + MDR ) / ( FirstVNF_CPU + PN ) ) )", "choosing": "( ( Min( RCSe ,Max( MLU,CS ) ) * ( MUM * MUR ) ) / ( Min( ( ( Min( MLU ,( MUM - RMSe ) ) / MUM ) / Max( ( RRSe + ( RRSe - CS ) ),( MUR * CS ) ) ) ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.37598425196850394, "obj2": 0.5118706647370208}, {"determining": "( ( Const - MDR ) / FirstVNF_Mem_Server )", "choosing": "Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.6220472440944882, "obj2": 0.25083394814924886}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - CRS ) )", "choosing": "( ( DS / Max( MLU,( MLU / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.27165354330708663, "obj2": 0.5857847121754066}, {"determining": "Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU - RRSe ) / ( RMSe + MUR ) ) - Max( MUR,Min( MLU ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5185160820127822}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( MLU / MUC ) / Max( MUM,MLU ) )", "obj1": 0.9606299212598425, "obj2": 0.02924989052785105}, {"determining": "( Max( BR,Min( FirstVNF_Mem ,( ( DDR + ACS ) * ( FirstVNF_Mem_Server + Min( Const ,( ( DDR + Const ) - ( CRS - MDR ) ) ) ) ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) ) * MRS ) ),( Min( Min( FirstVNF_CPU ,PN ) ,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( ( ( DS + ( RMSe * Min( MLU ,MUM ) ) ) - RMSe ),RRSe ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5376752392824141}, {"determining": "( ( Const * ( RRS / ( Const - MDR ) ) ) / ( MRS * DDR ) )", "choosing": "Min( Min( RRSe ,MUM ) ,DS )", "obj1": 0.42913385826771655, "obj2": 0.46933812021352345}, {"determining": "( Max( PN,ACS ) * ( ( ( ( MRS + Max( ( CRS + Min( ARS ,ARS ) ),FirstVNF_CPU ) ) * ARS ) / ( MDR * FirstVNF_Mem ) ) - CRS ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( ( ( DS + ( RMSe * Min( MLU ,MUM ) ) ) - RMSe ),RRSe ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.514078651569278}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6286527916028742}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( ( RRS / BR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MLU + MUM ) / RMSe ) / ( RRSe - ( MLU - ( Max( ( ( CS + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( ( DS / ( DS * MUC ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6306757463790528}, {"determining": "( ( Const * ( RRS / ( ( FirstVNF_RAM - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / Min( RRSe ,MLU ) ) ,DS )", "obj1": 0.42322834645669294, "obj2": 0.4727057443319384}, {"determining": "Max( ( FirstVNF_RAM_Server + AMS ),( ACS - FirstVNF_RAM ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,MUR ) )", "obj1": 0.14960629921259844, "obj2": 0.7489278664469734}, {"determining": "( ( Const * ( RRS / ( CRS * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( RMSe - CS ) )", "obj1": 0.31496062992125984, "obj2": 0.5645177702849765}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + ( RRS * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( MUM,MUR ) ,Min( DS ,RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.46515606314562985}], "6": [{"determining": "Min( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - ACS ) ) - ( FirstVNF_RAM - ( PN - ( ( FirstVNF_Mem_Server * Min( PN ,Min( Const ,FirstVNF_CPU ) ) ) / BR ) ) ) ) ,Max( ACS,( ( MDR - Const ) * DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * ( MRS - CRS ) ) ) ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,( FirstVNF_Mem_Server - CRS ) )", "choosing": "( MLU / Min( MUR ,( Min( ( Max( RRSe,MUC ) + MUM ) ,MUM ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( FirstVNF_Mem - Max( ( ( DDR / PN ) - ACS ),( ( Const - MDR ) * AMS ) ) ) ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( MLU / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09448818897637795, "obj2": 0.8419971214542353}, {"determining": "Min( ( ( ARS + BR ) - AMS ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - MUC ) ),( DS + CS ) ),RMSe ) ,Min( ( RRSe - ( Min( RRSe ,MUC ) + RCSe ) ) ,RCSe ) ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.22167959508314564}, {"determining": "( Max( ACS,FirstVNF_Mem ) - ( ( ( Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( Min( ( MUR + ( ( ( Max( CS,( CS / MUM ) ) / MUM ) / Max( MUM,( MUR * DS ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.18289572198055987}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( ACS,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) ) )", "obj1": 0.47834645669291337, "obj2": 0.4249502222311897}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( MUM,( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.8011811023622047, "obj2": 0.1338828013560041}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( Max( DDR,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / ( ACS - ( DDR * ( FirstVNF_RAM - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( MUM / Min( MUM ,CS ) ) + Min( ( Min( ( Max( ( MLU + MUM ),( MLU - MUC ) ) - ( MUR - RCSe ) ) ,( RCSe / ( DS * MUC ) ) ) + RMSe ) ,( DS / DS ) ) ) )", "obj1": 0.9488188976377953, "obj2": 0.04069317994188473}, {"determining": "Max( ( Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) ) - Const ),Min( RRS ,( Const / ( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( ( CS * DS ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / MLU ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4409448818897638, "obj2": 0.4490996800587823}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( BR,FirstVNF_CPU ) ) * Min( MDR ,MRS ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUC ) / ( RRSe - Min( MUR ,( Max( Max( ( CS / MUC ),DS ),MUC ) * CS ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.15517696360261568}, {"determining": "( Min( ACS ,Max( Min( FirstVNF_RAM_Server ,BR ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Min( ( Min( ( MUR - RCSe ) ,Max( ( DS - ( MUM * MUM ) ),( ( MUR - DS ) - RMSe ) ) ) * DS ) ,( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) )", "obj1": 0.8759842519685039, "obj2": 0.059301009382146504}, {"determining": "( Min( ACS ,AMS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + DS ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.8937007874015748, "obj2": 0.041850986141240526}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( Const - MDR ) ) / ( ACS + RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( Max( RMSe,( Min( ( RCSe * MUC ) ,( ( DS - MUM ) / ( DS - ( RCSe * MUM ) ) ) ) / ( MLU - RMSe ) ) ) - MUM )", "obj1": 0.5118110236220472, "obj2": 0.3732739191737132}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MDR + FirstVNF_RAM ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * BR ) / ( MDR * FirstVNF_Mem ) ) - CRS ) )", "choosing": "Min( ( Max( ( CS + MLU ),RRSe ) * Min( RCSe ,RMSe ) ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.4153543307086614, "obj2": 0.4611555983147414}, {"determining": "( ( ( Min( MDR ,FirstVNF_RAM_Server ) - DDR ) * RRS ) * ( CRS - ( ( ( MRS + Max( ( CRS + Min( ARS ,ARS ) ),FirstVNF_CPU ) ) * ARS ) / ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS + RRSe ) - ( MUM * ( MLU / MUC ) ) )", "obj1": 0.4862204724409449, "obj2": 0.3861464196584804}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( Max( MUC,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),Max( MUR,MUR ) ) )", "obj1": 0.812992125984252, "obj2": 0.1268630654711498}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM,BR ) ) ) ) ) / ( DDR - AMS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( MUM - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - ( ( MLU / MLU ) * Min( ( MLU / RRSe ) ,( MUM / ( MUR + CS ) ) ) ) ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.3227649662774387}, {"determining": "( Max( PN,ACS ) * ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( MRS + MRS ) ) * BR ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( Min( DS ,DS ) + ( DS + MUC ) ) / Max( DS,RCSe ) )", "obj1": 0.48031496062992124, "obj2": 0.3963508149877325}, {"determining": "( Max( ACS,FirstVNF_Mem ) - ( ( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * ( ACS - FirstVNF_RAM ) ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( ( RRSe + Max( MUC,( ( ( MLU / MUC ) / Max( MLU,MUR ) ) / MUR ) ) ),( RRSe / RCSe ) )", "obj1": 0.5452755905511811, "obj2": 0.3417585799810217}, {"determining": "Max( ( ( ( RRS - PN ) * Max( DDR,CRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( BR * CRS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( RCSe + ( ( CS + Max( MLU,MUM ) ) - MUC ) ) - DS ) ),MUR ) / ( MLU / ( DS * ( MLU / MLU ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8198884265464628}, {"determining": "( ( Const * ( FirstVNF_CPU_Server / ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "( ( ( ( ( ( Max( ( MUR * MUM ),( DS * MUC ) ) / ( MUR - ( RRSe / CS ) ) ) + MLU ) * CS ) - RCSe ) - ( MLU + MUR ) ) / ( DS + MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.6812259181574725}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "Max( Max( ( Const * Const ),( FirstVNF_CPU_Server - ( FirstVNF_RAM * RRS ) ) ),Max( Max( MRS,ARS ),( Const + PN ) ) )", "choosing": "( Min( ( MUM - MUC ) ,( RMSe - RRSe ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7817968947036406}, {"determining": "( ( Min( ( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( ( ( ( MUM + MUM ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.844488188976378, "obj2": 0.10607590673727786}, {"determining": "( ( ( ( Max( ( ACS + ( ( CRS + MDR ) * BR ) ),BR ) / FirstVNF_Mem_Server ) - FirstVNF_Mem ) / FirstVNF_RAM_Server ) - ( ( AMS + BR ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + MUM ) + MUM ) / Min( RCSe ,CS ) ) / ( ( MUC / RMSe ) / Max( MUM,MLU ) ) ),( RMSe + Min( DS ,RMSe ) ) )", "obj1": 0.8385826771653543, "obj2": 0.1171175378896677}, {"determining": "( ( Const * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.3484251968503937, "obj2": 0.5230485536666937}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - ( CS + MLU ) ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.0877725475575934}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / ( ARS - ( PN / FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM ,Const ) * FirstVNF_CPU ) )", "choosing": "( ( MUM + ( ( MUC - DS ) / RCSe ) ) / Max( ( MLU - Max( ( Max( CS,( ( MUC / RRSe ) / MUR ) ) * ( MUM + MUM ) ),MUM ) ),CS ) )", "obj1": 0.14173228346456693, "obj2": 0.7615381009286322}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( MRS * AMS ) - ( Const * Const ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) ) / ( DDR - AMS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( MUM - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - ( ( Min( ( MUM - MUC ) ,( RMSe - RRSe ) ) / MLU ) * DS ) ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.5649606299212598, "obj2": 0.31267092598100177}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6502599198292992}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( Const / Max( DDR,Max( FirstVNF_RAM,BR ) ) ) ) )", "choosing": "Max( Max( ( CS * DS ),( Min( ( DS * MUR ) ,( MUR + RCSe ) ) / ( CS - DS ) ) ),( ( ( RMSe / RCSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.48420688521109917}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( RRS / RRS ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - ( CS + MLU ) ) / MUR ) * Max( Min( ( DS * MUR ) ,( CS + RCSe ) ),( MUR - MUM ) ) ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8740157480314961, "obj2": 0.08484742871948547}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( CS,( ( ( ( MUC + MUM ) * RCSe ) * ( ( MUR * MUR ) + CS ) ) / MUM ) ) / RMSe ),MUR ) ,Min( RCSe ,DS ) )", "obj1": 0.43700787401574803, "obj2": 0.46041311103596083}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / BR ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * ARS ) )", "choosing": "( ( ( DS + MUR ) - ( Min( ( Max( MLU,RCSe ) - Min( ( ( RRSe * RRSe ) - RMSe ) ,MUC ) ) ,Min( ( Max( MUM,RMSe ) / RCSe ) ,MLU ) ) / MUR ) ) / ( MUM / DS ) )", "obj1": 0.10236220472440945, "obj2": 0.805706621264607}, {"determining": "( ( Min( FirstVNF_CPU ,Max( CRS,BR ) ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + CRS ) ) )", "choosing": "( ( MLU / MUC ) / Max( MUM,MLU ) )", "obj1": 0.1673228346456693, "obj2": 0.7076886236012944}, {"determining": "( ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / Max( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ,Const ) + FirstVNF_RAM ),( Const - ( PN - FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe / MUM ) - Min( CS ,( CS - ( ( MUR - Max( RCSe,CS ) ) / CS ) ) ) )", "obj1": 0.5728346456692913, "obj2": 0.27908905348376967}, {"determining": "( Max( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) ) * CRS ) ),( Min( Min( FirstVNF_CPU ,PN ) ,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( MUR,DS ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.04335239924870517}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * MRS ) - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( ( MUR * MLU ),CS ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( DS,DS ) ) ) ,MUM ) - Min( ( Min( MUR ,MUC ) - ( MUM / DS ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.34669548794826793}, {"determining": "( ( ( ARS * FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) + ( FirstVNF_Mem + ARS ) )", "choosing": "( Max( CS,RMSe ) / Max( MLU,( MUR + ( ( ( Max( ( MUR * MLU ),MUR ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( DS,DS ) ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7377041231605709}, {"determining": "( Max( ACS,Max( FirstVNF_Mem,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( ( AMS + ( Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( DS / ( RRSe * MUC ) ) + Min( MUM ,( ( Min( ( ( DS - RMSe ) - CS ) ,( DS / DS ) ) * RRSe ) - RMSe ) ) ) / ( RRSe - RMSe ) )", "obj1": 0.734251968503937, "obj2": 0.1740880836016263}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.3228346456692913, "obj2": 0.5424880324269707}, {"determining": "Max( Max( FirstVNF_CPU,BR ),( FirstVNF_RAM_Server / Max( FirstVNF_CPU_Server,( FirstVNF_RAM * CRS ) ) ) )", "choosing": "Min( ( MUR - Min( ( DS + RMSe ) ,Min( CS ,MUR ) ) ) ,Max( RMSe,MUC ) )", "obj1": 0.281496062992126, "obj2": 0.5831279858924849}, {"determining": "( Max( PN,ACS ) * Min( MDR ,Max( BR,FirstVNF_CPU ) ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.22244094488188976, "obj2": 0.6206911394886179}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) ) / ( DDR - AMS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( MUM - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - ( ( MLU / MLU ) * DS ) ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.5275590551181102, "obj2": 0.3591187179111727}, {"determining": "( ( Min( FirstVNF_CPU ,Max( CRS,BR ) ) - ( FirstVNF_Mem - ( BR / MDR ) ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + CRS ) ) )", "choosing": "Min( ( MUR - MUR ) ,( Min( RCSe ,MUM ) + Max( CS,DS ) ) )", "obj1": 0.9665354330708661, "obj2": 0.01608801353858455}, {"determining": "( Max( Const,( BR / ( ( BR + FirstVNF_Mem_Server ) / DDR ) ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( Min( ( ( ( ( ( MUR * MUC ) / ( DS - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) ,Min( Max( MUM,( RRSe - RMSe ) ) ,RRSe ) ) ,( DS / MUM ) )", "obj1": 0.29133858267716534, "obj2": 0.5727200404058872}, {"determining": "( ( ( ARS + ACS ) / ( FirstVNF_Mem_Server + CRS ) ) + Min( ( CRS + FirstVNF_CPU ) ,( ( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MLU / RRSe ) ,( MUM / ( MUR + CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5585803323322388}, {"determining": "Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( ( DDR + ( FirstVNF_Mem / ACS ) ) + Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) - FirstVNF_Mem_Server ),MDR ),( Const * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC * CS ) + MUR ) + RMSe ) - ( RCSe * ( RMSe + Max( MUM,MLU ) ) ) ) / ( RRSe + DS ) ) * RMSe ),( ( DS - RMSe ) / RMSe ) ) - Min( ( CS / RMSe ) ,Max( MUM,MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6148232149865687}, {"determining": "( ( Const * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.3405511811023622, "obj2": 0.5295402621274647}, {"determining": "( Max( BR,Min( FirstVNF_Mem ,( ( DDR + ACS ) * ( FirstVNF_Mem_Server + Min( Const ,( ( DDR + Const ) - ( CRS - MDR ) ) ) ) ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( Const - MDR ) / ( MRS - FirstVNF_CPU_Server ) ) ) * MRS ) ),( Min( Min( FirstVNF_CPU ,PN ) ,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( ( ( DS + ( RMSe * Min( MLU ,MUM ) ) ) - RMSe ),RRSe ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5135957936725878}, {"determining": "( Max( ( Max( ( ARS + PN ),FirstVNF_RAM_Server ) / Min( Const ,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,( ( DDR + ACS ) * ( FirstVNF_Mem_Server + ( Const - ( ( DDR + Const ) - ( CRS - MDR ) ) ) ) ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) ) * MRS ) ),( Min( Min( FirstVNF_CPU ,PN ) ,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( ( ( Min( RCSe ,MUM ) + ( DS * Min( MLU ,MUM ) ) ) - RMSe ),RRSe ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5379679423558484}, {"determining": "( Max( ACS,FirstVNF_Mem ) - ( ( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,MUR ) )", "obj1": 0.718503937007874, "obj2": 0.18042321226373823}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) / ( DDR - FirstVNF_CPU_Server ) ) ) ) / ( DDR + MRS ) ) ),( ( ( Min( AMS ,ACS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( Max( Min( ( MUR * Max( RRSe,Min( ( ( MLU * RCSe ) * ( MUR + MUR ) ) ,( MLU + RMSe ) ) ) ) ,( CS + RCSe ) ),( MUR - MUM ) ) - MUM )", "obj1": 0.5196850393700787, "obj2": 0.36293839624588864}, {"determining": "( ( Min( ( Max( ARS,Min( ARS ,BR ) ) / Min( CRS ,CRS ) ) ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( Const - MDR ) ) )", "choosing": "( Max( RMSe,( ( RRSe + MUC ) * Min( MUR ,DS ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6062992125984252, "obj2": 0.260387927609223}, {"determining": "( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( ( MLU - Max( MLU,MUM ) ) / ( MUR + CS ) )", "obj1": 0.5688976377952756, "obj2": 0.2933003607400364}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "( ( DS - RCSe ) - Min( CS ,MUM ) )", "obj1": 0.5885826771653543, "obj2": 0.27335440068120875}, {"determining": "( ( ( Const * ( RRS / ( CRS * RRS ) ) ) * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( MLU * RRSe ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6412543951808312}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Min( BR ,Min( ( DDR / FirstVNF_CPU_Server ) ,CRS ) ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / Max( DS,MUC ) ) - ( ( ( Max( ( RRSe * ( RCSe * MUR ) ),MUM ) + ( MUM - RCSe ) ) - RRSe ) - ( ( Max( RMSe,MUR ) * ( MLU * Min( MUR ,RRSe ) ) ) / DS ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7949344644833652}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MLU + MUM ) / RMSe ) / ( RRSe - ( MLU - ( Max( ( ( CS + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + MUM ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6313921734006921}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( BR,FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.15807205260251384}, {"determining": "( Max( PN,ACS ) * Min( ( ACS - Const ) ,( ( ( ( Min( ACS ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) * ( CRS - MDR ) ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * BR ) / ( FirstVNF_RAM_Server + DDR ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( ( ( DS - CS ) - Min( RCSe ,MLU ) ),( ( ( RCSe + CS ) * Min( RCSe ,( RMSe / MUR ) ) ) / RRSe ) ) )", "obj1": 0.9822834645669292, "obj2": 0.010895013903513894}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - RRS ) )", "choosing": "( ( ( Max( ( ( CS + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( ( DS / ( DS * MUC ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) ) / ( ( Max( Max( MLU,( MUC - MUR ) ),( DS + CS ) ) / MLU ) * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.11614173228346457, "obj2": 0.7996325699182133}, {"determining": "( ( Const * ( ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) / ( CRS * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( ( RRSe - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) ,( RMSe - CS ) )", "obj1": 0.25393700787401574, "obj2": 0.6017917055323965}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "Min( ( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) ,Min( DS ,Max( ( ( ( ( Max( MUR,DS ) + MUM ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) ) ) )", "obj1": 0.65748031496063, "obj2": 0.23758265999439282}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5920357388442476}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * ( ( Const - MDR ) * AMS ) ) )", "choosing": "( ( ( MLU + MUM ) / RMSe ) / ( RRSe - ( MLU - ( Max( ( ( CS + ( DS + CS ) ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( ( DS / ( DS * MUC ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) ) ) ) )", "obj1": 0.5984251968503937, "obj2": 0.2691127263711346}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( ACS - MDR ) ) * ( RRS / ( CRS * RRS ) ) ) * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( RMSe / MUM ) - Min( MUM ,RRSe ) )", "obj1": 0.2125984251968504, "obj2": 0.6370407928374384}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe + ( RMSe - RMSe ) ) ,( ( MUM + CS ) / ( CS - DS ) ) ),( ( RCSe - Min( RCSe ,RRSe ) ) - Max( ( MLU + MUM ),Max( MUR,MUR ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.24091560297337816}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Min( BR ,Min( ( DDR / FirstVNF_CPU_Server ) ,CRS ) ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / Max( DS,MUC ) ) - ( ( ( Max( ( RRSe * ( RCSe * MUR ) ),MUM ) + ( MUM - RCSe ) ) - RRSe ) - ( ( Max( RMSe,MUR ) * ( MLU * Min( MUR ,RRSe ) ) ) / DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6471870999782813}, {"determining": "( Max( ACS,FirstVNF_Mem ) - ( ( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) )", "obj1": 0.75, "obj2": 0.16951870370419758}, {"determining": "( ( ARS / ( Min( FirstVNF_RAM ,ACS ) * FirstVNF_RAM ) ) * Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / MUR ) - Min( CS ,MUM ) )", "obj1": 0.24606299212598426, "obj2": 0.6125890892524164}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( ( Min( ARS ,FirstVNF_CPU ) * Const ) + AMS ) ) ),( ACS - ( ( FirstVNF_RAM + MRS ) - ( ( Max( MDR,( ( Const - MDR ) * AMS ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( Max( ( MUC - MUR ),MLU ),( DS / CS ) ) / MLU ) * DS ) ) / Max( Max( DS,RCSe ),MUR ) )", "obj1": 0.14566929133858267, "obj2": 0.7522695162460593}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "Min( ( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.655511811023622, "obj2": 0.23994327818221015}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( MLU / MLU ) * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.11811023622047244, "obj2": 0.7963509609076986}, {"determining": "Max( ( ( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) )", "choosing": "( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.7012039571172145}, {"determining": "( Max( ACS,FirstVNF_Mem ) - ( ( ( Min( MDR ,FirstVNF_RAM ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( ( MLU / MUC ) / Max( ( MLU - Max( MLU,MUM ) ),MUR ) ) )", "obj1": 0.7440944881889764, "obj2": 0.1723395543778936}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - DS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6141732283464567, "obj2": 0.25608419913545377}, {"determining": "( FirstVNF_CPU_Server + Max( ACS,Min( PN ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( CS,( CS / MUM ) ) / MUM ) / Max( MUM,( MUR * DS ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6922578042754671}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( CS * ( ( ( MUR * MUC ) / ( RRSe - ( ( MUR - MLU ) - ( ( DS * RRSe ) * ( RCSe / MUR ) ) ) ) ) * MUM ) ) - Min( ( Min( MUR ,MUC ) - ( MUM / DS ) ) ,( ( CS / RRSe ) / Min( MUR ,CS ) ) ) )", "obj1": 0.9625984251968503, "obj2": 0.02299298994425096}, {"determining": "( Max( Const,( BR / ( ( BR + FirstVNF_Mem_Server ) / RRS ) ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( Min( ( ( ( ( ( MUR * MUC ) / ( DS - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) ,Min( Max( MUM,MUR ) ,RRSe ) ) ,( DS / MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.5654555089401078}, {"determining": "( ( Min( FirstVNF_RAM_Server ,ACS ) - ( ( MDR + FirstVNF_CPU_Server ) - AMS ) ) / ( ( FirstVNF_RAM + MDR ) / ( FirstVNF_CPU + PN ) ) )", "choosing": "( ( Min( RCSe ,Max( MLU,CS ) ) * ( MUM * MUR ) ) / ( Min( ( ( Min( MLU ,( MUM - RMSe ) ) / MUM ) / Max( ( RRSe + ( RRSe - CS ) ),( MUR * CS ) ) ) ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.37598425196850394, "obj2": 0.5118706647370208}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - CRS ) )", "choosing": "( ( DS / Max( MLU,( MLU / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.24803149606299213, "obj2": 0.6050126738237325}, {"determining": "( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( ( MUM - MUC ) ,( RMSe - RRSe ) ) / MLU ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.5708661417322834, "obj2": 0.2911409595636795}, {"determining": "( ( ( MRS + CRS ) - ( ( Max( ( Max( PN,( MDR / MRS ) ) * DDR ),Max( ( ( MRS - CRS ) * ( FirstVNF_Mem * Const ) ),ACS ) ) + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem + ( ( ( ( ( Max( DDR,FirstVNF_CPU ) - FirstVNF_Mem_Server ) - ( Max( AMS,ACS ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) / FirstVNF_Mem ) * AMS ) * RRS ) ) )", "choosing": "( ( MLU / MUM ) / Max( Max( ( ( ( DS / Max( CS,RCSe ) ) + MLU ) + CS ),MUC ),MLU ) )", "obj1": 0.9606299212598425, "obj2": 0.02924989052785105}, {"determining": "( ( Const * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895022739857763}, {"determining": "( ( Min( ( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server + CRS ) ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( ( ( ( MUM + MUM ) / MUM ) / ( ( DS * RRSe ) * ( RCSe / MUR ) ) ) ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.8405511811023622, "obj2": 0.11153425655462104}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - ACS ) ) - ( FirstVNF_RAM - ( PN - ( ( FirstVNF_Mem_Server * Min( PN ,Min( Const ,FirstVNF_CPU ) ) ) / BR ) ) ) ) ,Max( ACS,( ( MDR - Const ) * DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5674492617475534}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - ( CS + MLU ) ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8641732283464567, "obj2": 0.08542796987789204}, {"determining": "( ( FirstVNF_Mem_Server + ( Min( ( DDR * FirstVNF_Mem ) ,AMS ) - MDR ) ) + Max( ACS,Min( PN ,Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU / MUC ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,Max( MUR,( CS + ( ( ( MLU * Max( MUM,RMSe ) ) + MUM ) * RMSe ) ) ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7481035553799478}, {"determining": "( ( ( BR / AMS ) + FirstVNF_RAM ) / ( Max( ( Max( MDR,( PN + FirstVNF_Mem_Server ) ) / PN ),Max( DDR,ACS ) ) - ( ( FirstVNF_Mem / FirstVNF_CPU ) * ( BR * RRS ) ) ) )", "choosing": "( ( RRSe - RMSe ) / ( ( CS * MLU ) + Min( RCSe ,RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0032502200492830094}, {"determining": "( Max( BR,Min( FirstVNF_Mem ,( ( DDR + ACS ) * ( FirstVNF_Mem_Server + Min( Const ,( ( DDR + Const ) - ( CRS - MDR ) ) ) ) ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( RRS * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) ) * MRS ) ),( Min( Min( FirstVNF_CPU ,PN ) ,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( ( ( MUM * MUR ) - RMSe ),RRSe ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.5028906723679414}, {"determining": "( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.695725117478396}, {"determining": "( Max( PN,ACS ) * ( ( ( ( MRS + RRS ) * BR ) / ( MDR * FirstVNF_Mem ) ) - CRS ) )", "choosing": "( ( MUC / MUR ) / Max( MUM,MUC ) )", "obj1": 0.9881889763779528, "obj2": 0.0037393769415988787}, {"determining": "( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( MUC / MUR ) / Max( MUM,RCSe ) ) ) - CS ) )", "obj1": 0.59251968503937, "obj2": 0.2705670799835285}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( MLU / MUC ) / Max( MUM,MLU ) )", "obj1": 0.9606299212598425, "obj2": 0.02924989052785105}, {"determining": "( Max( BR,Min( FirstVNF_Mem ,( ( DDR + ACS ) * ( FirstVNF_Mem_Server + Min( Const ,( ( DDR + Const ) + ( CRS - MDR ) ) ) ) ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) ) * MRS ) ),( Min( ACS ,( DDR / ( PN * RRS ) ) ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + MLU ) ,( Max( Min( ( ( Max( RCSe,CS ) / MLU ) / ( MUC + Min( RRSe ,RCSe ) ) ) ,RMSe ),RRSe ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5616127402879172}, {"determining": "Max( ( MDR / MDR ),Min( ( FirstVNF_RAM + Max( Max( MRS,FirstVNF_Mem ),FirstVNF_CPU ) ) ,RRS ) )", "choosing": "Max( ( MLU / ( MLU - MUC ) ),Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.490390840010288}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - CRS ) )", "choosing": "( ( DS / Max( MLU,( MLU / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.27165354330708663, "obj2": 0.5857847121754066}, {"determining": "Max( Min( RRS ,Max( RRS,( MRS + FirstVNF_CPU ) ) ),( FirstVNF_CPU - Const ) )", "choosing": "Max( Max( ( CS * ( CS + Max( MLU,RMSe ) ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) ,Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.497805662908171}], "7": [{"determining": "Min( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - ACS ) ) - ( FirstVNF_RAM - ( PN - ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / BR ) ) ) ) ,Max( ACS,( ( MDR - Const ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * ( ( ( MUR * MUC ) / ( RRSe - ( ( MUR - MLU ) - ( ( DS * MUC ) * ( RCSe / RMSe ) ) ) ) ) * MUM ) ) - Min( ( Min( MUR ,MUC ) - ( MUM / DS ) ) ,( ( CS / RRSe ) / Min( CS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - ACS ) ) - ( FirstVNF_RAM - ( PN - ( ( FirstVNF_Mem_Server * Min( PN ,Min( Const ,FirstVNF_CPU ) ) ) / BR ) ) ) ) ,Max( ACS,( ( MDR - Const ) * DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( ( DDR / PN ) - ACS ),( ( Const - MDR ) * AMS ) ) - Max( ( ( DDR / PN ) - ACS ),( ( Const - MDR ) * AMS ) ) ) ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08267716535433071, "obj2": 0.8783844373918653}, {"determining": "Min( ( ( ARS + BR ) - AMS ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - MUC ) ),( DS + CS ) ),RMSe ) ,Min( ( RRSe - ( Min( RRSe ,MUC ) + RCSe ) ) ,RCSe ) ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.22167959508314564}, {"determining": "( Max( ACS,FirstVNF_Mem ) - ( ( ( Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( Min( ( MUR + ( ( ( Max( CS,( CS / MUM ) ) / MUM ) / Max( MUM,( MUR * DS ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.18289572198055987}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( Max( DDR,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / ( ACS - ( DDR * ( FirstVNF_RAM - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( MUM / Min( MUM ,CS ) ) + Min( ( Min( ( Max( ( MLU + MUM ),( MLU - MUC ) ) - ( MUR - RCSe ) ) ,( RCSe / ( DS * MUC ) ) ) + RMSe ) ,( DS / DS ) ) ) )", "obj1": 0.9488188976377953, "obj2": 0.04069317994188473}, {"determining": "( Max( ( Max( FirstVNF_RAM,( FirstVNF_Mem - Max( ( ( DDR / PN ) - ACS ),( ( Const - MDR ) * AMS ) ) ) ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( MLU / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09448818897637795, "obj2": 0.8419747572301952}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( BR,FirstVNF_CPU ) ) * Min( MDR ,MRS ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUC ) / ( RRSe - Min( MUR ,( Max( Max( ( CS / MUC ),DS ),MUC ) * CS ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.15517696360261568}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) / ( ( FirstVNF_Mem - Max( PN,( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) / ( FirstVNF_CPU - ACS ) ) )", "choosing": "( ( ( DS + ( ( ( Max( MUM,( RMSe / RMSe ) ) - Min( Max( DS,MUR ) ,RCSe ) ) / MUM ) / MUR ) ) * Min( ( MLU * RCSe ) ,( MLU * DS ) ) ) / ( Min( MUC ,Min( ( ( MUM + MUM ) * MUM ) ,( ( DS * RRSe ) * ( RCSe / MUR ) ) ) ) / ( MLU / CS ) ) )", "obj1": 0.7992125984251969, "obj2": 0.1418592997859615}, {"determining": "( Min( ACS ,AMS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + DS ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.8937007874015748, "obj2": 0.041850986141240526}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( Const - MDR ) ) / ( ACS + RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( Max( RMSe,( Min( ( RCSe * MUC ) ,( ( DS - MUM ) / ( DS - ( RCSe * MUM ) ) ) ) / ( MLU - RMSe ) ) ) - MUM )", "obj1": 0.5118110236220472, "obj2": 0.3732739191737132}, {"determining": "( Max( ACS,Max( Min( FirstVNF_RAM_Server ,BR ),( FirstVNF_CPU + ( FirstVNF_CPU_Server - ACS ) ) ) ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Min( ( Min( ( MUR - RCSe ) ,Max( ( DS - ( RMSe * RCSe ) ),( ( MUR - DS ) - RMSe ) ) ) / DS ) ,( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) )", "obj1": 0.8759842519685039, "obj2": 0.05829471224571631}, {"determining": "( ( ( Min( MDR ,FirstVNF_RAM_Server ) - DDR ) * RRS ) * ( CRS - ( ( ( MRS + Max( ( CRS + Min( ARS ,ARS ) ),FirstVNF_CPU ) ) * ARS ) / ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS + RRSe ) - ( MUM * ( MLU / MUC ) ) )", "obj1": 0.4862204724409449, "obj2": 0.3861464196584804}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( ACS,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) ) )", "obj1": 0.47834645669291337, "obj2": 0.4249502222311897}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( ACS,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server )", "choosing": "Max( Max( ( CS * ( CS + Max( MLU,RMSe ) ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) ,Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4704724409448819, "obj2": 0.43515747906896346}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "( Max( PN,ACS ) * ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( MRS + MRS ) ) * BR ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( Min( DS ,DS ) + ( DS + MUC ) ) / Max( DS,RCSe ) )", "obj1": 0.48031496062992124, "obj2": 0.3963508149877325}, {"determining": "Max( ( ( ( RRS - PN ) * Max( DDR,CRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( BR * CRS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( RCSe + ( ( CS + Max( MLU,MUM ) ) - MUC ) ) - DS ) ),MUR ) / ( MLU / ( DS * ( MLU / MLU ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8198884265464628}, {"determining": "( ( Const * ( FirstVNF_CPU_Server / ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "( ( ( ( ( ( Max( ( MUR * MUM ),( DS * MUC ) ) / ( MUR - ( RRSe / CS ) ) ) + MLU ) * CS ) - RCSe ) - ( MLU + MUR ) ) / ( DS + MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.6812259181574725}, {"determining": "( ( AMS + ( ( ( Max( BR,( Min( AMS ,FirstVNF_Mem ) + ( FirstVNF_Mem_Server * ARS ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + BR ) + MRS ) )", "choosing": "Min( Min( ( ( ( ( ( Min( MUM ,MLU ) * ( MUC - MUC ) ) / MUR ) * MUM ) + CS ) + RRSe ) ,( Max( RRSe,( MUM - RRSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * RRSe ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8661417322834646, "obj2": 0.08249214494883995}, {"determining": "( ( Const * ( AMS / ( ( FirstVNF_Mem_Server - CRS ) * DDR ) ) ) / ( ( ( FirstVNF_CPU + Const ) + RRS ) + ( ( FirstVNF_Mem + AMS ) - DDR ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( ( MUM * DS ) + Max( RCSe,RMSe ) ) ) - MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.36023622047244097, "obj2": 0.5103401135486023}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6502599198292992}, {"determining": "( ( Min( ACS ,AMS ) * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( Min( CS ,MUM ) * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.3484251968503937, "obj2": 0.5226413601492598}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / ( ARS - ( PN / FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM ,Const ) * FirstVNF_CPU ) )", "choosing": "( ( MUM + ( ( MUC - DS ) / RCSe ) ) / Max( ( MLU - Max( ( Max( CS,( ( MUC / RRSe ) / MUR ) ) * ( MUM + MUM ) ),MUM ) ),CS ) )", "obj1": 0.14173228346456693, "obj2": 0.7615381009286322}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MDR + FirstVNF_RAM ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * BR ) / ( MDR * FirstVNF_Mem ) ) - CRS ) )", "choosing": "Min( ( Max( ( CS + MLU ),RRSe ) * Min( RCSe ,RMSe ) ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.4153543307086614, "obj2": 0.4611555983147414}, {"determining": "Max( ( ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) + FirstVNF_CPU ),( ( FirstVNF_Mem_Server / ( DDR - ARS ) ) / Const ) )", "choosing": "( Max( ( RRSe + Max( MLU,( ( ( MUC - MUM ) - MUC ) / ( RCSe - RCSe ) ) ) ),( RRSe / MUM ) ) / ( MUR + RCSe ) )", "obj1": 0.1673228346456693, "obj2": 0.704420543415858}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / BR ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * ARS ) )", "choosing": "( ( ( DS + MUR ) - ( Min( ( Max( MLU,RCSe ) - Min( ( ( RRSe * RRSe ) - RMSe ) ,MUC ) ) ,Min( ( Max( MUM,RMSe ) / RCSe ) ,MLU ) ) / MUR ) ) / ( MUM / DS ) )", "obj1": 0.10236220472440945, "obj2": 0.805706621264607}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( RRS / RRS ) + DDR ) + FirstVNF_CPU ) ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( Max( DS,( MUM - MUM ) ) - MUM )", "obj1": 0.4507874015748031, "obj2": 0.4458440738385495}, {"determining": "Min( ( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.11758455735032852}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - ( CS + MLU ) ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8523622047244095, "obj2": 0.09541826643263214}, {"determining": "( Max( ACS,FirstVNF_Mem ) - ( ( ( ( MDR + DDR ) + MDR ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( MUM,Max( DS,( DS - RRSe ) ) ) / Max( MLU,MUR ) )", "obj1": 0.9763779527559056, "obj2": 0.008549757832111848}, {"determining": "( Max( ACS,Max( FirstVNF_Mem,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( ( AMS + ( Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( DS / ( RRSe * MUC ) ) + Min( MUM ,( ( Min( ( ( DS - RMSe ) - CS ) ,( DS / DS ) ) * RRSe ) - RMSe ) ) ) / ( RRSe - RMSe ) )", "obj1": 0.734251968503937, "obj2": 0.1740880836016263}, {"determining": "( Max( ACS,Max( FirstVNF_Mem,Max( ACS,( FirstVNF_RAM_Server * ( FirstVNF_Mem - ( MRS - CRS ) ) ) ) ) ) - ( ( AMS + ( ( ( ( BR + ( ACS - Const ) ) / DDR ) - MDR ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MLU + RRSe ) * ( RMSe + MUR ) ) * ( Min( MUR ,DS ) * Max( MUC,RCSe ) ) ),Max( ( Max( ( RMSe * ( RMSe * MLU ) ),( Max( ( Min( DS ,MUM ) - CS ),MLU ) + MUM ) ) - MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) )", "obj1": 0.41141732283464566, "obj2": 0.47176019374798017}, {"determining": "( ( ( ARS * FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) + ( FirstVNF_Mem + ARS ) )", "choosing": "( Max( CS,RMSe ) / Max( MLU,( MUR + ( ( ( Max( ( MUR * MLU ),MUR ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( DS,DS ) ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7377041231605709}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( CS,( ( ( ( MUC + MUM ) * RCSe ) * ( ( MUR * MUR ) + CS ) ) / MUM ) ) / RMSe ),MUR ) ,Min( RCSe ,DS ) )", "obj1": 0.43700787401574803, "obj2": 0.46041311103596083}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - DS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5740494842543363}, {"determining": "( Max( PN,ACS ) * Min( MDR ,Max( BR,FirstVNF_CPU ) ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.22244094488188976, "obj2": 0.6206911394886179}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( Max( MUC,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),Max( MUR,MUR ) ) )", "obj1": 0.812992125984252, "obj2": 0.1268630654711498}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) ) / ( DDR - AMS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( MUM - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - ( ( MLU / MLU ) * DS ) ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.5275590551181102, "obj2": 0.3591187179111727}, {"determining": "( Min( ( Min( ( CRS * MDR ) ,FirstVNF_CPU_Server ) / ( Max( ( Max( PN,( MDR / MRS ) ) * DDR ),Max( ( ( MRS - CRS ) * ( FirstVNF_Mem * Const ) ),ACS ) ) + FirstVNF_CPU_Server ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( ( MLU - Max( MLU,( ( ( DS / Max( ( MUC / MUC ),RCSe ) ) + MLU ) + CS ) ) ) / ( MUR + CS ) )", "obj1": 0.5590551181102362, "obj2": 0.3078441809270025}, {"determining": "( Min( ACS ,Max( ( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) * ( Const - MDR ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Min( ( ( MLU - Max( MLU,MUM ) ) * DS ) ,( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) )", "obj1": 0.8838582677165354, "obj2": 0.04522224729619626}, {"determining": "( ( ACS * PN ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( CS / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( CS,RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.7145669291338582, "obj2": 0.17710734823285643}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) / ( DDR - FirstVNF_CPU_Server ) ) ) ) / ( DDR + MRS ) ) ),( ( ( Min( AMS ,ACS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( Max( Min( ( MUR * Max( RRSe,Min( ( ( MLU * RCSe ) * ( MUR + MUR ) ) ,( MLU + RMSe ) ) ) ) ,( CS + RCSe ) ),( MUR - MUM ) ) - MUM )", "obj1": 0.5196850393700787, "obj2": 0.36293839624588864}, {"determining": "( ( ( ( Max( ( ACS + ( ( CRS + MDR ) * BR ) ),BR ) / FirstVNF_Mem_Server ) - FirstVNF_Mem ) / FirstVNF_RAM_Server ) - ( ( AMS + BR ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + MUM ) + MUM ) / Min( RCSe ,CS ) ) / ( ( MUC / RMSe ) / Max( MUM,MLU ) ) ),( RMSe + Min( DS ,RMSe ) ) )", "obj1": 0.8385826771653543, "obj2": 0.1171175378896677}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - CRS ) )", "choosing": "( ( DS / Max( MLU,( MLU / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.27165354330708663, "obj2": 0.5857847121754066}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( MUM,( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.8011811023622047, "obj2": 0.1338828013560041}, {"determining": "( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( ( MUM - MUC ) ,( RMSe - RRSe ) ) / MLU ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.5688976377952756, "obj2": 0.29130077395533804}, {"determining": "( ( Min( FirstVNF_CPU ,Max( CRS,BR ) ) - ( FirstVNF_Mem - ( BR / MDR ) ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + CRS ) ) )", "choosing": "Min( ( MUR - MUR ) ,( Min( RCSe ,MUM ) + Max( CS,DS ) ) )", "obj1": 0.9665354330708661, "obj2": 0.016088013538584547}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( Const / Max( DDR,Max( FirstVNF_RAM,BR ) ) ) ) )", "choosing": "Max( Max( ( CS * DS ),( Min( ( DS * MUR ) ,( MUR + RCSe ) ) / ( CS - DS ) ) ),( ( ( RMSe / RCSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.48420688521109917}, {"determining": "( ( Min( ( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( ( ( ( MUM + MUM ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.844488188976378, "obj2": 0.10607590673727786}, {"determining": "Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( ( DDR + ( FirstVNF_Mem / ACS ) ) + Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) - FirstVNF_Mem_Server ),MDR ),( Const * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC * CS ) + MUR ) + RMSe ) - ( RCSe * ( RMSe + Max( MUM,MLU ) ) ) ) / ( RRSe + DS ) ) * RMSe ),( ( DS - RMSe ) / RMSe ) ) - Min( ( CS / RMSe ) ,Max( MUM,MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6148232149865687}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Min( BR ,Min( ( DDR / FirstVNF_CPU_Server ) ,CRS ) ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / Max( DS,MUC ) ) - ( ( ( Max( ( RRSe * ( RCSe * MUR ) ),MUM ) + ( MUM - RCSe ) ) - RRSe ) - ( ( Max( RMSe,MUR ) * ( MLU * Min( MUR ,RRSe ) ) ) / DS ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7949344644833652}, {"determining": "Max( Max( ( Const * Const ),( FirstVNF_CPU_Server - ( Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) * RRS ) ) ),Max( Max( MRS,ARS ),( Const + PN ) ) )", "choosing": "( Min( ( MUM - MUC ) ,Max( MUC,DS ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7811467932924693}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MLU + MUM ) / RMSe ) / ( RRSe - ( MLU - ( Max( ( ( CS + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + MUM ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6313921734006921}, {"determining": "( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( Max( MUM,RRSe ) * DS ) ,( RCSe + RMSe ) ) * ( ( MUC / MUR ) / Max( MUM,RCSe ) ) ) - CS ) )", "obj1": 0.30708661417322836, "obj2": 0.5592035669810609}, {"determining": "( ( Max( FirstVNF_CPU_Server,( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( MUM - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.33267716535433073, "obj2": 0.5348394814318762}, {"determining": "( ( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( Const - MDR ) ) )", "choosing": "( Max( RMSe,DS ) - Max( ( ( Min( ( RMSe * Max( Max( RCSe,MUM ),MUR ) ) ,MUM ) / Max( MLU,Max( RCSe,RCSe ) ) ) + RCSe ),( ( RRSe * RRSe ) - CS ) ) )", "obj1": 0.6200787401574803, "obj2": 0.2542446449744837}, {"determining": "( ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / Max( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ,Const ) + FirstVNF_RAM ),( Const - ( PN - FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe / MUM ) - Min( CS ,( CS - ( ( MUR - Max( RCSe,CS ) ) / CS ) ) ) )", "obj1": 0.5728346456692913, "obj2": 0.27908905348376967}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe + ( RMSe - RMSe ) ) ,( ( MUM + CS ) / ( CS - DS ) ) ),( ( RCSe - Min( RCSe ,RRSe ) ) - Max( ( MLU + MUM ),Max( MUR,MUR ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.24091560297337816}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - RRS ) )", "choosing": "( ( ( Max( ( ( CS + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( ( DS / ( DS * MUC ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) ) / ( ( Max( Max( MLU,( MUC - MUR ) ),( DS + CS ) ) / MLU ) * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.11614173228346457, "obj2": 0.7996325699182133}, {"determining": "( ( Min( ACS ,AMS ) * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.3700787401574803, "obj2": 0.5051882812036668}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( Min( ( CS / RMSe ) ,( DS + MUR ) ) - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6002630378707448}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - CRS ) )", "choosing": "( ( DS / Max( MLU,( MLU / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.24803149606299213, "obj2": 0.6050126738237325}, {"determining": "( ( Min( ( Max( ARS,Min( ARS ,BR ) ) / Min( CRS ,CRS ) ) ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( Const - MDR ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.6299212598425197, "obj2": 0.24639077243426397}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * MRS ) - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( ( MUR * MLU ),CS ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( DS,DS ) ) ) ,MUM ) - Min( ( Min( MUR ,MUC ) - ( MUM / DS ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.34669548794826793}, {"determining": "( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( MUC / MUR ) / Max( MUM,RCSe ) ) ) - CS ) )", "obj1": 0.594488188976378, "obj2": 0.2678676213334709}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( ACS - MDR ) ) * ( RRS / ( CRS * RRS ) ) ) * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( RMSe / MUM ) - Min( MUM ,RRSe ) )", "obj1": 0.2125984251968504, "obj2": 0.6370407928374384}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( ( Min( ARS ,FirstVNF_CPU ) * Const ) + AMS ) ) ),( ACS - ( ( FirstVNF_RAM + MRS ) - ( ( Max( MDR,( ( Const - MDR ) * AMS ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( Max( ( MUC - MUR ),MLU ),( DS / CS ) ) / MLU ) * DS ) ) / Max( Max( DS,RCSe ),MUR ) )", "obj1": 0.14566929133858267, "obj2": 0.7522695162460593}, {"determining": "Max( ( Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) ) - Const ),Min( RRS ,( Const / ( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( ( CS * DS ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / MLU ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4409448818897638, "obj2": 0.4490996800587823}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "( Max( PN,ACS ) * ( ( ( ( MRS + RRS ) * BR ) / ( MDR * FirstVNF_Mem ) ) - CRS ) )", "choosing": "( ( MUC / MUR ) / Max( MUM,MUC ) )", "obj1": 0.9881889763779528, "obj2": 0.0037393769415988787}, {"determining": "( ( FirstVNF_Mem_Server + ( Min( ( DDR * FirstVNF_Mem ) ,AMS ) - MDR ) ) + Max( ACS,Min( PN ,Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU / MUC ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,Max( MUR,( CS + ( ( ( MLU * Max( MUM,RMSe ) ) + MUM ) * RMSe ) ) ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7481035553799478}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "( MUM - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - ( ( MLU / MLU ) * DS ) ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.5531496062992126, "obj2": 0.32308985721890543}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5920357388442476}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - ( CS + MLU ) ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.0877725475575934}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( DS / Max( MLU,( MLU / Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6088674029307065}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU * AMS ) ),( ( ( Min( ( Min( MDR ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ,AMS ) * ( Const - MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) )", "choosing": "( ( DS + ( ( ( MUM * ( MLU / Max( RRSe,MUM ) ) ) - ( RCSe / MUR ) ) * ( ( MUM * MUR ) + Max( DS,MLU ) ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5551181102362205, "obj2": 0.30919883838898843}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM,BR ) ) ) ) ) / ( DDR - AMS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( MUM - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - ( ( MLU / MLU ) * Min( ( MLU / RRSe ) ,( MUM / ( MUR + CS ) ) ) ) ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.5452755905511811, "obj2": 0.3339013381783252}, {"determining": "Max( ( Const - FirstVNF_CPU ),Min( RRS ,( MDR + Max( Max( MRS,FirstVNF_Mem ),( ( ( FirstVNF_Mem / RRS ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) * ( DS * Max( MUC,RCSe ) ) ),Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4970464178971632}, {"determining": "( Max( BR,Min( FirstVNF_Mem ,( ( DDR + ACS ) * ( FirstVNF_Mem_Server + Min( Const ,( ( DDR + Const ) - ( CRS - MDR ) ) ) ) ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( RRS * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) ) * MRS ) ),( Min( Min( FirstVNF_CPU ,PN ) ,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( ( ( MUM * MUR ) - RMSe ),RRSe ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.5028906723679414}, {"determining": "Max( ( MDR / MDR ),Min( ( FirstVNF_RAM + Max( Max( MRS,FirstVNF_Mem ),FirstVNF_CPU ) ) ,RRS ) )", "choosing": "Max( ( MLU / ( MLU - MUC ) ),Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.490390840010288}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "Min( ( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.655511811023622, "obj2": 0.23994327818221015}, {"determining": "( ( Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.3228346456692913, "obj2": 0.5424880324269707}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( MLU / MLU ) * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.11811023622047244, "obj2": 0.7963509609076986}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "Min( ( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.6594488188976378, "obj2": 0.23524796919809682}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( BR,( FirstVNF_CPU - Const ) ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( CS - DS ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( MUR ,( Max( Max( ( CS / MUC ),MUM ),MUC ) * CS ) ) ) )", "obj1": 0.7460629921259843, "obj2": 0.16838439349437415}, {"determining": "Max( Max( ( Const * Const ),( FirstVNF_CPU_Server - ( FirstVNF_RAM * RRS ) ) ),Max( Max( MRS,ARS ),( Const + PN ) ) )", "choosing": "( Min( ( MUM - MUC ) ,( RMSe - RRSe ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7817968947036406}, {"determining": "( FirstVNF_CPU_Server + Max( ACS,Min( PN ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( CS,( CS / MUM ) ) / MUM ) / Max( MUM,( MUR * DS ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6922578042754671}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( MLU,MUR ) ) ) ) ) - CS ) )", "obj1": 0.33858267716535434, "obj2": 0.5266918580176612}, {"determining": "( Max( Const,( BR / ( ( BR + FirstVNF_Mem_Server ) / DDR ) ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( Min( ( ( ( ( ( MUR * MUC ) / ( DS - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) ,Min( Max( MUM,( RRSe - RMSe ) ) ,RRSe ) ) ,( DS / MUM ) )", "obj1": 0.29133858267716534, "obj2": 0.5727200404058872}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( CS * ( ( ( MUR * MUC ) / ( RRSe - ( ( MUR - MLU ) - ( ( DS * RRSe ) * ( RCSe / MUR ) ) ) ) ) * MUM ) ) - Min( ( Min( MUR ,MUC ) - ( MUM / DS ) ) ,( ( CS / RRSe ) / Min( MUR ,CS ) ) ) )", "obj1": 0.9625984251968503, "obj2": 0.02299298994425096}, {"determining": "( Max( ACS,FirstVNF_Mem ) - ( ( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * ( ACS - FirstVNF_RAM ) ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( ( RRSe + Max( MUC,( ( ( MLU / MUC ) / Max( MLU,MUR ) ) / MUR ) ) ),( RRSe / RCSe ) )", "obj1": 0.5413385826771654, "obj2": 0.3438739984206341}, {"determining": "( ( ( Const * ( RRS / ( CRS * RRS ) ) ) * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( MLU * RRSe ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6412543951808312}, {"determining": "( Max( BR,Min( FirstVNF_Mem ,( ( DDR + ACS ) * ( FirstVNF_Mem_Server + Min( Const ,( ( DDR + Const ) - ( CRS - MDR ) ) ) ) ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) ) * MRS ) ),( Min( Min( FirstVNF_CPU ,PN ) ,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( ( ( DS + ( RMSe * Min( MLU ,MUM ) ) ) - RMSe ),RRSe ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5530711982802976}, {"determining": "( Max( Const,( BR / ( ( BR + FirstVNF_Mem_Server ) / RRS ) ) ) * ( ( MDR + DDR ) + MDR ) )", "choosing": "Min( Min( ( ( ( ( ( MUR * MUC ) / ( DS - Min( RMSe ,RMSe ) ) ) * MUM ) * CS ) + RRSe ) ,Min( Max( MUM,MUR ) ,RRSe ) ) ,( DS / MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.5654555089401078}, {"determining": "( ( ( MRS + CRS ) - ( ( Max( ( Max( PN,( MDR / MRS ) ) * DDR ),Max( ( ( MRS - CRS ) * ( FirstVNF_Mem * Const ) ),ACS ) ) + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem + ( ( ( ( ( Max( DDR,FirstVNF_CPU ) - FirstVNF_Mem_Server ) - ( Max( AMS,ACS ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) / FirstVNF_Mem ) * AMS ) * RRS ) ) )", "choosing": "( ( MLU / MUM ) / Max( Max( ( ( ( DS / Max( CS,RCSe ) ) + MLU ) + CS ),MUC ),MLU ) )", "obj1": 0.9606299212598425, "obj2": 0.02924989052785105}, {"determining": "( ( Const * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895022739857763}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( ACS,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) * ( Const - MDR ) )", "choosing": "( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5787401574803149, "obj2": 0.27402574786592987}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( ACS * FirstVNF_Mem_Server ) / AMS ) ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUC ,RRSe ),MLU ),Min( RCSe ,MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - MUM ) - Max( MUM,RCSe ) ),DS ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6422824819235101}, {"determining": "( Max( ACS,FirstVNF_Mem ) - ( ( ( Min( MDR ,FirstVNF_RAM ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( ( MLU / MUC ) / Max( ( MLU - Max( MLU,MUM ) ),MUR ) ) )", "obj1": 0.7440944881889764, "obj2": 0.1723395543778936}], "8": [{"determining": "( ( ( ( Max( ( ACS + ( ( Const - MDR ) * AMS ) ),BR ) / FirstVNF_Mem_Server ) - FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( ( AMS + BR ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + MUM ) + MUM ) / Min( RCSe ,CS ) ) / ( ( MUC / RMSe ) / Max( MUM,MLU ) ) ),( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - ACS ) ) - ( FirstVNF_RAM - ( PN - ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / BR ) ) ) ) ,Max( ACS,( ( MDR - Const ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * ( ( ( MUR * MUC ) / ( RRSe - ( ( MUR - MLU ) - ( ( DS * MUC ) * ( RCSe / RMSe ) ) ) ) ) * MUM ) ) - Min( ( Min( MUR ,MUC ) - ( MUM / DS ) ) ,( ( CS / RRSe ) / Min( CS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Max( ACS,BR ) ,ACS ) * ( AMS - FirstVNF_CPU ) ) + DDR ) / FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( RCSe / Min( RMSe ,RMSe ) ) ) / Max( ( RCSe / RMSe ),( Max( ( Max( MUC,( MUR / MUR ) ) + RRSe ),( RRSe * RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8635528467108932}, {"determining": "Min( ( ( ARS + BR ) - AMS ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - MUC ) ),( DS + CS ) ),RMSe ) ,Min( ( RRSe - ( Min( RRSe ,MUC ) + RCSe ) ) ,RCSe ) ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.22167959508314564}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( ACS,FirstVNF_Mem ) ) ,CRS ) * ( Const - MDR ) )", "choosing": "( Min( ( ( DS - ( CS / RRSe ) ) - CS ) ,( DS / ( DS * MUC ) ) ) - Min( CS ,MUM ) )", "obj1": 0.7047244094488189, "obj2": 0.18491343728079632}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( BR,FirstVNF_CPU ) ) * Min( MDR ,MRS ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUC ) / ( RRSe - Min( MUR ,( Max( Max( ( CS / MUC ),DS ),MUC ) * CS ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.15517696360261568}, {"determining": "( Max( PN,ACS ) * ( ( ( ( Const + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * BR ) / ( MDR * FirstVNF_Mem ) ) - CRS ) )", "choosing": "Min( ( Max( ( ( Max( DS,( MUR - MUM ) ) - MUM ) + MLU ),RRSe ) * Min( RCSe ,RMSe ) ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.452755905511811, "obj2": 0.4258942345411727}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) / ( ( FirstVNF_Mem - Max( PN,( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) / ( FirstVNF_CPU - ACS ) ) )", "choosing": "( ( ( DS + ( ( ( Max( MUM,( RMSe / RMSe ) ) - Min( Max( DS,MUR ) ,RCSe ) ) / MUM ) / MUR ) ) * Min( ( MLU * RCSe ) ,( MLU * DS ) ) ) / ( Min( MUC ,Min( ( ( MUM + MUM ) * MUM ) ,( ( DS * RRSe ) * ( RCSe / MUR ) ) ) ) / ( MLU / CS ) ) )", "obj1": 0.7992125984251969, "obj2": 0.1418592997859615}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server + ( RRS - ( ( Max( FirstVNF_CPU,DDR ) + FirstVNF_CPU ) / ( ( MRS * AMS ) - Min( DDR ,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ACS ,AMS ) * ( MDR - Const ) ) / ( Min( ( FirstVNF_RAM_Server / CRS ) ,CRS ) - AMS ) ) + ( ( PN / BR ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) / MLU ) ,( Max( CS,RMSe ) - Max( ( Min( ( MLU * CS ) ,( MUC * Max( DS,MUM ) ) ) * DS ),MUR ) ) )", "obj1": 0.5374015748031497, "obj2": 0.3230455995213729}, {"determining": "( Min( ACS ,AMS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + DS ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.8937007874015748, "obj2": 0.041850986141240526}, {"determining": "( Max( ( Max( FirstVNF_RAM,( FirstVNF_Mem - Max( ( ( DDR / PN ) - ACS ),( ( Const - MDR ) * AMS ) ) ) ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( MLU / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09448818897637795, "obj2": 0.8419747572301952}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( Const - MDR ) ) / ( ACS + RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( Max( RMSe,( Min( ( RCSe * MUC ) ,( ( DS - MUM ) / ( DS - ( RCSe * MUM ) ) ) ) / ( MLU - RMSe ) ) ) - MUM )", "obj1": 0.5118110236220472, "obj2": 0.3732739191737132}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( CS * ( ( ( MUR * MUC ) / ( RRSe - ( ( MUR - MLU ) - ( ( DS * RRSe ) * ( RCSe / MUR ) ) ) ) ) * MUM ) ) - Min( ( Min( MUR ,MUC ) - ( MUM / DS ) ) ,( ( CS / RRSe ) / Min( MUR ,CS ) ) ) )", "obj1": 0.9625984251968503, "obj2": 0.02299298994425096}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ACS * RRS ) ) ) )", "choosing": "( Max( ( Min( ( ( DS - RMSe ) - CS ) ,( DS / DS ) ) * RRSe ),( MUR - MUM ) ) - MUM )", "obj1": 0.4763779527559055, "obj2": 0.3818648615367859}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6502599198292992}, {"determining": "Max( ( ( ( RRS - PN ) * Max( DDR,CRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( BR * CRS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( RCSe + ( ( CS + Max( MLU,MUM ) ) - MUC ) ) - DS ) ),MUR ) / ( MLU / ( DS * ( MLU / MLU ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8198884265464628}, {"determining": "( ( Const * ( FirstVNF_CPU_Server / ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "( ( ( ( ( ( Max( ( MUR * MUM ),( DS * MUC ) ) / ( MUR - ( RRSe / CS ) ) ) + MLU ) * CS ) - RCSe ) - ( MLU + MUR ) ) / ( DS + MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.6812259181574725}, {"determining": "( ( FirstVNF_RAM_Server / ( Max( ACS,FirstVNF_CPU ) - ( ( ACS - Max( ( Const - ARS ),DDR ) ) / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC / MUC ) - MUR ),( ( MLU * MUR ) + ( ( Max( MUC,( Min( CS ,DS ) / DS ) ) - ( MUC - MUM ) ) * MUM ) ) ) - Min( CS ,( RMSe - DS ) ) )", "obj1": 0.48031496062992124, "obj2": 0.37453689150061925}, {"determining": "( ( Min( FirstVNF_CPU ,Max( FirstVNF_Mem,BR ) ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( MLU / MUC ) / Max( ( MUM * MUR ),MLU ) )", "obj1": 0.14566929133858267, "obj2": 0.7504575068468627}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( ACS + FirstVNF_RAM ) - ( ( DDR + Max( CRS,( PN + ( MDR / CRS ) ) ) ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / Max( ( Max( ( CS - RMSe ),DS ) / MLU ),( Min( RCSe ,RRSe ) * MLU ) ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.1279527559055118, "obj2": 0.7685563178689949}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MRS + DDR ) + MDR ) ) / Min( MDR ,( Max( ACS,( PN / ( FirstVNF_Mem * ( ( ACS - Const ) / MRS ) ) ) ) / DDR ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( ( Max( CS,( RRSe - CS ) ) * ( MUR * Max( RCSe,MUM ) ) ) * Min( MUC ,RRSe ) ) ) ) - CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5220977047537191}, {"determining": "( Max( ACS,FirstVNF_Mem ) - ( ( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * ( Const - MDR ) ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( ( RRSe + Max( MUC,( ( ( MLU / MUC ) / Max( MLU,Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) ) / MUR ) ) ),( RRSe / RCSe ) )", "obj1": 0.4389763779527559, "obj2": 0.44613204787148164}, {"determining": "( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( ( MUM - MUC ) ,( RMSe - RRSe ) ) / MLU ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.5688976377952756, "obj2": 0.29130077395533804}, {"determining": "( ( AMS + ( ( ( Max( BR,( Min( AMS ,FirstVNF_Mem ) + ( FirstVNF_Mem_Server * ARS ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + BR ) + MRS ) )", "choosing": "Min( Min( ( ( ( ( ( Min( MUM ,MLU ) * ( MUC - MUC ) ) / MUR ) * MUM ) + CS ) + RRSe ) ,( Max( RRSe,( MUM - RRSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * RRSe ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8661417322834646, "obj2": 0.08249214494883995}, {"determining": "( ( ( ( Max( ( ACS + ( ( CRS + MDR ) * BR ) ),BR ) / FirstVNF_Mem_Server ) - FirstVNF_Mem ) / FirstVNF_RAM_Server ) - ( ( AMS + BR ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + MUM ) + MUM ) / Min( RCSe ,CS ) ) / ( ( MUC / RMSe ) / Max( MUM,MLU ) ) ),( RMSe + Min( DS ,RMSe ) ) )", "obj1": 0.8385826771653543, "obj2": 0.1171175378896677}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( MLU - Max( MLU,( ( ( DS / Max( CS,RCSe ) ) + MLU ) + CS ) ) ) / ( MUR + CS ) )", "obj1": 0.5295275590551181, "obj2": 0.3424226847770655}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( ( ( CRS + ( FirstVNF_CPU - RRS ) ) * RRS ) / RRS ) ),( ( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( MLU / ( ( MLU / MLU ) * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.12598425196850394, "obj2": 0.7962446800146311}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) / ( DDR - FirstVNF_CPU_Server ) ) ) ) / ( DDR + MRS ) ) ),( ( ( Min( AMS ,ACS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( Max( Min( ( MUR * Max( RRSe,Min( ( ( MLU * RCSe ) * ( MUR + MUR ) ) ,( MLU + RMSe ) ) ) ) ,( CS + RCSe ) ),( MUR - MUM ) ) - MUM )", "obj1": 0.5196850393700787, "obj2": 0.36293839624588864}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU * AMS ) ),( ( ( Min( ( Min( MDR ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ,AMS ) * ( Const - MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) )", "choosing": "( ( DS + ( ( ( MUM * ( MLU / Max( RRSe,MUM ) ) ) - ( RCSe / MUR ) ) * ( ( MUM * MUR ) + Max( DS,MLU ) ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5551181102362205, "obj2": 0.30919883838898843}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MDR + FirstVNF_RAM ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * BR ) / ( MDR * FirstVNF_Mem ) ) - CRS ) )", "choosing": "Min( ( Max( ( CS + MLU ),RRSe ) * Min( RCSe ,RMSe ) ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.4153543307086614, "obj2": 0.4611555983147414}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / BR ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * ARS ) )", "choosing": "( ( ( DS + MUR ) - ( Min( ( Max( MLU,RCSe ) - Min( ( ( RRSe * RRSe ) - RMSe ) ,MUC ) ) ,Min( ( Max( MUM,RMSe ) / RCSe ) ,MLU ) ) / MUR ) ) / ( MUM / DS ) )", "obj1": 0.10236220472440945, "obj2": 0.805706621264607}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( CS,( ( ( ( MUC + MUM ) * RCSe ) * ( ( MUR * MUR ) + CS ) ) / MUM ) ) / RMSe ),MUR ) ,Min( RCSe ,DS ) )", "obj1": 0.43700787401574803, "obj2": 0.46041311103596083}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( ( DDR / PN ) - ACS ),( ( Const - MDR ) * AMS ) ) - Max( ( ( DDR / AMS ) - ACS ),( ( Const - MDR ) * AMS ) ) ) ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( ( ( Max( MUR,DS ) + MUM ) + MUM ) / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08858267716535433, "obj2": 0.8582252150116958}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( BR,( FirstVNF_CPU - Const ) ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( CS - DS ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( MUR ,( Max( Max( ( CS / MUC ),MUM ),MUC ) * CS ) ) ) )", "obj1": 0.7460629921259843, "obj2": 0.16838439349437415}, {"determining": "Min( ( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.11758455735032852}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( MLU * DS ) - RMSe ) )", "obj1": 0.8700787401574803, "obj2": 0.058701910540819566}, {"determining": "( ( Min( ACS ,AMS ) * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * Max( ( FirstVNF_Mem - BR ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( Min( CS ,MUM ) * DS ) ,CS ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.33267716535433073, "obj2": 0.5343772003850082}, {"determining": "Min( ( ( ARS + BR ) - AMS ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - Const ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - MUC ) ),( DS + CS ) ),RMSe ) ,Min( ( RRSe - ( Min( RRSe ,MUC ) + RCSe ) ) ,RCSe ) ) ) + Min( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( MUC / MUR ) / Max( MUM,RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.4339912185545226}, {"determining": "Max( ( ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) + FirstVNF_CPU ),( ( FirstVNF_Mem_Server / ( DDR - ARS ) ) / Const ) )", "choosing": "( Max( ( RRSe + Max( MLU,( ( ( MUC - MUM ) - MUC ) / ( RCSe - RCSe ) ) ) ),( RRSe / MUM ) ) / ( MUR + RCSe ) )", "obj1": 0.1673228346456693, "obj2": 0.704420543415858}, {"determining": "( Max( ACS,Max( FirstVNF_Mem,Max( ACS,( FirstVNF_RAM_Server * ( FirstVNF_Mem - ( MRS - CRS ) ) ) ) ) ) - ( ( AMS + ( ( ( ( BR + ( ACS - Const ) ) / DDR ) - MDR ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MLU + RRSe ) * ( RMSe + MUR ) ) * ( Min( MUR ,DS ) * Max( MUC,RCSe ) ) ),Max( ( Max( ( RMSe * ( RMSe * MLU ) ),( Max( ( Min( DS ,MUM ) - CS ),MLU ) + MUM ) ) - MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) )", "obj1": 0.41141732283464566, "obj2": 0.47176019374798017}, {"determining": "( ( Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.3228346456692913, "obj2": 0.5424880324269707}, {"determining": "( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( Max( MUM,RRSe ) * DS ) ,( RCSe + RMSe ) ) * ( ( MUC / MUR ) / Max( MUM,RCSe ) ) ) - CS ) )", "obj1": 0.31299212598425197, "obj2": 0.5481544969938564}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( Max( MUC,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),Max( MUR,MUR ) ) )", "obj1": 0.812992125984252, "obj2": 0.1268630654711498}, {"determining": "Max( ( Const - FirstVNF_CPU ),Min( RRS ,( MDR + Max( Max( MRS,FirstVNF_Mem ),( ( ( FirstVNF_Mem / RRS ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) * ( DS * Max( MUC,RCSe ) ) ),Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4970464178971632}, {"determining": "( Min( ( Min( ( CRS * MDR ) ,FirstVNF_CPU_Server ) / ( Max( ( Max( PN,( MDR / MRS ) ) * DDR ),Max( ( ( MRS - CRS ) * ( FirstVNF_Mem * Const ) ),ACS ) ) + FirstVNF_CPU_Server ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( ( MLU - Max( MLU,( ( ( DS / Max( ( MUC / MUC ),RCSe ) ) + MLU ) + CS ) ) ) / ( MUR + CS ) )", "obj1": 0.5590551181102362, "obj2": 0.3078441809270025}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe + ( RMSe - RMSe ) ) ,( ( MUM + CS ) / ( CS - DS ) ) ),( ( RCSe - Min( RCSe ,RRSe ) ) - Max( ( MLU + MUM ),Max( MUR,MUR ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.24091560297337816}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( DDR - MRS ) / ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( FirstVNF_RAM_Server * AMS ) - Max( DDR,MRS ) ) ) ) ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( MUC * DS ) ,Min( RCSe ,RMSe ) ) * ( RMSe * ( MUC + MLU ) ) ) - CS ) )", "obj1": 0.5255905511811023, "obj2": 0.3492221435506351}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * MDR ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( Max( Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( MUM - RRSe ) ) ) ) ),( MUR - MUM ) ) - MUM )", "obj1": 0.4763779527559055, "obj2": 0.3818648615367859}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - CRS ) )", "choosing": "( ( DS / Max( MLU,( MLU / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.27165354330708663, "obj2": 0.5857847121754066}, {"determining": "( ( Max( FirstVNF_CPU_Server,( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( MUM - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.3543307086614173, "obj2": 0.5152659849098293}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( Min( ( CS / RMSe ) ,( DS + MUR ) ) - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6286100480352386}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( MUM,( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.8011811023622047, "obj2": 0.1338828013560041}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - ( CS + MLU ) ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8523622047244095, "obj2": 0.09541826643263214}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - DS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5740494842543363}, {"determining": "( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( Max( MUM,RRSe ) * DS ) ,( RCSe + RMSe ) ) * ( ( MUC / MUR ) / Max( MUM,RCSe ) ) ) - CS ) )", "obj1": 0.30708661417322836, "obj2": 0.5592035669810609}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - ( CS + MLU ) ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.0877725475575934}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6359477653139085}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - ( FirstVNF_CPU_Server - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5596341960366692}, {"determining": "( Max( BR,Min( FirstVNF_Mem ,( ( DDR + ACS ) * ( FirstVNF_Mem_Server + Min( Const ,( ( DDR + Const ) - ( CRS - MDR ) ) ) ) ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( RRS * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) ) * MRS ) ),( Min( Min( FirstVNF_CPU ,PN ) ,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( ( ( MUM * MUR ) - RMSe ),RRSe ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.5028906723679414}, {"determining": "( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * DDR ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( MUC / MUR ) / Max( MUM,RCSe ) ) ) - CS ) )", "obj1": 0.594488188976378, "obj2": 0.2678676213334709}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - RRS ) )", "choosing": "( ( ( Max( ( ( CS + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( ( DS / ( DS * MUC ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) ) / ( ( Max( Max( MLU,( MUC - MUR ) ),( DS + CS ) ) / MLU ) * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.11614173228346457, "obj2": 0.7996325699182133}, {"determining": "( ( Min( ACS ,AMS ) * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.3700787401574803, "obj2": 0.5051882812036668}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( Min( ( CS / RMSe ) ,( DS + MUR ) ) - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6002630378707448}, {"determining": "( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * ( ( Min( ACS ,AMS ) * ( Const - Const ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC / MUM ) ,( ( Min( ( Max( MUM,RRSe ) * DS ) ,( RCSe + RMSe ) ) * ( ( MUC / MUR ) / Max( MUM,RCSe ) ) ) - CS ) )", "obj1": 0.28937007874015747, "obj2": 0.5679707483688468}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / ( ARS - ( PN / FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM ,Const ) * FirstVNF_CPU ) )", "choosing": "( ( MUM + ( ( MUC - DS ) / RCSe ) ) / Max( ( MLU - Max( ( Max( CS,( ( MUC / RRSe ) / MUR ) ) * ( MUM + MUM ) ),MUM ) ),CS ) )", "obj1": 0.14173228346456693, "obj2": 0.7615381009286322}, {"determining": "( FirstVNF_CPU_Server + Max( ACS,Min( PN ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( CS,( CS / MUM ) ) / MUM ) / Max( MUM,( MUR * DS ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6922578042754671}, {"determining": "( ( Min( ( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( ( ( ( MUM + MUM ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.844488188976378, "obj2": 0.10607590673727786}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( Const / Max( DDR,Max( FirstVNF_RAM,BR ) ) ) ) )", "choosing": "Max( Max( ( CS * DS ),( Min( ( DS * MUR ) ,( MUR + RCSe ) ) / ( CS - DS ) ) ),( ( ( RMSe / RCSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.48420688521109917}, {"determining": "( Max( ACS,Max( FirstVNF_Mem,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( ( AMS + ( Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( DS / ( RRSe * MUC ) ) + Min( MUM ,( ( Min( ( ( DS - RMSe ) - CS ) ,( DS / DS ) ) * RRSe ) - RMSe ) ) ) / ( RRSe - RMSe ) )", "obj1": 0.734251968503937, "obj2": 0.1740880836016263}, {"determining": "( Min( ACS ,AMS ) * ( ( Min( ACS ,AMS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) ) - MDR ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + RMSe ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9744094488188977, "obj2": 0.008418907403796937}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( ACS * FirstVNF_Mem_Server ) / AMS ) ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUC ,RRSe ),MLU ),Min( RCSe ,MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - MUM ) - Max( MUM,RCSe ) ),DS ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6422824819235101}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5920357388442476}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RRSe + ( ( ( Max( ( CS / MUM ),CS ) / MUM ) / Max( MUM,( MUR * DS ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( ( DS - Max( Max( DS,RCSe ),RCSe ) ) / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.7244094488188977, "obj2": 0.17663382767502028}, {"determining": "( ( Min( ( Min( PN ,Min( Const ,FirstVNF_CPU ) ) / Min( CRS ,CRS ) ) ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( Const - MDR ) ) )", "choosing": "( Max( RMSe,( RRSe - ( ( MUR - MLU ) - ( ( DS * RRSe ) * ( RCSe / MUR ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.610236220472441, "obj2": 0.26412447332364886}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "Min( ( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.6594488188976378, "obj2": 0.23524796919809682}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( ACS,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) * ( Const - MDR ) )", "choosing": "( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5826771653543307, "obj2": 0.271156322229862}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - CRS ) )", "choosing": "( ( DS / Max( MLU,( MLU / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.24803149606299213, "obj2": 0.6050126738237325}, {"determining": "Max( ( MDR / MDR ),Min( ( FirstVNF_RAM + Max( Max( MRS,FirstVNF_Mem ),FirstVNF_CPU ) ) ,RRS ) )", "choosing": "Max( ( MLU / ( MLU - MUC ) ),Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.490390840010288}, {"determining": "( ( Const * ( AMS / ( ( FirstVNF_Mem_Server - CRS ) * DDR ) ) ) / ( ( ( FirstVNF_CPU + Const ) + RRS ) + ( ( FirstVNF_Mem + AMS ) - DDR ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( ( MUM * DS ) + Max( RCSe,RMSe ) ) ) - MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.36023622047244097, "obj2": 0.5103401135486023}, {"determining": "( ( Min( FirstVNF_CPU ,Max( CRS,BR ) ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) + Const )", "choosing": "( ( MLU / MUC ) / Max( ( MUR + ( ( ( Max( ( MUR * MLU ),MLU ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( DS,DS ) ) ),MLU ) )", "obj1": 0.13976377952755906, "obj2": 0.768547306855028}, {"determining": "( ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( Const - MDR ) ) )", "choosing": "( ( RCSe / Min( Max( Max( Max( MLU,( MUC - MUC ) ),( DS + CS ) ),DS ) ,CS ) ) - Min( CS ,MUM ) )", "obj1": 0.6161417322834646, "obj2": 0.25711955967710837}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "Min( ( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.655511811023622, "obj2": 0.23994327818221015}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( Max( PN,ACS ) * ( ( ( ( MRS * Max( FirstVNF_CPU,FirstVNF_CPU ) ) * BR ) / Max( FirstVNF_CPU,RRS ) ) - CRS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( Min( MUR ,DS ) / Max( MUM,RCSe ) ) - Min( CS ,MUM ) )", "obj1": 0.6023622047244095, "obj2": 0.26516700484490735}, {"determining": "( ( Min( ( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( ( ( ( MUM + MUM ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.8484251968503937, "obj2": 0.10322089943029825}, {"determining": "( ( Const * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895022739857763}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( ACS,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) * ( Const - MDR ) )", "choosing": "( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5787401574803149, "obj2": 0.27402574786592987}, {"determining": "( ( ACS * PN ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( CS / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( CS,RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.7145669291338582, "obj2": 0.17710734823285643}, {"determining": "( Max( PN,ACS ) * Min( MDR ,Max( BR,FirstVNF_CPU ) ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.22244094488188976, "obj2": 0.6206911394886179}, {"determining": "( Max( ACS,FirstVNF_Mem ) - ( ( ( Min( MDR ,FirstVNF_RAM ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( ( MLU / MUC ) / Max( ( MLU - Max( MLU,MUM ) ),MUR ) ) )", "obj1": 0.7440944881889764, "obj2": 0.1723395543778936}, {"determining": "( Max( PN,ACS ) * ( ( ( ( MRS + RRS ) * BR ) / ( MDR * FirstVNF_Mem ) ) - CRS ) )", "choosing": "( ( MUC / MUR ) / Max( MUM,MUC ) )", "obj1": 0.9881889763779528, "obj2": 0.0037393769415988787}, {"determining": "( Min( ACS ,Max( ( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) * ( Const - MDR ) ),Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) ) ) ) ) ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( CS + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + MUM ) ) ,( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.04538452457631671}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( FirstVNF_Mem,Min( ACS ,DDR ) ) ) ,FirstVNF_RAM_Server ) * ( Const - MDR ) )", "choosing": "( Min( Min( MLU ,Min( CS ,MLU ) ) ,( ( DS - RCSe ) - CS ) ) - Min( CS ,RRSe ) )", "obj1": 0.5708661417322834, "obj2": 0.2800645605203014}, {"determining": "( Max( PN,ACS ) * ( ( ( ( MRS + RRS ) * BR ) / ( MDR * FirstVNF_Mem ) ) - CRS ) )", "choosing": "( ( MUC / MUR ) / Max( MUM,MUC ) )", "obj1": 0.9881889763779528, "obj2": 0.0037393769415988787}, {"determining": "( ( ( Const * ( RRS / ( CRS * RRS ) ) ) * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( MLU * RRSe ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6412543951808312}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - DS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5740378701096018}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM - MUC ) ,Max( MUC,DS ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.9724409448818898, "obj2": 0.011660502320543309}], "9": [{"determining": "( Min( ACS ,AMS ) * ( ( Min( ACS ,AMS ) * ( ( Min( ACS ,AMS ) * MRS ) - MDR ) ) - MDR ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + RMSe ) + MUM ) + ( Min( MUR ,DS ) / Max( MUM,RCSe ) ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( ( ACS + ( ( Const - MDR ) * AMS ) ),BR ) / FirstVNF_Mem_Server ) - FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( ( AMS + BR ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + MUM ) + MUM ) / Min( RCSe ,CS ) ) / ( ( MUC / RMSe ) / Max( MUM,MLU ) ) ),( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Max( ACS,BR ) ,ACS ) * ( AMS - FirstVNF_CPU ) ) + DDR ) / FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( RCSe / Min( RMSe ,RMSe ) ) ) / Max( ( RCSe / RMSe ),( Max( ( Max( MUC,( MUR / MUR ) ) + RRSe ),( RRSe * RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8635528467108932}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - ( CS + MUM ) ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,MUM )", "obj1": 0.452755905511811, "obj2": 0.42470205355911206}, {"determining": "Min( ( ( ARS + BR ) - AMS ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - MUC ) ),( DS + CS ) ),RMSe ) ,Min( ( RRSe - ( Min( RRSe ,MUC ) + RCSe ) ) ,RCSe ) ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.22167959508314564}, {"determining": "( Min( ( ( ACS - AMS ) - Max( PN,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) * ( Const + MDR ) )", "choosing": "( Min( ( DS / ( MUC * DS ) ) ,Max( ( DS - MUM ),CS ) ) - ( ( Max( CS,( CS / ( ( ( RCSe + CS ) + RCSe ) / MUR ) ) ) / MUM ) / Max( MUM,( DS - DS ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.19021025987476964}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( ( ( Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.4322681751643757}, {"determining": "Max( ( Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * MDR ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( Max( Min( ( MUC / MUR ) ,( MUM / Max( DS,( DS - RRSe ) ) ) ),( MUR - MUM ) ) - MUM )", "obj1": 0.4744094488188976, "obj2": 0.3840772975277448}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) ) )", "choosing": "Max( Min( ( RRSe + ( RMSe - RMSe ) ) ,( ( MUM + CS ) / ( CS - DS ) ) ),( ( RCSe - Min( RCSe ,RRSe ) ) - Max( ( MLU + MUM ),Max( MUR,MUR ) ) ) )", "obj1": 0.952755905511811, "obj2": 0.02065773240208684}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server + ( RRS - ( ( Max( FirstVNF_CPU,DDR ) + FirstVNF_CPU ) / ( ( MRS * AMS ) - Min( DDR ,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ACS ,AMS ) * ( MDR - Const ) ) / ( Min( ( FirstVNF_RAM_Server / CRS ) ,CRS ) - AMS ) ) + ( ( PN / BR ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) / MLU ) ,( Max( CS,RMSe ) - Max( ( Min( ( MLU * CS ) ,( MUC * Max( DS,MUM ) ) ) * DS ),MUR ) ) )", "obj1": 0.5374015748031497, "obj2": 0.3230455995213729}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( DDR + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / MLU ) * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.12401574803149606, "obj2": 0.7585890178541335}, {"determining": "( ( Min( FirstVNF_CPU ,Max( FirstVNF_Mem,BR ) ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( MLU / MUC ) / Max( ( MUM * MUR ),MLU ) )", "obj1": 0.14566929133858267, "obj2": 0.7504575068468627}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe + ( RMSe - RMSe ) ) ,( ( MUM + CS ) / ( CS - DS ) ) ),( ( RCSe - Min( RCSe ,RRSe ) ) - Max( ( MLU + MUM ),Max( MUR,MUR ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.24091560297337816}, {"determining": "( Min( FirstVNF_RAM_Server ,( AMS / ( ACS * Max( DDR,Min( FirstVNF_RAM_Server ,( Const + ( AMS * AMS ) ) ) ) ) ) ) / ( ( FirstVNF_Mem_Server + CRS ) / ( ( Const - MDR ) / ( ( FirstVNF_RAM * FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUC ,RRSe ),MLU ),Min( RCSe ,MUR ) ),RMSe ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( Max( DS,MLU ) ,CS ) ) ) - ( RMSe * RMSe ) ) ,( DS / DS ) ) ) )", "obj1": 0.6122047244094488, "obj2": 0.2553817097220219}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( ( AMS + ( ( ( Max( BR,( Min( AMS ,FirstVNF_Mem ) + ( FirstVNF_Mem_Server * ARS ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + BR ) + MRS ) )", "choosing": "Min( Min( ( ( ( ( ( Min( MUM ,MLU ) * ( MUC - MUC ) ) / MUR ) * MUM ) + CS ) + RRSe ) ,( Max( RRSe,( MUM - RRSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * RRSe ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8661417322834646, "obj2": 0.08249214494883995}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / BR ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * ARS ) )", "choosing": "( ( ( DS + MUR ) - ( Min( ( Max( MLU,RCSe ) - Min( ( ( RRSe * RRSe ) - RMSe ) ,MUC ) ) ,Min( ( Max( MUM,RMSe ) / RCSe ) ,MLU ) ) / MUR ) ) / ( MUM / DS ) )", "obj1": 0.10236220472440945, "obj2": 0.805706621264607}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) / ( ( FirstVNF_Mem - Max( PN,( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) / ( FirstVNF_CPU - ACS ) ) )", "choosing": "( ( ( DS + ( ( ( Max( MUM,( RMSe / RMSe ) ) - Min( Max( DS,MUR ) ,RCSe ) ) / MUM ) / MUR ) ) * Min( ( MLU * RCSe ) ,( MLU * DS ) ) ) / ( Min( MUC ,Min( ( ( MUM + MUM ) * MUM ) ,( ( DS * RRSe ) * ( RCSe / MUR ) ) ) ) / ( MLU / CS ) ) )", "obj1": 0.7992125984251969, "obj2": 0.1418592997859615}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( Const - MDR ) ) / ( ACS + RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUC / MUR ) + DS ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.5078740157480315, "obj2": 0.36598349607906416}, {"determining": "Min( ( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.15142574204469908}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MDR + FirstVNF_RAM ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * BR ) / ( MDR * FirstVNF_Mem ) ) - CRS ) )", "choosing": "Min( ( Max( ( CS + MLU ),RRSe ) * Min( RCSe ,RMSe ) ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.4153543307086614, "obj2": 0.4611555983147414}, {"determining": "( ( FirstVNF_RAM_Server / ( Max( ACS,FirstVNF_CPU ) - ( ( ACS - Max( ( Const - ARS ),DDR ) ) / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC / MUC ) - MUR ),( ( MLU * MUR ) + ( ( Max( MUC,( Min( CS ,DS ) / DS ) ) - ( MUC - MUM ) ) * MUM ) ) ) - Min( CS ,( RMSe - DS ) ) )", "obj1": 0.48031496062992124, "obj2": 0.37453689150061925}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09055118110236221, "obj2": 0.8348553987509655}, {"determining": "( ( Const * ( FirstVNF_CPU_Server / ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "( ( ( ( ( ( Max( ( MUR * MUM ),( DS * MUC ) ) / ( MUR - ( RRSe / CS ) ) ) + MLU ) * CS ) - RCSe ) - ( MLU + MUR ) ) / ( DS + MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.6812259181574725}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( BR,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) - ACS ) ) ) * Min( ( ACS - Const ) ,FirstVNF_Mem_Server ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUC ) / ( RRSe - Min( MUR ,( MUC / RMSe ) ) ) )", "obj1": 0.8464566929133859, "obj2": 0.08689843121828113}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( FirstVNF_RAM ,Const ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.10826771653543307, "obj2": 0.7770603746953204}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6502599198292992}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( MUM,( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.8405511811023622, "obj2": 0.09980387977570003}, {"determining": "Max( ( ( ( RRS - PN ) * Max( DDR,CRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( BR * CRS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( RCSe + ( ( CS + Max( MLU,MUM ) ) - MUC ) ) - DS ) ),MUR ) / ( MLU / ( DS * ( MLU / MLU ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8198884265464628}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - ( CS + MLU ) ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8326771653543307, "obj2": 0.11421154233092433}, {"determining": "( Max( BR,( Max( FirstVNF_RAM,( Max( ( ( DDR / PN ) - ACS ),( ( Const * MDR ) * AMS ) ) - Max( ( ( DDR / AMS ) - ACS ),( ( Const - MDR ) * AMS ) ) ) ) / CRS ) ) * Max( ARS,( ACS - Const ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08858267716535433, "obj2": 0.8529486513865339}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MRS + DDR ) + MDR ) ) / Min( MDR ,( Max( ACS,( PN / ( FirstVNF_Mem * ( ( ACS - Const ) / MRS ) ) ) ) / DDR ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( ( Max( CS,( RRSe - CS ) ) * ( MUR * Max( RCSe,MUM ) ) ) * Min( MUC ,RRSe ) ) ) ) - CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5220977047537191}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( MLU - Max( MLU,( ( ( DS / Max( CS,RCSe ) ) + MLU ) + CS ) ) ) / ( MUR + CS ) )", "obj1": 0.5295275590551181, "obj2": 0.3424226847770655}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MDR + FirstVNF_RAM ) + Max( ARS,BR ) ) * BR ) + ( AMS / FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( ( CS + Min( MUM ,CS ) ),MUR ) * Min( RCSe ,RMSe ) ) ,( Max( CS,RMSe ) - ( Min( MLU ,MUM ) + MUM ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4750708748271078}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU * AMS ) ),( ( ( Min( ( Min( MDR ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ,AMS ) * ( Const - MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) )", "choosing": "( ( DS + ( ( ( MUM * ( MLU / Max( RRSe,MUM ) ) ) - ( RCSe / MUR ) ) * ( ( MUM * MUR ) + Max( DS,MLU ) ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5551181102362205, "obj2": 0.30919883838898843}, {"determining": "( Max( PN,ACS ) * Min( MDR ,Max( BR,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( CS / RMSe ) ,( DS + MUR ) ) - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102316166123786}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) / ( DDR - FirstVNF_CPU_Server ) ) ) ) / ( DDR + MRS ) ) ),( ( ( Min( AMS ,ACS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( Max( Min( ( MUR * Max( RRSe,Min( ( ( MLU * RCSe ) * ( MUR + MUR ) ) ,( MLU + RMSe ) ) ) ) ,( CS + RCSe ) ),( MUR - MUM ) ) - MUM )", "obj1": 0.5196850393700787, "obj2": 0.36293839624588864}, {"determining": "( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( ( MUM - MUC ) ,( RMSe - RRSe ) ) / MLU ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.5688976377952756, "obj2": 0.29130077395533804}, {"determining": "Max( ( ( ( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( DDR + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / MLU ) * DS ) ) / Max( Max( MLU,( MUC - DS ) ),MUR ) )", "obj1": 0.11220472440944881, "obj2": 0.7736048138980968}, {"determining": "( Min( ACS ,AMS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + DS ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.8937007874015748, "obj2": 0.041850986141240526}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM - MUC ) ,Max( MUC,DS ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.9724409448818898, "obj2": 0.011660502320543309}, {"determining": "Max( ( ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) + FirstVNF_CPU ),( ( FirstVNF_Mem_Server / ( DDR - ARS ) ) / Const ) )", "choosing": "( Max( ( RRSe + Max( MLU,( ( ( MUC - MUM ) - MUC ) / ( RCSe - RCSe ) ) ) ),( RRSe / MUM ) ) / ( MUR + RCSe ) )", "obj1": 0.1673228346456693, "obj2": 0.704420543415858}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( BR,FirstVNF_CPU ) ) * Min( MDR ,MRS ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUC ) / ( RRSe - Min( MUR ,( Max( Max( ( CS / MUC ),DS ),MUC ) * CS ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.15517696360261568}, {"determining": "( Max( PN,ACS ) * Min( MDR ,Max( BR,FirstVNF_CPU ) ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.22244094488188976, "obj2": 0.6206911394886179}, {"determining": "( Max( ACS,Max( FirstVNF_Mem,Max( ACS,( FirstVNF_RAM_Server * ( FirstVNF_Mem - ( MRS - CRS ) ) ) ) ) ) - ( ( AMS + ( ( ( ( BR + ( ACS - Const ) ) / DDR ) - MDR ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MLU + RRSe ) * ( RMSe + MUR ) ) * ( Min( MUR ,DS ) * Max( MUC,RCSe ) ) ),Max( ( Max( ( RMSe * ( RMSe * MLU ) ),( Max( ( Min( DS ,MUM ) - CS ),MLU ) + MUM ) ) - MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) )", "obj1": 0.41141732283464566, "obj2": 0.47176019374798017}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - ( FirstVNF_CPU_Server - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5596341960366692}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( MLU * DS ) - RMSe ) )", "obj1": 0.8700787401574803, "obj2": 0.058701910540819566}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( DDR - MRS ) / ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( FirstVNF_RAM_Server * AMS ) - Max( DDR,MRS ) ) ) ) ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( MUC * DS ) ,Min( RCSe ,RMSe ) ) * ( RMSe * ( MUC + MLU ) ) ) - CS ) )", "obj1": 0.5255905511811023, "obj2": 0.3492221435506351}, {"determining": "( Min( ACS ,AMS ) * ( Const - Max( FirstVNF_RAM,CRS ) ) )", "choosing": "Min( Min( DS ,MUM ) ,( ( Min( RRSe ,MUM ) + ( MUR + ( DS * RMSe ) ) ) / RCSe ) )", "obj1": 0.65748031496063, "obj2": 0.23523242118200743}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( Min( ( CS / RMSe ) ,( DS + MUR ) ) - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6286100480352386}, {"determining": "( Max( BR,Min( FirstVNF_Mem ,( ( DDR + ACS ) * ( FirstVNF_Mem_Server + Min( Const ,( ( DDR + Const ) - ( CRS - MDR ) ) ) ) ) ) ) * Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( ( RRS * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) ) * MRS ) ),( Min( Min( FirstVNF_CPU ,PN ) ,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( CS + ( ( CS * ( ( CS + RMSe ) + Max( MUM,RMSe ) ) ) + DS ) ) + RRSe ) ,( Max( ( ( MUM * MUR ) - RMSe ),RRSe ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.5028906723679414}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( BR,( FirstVNF_CPU - Const ) ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( CS - DS ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( MUR ,( Max( Max( ( CS / MUC ),MUM ),MUC ) * CS ) ) ) )", "obj1": 0.75, "obj2": 0.16642547080009315}, {"determining": "( ( Min( ACS ,AMS ) * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * Max( ( FirstVNF_Mem - BR ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( ( ( ( MUM + MUM ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4925454014518531}, {"determining": "Min( ( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.11758455735032852}, {"determining": "Max( ( Const - FirstVNF_CPU ),Min( RRS ,( MDR + Max( Max( ACS,FirstVNF_Mem ),( ( ( FirstVNF_Mem / RRS ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) * ( DS * Max( MUC,RCSe ) ) ),Max( ( ( RMSe / CS ) + ( RRSe / RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.49380096076335883}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * ( MDR / AMS ) ) * ( Const - MDR ) ) ) ) * Min( ( Const * AMS ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),Min( Max( RMSe,MUR ) ,( ( ( DS / DS ) * MLU ) - MUR ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.045384524576316705}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6359477653139085}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - MRS ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / Min( MDR ,( Max( ACS,Min( PN ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) / DDR ) ) )", "choosing": "Min( ( ( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - CS ) )", "obj1": 0.3090551181102362, "obj2": 0.5455017145713634}, {"determining": "( ( ( Max( CRS,Const ) - MDR ) - ACS ) * ( CRS - ( MDR / Min( ( ( BR + FirstVNF_RAM_Server ) / MDR ) ,Min( Min( RRS ,( FirstVNF_CPU - Min( PN ,FirstVNF_CPU ) ) ) ,BR ) ) ) ) )", "choosing": "( ( ( DS * ( Min( ( ( ( MUC + MLU ) / MUC ) * ( ( MUM * MUM ) * Min( MLU ,RMSe ) ) ) ,RCSe ) + MUM ) ) / MUC ) / Max( MUM,RRSe ) )", "obj1": 0.9153543307086615, "obj2": 0.03850733485501374}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ACS + CRS ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( FirstVNF_CPU / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( ( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( MLU / ( MUM * ( MUM * MUR ) ) ) ) ) - Min( CS ,MUM ) ) / MLU ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.562992125984252, "obj2": 0.3059350469001169}, {"determining": "( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( Max( MUM,RRSe ) * DS ) ,( ( MUR / MUR ) + RMSe ) ) * ( ( MUC / MUR ) / Max( MUM,RCSe ) ) ) - CS ) )", "obj1": 0.3051181102362205, "obj2": 0.5524886875009986}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - CRS ) )", "choosing": "( ( DS / Max( MLU,( MLU / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.27165354330708663, "obj2": 0.5857847121754066}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.35236220472440943, "obj2": 0.5153926434988606}, {"determining": "Max( ( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) + DDR ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem ) ) - FirstVNF_RAM ) )", "choosing": "( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / ( MUM + MUM ) )", "obj1": 0.17125984251968504, "obj2": 0.7019163812115018}, {"determining": "( Min( ACS ,Max( ( Min( ( Min( ( PN * MRS ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) * ( Const - MDR ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( ( MLU / ( ( Max( Max( ( MUC - MUR ),MLU ),MUC ) / MLU ) * DS ) ) / Max( Max( DS,RCSe ),MUR ) )", "obj1": 0.8720472440944882, "obj2": 0.05800316625874115}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( MUM,( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.8011811023622047, "obj2": 0.1338828013560041}, {"determining": "( Min( ( Min( ( CRS * MDR ) ,FirstVNF_CPU_Server ) / ( Max( ( Max( PN,( MDR / MRS ) ) * ( AMS + ( FirstVNF_Mem - BR ) ) ),Max( ( ( MRS - CRS ) * ( FirstVNF_Mem * Const ) ),ACS ) ) + FirstVNF_CPU_Server ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( ( MLU - Max( MLU,( ( ( DS / ( RRSe - ( CS + MLU ) ) ) + MLU ) + CS ) ) ) / ( MUR + CS ) )", "obj1": 0.6476377952755905, "obj2": 0.2375963356329421}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "( ( Min( FirstVNF_CPU ,Max( CRS,BR ) ) - ( ( DDR / PN ) - ACS ) ) + Const )", "choosing": "( ( MLU / MUC ) / Max( ( MUR + ( ( ( Max( ( MUR * MLU ),MLU ) / MUM ) / Max( MUM,MLU ) ) * Max( DS,DS ) ) ),MLU ) )", "obj1": 0.9173228346456693, "obj2": 0.03792676218252149}, {"determining": "( ( Min( ACS ,AMS ) * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * Max( ( FirstVNF_Mem - BR ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( Min( CS ,MUM ) * DS ) ,CS ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.33267716535433073, "obj2": 0.5343772003850082}, {"determining": "( ( ( ( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) * DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( ( DS + CS ),Max( MLU,( MUC - DS ) ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / Max( RRSe,MUM ) ) ) ) )", "obj1": 0.8090551181102362, "obj2": 0.1286551307341801}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RRSe + ( ( ( Max( ( CS / MUM ),CS ) / MUM ) / Max( MUM,( MUR * DS ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( ( DS - Max( Max( DS,RCSe ),RCSe ) ) / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.7244094488188977, "obj2": 0.17663382767502028}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( ACS,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) * ( Const - MDR ) )", "choosing": "( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5826771653543307, "obj2": 0.271156322229862}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM - MUC ) ,Max( MUC,DS ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.594488188976378, "obj2": 0.2673355065939628}, {"determining": "( ( Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.3228346456692913, "obj2": 0.5424880324269707}, {"determining": "( ( Min( FirstVNF_CPU ,Max( CRS,BR ) ) - ACS ) * ( CRS - CRS ) )", "choosing": "( ( DS / Max( MLU,( Max( DS,DS ) / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2421259842519685, "obj2": 0.6050348362706831}, {"determining": "( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * ( ( Min( ACS ,AMS ) * ( Const - Const ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC / MUM ) ,( ( Min( ( Max( MUM,RRSe ) * DS ) ,( RCSe + RMSe ) ) * ( ( MUC / MUR ) / Max( MUM,RCSe ) ) ) - CS ) )", "obj1": 0.28937007874015747, "obj2": 0.5679707483688468}, {"determining": "Max( ( Const - ( AMS + FirstVNF_Mem_Server ) ),Min( RRS ,( MDR + Max( Max( MRS,FirstVNF_Mem ),( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_Mem / RRS ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUC ,RRSe ),MLU ),Min( RCSe ,MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( MUC - CS ),DS ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.27755905511811024, "obj2": 0.5766238633102083}, {"determining": "( ( Min( ( Min( PN ,Min( Const ,FirstVNF_CPU ) ) / Min( CRS ,CRS ) ) ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( Const - MDR ) ) )", "choosing": "( Max( RMSe,( RRSe - ( ( MUR - MLU ) - ( ( DS * RRSe ) * ( RCSe / MUR ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.610236220472441, "obj2": 0.26412447332364886}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( MUM - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.812992125984252, "obj2": 0.12331043825327584}, {"determining": "( ( Min( ACS ,AMS ) * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ) * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.3700787401574803, "obj2": 0.5051882812036668}, {"determining": "( Min( ACS ,AMS ) * ( ( Min( ACS ,AMS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) ) - MDR ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + RMSe ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9744094488188977, "obj2": 0.008418907403796937}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.9862204724409449, "obj2": 0.00679794647478072}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( Const * ( FirstVNF_Mem_Server - Const ) ) + MDR ) ) / Min( ( Max( ACS,Min( PN ,( ARS / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) / CRS ) ,MDR ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( ( MUR * RCSe ) / MUC ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.32677165354330706, "obj2": 0.534587810096479}, {"determining": "( ( Const * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895022739857763}, {"determining": "( Max( ACS,Max( FirstVNF_Mem,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( ( AMS + ( Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( DS / ( RRSe * MUC ) ) + Min( MUM ,( ( Min( ( ( DS - RMSe ) - CS ) ,( DS / DS ) ) * RRSe ) - RMSe ) ) ) / ( RRSe - RMSe ) )", "obj1": 0.734251968503937, "obj2": 0.1740880836016263}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( BR,( FirstVNF_CPU - Const ) ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( CS - DS ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( MUR ,( Max( Max( ( CS / MUC ),MUM ),MUC ) * CS ) ) ) )", "obj1": 0.7460629921259843, "obj2": 0.16838439349437415}, {"determining": "( Max( ACS,PN ) - Max( ( DDR + ( Min( Max( BR,( FirstVNF_CPU - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ,MDR ) * Min( BR ,CRS ) ) ),FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( ( MUC / MUR ) / Max( MUM,MUC ) ) ) + Min( CS ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( ( Max( ( ( CS - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( MUM - MUR ) ) ),MUC ) * CS ) ,MUR ) ) )", "obj1": 0.7381889763779528, "obj2": 0.17230113363372948}, {"determining": "( ( Const * ( AMS / ( ( FirstVNF_Mem_Server - CRS ) * DDR ) ) ) / ( ( ( FirstVNF_CPU + Const ) + RRS ) + ( ( FirstVNF_Mem + AMS ) - DDR ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( ( MUM * DS ) + Max( RCSe,RMSe ) ) ) - MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.36023622047244097, "obj2": 0.5103401135486023}, {"determining": "( Min( ACS ,Max( ( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) * ( Const - MDR ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - MUC ) ),( DS + CS ) ),RMSe ) ,Min( ( RRSe - ( Min( RRSe ,MUC ) + RCSe ) ) ,RCSe ) ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.04400947835227459}, {"determining": "( ( ACS * PN ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( CS / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( CS,RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.7145669291338582, "obj2": 0.17710734823285643}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( Min( ( CS / RMSe ) ,( ( CS / RMSe ) + MUR ) ) - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6386973559115282}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - DS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5740494842543363}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - ( FirstVNF_CPU / FirstVNF_Mem ) ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "( ( RCSe - RRSe ) + ( ( Min( MUC ,Max( MUM,MLU ) ) / Min( Max( Max( Max( MLU,( MUC - DS ) ),( DS + CS ) ),DS ) ,RMSe ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5704172955835481}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5920357388442476}, {"determining": "( FirstVNF_CPU_Server + Max( MRS,Min( PN ,Min( ( FirstVNF_Mem_Server / AMS ) ,Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( RRSe,MUR ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( RMSe ,DS ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6922578042754671}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( FirstVNF_Mem,Min( ACS ,DDR ) ) ) ,FirstVNF_RAM_Server ) * ( Const - MDR ) )", "choosing": "( Min( Min( MLU ,Min( CS ,MLU ) ) ,( ( DS - RCSe ) - CS ) ) - Min( CS ,RRSe ) )", "obj1": 0.5708661417322834, "obj2": 0.2800645605203014}, {"determining": "Max( ( ( RRS + MDR ) / Max( Max( MRS,Const ),( CRS / AMS ) ) ),( ACS - ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) )", "choosing": "( ( Max( MLU,( MUC - CS ) ) / ( ( MLU / DS ) * DS ) ) / Max( ( MUC + MUM ),MUC ) )", "obj1": 0.9980314960629921, "obj2": 0.0028489782275963565}], "10": [{"determining": "( ( ( Max( CRS,Const ) - MDR ) - ACS ) * ( CRS - ( MDR / Min( ( ( BR + FirstVNF_RAM_Server ) / MDR ) ,Min( Min( RRS ,( FirstVNF_CPU - Min( PN ,FirstVNF_CPU ) ) ) ,BR ) ) ) ) )", "choosing": "( ( ( DS * ( Min( ( ( ( MUC + MLU ) / MUC ) * ( ( MUM * MUM ) * Min( MLU ,RMSe ) ) ) ,RCSe ) + MUM ) ) / MUC ) / Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,AMS ) * ( ( Min( ACS ,AMS ) * ( ( Min( ACS ,AMS ) * MRS ) - MDR ) ) - MDR ) )", "choosing": "Max( ( ( ( ( Max( MUR,DS ) + RMSe ) + MUM ) + ( Min( MUR ,DS ) / Max( MUM,RCSe ) ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Max( ACS,BR ) ,ACS ) * ( AMS - FirstVNF_CPU ) ) + DDR ) / FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( RCSe / Min( RMSe ,RMSe ) ) ) / Max( ( RCSe / RMSe ),( Max( ( Max( MUC,( MUR / MUR ) ) + RRSe ),( RRSe * RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8635528467108932}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - ( CS + MUM ) ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,MUM )", "obj1": 0.452755905511811, "obj2": 0.42470205355911206}, {"determining": "Max( ( Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * MDR ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( Max( Min( ( MUC / MUR ) ,( MUM / Max( DS,( DS - RRSe ) ) ) ),( MUR - MUM ) ) - MUM )", "obj1": 0.4744094488188976, "obj2": 0.3840772975277448}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( ( ( Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.4322681751643757}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_RAM ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "Max( ( ( ( ( Max( RCSe,MLU ) + ( MUC / MUR ) ) + RMSe ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.6850393700787402, "obj2": 0.20312950198616267}, {"determining": "( Min( ACS ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + ( ( MRS / AMS ) + MRS ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( ( DS - RCSe ) - ( ( RCSe / Max( ( MLU * MUC ),( MUC / MUR ) ) ) - MUR ) ) ,( DS / DS ) ) + ( RCSe / Min( Max( Max( ( MLU - Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4503075400852304}, {"determining": "Min( ( ( ARS + BR ) - AMS ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - MUC ) ),( DS + CS ) ),RMSe ) ,Min( ( RRSe - ( Min( RRSe ,MUC ) + RCSe ) ) ,RCSe ) ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.22167959508314564}, {"determining": "( Min( ( ( ACS - AMS ) - Max( PN,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) * ( Const + MDR ) )", "choosing": "( Min( ( DS / ( MUC * DS ) ) ,Max( ( DS - MUM ),CS ) ) - ( ( Max( CS,( CS / ( ( ( RCSe + CS ) + RCSe ) / MUR ) ) ) / MUM ) / Max( MUM,( DS - DS ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.19021025987476964}, {"determining": "( ( AMS + ( ( ( Max( BR,( Min( AMS ,FirstVNF_Mem ) + ( FirstVNF_Mem_Server * ARS ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + BR ) + MRS ) )", "choosing": "Min( Min( ( ( ( ( ( Min( MUM ,MLU ) * ( MUC - MUC ) ) / MUR ) * MUM ) + CS ) + RRSe ) ,( Max( RRSe,( MUM - RRSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * RRSe ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8661417322834646, "obj2": 0.08249214494883995}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / BR ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * ARS ) )", "choosing": "( ( ( DS + MUR ) - ( Min( ( Max( MLU,RCSe ) - Min( ( ( RRSe * RRSe ) - RMSe ) ,MUC ) ) ,Min( ( Max( MUM,RMSe ) / RCSe ) ,MLU ) ) / MUR ) ) / ( MUM / DS ) )", "obj1": 0.10236220472440945, "obj2": 0.805706621264607}, {"determining": "( ( FirstVNF_RAM_Server / ( Max( ACS,FirstVNF_CPU ) - ( ( ACS - Max( ( Const - ARS ),DDR ) ) / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC / MUC ) - MUR ),( ( MLU * MUR ) + ( ( Max( MUC,( Min( CS ,DS ) / DS ) ) - ( MUC - MUM ) ) * MUM ) ) ) - Min( CS ,( RMSe - DS ) ) )", "obj1": 0.48031496062992124, "obj2": 0.37453689150061925}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6502599198292992}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server + ( RRS - ( ( Max( FirstVNF_CPU,DDR ) + FirstVNF_CPU ) / ( ( MRS * AMS ) - Min( DDR ,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ACS ,AMS ) * ( MDR - Const ) ) / ( Min( ( FirstVNF_RAM_Server / CRS ) ,CRS ) - AMS ) ) + ( ( PN / BR ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) / MLU ) ,( Max( CS,RMSe ) - Max( ( Min( ( MLU * CS ) ,( MUC * Max( DS,MUM ) ) ) * DS ),MUR ) ) )", "obj1": 0.5374015748031497, "obj2": 0.3230455995213729}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09055118110236221, "obj2": 0.8348553987509655}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MDR + FirstVNF_RAM ) + Max( ARS,BR ) ) * BR ) + ( AMS / FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( ( CS + Min( MUM ,CS ) ),MUR ) * Min( RCSe ,RMSe ) ) ,( Max( CS,RMSe ) - ( Min( MLU ,MUM ) + MUM ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4750708748271078}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( FirstVNF_RAM ,Const ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.10826771653543307, "obj2": 0.7770603746953204}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( DDR + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / MLU ) * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.12401574803149606, "obj2": 0.7585890178541335}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "( ( Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( PN / MDR ) ) * ( ( FirstVNF_RAM * ARS ) * ( ( Min( ACS ,AMS ) * ( Const - FirstVNF_CPU_Server ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / ( ( FirstVNF_RAM_Server + ACS ) * DDR ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( RCSe,Min( DS ,RRSe ) ) ) ) ) - CS ) )", "obj1": 0.6299212598425197, "obj2": 0.24410739196354367}, {"determining": "Max( ( ( ( RRS - PN ) * Max( DDR,CRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( BR * CRS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( RCSe + ( ( CS + Max( MLU,MUM ) ) - MUC ) ) - DS ) ),MUR ) / ( MLU / ( DS * ( MLU / MLU ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8198884265464628}, {"determining": "Min( ( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8287401574803149, "obj2": 0.1098193279106196}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / ( BR + FirstVNF_Mem_Server ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( DDR + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / MLU ) * DS ) ) / Max( ( RCSe / ( DS * MUC ) ),MUR ) )", "obj1": 0.14173228346456693, "obj2": 0.743484593438708}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ),BR ) ) * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU / MUR ) + Min( MUM ,( Max( MLU,RRSe ) - RMSe ) ) ) / ( RRSe - Min( MUR ,( Max( Max( ( MUC / DS ),MUM ),MUC ) * CS ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.14590583537678134}, {"determining": "( Max( BR,( Max( FirstVNF_RAM,( Max( ( ( DDR / PN ) - ACS ),( ( Const * MDR ) * AMS ) ) - Max( ( ( DDR / AMS ) - ACS ),( ( Const - MDR ) * AMS ) ) ) ) / CRS ) ) * Max( ARS,( ACS - Const ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08858267716535433, "obj2": 0.8529486513865339}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) / ( ( FirstVNF_Mem - Max( PN,( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) / ( FirstVNF_CPU - ACS ) ) )", "choosing": "( ( ( DS + ( ( ( Max( MUM,( RMSe / RMSe ) ) - Min( Max( DS,MUR ) ,RCSe ) ) / MUM ) / MUR ) ) * Min( ( MLU * RCSe ) ,( MLU * DS ) ) ) / ( Min( MUC ,Min( ( ( MUM + MUM ) * MUM ) ,( ( DS * RRSe ) * ( RCSe / MUR ) ) ) ) / ( MLU / CS ) ) )", "obj1": 0.7992125984251969, "obj2": 0.1418592997859615}, {"determining": "( Min( FirstVNF_RAM_Server ,( AMS / ( ACS * Max( DDR,Min( FirstVNF_RAM_Server ,( Const + ( AMS * AMS ) ) ) ) ) ) ) / ( ( FirstVNF_Mem_Server + CRS ) / ( ( Const - MDR ) / ( ( FirstVNF_RAM * FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUC ,RRSe ),MLU ),Min( RCSe ,MUR ) ),RMSe ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( Max( DS,MLU ) ,CS ) ) ) - ( RMSe * RMSe ) ) ,( DS / DS ) ) ) )", "obj1": 0.6122047244094488, "obj2": 0.2553817097220219}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( MLU - Max( MLU,( ( ( DS / Max( CS,RCSe ) ) + MLU ) + CS ) ) ) / ( MUR + CS ) )", "obj1": 0.5295275590551181, "obj2": 0.3424226847770655}, {"determining": "Min( ( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / ( ACS - MRS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( FirstVNF_RAM + Const ) )", "choosing": "( ( ( DS / ( ( Min( RMSe ,MUM ) * Min( CS ,RCSe ) ) + DS ) ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( CS - ( DS - RCSe ) ) ,( DS / ( RCSe - ( ( ( MUM - MUR ) - CS ) - MUR ) ) ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.16443829409986552}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( BR,( FirstVNF_CPU - Const ) ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( CS - DS ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( MUR ,( Max( Max( ( CS / MUC ),MUM ),MUC ) * CS ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.15371967472091752}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( ( Const * ( FirstVNF_CPU_Server / ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "( ( ( ( ( ( Max( ( MUR * MUM ),( DS * MUC ) ) / ( MUR - ( RRSe / CS ) ) ) + MLU ) * CS ) - RCSe ) - ( MLU + MUR ) ) / ( DS + MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.6812259181574725}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ACS + CRS ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( FirstVNF_CPU / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( ( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( MLU / ( MUM * ( MUM * MUR ) ) ) ) ) - Min( CS ,MUM ) ) / MLU ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.562992125984252, "obj2": 0.3059350469001169}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( Const - MDR ) ) / ( ACS + RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUC / MUR ) + DS ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.5078740157480315, "obj2": 0.36598349607906416}, {"determining": "Max( ( ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) + FirstVNF_CPU ),( ( FirstVNF_Mem_Server / ( DDR - ARS ) ) / Const ) )", "choosing": "( Max( ( RRSe + Max( MLU,( ( ( MUC - MUM ) - MUC ) / ( RCSe - RCSe ) ) ) ),( RRSe / MUM ) ) / ( MUR + RCSe ) )", "obj1": 0.1673228346456693, "obj2": 0.704420543415858}, {"determining": "( ( ACS * PN ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( CS / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( CS,RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.7145669291338582, "obj2": 0.17710734823285643}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_RAM - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ( Min( ACS ,BR ) + FirstVNF_RAM ) ,ACS ) * ( Const - MDR ) ) / ( ACS + RRS ) ) + ( ( PN / BR ) * ( ACS * RRS ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / ( Max( Max( Max( MLU,( MUC - CS ) ),( CS + DS ) ),DS ) - CS ) ) + Min( ( ( MUM - ( RRSe / MUM ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.5177165354330708, "obj2": 0.3567547643200831}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( FirstVNF_Mem,Min( ACS ,DDR ) ) ) ,FirstVNF_RAM_Server ) * ( Const - MDR ) )", "choosing": "( Min( Min( MLU ,Min( CS ,MLU ) ) ,( ( DS - RCSe ) - CS ) ) - Min( CS ,RRSe ) )", "obj1": 0.5669291338582677, "obj2": 0.28424446221141864}, {"determining": "Max( ( ( ( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( DDR + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / MLU ) * DS ) ) / Max( Max( MLU,( MUC - DS ) ),MUR ) )", "obj1": 0.11220472440944881, "obj2": 0.7736048138980968}, {"determining": "Max( ( ( ( AMS + Min( ARS ,( CRS * FirstVNF_RAM ) ) ) * Max( DDR,CRS ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( FirstVNF_RAM_Server + AMS ) - ( ( Max( ( Min( MDR ,FirstVNF_CPU_Server ) * FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( Max( MUR,MUC ) * DS ) / ( MLU + MUM ) ) * DS ) ) / Min( ( MLU / Min( MUR ,( ( MUM + MUM ) - RRSe ) ) ) ,( MUM / ( ( MUC / MLU ) / Max( Min( CS ,MUM ),MUR ) ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7495369392494862}, {"determining": "( Max( ACS,Max( FirstVNF_Mem,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( ( AMS + ( Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.3700787401574803, "obj2": 0.49487353919152943}, {"determining": "( ( RRS / ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( Max( FirstVNF_CPU,DDR ) ,AMS ) * ( Const - MDR ) ) - Max( ACS,DDR ) ) )", "choosing": "Max( ( ( ( ( ( CS * DS ) + DS ) + MUM ) + MUR ) / ( Min( RMSe ,RCSe ) / Max( MUM,CS ) ) ),( ( DS / RMSe ) + RMSe ) )", "obj1": 0.8917322834645669, "obj2": 0.041834103612551826}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( ( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( MLU / MUC ) ) ) - Min( CS ,MUM ) ) / MLU ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.5531496062992126, "obj2": 0.31616305386782373}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( MLU * DS ) - RMSe ) )", "obj1": 0.8700787401574803, "obj2": 0.058701910540819566}, {"determining": "( Min( ACS ,AMS ) * ( Const - Max( FirstVNF_RAM,CRS ) ) )", "choosing": "Min( Min( DS ,MUM ) ,( ( Min( RRSe ,MUM ) + ( MUR + ( DS * RMSe ) ) ) / RCSe ) )", "obj1": 0.65748031496063, "obj2": 0.23523242118200743}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6359477653139085}, {"determining": "Max( ( Const - FirstVNF_CPU ),Min( RRS ,( MDR + Max( Max( ACS,FirstVNF_Mem ),( ( ( FirstVNF_Mem / RRS ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) * ( DS * Max( MUC,RCSe ) ) ),Max( ( ( RMSe / CS ) + ( RRSe / RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.49380096076335883}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( MUM,( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.8405511811023622, "obj2": 0.09980387977570003}, {"determining": "Min( ( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.11758455735032852}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( ( Min( MDR ,( MRS / DDR ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( Max( Max( Max( MLU,( MUC - DS ) ),( DS + CS ) ),DS ) - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6268969437499011}, {"determining": "Min( ( Max( Max( MRS,FirstVNF_Mem ),( ( ( FirstVNF_Mem / RRS ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) + FirstVNF_CPU ) ) - AMS ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - MUC ) ),( DS + CS ) ),RMSe ) ,Min( ( RRSe - ( Min( RRSe ,MUC ) + RCSe ) ) ,RCSe ) ) ) + Min( ( ( Max( ( ( RMSe - MUM ) - Max( MUM,RCSe ) ),DS ) - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4886249959226833}, {"determining": "( ( ( Max( CRS,Const ) - MDR ) - ACS ) * ( CRS - ( MDR / Min( ( ( BR + FirstVNF_RAM_Server ) / MDR ) ,Min( Min( RRS ,( FirstVNF_CPU - Min( PN ,FirstVNF_CPU ) ) ) ,BR ) ) ) ) )", "choosing": "( ( ( DS * ( Min( ( ( ( MUC + MLU ) / MUC ) * ( ( MUM * MUM ) * Min( MLU ,RMSe ) ) ) ,RCSe ) + MUM ) ) / MUC ) / Max( MUM,RRSe ) )", "obj1": 0.9153543307086615, "obj2": 0.03850733485501374}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( ( Const - MDR ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUC ) / ( RRSe - Min( ( CS + MUR ) ,( Max( Max( ( CS / MUC ),DS ),MUC ) * DS ) ) ) )", "obj1": 0.8464566929133859, "obj2": 0.08689843121828113}, {"determining": "( FirstVNF_CPU_Server + Max( MRS,Min( PN ,Min( ( FirstVNF_Mem_Server / AMS ) ,Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( RRSe,MUR ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( RMSe ,DS ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6922578042754671}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MRS + DDR ) + MDR ) ) / Min( MDR ,( Max( ACS,( PN / ( FirstVNF_Mem * ( ( ACS - Const ) / MRS ) ) ) ) / DDR ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( ( Max( CS,( RRSe - CS ) ) * ( MUR * Max( RCSe,MUM ) ) ) * Min( MUC ,RRSe ) ) ) ) - CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5220977047537191}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.9862204724409449, "obj2": 0.00679794647478072}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( DDR - MRS ) / ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( FirstVNF_RAM_Server * AMS ) - Max( DDR,MRS ) ) ) ) ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( MUC * DS ) ,Min( RCSe ,RMSe ) ) * ( RMSe * ( MUC + MLU ) ) ) - CS ) )", "obj1": 0.5255905511811023, "obj2": 0.3492221435506351}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - MRS ),Min( FirstVNF_CPU ,( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / Min( MDR ,( Max( ACS,Min( PN ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) / DDR ) ) )", "choosing": "Min( ( ( Max( RRSe,( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) - RMSe ) ) * RRSe ) / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - CS ) )", "obj1": 0.3031496062992126, "obj2": 0.5511012311677975}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) ) )", "choosing": "Max( Min( ( RRSe + ( RMSe - RMSe ) ) ,( ( MUM + CS ) / ( CS - DS ) ) ),( ( RCSe - Min( RCSe ,RRSe ) ) - Max( ( MLU + MUM ),Max( MUR,MUR ) ) ) )", "obj1": 0.952755905511811, "obj2": 0.02065773240208684}, {"determining": "Max( ( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) + DDR ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem ) ) - FirstVNF_RAM ) )", "choosing": "( ( MUM - MUR ) / ( DS + MUC ) )", "obj1": 0.17125984251968504, "obj2": 0.6997987353886727}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe + ( RMSe - RMSe ) ) ,( ( MUM + CS ) / ( CS - DS ) ) ),( ( RCSe - Min( RCSe ,RRSe ) ) - Max( ( MLU + MUM ),Max( MUR,MUR ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.24091560297337816}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * ( MDR / AMS ) ) * ( Const - MDR ) ) ) ) * Min( ( Const * AMS ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),Min( Max( RMSe,MUR ) ,( ( ( DS / DS ) * MLU ) - MUR ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.045384524576316705}, {"determining": "Min( ( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.15142574204469908}, {"determining": "( Min( ACS ,Max( ( Min( ( Min( ( PN * MRS ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) * ( Const - MDR ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( ( MLU / ( ( Max( Max( ( MUC - MUR ),MLU ),MUC ) / MLU ) * DS ) ) / Max( Max( DS,RCSe ),MUR ) )", "obj1": 0.8720472440944882, "obj2": 0.05800316625874115}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( MUM,( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.8011811023622047, "obj2": 0.1338828013560041}, {"determining": "( Min( ( Min( ( CRS * MDR ) ,FirstVNF_CPU_Server ) / ( Max( ( Max( PN,( MDR / MRS ) ) * ( AMS + ( FirstVNF_Mem - BR ) ) ),Max( ( ( MRS - CRS ) * ( FirstVNF_Mem * Const ) ),ACS ) ) + FirstVNF_CPU_Server ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( ( MLU - Max( MLU,( ( ( DS / ( RRSe - ( CS + MLU ) ) ) + MLU ) + CS ) ) ) / ( MUR + CS ) )", "obj1": 0.6476377952755905, "obj2": 0.2375963356329421}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "( ( Min( ACS ,AMS ) * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * Max( ( FirstVNF_Mem - BR ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( Min( CS ,MUM ) * DS ) ,CS ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.33267716535433073, "obj2": 0.5343772003850082}, {"determining": "( ( ( ( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) ) * DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( ( DS + CS ),Max( MLU,( MUC - DS ) ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / Max( RRSe,MUM ) ) ) ) )", "obj1": 0.8090551181102362, "obj2": 0.1286551307341801}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RRSe + ( ( ( Max( ( CS / MUM ),CS ) / MUM ) / Max( MUM,( MUR * DS ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( ( DS - Max( Max( DS,RCSe ),RCSe ) ) / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.7244094488188977, "obj2": 0.17663382767502028}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - ( FirstVNF_CPU_Server - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5596341960366692}, {"determining": "Max( ( BR - MDR ),( Max( CRS,BR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,( ( MLU * ( ( ( MUM / MUM ) / Min( RRSe ,RCSe ) ) / DS ) ) - ( ( MUC + RCSe ) - ( DS - MUC ) ) ) ) / DS ) - Min( CS ,MUM ) )", "obj1": 0.2559055118110236, "obj2": 0.6002073955618809}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( Min( ( CS / RMSe ) ,( ( CS / RMSe ) + MUR ) ) - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6410958269184444}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,( ( ( MRS * MRS ) + ( ACS - Const ) ) / DDR ) ) ) )", "choosing": "( ( RRSe - MUR ) + ( ( RCSe / Min( Max( DS,( DS / Min( RRSe ,Min( MUC ,RCSe ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.9625984251968503, "obj2": 0.014797120514246294}, {"determining": "( ( CRS * Min( MDR ,Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,ARS ) ) ) * ( ( Max( ( FirstVNF_RAM + ( ( MRS + ACS ) - ( ( FirstVNF_CPU / BR ) - Max( BR,DDR ) ) ) ),Max( AMS,AMS ) ) / AMS ) - Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * RMSe ) * ( RRSe - MUC ) ) / Max( ( ( ( ( ( ( MUM - RRSe ) / MUM ) / MUM ) / Max( Min( DS ,( DS / CS ) ),( RCSe * ( CS - MLU ) ) ) ) * Max( DS,DS ) ) * RRSe ),MLU ) )", "obj1": 0.9212598425196851, "obj2": 0.03583399493183244}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU * AMS ) ),( ( ( Min( ( Min( MDR ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ,AMS ) * ( Const - MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) )", "choosing": "( ( DS + ( ( ( MUM * ( MLU / Max( RRSe,MUM ) ) ) - ( RCSe / MUR ) ) * ( ( MUM * MUR ) + Max( DS,MLU ) ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5551181102362205, "obj2": 0.30919883838898843}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - ( FirstVNF_CPU / FirstVNF_Mem ) ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "( ( RCSe - RRSe ) + ( ( Min( MUC ,Max( MUM,MLU ) ) / Min( Max( Max( Max( MLU,( MUC - DS ) ),( DS + CS ) ),DS ) ,RMSe ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5704172955835481}, {"determining": "( ( Const * ( AMS / ( ( FirstVNF_Mem_Server - CRS ) * DDR ) ) ) / ( ( ( FirstVNF_CPU + Const ) + RRS ) + ( ( FirstVNF_Mem + AMS ) - DDR ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( ( MUM * DS ) + Max( RCSe,RMSe ) ) ) - MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.36023622047244097, "obj2": 0.5103401135486023}, {"determining": "( ( Min( Min( MDR ,Max( BR,( FirstVNF_CPU - ( ( PN - CRS ) * AMS ) ) ) ) ,AMS ) * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( ( MUM + ( CS - Max( RCSe,RCSe ) ) ) * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.36811023622047245, "obj2": 0.5060270289612319}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( MUM - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.812992125984252, "obj2": 0.12331043825327584}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( ( ( DDR / PN ) - ACS ) / RRS ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( MUM,( Min( ( DS / ( DS * MUC ) ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.844488188976378, "obj2": 0.09624692420376786}, {"determining": "( Min( FirstVNF_Mem_Server ,( AMS / ( ACS * FirstVNF_Mem_Server ) ) ) / ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + CRS ) / Max( ( Const - MDR ),( ( FirstVNF_RAM * ARS ) * DDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe - Min( Max( Max( Max( Max( RCSe,RCSe ),MLU ),Min( RCSe ,MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),DS ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.6082677165354331, "obj2": 0.2615908586475311}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.35236220472440943, "obj2": 0.5153926434988606}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM - MUC ) ,Max( MUC,DS ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.594488188976378, "obj2": 0.2673355065939628}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) * ( ( ( BR - Min( DDR ,FirstVNF_Mem_Server ) ) - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( PN * MDR ) ) ),( ( ( Min( ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( Const - MDR ) ) / ( RRS + ACS ) ) + ( ( BR / ( AMS - AMS ) ) * ( ACS * RRS ) ) ) )", "choosing": "Max( ( ( ( RCSe + RCSe ) - Max( RRSe,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),Min( Max( Max( Max( MLU,( ( Max( MUC,DS ) / ( DS + MLU ) ) - CS ) ),( RRSe + CS ) ),DS ) ,CS ) )", "obj1": 0.5078740157480315, "obj2": 0.36598349607906416}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( Min( ( CS / RMSe ) ,( ( CS / RMSe ) + MUR ) ) - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.6023806659166682}, {"determining": "( Min( Max( ( ( FirstVNF_Mem_Server * Min( MDR ,PN ) ) * AMS ),CRS ) ,( ( ( PN - AMS ) + FirstVNF_CPU ) - ARS ) ) * Min( ( ( FirstVNF_Mem_Server / ( Const - ACS ) ) - Max( CRS,FirstVNF_Mem ) ) ,Const ) )", "choosing": "( ( MUM + CS ) - ( MUM / ( CS + MUM ) ) )", "obj1": 0.5826771653543307, "obj2": 0.271156322229862}, {"determining": "( ( Max( ( PN + FirstVNF_RAM_Server ),( BR / MDR ) ) * ( Max( Max( AMS,AMS ),FirstVNF_RAM ) + MDR ) ) / Min( Max( Max( Const,MRS ),( CRS / AMS ) ) ,MDR ) )", "choosing": "Min( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( Min( CS ,Min( Max( DS,RCSe ) ,( Min( MUR ,MUC ) / RMSe ) ) ) ,( MUC / ( ( ( MUR * RCSe ) / MUC ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) ,( ( DS * ( RRSe + MUM ) ) - MUM ) )", "obj1": 0.3188976377952756, "obj2": 0.5402288209832544}, {"determining": "( Max( ACS,Max( FirstVNF_Mem,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( ( AMS + ( Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( DS / ( RRSe * MUC ) ) + Min( MUM ,( ( Min( ( ( DS - RMSe ) - CS ) ,( DS / DS ) ) * RRSe ) - RMSe ) ) ) / ( RRSe - RMSe ) )", "obj1": 0.734251968503937, "obj2": 0.1740880836016263}, {"determining": "( Max( ACS,PN ) - Max( ( DDR + ( Min( Max( BR,( FirstVNF_CPU - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ,MDR ) * Min( BR ,CRS ) ) ),FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( ( MUC / MUR ) / Max( MUM,MUC ) ) ) + Min( CS ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( ( Max( ( ( CS - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( MUM - MUR ) ) ),MUC ) * CS ) ,MUR ) ) )", "obj1": 0.7381889763779528, "obj2": 0.17230113363372948}, {"determining": "( ( FirstVNF_RAM_Server * CRS ) * ( MDR / Max( ( MDR * MRS ),( Max( FirstVNF_RAM,AMS ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( DS / Max( DS,MLU ) ) ,( RCSe + Min( DS ,RRSe ) ) ) - Max( Min( MUM ,RCSe ),RCSe ) )", "obj1": 0.2283464566929134, "obj2": 0.6151458111732518}, {"determining": "( ( Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - ( MRS - CRS ) ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( RCSe,Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5210795309741962}, {"determining": "( ( ( ( Const * ( RRS / ( DDR * RRS ) ) ) * ( BR - CRS ) ) + ( FirstVNF_RAM * ARS ) ) / ( ( FirstVNF_Mem_Server + CRS ) / ( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * DDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUC ,RRSe ),MLU ),Min( RCSe ,MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - ( DS / MUM ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.2645566055149797}, {"determining": "Max( Min( ACS ,RRS ),( ( MDR - AMS ) - ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) + Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * DS ) ,( RMSe - ( RRSe - RMSe ) ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MUR / RRSe ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) ,( MUC / MUR ) )", "obj1": 0.2736220472440945, "obj2": 0.5790195273035285}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / Min( MDR ,( Max( ACS,Min( PN ,( BR - CRS ) ) ) / DDR ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - CS ) )", "obj1": 0.3110236220472441, "obj2": 0.5442297280126891}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5920357388442476}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - MRS ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / Min( MDR ,( Max( ACS,Min( PN ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) / DDR ) ) )", "choosing": "Min( ( ( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - CS ) )", "obj1": 0.3090551181102362, "obj2": 0.5455017145713634}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( ACS,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) * ( ( FirstVNF_RAM_Server + ( ( BR * AMS ) - ARS ) ) * ( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( Min( ( ( DS - ( Max( ( ( MUR - RCSe ) * MLU ),Min( RCSe ,( MUC - MUM ) ) ) / ( Max( ( MUR - MUC ),Max( DS,MLU ) ) + RCSe ) ) ) - CS ) ,( DS / ( MUC * MUC ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5807086614173228, "obj2": 0.27776206324035235}], "11": [{"determining": "Min( ( Min( ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( ACS - MRS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,Min( ( ( ACS * AMS ) / Const ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe - ( DS / Max( MUC,CS ) ) ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),DS ) ,RMSe ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( CRS,Const ) - MDR ) - ACS ) * ( CRS - ( MDR / Min( ( ( BR + FirstVNF_RAM_Server ) / MDR ) ,Min( Min( RRS ,( FirstVNF_CPU - Min( PN ,FirstVNF_CPU ) ) ) ,BR ) ) ) ) )", "choosing": "( ( ( DS * ( Min( ( ( ( MUC + MLU ) / MUC ) * ( ( MUM * MUM ) * Min( MLU ,RMSe ) ) ) ,RCSe ) + MUM ) ) / MUC ) / Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Max( ACS,BR ) ,ACS ) * ( AMS - FirstVNF_CPU ) ) + DDR ) / FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( RCSe / Min( RMSe ,RMSe ) ) ) / Max( ( RCSe / RMSe ),( Max( ( Max( MUC,( MUR / MUR ) ) + RRSe ),( RRSe * RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8635528467108932}, {"determining": "Min( ( Min( AMS ,( Min( ( ( Const / MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( ( Max( MUM,RCSe ) - ( MUM * MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.765748031496063, "obj2": 0.1269451125210553}, {"determining": "Min( ( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.11726605502056668}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - ( CS + MUM ) ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,MUM )", "obj1": 0.452755905511811, "obj2": 0.42470205355911206}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( ( ( Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.4322681751643757}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_RAM ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "Max( ( ( ( ( Max( RCSe,MLU ) + ( MUC / MUR ) ) + RMSe ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.6850393700787402, "obj2": 0.20312950198616267}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.08923718563603472}, {"determining": "( Min( ACS ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + ( ( MRS / AMS ) + MRS ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( ( DS - RCSe ) - ( ( RCSe / Max( ( MLU * MUC ),( MUC / MUR ) ) ) - MUR ) ) ,( DS / DS ) ) + ( RCSe / Min( Max( Max( ( MLU - Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4503075400852304}, {"determining": "Max( ( Max( Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) / ( ACS - Const ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * MDR ) - ( DDR + MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( Max( ( Max( MLU,MLU ) * RCSe ),( MUR - MUM ) ) - MUM )", "obj1": 0.46653543307086615, "obj2": 0.3988504160555803}, {"determining": "Min( ( ( ARS + BR ) - AMS ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - MUC ) ),( DS + CS ) ),RMSe ) ,Min( ( RRSe - ( Min( RRSe ,MUC ) + RCSe ) ) ,RCSe ) ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.22167959508314564}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / BR ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * ARS ) )", "choosing": "( ( ( DS + MUR ) - ( Min( ( Max( MLU,RCSe ) - Min( ( ( RRSe * RRSe ) - RMSe ) ,MUC ) ) ,Min( ( Max( MUM,RMSe ) / RCSe ) ,MLU ) ) / MUR ) ) / ( MUM / DS ) )", "obj1": 0.10236220472440945, "obj2": 0.805706621264607}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / ( MUC / MUR ) )", "obj1": 0.10826771653543307, "obj2": 0.7735861259340865}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6502599198292992}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( ( Const - MDR ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUC ) / ( RRSe - Min( ( CS + MUR ) ,( Max( Max( ( CS / MUC ),DS ),MUC ) * DS ) ) ) )", "obj1": 0.8464566929133859, "obj2": 0.08689843121828113}, {"determining": "( Max( PN,DDR ) * ( ( ( ( ( MDR + FirstVNF_RAM ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * BR ) / ( MDR * FirstVNF_Mem ) ) - CRS ) )", "choosing": "Min( RMSe ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.39763779527559057, "obj2": 0.474931835268329}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09055118110236221, "obj2": 0.8348553987509655}, {"determining": "( ( Const * ( FirstVNF_CPU_Server / ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "( ( ( ( ( ( Max( ( MUR * MUM ),( DS * MUC ) ) / ( MUR - ( RRSe / CS ) ) ) + MLU ) * CS ) - RCSe ) - ( MLU + MUR ) ) / ( DS + MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.6812259181574725}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( BR,( FirstVNF_CPU - Const ) ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( CS - DS ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( MUR ,( Max( Max( ( CS / MUC ),MUM ),MUC ) * CS ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.15371967472091752}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server + ( RRS - ( ( Max( FirstVNF_CPU,DDR ) + FirstVNF_CPU ) / ( ( MRS * AMS ) - Min( DDR ,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ACS ,AMS ) * ( MDR - Const ) ) / ( Min( ( FirstVNF_RAM_Server / CRS ) ,CRS ) - AMS ) ) + ( ( PN / BR ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) / MLU ) ,( Max( CS,RMSe ) - Max( ( Min( ( MLU * CS ) ,( MUC * Max( DS,MUM ) ) ) * DS ),MUR ) ) )", "obj1": 0.5374015748031497, "obj2": 0.3230455995213729}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "Max( ( ( ( RRS - PN ) * Max( DDR,CRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( BR * CRS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( RCSe + ( ( CS + Max( MLU,MUM ) ) - MUC ) ) - DS ) ),MUR ) / ( MLU / ( DS * ( MLU / MLU ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8198884265464628}, {"determining": "( ( RRS / ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( Max( FirstVNF_CPU,DDR ) ,AMS ) * ( Const - MDR ) ) - Max( ACS,DDR ) ) )", "choosing": "Max( ( ( ( ( ( CS * DS ) + DS ) + MUM ) + MUR ) / ( Min( RMSe ,RCSe ) / Max( MUM,CS ) ) ),( ( DS / RMSe ) + RMSe ) )", "obj1": 0.8917322834645669, "obj2": 0.041834103612551826}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7403908795811706}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ( BR * FirstVNF_CPU_Server ) - ( ( MDR / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * DDR ) ) - ( MRS * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( Min( RCSe ,( RCSe + ( MUC / CS ) ) ) * ( RCSe * Min( ( Min( DS ,( CS - RCSe ) ) / Max( RMSe,MLU ) ) ,RRSe ) ) ) ) - Min( MUM ,CS ) )", "obj1": 0.2204724409448819, "obj2": 0.6224034964097153}, {"determining": "( ( FirstVNF_RAM_Server / ( Max( ACS,FirstVNF_CPU ) - ( ( ACS - Max( ( Const - ARS ),DDR ) ) / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC / MUC ) - MUR ),( ( MLU * MUR ) + ( ( Max( MUC,( Min( CS ,DS ) / DS ) ) - ( MUC - MUM ) ) * MUM ) ) ) - Min( CS ,( RMSe - DS ) ) )", "obj1": 0.48031496062992124, "obj2": 0.37453689150061925}, {"determining": "( Max( BR,( Max( FirstVNF_RAM,( Max( ( ( DDR / AMS ) - ACS ),( ( Const * MDR ) * AMS ) ) - Max( ( ( DDR / AMS ) - Min( FirstVNF_Mem ,ARS ) ),( AMS * Max( FirstVNF_CPU_Server,PN ) ) ) ) ) / CRS ) ) * Max( ARS,( ACS - Const ) ) )", "choosing": "( ( ( DS * MUC ) / Max( ( Min( ( CS / MUM ) ,MUM ) / ( MUM / MUC ) ),MUR ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08661417322834646, "obj2": 0.8506069980420871}, {"determining": "( ( AMS + ( ( ( Max( BR,( Min( AMS ,FirstVNF_Mem ) + ( FirstVNF_Mem_Server * ARS ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + BR ) + MRS ) )", "choosing": "Min( Min( ( ( ( ( ( Min( MUM ,MLU ) * ( MUC - MUC ) ) / MUR ) * MUM ) + CS ) + RRSe ) ,( Max( RRSe,( MUM - RRSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * RRSe ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8661417322834646, "obj2": 0.08249214494883995}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( MLU - Max( MLU,( ( ( DS / Max( CS,RCSe ) ) + MLU ) + CS ) ) ) / ( MUR + CS ) )", "obj1": 0.5295275590551181, "obj2": 0.3424226847770655}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6359477653139085}, {"determining": "Max( Min( ACS ,RRS ),( ( MDR - AMS ) - ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) + Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * DS ) ,( RMSe - ( RRSe - RMSe ) ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MUR / RRSe ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) ,( MUC / MUR ) )", "obj1": 0.2736220472440945, "obj2": 0.5790195273035285}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ACS + CRS ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( FirstVNF_CPU / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( ( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( MLU / ( MUM * ( MUM * MUR ) ) ) ) ) - Min( CS ,MUM ) ) / MLU ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.562992125984252, "obj2": 0.3059350469001169}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( Const - MDR ) ) / ( ACS + RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUC / MUR ) + DS ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.5078740157480315, "obj2": 0.36598349607906416}, {"determining": "Max( ( ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) + FirstVNF_CPU ),( ( FirstVNF_Mem_Server / ( DDR - ARS ) ) / Const ) )", "choosing": "( Max( ( RRSe + Max( MLU,( ( ( MUC - MUM ) - MUC ) / ( RCSe - RCSe ) ) ) ),( RRSe / MUM ) ) / ( MUR + RCSe ) )", "obj1": 0.1673228346456693, "obj2": 0.704420543415858}, {"determining": "( ( ACS * PN ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( CS / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( CS,RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.7145669291338582, "obj2": 0.17710734823285643}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_RAM - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ( Min( ACS ,BR ) + FirstVNF_RAM ) ,ACS ) * ( Const - MDR ) ) / ( ACS + RRS ) ) + ( ( PN / BR ) * ( ACS * RRS ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / ( Max( Max( Max( MLU,( MUC - CS ) ),( CS + DS ) ),DS ) - CS ) ) + Min( ( ( MUM - ( RRSe / MUM ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.5177165354330708, "obj2": 0.3567547643200831}, {"determining": "Max( ( Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * MDR ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( Max( Min( ( MUC / MUR ) ,( MUM / Max( DS,( DS - RRSe ) ) ) ),( MUR - MUM ) ) - MUM )", "obj1": 0.4744094488188976, "obj2": 0.3840772975277448}, {"determining": "( Min( ( ( ACS - AMS ) - Max( PN,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) * ( Const + MDR ) )", "choosing": "( Min( ( DS / ( MUC * DS ) ) ,Max( ( DS - MUM ),CS ) ) - ( ( Max( CS,( CS / ( ( ( RCSe + CS ) + RCSe ) / MUR ) ) ) / MUM ) / Max( MUM,( DS - DS ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.19021025987476964}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.5413385826771654, "obj2": 0.31216759440082503}, {"determining": "( ( ( Max( CRS,Const ) - MDR ) - ACS ) * ( CRS - ( MDR / Min( ( ( BR + FirstVNF_RAM_Server ) / MDR ) ,Min( Min( RRS ,( FirstVNF_CPU - Min( PN ,FirstVNF_CPU ) ) ) ,BR ) ) ) ) )", "choosing": "( ( ( DS * ( Min( ( ( ( MUC + MLU ) / MUC ) * ( ( MUM * MUM ) * Min( MLU ,RMSe ) ) ) ,RCSe ) + MUM ) ) / MUC ) / Max( MUM,RRSe ) )", "obj1": 0.9153543307086615, "obj2": 0.03850733485501374}, {"determining": "( Max( ACS,PN ) - ( ( ( MDR - ARS ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( ( MUC / MUR ) + Max( ( Max( MUR,MUM ) * RMSe ),RRSe ) ) + MUM ) + Min( CS ,RCSe ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.6988188976377953, "obj2": 0.19287897682065078}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * ( MDR / AMS ) ) * ( Const - MDR ) ) ) ) * Min( ( Const * AMS ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),Min( Max( RMSe,MUR ) ,( ( ( DS / DS ) * MLU ) - MUR ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.045384524576316705}, {"determining": "Max( ( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) + DDR ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) - Min( CS ,MUM ) )", "obj1": 0.20078740157480315, "obj2": 0.6409489061758162}, {"determining": "( Min( ACS ,AMS ) * ( Const - Max( FirstVNF_RAM,CRS ) ) )", "choosing": "Min( Min( DS ,MUM ) ,( ( Min( RRSe ,MUM ) + ( MUR + ( DS * RMSe ) ) ) / RCSe ) )", "obj1": 0.65748031496063, "obj2": 0.23523242118200743}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( MLU * DS ) - RMSe ) )", "obj1": 0.8700787401574803, "obj2": 0.05733748057144911}, {"determining": "Max( ( Const - FirstVNF_CPU ),Min( RRS ,( MDR + Max( Max( ACS,FirstVNF_Mem ),( ( ( FirstVNF_Mem / RRS ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) * ( DS * Max( MUC,RCSe ) ) ),Max( ( ( RMSe / CS ) + ( RRSe / RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.49380096076335883}, {"determining": "( ( FirstVNF_RAM_Server * CRS ) * ( MDR / Max( ( MDR * MRS ),( Max( FirstVNF_RAM,AMS ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( DS / Max( DS,MLU ) ) ,( RCSe + Min( DS ,RRSe ) ) ) - Max( Min( MUM ,RCSe ),RCSe ) )", "obj1": 0.2283464566929134, "obj2": 0.6151458111732518}, {"determining": "Min( ( Max( Max( MRS,FirstVNF_Mem ),( ( ( FirstVNF_Mem / RRS ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) + FirstVNF_CPU ) ) - AMS ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - MUC ) ),( DS + CS ) ),RMSe ) ,Min( ( RRSe - ( Min( RRSe ,MUC ) + RCSe ) ) ,RCSe ) ) ) + Min( ( ( Max( ( ( RMSe - MUM ) - Max( MUM,RCSe ) ),DS ) - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4886249959226833}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * ( RRSe - MUC ) ) / Max( ( MUR + ( ( ( Max( ( MUR - DS ),MLU ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( DS,DS ) ) ),MLU ) )", "obj1": 0.9468503937007874, "obj2": 0.024228893695983855}, {"determining": "( Max( AMS,Max( RRS,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( MRS / AMS ) )", "choosing": "Min( ( Max( Min( ( MUC * DS ) ,( RCSe + RMSe ) ),Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( CS - RRSe ) ) ) ) ) ) - CS ) ,Min( Max( Max( Max( Max( RCSe,RCSe ),MLU ),Min( RCSe ,MUR ) ),DS ) ,CS ) )", "obj1": 0.3700787401574803, "obj2": 0.49487353919152943}, {"determining": "( FirstVNF_CPU_Server + Max( MRS,Min( PN ,Min( ( FirstVNF_Mem_Server / AMS ) ,Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( RRSe,MUR ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( RMSe ,DS ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6922578042754671}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU * AMS ) ),( ( ( Min( ( Min( MDR ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ,AMS ) * ( Const - MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) )", "choosing": "( ( DS + ( ( ( MUM * ( MLU / Max( RRSe,MUM ) ) ) - ( RCSe / MUR ) ) * ( ( MUM * MUR ) + Max( DS,MLU ) ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5551181102362205, "obj2": 0.30919883838898843}, {"determining": "Max( ( Const - MDR ),( Min( MDR ,Max( BR,( FirstVNF_CPU - Const ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM - MUC ) ,Max( MUC,DS ) ) - ( ( MUC + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.265748031496063, "obj2": 0.5913051974420938}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( DDR - MRS ) / ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( FirstVNF_RAM_Server * AMS ) - Max( DDR,MRS ) ) ) ) ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( MUC * DS ) ,Min( RCSe ,RMSe ) ) * ( RMSe * ( MUC + MLU ) ) ) - CS ) )", "obj1": 0.5255905511811023, "obj2": 0.3492221435506351}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( FirstVNF_Mem,Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) * ( Const - MDR ) )", "choosing": "( Min( ( ( Max( ( ( RMSe - MUM ) - Max( MUM,RCSe ) ),DS ) - RCSe ) - CS ) ,( DS / DS ) ) - Min( CS ,RRSe ) )", "obj1": 0.5669291338582677, "obj2": 0.28424446221141864}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - ( FirstVNF_CPU / FirstVNF_Mem ) ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "( ( RCSe - RRSe ) + ( ( Min( MUC ,Max( MUM,MLU ) ) / Min( Max( Max( Max( MLU,( MUC - DS ) ),( DS + CS ) ),DS ) ,RMSe ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5704172955835481}, {"determining": "( ( Max( ( PN + FirstVNF_RAM_Server ),( BR / MDR ) ) * ( Max( Max( AMS,AMS ),FirstVNF_RAM ) + MDR ) ) / Min( Max( Max( Const,MRS ),( CRS / AMS ) ) ,MDR ) )", "choosing": "Min( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( Min( CS ,Min( Max( DS,RCSe ) ,( Min( MUR ,MUC ) / RMSe ) ) ) ,( MUC / ( ( ( MUR * RCSe ) / MUC ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) ,( ( DS * ( RRSe + MUM ) ) - MUM ) )", "obj1": 0.3188976377952756, "obj2": 0.5402288209832544}, {"determining": "Max( ( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) + DDR ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem ) ) - FirstVNF_RAM ) )", "choosing": "( ( MUM - MUR ) / ( DS + MUC ) )", "obj1": 0.17125984251968504, "obj2": 0.6997987353886727}, {"determining": "Max( ( Const - MDR ),( Min( MDR ,Max( BR,( FirstVNF_CPU - Const ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM - MUC ) ,Max( MUC,DS ) ) - ( ( MUC + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.24803149606299213, "obj2": 0.6001686276075716}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe + ( RMSe - RMSe ) ) ,( ( MUM + CS ) / ( CS - DS ) ) ),( ( RCSe - Min( RCSe ,RRSe ) ) - Max( ( MLU + MUM ),Max( MUR,MUR ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.24091560297337816}, {"determining": "Max( ( ( ( AMS + Min( ARS ,( CRS * FirstVNF_RAM ) ) ) * Max( DDR,CRS ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( FirstVNF_RAM_Server + AMS ) - ( ( Max( ( Min( MDR ,FirstVNF_CPU_Server ) * FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( Max( MUR,MUC ) * DS ) / ( MLU + MUM ) ) * DS ) ) / Min( ( MLU / Min( MUR ,( ( MUM + MUM ) - RRSe ) ) ) ,( MUM / ( ( MUC / MLU ) / Max( Min( CS ,MUM ),MUR ) ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7495369392494862}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( ( Const - MDR ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUC ) / ( RRSe - Min( ( CS + MUR ) ,( Max( Max( ( CS / MUC ),DS ),MUC ) * DS ) ) ) )", "obj1": 0.8582677165354331, "obj2": 0.08359281375243789}, {"determining": "( Min( ( Min( ( CRS * MDR ) ,FirstVNF_CPU_Server ) / ( Max( ( Max( PN,( MDR / MRS ) ) * ( AMS + ( FirstVNF_Mem - BR ) ) ),Max( ( ( MRS - CRS ) * ( FirstVNF_Mem * Const ) ),ACS ) ) + FirstVNF_CPU_Server ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( ( MLU - Max( MLU,( ( ( DS / ( RRSe - ( CS + MLU ) ) ) + MLU ) + CS ) ) ) / ( MUR + CS ) )", "obj1": 0.6476377952755905, "obj2": 0.2375963356329421}, {"determining": "( Min( FirstVNF_RAM_Server ,( Max( Min( PN ,FirstVNF_RAM_Server ),( FirstVNF_CPU / BR ) ) * ( ACS * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + FirstVNF_Mem ) ) ) ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * DDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( Max( DS,( DS - RRSe ) ) - MUM ) ,( DS / DS ) ) + ( RCSe - Min( Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),RMSe ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.25085994943067513}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - ( FirstVNF_CPU_Server - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5596341960366692}, {"determining": "( ( Max( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( MDR / BR ) ) * ( ( MDR + DDR ) + MDR ) ) / Min( MDR ,( Max( ACS,Min( ( FirstVNF_Mem_Server * ( BR / ( MRS - FirstVNF_CPU_Server ) ) ) ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) / DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUC ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),DS ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5714574582943709}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RRSe + ( ( ( Max( ( CS / MUM ),CS ) / MUM ) / Max( MUM,( MUR * DS ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( ( DS - Max( Max( DS,RCSe ),RCSe ) ) / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.7244094488188977, "obj2": 0.17663382767502028}, {"determining": "( Min( MDR ,( MDR + MRS ) ) * Max( PN,Min( MDR ,Max( BR,( FirstVNF_CPU - MDR ) ) ) ) )", "choosing": "( Min( CS ,MUM ) - ( ( CS - RRSe ) * ( Min( DS ,( ( MLU + RMSe ) * MLU ) ) - MUR ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6127258319606357}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( MLU * DS ) - RMSe ) )", "obj1": 0.8740157480314961, "obj2": 0.054634321548177725}, {"determining": "( Min( FirstVNF_RAM_Server ,( AMS / ( ACS * Max( DDR,Min( FirstVNF_RAM_Server ,( Const + ( AMS * AMS ) ) ) ) ) ) ) / ( ( FirstVNF_Mem_Server + CRS ) / ( ( Const - MDR ) / ( ( FirstVNF_RAM * FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUC ,RRSe ),MLU ),Min( RCSe ,MUR ) ),RMSe ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( Max( DS,MLU ) ,CS ) ) ) - ( RMSe * RMSe ) ) ,( DS / DS ) ) ) )", "obj1": 0.6122047244094488, "obj2": 0.2553817097220219}, {"determining": "( ( Const - MDR ) * Min( DDR ,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,Min( BR ,AMS ) ) ) )", "choosing": "( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) - Min( Min( ( MUC + RMSe ) ,( ( RRSe / ( MUM - RRSe ) ) - ( RMSe - CS ) ) ) ,MUM ) )", "obj1": 0.5767716535433071, "obj2": 0.2759283089990634}, {"determining": "Max( ( Const - MDR ),( FirstVNF_RAM_Server / ( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_CPU,CRS ) ) ) ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM - MUC ) ,Max( Min( MUC ,RRSe ),DS ) ) - Max( Max( Max( Min( MUC ,RRSe ),RCSe ),Min( RCSe ,MUR ) ),DS ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.24606299212598426, "obj2": 0.6105592948237761}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( Max( ACS,FirstVNF_RAM ) * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( DS / Max( ( MUR + ( ( ( Max( ( MUR - DS ),MLU ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( DS,DS ) ) ),MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.005183365726254115}, {"determining": "Min( ( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / ( ACS - MRS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( FirstVNF_RAM + Const ) )", "choosing": "( ( ( DS / ( ( Min( RMSe ,MUM ) * Min( CS ,RCSe ) ) + DS ) ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( CS - ( DS - RCSe ) ) ,( DS / ( RCSe - ( ( ( MUM - MUR ) - CS ) - MUR ) ) ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.16443829409986552}, {"determining": "( Min( Max( ( ( FirstVNF_Mem_Server * Min( MDR ,PN ) ) * AMS ),CRS ) ,( ( ( PN - AMS ) + FirstVNF_CPU ) - ARS ) ) * Min( ( ( FirstVNF_Mem_Server / ( Const - ACS ) ) - Max( CRS,FirstVNF_Mem ) ) ,Const ) )", "choosing": "( ( MUM + CS ) - ( MUM / ( CS + MUM ) ) )", "obj1": 0.5826771653543307, "obj2": 0.271156322229862}, {"determining": "( Min( MDR ,Const ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - MRS ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RCSe,( DS - RRSe ) ) ) ) ) * ( MLU + MUR ) ) - CS ) )", "obj1": 0.25393700787401574, "obj2": 0.5947012202192204}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MRS + DDR ) + MDR ) ) / Min( MDR ,( Max( ACS,( PN / ( FirstVNF_Mem * ( ( ACS - Const ) / MRS ) ) ) ) / DDR ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( ( Max( CS,( RRSe - CS ) ) * ( MUR * Max( RCSe,MUM ) ) ) * Min( MUC ,RRSe ) ) ) ) - CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5220977047537191}, {"determining": "( ( Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( PN / MDR ) ) * ( ( FirstVNF_RAM * ARS ) * ( ( Min( ACS ,AMS ) * ( Const - FirstVNF_CPU_Server ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / ( ( FirstVNF_RAM_Server + ACS ) * DDR ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( RCSe,Min( DS ,RRSe ) ) ) ) ) - CS ) )", "obj1": 0.6299212598425197, "obj2": 0.24410739196354367}, {"determining": "( ( Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - ( MRS - CRS ) ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - CS ) )", "obj1": 0.32677165354330706, "obj2": 0.5357126856922797}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( PN * MDR ) ) ),( ( ( Min( ( ( Min( FirstVNF_Mem_Server ,MDR ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( Const - MDR ) ) / ( ACS + RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUC / MUR ) + DS ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),Min( Max( Max( Max( MUM,MLU ),( DS + CS ) ),DS ) ,CS ) )", "obj1": 0.5078740157480315, "obj2": 0.36598349607906416}, {"determining": "( ( CRS * Min( MDR ,Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,ARS ) ) ) * ( ( Max( ( FirstVNF_RAM + ( ( MRS + ACS ) - ( ( FirstVNF_CPU / BR ) - Max( BR,DDR ) ) ) ),Max( AMS,AMS ) ) / AMS ) - Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * RMSe ) * ( RRSe - MUC ) ) / Max( ( ( ( ( ( ( MUM - RRSe ) / MUM ) / MUM ) / Max( Min( DS ,( DS / CS ) ),( RCSe * ( CS - MLU ) ) ) ) * Max( DS,DS ) ) * RRSe ),MLU ) )", "obj1": 0.9212598425196851, "obj2": 0.03583399493183244}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( BR,( FirstVNF_CPU - Const ) ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( ( MUM + CS ) * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.7539370078740157, "obj2": 0.1587851224679421}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / ( RRS - Const ) ) - Max( FirstVNF_Mem,Min( ACS ,DDR ) ) ) ,Min( FirstVNF_CPU_Server ,RRS ) ) * ( Const - MDR ) )", "choosing": "( ( ( Min( RMSe ,DS ) - Min( Max( RRSe,CS ) ,( ( Max( CS,MUM ) + RRSe ) + RCSe ) ) ) / MUM ) - Min( CS ,RRSe ) )", "obj1": 0.5708661417322834, "obj2": 0.2800645605203014}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.9862204724409449, "obj2": 0.00679794647478072}, {"determining": "( Max( ACS,Max( FirstVNF_Mem,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( ( AMS + ( Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( DS / ( RRSe * MUC ) ) + Min( MUM ,( ( Min( ( ( DS - RMSe ) - CS ) ,( DS / DS ) ) * RRSe ) - RMSe ) ) ) / ( RRSe - RMSe ) )", "obj1": 0.734251968503937, "obj2": 0.1740880836016263}, {"determining": "( Max( ACS,PN ) - Max( ( DDR + ( Min( Max( BR,( FirstVNF_CPU - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ,MDR ) * Min( BR ,CRS ) ) ),FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( ( MUC / MUR ) / Max( MUM,MUC ) ) ) + Min( CS ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( ( Max( ( ( CS - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( MUM - MUR ) ) ),MUC ) * CS ) ,MUR ) ) )", "obj1": 0.7381889763779528, "obj2": 0.17230113363372948}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / Min( MDR ,( Max( ACS,Min( PN ,( BR - CRS ) ) ) / DDR ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - CS ) )", "obj1": 0.3346456692913386, "obj2": 0.5325607448739018}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( ( FirstVNF_CPU - Const ),( FirstVNF_CPU - Const ) ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( CS - DS ) ) + Min( MUM ,( ( MLU * ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ) - RMSe ) ) ) / ( RRSe - Min( MUR ,( Max( Max( ( CS / MUC ),MUM ),MUC ) * CS ) ) ) )", "obj1": 0.75, "obj2": 0.16388514559683254}, {"determining": "Max( ( ( ( DDR - CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( ( ( ( ( ACS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) / FirstVNF_CPU ) - ARS ) + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( BR / ( AMS - AMS ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( RCSe - RRSe ) ) / Min( Max( MLU,( ( Max( MUC,DS ) / ( DS + MLU ) ) - CS ) ) ,( MUM / ( ( MUM / MUC ) / Max( ( MUR / MUM ),( Max( Min( RCSe ,MUC ),DS ) * MUC ) ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7656117837220393}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( ACS * FirstVNF_Mem_Server ) / AMS ) ) / ( ( FirstVNF_Mem_Server + CRS ) / ( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * DDR ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - CS ) )", "obj1": 0.6259842519685039, "obj2": 0.24603956492913462}, {"determining": "( ( Const * ( AMS / ( ( FirstVNF_Mem_Server - CRS ) * DDR ) ) ) / ( ( ( FirstVNF_CPU + Const ) + RRS ) + ( ( FirstVNF_Mem + AMS ) - DDR ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( ( MUM * DS ) + Max( RCSe,RMSe ) ) ) - MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.36023622047244097, "obj2": 0.5103401135486023}, {"determining": "Min( ( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / ( ( DDR / PN ) - ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "Max( ( ( ( ( ( MUC / MUR ) + DS ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / MLU ) ) )", "obj1": 0.9763779527559056, "obj2": 0.009627115021675275}, {"determining": "( ( ( Min( BR ,FirstVNF_Mem ) - ( Max( Max( ( Const / PN ),( MDR / PN ) ),( Const - FirstVNF_CPU_Server ) ) - Max( DDR,MRS ) ) ) + ( FirstVNF_RAM * ARS ) ) / ( ( CRS + MRS ) / ( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * DDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( MUC * Max( RMSe,( RRSe / RMSe ) ) ) )", "obj1": 0.6062992125984252, "obj2": 0.2587467443208644}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_Mem - ( FirstVNF_RAM / PN ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),Max( ( ( Min( ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( Const - MDR ) ) / ( ACS + RRS ) ),( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( CS + RMSe ) - ( MUM + Min( MLU ,MUM ) ) ) )", "obj1": 0.47834645669291337, "obj2": 0.37724522933765076}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM - MUC ) ,Max( MUC,DS ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5905511811023622, "obj2": 0.2694516918848454}, {"determining": "( ( Min( Min( MDR ,Max( BR,( FirstVNF_CPU - ( ( PN - CRS ) * AMS ) ) ) ) ,AMS ) * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( ( MUM + ( CS - Max( RCSe,RCSe ) ) ) * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.36811023622047245, "obj2": 0.5060270289612319}], "12": [{"determining": "( CRS - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RRSe + ( ( ( Max( ( CS / MUM ),CS ) / MUM ) / RCSe ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( ( DS - Max( Max( DS,RCSe ),RCSe ) ) / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( ACS - MRS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,Min( ( ( ACS * AMS ) / Const ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe - ( DS / Max( MUC,CS ) ) ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),DS ) ,RMSe ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Max( ACS,BR ) ,ACS ) * ( AMS - FirstVNF_CPU ) ) + DDR ) / FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( RCSe / Min( RMSe ,RMSe ) ) ) / Max( ( RCSe / RMSe ),( Max( ( Max( MUC,( MUR / MUR ) ) + RRSe ),( RRSe * RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8635528467108932}, {"determining": "( Min( ACS ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + ( ( MRS / AMS ) + MRS ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( ( DS - RCSe ) - ( ( RCSe / Max( ( MLU * MUC ),( MUC / MUR ) ) ) - MUR ) ) ,( DS / DS ) ) + ( RCSe / Min( Max( Max( ( MLU - Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4503075400852304}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - ( CS + MUM ) ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,MUM )", "obj1": 0.452755905511811, "obj2": 0.42470205355911206}, {"determining": "Min( ( Min( AMS ,( Min( ( ( Const / MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( ( Max( MUM,RCSe ) - ( MUM * MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.765748031496063, "obj2": 0.1269451125210553}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.11064529411402155}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.08923718563603472}, {"determining": "Max( ( Max( Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) / ( ACS - Const ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * MDR ) - ( DDR + MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( Max( ( Max( MLU,MLU ) * RCSe ),( MUR - MUM ) ) - MUM )", "obj1": 0.46653543307086615, "obj2": 0.3988504160555803}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / BR ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * ARS ) )", "choosing": "( ( ( DS + MUR ) - ( Min( ( Max( MLU,RCSe ) - Min( ( ( RRSe * RRSe ) - RMSe ) ,MUC ) ) ,Min( ( Max( MUM,RMSe ) / RCSe ) ,MLU ) ) / MUR ) ) / ( MUM / DS ) )", "obj1": 0.10236220472440945, "obj2": 0.805706621264607}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( ( ( Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.4322681751643757}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / ( MUC / MUR ) )", "obj1": 0.10826771653543307, "obj2": 0.7735861259340865}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6502599198292992}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "( Min( ( MUR + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / MUM ) ) / RMSe ) ) * Max( Min( ( ( RRSe / MUM ) * ( MLU * MUR ) ) ,MUC ),DS ) ) ) ,MUM ) - Min( ( ( MUM / RCSe ) - ( MUR + MUM ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.7854330708661418, "obj2": 0.11886544217698278}, {"determining": "Min( ( ( ARS + BR ) - AMS ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - MUC ) ),( DS + CS ) ),RMSe ) ,Min( ( RRSe - ( Min( RRSe ,MUC ) + RCSe ) ) ,RCSe ) ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.22167959508314564}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MRS + DDR ) + MDR ) ) / Min( MDR ,( Max( ACS,( PN / ( FirstVNF_Mem * ( ( ACS - Const ) / MRS ) ) ) ) / DDR ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( ( Max( CS,( RRSe - CS ) ) * ( MUR * Max( RCSe,MUM ) ) ) * Min( MUC ,RRSe ) ) ) ) - CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5220977047537191}, {"determining": "( ( Const * ( AMS / ( ( FirstVNF_Mem_Server - CRS ) * DDR ) ) ) / ( ( ( FirstVNF_CPU + Const ) + RRS ) + ( ( FirstVNF_Mem + AMS ) - DDR ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( ( MUM * DS ) + Max( RCSe,RMSe ) ) ) - MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.36023622047244097, "obj2": 0.5103401135486023}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUC ) / ( RRSe - ( MUC * Max( DS,MUM ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.08507700902449632}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09055118110236221, "obj2": 0.8348553987509655}, {"determining": "( ( AMS * ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( MRS ,FirstVNF_RAM_Server ) * Const ) ) )", "choosing": "Max( ( Max( ( ( ( MUC / MUR ) + Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Max( MUM,( MUR * RCSe ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6806490382244826}, {"determining": "( Max( Const,ACS ) - Min( MRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( RRSe + ( ( ( Max( ( MUM / MLU ),CS ) / MUM ) / Max( MUM,( MUR * DS ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( ( DS - Max( Max( DS,MUC ),RCSe ) ) / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.5275590551181102, "obj2": 0.3307701908655324}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( BR,( FirstVNF_CPU - Const ) ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( CS - DS ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( MUR ,( Max( Max( ( CS / MUC ),MUM ),MUC ) * CS ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.15371967472091752}, {"determining": "( Max( PN,DDR ) * ( ( ( ( ( MDR + FirstVNF_RAM ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * BR ) / ( MDR * FirstVNF_Mem ) ) - CRS ) )", "choosing": "Min( RMSe ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.39763779527559057, "obj2": 0.474931835268329}, {"determining": "( Min( ( ( ACS - AMS ) - Max( PN,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) * ( Const + MDR ) )", "choosing": "( Min( ( DS / ( MUC * DS ) ) ,Max( ( DS - MUM ),CS ) ) - ( ( Max( CS,( CS / ( ( ( RCSe + CS ) + RCSe ) / MUR ) ) ) / MUM ) / Max( MUM,( DS - DS ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.2100257780176576}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "Max( ( ( ( RRS - PN ) * Max( DDR,CRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( BR * CRS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( RCSe + ( ( CS + Max( MLU,MUM ) ) - MUC ) ) - DS ) ),MUR ) / ( MLU / ( DS * ( MLU / MLU ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8198884265464628}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7403908795811706}, {"determining": "( Min( Max( ( ( ( FirstVNF_Mem / MDR ) / Max( ACS,( DDR - Max( FirstVNF_CPU_Server,PN ) ) ) ) / ( FirstVNF_CPU - AMS ) ),( ( FirstVNF_RAM_Server - BR ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( ( ( AMS / ( DDR + FirstVNF_Mem ) ) / ( Min( ( CRS + FirstVNF_RAM ) ,( RRS / MDR ) ) * PN ) ) ,Const ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - Max( ( CS / CS ),( MUR - Max( CS,( MLU - RMSe ) ) ) ) ) ,( ( ( Max( ( RRSe * Min( RCSe ,DS ) ),RMSe ) * MLU ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.4280568539747235}, {"determining": "( ( FirstVNF_RAM_Server / ( Max( ACS,FirstVNF_CPU ) - ( ( ACS - Max( ( Const - ARS ),DDR ) ) / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC / MUC ) - MUR ),( ( MLU * MUR ) + ( ( Max( MUC,( Min( CS ,DS ) / DS ) ) - ( MUC - MUM ) ) * MUM ) ) ) - Min( CS ,( RMSe - DS ) ) )", "obj1": 0.48031496062992124, "obj2": 0.37453689150061925}, {"determining": "( ( ( ( MDR + DDR ) + MDR ) * Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - ( MRS - CRS ) ) ) - ( CRS - MDR ) ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ),( BR / MDR ) ) ) / ( MRS * DDR ) )", "choosing": "Min( MUC ,( ( MUR / ( CS - RRSe ) ) - CS ) )", "obj1": 0.3051181102362205, "obj2": 0.5482689167940975}, {"determining": "( Max( BR,( Max( FirstVNF_RAM,( Max( ( ( DDR / AMS ) - ACS ),( ( Const * MDR ) * AMS ) ) - Max( ( ( DDR / AMS ) - Min( FirstVNF_Mem ,ARS ) ),( AMS * Max( FirstVNF_CPU_Server,PN ) ) ) ) ) / CRS ) ) * Max( ARS,( ACS - Const ) ) )", "choosing": "( ( ( DS * MUC ) / Max( ( Min( ( CS / MUM ) ,MUM ) / ( MUM / MUC ) ),MUR ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08661417322834646, "obj2": 0.8506069980420871}, {"determining": "Max( ( ( ( AMS + Min( ARS ,( CRS * FirstVNF_RAM ) ) ) * Max( DDR,CRS ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( FirstVNF_RAM_Server + AMS ) - ( ( Max( ( Min( MDR ,FirstVNF_CPU_Server ) * FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( Max( MUR,MUC ) * DS ) / ( MLU + MUM ) ) * DS ) ) / Min( ( MLU / Min( MUR ,( ( MUM + MUM ) - RRSe ) ) ) ,( MUM / ( ( MUC / MLU ) / Max( Min( CS ,MUM ),MUR ) ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7495369392494862}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( AMS,FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( ( RMSe * ( MUC + MLU ) ),MUC ) / ( RRSe - Min( ( CS + MUR ) ,( Max( Max( ( CS / MUC ),DS ),MUC ) * DS ) ) ) )", "obj1": 0.8582677165354331, "obj2": 0.07578798872527535}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ACS + CRS ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( FirstVNF_CPU / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( ( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( MLU / ( MUM * ( MUM * MUR ) ) ) ) ) - Min( CS ,MUM ) ) / MLU ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.562992125984252, "obj2": 0.3059350469001169}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( MLU * DS ) - RMSe ) )", "obj1": 0.8700787401574803, "obj2": 0.05733748057144911}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( DDR - MRS ) / ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( FirstVNF_RAM_Server * AMS ) - Max( DDR,MRS ) ) ) ) ) ) ),( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( MUC * DS ) ,Min( RCSe ,RMSe ) ) * ( RMSe * ( MUC + MLU ) ) ) - CS ) )", "obj1": 0.5255905511811023, "obj2": 0.3492221435506351}, {"determining": "Max( ( ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) + FirstVNF_CPU ),( ( FirstVNF_Mem_Server / ( DDR - ARS ) ) / Const ) )", "choosing": "( Max( ( RRSe + Max( MLU,( ( ( MUC - MUM ) - MUC ) / ( RCSe - RCSe ) ) ) ),( RRSe / MUM ) ) / ( MUR + RCSe ) )", "obj1": 0.1673228346456693, "obj2": 0.704420543415858}, {"determining": "( ( ( Max( CRS,Const ) - MDR ) - ACS ) * ( CRS - ( MDR / Min( ( ( BR + FirstVNF_RAM_Server ) / MDR ) ,Min( Min( RRS ,( FirstVNF_CPU - Min( PN ,FirstVNF_CPU ) ) ) ,BR ) ) ) ) )", "choosing": "( ( ( DS * ( Min( ( ( ( MUC + MLU ) / MUC ) * ( ( MUM * MUM ) * Min( MLU ,RMSe ) ) ) ,RCSe ) + MUM ) ) / MUC ) / Max( MUM,RRSe ) )", "obj1": 0.9153543307086615, "obj2": 0.03850733485501374}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( FirstVNF_Mem,Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) * ( Const - MDR ) )", "choosing": "( Min( ( ( Max( ( ( RMSe - MUM ) - Max( MUM,RCSe ) ),DS ) - RCSe ) - CS ) ,( DS / DS ) ) - Min( CS ,RRSe ) )", "obj1": 0.5669291338582677, "obj2": 0.28424446221141864}, {"determining": "( ( ACS * PN ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( CS / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( CS,RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.7145669291338582, "obj2": 0.17710734823285643}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / MRS ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( Min( FirstVNF_CPU_Server ,MDR ) * Max( FirstVNF_RAM,BR ) ) / ( FirstVNF_CPU_Server + DDR ) ) ) ) / ( DDR - MRS ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / DS ) - Min( CS ,( DS + MUC ) ) )", "obj1": 0.5374015748031497, "obj2": 0.31751740904180054}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_RAM - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ( Min( ACS ,BR ) + FirstVNF_RAM ) ,ACS ) * ( Const - MDR ) ) / ( ACS + RRS ) ) + ( ( PN / BR ) * ( ACS * RRS ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / ( Max( Max( Max( MLU,( MUC - CS ) ),( CS + DS ) ),DS ) - CS ) ) + Min( ( ( MUM - ( RRSe / MUM ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.5177165354330708, "obj2": 0.3567547643200831}, {"determining": "( Min( MDR ,( MDR + MRS ) ) * Max( PN,Min( MDR ,Max( BR,( FirstVNF_CPU - MDR ) ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7572388225406388}, {"determining": "Max( ( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) + DDR ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) - Min( CS ,MUM ) )", "obj1": 0.20078740157480315, "obj2": 0.6409489061758162}, {"determining": "( Max( AMS,Max( RRS,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( MRS / AMS ) )", "choosing": "Min( ( Max( Min( ( MUC * DS ) ,( RCSe + RMSe ) ),Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( CS - RRSe ) ) ) ) ) ) - CS ) ,Min( Max( Max( Max( Max( RCSe,RCSe ),MLU ),Min( RCSe ,MUR ) ),DS ) ,CS ) )", "obj1": 0.3700787401574803, "obj2": 0.49487353919152943}, {"determining": "( Min( ( ( ACS - AMS ) - Max( PN,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) * ( Const + MDR ) )", "choosing": "( Min( ( DS / ( MUC * DS ) ) ,Max( ( DS - MUM ),CS ) ) - ( ( Max( CS,( CS / ( ( ( RCSe + CS ) + RCSe ) / MUR ) ) ) / MUM ) / Max( MUM,( DS - DS ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.19021025987476964}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8523622047244095, "obj2": 0.077259757389935}, {"determining": "( ( PN * Min( ( ( ACS * AMS ) + ( ( ARS / Min( ARS ,MRS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ) * Min( MDR ,Max( BR,FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS - RCSe ) - Min( ( Max( Max( Max( DS,RCSe ),MUM ),MUC ) * CS ) ,MUR ) ) ,Min( DS ,( DS * MUC ) ) ) - Min( CS ,MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6124356602282285}, {"determining": "( Min( ACS ,AMS ) * ( Const - Max( FirstVNF_RAM,CRS ) ) )", "choosing": "Min( Min( DS ,MUM ) ,( ( Min( RRSe ,MUM ) + ( MUR + ( DS * RMSe ) ) ) / RCSe ) )", "obj1": 0.65748031496063, "obj2": 0.23523242118200743}, {"determining": "Max( ( Const - FirstVNF_CPU ),Min( RRS ,( MDR + Max( Max( ACS,FirstVNF_Mem ),( ( ( FirstVNF_Mem / RRS ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) * ( DS * Max( MUC,RCSe ) ) ),Max( ( ( RMSe / CS ) + ( RRSe / RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.49380096076335883}, {"determining": "( ( RRS / ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( Max( FirstVNF_CPU,DDR ) ,AMS ) * ( Const - MDR ) ) - Max( ACS,DDR ) ) )", "choosing": "Max( ( ( ( ( ( CS * DS ) + DS ) + MUM ) + MUR ) / ( Min( RMSe ,RCSe ) / Max( MUM,CS ) ) ),( ( DS / RMSe ) + RMSe ) )", "obj1": 0.8917322834645669, "obj2": 0.041834103612551826}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / Min( MDR ,( Max( ACS,Min( PN ,( BR - CRS ) ) ) / DDR ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - CS ) )", "obj1": 0.3346456692913386, "obj2": 0.5325607448739018}, {"determining": "( ( Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - ( MRS - CRS ) ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - CS ) )", "obj1": 0.3169291338582677, "obj2": 0.5400672724352134}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - ( FirstVNF_CPU_Server - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5596341960366692}, {"determining": "Max( ( ( ( DDR - CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( ( ( ( ( ACS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) / FirstVNF_CPU ) - ARS ) + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( BR / ( AMS - AMS ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( RCSe - RRSe ) ) / Min( Max( MLU,( ( Max( MUC,DS ) / ( DS + MLU ) ) - CS ) ) ,( MUM / ( ( MUM / MUC ) / Max( ( MUR / MUM ),( Max( Min( RCSe ,MUC ),DS ) * MUC ) ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7656117837220393}, {"determining": "( FirstVNF_CPU_Server + Max( MRS,Min( PN ,Min( ( FirstVNF_Mem_Server / AMS ) ,Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( RRSe,MUR ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( RMSe ,DS ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6922578042754671}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_RAM_Server * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( Const - MDR ) ) / ( ACS + RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUC / MUR ) + DS ) + MUM ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.5078740157480315, "obj2": 0.36598349607906416}, {"determining": "( ( Min( Min( MDR ,Max( BR,( FirstVNF_CPU - ( ( PN - CRS ) * AMS ) ) ) ) ,AMS ) * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( ( MUM + ( CS - Max( RCSe,RCSe ) ) ) * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.36811023622047245, "obj2": 0.5060270289612319}, {"determining": "( ( ( ( ( Max( BR,( MRS + ( BR + MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - Min( DDR ,Min( ARS ,FirstVNF_RAM ) ) ) + AMS ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,( Min( DS ,CS ) * RRSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5335179135554049}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / Min( MDR ,( Max( ACS,Min( ( FirstVNF_Mem_Server * ( BR / ( MRS - FirstVNF_CPU_Server ) ) ) ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) / DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),DS ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5884900790545984}, {"determining": "Max( ( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) + DDR ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem ) ) - FirstVNF_RAM ) )", "choosing": "( ( MUM - MUR ) / ( DS + MUC ) )", "obj1": 0.17125984251968504, "obj2": 0.6997987353886727}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + ( Const - MDR ) ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( CS + MLU ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.01514012099247984}, {"determining": "( Max( BR,PN ) - ( ( Min( FirstVNF_CPU_Server ,PN ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) - Min( MUM ,Max( RCSe,( Max( DS,RMSe ) * DS ) ) ) )", "obj1": 0.6889763779527559, "obj2": 0.19799535091145054}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe + ( RMSe - RMSe ) ) ,( ( MUM + CS ) / ( CS - DS ) ) ),( ( RCSe - Min( RCSe ,RRSe ) ) - Max( ( MLU + MUM ),Max( MUR,MUR ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.24091560297337816}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( DS / ( ( Min( RMSe ,MUM ) * ( CS / RCSe ) ) + DS ) ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6323084393183566}, {"determining": "( Min( MDR ,Const ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - MRS ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RCSe,( DS - RRSe ) ) ) ) ) * ( MLU + MUR ) ) - CS ) )", "obj1": 0.25393700787401574, "obj2": 0.5947012202192204}, {"determining": "( Min( ( Min( ( CRS * MDR ) ,FirstVNF_CPU_Server ) / ( Max( ( Max( PN,( MDR / MRS ) ) * ( AMS + ( FirstVNF_Mem - BR ) ) ),Max( ( ( MRS - CRS ) * ( FirstVNF_Mem * Const ) ),ACS ) ) + FirstVNF_CPU_Server ) ) ,AMS ) * ( Const - MDR ) )", "choosing": "( ( MLU - Max( MLU,( ( ( DS / ( RRSe - ( CS + MLU ) ) ) + MLU ) + CS ) ) ) / ( MUR + CS ) )", "obj1": 0.6476377952755905, "obj2": 0.2375963356329421}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( FirstVNF_CPU * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ( ( FirstVNF_Mem / ( ARS + FirstVNF_CPU_Server ) ) + FirstVNF_RAM ) ,ACS ) * ( Const - MDR ) ) / ( ACS + RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( Max( ( CS + MLU ),MUM ) * Min( RCSe ,RMSe ) ) ,( Max( CS,RMSe ) - ( Min( ( MUM - ( ( MUR * MUR ) - ( Max( CS,MUC ) - MUR ) ) ) ,MUM ) + MUM ) ) )", "obj1": 0.47244094488188976, "obj2": 0.3846660974456009}, {"determining": "( ( CRS * Min( MDR ,Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,ARS ) ) ) * ( ( Max( ( FirstVNF_RAM + ( ( MRS + ACS ) - ( ( FirstVNF_CPU / BR ) - Max( BR,DDR ) ) ) ),Max( AMS,AMS ) ) / AMS ) - Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * RMSe ) * ( RRSe - MUC ) ) / Max( ( ( ( ( ( ( MUM - RRSe ) / MUM ) / MUM ) / Max( Min( DS ,( DS / CS ) ),( RCSe * ( CS - MLU ) ) ) ) * Max( DS,DS ) ) * RRSe ),MLU ) )", "obj1": 0.9212598425196851, "obj2": 0.03583399493183244}, {"determining": "Max( Min( ACS ,RRS ),( ( MDR - AMS ) - ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) + Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * DS ) ,( RMSe - ( RRSe - RMSe ) ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MUR / RRSe ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) ,( MUC / MUR ) )", "obj1": 0.2736220472440945, "obj2": 0.5790195273035285}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM - MUC ) ,Max( MUC,DS ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5905511811023622, "obj2": 0.2694516918848454}, {"determining": "Max( ( Min( MDR ,( MDR - Max( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ),( ( MDR * DDR ) + Max( Max( DDR,FirstVNF_CPU ),( MDR * FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / BR ) / Const ) ),( Const - MDR ) )", "choosing": "( ( DS / Max( ( Max( ( RRSe / ( MUM + ( MUR / MLU ) ) ),Max( MUR,Max( MUC,DS ) ) ) - Max( Min( MUC ,RCSe ),Max( RRSe,Max( Min( DS ,MUM ),MUC ) ) ) ),MLU ) ) - Min( MUR ,RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.6004762161791302}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.016216340168897794}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "( Max( ACS,PN ) - ( ( ( MDR - ARS ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( ( MUC / MUR ) + Max( ( Max( MUR,MUM ) * RMSe ),RRSe ) ) + MUM ) + Min( CS ,RCSe ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.6988188976377953, "obj2": 0.19287897682065078}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( MUR + Max( CS,( Max( CS,RMSe ) + ( MUC + RRSe ) ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5628188053456457}, {"determining": "( ( Const - MDR ) * Min( DDR ,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,Min( BR ,AMS ) ) ) )", "choosing": "( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) - Min( Min( ( MUC + RMSe ) ,( ( RRSe / ( MUM - RRSe ) ) - ( RMSe - CS ) ) ) ,MUM ) )", "obj1": 0.5767716535433071, "obj2": 0.2759283089990634}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.5413385826771654, "obj2": 0.31216759440082503}, {"determining": "Min( ( Min( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / ( ACS - MRS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( FirstVNF_RAM + Const ) )", "choosing": "( ( ( DS / ( ( Min( RMSe ,MUM ) * Min( CS ,RCSe ) ) + DS ) ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( CS - ( DS - RCSe ) ) ,( DS / ( RCSe - ( ( ( MUM - MUR ) - CS ) - MUR ) ) ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.16443829409986552}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_RAM ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "Max( ( ( ( ( Max( RCSe,MLU ) + ( MUC / MUR ) ) + RMSe ) + Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.6850393700787402, "obj2": 0.20312950198616267}, {"determining": "( Min( Max( ( ( FirstVNF_Mem_Server * Min( MDR ,PN ) ) * AMS ),CRS ) ,( ( ( PN - AMS ) + FirstVNF_CPU ) - ARS ) ) * Min( ( ( FirstVNF_Mem_Server / ( Const - ACS ) ) - Max( CRS,FirstVNF_Mem ) ) ,Const ) )", "choosing": "( ( MUM + CS ) - ( MUM / ( CS + MUM ) ) )", "obj1": 0.5826771653543307, "obj2": 0.271156322229862}, {"determining": "Min( ( Min( ( Min( ( ( Const - Max( DDR,MRS ) ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( MLU - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02571920538297961}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * ( MDR / AMS ) ) * ( Const - MDR ) ) ) ) * Min( ( Const * AMS ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),Min( Max( RMSe,MUR ) ,( ( ( DS / DS ) * MLU ) - MUR ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.045384524576316705}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / Min( MDR ,( Max( ACS,Min( PN ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) / DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUC ,RRSe ),MLU ),Min( RCSe ,MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),DS ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5860776105046244}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( Max( ( ARS + ( FirstVNF_Mem_Server / ARS ) ),DDR ) - Min( FirstVNF_CPU ,( DDR / FirstVNF_RAM ) ) ) ) / ( DDR - MRS ) ) ),( ( ( Min( ( ( Min( RRS ,AMS ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( Const - MDR ) ) / ( ACS + RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Max( ( MUC * RRSe ),( RMSe + ( DS / MUC ) ) )", "obj1": 0.5098425196850394, "obj2": 0.36536426704367075}, {"determining": "( ( Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( PN / MDR ) ) * ( ( FirstVNF_RAM * ARS ) * ( ( Min( ACS ,AMS ) * ( Const - FirstVNF_CPU_Server ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / ( ( FirstVNF_RAM_Server + ACS ) * DDR ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( RCSe,Min( DS ,RRSe ) ) ) ) ) - CS ) )", "obj1": 0.6299212598425197, "obj2": 0.24410739196354367}, {"determining": "( Max( FirstVNF_CPU,DDR ) + Max( ACS,Min( PN ,Min( ( CRS + Min( FirstVNF_RAM ,MDR ) ) ,ACS ) ) ) )", "choosing": "( RMSe - Min( ( ( MUM + MUR ) - ( MUM * RCSe ) ) ,( ( Max( ( MUC - MUC ),Min( RCSe ,MLU ) ) * Max( ( ( CS + ( MUR / MUM ) ) * MUC ),MLU ) ) / RCSe ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / ( RRS - Const ) ) - Max( FirstVNF_Mem,Min( ACS ,DDR ) ) ) ,Min( FirstVNF_CPU_Server ,RRS ) ) * ( Const - MDR ) )", "choosing": "( ( ( Min( RMSe ,DS ) - Min( Max( RRSe,CS ) ,( ( Max( CS,MUM ) + RRSe ) + RCSe ) ) ) / MUM ) - Min( CS ,RRSe ) )", "obj1": 0.5708661417322834, "obj2": 0.2800645605203014}, {"determining": "Min( Min( ( FirstVNF_Mem_Server / ARS ) ,AMS ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( ( Max( CS,( CS / MUM ) ) / RMSe ),RMSe ) ,Min( ( RRSe - ( Min( RRSe ,MUC ) + RCSe ) ) ,RCSe ) ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.3956692913385827, "obj2": 0.48741876244901017}, {"determining": "( Max( ACS,Max( FirstVNF_Mem,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( ( AMS + ( Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( DS / ( RRSe * MUC ) ) + Min( MUM ,( ( Min( ( ( DS - RMSe ) - CS ) ,( DS / DS ) ) * RRSe ) - RMSe ) ) ) / ( RRSe - RMSe ) )", "obj1": 0.734251968503937, "obj2": 0.1740880836016263}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ( BR * FirstVNF_CPU_Server ) - ( ( MDR / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * DDR ) ) - ( MRS * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( Min( RCSe ,( RCSe + ( MUC / CS ) ) ) * ( RCSe * Min( ( Min( DS ,( CS - RCSe ) ) / Max( RMSe,MLU ) ) ,RRSe ) ) ) ) - Min( MUM ,CS ) )", "obj1": 0.2204724409448819, "obj2": 0.6224034964097153}, {"determining": "( Max( ACS,PN ) - Max( ( DDR + ( Min( Max( BR,( FirstVNF_CPU - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ,MDR ) * Min( BR ,CRS ) ) ),FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( ( MUC / MUR ) / Max( MUM,MUC ) ) ) + Min( CS ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( ( Max( ( ( CS - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( MUM - MUR ) ) ),MUC ) * CS ) ,MUR ) ) )", "obj1": 0.7381889763779528, "obj2": 0.17230113363372948}, {"determining": "Max( ( ( RRS + MDR ) / Max( Max( ( MRS * Max( FirstVNF_RAM,BR ) ),Const ),( CRS / AMS ) ) ),( MDR - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Max( ( MUC * DS ),( RCSe + RMSe ) ) * Min( ( Min( MUR ,( MUR / RMSe ) ) + ( ( ( RMSe * MUR ) - ( MUR * DS ) ) / CS ) ) ,( RCSe / ( ( ( MUR * RCSe ) / Min( MLU ,RRSe ) ) / Max( RRSe,( RRSe / CS ) ) ) ) ) ) - CS ) )", "obj1": 0.2795275590551181, "obj2": 0.5736474096961944}, {"determining": "( Min( FirstVNF_RAM_Server ,( Max( Min( PN ,FirstVNF_RAM_Server ),( FirstVNF_CPU / BR ) ) * ( ACS * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + FirstVNF_Mem ) ) ) ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * DDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( Max( DS,( DS - RRSe ) ) - MUM ) ,( DS / DS ) ) + ( RCSe - Min( Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),RMSe ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.25085994943067513}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( Min( MDR ,Const ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( ( ( MRS + FirstVNF_CPU_Server ) * DDR ) + ( ( FirstVNF_CPU + MRS ) / ( MRS / ( ACS + PN ) ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( RRSe * CS ) ) ) ) ) ) - CS ) ,( DS / RMSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6324226636026404}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( ACS * FirstVNF_Mem_Server ) / AMS ) ) / ( ( FirstVNF_Mem_Server + CRS ) / ( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * DDR ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - CS ) )", "obj1": 0.6259842519685039, "obj2": 0.24603956492913462}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - ( FirstVNF_CPU / FirstVNF_Mem ) ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "( ( RCSe - RRSe ) + ( ( Min( MUC ,Max( MUM,MLU ) ) / Min( Max( Max( Max( MLU,( MUC - DS ) ),( DS + CS ) ),DS ) ,RMSe ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5704172955835481}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU * AMS ) ),( ( ( Min( ( Min( MDR ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ,AMS ) * ( Const - MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) )", "choosing": "( ( DS + ( ( ( MUM * ( MLU / Max( RRSe,MUM ) ) ) - ( RCSe / MUR ) ) * ( ( MUM * MUR ) + Max( DS,MLU ) ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5551181102362205, "obj2": 0.30919883838898843}], "13": [{"determining": "( ( Max( MDR,AMS ) * ( ( FirstVNF_Mem_Server * ( DDR - CRS ) ) / Const ) ) / ( Max( ACS,FirstVNF_RAM_Server ) * DDR ) )", "choosing": "Min( ( Min( ( RRSe + ( CS * ( Max( ( RCSe + RRSe ),MUC ) + CS ) ) ) ,Min( MLU ,Max( MLU,Max( MUR,CS ) ) ) ) + MUM ) ,( ( MUR / ( CS * RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RRSe + ( ( ( Max( ( CS / MUM ),CS ) / MUM ) / RCSe ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( ( DS - Max( Max( DS,RCSe ),RCSe ) ) / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Max( ACS,BR ) ,ACS ) * ( AMS - FirstVNF_CPU ) ) + DDR ) / FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( RCSe / Min( RMSe ,RMSe ) ) ) / Max( ( RCSe / RMSe ),( Max( ( Max( MUC,( MUR / MUR ) ) + RRSe ),( RRSe * RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8635528467108932}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "Min( Min( ( ( ( ( ( RRSe - ( CS + MUM ) ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,MUM )", "obj1": 0.452755905511811, "obj2": 0.42470205355911206}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( Const / ACS ) + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( Max( ( MUR / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / ( DS + CS ) ) / ( MLU / Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( MUM * RRSe ) ) / CS ),MUC ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08719124783143223}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - ( FirstVNF_Mem + Max( BR,( MRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / ( MLU + ( CS - DS ) ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.4566929133858268, "obj2": 0.34232181647622256}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / MRS ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,( DS + MUC ) ) )", "obj1": 0.5255905511811023, "obj2": 0.32520312915804267}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * AMS ) * ( Const - MDR ) ) ) ) * Min( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( Max( ( CS / MUM ),CS ) / MUM ) ) ) / RCSe ) )", "obj1": 0.4645669291338583, "obj2": 0.3373037041175421}, {"determining": "( Min( ( ( ACS - AMS ) - Max( PN,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) * ( Const + MDR ) )", "choosing": "( Min( ( DS / ( MUC * DS ) ) ,Max( ( DS - MUM ),CS ) ) - ( ( Max( CS,( CS / ( ( ( RCSe + CS ) + RCSe ) / MUR ) ) ) / MUM ) / Max( MUM,( DS - DS ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.19021025987476964}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( BR,( FirstVNF_CPU - Const ) ) ) * FirstVNF_Mem_Server ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( CS - DS ) ) + Min( MUM ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( MUR ,( Max( Max( ( CS / MUC ),MUM ),MUC ) * CS ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.15371967472091752}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUC ) / ( RRSe - ( MUC * Max( DS,MUM ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.08507700902449632}, {"determining": "( ( ( ( Min( ( ( Min( RRS ,Const ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( RRS + ACS ) ) * ( RRS / ( Min( FirstVNF_Mem_Server ,CRS ) - RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( Min( RCSe ,( DS - Min( CS ,Min( ( CS * RRSe ) ,MLU ) ) ) ) ,( ( Max( ( ( Max( MUM,MLU ) / ( CS + MUR ) ) * DS ),( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.639763779527559, "obj2": 0.2370155897165511}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / BR ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * ARS ) )", "choosing": "( ( ( DS + MUR ) - ( Min( ( Max( MLU,RCSe ) - Min( ( ( RRSe * RRSe ) - RMSe ) ,MUC ) ) ,Min( ( Max( MUM,RMSe ) / RCSe ) ,MLU ) ) / MUR ) ) / ( MUM / DS ) )", "obj1": 0.10236220472440945, "obj2": 0.805706621264607}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.6496062992125984, "obj2": 0.19383060387864165}, {"determining": "( Min( ACS ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + ( ( MRS / AMS ) + MRS ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( ( DS - RCSe ) - ( ( RCSe / Max( ( MLU * MUC ),( MUC / MUR ) ) ) - MUR ) ) ,( DS / DS ) ) + ( RCSe / Min( Max( Max( ( MLU - Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4503075400852304}, {"determining": "( Max( PN,DDR ) * ( ( ( ( ( MDR + FirstVNF_RAM ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * BR ) / ( MDR * FirstVNF_Mem ) ) - CRS ) )", "choosing": "Min( RMSe ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.39763779527559057, "obj2": 0.474931835268329}, {"determining": "Min( ( Min( ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * MDR ) ,MRS ) ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7165354330708661, "obj2": 0.16023273563703935}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.655511811023622, "obj2": 0.19173658103507898}, {"determining": "( ( AMS * ( FirstVNF_Mem - BR ) ) - ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + ( ( DDR / PN ) - ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( ( ( ( MUC / MUR ) + ( Max( ( DS - MUR ),DS ) - RCSe ) ) + MUM ) + Min( CS ,RCSe ) ) / ( ( CS + RCSe ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.7677165354330708, "obj2": 0.12490309353502882}, {"determining": "( Max( AMS,Max( FirstVNF_Mem,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( ( AMS + ( Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( Min( Max( Max( Max( Max( RCSe,RCSe ),MLU ),Min( RCSe ,MUR ) ),DS ) ,CS ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.3779527559055118, "obj2": 0.48667235755117605}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09055118110236221, "obj2": 0.8348553987509655}, {"determining": "Min( Min( ( MDR + AMS ) ,FirstVNF_RAM_Server ) ,Min( ( Const * ( ACS * AMS ) ) ,ARS ) )", "choosing": "( ( RCSe - ( DS / Max( DS,CS ) ) ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),( MUM * MUC ) ) ,RMSe ) ) + Max( ( ( DS - RCSe ) - CS ),( MUM / MUM ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6623099202115406}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( BR ,FirstVNF_RAM_Server ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( CS ,MUR ) - Min( RCSe ,MUC ) ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MUM,MUR ),( DS + CS ) ),DS ) ,CS ) ) + Min( Min( ( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) ) ,CS ) ,( DS / ( ( MUC / ( ( MUM / MLU ) + ( RCSe / MUC ) ) ) + RCSe ) ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.16576935081263403}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "Max( ( ( ( RRS - PN ) * Max( DDR,CRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( BR * CRS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( RCSe + ( ( CS + Max( MLU,MUM ) ) - MUC ) ) - DS ) ),MUR ) / ( MLU / ( DS * ( MLU / MLU ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8198884265464628}, {"determining": "( ( RRS / ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( Max( FirstVNF_CPU,DDR ) ,AMS ) * ( Const - MDR ) ) - Max( ACS,DDR ) ) )", "choosing": "Max( ( ( ( ( ( CS * DS ) + DS ) + MUM ) + MUR ) / ( Min( RMSe ,RCSe ) / Max( MUM,CS ) ) ),( ( DS / RMSe ) + RMSe ) )", "obj1": 0.8917322834645669, "obj2": 0.041834103612551826}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7403908795811706}, {"determining": "( Max( ACS,PN ) - Max( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + ( Min( Max( BR,( FirstVNF_CPU - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ,MDR ) * Min( BR ,CRS ) ) ),FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( ( MUC / Max( ( CS - RMSe ),DS ) ) / Max( MUM,MUC ) ) ) + Min( CS ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( ( Max( ( ( CS - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( MUM - MUR ) ) ),MUC ) * CS ) ,MUR ) ) )", "obj1": 0.9901574803149606, "obj2": 0.0068051057803705135}, {"determining": "( Min( Max( ( ( ( FirstVNF_Mem / MDR ) / Max( ACS,( DDR - Max( FirstVNF_CPU_Server,PN ) ) ) ) / ( FirstVNF_CPU - AMS ) ),( ( FirstVNF_RAM_Server - BR ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( ( ( AMS / ( DDR + FirstVNF_Mem ) ) / ( Min( ( CRS + FirstVNF_RAM ) ,( RRS / MDR ) ) * PN ) ) ,Const ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - Max( ( CS / CS ),( MUR - Max( CS,( MLU - RMSe ) ) ) ) ) ,( ( ( Max( ( RRSe * Min( RCSe ,DS ) ),RMSe ) * MLU ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.4280568539747235}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + ( Const - MDR ) ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( CS + MLU ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.01514012099247984}, {"determining": "Min( ( Min( AMS ,( Min( ( ( Const / MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( ( Max( MUM,RCSe ) - ( MUM * MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.765748031496063, "obj2": 0.1269451125210553}, {"determining": "( Max( BR,( Max( FirstVNF_RAM,( Max( ( ( DDR / AMS ) - ACS ),( ( Const * MDR ) * AMS ) ) - Max( ( ( DDR / AMS ) - Min( FirstVNF_Mem ,ARS ) ),( AMS * Max( FirstVNF_CPU_Server,PN ) ) ) ) ) / CRS ) ) * Max( ARS,( ACS - Const ) ) )", "choosing": "( ( ( DS * MUC ) / Max( ( Min( ( CS / MUM ) ,MUM ) / ( MUM / MUC ) ),MUR ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08661417322834646, "obj2": 0.8506069980420871}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ACS + CRS ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( FirstVNF_CPU / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( ( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( MLU / ( MUM * ( MUM * MUR ) ) ) ) ) - Min( CS ,MUM ) ) / MLU ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.6023622047244095, "obj2": 0.2679727370764193}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( ( ( Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( ( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( RMSe,MUC ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4339282105035172}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ACS + CRS ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( FirstVNF_CPU / PN ) * ( ACS * RRS ) ) ) )", "choosing": "Min( ( ( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( MLU / ( MUM * ( MUM * MUR ) ) ) ) ) - Min( CS ,MUM ) ) / MLU ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.562992125984252, "obj2": 0.3059350469001169}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * ( MDR / AMS ) ) * ( Const - MDR ) ) ) ) * Min( ( Const * AMS ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),Min( Max( RMSe,MUR ) ,( ( ( DS / DS ) * MLU ) - MUR ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.045384524576316705}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8503937007874016, "obj2": 0.06695215087021172}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( MLU * DS ) - RMSe ) )", "obj1": 0.8700787401574803, "obj2": 0.05733748057144911}, {"determining": "( Min( Max( ( ( ( FirstVNF_Mem / MDR ) / Max( ACS,( DDR - Max( FirstVNF_CPU_Server,PN ) ) ) ) / ( FirstVNF_CPU - AMS ) ),( ( FirstVNF_RAM_Server - BR ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( ( ( AMS / ( DDR + FirstVNF_Mem ) ) / ( Min( ( CRS + FirstVNF_RAM ) ,( RRS / MDR ) ) * PN ) ) ,Const ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - Max( ( CS / CS ),( MUR - Max( CS,( MLU - RMSe ) ) ) ) ) ,( ( ( Max( ( RRSe * Min( RCSe ,DS ) ),RMSe ) * MLU ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.3248031496062992, "obj2": 0.5210249777343015}, {"determining": "Max( ( ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) + FirstVNF_CPU ),( ( FirstVNF_Mem_Server / ( DDR - ARS ) ) / Const ) )", "choosing": "( Max( ( RRSe + Max( MLU,( ( ( MUC - MUM ) - MUC ) / ( RCSe - RCSe ) ) ) ),( RRSe / MUM ) ) / ( MUR + RCSe ) )", "obj1": 0.1673228346456693, "obj2": 0.704420543415858}, {"determining": "( Min( FirstVNF_RAM_Server ,( Max( Min( PN ,FirstVNF_RAM_Server ),( FirstVNF_CPU / BR ) ) * ( ACS * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + FirstVNF_Mem ) ) ) ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * DDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( Max( DS,( DS - RRSe ) ) - MUM ) ,( DS / DS ) ) + ( RCSe - Min( Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),RMSe ) ,CS ) ) ) )", "obj1": 0.6161417322834646, "obj2": 0.2556692038521701}, {"determining": "( ( ( Max( CRS,Const ) - MDR ) - ACS ) * ( CRS - ( MDR / Min( ( ( BR + FirstVNF_RAM_Server ) / MDR ) ,Min( Min( RRS ,( FirstVNF_CPU - Min( PN ,FirstVNF_CPU ) ) ) ,BR ) ) ) ) )", "choosing": "( ( ( DS * ( Min( ( ( ( MUC + MLU ) / MUC ) * ( ( MUM * MUM ) * Min( MLU ,RMSe ) ) ) ,RCSe ) + MUM ) ) / MUC ) / Max( MUM,RRSe ) )", "obj1": 0.9153543307086615, "obj2": 0.03850733485501374}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( FirstVNF_Mem,Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) * ( Const - MDR ) )", "choosing": "( Min( ( ( Max( ( ( RMSe - MUM ) - Max( MUM,RCSe ) ),DS ) - RCSe ) - CS ) ,( DS / DS ) ) - Min( CS ,RRSe ) )", "obj1": 0.5669291338582677, "obj2": 0.28424446221141864}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.3031496062992126, "obj2": 0.54324517108614}, {"determining": "( Max( AMS,Max( FirstVNF_Mem,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( ( AMS + ( Min( MDR ,( ( BR + ( ACS - ACS ) ) / DDR ) ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( Min( Max( Max( Max( Max( RCSe,RCSe ),MLU ),Min( RCSe ,MUR ) ),DS ) ,( DS / DS ) ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.3484251968503937, "obj2": 0.520553663797598}, {"determining": "Max( ( ( ( AMS + Min( ARS ,( CRS * FirstVNF_RAM ) ) ) * Max( DDR,CRS ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( FirstVNF_RAM_Server + AMS ) - ( ( Max( ( Min( MDR ,FirstVNF_CPU_Server ) * FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( Max( MUR,MUC ) * DS ) / ( MLU + MUM ) ) * DS ) ) / Min( ( MLU / Min( MUR ,( ( MUM + MUM ) - RRSe ) ) ) ,( MUM / ( ( MUC / MLU ) / Max( Min( CS ,MUM ),MUR ) ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7495369392494862}, {"determining": "Max( ( Min( MDR ,( MDR - Max( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ),( ( MDR * DDR ) + Max( Max( DDR,FirstVNF_CPU ),( MDR * FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / BR ) / Const ) ),( Const - MDR ) )", "choosing": "( ( DS / Max( ( Max( ( RRSe / ( MUM + ( MUR / MLU ) ) ),Max( MUR,Max( MUC,DS ) ) ) - Max( Min( MUC ,RCSe ),Max( RRSe,Max( Min( DS ,MUM ),MUC ) ) ) ),MLU ) ) - Min( MUR ,RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.6004762161791302}, {"determining": "( Max( AMS,Max( RRS,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( MRS / AMS ) )", "choosing": "Min( ( Max( Min( ( MUC * DS ) ,( RCSe + RMSe ) ),Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( CS - RRSe ) ) ) ) ) ) - CS ) ,Min( Max( Max( Max( Max( RCSe,RCSe ),MLU ),Min( RCSe ,MUR ) ),DS ) ,CS ) )", "obj1": 0.3700787401574803, "obj2": 0.49487353919152943}, {"determining": "Max( ( ( RRS + MDR ) / Max( Max( ( MRS * Max( FirstVNF_RAM,BR ) ),Const ),( CRS / AMS ) ) ),( MDR - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Max( ( MUC * DS ),( RCSe + RMSe ) ) * Min( ( Min( MUR ,( MUR / RMSe ) ) + ( ( ( RMSe * MUR ) - ( MUR * DS ) ) / CS ) ) ,( RCSe / ( ( ( MUR * RCSe ) / Min( MLU ,RRSe ) ) / Max( RRSe,( RRSe / CS ) ) ) ) ) ) - CS ) )", "obj1": 0.2795275590551181, "obj2": 0.5736474096961944}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / MRS ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( Min( FirstVNF_CPU_Server ,MDR ) * Max( FirstVNF_RAM,BR ) ) / ( FirstVNF_CPU_Server + DDR ) ) ) ) / ( DDR - MRS ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / DS ) - Min( CS ,( DS + MUC ) ) )", "obj1": 0.5374015748031497, "obj2": 0.31751740904180054}, {"determining": "( Min( MDR ,( MDR + MRS ) ) * Max( PN,Min( MDR ,Max( BR,( FirstVNF_CPU - MDR ) ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7572388225406388}, {"determining": "( FirstVNF_CPU_Server + Max( MRS,Min( PN ,Min( ( FirstVNF_Mem_Server / AMS ) ,Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( RRSe,MUR ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( RMSe ,DS ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6922578042754671}, {"determining": "Max( ( Max( FirstVNF_Mem,MDR ) - FirstVNF_Mem_Server ),( Const * MDR ) )", "choosing": "( ( DS / Max( MLU,( Max( Max( ( Min( MUM ,MUC ) + RCSe ),DS ),( Min( Min( CS ,RRSe ) ,RRSe ) * MUC ) ) - ( ( DS + RCSe ) - ( RRSe / MUR ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.22244094488188976, "obj2": 0.6191606149196309}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU * AMS ) ),( ( ( Min( ( Min( MDR ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ,AMS ) * ( Const - MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) )", "choosing": "( ( DS + ( ( ( MUM * ( MLU / Max( RRSe,MUM ) ) ) - ( RCSe / MUR ) ) * ( ( MUM * MUR ) + Max( DS,MLU ) ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5551181102362205, "obj2": 0.30919883838898843}, {"determining": "( ( ( ( ( Max( BR,( MRS + ( BR + MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - Min( DDR ,Min( ARS ,FirstVNF_RAM ) ) ) + AMS ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,( Min( DS ,CS ) * RRSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5335179135554049}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ( BR * FirstVNF_CPU_Server ) - ( ( MDR / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * DDR ) ) - ( MRS * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( Min( RCSe ,( RCSe + ( MUC / CS ) ) ) * ( RCSe * Min( ( Min( DS ,( CS - RCSe ) ) / Max( RMSe,MLU ) ) ,RRSe ) ) ) ) - Min( MUM ,CS ) )", "obj1": 0.2204724409448819, "obj2": 0.6224034964097153}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.5413385826771654, "obj2": 0.31216759440082503}, {"determining": "Max( ( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) + DDR ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) - Min( CS ,MUM ) )", "obj1": 0.20078740157480315, "obj2": 0.6409489061758162}, {"determining": "( ( Min( Min( MDR ,Max( BR,( FirstVNF_CPU - ( ( PN - CRS ) * AMS ) ) ) ) ,AMS ) * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( ( MUM + ( CS - Max( RCSe,RCSe ) ) ) * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.36811023622047245, "obj2": 0.5060270289612319}, {"determining": "( ( Const * ( AMS / ( ( FirstVNF_Mem_Server - CRS ) * DDR ) ) ) / ( ( ( FirstVNF_CPU + Const ) + RRS ) + ( ( FirstVNF_Mem + AMS ) - DDR ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( ( MUM * DS ) + Max( RCSe,RMSe ) ) ) - MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.36023622047244097, "obj2": 0.5103401135486023}, {"determining": "( ( Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - ( MRS - CRS ) ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - CS ) )", "obj1": 0.3169291338582677, "obj2": 0.5400672724352134}, {"determining": "( ( PN * Min( ( ( ACS * AMS ) + ( ( ARS / Min( ARS ,MRS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ) * Min( MDR ,Max( BR,FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS - RCSe ) - Min( ( Max( Max( Max( DS,RCSe ),MUM ),MUC ) * CS ) ,MUR ) ) ,Min( DS ,( DS * MUC ) ) ) - Min( CS ,MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6124356602282285}, {"determining": "( ( ( MRS * RRS ) + ( BR - FirstVNF_Mem ) ) - ( ( DDR + MDR ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( RCSe,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,DS ) ) ) )", "obj1": 0.8622047244094488, "obj2": 0.06351812800572965}, {"determining": "( ( Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( PN / MDR ) ) * ( ( FirstVNF_RAM * ARS ) * ( ( Min( ACS ,AMS ) * ( Const - FirstVNF_CPU_Server ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / ( ( FirstVNF_RAM_Server + ACS ) * DDR ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( RCSe,Min( DS ,RRSe ) ) ) ) ) - CS ) )", "obj1": 0.6299212598425197, "obj2": 0.24410739196354367}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.016216340168897794}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( Max( Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),MDR ),CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6502599198292992}, {"determining": "Max( ( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) + DDR ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem ) ) - FirstVNF_RAM ) )", "choosing": "( ( MUM - MUR ) / ( DS + MUC ) )", "obj1": 0.17125984251968504, "obj2": 0.6997987353886727}, {"determining": "( ( CRS * Min( MDR ,Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,ARS ) ) ) * ( ( Max( ( FirstVNF_RAM + ( ( MRS + ACS ) - ( ( FirstVNF_CPU / BR ) - Max( BR,DDR ) ) ) ),Max( AMS,AMS ) ) / AMS ) - Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * RMSe ) * ( RRSe - MUC ) ) / Max( ( ( ( ( ( ( MUM - RRSe ) / MUM ) / MUM ) / Max( Min( DS ,( DS / CS ) ),( RCSe * ( CS - MLU ) ) ) ) * Max( DS,DS ) ) * RRSe ),MLU ) )", "obj1": 0.9212598425196851, "obj2": 0.03583399493183244}, {"determining": "Max( FirstVNF_Mem,( ACS - ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( ( MUR * RCSe ) / MUC ) / Max( RRSe,( CS / RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.2992125984251969, "obj2": 0.5551782146763863}, {"determining": "Max( ( ( RRS + MDR ) / Max( Max( MRS,Const ),( CRS / AMS ) ) ),( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * AMS ) * ( Const - MDR ) ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.2874015748031496, "obj2": 0.5636374252648795}, {"determining": "Max( Min( ACS ,RRS ),( ( MDR - AMS ) - ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) + Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * DS ) ,( RMSe - ( RRSe - RMSe ) ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MUR / RRSe ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) ,( MUC / MUR ) )", "obj1": 0.2736220472440945, "obj2": 0.5790195273035285}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM - MUC ) ,Max( MUC,DS ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5905511811023622, "obj2": 0.2694516918848454}, {"determining": "( ( ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( MRS ,FirstVNF_RAM_Server ) * Const ) ) * ( ( MDR + DDR ) + CRS ) ) / ( MRS * Min( Min( ( FirstVNF_RAM + ( CRS - BR ) ) ,MDR ) ,BR ) ) )", "choosing": "Min( MUC ,( Min( MUR ,DS ) - ( ( MUR / ( MUR / ( Min( MUR ,( MLU * RRSe ) ) / Max( CS,RRSe ) ) ) ) * CS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5158858556132022}, {"determining": "( ( Const - MDR ) * Min( DDR ,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,Min( BR ,AMS ) ) ) )", "choosing": "( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) - Min( Min( ( MUC + RMSe ) ,( ( RRSe / ( MUM - RRSe ) ) - ( RMSe - CS ) ) ) ,MUM ) )", "obj1": 0.5767716535433071, "obj2": 0.2759283089990634}, {"determining": "( Min( Max( ( ( FirstVNF_Mem_Server * Min( MDR ,PN ) ) * AMS ),CRS ) ,( ( ( PN - AMS ) + FirstVNF_CPU ) - ARS ) ) * Min( ( ( FirstVNF_Mem_Server / ( Const - ACS ) ) - Max( CRS,FirstVNF_Mem ) ) ,Const ) )", "choosing": "( ( MUM + CS ) - ( MUM / ( CS + MUM ) ) )", "obj1": 0.5826771653543307, "obj2": 0.271156322229862}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / Min( MDR ,( Max( ACS,Min( ( FirstVNF_Mem_Server * ( BR / ( MRS - FirstVNF_CPU_Server ) ) ) ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) / DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),DS ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5884900790545984}, {"determining": "( Min( MDR ,Const ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - MRS ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RCSe,( DS - RRSe ) ) ) ) ) * ( MLU + MUR ) ) - CS ) )", "obj1": 0.25393700787401574, "obj2": 0.5947012202192204}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( ( ( Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.4322681751643757}, {"determining": "( ( Max( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / Min( MDR ,( Max( ACS,Min( PN ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) / DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUC ,RRSe ),MLU ),Min( RCSe ,MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),DS ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5860776105046244}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / ( RRS - Const ) ) - Max( FirstVNF_Mem,Min( ACS ,DDR ) ) ) ,Min( FirstVNF_CPU_Server ,RRS ) ) * ( Const - MDR ) )", "choosing": "( ( ( Min( RMSe ,DS ) - Min( Max( RRSe,CS ) ,( ( Max( CS,MUM ) + RRSe ) + RCSe ) ) ) / MUM ) - Min( CS ,RRSe ) )", "obj1": 0.5708661417322834, "obj2": 0.2800645605203014}, {"determining": "Min( Min( ( FirstVNF_Mem_Server / ARS ) ,AMS ) ,( RRS - ( ( ACS + CRS ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( ( Max( CS,( MLU / MUM ) ) / RMSe ),RMSe ) ,Min( ( RRSe - ( Min( RRSe ,MUC ) + RCSe ) ) ,RCSe ) ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6113811395470403}, {"determining": "( Min( FirstVNF_RAM_Server ,( Max( Min( PN ,FirstVNF_RAM_Server ),( FirstVNF_CPU / BR ) ) * ( ACS * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + FirstVNF_Mem ) ) ) ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * DDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( Max( DS,( DS - RRSe ) ) - MUM ) ,( DS / DS ) ) + ( RCSe - Min( Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),RMSe ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.25085994943067513}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( DDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / ( ( ( MUM + CS ) / ( ( MUC / MUR ) / Max( MUM,MUC ) ) ) + Min( CS ,( ( MLU * RRSe ) - RMSe ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7526271088956741}, {"determining": "Min( ( Min( ( Min( ( ( Const - Max( DDR,DDR ) ) + MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( MLU - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.02700525665909482}, {"determining": "Max( ( ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe - ( DS / Max( MUC,CS ) ) ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),DS ) ,RMSe ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.649956719601942}, {"determining": "( Max( FirstVNF_CPU,DDR ) + Max( ACS,Min( PN ,Min( ( CRS + Min( FirstVNF_RAM ,MDR ) ) ,ACS ) ) ) )", "choosing": "( RMSe - Min( ( ( MUM + MUR ) - ( MUM * RCSe ) ) ,( ( Max( ( MUC - MUC ),Min( RCSe ,MLU ) ) * Max( ( ( CS + ( MUR / MUM ) ) * MUC ),MLU ) ) / RCSe ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( Min( MDR ,Const ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( ( ( MRS + FirstVNF_CPU_Server ) * DDR ) + ( ( FirstVNF_CPU + MRS ) / ( MRS / ( ACS + PN ) ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( RRSe * CS ) ) ) ) ) ) - CS ) ,( DS / RMSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6324226636026404}, {"determining": "( Min( BR ,FirstVNF_RAM_Server ) / ( ( CRS + CRS ) / ( ( Const - MDR ) / ( ( ( ARS / MRS ) * ARS ) * DDR ) ) ) )", "choosing": "Min( ( ( ( Max( Min( ( RRSe + ( MUR - MLU ) ) ,RRSe ),RMSe ) - MUM ) * ( MUC * Max( MUC,( RCSe / Min( MUC ,CS ) ) ) ) ) / MUR ) ,( ( Min( ( MUC * Min( DS ,DS ) ) ,( RCSe + RMSe ) ) * ( ( MUC / MUR ) + ( MUM / ( Max( ( CS / MUM ),MUR ) / ( MUC / MUC ) ) ) ) ) - CS ) )", "obj1": 0.6240157480314961, "obj2": 0.24584599828192236}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( MRS + ( ARS / ARS ) ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * MUM ) / Max( ( RRSe + ( ( ( ( ( DS - MLU ) / MUM ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( DS,DS ) ) ),MLU ) )", "obj1": 0.9547244094488189, "obj2": 0.020178487089599916}, {"determining": "( Min( MDR ,Const ) * Max( ( FirstVNF_CPU_Server * ( Max( Const,( DDR * FirstVNF_Mem ) ) / RRS ) ),( DDR - MDR ) ) )", "choosing": "Min( ( DS / RMSe ) ,( Min( DS ,MUM ) - CS ) )", "obj1": 0.2578740157480315, "obj2": 0.5942558620357359}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUC ) / ( RRSe - ( MUC * Max( DS,MUM ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.08507700902449632}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - ( FirstVNF_CPU_Server - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5596341960366692}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.06628108729275903}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( MUR + Max( CS,( Max( CS,RMSe ) + ( MUC + RRSe ) ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5628188053456457}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - ( DS / Max( MUC,CS ) ) ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),DS ) ,RMSe ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.020847222597122524}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( DS / ( ( Min( RMSe ,MUM ) * ( CS / RCSe ) ) + DS ) ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6323084393183566}], "14": [{"determining": "( ( ( Max( Const,CRS ) - MDR ) - ACS ) * ( ( ACS / CRS ) - ( MDR / Min( ( ( BR + FirstVNF_RAM_Server ) / MDR ) ,Min( ( RRS / ( ( DDR - ARS ) - Min( PN ,FirstVNF_CPU ) ) ) ,BR ) ) ) ) )", "choosing": "( ( ( ( MUC - MUR ) * ( Min( ( ( ( MUC + MLU ) / MUC ) * ( ( MUM * MUR ) * Min( CS ,RMSe ) ) ) ,RCSe ) + MUM ) ) / MUC ) / Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,AMS ) * ( ( FirstVNF_Mem_Server * ( DDR - CRS ) ) / Const ) ) / ( Max( ACS,FirstVNF_RAM_Server ) * DDR ) )", "choosing": "Min( ( Min( ( RRSe + ( CS * ( Max( ( RCSe + RRSe ),MUC ) + CS ) ) ) ,Min( MLU ,Max( MLU,Max( MUR,CS ) ) ) ) + MUM ) ,( ( MUR / ( CS * RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Max( ACS,BR ) ,ACS ) * ( AMS - FirstVNF_CPU ) ) + DDR ) / FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( RCSe / Min( RMSe ,RMSe ) ) ) / Max( ( RCSe / RMSe ),( Max( ( Max( MUC,( MUR / MUR ) ) + RRSe ),( RRSe * RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8635528467108932}, {"determining": "( ( FirstVNF_RAM_Server * AMS ) - Max( DDR,CRS ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( MUM,Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),DS ) ) + Max( MUR,( RRSe / Max( ( ( MUM * MUC ) + DS ),( ( MLU * DS ) / DS ) ) ) ) ) / RCSe ) )", "obj1": 0.5, "obj2": 0.2938296408752507}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( ( ( Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( ( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_RAM ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( ( CS - RMSe ),Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( RMSe,MUC ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.40840079291007025}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( Const / ACS ) + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( Max( ( MUR / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / ( DS + CS ) ) / ( MLU / Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( MUM * RRSe ) ) / CS ),MUC ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08719124783143223}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.5551181102362205, "obj2": 0.27627394604693556}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * AMS ) * ( Const - MDR ) ) ) ) * Min( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( Max( ( CS / MUM ),CS ) / MUM ) ) ) / RCSe ) )", "obj1": 0.4645669291338583, "obj2": 0.3373037041175421}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - ( FirstVNF_Mem + Max( BR,( MRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / ( MLU + ( CS - DS ) ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.4566929133858268, "obj2": 0.34232181647622256}, {"determining": "( Min( ( ( ACS - AMS ) - Max( PN,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) * ( Const + MDR ) )", "choosing": "( Min( ( DS / ( MUC * DS ) ) ,Max( ( DS - MUM ),CS ) ) - ( ( Max( CS,( CS / ( ( ( RCSe + CS ) + RCSe ) / MUR ) ) ) / MUM ) / Max( MUM,( DS - DS ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.19021025987476964}, {"determining": "( ( ( ( Min( ( ( Min( RRS ,Const ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( RRS + ACS ) ) * ( RRS / ( Min( FirstVNF_Mem_Server ,CRS ) - RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( Min( RCSe ,( DS - Min( CS ,Min( ( CS * RRSe ) ,MLU ) ) ) ) ,( ( Max( ( ( Max( MUM,MLU ) / ( CS + MUR ) ) * DS ),( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.639763779527559, "obj2": 0.2370155897165511}, {"determining": "( Max( ACS,PN ) - ( ( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUC ) / ( RRSe - ( MUC * Max( DS,MUM ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.08507700902449632}, {"determining": "( Min( ACS ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + ( ( MRS / AMS ) + MRS ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( ( DS - RCSe ) - ( ( RCSe / Max( ( MLU * MUC ),( MUC / MUR ) ) ) - MUR ) ) ,( DS / DS ) ) + ( RCSe / Min( Max( Max( ( MLU - Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4503075400852304}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / BR ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * ARS ) )", "choosing": "( ( ( DS + MUR ) - ( Min( ( Max( MLU,RCSe ) - Min( ( ( RRSe * RRSe ) - RMSe ) ,MUC ) ) ,Min( ( Max( MUM,RMSe ) / RCSe ) ,MLU ) ) / MUR ) ) / ( MUM / DS ) )", "obj1": 0.10236220472440945, "obj2": 0.805706621264607}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.7421259842519685, "obj2": 0.14855141416792805}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "( Min( Max( ( ( ( FirstVNF_Mem / MDR ) / Max( ACS,( DDR - Max( FirstVNF_CPU_Server,PN ) ) ) ) / ( FirstVNF_CPU - AMS ) ),( ( FirstVNF_RAM_Server - BR ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( ( ( AMS / ( DDR + FirstVNF_Mem ) ) / ( Min( ( CRS + FirstVNF_RAM ) ,( RRS / MDR ) ) * PN ) ) ,Const ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - Max( ( CS / CS ),( MUR - Max( CS,( MLU - RMSe ) ) ) ) ) ,( ( ( Max( ( RRSe * Min( RCSe ,DS ) ),RMSe ) * MLU ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.4280568539747235}, {"determining": "( ( AMS * ( FirstVNF_Mem - BR ) ) - ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + ( ( DDR / PN ) - ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( ( ( ( MUC / MUR ) + ( Max( ( DS - MUR ),DS ) - RCSe ) ) + MUM ) + Min( CS ,RCSe ) ) / ( ( CS + RCSe ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.7677165354330708, "obj2": 0.12490309353502882}, {"determining": "( Min( Max( ( ( ( Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) * ( FirstVNF_CPU - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ),( ( Const / ( ACS + PN ) ) / ( FirstVNF_CPU - AMS ) ) ) ,PN ) / ( ( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - RCSe ) + ( ( Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) / RCSe ) + Min( ( ( ( DS / Min( DS ,( RCSe * MUR ) ) ) / Max( RMSe,MUC ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.42981964657360433}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.655511811023622, "obj2": 0.19173658103507898}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) ) ,( ( MRS - FirstVNF_Mem_Server ) / MDR ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( Max( ( RRSe + Min( DS ,Min( DS ,Min( RRSe ,CS ) ) ) ),( RCSe / ( RRSe * DS ) ) ) ,RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.19383060387864165}, {"determining": "Min( ( Min( ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * MDR ) ,MRS ) ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7165354330708661, "obj2": 0.16023273563703935}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.1313719807508152}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09055118110236221, "obj2": 0.8348553987509655}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( BR ,FirstVNF_RAM_Server ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( CS ,MUR ) - Min( RCSe ,MUC ) ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MUM,MUR ),( DS + CS ) ),DS ) ,CS ) ) + Min( Min( ( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) ) ,CS ) ,( DS / ( ( MUC / ( ( MUM / MLU ) + ( RCSe / MUC ) ) ) + RCSe ) ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.16576935081263403}, {"determining": "Min( Min( ( MDR + AMS ) ,FirstVNF_RAM_Server ) ,Min( ( Const * ( ACS * AMS ) ) ,ARS ) )", "choosing": "( ( RCSe - ( DS / Max( DS,CS ) ) ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),( MUM * MUC ) ) ,RMSe ) ) + Max( ( ( DS - RCSe ) - CS ),( MUM / MUM ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6623099202115406}, {"determining": "Max( ( ( ( RRS - PN ) * Max( DDR,CRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( BR * CRS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( RCSe + ( ( CS + Max( MLU,MUM ) ) - MUC ) ) - DS ) ),MUR ) / ( MLU / ( DS * ( MLU / MLU ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8198884265464628}, {"determining": "( Max( PN,DDR ) * ( ( ( ( ( MDR + FirstVNF_RAM ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * BR ) / ( MDR * FirstVNF_Mem ) ) - CRS ) )", "choosing": "Min( RMSe ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.39763779527559057, "obj2": 0.474931835268329}, {"determining": "( Max( BR,( Max( FirstVNF_RAM,( Max( ( ( DDR / AMS ) - ACS ),( ( Const * MDR ) * AMS ) ) - Max( ( ( DDR / AMS ) - Min( FirstVNF_Mem ,ARS ) ),( AMS * Max( FirstVNF_CPU_Server,PN ) ) ) ) ) / CRS ) ) * Max( ARS,( ACS - Const ) ) )", "choosing": "( ( ( DS * MUC ) / Max( ( Min( ( CS / MUM ) ,MUM ) / ( MUM / MUC ) ),MUR ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08661417322834646, "obj2": 0.8506069980420871}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "( ( RRS / ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( Max( FirstVNF_CPU,DDR ) ,AMS ) * ( Const - MDR ) ) - Max( ACS,DDR ) ) )", "choosing": "Max( ( ( ( ( ( CS * DS ) + DS ) + MUM ) + MUR ) / ( Min( RMSe ,RCSe ) / Max( MUM,CS ) ) ),( ( DS / RMSe ) + RMSe ) )", "obj1": 0.8917322834645669, "obj2": 0.041834103612551826}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * ( MDR / AMS ) ) * ( Const - MDR ) ) ) ) * Min( ( Const * AMS ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),Min( Max( RMSe,MUR ) ,( ( ( DS / DS ) * MLU ) - MUR ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.045384524576316705}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( RCSe * DS ) - RMSe ) )", "obj1": 0.8700787401574803, "obj2": 0.057326374742811936}, {"determining": "( Max( AMS,Max( FirstVNF_Mem,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( ( AMS + ( Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( Min( Max( Max( Max( Max( RCSe,RCSe ),MLU ),Min( RCSe ,MUR ) ),DS ) ,CS ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.3779527559055118, "obj2": 0.48667235755117605}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.3031496062992126, "obj2": 0.54324517108614}, {"determining": "Max( ( Min( MDR ,( MDR - Max( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ),( ( MDR * DDR ) + Max( Max( DDR,FirstVNF_CPU ),( MDR * FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / BR ) / Const ) ),( Const - MDR ) )", "choosing": "( ( DS / Max( ( Max( ( RRSe / ( MUM + ( MUR / MLU ) ) ),Max( MUR,Max( MUC,DS ) ) ) - Max( Min( MUC ,RCSe ),Max( RRSe,Max( Min( DS ,MUM ),MUC ) ) ) ),MLU ) ) - Min( MUR ,RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.6004762161791302}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + ( Min( PN ,( Const / MDR ) ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( ( MUR * DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( ( DS / MUM ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8385826771653543, "obj2": 0.07436712005423832}, {"determining": "( ( Const - MDR ) * Min( DDR ,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,Min( BR ,AMS ) ) ) )", "choosing": "( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) - Min( Min( ( MUC + RMSe ) ,( ( RRSe / ( MUM - RRSe ) ) - ( RMSe - CS ) ) ) ,MUM ) )", "obj1": 0.5767716535433071, "obj2": 0.2759283089990634}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.2933070866141732, "obj2": 0.5499974267174593}, {"determining": "( Max( AMS,Max( FirstVNF_Mem,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( ( AMS + ( Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( Min( Max( Max( Max( Max( RCSe,RCSe ),MLU ),Min( RCSe ,MUR ) ),DS ) ,CS ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.38779527559055116, "obj2": 0.4780495000537392}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / Min( MDR ,( Max( ACS,Min( ( FirstVNF_Mem_Server * ( BR / ( MRS - MDR ) ) ) ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) / DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6097269984927647}, {"determining": "Max( ( ( Max( BR,RRS ) - Max( BR,FirstVNF_Mem_Server ) ) / BR ),( ACS - ( ( MRS + FirstVNF_RAM ) - Max( ( Max( ( FirstVNF_Mem * ( CRS + AMS ) ),( Min( MDR ,MRS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( ( Max( MLU,RCSe ) + MUM ) / Max( ( CS - Min( RRSe ,Max( MUC,RMSe ) ) ),DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,Min( MUM ,Max( RCSe,MUM ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7399641977051608}, {"determining": "Min( ( Min( AMS ,( Min( ( ( Const / MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( ( Max( MUM,RCSe ) - ( MUM * MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.765748031496063, "obj2": 0.1269451125210553}, {"determining": "( Max( AMS,Max( RRS,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( MRS / AMS ) )", "choosing": "Min( ( Max( Min( ( MUC * DS ) ,( RCSe + RMSe ) ),Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( CS - RRSe ) ) ) ) ) ) - CS ) ,Min( Max( Max( Max( Max( RCSe,RCSe ),MLU ),Min( RCSe ,MUR ) ),DS ) ,CS ) )", "obj1": 0.3700787401574803, "obj2": 0.49487353919152943}, {"determining": "Max( ( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) + DDR ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) - Min( CS ,MUM ) )", "obj1": 0.20078740157480315, "obj2": 0.6409489061758162}, {"determining": "( FirstVNF_CPU_Server + Max( MRS,Min( PN ,Min( ( FirstVNF_Mem_Server / AMS ) ,Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( RRSe,MUR ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( RMSe ,DS ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6922578042754671}, {"determining": "( Max( ACS,PN ) - Max( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + ( Min( Max( BR,( FirstVNF_CPU - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ,MDR ) * Min( BR ,CRS ) ) ),FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( ( MUC / Max( ( CS - RMSe ),DS ) ) / Max( MUM,MUC ) ) ) + Min( CS ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( ( Max( ( ( CS - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( MUM - MUR ) ) ),MUC ) * CS ) ,MUR ) ) )", "obj1": 0.9901574803149606, "obj2": 0.006787733634353599}, {"determining": "( ( ( ( ( Max( BR,( MRS + ( BR + MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - Min( DDR ,Min( ARS ,FirstVNF_RAM ) ) ) + AMS ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,( Min( DS ,CS ) * RRSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5335179135554049}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.33858267716535434, "obj2": 0.5162578322107289}, {"determining": "( ( ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( MRS ,FirstVNF_RAM_Server ) * Const ) ) * ( ( MDR + DDR ) + CRS ) ) / ( MRS * Min( Min( ( FirstVNF_RAM + ( CRS - BR ) ) ,MDR ) ,BR ) ) )", "choosing": "Min( MUC ,( Min( MUR ,DS ) - ( ( MUR / ( MUR / ( Min( MUR ,( MLU * RRSe ) ) / Max( CS,RRSe ) ) ) ) * CS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5158858556132022}, {"determining": "Max( Min( ( DDR + ( Min( ACS ,AMS ) * ( Min( AMS ,FirstVNF_RAM_Server ) - MDR ) ) ) ,FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,( RMSe + MUC ) ) + DS ) ) / ( DS + MUM ) )", "obj1": 0.1594488188976378, "obj2": 0.706042597131564}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS - Min( MDR ,Min( Max( FirstVNF_Mem,ACS ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * MUM ) / Max( ( RRSe + ( RCSe * Max( DS,DS ) ) ),MLU ) )", "obj1": 0.9133858267716536, "obj2": 0.03996516682903831}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "Min( ( Min( ( Min( ( ( Const - Max( DDR,DDR ) ) + MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( MLU - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.02700525665909482}, {"determining": "( ( Min( Min( MDR ,Max( BR,( FirstVNF_CPU - ( ( PN - CRS ) * AMS ) ) ) ) ,AMS ) * ( RRS / ( ( FirstVNF_Mem_Server - CRS ) * RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( DS + MUC ) ) / MUR ) ,( ( Min( ( ( MUM + ( CS - Max( RCSe,RCSe ) ) ) * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.36811023622047245, "obj2": 0.5060270289612319}, {"determining": "( ( Const * ( AMS / ( ( FirstVNF_Mem_Server - CRS ) * DDR ) ) ) / ( ( ( FirstVNF_CPU + Const ) + RRS ) + ( ( FirstVNF_Mem + AMS ) - DDR ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / ( ( MUM * DS ) + Max( RCSe,RMSe ) ) ) - MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.36023622047244097, "obj2": 0.5103401135486023}, {"determining": "( ( Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - ( MRS - CRS ) ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( BR / MDR ) ) * ( ( MDR + DDR ) + MDR ) ) / ( MRS * DDR ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - CS ) )", "obj1": 0.3169291338582677, "obj2": 0.5400672724352134}, {"determining": "( ( ( DDR / Max( MRS,( FirstVNF_RAM_Server + CRS ) ) ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS - Min( MDR ,Min( ( ( ACS * FirstVNF_RAM ) + ( MRS + ( ARS / ARS ) ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( ( ( MUC / MUR ) / ( MUM / ( ( ( MUM * MUC ) * ( MLU + RMSe ) ) / Max( RRSe,( CS / MUM ) ) ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - CS ) )", "obj1": 0.9724409448818898, "obj2": 0.011636597694880561}, {"determining": "Max( ( ( ( AMS + Min( ARS ,( CRS * FirstVNF_RAM ) ) ) * Max( DDR,CRS ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( FirstVNF_RAM_Server + AMS ) - ( ( Max( ( Min( MDR ,FirstVNF_CPU_Server ) * FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( Max( MUR,MUC ) * DS ) / ( MLU + MUM ) ) * DS ) ) / Min( ( MLU / Min( MUR ,( ( MUM + MUM ) - RRSe ) ) ) ,( MUM / ( ( MUC / MLU ) / Max( Min( CS ,MUM ),MUR ) ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7495369392494862}, {"determining": "( ( Max( Max( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - FirstVNF_CPU ),Min( FirstVNF_CPU ,MRS ) ),( PN / MDR ) ) * ( ( FirstVNF_RAM * ARS ) * ( ( Min( ACS ,AMS ) * ( Const - FirstVNF_CPU_Server ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / ( ( FirstVNF_RAM_Server + ACS ) * DDR ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( RCSe,Min( DS ,RRSe ) ) ) ) ) - CS ) )", "obj1": 0.6299212598425197, "obj2": 0.24410739196354367}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8503937007874016, "obj2": 0.06695215087021172}, {"determining": "( Min( MDR ,Const ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ( CRS * PN ) ) ),MDR ) ,DDR ) * Min( Min( ( Max( FirstVNF_CPU,Min( CRS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - MRS ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( Min( ( RRSe / ( ( RCSe * MUM ) + MUM ) ) ,MUC ) * Min( Max( MLU,MUR ) ,Min( ( RCSe + MLU ) ,Min( CS ,MUR ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2618110236220472, "obj2": 0.5883869895267535}, {"determining": "( Min( Max( ( ( ( FirstVNF_Mem / MDR ) / Max( ACS,( DDR - Max( FirstVNF_CPU_Server,PN ) ) ) ) / ( FirstVNF_CPU - AMS ) ),( ( FirstVNF_RAM_Server - BR ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( ( ( AMS / ( DDR + FirstVNF_Mem ) ) / ( Min( ( CRS + FirstVNF_RAM ) ,( RRS / MDR ) ) * PN ) ) ,Const ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - Max( ( CS / CS ),( MUR - Max( CS,( MLU - RMSe ) ) ) ) ) ,( ( ( Max( ( RRSe * Min( RCSe ,DS ) ),RMSe ) * MLU ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.3248031496062992, "obj2": 0.5210249777343015}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.01619963875838146}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ( BR * FirstVNF_CPU_Server ) - ( ( MDR / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * DDR ) ) - ( MRS * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( Min( RCSe ,( RCSe + ( MUC / CS ) ) ) * ( RCSe * Min( ( Min( DS ,( CS - RCSe ) ) / Max( RMSe,MLU ) ) ,RRSe ) ) ) ) - Min( MUM ,CS ) )", "obj1": 0.2204724409448819, "obj2": 0.6224034964097153}, {"determining": "( Min( MDR ,Const ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( Min( MDR ,Max( BR,FirstVNF_CPU ) ) ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.23031496062992127, "obj2": 0.6177441480710565}, {"determining": "( ( CRS * Min( MDR ,Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,ARS ) ) ) * ( ( Max( ( FirstVNF_RAM + ( ( MRS + ACS ) - ( ( FirstVNF_CPU / BR ) - Max( BR,DDR ) ) ) ),Max( AMS,AMS ) ) / AMS ) - Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * RMSe ) * ( RRSe - MUC ) ) / Max( ( ( ( ( ( ( MUM - RRSe ) / MUM ) / MUM ) / Max( Min( DS ,( DS / CS ) ),( RCSe * ( CS - MLU ) ) ) ) * Max( DS,DS ) ) * RRSe ),MLU ) )", "obj1": 0.9212598425196851, "obj2": 0.03583399493183244}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ACS + CRS ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / ( DDR - MRS ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( FirstVNF_CPU / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),DS ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.262177400755166}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( DDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( RMSe,MUC ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6306731429263076}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( Min( ( RCSe / RRSe ) ,( MUR + ( Max( MLU,MLU ) - MLU ) ) ) / ( DS * MUC ) ) - Min( ( RMSe / RMSe ) ,( MUR + DS ) ) )", "obj1": 0.19094488188976377, "obj2": 0.64916328588765}, {"determining": "Max( ( ( RRS + MDR ) / Max( Max( MRS,Const ),( CRS / AMS ) ) ),( ACS - ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( ( MUR * RCSe ) / MUC ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.26968503937007876, "obj2": 0.5825907543335712}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6122047244094488, "obj2": 0.25811475448198423}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( MUR + Max( CS,( Max( CS,RMSe ) + ( MUC + RRSe ) ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5628188053456457}, {"determining": "( Min( MDR ,Const ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - MRS ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RCSe,( DS - RRSe ) ) ) ) ) * ( MLU + MUR ) ) - CS ) )", "obj1": 0.25393700787401574, "obj2": 0.5947012202192204}, {"determining": "( Max( PN,Min( BR ,Max( BR,( ( FirstVNF_RAM_Server - ARS ) + MRS ) ) ) ) * Min( MDR ,( MDR + CRS ) ) )", "choosing": "( ( RMSe + ( Min( RMSe ,DS ) - DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( RCSe - ( CS / ( CS * DS ) ) ) ) / ( RCSe / ( RMSe * ( Max( RMSe,RMSe ) * MUM ) ) ) ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7347501566891471}, {"determining": "Max( ( ( RRS + MDR ) / Max( Max( ( MRS * Max( FirstVNF_RAM,BR ) ),Const ),( CRS / AMS ) ) ),( MDR - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Max( ( MUC * DS ),( RCSe + RMSe ) ) * Min( ( Min( MUR ,( MUR / RMSe ) ) + ( ( ( RMSe * MUR ) - ( MUR * DS ) ) / CS ) ) ,( RCSe / ( ( ( MUR * RCSe ) / Min( MLU ,RRSe ) ) / Max( RRSe,( RRSe / CS ) ) ) ) ) ) - CS ) )", "obj1": 0.2795275590551181, "obj2": 0.5736474096961944}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,Min( CRS ,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUR ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5984251968503937, "obj2": 0.26621025402321175}, {"determining": "Max( Min( ACS ,RRS ),( ( MDR - AMS ) - ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) + Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * DS ) ,( RMSe - ( RRSe - RMSe ) ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MUR / RRSe ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) ,( MUC / MUR ) )", "obj1": 0.2736220472440945, "obj2": 0.5790195273035285}, {"determining": "Max( ( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) + DDR ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem ) ) - FirstVNF_RAM ) )", "choosing": "( ( MUM - MUR ) / ( DS + MUC ) )", "obj1": 0.17125984251968504, "obj2": 0.6997987353886727}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ARS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.32677165354330706, "obj2": 0.518165517743935}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS / Min( ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),( BR / DDR ) ) + DDR ) ,Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RCSe / Min( Max( ( Max( CS,( MLU / MUM ) ) / RMSe ),RMSe ) ,Min( ( RCSe + ( MUC / ( MUM - MUM ) ) ) ,RCSe ) ) ) + Min( ( Max( DS,RCSe ) - CS ) ,( DS / DS ) ) ) + ( RRSe - RCSe ) )", "obj1": 0.9704724409448819, "obj2": 0.012331925644599761}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / Min( FirstVNF_Mem_Server ,PN ) ) + FirstVNF_RAM ) - BR ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( RRSe ,MUM ) - Min( CS ,Min( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),DS ) ,RMSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6490193509695537}, {"determining": "( ( ( MRS * RRS ) + ( BR - FirstVNF_Mem ) ) - ( ( DDR + MDR ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( RCSe,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,DS ) ) ) )", "obj1": 0.8622047244094488, "obj2": 0.06351812800572965}, {"determining": "Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_Mem + ( RRS + ACS ) ) ,Min( Const ,( ( ( DDR - ARS ) * FirstVNF_RAM_Server ) + ( ( MRS + CRS ) / DDR ) ) ) ) - ( Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( RRSe * CS ) )", "obj1": 0.28346456692913385, "obj2": 0.5698146110862061}, {"determining": "( Min( Max( ( ( FirstVNF_Mem_Server * Min( MDR ,PN ) ) * AMS ),CRS ) ,( ( ( PN - AMS ) + FirstVNF_CPU ) - ARS ) ) * Min( ( ( FirstVNF_Mem_Server / ( Const - ACS ) ) - Max( CRS,FirstVNF_Mem ) ) ,Const ) )", "choosing": "( ( MUM + CS ) - ( MUM / ( CS + MUM ) ) )", "obj1": 0.5826771653543307, "obj2": 0.271156322229862}, {"determining": "( Min( MDR ,Const ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( ( ( MRS + FirstVNF_CPU_Server ) * DDR ) + ( ( FirstVNF_CPU + MRS ) / ( MRS / ( ACS + PN ) ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( RRSe * CS ) ) ) ) ) ) - CS ) ,( DS / RMSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6324226636026404}, {"determining": "( Max( ACS,PN ) - Max( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) + ( Min( Max( BR,( FirstVNF_CPU - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ,MDR ) * Min( BR ,CRS ) ) ),FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( ( MUC / Max( ( CS - RMSe ),DS ) ) / Max( MUM,MUC ) ) ) + Min( CS ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ,MUR ) ) )", "obj1": 0.9921259842519685, "obj2": 0.0036125599887954665}, {"determining": "( Min( BR ,FirstVNF_RAM_Server ) / ( ( CRS + CRS ) / ( ( Const - MDR ) / ( ( ( ARS / MRS ) * ARS ) * DDR ) ) ) )", "choosing": "Min( ( ( ( Max( Min( ( RRSe + ( MUR - MLU ) ) ,RRSe ),RMSe ) - MUM ) * ( MUC * Max( MUC,( RCSe / Min( MUC ,CS ) ) ) ) ) / MUR ) ,( ( Min( ( MUC * Min( DS ,DS ) ) ,( RCSe + RMSe ) ) * ( ( MUC / MUR ) + ( MUM / ( Max( ( CS / MUM ),MUR ) / ( MUC / MUC ) ) ) ) ) - CS ) )", "obj1": 0.6240157480314961, "obj2": 0.24584599828192236}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( MRS + ( ARS / ARS ) ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * MUM ) / Max( ( RRSe + ( ( ( ( ( DS - MLU ) / MUM ) / MUM ) / Max( MUM,( MUR * RCSe ) ) ) * Max( DS,DS ) ) ),MLU ) )", "obj1": 0.9547244094488189, "obj2": 0.020178487089599916}, {"determining": "( Min( MDR ,( MDR + MRS ) ) * Max( PN,Min( MDR ,Max( BR,( FirstVNF_CPU - MDR ) ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7614027513418106}, {"determining": "( Min( FirstVNF_RAM_Server ,( Max( Min( PN ,FirstVNF_RAM_Server ),( FirstVNF_CPU / BR ) ) * ( ACS * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + FirstVNF_Mem ) ) ) ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * DDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( Max( DS,( DS - RRSe ) ) - MUM ) ,( DS / DS ) ) + ( RCSe - Min( Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),RMSe ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.25085994943067513}, {"determining": "Max( ( ( RRS + MDR ) / Max( Max( MRS,Const ),( CRS / AMS ) ) ),( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * AMS ) * ( Const - MDR ) ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.2874015748031496, "obj2": 0.5636374252648795}, {"determining": "Max( ( ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) + FirstVNF_CPU ),( ( FirstVNF_Mem_Server / ( DDR - ARS ) ) / Const ) )", "choosing": "( Max( ( RRSe + Max( MLU,( ( ( MUC - MUM ) - MUC ) / ( RCSe - RCSe ) ) ) ),( RRSe / MUM ) ) / ( MUR + RCSe ) )", "obj1": 0.1673228346456693, "obj2": 0.704420543415858}, {"determining": "Max( ( Max( FirstVNF_Mem,MDR ) - FirstVNF_Mem_Server ),( Const * MDR ) )", "choosing": "( ( DS / Max( MLU,( Max( Max( ( Min( MUM ,MUC ) + RCSe ),DS ),( Min( Min( CS ,RRSe ) ,RRSe ) * MUC ) ) - ( ( DS + RCSe ) - ( RRSe / MUR ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.22244094488188976, "obj2": 0.6191606149196309}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( DDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / ( ( ( MUM + CS ) / ( ( MUC / MUR ) / Max( MUM,MUC ) ) ) + Min( CS ,( ( MLU * RRSe ) - RMSe ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7526271088956741}, {"determining": "( Min( MDR ,Const ) * Max( ( FirstVNF_CPU_Server * ( Max( Const,( DDR * FirstVNF_Mem ) ) / RRS ) ),( DDR - MDR ) ) )", "choosing": "Min( ( DS / RMSe ) ,( Min( DS ,MUM ) - CS ) )", "obj1": 0.2578740157480315, "obj2": 0.5942558620357359}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM - MUC ) ,Max( MUC,DS ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5905511811023622, "obj2": 0.2694516918848454}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ACS * ( Const - MDR ) ) + ( ( ARS / ARS ) + ARS ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - ( DS / Max( MUC,CS ) ) ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),MUM ),DS ) ,RMSe ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.020847222597122524}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}], "15": [{"determining": "( ( ( MDR * AMS ) * ( ( ( ( AMS * ( FirstVNF_Mem - BR ) ) - ( ( ( DDR / PN ) - ( MRS - FirstVNF_CPU ) ) + ( Min( RRS ,MDR ) / FirstVNF_CPU ) ) ) * ( DDR - CRS ) ) / Const ) ) / ( FirstVNF_Mem * MRS ) )", "choosing": "Min( Max( ( RRSe - ( RMSe / DS ) ),RCSe ) ,( ( MUR / ( RRSe * RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Const,CRS ) - MDR ) - ACS ) * ( ( ACS / CRS ) - ( MDR / Min( ( ( BR + FirstVNF_RAM_Server ) / MDR ) ,Min( ( RRS / ( ( DDR - ARS ) - Min( PN ,FirstVNF_CPU ) ) ) ,BR ) ) ) ) )", "choosing": "( ( ( ( MUC - MUR ) * ( Min( ( ( ( MUC + MLU ) / MUC ) * ( ( MUM * MUR ) * Min( CS ,RMSe ) ) ) ,RCSe ) + MUM ) ) / MUC ) / Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Max( ACS,BR ) ,ACS ) * ( AMS - FirstVNF_CPU ) ) + DDR ) / FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( RCSe / Min( RMSe ,RMSe ) ) ) / Max( ( RCSe / RMSe ),( Max( ( Max( MUC,( MUR / MUR ) ) + RRSe ),( RRSe * RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8635528467108932}, {"determining": "( ( FirstVNF_RAM_Server * AMS ) - Max( DDR,CRS ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( MUM,Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),DS ) ) + Max( MUR,( RRSe / Max( ( ( MUM * MUC ) + DS ),( ( MLU * DS ) / DS ) ) ) ) ) / RCSe ) )", "obj1": 0.5, "obj2": 0.2938296408752507}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37287002792506396}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * AMS ) * ( Const - MDR ) ) ) ) * Min( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( Max( ( CS / MUM ),CS ) / MUM ) ) ) / RCSe ) )", "obj1": 0.4645669291338583, "obj2": 0.3373037041175421}, {"determining": "( Min( ( ( ACS - AMS ) - Max( PN,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) * ( Const + MDR ) )", "choosing": "( Min( ( DS / ( MUC * DS ) ) ,Max( ( DS - MUM ),CS ) ) - ( ( Max( CS,( CS / ( ( ( RCSe + CS ) + RCSe ) / MUR ) ) ) / MUM ) / Max( MUM,( DS - DS ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.19021025987476964}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.13091990440424464}, {"determining": "( Min( Max( ( ( ( FirstVNF_Mem / MDR ) / Max( ACS,( DDR - Max( FirstVNF_CPU_Server,PN ) ) ) ) / ( FirstVNF_CPU - AMS ) ),( ( FirstVNF_RAM_Server - BR ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( ( ( AMS / ( DDR + FirstVNF_Mem ) ) / ( Min( ( CRS + FirstVNF_RAM ) ,( RRS / MDR ) ) * PN ) ) ,Const ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - Max( ( CS / CS ),( MUR - Max( CS,( MLU - RMSe ) ) ) ) ) ,( ( ( Max( ( RRSe * Min( RCSe ,DS ) ),RMSe ) * MLU ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.4280568539747235}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.5452755905511811, "obj2": 0.28394020030111683}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( Const / ACS ) + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( Max( ( MUR / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / ( DS + CS ) ) / ( MLU / Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( MUM * RRSe ) ) / CS ),MUC ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08719124783143223}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - ( FirstVNF_Mem + Max( BR,( MRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / ( MLU + ( CS - DS ) ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.4566929133858268, "obj2": 0.34232181647622256}, {"determining": "Min( ( Min( ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * MDR ) ,MRS ) ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7165354330708661, "obj2": 0.16023273563703935}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + ( Min( PN ,( Const / MDR ) ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( ( MUR * DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( ( DS / MUM ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8385826771653543, "obj2": 0.07436712005423832}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / BR ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * ARS ) )", "choosing": "( ( ( DS + MUR ) - ( Min( ( Max( MLU,RCSe ) - Min( ( ( RRSe * RRSe ) - RMSe ) ,MUC ) ) ,Min( ( Max( MUM,RMSe ) / RCSe ) ,MLU ) ) / MUR ) ) / ( MUM / DS ) )", "obj1": 0.10236220472440945, "obj2": 0.805706621264607}, {"determining": "( ( ( ( Min( ( ( Min( RRS ,Const ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( RRS + ACS ) ) * ( RRS / ( Min( FirstVNF_Mem_Server ,CRS ) - RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( Min( RCSe ,( DS - Min( CS ,Min( ( CS * RRSe ) ,MLU ) ) ) ) ,( ( Max( ( ( Max( MUM,MLU ) / ( CS + MUR ) ) * DS ),( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.639763779527559, "obj2": 0.2370155897165511}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( MDR + Min( BR ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( Max( RRSe,RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,( Max( MUC,MUM ) - ( DS * MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.46135373167162275}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) ) ,( ( MRS - FirstVNF_Mem_Server ) / MDR ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( Max( ( RRSe + Min( DS ,Min( DS ,Min( RRSe ,CS ) ) ) ),( RCSe / ( RRSe * DS ) ) ) ,RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.19383060387864165}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) + ( ( BR / PN ) * ( ACS * ( Max( AMS,ARS ) + ( FirstVNF_RAM * PN ) ) ) ) ) ) * PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "Min( ( Min( ( DS - CS ) ,Min( MLU ,( MLU / MUM ) ) ) + MUM ) ,( ( MUM * ( Max( Min( MUC ,RCSe ),Max( RRSe,( MUC / MUR ) ) ) * MUM ) ) - MUR ) )", "obj1": 0.3661417322834646, "obj2": 0.49133321886259634}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "( ( AMS * ( FirstVNF_Mem - BR ) ) - ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + ( ( DDR / PN ) - ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( ( ( ( MUC / MUR ) + ( Max( ( DS - MUR ),DS ) - RCSe ) ) + MUM ) + Min( CS ,RCSe ) ) / ( ( CS + RCSe ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.7677165354330708, "obj2": 0.12490309353502882}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ACS * RRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( CS / ( RRSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.7992125984251969, "obj2": 0.07992614654280952}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.655511811023622, "obj2": 0.19173658103507898}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( Max( Min( PN ,FirstVNF_RAM_Server ),( FirstVNF_CPU / BR ) ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5084188958153422}, {"determining": "( Max( AMS,Max( FirstVNF_Mem,Max( ACS,( Max( ACS,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) - ( ( AMS + ( Min( MDR ,( ( BR + ( ACS - Const ) ) / DDR ) ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( Min( Max( Max( Max( Max( RCSe,RCSe ),MLU ),Min( RCSe ,MUR ) ),DS ) ,CS ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / Max( MUM,Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.3779527559055118, "obj2": 0.48667235755117605}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( BR ,FirstVNF_RAM_Server ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( CS ,MUR ) - Min( RCSe ,MUC ) ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MUM,MUR ),( DS + CS ) ),DS ) ,CS ) ) + Min( Min( ( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) ) ,CS ) ,( DS / ( ( MUC / ( ( MUM / MLU ) + ( RCSe / MUC ) ) ) + RCSe ) ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.16576935081263403}, {"determining": "Min( Min( ( MDR + AMS ) ,FirstVNF_RAM_Server ) ,Min( ( Const * ( ACS * AMS ) ) ,ARS ) )", "choosing": "( ( RCSe - ( DS / Max( DS,CS ) ) ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),( MUM * MUC ) ) ,RMSe ) ) + Max( ( ( DS - RCSe ) - CS ),( MUM / MUM ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6623099202115406}, {"determining": "( Min( ACS ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + ( ( MRS / AMS ) + MRS ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( ( DS - RCSe ) - ( ( RCSe / Max( ( MLU * MUC ),( MUC / MUR ) ) ) - MUR ) ) ,( DS / DS ) ) + ( RCSe / Min( Max( Max( ( MLU - Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4503075400852304}, {"determining": "( Min( Max( ( ( ( Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) * ( FirstVNF_CPU - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ),( ( Const / ( ACS + PN ) ) / ( FirstVNF_CPU - AMS ) ) ) ,PN ) / ( ( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - RCSe ) + ( ( Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) / RCSe ) + Min( ( ( ( DS / Min( DS ,( RCSe * MUR ) ) ) / Max( RMSe,MUC ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.42981964657360433}, {"determining": "Max( ( ( ( RRS - PN ) * Max( DDR,CRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( BR * CRS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( RCSe + ( ( CS + Max( MLU,MUM ) ) - MUC ) ) - DS ) ),MUR ) / ( MLU / ( DS * ( MLU / MLU ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8198884265464628}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / ( ACS / ACS ) ) / ( AMS - ( FirstVNF_CPU_Server / ( AMS + DDR ) ) ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "Min( ( ( CS - MUC ) / MUR ) ,( ( Min( ( RCSe + RMSe ) ,( MUC * DS ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - MLU ) )", "obj1": 0.41141732283464566, "obj2": 0.44856570131161305}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * ( MDR / AMS ) ) * ( Const - MDR ) ) ) ) * Min( ( Const * AMS ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),Min( Max( RMSe,MUR ) ,( ( ( DS / DS ) * MLU ) - MUR ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.045384524576316705}, {"determining": "( ( RRS / ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( Max( FirstVNF_CPU,DDR ) ,AMS ) * ( Const - MDR ) ) - Max( ACS,DDR ) ) )", "choosing": "Max( ( ( ( ( ( CS * DS ) + DS ) + MUM ) + MUR ) / ( Min( RMSe ,RCSe ) / Max( MUM,CS ) ) ),( ( DS / RMSe ) + RMSe ) )", "obj1": 0.8917322834645669, "obj2": 0.041834103612551826}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( RCSe * DS ) - RMSe ) )", "obj1": 0.8700787401574803, "obj2": 0.057326374742811936}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS - Min( MDR ,Min( ( ( ACS * ( Const - MDR ) ) + ( ( ARS / ARS ) + ARS ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * MUM ) / Max( ( RRSe + ( RCSe * Max( DS,( DS - RCSe ) ) ) ),MLU ) )", "obj1": 0.9114173228346457, "obj2": 0.03954381146122876}, {"determining": "Max( ( Min( MDR ,( MDR - Max( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ),( ( MDR * DDR ) + Max( Max( DDR,FirstVNF_CPU ),( MDR * FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / BR ) / Const ) ),( Const - MDR ) )", "choosing": "( ( DS / Max( ( Max( ( RRSe / ( MUM + ( MUR / MLU ) ) ),Max( MUR,Max( MUC,DS ) ) ) - Max( Min( MUC ,RCSe ),Max( RRSe,Max( Min( DS ,MUM ),MUC ) ) ) ),MLU ) ) - Min( MUR ,RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.6004762161791302}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "Max( ( ( ( AMS + Min( ARS ,( CRS * FirstVNF_RAM ) ) ) * Max( DDR,CRS ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( FirstVNF_RAM_Server + AMS ) - ( ( Max( ( Min( MDR ,FirstVNF_CPU_Server ) * FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( Max( MUR,MUC ) * DS ) / ( MLU + MUM ) ) * DS ) ) / Min( ( MLU / Min( MUR ,( ( MUM + MUM ) - RRSe ) ) ) ,( MUM / ( ( MUC / MLU ) / Max( Min( CS ,MUM ),MUR ) ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7495369392494862}, {"determining": "( Max( FirstVNF_Mem,( BR / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( Max( MUC,DS ) ,( RCSe + ( MUR / CS ) ) ) * Min( ( MUC / MUR ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.5610236220472441, "obj2": 0.2722336998898245}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.2933070866141732, "obj2": 0.5499974267174593}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.3031496062992126, "obj2": 0.54324517108614}, {"determining": "Min( ( Min( AMS ,( Min( ( ( Const / MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( ( Max( MUM,RCSe ) - ( MUM * MUR ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.765748031496063, "obj2": 0.1269451125210553}, {"determining": "Max( ( ( Max( BR,RRS ) - Max( BR,FirstVNF_Mem_Server ) ) / BR ),( ACS - ( ( MRS + FirstVNF_RAM ) - Max( ( Max( ( FirstVNF_Mem * ( CRS + AMS ) ),( Min( MDR ,MRS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( ( Max( MLU,RCSe ) + MUM ) / Max( ( CS - Min( RRSe ,Max( MUC,RMSe ) ) ),DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,Min( MUM ,Max( RCSe,MUM ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7399641977051608}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8503937007874016, "obj2": 0.06695215087021172}, {"determining": "( ( ( ( ( Max( BR,( MRS + ( BR + MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - Min( DDR ,Min( ARS ,FirstVNF_RAM ) ) ) + AMS ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,( Min( DS ,CS ) * RRSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5335179135554049}, {"determining": "( Min( Max( ( ( FirstVNF_Mem_Server * Min( MDR ,PN ) ) * AMS ),CRS ) ,( ( ( PN - AMS ) + FirstVNF_CPU ) - ARS ) ) * Min( ( ( FirstVNF_Mem_Server / ( Const - ACS ) ) - Max( CRS,FirstVNF_Mem ) ) ,Const ) )", "choosing": "( ( MUM + CS ) - ( MUM / ( CS + MUM ) ) )", "obj1": 0.5826771653543307, "obj2": 0.271156322229862}, {"determining": "( ( CRS * Min( MDR ,Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,ARS ) ) ) * ( ( Max( ( FirstVNF_RAM + ( ( MRS + ACS ) - ( ( FirstVNF_CPU / BR ) - Max( BR,DDR ) ) ) ),Max( AMS,AMS ) ) / AMS ) - Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * RMSe ) * ( RRSe - MUC ) ) / Max( ( ( ( ( ( ( MUM - RRSe ) / MUM ) / MUM ) / Max( Min( DS ,( DS / CS ) ),( RCSe * ( CS - MLU ) ) ) ) * Max( DS,DS ) ) * RRSe ),MLU ) )", "obj1": 0.9212598425196851, "obj2": 0.03583399493183244}, {"determining": "( Max( ACS,PN ) - Max( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + ( Min( Max( BR,( FirstVNF_CPU - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ,MDR ) * Min( BR ,CRS ) ) ),FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( ( MUC / Max( ( CS - RMSe ),DS ) ) / Max( MUM,MUC ) ) ) + Min( CS ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( ( Max( ( ( CS - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( MUM - MUR ) ) ),MUC ) * CS ) ,MUR ) ) )", "obj1": 0.9901574803149606, "obj2": 0.006787733634353599}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.5551181102362205, "obj2": 0.27627394604693556}, {"determining": "Max( Min( ( DDR + ( Min( ACS ,AMS ) * ( Min( AMS ,FirstVNF_RAM_Server ) - MDR ) ) ) ,FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,( RMSe + MUC ) ) + DS ) ) / ( DS + MUM ) )", "obj1": 0.1594488188976378, "obj2": 0.706042597131564}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( CS / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.7933070866141733, "obj2": 0.08348554188391552}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( Min( FirstVNF_RAM_Server ,( Max( Min( PN ,FirstVNF_RAM_Server ),( FirstVNF_CPU / BR ) ) * ( ACS * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + FirstVNF_Mem ) ) ) ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * DDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( Max( DS,( DS - RRSe ) ) - MUM ) ,( DS / DS ) ) + ( RCSe - Min( Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),RMSe ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.25085994943067513}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.33858267716535434, "obj2": 0.5162578322107289}, {"determining": "( Max( Max( FirstVNF_Mem,( ACS / ( Max( FirstVNF_RAM,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ),AMS ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( Max( ( CS - RMSe ),MLU ) / ( MUM + MUM ) ) ,( ( RCSe / ( CS * Min( MUR ,RRSe ) ) ) - MUM ) ) * Min( ( ( RRSe - RCSe ) / MUR ) ,( MUM / ( MUM - Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.31299212598425197, "obj2": 0.5378959770203993}, {"determining": "( Max( BR,( Max( FirstVNF_RAM,( Max( ( ( DDR / AMS ) - ACS ),( ( Const * MDR ) * AMS ) ) - Max( ( ( DDR / AMS ) - Min( FirstVNF_Mem ,ARS ) ),( AMS * Max( FirstVNF_CPU_Server,PN ) ) ) ) ) / CRS ) ) * Max( ARS,( ACS - Const ) ) )", "choosing": "( ( ( DS * MUC ) / Max( ( Min( ( CS / MUM ) ,MUM ) / ( MUM / MUC ) ),MUR ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08661417322834646, "obj2": 0.8506069980420871}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / ( DDR * ARS ) ),Min( FirstVNF_Mem ,( CRS - MRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( ( RCSe * MUC ) * DS ) ) / Max( ( RCSe * RMSe ),MUR ) )", "obj1": 0.09251968503937008, "obj2": 0.8343567838247025}, {"determining": "( ( ( DDR / Max( MRS,( FirstVNF_RAM_Server + CRS ) ) ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS - Min( MDR ,Min( ( ( ACS * FirstVNF_RAM ) + ( MRS + ( ARS / ARS ) ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( ( ( MUC / MUR ) / ( MUM / ( ( ( MUM * MUC ) * ( MLU + RMSe ) ) / Max( RRSe,( CS / MUM ) ) ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - CS ) )", "obj1": 0.9724409448818898, "obj2": 0.011636597694880561}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.610236220472441, "obj2": 0.2578892820712523}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( DDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( RMSe,MUC ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6306731429263076}, {"determining": "( Min( MDR ,Const ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ( CRS * PN ) ) ),MDR ) ,DDR ) * Min( Min( ( Max( FirstVNF_CPU,Min( CRS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - MRS ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( Min( ( RRSe / ( ( RCSe * MUM ) + MUM ) ) ,MUC ) * Min( Max( MLU,MUR ) ,Min( ( RCSe + MLU ) ,Min( CS ,MUR ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2618110236220472, "obj2": 0.5883869895267535}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ( BR * FirstVNF_CPU_Server ) - ( ( MDR / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * DDR ) ) - ( MRS * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( Min( RCSe ,( RCSe + ( MUC / CS ) ) ) * ( RCSe * Min( ( Min( DS ,( CS - RCSe ) ) / Max( RMSe,MLU ) ) ,RRSe ) ) ) ) - Min( MUM ,CS ) )", "obj1": 0.2204724409448819, "obj2": 0.6224034964097153}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / Min( MDR ,( Max( ACS,Min( ( FirstVNF_Mem_Server * ( BR / ( MRS - MDR ) ) ) ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) / DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6097269984927647}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( Min( ( RCSe / RRSe ) ,( MUR + ( Max( MLU,MLU ) - MLU ) ) ) / ( DS * MUC ) ) - Min( ( RMSe / RMSe ) ,( MUR + DS ) ) )", "obj1": 0.19094488188976377, "obj2": 0.64916328588765}, {"determining": "( FirstVNF_CPU_Server + Max( MRS,Min( PN ,Min( ( FirstVNF_Mem_Server / AMS ) ,Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( RRSe,MUR ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( RMSe ,DS ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6922578042754671}, {"determining": "Max( ( ( RRS + MDR ) / Max( Max( MRS,Const ),( CRS / AMS ) ) ),( ACS - ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( ( MUR * RCSe ) / MUC ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.26968503937007876, "obj2": 0.5825907543335712}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( DDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / ( ( ( MUM + CS ) / ( ( MUC / MUR ) / Max( MUM,MUC ) ) ) + Min( CS ,( ( MLU * RRSe ) - RMSe ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7526271088956741}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08858267716535433, "obj2": 0.8464432684972332}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( MUR + Max( CS,( Max( CS,RMSe ) + ( MUC + RRSe ) ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5628188053456457}, {"determining": "( Min( MDR ,Const ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - MRS ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RCSe,( DS - RRSe ) ) ) ) ) * ( MLU + MUR ) ) - CS ) )", "obj1": 0.25393700787401574, "obj2": 0.5947012202192204}, {"determining": "( Max( PN,Min( BR ,Max( BR,( ( FirstVNF_RAM_Server - ARS ) + MRS ) ) ) ) * Min( MDR ,( MDR + CRS ) ) )", "choosing": "( ( RMSe + ( Min( RMSe ,DS ) - DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( RCSe - ( CS / ( CS * DS ) ) ) ) / ( RCSe / ( RMSe * ( Max( RMSe,RMSe ) * MUM ) ) ) ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7347501566891471}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - BR ) ) - ( Max( Min( CRS ,FirstVNF_Mem ),AMS ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( DS ,Max( MLU,( ( MLU + MUR ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( Min( ( Min( RCSe ,RRSe ) + MUC ) ,RMSe ) ,CS ) )", "obj1": 0.5964566929133859, "obj2": 0.26463986103082}, {"determining": "Max( ( ( RRS + MDR ) / Max( Max( ( MRS * Max( FirstVNF_RAM,BR ) ),Const ),( CRS / AMS ) ) ),( MDR - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Max( ( MUC * DS ),( RCSe + RMSe ) ) * Min( ( Min( MUR ,( MUR / RMSe ) ) + ( ( ( RMSe * MUR ) - ( MUR * DS ) ) / CS ) ) ,( RCSe / ( ( ( MUR * RCSe ) / Min( MLU ,RRSe ) ) / Max( RRSe,( RRSe / CS ) ) ) ) ) ) - CS ) )", "obj1": 0.2795275590551181, "obj2": 0.5736474096961944}, {"determining": "Max( ( Max( FirstVNF_Mem,MDR ) - FirstVNF_Mem_Server ),( Const * MDR ) )", "choosing": "( ( DS / Max( MLU,( Max( Max( ( Min( MUM ,MUC ) + RCSe ),DS ),( Min( Min( CS ,RRSe ) ,RRSe ) * MUC ) ) - ( ( DS + RCSe ) - ( RRSe / MUR ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.22244094488188976, "obj2": 0.6191606149196309}, {"determining": "Max( Min( ACS ,RRS ),( ( MDR - AMS ) - ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) + Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * DS ) ,( RMSe - ( RRSe - RMSe ) ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MUR / RRSe ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) ,( MUC / MUR ) )", "obj1": 0.2736220472440945, "obj2": 0.5790195273035285}, {"determining": "( Min( MDR ,( MDR + MRS ) ) * Max( PN,ACS ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7579461408587109}, {"determining": "( Min( MDR ,( MDR + MRS ) ) * Max( PN,Min( MDR ,Max( BR,( FirstVNF_CPU - MDR ) ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7614027513418106}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ARS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.32677165354330706, "obj2": 0.518165517743935}, {"determining": "( ( ( MRS * RRS ) + ( BR - FirstVNF_Mem ) ) - ( ( DDR + MDR ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( RCSe,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,DS ) ) ) )", "obj1": 0.8622047244094488, "obj2": 0.06351812800572965}, {"determining": "Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_Mem + ( RRS + ACS ) ) ,Min( Const ,( ( ( DDR - ARS ) * FirstVNF_RAM_Server ) + ( ( MRS + CRS ) / DDR ) ) ) ) - ( Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( RRSe * CS ) )", "obj1": 0.28346456692913385, "obj2": 0.5698146110862061}, {"determining": "Max( ( ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) + FirstVNF_CPU ),( ( FirstVNF_Mem_Server / ( DDR - ARS ) ) / Const ) )", "choosing": "( Max( ( RRSe + Max( MLU,( ( ( MUC - MUM ) - MUC ) / ( RCSe - RCSe ) ) ) ),( RRSe / MUM ) ) / ( MUR + RCSe ) )", "obj1": 0.1673228346456693, "obj2": 0.704420543415858}, {"determining": "Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),( Min( MDR ,Max( ( ACS - ( ( ( AMS / FirstVNF_CPU_Server ) * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU * Const ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2283464566929134, "obj2": 0.6113565663958649}, {"determining": "( Max( ACS,PN ) - Max( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) + ( Min( Max( BR,( FirstVNF_CPU - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ,MDR ) * Min( BR ,CRS ) ) ),FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( ( MUC / Max( ( CS - RMSe ),DS ) ) / Max( MUM,MUC ) ) ) + Min( CS ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ,MUR ) ) )", "obj1": 0.9921259842519685, "obj2": 0.0036125599887954665}, {"determining": "( Min( BR ,FirstVNF_RAM_Server ) / ( ( CRS + CRS ) / ( ( Const - MDR ) / ( ( ( ARS / MRS ) * ARS ) * DDR ) ) ) )", "choosing": "Min( ( ( ( Max( Min( ( RRSe + ( MUR - MLU ) ) ,RRSe ),RMSe ) - MUM ) * ( MUC * Max( MUC,( RCSe / Min( MUC ,CS ) ) ) ) ) / MUR ) ,( ( Min( ( MUC * Min( DS ,DS ) ) ,( RCSe + RMSe ) ) * ( ( MUC / MUR ) + ( MUM / ( Max( ( CS / MUM ),MUR ) / ( MUC / MUC ) ) ) ) ) - CS ) )", "obj1": 0.6240157480314961, "obj2": 0.24584599828192236}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09055118110236221, "obj2": 0.8348553987509655}, {"determining": "Min( ( Min( ( Min( ( ( Const - Max( DDR,DDR ) ) + MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( MLU - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.02700525665909482}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + MDR ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9625984251968503, "obj2": 0.014813821924762627}, {"determining": "( FirstVNF_CPU_Server + Max( ACS,Min( PN ,Min( ARS ,Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( ( MUR + ( ( ( Max( CS,( CS / MUR ) ) / MUM ) / Max( MUM,( MUR * DS ) ) ) * Max( MUC,DS ) ) ) ,MUM ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6972213510685725}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / Min( FirstVNF_Mem_Server ,PN ) ) + FirstVNF_RAM ) - BR ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( RRSe ,MUM ) - Min( CS ,Min( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),DS ) ,RMSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6490193509695537}, {"determining": "Max( ( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) + DDR ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem ) ) - FirstVNF_RAM ) )", "choosing": "( ( MUM - MUR ) / ( DS + MUC ) )", "obj1": 0.17125984251968504, "obj2": 0.6997987353886727}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8582677165354331, "obj2": 0.06369667038026539}, {"determining": "Max( ( ( RRS + MDR ) / Max( Max( MRS,Const ),( CRS / AMS ) ) ),( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * AMS ) * ( Const - MDR ) ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.2874015748031496, "obj2": 0.5636374252648795}, {"determining": "( Min( Max( ( ( FirstVNF_CPU - AMS ) / ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) ),( Min( ( Min( ( DDR * DDR ) ,( CRS - FirstVNF_Mem_Server ) ) / Max( Const,MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,( Max( Const,Max( MDR,Const ) ) - CRS ) ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + ( ( MUC + ( ( ( Max( DS,MUM ) / ( Max( MUC,CS ) + ( MUC + RRSe ) ) ) / RRSe ) - ( Min( ( ( CS * MUC ) / MUC ) ,Min( Max( MLU,RCSe ) ,MUM ) ) / ( ( ( RCSe * MUM ) - DS ) - ( DS + Min( CS ,RMSe ) ) ) ) ) ) - ( DS - ( Min( MUM ,( Min( RCSe ,RCSe ) / MUR ) ) / DS ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.5210249777343015}, {"determining": "Max( ( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) + DDR ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * MUC ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2047244094488189, "obj2": 0.6355329507807708}, {"determining": "( Min( MDR ,Const ) * Max( ( FirstVNF_CPU_Server * ( Max( Const,( DDR * FirstVNF_Mem ) ) / RRS ) ),( DDR - MDR ) ) )", "choosing": "Min( ( DS / RMSe ) ,( Min( DS ,MUM ) - CS ) )", "obj1": 0.2578740157480315, "obj2": 0.5942558620357359}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM - MUC ) ,Max( MUC,DS ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5905511811023622, "obj2": 0.2694516918848454}, {"determining": "Max( ( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) + DDR ) + FirstVNF_CPU ),( Min( Min( FirstVNF_Mem ,( MRS - CRS ) ) ,Const ) - FirstVNF_RAM ) )", "choosing": "( Min( ( ( DS - RCSe ) - CS ) ,( DS / ( DS * Max( ( RCSe / RMSe ),MUR ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.19881889763779528, "obj2": 0.6417365034206054}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ACS + CRS ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / Max( PN,Min( MDR ,Max( BR,( FirstVNF_CPU - MDR ) ) ) ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS + RRS ) ) + ( ( PN + FirstVNF_RAM_Server ) * ( ACS * RRS ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * CS ) ) ),DS ) ,CS ) ) + Min( ( DS / DS ) ,( ( DS - ( ( ( MLU + RCSe ) + ( RRSe - MLU ) ) * Min( DS ,MUM ) ) ) - DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.26184552712351955}], "16": [{"determining": "( Max( ACS,PN ) - Max( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + ( Min( Max( BR,( FirstVNF_CPU - CRS ) ) ,MDR ) * Min( BR ,CRS ) ) ),FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( ( MUC / Max( ( CS - RMSe ),DS ) ) / Max( MUM,MUC ) ) ) + Min( CS ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( ( Max( ( ( MLU - MUC ) + ( MUR * MUM ) ),MUC ) * CS ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * AMS ) * ( ( ( ( AMS * ( FirstVNF_Mem - BR ) ) - ( ( ( DDR / PN ) - ( MRS - FirstVNF_CPU ) ) + ( Min( RRS ,MDR ) / FirstVNF_CPU ) ) ) * ( DDR - CRS ) ) / Const ) ) / ( FirstVNF_Mem * MRS ) )", "choosing": "Min( Max( ( RRSe - ( RMSe / DS ) ),RCSe ) ,( ( MUR / ( RRSe * RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Max( ACS,BR ) ,ACS ) * ( AMS - FirstVNF_CPU ) ) + DDR ) / FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( RCSe / Min( RMSe ,RMSe ) ) ) / Max( ( RCSe / RMSe ),( Max( ( Max( MUC,( MUR / MUR ) ) + RRSe ),( RRSe * RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8635528467108932}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37287002792506396}, {"determining": "( ( AMS - ( CRS * PN ) ) - Max( ( ( FirstVNF_Mem_Server - RRS ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( ( MUR * DS ),MUR ),MLU ) / ( ( RCSe * DS ) - MUC ) )", "obj1": 0.7440944881889764, "obj2": 0.11031357800490244}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "( Min( Max( ( ( ( FirstVNF_Mem / MDR ) / Max( ACS,( DDR - Max( FirstVNF_CPU_Server,PN ) ) ) ) / ( FirstVNF_CPU - AMS ) ),( ( FirstVNF_RAM_Server - BR ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( ( ( AMS / ( DDR + FirstVNF_Mem ) ) / ( Min( ( CRS + FirstVNF_RAM ) ,( RRS / MDR ) ) * PN ) ) ,Const ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - Max( ( CS / CS ),( MUR - Max( CS,( MLU - RMSe ) ) ) ) ) ,( ( ( Max( ( RRSe * Min( RCSe ,DS ) ),RMSe ) * MLU ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.4280568539747235}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( MRS + Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ),Min( BR ,FirstVNF_RAM_Server ) ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( CS ,MUR ) - Min( RCSe ,MUC ) ) - RCSe ) + ( ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) + Min( Min( ( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) ) ,CS ) ,( DS / DS ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.1888854358302451}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( Const / ACS ) + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( Max( ( MUR / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / ( DS + CS ) ) / ( MLU / Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( MUM * RRSe ) ) / CS ),MUC ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08719124783143223}, {"determining": "( ( ACS * AMS ) - ( ( AMS * MRS ) + DDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( RMSe + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( Max( Max( Max( MLU,( DS + MLU ) ),( CS + CS ) ),DS ),MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.49803149606299213, "obj2": 0.2944686089332702}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / BR ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * ARS ) )", "choosing": "( ( ( DS + MUR ) - ( Min( ( Max( MLU,RCSe ) - Min( ( ( RRSe * RRSe ) - RMSe ) ,MUC ) ) ,Min( ( Max( MUM,RMSe ) / RCSe ) ,MLU ) ) / MUR ) ) / ( MUM / DS ) )", "obj1": 0.10236220472440945, "obj2": 0.805706621264607}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) ) ,( ( MRS - FirstVNF_Mem_Server ) / MDR ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( Max( ( RRSe + Min( DS ,Min( DS ,Min( RRSe ,CS ) ) ) ),( RCSe / ( RRSe * DS ) ) ) ,RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.19383060387864165}, {"determining": "( ( ( ( Min( ( ( Min( RRS ,Const ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( RRS + ACS ) ) * ( RRS / ( Min( FirstVNF_Mem_Server ,CRS ) - RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( Min( RCSe ,( DS - Min( CS ,Min( ( CS * RRSe ) ,MLU ) ) ) ) ,( ( Max( ( ( Max( MUM,MLU ) / ( CS + MUR ) ) * DS ),( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.639763779527559, "obj2": 0.2370155897165511}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,( Const - MDR ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( MUC,( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7401574803149606, "obj2": 0.1525410109450774}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( MDR + Min( BR ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( Max( RRSe,RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,( Max( MUC,MUM ) - ( DS * MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.46135373167162275}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,RCSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3429845904106609}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8188976377952756, "obj2": 0.0712275639406462}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),DS ),MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.5019685039370079, "obj2": 0.29227241777689544}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.13091990440424464}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.5413385826771654, "obj2": 0.28639925594664145}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( Min( RRS ,MDR ) / FirstVNF_CPU ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - RMSe ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,MUM ) ) ) )", "obj1": 0.8503937007874016, "obj2": 0.06695215087021172}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.655511811023622, "obj2": 0.19173658103507898}, {"determining": "( ( AMS + ( Max( ACS,( Max( ACS,( ( ACS / ACS ) * FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - BR ) ) - ( ( DDR - MDR ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - ( MUM + MUR ) ) ) * RRSe ) ) ,Max( ( CS - RMSe ),MUR ) )", "obj1": 0.7106299212598425, "obj2": 0.1749207029766216}, {"determining": "Min( Min( ( MDR + AMS ) ,FirstVNF_RAM_Server ) ,Min( ( Const * ( ACS * AMS ) ) ,ARS ) )", "choosing": "( ( RCSe - ( DS / Max( DS,CS ) ) ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),( MUM * MUC ) ) ,RMSe ) ) + Max( ( ( DS - RCSe ) - CS ),( MUM / MUM ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6623099202115406}, {"determining": "( Min( ACS ,PN ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + ( ( MRS / AMS ) + MRS ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( ( DS - RCSe ) - ( ( RCSe / Max( ( MLU * MUC ),( MUC / MUR ) ) ) - MUR ) ) ,( DS / DS ) ) + ( RCSe / Min( Max( Max( ( MLU - Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4503075400852304}, {"determining": "Min( ( Min( ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * MDR ) ,MRS ) ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7165354330708661, "obj2": 0.16023273563703935}, {"determining": "( Min( Max( ( ( ( Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) * ( FirstVNF_CPU - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ),( ( Const / ( ACS + PN ) ) / ( FirstVNF_CPU - AMS ) ) ) ,PN ) / ( ( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - RCSe ) + ( ( Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) / RCSe ) + Min( ( ( ( DS / Min( DS ,( RCSe * MUR ) ) ) / Max( RMSe,MUC ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.42981964657360433}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / ( ACS / ACS ) ) / ( AMS - ( FirstVNF_CPU_Server / ( AMS + DDR ) ) ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "Min( ( ( CS - MUC ) / MUR ) ,( ( Min( ( RCSe + RMSe ) ,( MUC * DS ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - MLU ) )", "obj1": 0.41141732283464566, "obj2": 0.44856570131161305}, {"determining": "( Min( Max( ( ACS / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,( Const - CRS ) ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Max( DS,MUC ) ) ) ) / RCSe ) ) )", "obj1": 0.3779527559055118, "obj2": 0.48099857686089165}, {"determining": "( ( RRS / ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( Max( FirstVNF_CPU,DDR ) ,AMS ) * ( Const - MDR ) ) - Max( ACS,DDR ) ) )", "choosing": "Max( ( ( ( ( ( CS * DS ) + DS ) + MUM ) + MUR ) / ( Min( RMSe ,RCSe ) / Max( MUM,CS ) ) ),( ( DS / RMSe ) + RMSe ) )", "obj1": 0.8917322834645669, "obj2": 0.041834103612551826}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "( Max( FirstVNF_Mem,( BR / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( Max( MUC,DS ) ,( RCSe + ( MUR / CS ) ) ) * Min( ( MUC / MUR ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.5610236220472441, "obj2": 0.2722336998898245}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.2933070866141732, "obj2": 0.5499974267174593}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.3031496062992126, "obj2": 0.54324517108614}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * ( MDR / AMS ) ) * ( Const - MDR ) ) ) ) * Min( ( Const * AMS ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),Min( Max( RMSe,MUR ) ,( ( ( DS / DS ) * MLU ) - MUR ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.045384524576316705}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * ( ( CRS - DDR ) / ( FirstVNF_CPU - AMS ) ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( RMSe + ( ( RRSe / RMSe ) / RMSe ) ) ) ) - ( Min( CS ,MUR ) - ( ( MUM + DS ) - RMSe ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5066070313340402}, {"determining": "Max( ( ( Max( BR,RRS ) - Max( BR,FirstVNF_Mem_Server ) ) / BR ),( ACS - ( ( MRS + FirstVNF_RAM ) - Max( ( Max( ( FirstVNF_Mem * ( CRS + AMS ) ),( Min( MDR ,MRS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( ( Max( MLU,RCSe ) + MUM ) / Max( ( CS - Min( RRSe ,Max( MUC,RMSe ) ) ),DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,Min( MUM ,Max( RCSe,MUM ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7399641977051608}, {"determining": "( ( ( ( ( Max( BR,( MRS + ( BR + MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - Min( DDR ,Min( ARS ,FirstVNF_RAM ) ) ) + AMS ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,( Min( DS ,CS ) * RRSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5335179135554049}, {"determining": "( ( CRS * Min( MDR ,Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,ARS ) ) ) * ( ( Max( ( FirstVNF_RAM + ( ( MRS + ACS ) - ( ( FirstVNF_CPU / BR ) - Max( BR,DDR ) ) ) ),Max( AMS,AMS ) ) / AMS ) - Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * RMSe ) * ( RRSe - MUC ) ) / Max( ( ( ( ( ( ( MUM - RRSe ) / MUM ) / MUM ) / Max( Min( DS ,( DS / CS ) ),( RCSe * ( CS - MLU ) ) ) ) * Max( DS,DS ) ) * RRSe ),MLU ) )", "obj1": 0.9212598425196851, "obj2": 0.03583399493183244}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.5551181102362205, "obj2": 0.27627394604693556}, {"determining": "( ( ACS * PN ) - ( Min( ( ( ( FirstVNF_CPU / ( Max( MDR,CRS ) / ( ACS - Const ) ) ) + ( ACS * RRS ) ) + MDR ) ,Min( PN ,MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + DS ) + CS ),MUC ) / MLU ) / Min( RCSe ,( CS - DS ) ) )", "obj1": 0.7992125984251969, "obj2": 0.07815294930556357}, {"determining": "Min( ( Min( ( Min( ( ( Const - Max( DDR,DDR ) ) + MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( MLU - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.02700525665909482}, {"determining": "Max( Min( ( DDR + ( Min( ACS ,AMS ) * ( Min( AMS ,FirstVNF_RAM_Server ) - MDR ) ) ) ,FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,( RMSe + MUC ) ) + DS ) ) / ( DS + MUM ) )", "obj1": 0.1594488188976378, "obj2": 0.706042597131564}, {"determining": "( Min( BR ,FirstVNF_RAM_Server ) / ( ( CRS + CRS ) / ( ( Const - MDR ) / ( ( ( ARS / MRS ) * ARS ) * DDR ) ) ) )", "choosing": "Min( ( ( ( Max( Min( ( RRSe + ( MUR - MLU ) ) ,RRSe ),RMSe ) - MUM ) * ( MUC * Max( MUC,( RCSe / Min( MUC ,CS ) ) ) ) ) / MUR ) ,( ( Min( ( MUC * Min( DS ,DS ) ) ,( RCSe + RMSe ) ) * ( ( MUC / MUR ) + ( MUM / ( Max( ( CS / MUM ),MUR ) / ( MUC / MUC ) ) ) ) ) - CS ) )", "obj1": 0.6240157480314961, "obj2": 0.24584599828192236}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( MLU + ( ( Max( ( CS - RMSe ),DS ) / ( Max( MLU,RCSe ) + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / Max( RCSe,MUM ) ) ) )", "obj1": 0.8070866141732284, "obj2": 0.07700135315029981}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( Max( Max( FirstVNF_Mem,( ACS / ( Max( FirstVNF_RAM,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ),AMS ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( Max( ( CS - RMSe ),MLU ) / ( MUM + MUM ) ) ,( ( RCSe / ( CS * Min( MUR ,RRSe ) ) ) - MUM ) ) * Min( ( ( RRSe - RCSe ) / MUR ) ,( MUM / ( MUM - Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.31299212598425197, "obj2": 0.5378959770203993}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ( ( ACS * AMS ) / Const ),ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,( Const - CRS ) ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,CS ) + Max( MUR,( RRSe / Max( DS,MUM ) ) ) ) / RCSe ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4958680121653825}, {"determining": "( Max( BR,( Max( FirstVNF_RAM,( Max( ( ( DDR / AMS ) - ACS ),( ( Const * MDR ) * AMS ) ) - Max( ( ( DDR / AMS ) - Min( FirstVNF_Mem ,ARS ) ),( AMS * Max( FirstVNF_CPU_Server,PN ) ) ) ) ) / CRS ) ) * Max( ARS,( ACS - Const ) ) )", "choosing": "( ( ( DS * MUC ) / Max( ( Min( ( CS / MUM ) ,MUM ) / ( MUM / MUC ) ),MUR ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08661417322834646, "obj2": 0.8506069980420871}, {"determining": "Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),( Min( MDR ,Max( ( ACS - ( ( ( AMS / FirstVNF_CPU_Server ) * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU * Const ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2283464566929134, "obj2": 0.6113565663958649}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( Max( Min( PN ,FirstVNF_RAM_Server ),( FirstVNF_CPU / BR ) ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5084188958153422}, {"determining": "( Min( MDR ,( MDR + MRS ) ) * Max( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ),ACS ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( Min( ( MUC / MUR ) ,( RMSe + ( DS / RMSe ) ) ),DS ) ,CS ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7491256518863169}, {"determining": "( Min( Max( ( ( FirstVNF_CPU - AMS ) / ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) ),( Min( ( Min( ( DDR * DDR ) ,( CRS - FirstVNF_Mem_Server ) ) / Max( Const,MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,( Max( Const,Max( MDR,Const ) ) - CRS ) ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + ( ( MUC + ( ( ( Max( DS,MUM ) / ( Max( MUC,CS ) + ( MUC + RRSe ) ) ) / RRSe ) - ( Min( ( ( CS * MUC ) / MUC ) ,Min( Max( MLU,RCSe ) ,MUM ) ) / ( ( ( RCSe * MUM ) - DS ) - ( DS + Min( CS ,RMSe ) ) ) ) ) ) - ( DS - ( Min( MUM ,( Min( RCSe ,RCSe ) / MUR ) ) / DS ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.5210249777343015}, {"determining": "( ( ( DDR / Max( MRS,( FirstVNF_RAM_Server + CRS ) ) ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS - Min( MDR ,Min( ( ( ACS * FirstVNF_RAM ) + ( MRS + ( ARS / ARS ) ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( ( ( MUC / MUR ) / ( MUM / ( ( ( MUM * MUC ) * ( MLU + RMSe ) ) / Max( RRSe,( CS / MUM ) ) ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - CS ) )", "obj1": 0.9724409448818898, "obj2": 0.011636597694880561}, {"determining": "( Min( Max( ( ( FirstVNF_Mem_Server * Min( MDR ,PN ) ) * AMS ),CRS ) ,( ( ( PN - AMS ) + FirstVNF_CPU ) - ARS ) ) * Min( ( ( FirstVNF_Mem_Server / ( Const - ACS ) ) - Max( CRS,FirstVNF_Mem ) ) ,Const ) )", "choosing": "( ( MUM + CS ) - ( MUM / ( CS + MUM ) ) )", "obj1": 0.5826771653543307, "obj2": 0.271156322229862}, {"determining": "( ( ( BR / PN ) * ( ACS * AMS ) ) - ( ( Min( ( ( MDR / ACS ) / RRS ) ,MDR ) / FirstVNF_CPU ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,Min( Min( Max( RMSe,MUR ) ,Min( CS ,Max( MUC,MUM ) ) ) ,Min( Max( MUR,Min( DS ,DS ) ) ,Max( Max( RCSe,RCSe ),Min( RRSe ,MLU ) ) ) ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,( MUR + CS ) ) ) ) )", "obj1": 0.9862204724409449, "obj2": 0.00679794647478072}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( ( Min( MDR ,AMS ) + DDR ) ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + PN ) ) * PN ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Max( ( ( MUC * CS ) - ( RMSe - ( ( MUR + RMSe ) + MLU ) ) ),Max( CS,( DS - RRSe ) ) ) / MUM ) - CS ) )", "obj1": 0.37401574803149606, "obj2": 0.4885029142632931}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ACS + CRS ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / Max( PN,Min( MDR ,Max( BR,( FirstVNF_CPU - MDR ) ) ) ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS + RRS ) ) + ( ( PN + FirstVNF_RAM_Server ) * ( ACS * RRS ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * CS ) ) ),DS ) ,CS ) ) + Min( ( DS / DS ) ,( ( DS - ( ( ( MLU + RCSe ) + ( RRSe - MLU ) ) * Min( DS ,MUM ) ) ) - DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.26184552712351955}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( ACS ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( ( Max( ( CS / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( ( RCSe * DS ) - RMSe ) )", "obj1": 0.8720472440944882, "obj2": 0.05365174446029552}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( MRS + ( ARS / ARS ) ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - CS ) ,Min( MLU ,( MLU / MUM ) ) ) + MUM ) ,( ( MUM * ( Max( Min( MUC ,RCSe ),Max( RRSe,( MUC / MUR ) ) ) * MUM ) ) - MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.02172852573595011}, {"determining": "( Min( FirstVNF_RAM_Server ,( Max( Min( PN ,FirstVNF_RAM_Server ),( FirstVNF_CPU / BR ) ) * ( ACS * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + FirstVNF_Mem ) ) ) ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * DDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( Max( DS,( DS - RRSe ) ) - MUM ) ,( DS / DS ) ) + ( RCSe - Min( Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),RMSe ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.25085994943067513}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.5452755905511811, "obj2": 0.28394020030111683}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS * Min( MDR ,Min( ( ( ACS * AMS ) + ( MRS + ( ( DDR + ACS ) / ARS ) ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( MUR / MUC ) ) ),( RRSe / ( RCSe + ( MUR / MUM ) ) ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / ( DDR * ARS ) ),Min( FirstVNF_Mem ,( CRS - MRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( ( RCSe * MUC ) * DS ) ) / Max( ( RCSe * RMSe ),MUR ) )", "obj1": 0.09251968503937008, "obj2": 0.8343567838247025}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( Min( ( RCSe / RRSe ) ,( MUR + ( Max( MLU,MLU ) - MLU ) ) ) / ( DS * MUC ) ) - Min( ( RMSe / RMSe ) ,( MUR + DS ) ) )", "obj1": 0.19094488188976377, "obj2": 0.64916328588765}, {"determining": "( FirstVNF_CPU_Server + Max( MRS,Min( PN ,Min( ( FirstVNF_Mem_Server / AMS ) ,Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( RRSe,MUR ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( RMSe ,DS ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6922578042754671}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( ( CS / MUM ) / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8197025200082171}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0811082500049235}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) + ( ( BR / PN ) * ( ACS * ( Max( AMS,ARS ) + ( FirstVNF_RAM * PN ) ) ) ) ) ) * PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "Min( ( Min( ( DS - CS ) ,Min( MLU ,( MLU / MUM ) ) ) + MUM ) ,( ( MUM * ( Max( Min( MUC ,RCSe ),Max( RRSe,( MUC / MUR ) ) ) * MUM ) ) - MUR ) )", "obj1": 0.3661417322834646, "obj2": 0.49133321886259634}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( BR ,FirstVNF_RAM_Server ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( CS ,MUR ) - Min( RCSe ,MUC ) ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MUM,MUR ),( DS + CS ) ),DS ) ,CS ) ) + Min( Min( ( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) ) ,CS ) ,( DS / ( ( MUC / ( ( MUM / MLU ) + ( RCSe / MUC ) ) ) + RCSe ) ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.16576935081263403}, {"determining": "( Min( MDR ,( Max( ( ( ( RRS - PN ) * Max( DDR,CRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( BR * CRS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) + MRS ) ) * Max( PN,ACS ) )", "choosing": "( ( MLU / ( ( Max( ( ( DS * ( MLU / MLU ) ) - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8193987005427257}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08858267716535433, "obj2": 0.8464432684972332}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( MUR + Max( CS,( Max( CS,RMSe ) + ( MUC + RRSe ) ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5628188053456457}, {"determining": "( Max( PN,Min( BR ,Max( BR,( ( FirstVNF_RAM_Server - ARS ) + MRS ) ) ) ) * Min( MDR ,( MDR + CRS ) ) )", "choosing": "( ( RMSe + ( Min( RMSe ,DS ) - DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( RCSe - ( CS / ( CS * DS ) ) ) ) / ( RCSe / ( RMSe * ( Max( RMSe,RMSe ) * MUM ) ) ) ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7347501566891471}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( RCSe * DS ) - RMSe ) )", "obj1": 0.8700787401574803, "obj2": 0.057326374742811936}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * AMS ) * ( Const - MDR ) ) ) ) * Min( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( Max( ( CS / MUM ),CS ) / MUM ) ) ) / RCSe ) )", "obj1": 0.4645669291338583, "obj2": 0.3373037041175421}, {"determining": "Max( ( Const - MDR ),Min( Max( ARS,FirstVNF_RAM ) ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,Min( CRS ,FirstVNF_Mem ) ) + ARS ) ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUR ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.594488188976378, "obj2": 0.26436086772043704}, {"determining": "Max( ( ( RRS + MDR ) / Max( Max( ( MRS * Max( FirstVNF_RAM,BR ) ),Const ),( CRS / AMS ) ) ),( MDR - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Max( ( MUC * DS ),( RCSe + RMSe ) ) * Min( ( Min( MUR ,( MUR / RMSe ) ) + ( ( ( RMSe * MUR ) - ( MUR * DS ) ) / CS ) ) ,( RCSe / ( ( ( MUR * RCSe ) / Min( MLU ,RRSe ) ) / Max( RRSe,( RRSe / CS ) ) ) ) ) ) - CS ) )", "obj1": 0.2795275590551181, "obj2": 0.5736474096961944}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / Min( MDR ,( Max( ACS,Min( ( FirstVNF_Mem_Server * ( BR / ( MRS - MDR ) ) ) ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) / DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6178104740691426}, {"determining": "Max( Min( ACS ,RRS ),( ( MDR - AMS ) - ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) + Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * DS ) ,( RMSe - ( RRSe - RMSe ) ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MUR / RRSe ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) ,( MUC / MUR ) )", "obj1": 0.2736220472440945, "obj2": 0.5790195273035285}, {"determining": "( Min( MDR ,( MDR + MRS ) ) * Max( PN,ACS ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7579461408587109}, {"determining": "( Min( MDR ,( MDR + MRS ) ) * Max( PN,Min( MDR ,Max( BR,( FirstVNF_CPU - MDR ) ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7614027513418106}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM - MUC ) ,Max( MUC,DS ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5905511811023622, "obj2": 0.2694516918848454}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ARS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.32677165354330706, "obj2": 0.518165517743935}, {"determining": "( ( ( MRS * RRS ) + ( BR - FirstVNF_Mem ) ) - ( ( DDR + MDR ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( RCSe,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,DS ) ) ) )", "obj1": 0.8622047244094488, "obj2": 0.06351812800572965}, {"determining": "Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_Mem + ( RRS + ACS ) ) ,Min( Const ,( ( ( DDR - ARS ) * FirstVNF_RAM_Server ) + ( ( MRS + CRS ) / DDR ) ) ) ) - ( Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( RRSe * CS ) )", "obj1": 0.28346456692913385, "obj2": 0.5698146110862061}, {"determining": "Max( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( DDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / ( ( ( MUM + CS ) / ( ( MUC / MUR ) / Max( MUM,MUC ) ) ) + Min( CS ,( ( MLU * RRSe ) - RMSe ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7526271088956741}, {"determining": "Max( ( ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) + FirstVNF_CPU ),( ( FirstVNF_Mem_Server / ( DDR - ARS ) ) / Const ) )", "choosing": "( Max( ( RRSe + Max( MLU,( ( ( MUC - MUM ) - MUC ) / ( RCSe - RCSe ) ) ) ),( RRSe / MUM ) ) / ( MUR + RCSe ) )", "obj1": 0.1673228346456693, "obj2": 0.704420543415858}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + MDR ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) ) + Min( ( MUM - CS ) ,( DS / DS ) ) ) )", "obj1": 0.952755905511811, "obj2": 0.018873117419430638}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS - Min( MDR ,Min( ( ( ACS * ( Const - MDR ) ) + ( ( ARS / ARS ) + ARS ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * MUM ) / Max( ( RRSe + ( RCSe * Max( DS,( DS - RCSe ) ) ) ),MLU ) )", "obj1": 0.9114173228346457, "obj2": 0.03954381146122876}, {"determining": "Max( ( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) + DDR ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem ) ) - FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + MUC ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6247997124260665}, {"determining": "Max( ( Min( MDR ,( MDR - Max( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ),( ( MDR * DDR ) + Max( Max( DDR,FirstVNF_CPU ),( MDR * FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / BR ) / Const ) ),( Const - MDR ) )", "choosing": "( ( DS / Max( ( Max( ( RRSe / ( MUM + ( MUR / MLU ) ) ),Max( MUR,Max( MUC,DS ) ) ) - Max( Min( MUC ,RCSe ),Max( RRSe,Max( Min( DS ,MUM ),MUC ) ) ) ),MLU ) ) - Min( MUR ,RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.6004762161791302}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ACS + CRS ) ) ) ) / Max( PN,Min( MDR ,Max( BR,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ),( ( ( ACS - ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( ( Const - MDR ) / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( RCSe / Min( Max( ( ( ( MUM * RRSe ) + Min( MLU ,RMSe ) ) * MUC ),DS ) ,CS ) ) )", "obj1": 0.6141732283464567, "obj2": 0.2576278978673389}, {"determining": "Max( ( ( RRS + MDR ) / Max( Max( MRS,Const ),( CRS / AMS ) ) ),( ACS - ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( ( MUR * RCSe ) / MUC ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.26968503937007876, "obj2": 0.5825907543335712}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09055118110236221, "obj2": 0.8348553987509655}, {"determining": "Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),( Min( MDR ,Max( ( ACS - ( ( FirstVNF_Mem * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU - ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( ( MUC + CS ) + ( CS + RMSe ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2106299212598425, "obj2": 0.6297116802962579}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - ( Max( AMS,DDR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.610236220472441, "obj2": 0.2578892820712523}], "17": [{"determining": "( ( ( BR / PN ) * ( ACS * AMS ) ) - ( ( Min( ( ( MDR / ACS ) / RRS ) ,MDR ) / FirstVNF_CPU ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,Min( Min( Max( RMSe,MUR ) ,Min( CS ,Max( MUC,MUM ) ) ) ,Min( Max( MUR,Min( DS ,DS ) ) ,Max( Max( RCSe,RCSe ),Min( RRSe ,MLU ) ) ) ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,( MUR + CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,PN ) - Max( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + ( Min( Max( BR,( FirstVNF_CPU - CRS ) ) ,MDR ) * Min( BR ,CRS ) ) ),FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + CS ) / ( ( MUC / Max( ( CS - RMSe ),DS ) ) / Max( MUM,MUC ) ) ) + Min( CS ,( ( MLU * RRSe ) - RMSe ) ) ) / ( RRSe - Min( ( Max( ( ( MLU - MUC ) + ( MUR * MUM ) ),MUC ) * CS ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Max( ACS,BR ) ,ACS ) * ( AMS - FirstVNF_CPU ) ) + DDR ) / FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( RCSe / Min( RMSe ,RMSe ) ) ) / Max( ( RCSe / RMSe ),( Max( ( Max( MUC,( MUR / MUR ) ) + RRSe ),( RRSe * RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8635528467108932}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37287002792506396}, {"determining": "( ( AMS - ( CRS * PN ) ) - Max( ( ( FirstVNF_Mem_Server - RRS ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( ( MUR * DS ),MUR ),MLU ) / ( ( RCSe * DS ) - MUC ) )", "obj1": 0.7440944881889764, "obj2": 0.11031357800490244}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "( Min( Max( ( ( ( FirstVNF_Mem / MDR ) / Max( ACS,( DDR - Max( FirstVNF_CPU_Server,PN ) ) ) ) / ( FirstVNF_CPU - AMS ) ),( ( FirstVNF_RAM_Server - BR ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( ( ( AMS / ( DDR + FirstVNF_Mem ) ) / ( Min( ( CRS + FirstVNF_RAM ) ,( RRS / MDR ) ) * PN ) ) ,Const ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - Max( ( CS / CS ),( MUR - Max( CS,( MLU - RMSe ) ) ) ) ) ,( ( ( Max( ( RRSe * Min( RCSe ,DS ) ),RMSe ) * MLU ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.4280568539747235}, {"determining": "( ( ACS * AMS ) - ( ( AMS * MRS ) + DDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( RMSe + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( Max( Max( Max( MLU,( DS + MLU ) ),( CS + CS ) ),DS ),MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.49803149606299213, "obj2": 0.2944686089332702}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.5531496062992126, "obj2": 0.2647507143054167}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( Const / ACS ) + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( Max( ( MUR / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / ( DS + CS ) ) / ( MLU / Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( MUM * RRSe ) ) / CS ),MUC ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08719124783143223}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) ) + MDR ) ) / ( ACS - ( Min( MDR ,AMS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUM / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8464566929133859, "obj2": 0.06118278826779349}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / BR ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * ARS ) )", "choosing": "( ( ( DS + MUR ) - ( Min( ( Max( MLU,RCSe ) - Min( ( ( RRSe * RRSe ) - RMSe ) ,MUC ) ) ,Min( ( Max( MUM,RMSe ) / RCSe ) ,MLU ) ) / MUR ) ) / ( MUM / DS ) )", "obj1": 0.10236220472440945, "obj2": 0.805706621264607}, {"determining": "( ( ( ( Min( ( ( Min( RRS ,Const ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( RRS + ACS ) ) * ( RRS / ( Min( FirstVNF_Mem_Server ,CRS ) - RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( Min( RCSe ,( DS - Min( CS ,Min( ( CS * RRSe ) ,MLU ) ) ) ) ,( ( Max( ( ( Max( MUM,MLU ) / ( CS + MUR ) ) * DS ),( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.639763779527559, "obj2": 0.2370155897165511}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) ) ,( ( MRS - FirstVNF_Mem_Server ) / MDR ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( Max( ( RRSe + Min( DS ,Min( DS ,Min( RRSe ,CS ) ) ) ),( RCSe / ( RRSe * DS ) ) ) ,RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.19383060387864165}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( MRS + Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ),Min( BR ,FirstVNF_RAM_Server ) ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( CS ,MUR ) - Min( RCSe ,MUC ) ) - RCSe ) + ( ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) + Min( Min( ( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) ) ,CS ) ,( DS / DS ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.1888854358302451}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),DS ),MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.5019685039370079, "obj2": 0.29227241777689544}, {"determining": "Max( ( Const - MDR ),Min( Max( ARS,FirstVNF_RAM ) ,( Const / ( ( AMS / ( ( RRS * ( AMS * FirstVNF_RAM ) ) - BR ) ) - ( Max( AMS,Min( CRS ,FirstVNF_Mem ) ) + ARS ) ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUR ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.594488188976378, "obj2": 0.26436086772043704}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.5413385826771654, "obj2": 0.28592399681991804}, {"determining": "( Max( FirstVNF_Mem,( Const * ( FirstVNF_CPU + FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,Max( ( Min( ( MUC * DS ) ,( ( ( MUC - CS ) / CS ) + RMSe ) ) * Max( RCSe,Max( MUR,MUR ) ) ),( ( CS - Max( RMSe,( Min( MUM ,RCSe ) * MLU ) ) ) - MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.34722128052839557}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8188976377952756, "obj2": 0.0712275639406462}, {"determining": "Min( ( Min( ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * MDR ) ,MRS ) ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7165354330708661, "obj2": 0.16023273563703935}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,AMS ) / ( ( FirstVNF_CPU + ( ( Const / FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server + Max( PN,FirstVNF_RAM_Server ) ) + ( MRS / PN ) ) ) ) / ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RRSe / Min( Max( Max( Max( MLU,Max( MUR,MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + ( ( ( RCSe - DS ) - MUM ) - Min( MUC ,Min( MUC ,Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.46855489100277287}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( MDR + Min( BR ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( Max( RRSe,RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,( Max( MUC,MUM ) - ( DS * MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.46135373167162275}, {"determining": "Min( Min( ( MDR + AMS ) ,FirstVNF_RAM_Server ) ,Min( ( Const * ( ACS * AMS ) ) ,ARS ) )", "choosing": "( ( RCSe - ( DS / Max( DS,CS ) ) ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),( MUM * MUC ) ) ,RMSe ) ) + Max( ( ( DS - RCSe ) - CS ),( MUM / MUM ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6623099202115406}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.39960629921259844, "obj2": 0.4487399150159486}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) + ( ( BR / PN ) * ( ACS * ( Max( AMS,ARS ) + ( FirstVNF_RAM * PN ) ) ) ) ) ) * PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "Min( ( Min( ( DS - CS ) ,Min( MLU ,( MLU / MUM ) ) ) + MUM ) ,( ( MUM * ( Max( Min( MUC ,RCSe ),Max( RRSe,( MUC / MUR ) ) ) * MUM ) ) - MUR ) )", "obj1": 0.3661417322834646, "obj2": 0.49133321886259634}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.65748031496063, "obj2": 0.19092325499303867}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / ( ACS / ACS ) ) / ( AMS - ( FirstVNF_CPU_Server / ( AMS + DDR ) ) ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "Min( ( ( CS - MUC ) / MUR ) ,( ( Min( ( RCSe + RMSe ) ,( MUC * DS ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - MLU ) )", "obj1": 0.41141732283464566, "obj2": 0.44856570131161305}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC * MUM ) / Max( ( RRSe + ( RCSe * Max( DS,( DS - RCSe ) ) ) ),MLU ) )", "obj1": 0.6988188976377953, "obj2": 0.18028306536751249}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.5452755905511811, "obj2": 0.28394020030111683}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( RCSe * DS ) - RMSe ) )", "obj1": 0.8700787401574803, "obj2": 0.057326374742811936}, {"determining": "( ( RRS / ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( Max( FirstVNF_CPU,DDR ) ,AMS ) * ( Const - MDR ) ) - Max( ACS,DDR ) ) )", "choosing": "Max( ( ( ( ( ( CS * DS ) + DS ) + MUM ) + MUR ) / ( Min( RMSe ,RCSe ) / Max( MUM,CS ) ) ),( ( DS / RMSe ) + RMSe ) )", "obj1": 0.8917322834645669, "obj2": 0.041834103612551826}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "( Min( MDR ,( MDR + MRS ) ) * Max( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ),ACS ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( Min( ( MUC / MUR ) ,( RMSe + ( DS / RMSe ) ) ),DS ) ,CS ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7491256518863169}, {"determining": "( Min( Max( ( ( ( Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) * ( FirstVNF_CPU - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ),( ( Const / ( ACS + PN ) ) / ( FirstVNF_CPU - AMS ) ) ) ,PN ) / ( ( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - RCSe ) + ( ( Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) / RCSe ) + Min( ( ( ( DS / Min( DS ,( RCSe * MUR ) ) ) / Max( RMSe,MUC ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.42981964657360433}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.2933070866141732, "obj2": 0.5499974267174593}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.3031496062992126, "obj2": 0.54324517108614}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * ( ( CRS - DDR ) / ( FirstVNF_CPU - AMS ) ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( RMSe + ( ( RRSe / RMSe ) / RMSe ) ) ) ) - ( Min( CS ,MUR ) - ( ( MUM + DS ) - RMSe ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5066070313340402}, {"determining": "Max( ( ( Max( BR,RRS ) - Max( BR,FirstVNF_Mem_Server ) ) / BR ),( ACS - ( ( MRS + FirstVNF_RAM ) - Max( ( Max( ( FirstVNF_Mem * ( CRS + AMS ) ),( Min( MDR ,MRS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( ( Max( MLU,RCSe ) + MUM ) / Max( ( CS - Min( RRSe ,Max( MUC,RMSe ) ) ),DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,Min( MUM ,Max( RCSe,MUM ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7399641977051608}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.13091990440424464}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( Min( ( RCSe / RRSe ) ,( MUR + ( Max( MLU,MLU ) - MLU ) ) ) / ( DS * MUC ) ) - Min( ( RMSe / RMSe ) ,( MUR + DS ) ) )", "obj1": 0.19094488188976377, "obj2": 0.64916328588765}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( Max( Min( PN ,FirstVNF_RAM_Server ),( FirstVNF_CPU / BR ) ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5084188958153422}, {"determining": "( ( AMS + ( Max( ACS,( Max( ACS,( ( ACS / ACS ) * FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - BR ) ) - ( ( DDR - MDR ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - ( MUM + MUR ) ) ) * RRSe ) ) ,Max( ( CS - RMSe ),MUR ) )", "obj1": 0.7106299212598425, "obj2": 0.1749207029766216}, {"determining": "Max( Min( ( DDR + ( Min( ACS ,AMS ) * ( Min( AMS ,FirstVNF_RAM_Server ) - MDR ) ) ) ,FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,( RMSe + MUC ) ) + DS ) ) / ( DS + MUM ) )", "obj1": 0.1594488188976378, "obj2": 0.706042597131564}, {"determining": "( ( ( Max( Max( Const,FirstVNF_RAM ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / Min( MDR ,( Max( ACS,Min( ( FirstVNF_Mem_Server * ( Max( CRS,FirstVNF_Mem_Server ) / ( MDR - MRS ) ) ) ,Min( RRS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) / DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( DS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) / Max( MUM,RCSe ) ),Min( ( RRSe * RCSe ) ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6071513638848173}, {"determining": "( ( Min( DDR ,PN ) - ACS ) * ( CRS - ( ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,MDR ) ) - Max( MDR,MDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / ( ( ( CS - CS ) * MUM ) * CS ) ) + Min( ( DS / DS ) ,( MUM - CS ) ) ) )", "obj1": 0.952755905511811, "obj2": 0.01871654483419788}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + MDR ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUR ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.9704724409448819, "obj2": 0.012331925644599761}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / Min( MDR ,( Max( ACS,Min( ( FirstVNF_Mem_Server * ( BR / ( MRS - MDR ) ) ) ,Min( ARS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) / DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6178104740691426}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ( ( ACS * AMS ) / Const ),ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,( Const - CRS ) ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,CS ) + Max( MUR,( RRSe / Max( DS,MUM ) ) ) ) / RCSe ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4958680121653825}, {"determining": "( Max( BR,( Max( FirstVNF_RAM,( Max( ( ( DDR / AMS ) - ACS ),( ( Const * MDR ) * AMS ) ) - Max( ( ( DDR / AMS ) - Min( FirstVNF_Mem ,ARS ) ),( AMS * Max( FirstVNF_CPU_Server,PN ) ) ) ) ) / CRS ) ) * Max( ARS,( ACS - Const ) ) )", "choosing": "( ( ( DS * MUC ) / Max( ( Min( ( CS / MUM ) ,MUM ) / ( MUM / MUC ) ),MUR ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08661417322834646, "obj2": 0.8506069980420871}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.33267716535433073, "obj2": 0.513128923966357}, {"determining": "( ( CRS * Min( MDR ,Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,ARS ) ) ) * ( ( Max( ( FirstVNF_RAM + ( ( MRS + ACS ) - ( ( FirstVNF_CPU / BR ) - Max( BR,DDR ) ) ) ),Max( AMS,AMS ) ) / AMS ) - Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * RMSe ) * ( RRSe - MUC ) ) / Max( ( ( ( ( ( ( MUM - RRSe ) / MUM ) / MUM ) / Max( Min( DS ,( DS / CS ) ),( RCSe * ( CS - MLU ) ) ) ) * Max( DS,DS ) ) * RRSe ),MLU ) )", "obj1": 0.9212598425196851, "obj2": 0.03583399493183244}, {"determining": "Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),( Min( MDR ,Max( ( ACS - ( ( ( AMS / FirstVNF_CPU_Server ) * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU * Const ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2283464566929134, "obj2": 0.6113565663958649}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * ( MDR / AMS ) ) * ( Const - MDR ) ) ) ) * Min( ( Const * AMS ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),Min( Max( RMSe,MUR ) ,( ( ( DS / DS ) * MLU ) - MUR ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.045384524576316705}, {"determining": "Max( ( ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) + DDR ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem ) ) - FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + MUC ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6247997124260665}, {"determining": "( Min( Max( ( ( FirstVNF_CPU - AMS ) / ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) ),( Min( ( Min( ( DDR * DDR ) ,( CRS - FirstVNF_Mem_Server ) ) / Max( Const,MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,( Max( Const,Max( MDR,Const ) ) - CRS ) ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + ( ( MUC + ( ( ( Max( DS,MUM ) / ( Max( MUC,CS ) + ( MUC + RRSe ) ) ) / RRSe ) - ( Min( ( ( CS * MUC ) / MUC ) ,Min( Max( MLU,RCSe ) ,MUM ) ) / ( ( ( RCSe * MUM ) - DS ) - ( DS + Min( CS ,RMSe ) ) ) ) ) ) - ( DS - ( Min( MUM ,( Min( RCSe ,RCSe ) / MUR ) ) / DS ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.5210249777343015}, {"determining": "( ( ( ( ( Max( BR,( MRS + ( BR + MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - Min( DDR ,Min( ARS ,FirstVNF_RAM ) ) ) + AMS ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,( Min( DS ,CS ) * RRSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5335179135554049}, {"determining": "( FirstVNF_CPU_Server + Max( MRS,Min( PN ,Min( ( FirstVNF_Mem_Server / AMS ) ,Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( RRSe,MUR ) - Min( ( ( MUR + MUM ) - ( MUM / RCSe ) ) ,( ( CS / RRSe ) / Min( RMSe ,DS ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6922578042754671}, {"determining": "( ( PN * ( FirstVNF_CPU_Server + BR ) ) - ( Min( ( PN / MDR ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( CS - Min( MUC ,RCSe ) ) ,DS ) / ( Max( MLU,RCSe ) + MUM ) ) * ( ( Min( Min( MUR ,RMSe ) ,( ( CS / RRSe ) / Max( MLU,RMSe ) ) ) - CS ) / MUC ) ) ) / Min( ( MUC / MUR ) ,( MUM / Max( RCSe,MUM ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.07563878469862959}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM - MUC ) ,Max( MUC,DS ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.797244094488189, "obj2": 0.07655689951160655}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0811082500049235}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS * Min( MDR ,Min( ( ( ACS * AMS ) + ( MRS + ( ( DDR + ACS ) / ARS ) ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( MUR / MUC ) ) ),( RRSe / ( RCSe + ( MUR / MUM ) ) ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / ( DDR * ARS ) ),Min( FirstVNF_Mem ,( CRS - MRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( ( RCSe * MUC ) * DS ) ) / Max( ( RCSe * RMSe ),MUR ) )", "obj1": 0.09251968503937008, "obj2": 0.8343567838247025}, {"determining": "Min( Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,FirstVNF_RAM_Server ) ,Min( ( ( ACS * AMS ) / Const ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( DS / Max( MLU,( ( MUC + CS ) + ( CS + RMSe ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.19881889763779528, "obj2": 0.6443821397606185}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( ( CS / MUM ) / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8197025200082171}, {"determining": "( ( ( DDR / Max( MRS,( FirstVNF_RAM_Server + CRS ) ) ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS - Min( MDR ,Min( ( ( ACS * FirstVNF_RAM ) + ( MRS + ( ARS / ARS ) ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( ( ( MUC / MUR ) / ( MUM / ( ( ( MUM * MUC ) * ( MLU + RMSe ) ) / Max( RRSe,( CS / MUM ) ) ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - CS ) )", "obj1": 0.9724409448818898, "obj2": 0.011636597694880561}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( BR ,FirstVNF_RAM_Server ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( CS ,MUR ) - Min( RCSe ,MUC ) ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MUM,MUR ),( DS + CS ) ),DS ) ,CS ) ) + Min( Min( ( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) ) ,CS ) ,( DS / ( ( MUC / ( ( MUM / MLU ) + ( RCSe / MUC ) ) ) + RCSe ) ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.16576935081263403}, {"determining": "( Max( Max( FirstVNF_Mem,( ACS / ( Max( FirstVNF_RAM,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ),AMS ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( Max( ( CS - RMSe ),MLU ) / ( MUM + MUM ) ) ,( ( RCSe / ( CS * Min( MUR ,RRSe ) ) ) - MUM ) ) * Min( ( ( RRSe - RCSe ) / MUR ) ,( MUM / ( MUM - Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.31299212598425197, "obj2": 0.5378959770203993}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5937377537963815}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.639591742889502}, {"determining": "( Min( MDR ,( Max( ( ( ( RRS - PN ) * Max( DDR,CRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( BR * CRS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) + MRS ) ) * Max( PN,ACS ) )", "choosing": "( ( MLU / ( ( Max( ( ( DS * ( MLU / MLU ) ) - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8193987005427257}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08858267716535433, "obj2": 0.8464432684972332}, {"determining": "( Min( FirstVNF_RAM_Server ,( Max( Min( PN ,FirstVNF_RAM_Server ),( FirstVNF_CPU / BR ) ) * ( ACS * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + FirstVNF_Mem ) ) ) ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( ( Const - MDR ) / ( ( FirstVNF_RAM * ARS ) * DDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( Max( DS,( DS - RRSe ) ) - MUM ) ,( DS / DS ) ) + ( RCSe - Min( Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),RMSe ) ,CS ) ) ) )", "obj1": 0.6181102362204725, "obj2": 0.25487776625850755}, {"determining": "( Max( PN,Min( BR ,Max( BR,( ( FirstVNF_RAM_Server - ARS ) + MRS ) ) ) ) * Min( MDR ,( MDR + CRS ) ) )", "choosing": "( ( RMSe + ( Min( RMSe ,DS ) - DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( RCSe - ( CS / ( CS * DS ) ) ) ) / ( RCSe / ( RMSe * ( Max( RMSe,RMSe ) * MUM ) ) ) ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7347501566891471}, {"determining": "Min( ( Min( ( Min( ( ( Const - Max( DDR,DDR ) ) + MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( MLU - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.02700525665909482}, {"determining": "Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_Mem + ( RRS + ACS ) ) ,Min( Const ,( ( ( DDR - ARS ) * FirstVNF_RAM_Server ) + ( ( MRS + CRS ) / DDR ) ) ) ) - ( Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( RRSe * CS ) )", "obj1": 0.28346456692913385, "obj2": 0.5698146110862061}, {"determining": "Max( ( ( RRS + MDR ) / Max( Max( ( MRS * Max( FirstVNF_RAM,BR ) ),Const ),( CRS / AMS ) ) ),( MDR - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Max( ( MUC * DS ),( RCSe + RMSe ) ) * Min( ( Min( MUR ,( MUR / RMSe ) ) + ( ( ( RMSe * MUR ) - ( MUR * DS ) ) / CS ) ) ,( RCSe / ( ( ( MUR * RCSe ) / Min( MLU ,RRSe ) ) / Max( RRSe,( RRSe / CS ) ) ) ) ) ) - CS ) )", "obj1": 0.2795275590551181, "obj2": 0.5736474096961944}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( MUR + Max( CS,( Max( CS,RMSe ) + ( MUC + RRSe ) ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5628188053456457}, {"determining": "( Min( BR ,FirstVNF_RAM_Server ) / ( ( CRS + CRS ) / ( ( Const - MDR ) / ( ( ( ARS / MRS ) * ARS ) * DDR ) ) ) )", "choosing": "Min( ( ( ( Max( Min( ( RRSe + ( MUR - MLU ) ) ,RRSe ),RMSe ) - MUM ) * ( MUC * Max( MUC,( RCSe / Min( MUC ,CS ) ) ) ) ) / MUR ) ,( ( Min( ( MUC * Min( DS ,DS ) ) ,( RCSe + RMSe ) ) * ( ( MUC / MUR ) + ( MUM / ( Max( ( CS / MUM ),MUR ) / ( MUC / MUC ) ) ) ) ) - CS ) )", "obj1": 0.6240157480314961, "obj2": 0.24584599828192236}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "Max( ( Const - MDR ),( Min( MDR ,Max( ( ACS - ( ( FirstVNF_Mem * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( ( ACS * AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6320676075986723}, {"determining": "Max( ( Min( MDR ,Max( ( ACS - ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ),( FirstVNF_CPU - Const ) ) ) * ( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( AMS - MDR ) ) ) / Const ) ),( AMS - MDR ) )", "choosing": "( ( DS / Max( MLU,( Min( ( RRSe / ( Min( MUC ,MUR ) + ( RMSe * RRSe ) ) ) ,Max( Max( MUR,DS ),DS ) ) - DS ) ) ) - Max( CS,RCSe ) )", "obj1": 0.2618110236220472, "obj2": 0.5952521855629606}, {"determining": "( Min( BR ,FirstVNF_RAM_Server ) / ( ( CRS + CRS ) / ( ( Const - MDR ) / ( ( ( ARS / MRS ) * ARS ) * DDR ) ) ) )", "choosing": "Min( ( ( ( Max( Min( ( RRSe + ( MUR - MLU ) ) ,RRSe ),RMSe ) - MUM ) * ( MUC * Max( MUC,( RCSe / Min( MUC ,CS ) ) ) ) ) / MUR ) ,( ( Min( ( MUC * Min( DS ,DS ) ) ,( RCSe + RMSe ) ) * ( ( MUC / MUR ) + ( MUM / ( Max( ( CS / MUM ),MUR ) / ( MUC / MUC ) ) ) ) ) - CS ) )", "obj1": 0.6299212598425197, "obj2": 0.2427997574501511}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * MDR ) - BR ) ) - ( Max( AMS,Min( CRS ,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUR ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,( RRSe + Max( MUC,( ( CS / MUM ) / MUR ) ) ) ) )", "obj1": 0.6062992125984252, "obj2": 0.2572564593749016}, {"determining": "Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),( Min( MDR ,Max( ( ACS - ( ( FirstVNF_Mem * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU - ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( ( MUC + CS ) + ( CS + RMSe ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2106299212598425, "obj2": 0.6297116802962579}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS - Min( MDR ,Min( ( ( ACS * ( Const - MDR ) ) + ( ( ARS / ARS ) + ARS ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( CS - ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) - Min( ( MUC / MUR ) ,( MUM / ( ( ( MUR * RCSe ) / MUC ) / Min( MLU ,RCSe ) ) ) ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.025057688679452315}, {"determining": "( ( CRS * Min( FirstVNF_CPU_Server ,Min( ( ( ACS * AMS ) + ( ( ( FirstVNF_RAM + FirstVNF_CPU ) / ARS ) + ARS ) ) ,ARS ) ) ) * ( Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( Max( ( FirstVNF_RAM + AMS ),Max( AMS,AMS ) ) / AMS ) ) )", "choosing": "Min( Max( RMSe,Min( Min( RRSe ,( RCSe / MUR ) ) ,( ( RMSe * ( DS - MUR ) ) * CS ) ) ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RRSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.17716535433070865, "obj2": 0.700365624071836}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) * Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - Max( CRS,FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / RMSe ) - ( MUM + CS ) )", "obj1": 0.25393700787401574, "obj2": 0.5978971493192292}, {"determining": "Max( ( ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) + FirstVNF_CPU ),( ( FirstVNF_Mem_Server / ( DDR - ARS ) ) / Const ) )", "choosing": "( Max( ( RRSe + Max( MLU,( ( ( MUC - MUM ) - MUC ) / ( RCSe - RCSe ) ) ) ),( RRSe / MUM ) ) / ( MUR + RCSe ) )", "obj1": 0.1673228346456693, "obj2": 0.704420543415858}, {"determining": "Max( ( Min( MDR ,( MDR - Max( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ),( ( MDR * DDR ) + Max( Max( DDR,FirstVNF_CPU ),( MDR * FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / BR ) / Const ) ),( Const - MDR ) )", "choosing": "( ( DS / Max( ( Max( ( RRSe / ( MUM + ( MUR / MLU ) ) ),Max( MUR,Max( MUC,DS ) ) ) - Max( Min( MUC ,RCSe ),Max( RRSe,Max( Min( DS ,MUM ),MUC ) ) ) ),MLU ) ) - Min( MUR ,RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.6004762161791302}, {"determining": "Max( Min( ACS ,RRS ),( ( MDR - AMS ) - ( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) + Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * DS ) ,( RMSe - ( RRSe - RMSe ) ) ) * Min( ( MUC / MUR ) ,( MUM / ( ( MUR / RRSe ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) ,( MUC / MUR ) )", "obj1": 0.2736220472440945, "obj2": 0.5790195273035285}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09055118110236221, "obj2": 0.8348553987509655}, {"determining": "( Min( ACS ,Max( ( FirstVNF_RAM * ACS ),Min( ACS ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( ( ACS / ( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( ( CS / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( DS / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ),MUM ) / ( ( ( RCSe - ( Min( RMSe ,MUR ) * CS ) ) * DS ) - RMSe ) )", "obj1": 0.8779527559055118, "obj2": 0.05234364139301528}, {"determining": "( Min( Max( ( ( ( FirstVNF_Mem / MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ARS / ARS ) + ARS ) ,DDR ) / ( Min( ( ARS + ACS ) ,FirstVNF_Mem ) * PN ) ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( ( ( Max( RCSe,DS ) + MUM ) / MUR ) * RCSe ) ) + Min( Min( MUC ,Max( ( RRSe / RMSe ),MLU ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5180972911397153}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - ( ( ACS + CRS ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) ) ) / Max( PN,Min( MDR ,Max( BR,( FirstVNF_CPU - MDR ) ) ) ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS + RRS ) ) + ( ( PN + FirstVNF_RAM_Server ) * ( ACS * RRS ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * CS ) ) ),DS ) ,CS ) ) + Min( ( DS / DS ) ,( ( DS - ( ( ( MLU + RCSe ) + ( RRSe - MLU ) ) * Min( DS ,MUM ) ) ) - DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.26184552712351955}], "18": [{"determining": "Min( ( Min( ( Min( ( ( FirstVNF_Mem / DDR ) * Min( MRS ,ACS ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,Min( ( Max( BR,( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ),Min( BR ,( ARS / PN ) ) ) / MRS ) ) / FirstVNF_RAM_Server ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( CS ,MUC ) - Min( Min( DS ,( RCSe / ( ( MUR / MUC ) / DS ) ) ) ,MUC ) ) - RCSe ) + ( ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) + ( MLU - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / PN ) * ( ACS * AMS ) ) - ( ( Min( ( ( MDR / ACS ) / RRS ) ,MDR ) / FirstVNF_CPU ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,Min( Min( Max( RMSe,MUR ) ,Min( CS ,Max( MUC,MUM ) ) ) ,Min( Max( MUR,Min( DS ,DS ) ) ,Max( Max( RCSe,RCSe ),Min( RRSe ,MLU ) ) ) ) ) * RRSe ) ) ,( DS / ( ( RRSe * CS ) * Min( RCSe ,( MUR + CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Max( ACS,BR ) ,ACS ) * ( AMS - FirstVNF_CPU ) ) + DDR ) / FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( RCSe / Min( RMSe ,RMSe ) ) ) / Max( ( RCSe / RMSe ),( Max( ( Max( MUC,( MUR / MUR ) ) + RRSe ),( RRSe * RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8635528467108932}, {"determining": "( Min( Max( ( ( ( Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) * ( FirstVNF_CPU - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ),( ( Const / ( ACS + PN ) ) / ( FirstVNF_CPU - AMS ) ) ) ,PN ) / ( ( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - RCSe ) + ( ( Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) / RCSe ) + Min( ( ( ( DS / Min( DS ,( RCSe * MUR ) ) ) / Max( RMSe,MUC ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.42981964657360433}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / MUR ) ,( CS - ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) - Min( ( MUC / MUR ) ,( MUM / ( ( ( MUR * RCSe ) / MUC ) / Min( MLU ,RCSe ) ) ) ) ) ) )", "obj1": 0.4311023622047244, "obj2": 0.3760579280987909}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / BR ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * ARS ) )", "choosing": "( ( ( DS + MUR ) - ( Min( ( Max( MLU,RCSe ) - Min( ( ( RRSe * RRSe ) - RMSe ) ,MUC ) ) ,Min( ( Max( MUM,RMSe ) / RCSe ) ,MLU ) ) / MUR ) ) / ( MUM / DS ) )", "obj1": 0.10236220472440945, "obj2": 0.805706621264607}, {"determining": "( ( ACS * PN ) - ( Max( Max( ( ( AMS / ARS ) - CRS ),FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) + AMS ) )", "choosing": "( ( ( ( ( Max( RCSe,RCSe ) - MUM ) - RRSe ) / MUR ) + MLU ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / Max( RRSe,MUM ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.8385826771653543, "obj2": 0.06087744735814584}, {"determining": "( Min( MDR ,( MDR + MRS ) ) * Max( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ),ACS ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( Min( ( MUC / MUR ) ,( RMSe + ( DS / RMSe ) ) ),DS ) ,CS ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7491256518863169}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( Const / ACS ) + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( Max( ( MUR / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / ( DS + CS ) ) / ( MLU / Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( MUM * RRSe ) ) / CS ),MUC ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08719124783143223}, {"determining": "( Max( FirstVNF_Mem,( Const * ( FirstVNF_CPU + FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,Max( ( Min( ( MUC * DS ) ,( ( ( MUC - CS ) / CS ) + RMSe ) ) * Max( RCSe,Max( MUR,MUR ) ) ),( ( CS - Max( RMSe,( Min( MUM ,RCSe ) * MLU ) ) ) - MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.34722128052839557}, {"determining": "( ( ( ( Min( ( ( Min( RRS ,Const ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( RRS + ACS ) ) * ( RRS / ( Min( FirstVNF_Mem_Server ,CRS ) - RRS ) ) ) / ( MRS * DDR ) )", "choosing": "Min( Min( RCSe ,( DS - Min( CS ,Min( ( CS * RRSe ) ,MLU ) ) ) ) ,( ( Max( ( ( Max( MUM,MLU ) / ( CS + MUR ) ) * DS ),( RCSe + RMSe ) ) * ( RMSe * RMSe ) ) - CS ) )", "obj1": 0.639763779527559, "obj2": 0.2370155897165511}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - Max( FirstVNF_CPU_Server,PN ) ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( ( Max( ( RRSe * Min( RCSe ,DS ) ),RMSe ) * MLU ),MUR ) / ( ( RCSe * DS ) - RMSe ) )", "obj1": 0.7480314960629921, "obj2": 0.10813655263662116}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC * MUM ) / Max( ( RRSe + ( RCSe * Max( DS,( DS - RCSe ) ) ) ),MLU ) )", "obj1": 0.6988188976377953, "obj2": 0.18028306536751249}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) ) ,( ( MRS - FirstVNF_Mem_Server ) / MDR ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( Max( ( RRSe + Min( DS ,Min( DS ,Min( RRSe ,CS ) ) ) ),( RCSe / ( RRSe * DS ) ) ) ,RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.19383060387864165}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.2601495126162082}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( MRS + Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( BR ,FirstVNF_RAM_Server ) ) ) ) / FirstVNF_RAM_Server ) + ( Const - MDR ) ) )", "choosing": "( ( ( ( Max( Max( RMSe,RCSe ),MUR ) / ( ( RCSe * DS ) - RMSe ) ) - Min( RCSe ,MUC ) ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( Min( ( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) ) ,CS ) ,( DS / DS ) ) ) )", "obj1": 0.6653543307086615, "obj2": 0.18791255863370362}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),DS ),MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.5019685039370079, "obj2": 0.291811480562913}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.5413385826771654, "obj2": 0.28592399681991804}, {"determining": "Max( ( Const - MDR ),Min( Max( ARS,FirstVNF_RAM ) ,( Const / ( ( AMS / ( ( Min( RRS ,Const ) / FirstVNF_CPU ) - BR ) ) - ( Max( AMS,Min( CRS ,FirstVNF_Mem ) ) + ARS ) ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUR ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.6023622047244095, "obj2": 0.25748545511194637}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( RCSe * DS ) - RMSe ) )", "obj1": 0.8700787401574803, "obj2": 0.057326374742811936}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37287002792506396}, {"determining": "Min( ( Min( ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * MDR ) ,MRS ) ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7165354330708661, "obj2": 0.16023273563703935}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( MDR + Min( BR ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( Max( RRSe,RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,( Max( MUC,MUM ) - ( DS * MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.46135373167162275}, {"determining": "Min( Min( ( MDR + AMS ) ,FirstVNF_RAM_Server ) ,Min( ( Const * ( ACS * AMS ) ) ,ARS ) )", "choosing": "( ( RCSe - ( DS / Max( DS,CS ) ) ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),( MUM * MUC ) ) ,RMSe ) ) + Max( ( ( DS - RCSe ) - CS ),( MUM / MUM ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6623099202115406}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.39960629921259844, "obj2": 0.4487399150159486}, {"determining": "( Max( ( ( ( FirstVNF_Mem + ARS ) - Min( Min( FirstVNF_CPU_Server ,RRS ) ,FirstVNF_RAM ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ),MDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( Min( MLU ,( Max( ( ( Max( MLU,RCSe ) - Max( Min( MUR ,RMSe ),RMSe ) ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( MUR / RCSe ) )", "obj1": 0.49803149606299213, "obj2": 0.2944686089332702}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.46062992125984253, "obj2": 0.34018607768230497}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / ( ACS / ACS ) ) / ( AMS - ( FirstVNF_CPU_Server / ( AMS + DDR ) ) ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "Min( ( ( CS - MUC ) / MUR ) ,( ( Min( ( RCSe + RMSe ) ,( MUC * DS ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - MLU ) )", "obj1": 0.41141732283464566, "obj2": 0.44856570131161305}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( ACS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / ( RRSe * ( CS / RCSe ) ) ) ) ) ) - RCSe ) )", "obj1": 0.9901574803149606, "obj2": 0.005183365726254115}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( Max( Min( PN ,FirstVNF_RAM_Server ),( FirstVNF_CPU / BR ) ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5084188958153422}, {"determining": "( ( ACS * PN ) - ( Max( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ),DDR ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) * ( MLU * DS ) ) / ( Max( ( ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8188976377952756, "obj2": 0.07117552418623425}, {"determining": "( ( ( ( MDR - FirstVNF_RAM_Server ) / Min( RRS ,BR ) ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_CPU_Server ,( PN * MDR ) ) - Const ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * Max( RMSe,DS ) ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - ( ( MUM - ( Min( DS ,RMSe ) * DS ) ) * MUM ) )", "obj1": 0.3484251968503937, "obj2": 0.4931229301844405}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS * Min( MDR ,Min( ( ( ACS * AMS ) + ( MRS + ( ( DDR + ACS ) / ARS ) ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( MUR / MUC ) ) ),( RRSe / ( RCSe + ( MUR / MUM ) ) ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM - MUC ) ,Max( MUC,DS ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.797244094488189, "obj2": 0.07655689951160655}, {"determining": "( ( RRS / ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( Max( FirstVNF_CPU,DDR ) ,AMS ) * ( Const - MDR ) ) - Max( ACS,DDR ) ) )", "choosing": "Max( ( ( ( ( ( CS * DS ) + DS ) + MUM ) + MUR ) / ( Min( RMSe ,RCSe ) / Max( MUM,CS ) ) ),( ( DS / RMSe ) + RMSe ) )", "obj1": 0.8917322834645669, "obj2": 0.041834103612551826}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "( ( Min( DDR ,PN ) - ACS ) * ( CRS - ( ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,MDR ) ) - Max( MDR,MDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / ( ( ( CS - CS ) * MUM ) * CS ) ) + Min( ( DS / DS ) ,( MUM - CS ) ) ) )", "obj1": 0.952755905511811, "obj2": 0.01871654483419788}, {"determining": "( ( CRS * Min( MDR ,Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,ARS ) ) ) * ( ( Max( ( FirstVNF_RAM + ( ( MRS + ACS ) - ( ( FirstVNF_CPU / BR ) - Max( BR,DDR ) ) ) ),Max( AMS,AMS ) ) / AMS ) - Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * RMSe ) * ( RRSe - MUC ) ) / Max( ( ( ( ( ( ( MUM - RRSe ) / MUM ) / MUM ) / Max( Min( DS ,( DS / CS ) ),( RCSe * ( CS - MLU ) ) ) ) * Max( DS,DS ) ) * RRSe ),MLU ) )", "obj1": 0.9212598425196851, "obj2": 0.03583399493183244}, {"determining": "Min( ( Min( AMS ,( Min( ( ( CRS * Min( ARS ,BR ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU * Const ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( ( RRSe / CS ),DS ) ,CS ) ) + Min( ( ( MUM - Max( ( ( RMSe - RCSe ) - Min( MUR ,RMSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ARS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( ( ( Max( RCSe,DS ) + MUM ) / MUR ) * MUM ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.3700787401574803, "obj2": 0.4803597233019473}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,AMS ) / ( ( FirstVNF_CPU + ( ( Const / FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server + Max( PN,FirstVNF_RAM_Server ) ) + ( MRS / PN ) ) ) ) / ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RRSe / Min( Max( Max( Max( MLU,Max( MUR,MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + ( ( ( RCSe - DS ) - MUM ) - Min( MUC ,Min( MUC ,Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.46855489100277287}, {"determining": "Max( ( ( Max( BR,RRS ) - Max( BR,FirstVNF_Mem_Server ) ) / BR ),( ACS - ( ( MRS + FirstVNF_RAM ) - Max( ( Max( ( FirstVNF_Mem * ( CRS + AMS ) ),( Min( MDR ,MRS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( ( Max( MLU,RCSe ) + MUM ) / Max( ( CS - Min( RRSe ,Max( MUC,RMSe ) ) ),DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,Min( MUM ,Max( RCSe,MUM ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7399641977051608}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.13091990440424464}, {"determining": "Min( ( ( FirstVNF_Mem_Server / ( ACS - Const ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( RRS - ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( MUR + Max( CS,( Max( CS,RMSe ) + ( MUC + RRSe ) ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5628188053456457}, {"determining": "( ( AMS - ( CRS * PN ) ) - Max( ( ( FirstVNF_Mem_Server - RRS ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( ( MUR * DS ),MUR ),MLU ) / ( ( RCSe * DS ) - MUC ) )", "obj1": 0.7440944881889764, "obj2": 0.11031357800490244}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.5452755905511811, "obj2": 0.28394020030111683}, {"determining": "( ( ( ( ( Max( BR,( MRS + ( BR + MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - Min( DDR ,Min( ARS ,FirstVNF_RAM ) ) ) + AMS ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,( Min( DS ,CS ) * RRSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5335179135554049}, {"determining": "( ( AMS + ( Max( ACS,( Max( ACS,( ( ACS / ACS ) * FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - BR ) ) - ( ( DDR - MDR ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - ( MUM + MUR ) ) ) * RRSe ) ) ,Max( ( CS - RMSe ),MUR ) )", "obj1": 0.7106299212598425, "obj2": 0.1749207029766216}, {"determining": "( ( ACS * AMS ) - ( ( AMS * MRS ) + DDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( RMSe + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( Max( Max( Max( MLU,( DS + MLU ) ),( CS + CS ) ),DS ),MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.49803149606299213, "obj2": 0.2944686089332702}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.5511811023622047, "obj2": 0.26715167447359034}, {"determining": "Max( Min( ( DDR + ( Min( ACS ,AMS ) * ( Min( AMS ,FirstVNF_RAM_Server ) - MDR ) ) ) ,FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,( RMSe + MUC ) ) + DS ) ) / ( DS + MUM ) )", "obj1": 0.1594488188976378, "obj2": 0.706042597131564}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( Min( ( RCSe / RRSe ) ,( MUR + ( Max( MLU,MLU ) - MLU ) ) ) / ( DS * MUC ) ) - Min( ( RMSe / RMSe ) ,( MUR + DS ) ) )", "obj1": 0.19094488188976377, "obj2": 0.64916328588765}, {"determining": "Max( ( Min( MDR ,( MDR - Max( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ),( ( MDR * DDR ) + Max( Max( DDR,FirstVNF_CPU ),( MDR * FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / BR ) / Const ) ),( Const - MDR ) )", "choosing": "( ( DS / Max( ( Max( ( RRSe / ( MUM + ( MUR / MLU ) ) ),Max( MUR,Max( MUC,DS ) ) ) - Max( Min( MUC ,RCSe ),Max( RRSe,Max( Min( DS ,MUM ),MUC ) ) ) ),MLU ) ) - Min( MUR ,RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.6004762161791302}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( MRS + ( ARS / ARS ) ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.9724409448818898, "obj2": 0.01163659769488056}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.3031496062992126, "obj2": 0.54324517108614}, {"determining": "( Max( Max( FirstVNF_Mem,( ACS / ( Max( FirstVNF_RAM,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ),AMS ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( Max( ( CS - RMSe ),MLU ) / ( MUM + MUM ) ) ,( ( RCSe / ( CS * Min( MUR ,RRSe ) ) ) - MUM ) ) * Min( ( ( RRSe - RCSe ) / MUR ) ,( MUM / ( MUM - Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.31299212598425197, "obj2": 0.5378959770203993}, {"determining": "( Max( BR,( Max( FirstVNF_RAM,( Max( ( ( DDR / AMS ) - ACS ),( ( Const * MDR ) * AMS ) ) - Max( ( ( DDR / AMS ) - Min( FirstVNF_Mem ,ARS ) ),( AMS * Max( FirstVNF_CPU_Server,PN ) ) ) ) ) / CRS ) ) * Max( ARS,( ACS - Const ) ) )", "choosing": "( ( ( DS * MUC ) / Max( ( Min( ( CS / MUM ) ,MUM ) / ( MUM / MUC ) ),MUR ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08661417322834646, "obj2": 0.8506069980420871}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.33267716535433073, "obj2": 0.513128923966357}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * ( MDR / AMS ) ) * ( Const - MDR ) ) ) ) * Min( ( Const * AMS ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),Min( Max( RMSe,MUR ) ,( ( ( DS / DS ) * MLU ) - MUR ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.045384524576316705}, {"determining": "( ( ( Max( ( Const - MDR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - ( CS / RMSe ) )", "obj1": 0.9665354330708661, "obj2": 0.014092517765710752}, {"determining": "( Min( Max( ( ( FirstVNF_CPU - AMS ) / ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) ),( Min( ( Min( ( DDR * DDR ) ,( CRS - FirstVNF_Mem_Server ) ) / Max( Const,MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,( Max( Const,Max( MDR,Const ) ) - CRS ) ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + ( ( MUC + ( ( ( Max( DS,MUM ) / ( Max( MUC,CS ) + ( MUC + RRSe ) ) ) / RRSe ) - ( Min( ( ( CS * MUC ) / MUC ) ,Min( Max( MLU,RCSe ) ,MUM ) ) / ( ( ( RCSe * MUM ) - DS ) - ( DS + Min( CS ,RMSe ) ) ) ) ) ) - ( DS - ( Min( MUM ,( Min( RCSe ,RCSe ) / MUR ) ) / DS ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.5210249777343015}, {"determining": "Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_Mem + ( RRS + ACS ) ) ,Min( Const ,( ( ( DDR - ARS ) * FirstVNF_RAM_Server ) + ( ( MRS + CRS ) / DDR ) ) ) ) - ( Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( RRSe * CS ) )", "obj1": 0.28346456692913385, "obj2": 0.5698146110862061}, {"determining": "Max( ( Min( PN ,BR ) + FirstVNF_CPU ),( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * ( RMSe + MUR ) ) ) ) / ( DS + MUC ) )", "obj1": 0.17913385826771652, "obj2": 0.6902123616289018}, {"determining": "( ( CRS * Min( FirstVNF_CPU_Server ,Min( ( ( ACS * AMS ) + ( ( ( FirstVNF_RAM + FirstVNF_CPU ) / ARS ) + ARS ) ) ,ARS ) ) ) * ( Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( Max( ( FirstVNF_RAM + AMS ),Max( AMS,AMS ) ) / AMS ) ) )", "choosing": "Min( Max( RMSe,Min( Min( RRSe ,( RCSe / MUR ) ) ,( ( RMSe * ( DS - MUR ) ) * CS ) ) ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RRSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.17716535433070865, "obj2": 0.700365624071836}, {"determining": "( Min( ACS ,Max( ( FirstVNF_RAM * ACS ),Min( ACS ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( ( ACS / ( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( ( CS / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( DS / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ),MUM ) / ( ( ( RCSe - ( Min( RMSe ,MUR ) * CS ) ) * DS ) - RMSe ) )", "obj1": 0.8779527559055118, "obj2": 0.05234364139301528}, {"determining": "( Min( BR ,FirstVNF_RAM_Server ) / ( ( CRS + CRS ) / ( ( Const - MDR ) / ( ( ( ARS / MRS ) * ARS ) * DDR ) ) ) )", "choosing": "Min( ( ( ( Max( Min( ( RRSe + ( MUR - MLU ) ) ,RRSe ),RMSe ) - MUM ) * ( MUC * Max( MUC,( RCSe / Min( MUC ,CS ) ) ) ) ) / MUR ) ,( ( Min( ( MUC * Min( DS ,DS ) ) ,( RCSe + RMSe ) ) * ( ( MUC / MUR ) + ( MUM / ( Max( ( CS / MUM ),MUR ) / ( MUC / MUC ) ) ) ) ) - CS ) )", "obj1": 0.6240157480314961, "obj2": 0.24584599828192236}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.2933070866141732, "obj2": 0.5499974267174593}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / ( DDR * ARS ) ),Min( FirstVNF_Mem ,( CRS - MRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( ( RCSe * MUC ) * DS ) ) / Max( ( RCSe * RMSe ),MUR ) )", "obj1": 0.09251968503937008, "obj2": 0.8343567838247025}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * MDR ) - BR ) ) - ( BR + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUR ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,( RRSe + ( ( MUC / MUR ) + ( MUM / ( Max( ( CS / MUM ),MUR ) / ( MUC / MUC ) ) ) ) ) ) )", "obj1": 0.6161417322834646, "obj2": 0.25088987792327505}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( ( CS / MUM ) / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8197025200082171}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( BR ,FirstVNF_RAM_Server ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( CS ,MUR ) - Min( RCSe ,MUC ) ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MUM,MUR ),( DS + CS ) ),DS ) ,CS ) ) + Min( Min( ( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) ) ,CS ) ,( DS / ( ( MUC / ( ( MUM / MLU ) + ( RCSe / MUC ) ) ) + RCSe ) ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.16576935081263403}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.08092173159757018}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / ( DDR * ARS ) ),Min( FirstVNF_Mem ,( CRS - MRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( DS / Max( MLU,( ( MUC + CS ) + ( CS + RMSe ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.19488188976377951, "obj2": 0.6436151165663905}, {"determining": "( ( PN * ( FirstVNF_CPU_Server + BR ) ) - ( Min( ( PN / MDR ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( CS - Min( MUC ,RCSe ) ) ,DS ) / ( Max( MLU,RCSe ) + MUM ) ) * ( ( Min( Min( MUR ,RMSe ) ,( ( CS / RRSe ) / Max( MLU,RMSe ) ) ) - CS ) / MUC ) ) ) / Min( ( MUC / MUR ) ,( MUM / Max( RCSe,MUM ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.07563878469862959}, {"determining": "Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),( Min( MDR ,Max( ( ACS - ( ( ( AMS / FirstVNF_CPU_Server ) * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU * Const ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2283464566929134, "obj2": 0.6113565663958649}, {"determining": "Max( ( Min( MDR ,Max( ( ACS - ( ( ( AMS / FirstVNF_CPU_Server ) * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU * Const ) ) ) * FirstVNF_Mem_Server ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Min( MUM ,Max( MUC,RRSe ) ) - ( ( DS / ( DS * ( MUM - RCSe ) ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2677165354330709, "obj2": 0.5833183707938951}, {"determining": "( Min( MDR ,( Max( ( ( ( RRS - PN ) * Max( DDR,CRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( BR * CRS ) ) ),( ACS - ( ( MRS + FirstVNF_RAM ) - ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) + MRS ) ) * Max( PN,ACS ) )", "choosing": "( ( MLU / ( ( Max( ( ( DS * ( MLU / MLU ) ) - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8193987005427257}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08858267716535433, "obj2": 0.8464432684972332}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) + ( ( BR / PN ) * ( ACS * ( Max( AMS,ARS ) + ( FirstVNF_RAM * PN ) ) ) ) ) ) * PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "Min( ( Min( ( DS - CS ) ,Min( MLU ,( MLU / MUM ) ) ) + MUM ) ,( ( MUM * ( Max( Min( MUC ,RCSe ),Max( RRSe,( MUC / MUR ) ) ) * MUM ) ) - MUR ) )", "obj1": 0.3661417322834646, "obj2": 0.49133321886259634}, {"determining": "Min( ( Min( ( Min( ( ( Const - Max( DDR,DDR ) ) + MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( MLU - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.02700525665909482}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / Max( ( ( ACS * AMS ) / Const ),ACS ) ) / Max( MRS,FirstVNF_Mem_Server ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,( Const - CRS ) ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR / CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( MUR,( RRSe / Max( DS,MUM ) ) ) + ( RRSe + MLU ) ) / RCSe ) ) )", "obj1": 0.36220472440944884, "obj2": 0.4922995227750482}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( Max( PN,Min( BR ,Max( BR,( ( FirstVNF_RAM_Server - ARS ) + MRS ) ) ) ) * Min( MDR ,( MDR + CRS ) ) )", "choosing": "( ( RMSe + ( Min( RMSe ,DS ) - DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( RCSe - ( CS / ( CS * DS ) ) ) ) / ( RCSe / ( RMSe * ( Max( RMSe,RMSe ) * MUM ) ) ) ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7347501566891471}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.2992125984251969, "obj2": 0.5495044793944664}, {"determining": "( ( ( RRS / ( Min( FirstVNF_Mem_Server ,CRS ) - RRS ) ) * ( ( Min( ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( RRS + ACS ) ) ) / ( Const * DDR ) )", "choosing": "( ( DS / Max( Min( ( CS / MUC ) ,Min( MUR ,( MUM + CS ) ) ),( ( MLU + MUR ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.5914301970761978}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09055118110236221, "obj2": 0.8348553987509655}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - ( RRS - Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem ) ) ) ) / Max( PN,Min( MDR ,Max( BR,( FirstVNF_CPU - MDR ) ) ) ) ) ),( ( ( ACS * ( Const - MDR ) ) / ( ACS - RRS ) ) + ( ( FirstVNF_CPU / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * CS ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( DS - Max( MUM,RCSe ) ),DS ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5893616969476704}, {"determining": "Max( ( ( RRS + MDR ) / Max( Max( ( MRS * Max( FirstVNF_RAM,BR ) ),Const ),( CRS / AMS ) ) ),( MDR - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Max( ( MUC * DS ),( RCSe + RMSe ) ) * Min( ( Min( MUR ,( MUR / RMSe ) ) + ( ( ( RMSe * MUR ) - ( MUR * DS ) ) / CS ) ) ,( RCSe / ( ( ( MUR * RCSe ) / Min( MLU ,RRSe ) ) / Max( RRSe,( RRSe / CS ) ) ) ) ) ) - CS ) )", "obj1": 0.2795275590551181, "obj2": 0.5736474096961944}, {"determining": "Max( ( Const - MDR ),( Min( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ,Max( ( ACS - ( ( FirstVNF_Mem * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( ( ACS * AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Max( ( ( MUC + CS ) + ( DS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6384082994147027}, {"determining": "( Min( Max( ( ( ( FirstVNF_Mem / MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ARS / ARS ) + ARS ) ,DDR ) / ( Min( ( ARS + ACS ) ,FirstVNF_Mem ) * PN ) ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( ( ( Max( RCSe,DS ) + MUM ) / MUR ) * RCSe ) ) + Min( Min( MUC ,Max( ( RRSe / RMSe ),MLU ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5180972911397153}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.65748031496063, "obj2": 0.19092325499303867}, {"determining": "( ( ( BR / PN ) * ( ACS * AMS ) ) - ( ( Min( ( ( MDR / ACS ) / RRS ) ,MDR ) / FirstVNF_CPU ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Max( ( MUC * DS ),( RCSe + RMSe ) ) * Min( ( Min( MUR ,( MUR / RMSe ) ) + ( ( ( RMSe * MUR ) - ( MUR * DS ) ) / CS ) ) ,( RCSe / ( ( ( MUR * RCSe ) / Min( MLU ,RRSe ) ) / Max( RRSe,( RRSe / CS ) ) ) ) ) ) - CS ) )", "obj1": 0.9980314960629921, "obj2": 0.0006624713039010849}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.5531496062992126, "obj2": 0.2647507143054167}, {"determining": "( ( ( Max( Max( Const,FirstVNF_RAM ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / Min( MDR ,( Max( ACS,Min( ( FirstVNF_Mem_Server * ( Max( CRS,FirstVNF_Mem_Server ) / ( MDR - MRS ) ) ) ,Min( RRS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) / DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( DS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) / Max( MUM,RCSe ) ),Min( ( RRSe * RCSe ) ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6071513638848173}], "19": [{"determining": "( ( ACS * PN ) - ( Max( Max( ( ( AMS / ARS ) - CRS ),FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) + AMS ) )", "choosing": "( ( ( ( ( Max( RCSe,RCSe ) - MUM ) - RRSe ) / MUR ) + MLU ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / Max( RRSe,MUM ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( ( ( FirstVNF_Mem / DDR ) * Min( MRS ,ACS ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,Min( ( Max( BR,( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ),Min( BR ,( ARS / PN ) ) ) / MRS ) ) / FirstVNF_RAM_Server ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( CS ,MUC ) - Min( Min( DS ,( RCSe / ( ( MUR / MUC ) / DS ) ) ) ,MUC ) ) - RCSe ) + ( ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) + ( MLU - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Max( ACS,BR ) ,ACS ) * ( AMS - FirstVNF_CPU ) ) + DDR ) / FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( RCSe / Min( RMSe ,RMSe ) ) ) / Max( ( RCSe / RMSe ),( Max( ( Max( MUC,( MUR / MUR ) ) + RRSe ),( RRSe * RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8635528467108932}, {"determining": "( Min( Max( ( ( ( Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) * ( FirstVNF_CPU - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ),( ( Const / ( ACS + PN ) ) / ( FirstVNF_CPU - AMS ) ) ) ,PN ) / ( ( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - RCSe ) + ( ( Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) / RCSe ) + Min( ( ( ( DS / Min( DS ,( RCSe * MUR ) ) ) / Max( RMSe,MUC ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.42981964657360433}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.6181102362204725, "obj2": 0.2227186298248211}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "Max( ( Const - MDR ),Min( RRS ,( Const / ( ( AMS / ( ( RRS * MDR ) - BR ) ) - ( BR + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUR ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) ) ) ) - Min( CS ,( RRSe + ( ( MUC / MUR ) + ( MUM / ( Max( ( CS / MUM ),MUR ) / ( MUC / MUC ) ) ) ) ) ) )", "obj1": 0.6161417322834646, "obj2": 0.25088987792327505}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / MUR ) ,( CS - ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) - Min( ( MUC / MUR ) ,( MUM / ( ( ( MUR * RCSe ) / MUC ) / Min( MLU ,RCSe ) ) ) ) ) ) )", "obj1": 0.4311023622047244, "obj2": 0.3760579280987909}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.5177165354330708, "obj2": 0.2820027445177024}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) ) ,( ( MRS - FirstVNF_Mem_Server ) / MDR ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( Max( ( RRSe + Min( DS ,Min( DS ,Min( RRSe ,CS ) ) ) ),( RCSe / ( RRSe * DS ) ) ) ,RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.19383060387864165}, {"determining": "( Max( ( ( ( RRS * ( FirstVNF_RAM * FirstVNF_Mem ) ) - ( MRS * PN ) ) - FirstVNF_RAM ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( DS + Min( ( CS * RMSe ) ,MUM ) ) - CS ) )", "obj1": 0.5688976377952756, "obj2": 0.252833381814649}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUR ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.4763779527559055, "obj2": 0.32501087307045756}, {"determining": "( Min( MDR ,( MDR + MRS ) ) * Max( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ),ACS ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( Min( ( MUC / MUR ) ,( RMSe + ( DS / RMSe ) ) ),DS ) ,CS ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7491256518863169}, {"determining": "( Max( FirstVNF_Mem,( Const * ( FirstVNF_CPU + FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,Max( ( Min( ( MUC * DS ) ,( ( ( MUC - CS ) / CS ) + RMSe ) ) * Max( RCSe,Max( MUR,MUR ) ) ),( ( CS - Max( RMSe,( Min( MUM ,RCSe ) * MLU ) ) ) - MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.34722128052839557}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / BR ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * ARS ) )", "choosing": "( ( ( DS + MUR ) - ( Min( ( Max( MLU,RCSe ) - Min( ( ( RRSe * RRSe ) - RMSe ) ,MUC ) ) ,Min( ( Max( MUM,RMSe ) / RCSe ) ,MLU ) ) / MUR ) ) / ( MUM / DS ) )", "obj1": 0.10236220472440945, "obj2": 0.805706621264607}, {"determining": "Min( ( Min( ( Min( ( ( Max( FirstVNF_RAM,ARS ) - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( ACS ,MRS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN - MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC * MUM ) / Max( ( ( MUC - MUM ) + ( RCSe * Max( DS,( DS - ( RRSe / Min( MLU ,MLU ) ) ) ) ) ),MLU ) )", "obj1": 0.6968503937007874, "obj2": 0.179232358461891}, {"determining": "( ( DDR + RRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( ( CS / RMSe ) * ( Max( Max( ( MUR - RRSe ),( DS * CS ) ),MLU ) + MUR ) ) - ( DS / ( DS * MUC ) ) ) )", "obj1": 0.5511811023622047, "obj2": 0.2665177541238089}, {"determining": "( ( ACS * DDR ) - ( Min( Max( CRS,Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( Const - MDR ) ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Min( ( DS + ( ( CS * MLU ) - MUM ) ) ,Min( MUR ,DS ) ) / ( MUR - ( RCSe * DS ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10405851003521965}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( Const / ACS ) + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( Max( ( MUR / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / ( DS + CS ) ) / ( MLU / Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( MUM * RRSe ) ) / CS ),MUC ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08719124783143223}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( MRS + Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( BR ,FirstVNF_RAM_Server ) ) ) ) / FirstVNF_RAM_Server ) + ( Const - MDR ) ) )", "choosing": "( ( ( ( Max( Max( RMSe,RCSe ),MUR ) / ( ( RCSe * DS ) - RMSe ) ) - Min( RCSe ,MUC ) ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( Min( ( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) ) ,CS ) ,( DS / DS ) ) ) )", "obj1": 0.6653543307086615, "obj2": 0.18791255863370362}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37287002792506396}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( Max( ( RRSe * Min( RCSe ,DS ) ),RMSe ) * MLU ),MUR ) / ( ( RCSe * DS ) - RMSe ) )", "obj1": 0.7165354330708661, "obj2": 0.1556383995189765}, {"determining": "( ( ACS * PN ) - ( Max( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ),DDR ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) * ( MLU * DS ) ) / ( Max( ( ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8188976377952756, "obj2": 0.07117552418623425}, {"determining": "Max( ( ( RRS + MDR ) / Max( Max( ( MRS * Max( FirstVNF_RAM,BR ) ),Const ),( CRS / AMS ) ) ),( MDR - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / Min( MRS ,ACS ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Max( ( MUC * DS ),( RCSe + RMSe ) ) * Min( ( Min( MUR ,( MUR / RMSe ) ) + ( ( ( RMSe * MUR ) - ( MUR * DS ) ) / CS ) ) ,( RCSe / ( ( ( MUR * RCSe ) / Min( MLU ,RRSe ) ) / Max( RRSe,( RRSe / CS ) ) ) ) ) ) - CS ) )", "obj1": 0.2795275590551181, "obj2": 0.5736474096961944}, {"determining": "Min( Min( ( MDR + AMS ) ,FirstVNF_RAM_Server ) ,Min( ( Const * ( ACS * AMS ) ) ,ARS ) )", "choosing": "( ( RCSe - ( DS / Max( DS,CS ) ) ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),( MUM * MUC ) ) ,RMSe ) ) + Max( ( ( DS - RCSe ) - CS ),( MUM / MUM ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6623099202115406}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ( ( ACS * AMS ) / Const ),ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,( Const - CRS ) ) / Min( Min( ( ( ACS * AMS ) + ( Max( AMS,Min( CRS ,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( ( ( Max( MUR,DS ) + ( MLU + MUR ) ) / MUR ) - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,CS ) + Max( MUR,( RRSe / Max( DS,MUM ) ) ) ) / RCSe ) ) )", "obj1": 0.3700787401574803, "obj2": 0.47958624127860294}, {"determining": "Max( Min( ( DDR + ( Min( ACS ,AMS ) * ( Min( AMS ,FirstVNF_RAM_Server ) - MDR ) ) ) ,FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,( RMSe + MUC ) ) + DS ) ) / ( DS + MUM ) )", "obj1": 0.1594488188976378, "obj2": 0.706042597131564}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.46062992125984253, "obj2": 0.33968819672945993}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( RCSe * DS ) - RMSe ) )", "obj1": 0.8700787401574803, "obj2": 0.057326374742811936}, {"determining": "( ( ACS * PN ) - ( Max( Max( ( ( AMS / ARS ) - CRS ),FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) + AMS ) )", "choosing": "( ( ( ( ( Max( RCSe,RCSe ) - MUM ) - RRSe ) / MUR ) + MLU ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / Max( RRSe,MUM ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.8385826771653543, "obj2": 0.06087744735814584}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,( ( ( DS - CS ) - CS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5532706197205658}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU + AMS ) ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Max( AMS,DDR ) - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,( Min( Max( Max( RRSe,MUC ),DS ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - ( RCSe * DS ) ) ) ) / DS ) - Min( CS ,MUM ) )", "obj1": 0.4094488188976378, "obj2": 0.44440052069475466}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "( ( CRS * Min( FirstVNF_CPU_Server ,Min( ( ( ACS * AMS ) + ( ( ( FirstVNF_RAM + FirstVNF_CPU ) / ARS ) + ARS ) ) ,ARS ) ) ) * ( Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( Max( ( FirstVNF_RAM + AMS ),Max( AMS,AMS ) ) / AMS ) ) )", "choosing": "Min( Max( RMSe,Min( Min( RRSe ,( RCSe / MUR ) ) ,( ( RMSe * ( DS - MUR ) ) * CS ) ) ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RRSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.17716535433070865, "obj2": 0.700365624071836}, {"determining": "( ( ACS * AMS ) - ( ( AMS * MRS ) + DDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( RMSe + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( Max( Max( Max( MLU,( DS + MLU ) ),( CS + CS ) ),DS ),MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.49803149606299213, "obj2": 0.2944686089332702}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.2637795275590551, "obj2": 0.5783856245676975}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.3543307086614173, "obj2": 0.491311731819414}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3248031496062992, "obj2": 0.5169954341329172}, {"determining": "Max( ( Const - MDR ),( Min( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ,Max( ( ACS - ( ( FirstVNF_Mem * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( ( ACS * AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Max( ( ( MUC + CS ) + ( DS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6384082994147027}, {"determining": "( ( ( ( ( Max( BR,( MRS + ( BR + MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - Min( DDR ,Min( ARS ,FirstVNF_RAM ) ) ) + AMS ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,( Min( DS ,CS ) * RRSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5335179135554049}, {"determining": "( ( RRS / ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( Max( FirstVNF_CPU,DDR ) ,AMS ) * ( Const - MDR ) ) - Max( ACS,DDR ) ) )", "choosing": "Max( ( ( ( ( ( CS * DS ) + DS ) + MUM ) + MUR ) / ( Min( RMSe ,RCSe ) / Max( MUM,CS ) ) ),( ( DS / RMSe ) + RMSe ) )", "obj1": 0.8917322834645669, "obj2": 0.041834103612551826}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( ACS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / ( RRSe * ( CS / RCSe ) ) ) ) ) ) - RCSe ) )", "obj1": 0.9901574803149606, "obj2": 0.005183365726254115}, {"determining": "( ( CRS * Min( MDR ,Min( ( ( ACS * AMS ) + ( ( ARS / ARS ) + ARS ) ) ,ARS ) ) ) * ( ( Max( ( FirstVNF_RAM + ( ( MRS + ACS ) - ( ( FirstVNF_CPU / BR ) - Max( BR,DDR ) ) ) ),Max( AMS,AMS ) ) / AMS ) - Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * RMSe ) * ( RRSe - MUC ) ) / Max( ( ( ( ( ( ( MUM - RRSe ) / MUM ) / MUM ) / Max( Min( DS ,( DS / CS ) ),( RCSe * ( CS - MLU ) ) ) ) * Max( DS,DS ) ) * RRSe ),MLU ) )", "obj1": 0.9212598425196851, "obj2": 0.03583399493183244}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( MDR + Min( BR ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( Max( RRSe,RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,( Max( MUC,MUM ) - ( DS * MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.46135373167162275}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,AMS ) / ( ( FirstVNF_CPU + ( ( Const / FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server + Max( PN,FirstVNF_RAM_Server ) ) + ( MRS / PN ) ) ) ) / ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RRSe / Min( Max( Max( Max( MLU,Max( MUR,MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + ( ( ( RCSe - DS ) - MUM ) - Min( MUC ,Min( MUC ,Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.46855489100277287}, {"determining": "( Min( Max( Max( FirstVNF_Mem_Server,DDR ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + RCSe ) - ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.39173228346456695, "obj2": 0.4547366147896316}, {"determining": "Max( ( ( Max( BR,RRS ) - Max( BR,FirstVNF_Mem_Server ) ) / BR ),( ACS - ( ( MRS + FirstVNF_RAM ) - Max( ( Max( ( FirstVNF_Mem * ( CRS + AMS ) ),( Min( MDR ,MRS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( ( Max( MLU,RCSe ) + MUM ) / Max( ( CS - Min( RRSe ,Max( MUC,RMSe ) ) ),DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,Min( MUM ,Max( RCSe,MUM ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7399641977051608}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.13091990440424464}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( ( AMS - ( CRS * PN ) ) - Max( ( ( FirstVNF_Mem_Server - RRS ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( ( MUR * DS ),MUR ),MLU ) / ( ( RCSe * DS ) - MUC ) )", "obj1": 0.7440944881889764, "obj2": 0.11031357800490244}, {"determining": "Max( ( Const - MDR ),( ARS * Max( AMS,CRS ) ) )", "choosing": "( ( DS / Max( MLU,( Max( ( ( MUC + CS ) + ( MUR + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( MUR / RMSe ) ) ) ) - Min( CS ,( RCSe / RCSe ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6276695521551823}, {"determining": "( ( AMS + ( Max( ACS,( Max( ACS,( ( ACS / ACS ) * FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) - BR ) ) - ( ( DDR - MDR ) + ( ( DDR / PN ) - ACS ) ) )", "choosing": "Min( Min( ( ( ( ( ( Max( MUR,DS ) + MUM ) / MUR ) * MUM ) * CS ) + RRSe ) ,( Max( RRSe,( RRSe - ( MUM + MUR ) ) ) * RRSe ) ) ,Max( ( CS - RMSe ),MUR ) )", "obj1": 0.7106299212598425, "obj2": 0.1749207029766216}, {"determining": "Max( ( Min( MDR ,( MDR - Max( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ),( ( MDR * DDR ) + Max( Max( DDR,FirstVNF_CPU ),( MDR * FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / BR ) / Const ) ),( Const - MDR ) )", "choosing": "( ( DS / Max( ( Max( ( RRSe / ( MUM + ( MUR / MLU ) ) ),Max( MUR,Max( MUC,DS ) ) ) - Max( Min( MUC ,RCSe ),Max( RRSe,Max( Min( DS ,MUM ),MUC ) ) ) ),MLU ) ) - Min( MUR ,RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.6004762161791302}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.39960629921259844, "obj2": 0.4487399150159486}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( DS / ( DS * MUC ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.2601495126162082}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.3031496062992126, "obj2": 0.5419860745962766}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( Min( ( RCSe / RRSe ) ,( MUR + ( Max( MLU,MLU ) - MLU ) ) ) / ( DS * MUC ) ) - Min( ( RMSe / RMSe ) ,( MUR + DS ) ) )", "obj1": 0.19094488188976377, "obj2": 0.64916328588765}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - Max( FirstVNF_CPU_Server,PN ) ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.07496166625951686}, {"determining": "( ( ( Max( ( Const - MDR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - ( CS / RMSe ) )", "obj1": 0.9665354330708661, "obj2": 0.014092517765710752}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "Min( ( Min( ( Min( ( ( Const - Max( DDR,DDR ) ) + MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( MLU - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.02700525665909482}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( BR ,FirstVNF_RAM_Server ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( CS ,MUR ) - Min( RCSe ,MUC ) ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MUM,MUR ),( DS + CS ) ),DS ) ,CS ) ) + Min( Min( ( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) ) ,CS ) ,( DS / ( ( MUC / ( ( MUM / MLU ) + ( RCSe / MUC ) ) ) + RCSe ) ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.16576935081263403}, {"determining": "Max( ( Const - MDR ),( Min( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ,Max( ( ACS - ( ( FirstVNF_Mem * Min( ACS ,BR ) ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( Max( ACS,AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( Max( MLU,( ( DS * RMSe ) - MUR ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6219504534012233}, {"determining": "( Max( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( MUR / RCSe ) )", "obj1": 0.5039370078740157, "obj2": 0.2905269361326845}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( Max( BR,( Max( FirstVNF_RAM,( Max( ( ( DDR / AMS ) - ACS ),( ( Const * MDR ) * AMS ) ) - Max( ( ( DDR / AMS ) - Min( FirstVNF_Mem ,ARS ) ),( AMS * Max( FirstVNF_CPU_Server,PN ) ) ) ) ) / CRS ) ) * Max( ARS,( ACS - Const ) ) )", "choosing": "( ( ( DS * MUC ) / Max( ( Min( ( CS / MUM ) ,MUM ) / ( MUM / MUC ) ),MUR ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08661417322834646, "obj2": 0.8506069980420871}, {"determining": "Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),( Min( MDR ,Max( ( ACS - ( ( ( AMS / FirstVNF_CPU_Server ) * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU * Const ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2283464566929134, "obj2": 0.6113565663958649}, {"determining": "( Min( ( MRS + Const ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( ( PN * Min( ( RRS / MDR ) ,MDR ) ) / Min( ( ( ARS / Max( CRS,( PN / PN ) ) ) + ARS ) ,DDR ) ) ) )", "choosing": "( ( ( DS / Max( CS,RCSe ) ) * RCSe ) + Min( ( MLU - ( Max( ( ( MUC + CS ) / Min( Max( RMSe,RMSe ) ,RMSe ) ),( ( MUC + MUM ) - CS ) ) + ( MUC / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( Min( MUM ,RMSe ) ,RCSe ) ) ) ) / MLU ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5107536826759704}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * ( MDR / AMS ) ) * ( Const - MDR ) ) ) ) * Min( ( Const * AMS ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),Min( Max( RMSe,MUR ) ,( ( ( DS / DS ) * MLU ) - MUR ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.045384524576316705}, {"determining": "( Max( Max( FirstVNF_Mem,( ACS / ( Max( FirstVNF_RAM,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ),AMS ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( Max( ( CS - RMSe ),MLU ) / ( MUM + MUM ) ) ,( ( RCSe / ( CS * Min( MUR ,RRSe ) ) ) - MUM ) ) * Min( ( ( RRSe - RCSe ) / MUR ) ,( MUM / ( MUM - Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.31299212598425197, "obj2": 0.5378959770203993}, {"determining": "( Max( ( ( ( FirstVNF_Mem + ARS ) - Min( Min( FirstVNF_CPU_Server ,RRS ) ,FirstVNF_RAM ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ),MDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( Min( MLU ,( Max( ( ( Max( MLU,RCSe ) - Max( Min( MUR ,RMSe ),RMSe ) ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( MUR / RCSe ) )", "obj1": 0.49803149606299213, "obj2": 0.2944686089332702}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS * Min( MDR ,Min( ( ( ACS * AMS ) + ( MRS + ( ( DDR + ACS ) / ARS ) ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( MUR / MUC ) ) ),( RRSe / ( RCSe + ( MUR / MUM ) ) ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( BR / CRS ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / ( ( RCSe * DS ) - RMSe ) ),( RMSe + ( DS / RMSe ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - Min( ( MUC / RRSe ) ,( MUR / ( MLU / MUC ) ) ) ) )", "obj1": 0.3464566929133858, "obj2": 0.5031791185454566}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.33661417322834647, "obj2": 0.5044196410639086}, {"determining": "( ( ( RRS / ( Min( FirstVNF_Mem_Server ,CRS ) - RRS ) ) * ( ( Min( ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( RRS + ACS ) ) ) / ( Const * DDR ) )", "choosing": "( ( DS / Max( Min( ( CS / MUC ) ,Min( MUR ,( MUM + CS ) ) ),( ( MLU + MUR ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2559055118110236, "obj2": 0.5919402296904009}, {"determining": "Max( ( Min( PN ,BR ) + FirstVNF_CPU ),( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * ( RMSe + MUR ) ) ) ) / ( DS + MUC ) )", "obj1": 0.17913385826771652, "obj2": 0.6902123616289018}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09251968503937008, "obj2": 0.8335218902230243}, {"determining": "( ( Min( DDR ,PN ) - ACS ) * ( CRS - ( ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,MDR ) ) - Max( MDR,MDR ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / ( ( ( CS - CS ) * MUM ) * CS ) ) + Min( ( DS / DS ) ,( MUM - CS ) ) ) )", "obj1": 0.952755905511811, "obj2": 0.01871654483419788}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / ( DDR * ARS ) ),Min( FirstVNF_Mem ,( CRS - MRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( DS / Max( MLU,( ( MUC + CS ) + ( CS + RMSe ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.19488188976377951, "obj2": 0.6436151165663905}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( ( CS / MUM ) / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8197025200082171}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08858267716535433, "obj2": 0.8464432684972332}, {"determining": "( ( ( ( MDR - FirstVNF_RAM_Server ) / Min( RRS ,BR ) ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_CPU_Server ,( PN * MDR ) ) - Const ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * Max( RMSe,DS ) ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - ( ( MUM - ( Min( DS ,RMSe ) * DS ) ) * MUM ) )", "obj1": 0.3484251968503937, "obj2": 0.4931229301844405}, {"determining": "( Max( PN,Min( BR ,Max( BR,( ( FirstVNF_RAM_Server - ARS ) + MRS ) ) ) ) * Min( MDR ,( MDR + CRS ) ) )", "choosing": "( ( RMSe + ( Min( RMSe ,DS ) - DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( RCSe - ( CS / ( CS * DS ) ) ) ) / ( RCSe / ( RMSe * ( Max( RMSe,RMSe ) * MUM ) ) ) ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7347501566891471}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( Max( AMS,Min( CRS ,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,CS ) + Max( MUR,( RRSe / Max( DS,MUM ) ) ) ) / RCSe ) ) )", "obj1": 0.9468503937007874, "obj2": 0.020847222597122527}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / Max( ( ( ACS * AMS ) / Const ),ACS ) ) / Max( MRS,FirstVNF_Mem_Server ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,( Const - CRS ) ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR / CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( MUR,( RRSe / Max( DS,MUM ) ) ) + ( RRSe + MLU ) ) / RCSe ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6267789182265991}, {"determining": "Max( ( ( Min( ( Max( ( ( RRS / DDR ) + ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) / Min( MRS ,ACS ) ) ,( ( FirstVNF_CPU_Server / ( BR * MRS ) ) - ( ACS * ( MRS / BR ) ) ) ) - FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ),Max( Min( MDR ,Max( ( FirstVNF_CPU * Const ),( ACS - ( ( ( AMS / FirstVNF_CPU_Server ) * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,Min( Min( MUM ,Max( MUC,DS ) ) ,( ( RRSe / ( DS * RMSe ) ) - Min( ( Min( RRSe ,MLU ) / Max( RMSe,CS ) ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.5890583092537647}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( ( CS / MUM ) / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8160741343772104}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.2952755905511811, "obj2": 0.5476425743392014}, {"determining": "( Min( ACS ,Max( ( FirstVNF_RAM * ACS ),Min( ACS ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( ( ACS / ( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( ( CS / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( DS / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ),MUM ) / ( ( ( RCSe - ( Min( RMSe ,MUR ) * CS ) ) * DS ) - RMSe ) )", "obj1": 0.9744094488188977, "obj2": 0.009557949518705833}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / Max( RRSe,MUM ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5497850771782641}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09055118110236221, "obj2": 0.8348553987509655}, {"determining": "Min( ( Min( AMS ,( Min( ( ( CRS * Min( ARS ,BR ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU * Const ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( ( RRSe / CS ),DS ) ,CS ) ) + Min( ( ( MUM - Max( ( ( RMSe - RCSe ) - Min( MUR ,RMSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.08092173159757018}, {"determining": "( ( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( ACS - MRS ) ) ) / ( MRS * DDR ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUR ) - ( ( ( MUR * ( MLU - DS ) ) + Max( RMSe,RCSe ) ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.7933070866141733, "obj2": 0.0773881803464324}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.65748031496063, "obj2": 0.19092325499303867}, {"determining": "( ( ( Max( Max( Const,FirstVNF_RAM ),( Min( MDR ,AMS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / Min( MDR ,( Max( ACS,Min( ( FirstVNF_Mem_Server * ( Max( CRS,FirstVNF_Mem_Server ) / ( MDR - MRS ) ) ) ,Min( RRS ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) / DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( DS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) / Max( MUM,RCSe ) ),Min( ( RRSe * RCSe ) ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6071513638848173}], "20": [{"determining": "( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) + MRS ) )", "choosing": "( ( RCSe + ( MUC - CS ) ) - Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( Max( Max( ( ( AMS / ARS ) - CRS ),FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) + AMS ) )", "choosing": "( ( ( ( ( Max( RCSe,RCSe ) - MUM ) - RRSe ) / MUR ) + MLU ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / Max( RRSe,MUM ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Max( ACS,BR ) ,ACS ) * ( AMS - FirstVNF_CPU ) ) + DDR ) / FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( RCSe / Min( RMSe ,RMSe ) ) ) / Max( ( RCSe / RMSe ),( Max( ( Max( MUC,( MUR / MUR ) ) + RRSe ),( RRSe * RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8635528467108932}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.6968503937007874, "obj2": 0.15409608986060486}, {"determining": "( Min( Max( ( ( ( Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) * ( FirstVNF_CPU - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ),( ( Const / ( ACS + PN ) ) / ( FirstVNF_CPU - AMS ) ) ) ,PN ) / ( ( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - RCSe ) + ( ( Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) / RCSe ) + Min( ( ( ( DS / Min( DS ,( RCSe * MUR ) ) ) / Max( RMSe,MUC ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.42981964657360433}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / MUR ) ,( CS - ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) - Min( ( MUC / MUR ) ,( MUM / ( ( ( MUR * RCSe ) / MUC ) / Min( MLU ,RCSe ) ) ) ) ) ) )", "obj1": 0.4311023622047244, "obj2": 0.3760579280987909}, {"determining": "( Max( ( ( RRS + Const ) - ( ( RRS * MDR ) - BR ) ),ACS ) - ( ( Const * RRS ) * RRS ) )", "choosing": "( ( MUC - ( ( MLU - CS ) + ( MUR - Min( CS ,( MUM * RRSe ) ) ) ) ) + ( MUC * MLU ) )", "obj1": 0.5905511811023622, "obj2": 0.2430210111595982}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.6181102362204725, "obj2": 0.2227186298248211}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) ) ,( ( Max( BR,( Max( ( FirstVNF_CPU * Max( ACS,AMS ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) + CRS ) ) / Max( PN,FirstVNF_Mem ) ) + ( ( DDR * CRS ) * CRS ) ) )", "choosing": "( ( MUR / Max( MLU,( Max( MUR,RCSe ) - ( DS + ( RRSe / MUM ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6692913385826772, "obj2": 0.18501386686120783}, {"determining": "( ( DDR + RRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( ( CS / RMSe ) * ( Max( Max( ( MUR - RRSe ),( DS * CS ) ),MLU ) + MUR ) ) - ( DS / ( DS * MUC ) ) ) )", "obj1": 0.5511811023622047, "obj2": 0.2665177541238089}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6377952755905512, "obj2": 0.22166988542107216}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - ( Min( DS ,MUC ) + ( RRSe - RRSe ) ) ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( MUR - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7458461275950927}, {"determining": "( Max( FirstVNF_Mem,( Const * ( FirstVNF_CPU + FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,Max( ( Min( ( MUC * DS ) ,( ( ( MUC - CS ) / CS ) + RMSe ) ) * Max( RCSe,Max( MUR,MUR ) ) ),( ( CS - Max( RMSe,( Min( MUM ,RCSe ) * MLU ) ) ) - MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.34722128052839557}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7740329539822995}, {"determining": "( ( ACS * DDR ) - ( Min( Max( CRS,Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( Const - MDR ) ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Min( ( DS + ( ( CS * MLU ) - MUM ) ) ,Min( MUR ,DS ) ) / ( MUR - ( RCSe * DS ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10405851003521965}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( RCSe * DS ) - RMSe ) )", "obj1": 0.8700787401574803, "obj2": 0.057326374742811936}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( Const / ACS ) + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( Max( ( MUR / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / ( DS + CS ) ) / ( MLU / Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( MUM * RRSe ) ) / CS ),MUC ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08719124783143223}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( ( CS / MUM ) / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8160741343772104}, {"determining": "( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,( ARS - FirstVNF_CPU ) ) ) - ( ( ARS / ( CRS / CRS ) ) * ( BR - ( Min( DDR ,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUC - ( MLU / MUR ) ) - CS ) * ( CS * MUR ) ) - Min( MLU ,CS ) )", "obj1": 0.48031496062992124, "obj2": 0.3234065859863689}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.5177165354330708, "obj2": 0.2820027445177024}, {"determining": "Min( ( Min( ( Min( ( ( PN - ( MRS + ACS ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( Const ,RRS ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM_Server * ARS ) / BR ) - Const ) )", "choosing": "( ( ( Min( ( MUC * MUM ) ,( RCSe + RMSe ) ) * Min( ( MUM / ( Min( RCSe ,( RCSe / RCSe ) ) / Max( RRSe,( CS * MUM ) ) ) ) ,( MUC / MUR ) ) ) - CS ) + Max( ( MUC / ( ( Min( RRSe ,DS ) / DS ) * CS ) ),MUC ) )", "obj1": 0.9153543307086615, "obj2": 0.0331775324211539}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37287002792506396}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.2637795275590551, "obj2": 0.5783856245676975}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( DDR / ( ( ( FirstVNF_RAM + ARS ) / FirstVNF_Mem ) + ACS ) ) ) / Min( ( Min( Const ,MDR ) * ( ACS + BR ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUC * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( RCSe / ( Max( RRSe,MUM ) / Max( ( ( MUM + Max( DS,CS ) ) * MUR ),( RRSe / Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5600561084173625}, {"determining": "Min( Min( ( MDR + AMS ) ,FirstVNF_RAM_Server ) ,Min( ( Const * ( ACS * AMS ) ) ,ARS ) )", "choosing": "( ( RCSe - ( DS / Max( DS,CS ) ) ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),( MUM * MUC ) ) ,RMSe ) ) + Max( ( ( DS - RCSe ) - CS ),( MUM / MUM ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6623099202115406}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) ) ,( ( MRS - FirstVNF_Mem_Server ) / MDR ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( Max( ( RRSe + Min( DS ,Min( DS ,Min( RRSe ,CS ) ) ) ),( RCSe / ( RRSe * DS ) ) ) ,RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.19383060387864165}, {"determining": "Max( Min( ( DDR + ( Min( ACS ,AMS ) * ( Min( AMS ,FirstVNF_RAM_Server ) - MDR ) ) ) ,FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,( RMSe + MUC ) ) + DS ) ) / ( DS + MUM ) )", "obj1": 0.1594488188976378, "obj2": 0.706042597131564}, {"determining": "( ( ACS * PN ) - ( Max( Max( ( ( AMS / ARS ) - CRS ),FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) + AMS ) )", "choosing": "( ( ( ( ( Max( RCSe,RCSe ) - MUM ) - RRSe ) / MUR ) + MLU ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / Max( RRSe,MUM ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.8385826771653543, "obj2": 0.06087744735814584}, {"determining": "Min( ( Min( ( Min( ( ( ( Const - MDR ) - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RRSe,MUM ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.04084879596630067}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU + AMS ) ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Max( AMS,DDR ) - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,( Min( Max( Max( RRSe,MUC ),DS ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - ( RCSe * DS ) ) ) ) / DS ) - Min( CS ,MUM ) )", "obj1": 0.4094488188976378, "obj2": 0.44440052069475466}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "( ( CRS * Min( FirstVNF_CPU_Server ,Min( ( ( ACS * AMS ) + ( ( ( FirstVNF_RAM + FirstVNF_CPU ) / ARS ) + ARS ) ) ,ARS ) ) ) * ( Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( Max( ( FirstVNF_RAM + AMS ),Max( AMS,AMS ) ) / AMS ) ) )", "choosing": "Min( Max( RMSe,Min( Min( RRSe ,( RCSe / MUR ) ) ,( ( RMSe * ( DS - MUR ) ) * CS ) ) ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RRSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.17716535433070865, "obj2": 0.700365624071836}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( ACS * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( ( ( MUR * ( MLU - DS ) ) + RCSe ) / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3543307086614173, "obj2": 0.48786561907975745}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.49803149606299213, "obj2": 0.2944686089332702}, {"determining": "( Max( Max( FirstVNF_Mem,( ACS / ( Max( FirstVNF_RAM,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ),AMS ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( Max( ( CS - RMSe ),MLU ) / ( MUM + MUM ) ) ,( ( RCSe / ( CS * Min( MUR ,RRSe ) ) ) - MUM ) ) * Min( ( ( RRSe - RCSe ) / MUR ) ,( MUM / ( MUM - Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.31299212598425197, "obj2": 0.5378959770203993}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( MDR + Min( BR ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( Max( RRSe,RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,( Max( MUC,MUM ) - ( DS * MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.46135373167162275}, {"determining": "( Min( Max( Max( FirstVNF_Mem_Server,DDR ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + RCSe ) - ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.39173228346456695, "obj2": 0.4547366147896316}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - Max( FirstVNF_CPU_Server,PN ) ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( Min( ( RCSe / RRSe ) ,( MUR + ( Max( MLU,MLU ) - MLU ) ) ) / ( DS * MUC ) ) - Min( ( RMSe / RMSe ) ,( MUR + DS ) ) )", "obj1": 0.7421259842519685, "obj2": 0.11507379763314247}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * ( MDR / AMS ) ) * ( Const - MDR ) ) ) ) * Min( ( Const * AMS ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),Min( Max( RMSe,MUR ) ,( ( ( DS / DS ) * MLU ) - MUR ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.045384524576316705}, {"determining": "( Min( ACS ,Max( ( FirstVNF_RAM * ACS ),Min( ACS ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( ( ACS / ( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( ( CS / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( DS / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ),MUM ) / ( ( ( RCSe - ( Min( RMSe ,MUR ) * CS ) ) * DS ) - RMSe ) )", "obj1": 0.9744094488188977, "obj2": 0.009557949518705833}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( MRS + ( ( DDR + ACS ) / ARS ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( Max( ( RRSe + Max( MUC,( MUR / MUC ) ) ),( RRSe / ( RCSe + ( MUR / MUM ) ) ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) - CS ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.0748923316921896}, {"determining": "Max( ( Const - MDR ),( Min( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ,Max( ( ACS - ( ( FirstVNF_Mem * Min( ACS ,BR ) ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( Max( ACS,AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( Max( MLU,( ( DS * RMSe ) - MUR ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6219504534012233}, {"determining": "Max( ( ( Max( BR,RRS ) - Max( BR,FirstVNF_Mem_Server ) ) / BR ),( ACS - ( ( MRS + FirstVNF_RAM ) - Max( ( Max( ( FirstVNF_Mem * ( CRS + AMS ) ),( Min( MDR ,MRS ) * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( ( Max( MLU,RCSe ) + MUM ) / Max( ( CS - Min( RRSe ,Max( MUC,RMSe ) ) ),DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,Min( MUM ,Max( RCSe,MUM ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7399641977051608}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.39960629921259844, "obj2": 0.4487399150159486}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,( ( ( DS - CS ) - CS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5532706197205658}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ( ( ACS * AMS ) / Const ),ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,( Const - CRS ) ) / Min( Min( ( ( ACS * AMS ) + ( Max( AMS,Min( CRS ,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( ( ( Max( MUR,DS ) + ( MLU + MUR ) ) / MUR ) - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,CS ) + Max( MUR,( RRSe / Max( DS,MUM ) ) ) ) / RCSe ) ) )", "obj1": 0.3700787401574803, "obj2": 0.47958624127860294}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.3031496062992126, "obj2": 0.5419860745962766}, {"determining": "( ( ACS * PN ) - ( Max( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ),DDR ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) * ( MLU * DS ) ) / ( Max( ( ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8188976377952756, "obj2": 0.07117552418623425}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.46062992125984253, "obj2": 0.33968819672945993}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,AMS ) / ( ( FirstVNF_CPU + ( ( Const / FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server + Max( PN,FirstVNF_RAM_Server ) ) + ( MRS / PN ) ) ) ) / ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RRSe / Min( Max( Max( Max( MLU,Max( MUR,MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + ( ( ( RCSe - DS ) - MUM ) - Min( MUC ,Min( MUC ,Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.46855489100277287}, {"determining": "( Max( ( Const * MDR ),ACS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) - Min( CS ,( RRSe + ( ( MUC / MUR ) + ( MUM / ( Max( ( CS / MUM ),CS ) / ( MUC / MUC ) ) ) ) ) ) )", "obj1": 0.5748031496062992, "obj2": 0.24801052229283935}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( ( CS / MUM ) / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8197025200082171}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( Min( ( RCSe / RRSe ) ,( MUR + ( Max( MLU,MLU ) - MLU ) ) ) / ( DS * MUC ) ) - Min( ( RMSe / RMSe ) ,( MUR + DS ) ) )", "obj1": 0.19094488188976377, "obj2": 0.64916328588765}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( Max( BR,( Max( FirstVNF_RAM,( Max( ( ( DDR / AMS ) - ACS ),( ( Const * MDR ) * AMS ) ) - Max( ( ( DDR / AMS ) - Min( FirstVNF_Mem ,ARS ) ),( AMS * Max( FirstVNF_CPU_Server,PN ) ) ) ) ) / CRS ) ) * Max( ARS,( ACS - Const ) ) )", "choosing": "( ( ( DS * MUC ) / Max( ( Min( ( CS / MUM ) ,MUM ) / ( MUM / MUC ) ),MUR ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08661417322834646, "obj2": 0.8506069980420871}, {"determining": "Min( ( Min( AMS ,( Min( ( ( CRS * Min( ARS ,BR ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU * Const ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( ( RRSe / CS ),DS ) ,CS ) ) + Min( ( ( MUM - Max( ( ( RMSe - RCSe ) - Min( MUR ,RMSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "( ( ( Max( ( Const - MDR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - ( CS / RMSe ) )", "obj1": 0.9665354330708661, "obj2": 0.014092517765710752}, {"determining": "Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),( Min( MDR ,Max( ( ACS - ( ( ( AMS / FirstVNF_CPU_Server ) * ACS ) - ( ( ACS + ACS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU * Const ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( MUR + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2283464566929134, "obj2": 0.6103365690701137}, {"determining": "( ( ( ( MDR - FirstVNF_RAM_Server ) / Min( RRS ,BR ) ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_CPU_Server ,( PN * MDR ) ) - Const ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * Max( RMSe,DS ) ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - ( ( MUM - ( Min( DS ,RMSe ) * DS ) ) * MUM ) )", "obj1": 0.3484251968503937, "obj2": 0.4931229301844405}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( BR / CRS ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / ( ( RCSe * DS ) - RMSe ) ),( RMSe + ( DS / RMSe ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - Min( ( MUC / RRSe ) ,( MUR / ( MLU / MUC ) ) ) ) )", "obj1": 0.3464566929133858, "obj2": 0.5031791185454566}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "Max( ( Min( PN ,BR ) + FirstVNF_CPU ),( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * ( RMSe + MUR ) ) ) ) / ( DS + MUC ) )", "obj1": 0.17913385826771652, "obj2": 0.6902123616289018}, {"determining": "( Max( ( ( ( RRS * ( FirstVNF_RAM * FirstVNF_Mem ) ) - ( MRS * PN ) ) - FirstVNF_RAM ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( DS + Min( ( CS * RMSe ) ,MUM ) ) - CS ) )", "obj1": 0.5688976377952756, "obj2": 0.252833381814649}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3248031496062992, "obj2": 0.5169954341329172}, {"determining": "Max( ( ( Min( ( Max( ( ( RRS / DDR ) + ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) / Min( MRS ,ACS ) ) ,( ( FirstVNF_CPU_Server / ( BR * MRS ) ) - ( ACS * ( MRS / BR ) ) ) ) - FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ),Max( Min( MDR ,Max( ( FirstVNF_CPU * Const ),( ACS - ( ( ( AMS / FirstVNF_CPU_Server ) * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,Min( Min( MUM ,Max( MUC,DS ) ) ,( ( RRSe / ( DS * RMSe ) ) - Min( ( Min( RRSe ,MLU ) / Max( RMSe,CS ) ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.5890583092537647}, {"determining": "( ( ACS * AMS ) - ( ( AMS * MRS ) + DDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( RMSe + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( Max( Max( Max( MLU,( DS + MLU ) ),( CS + CS ) ),DS ),MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.49803149606299213, "obj2": 0.2944686089332702}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09251968503937008, "obj2": 0.8335218902230243}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8169291338582677, "obj2": 0.07174084510277251}, {"determining": "( ( AMS - ( CRS * PN ) ) - Max( ( ( FirstVNF_Mem_Server - RRS ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( ( MUR * DS ),MUR ),MLU ) / ( ( RCSe * DS ) - MUC ) )", "obj1": 0.7440944881889764, "obj2": 0.11031357800490244}, {"determining": "( ( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( ACS - MRS ) ) ) / ( MRS * DDR ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUR ) - ( ( ( MUR * ( MLU - DS ) ) + Max( RMSe,RCSe ) ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.7933070866141733, "obj2": 0.0773881803464324}, {"determining": "( ( FirstVNF_RAM * ACS ) - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( MLU - ( RRSe + ( MUR * DS ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3362567968601052}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08858267716535433, "obj2": 0.8464432684972332}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( MRS + ( ( CRS + FirstVNF_RAM ) / ARS ) ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( ( ( ( CS * DS ) + DS ) + MUM ) + MUR ) / ( Min( RMSe ,RCSe ) / Max( MUM,CS ) ) ),( ( DS / RMSe ) + RMSe ) )", "obj1": 0.9881889763779528, "obj2": 0.005899917223681827}, {"determining": "( Max( PN,Min( BR ,Max( BR,( ( FirstVNF_RAM_Server - ARS ) + MRS ) ) ) ) * Min( MDR ,( MDR + CRS ) ) )", "choosing": "( ( RMSe + ( Min( RMSe ,DS ) - DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( RCSe - ( CS / ( CS * DS ) ) ) ) / ( RCSe / ( RMSe * ( Max( RMSe,RMSe ) * MUM ) ) ) ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7347501566891471}, {"determining": "Max( ( ( DDR + ( Min( ACS ,AMS ) * ( Const - MDR ) ) ) + FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( ( ( Max( MUR,DS ) + ( MLU + MUR ) ) / MUR ) - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,CS ) + Max( MUR,( RRSe / Max( DS,MUM ) ) ) ) / RCSe ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6332046081004201}, {"determining": "Max( ( Const - MDR ),( Min( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ,Max( ( ACS - ( ( FirstVNF_Mem * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( ( ACS * Min( MRS ,ACS ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Max( ( ( MUC + CS ) + ( DS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe - RCSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.21456692913385828, "obj2": 0.6251677099877107}, {"determining": "Max( ( Min( MDR ,( MDR - Max( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ),( ( MDR * DDR ) + Max( Max( DDR,FirstVNF_CPU ),( MDR * FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / BR ) / Const ) ),( Const - MDR ) )", "choosing": "( ( DS / Max( ( Max( ( RRSe / ( MUM + ( MUR / MLU ) ) ),Max( MUR,Max( MUC,DS ) ) ) - Max( Min( MUC ,RCSe ),Max( RRSe,Max( Min( DS ,MUM ),MUC ) ) ) ),MLU ) ) - Min( MUR ,RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.6004762161791302}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.33661417322834647, "obj2": 0.5044196410639086}, {"determining": "( Max( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + Max( MUR,( CS - RCSe ) ) ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5098425196850394, "obj2": 0.28609749820867086}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( Max( AMS,Min( ACS ,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + ( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.017141095969432446}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.2952755905511811, "obj2": 0.5476425743392014}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( MRS + Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( BR ,FirstVNF_RAM_Server ) ) ) ) / FirstVNF_RAM_Server ) + ( Const - MDR ) ) )", "choosing": "( ( ( ( Max( Max( RMSe,RCSe ),MUR ) / ( ( RCSe * DS ) - RMSe ) ) - Min( RCSe ,MUC ) ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( Min( ( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) ) ,CS ) ,( DS / DS ) ) ) )", "obj1": 0.6653543307086615, "obj2": 0.18791255863370362}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( ACS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / ( RRSe * ( CS / RCSe ) ) ) ) ) ) - RCSe ) )", "obj1": 0.9901574803149606, "obj2": 0.005183365726254115}, {"determining": "( ( ( RRS / ( Min( FirstVNF_Mem_Server ,CRS ) - RRS ) ) * ( ( Min( ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( RRS + ACS ) ) ) / ( Const * DDR ) )", "choosing": "( ( DS / Max( Min( ( CS / MUC ) ,Min( MUR ,( MUM + CS ) ) ),( ( MLU + MUR ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.20078740157480315, "obj2": 0.63755884240048}, {"determining": "( ( AMS + ( ( ( Max( BR,( MRS + ( BR / MDR ) ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / Max( RRSe,MUM ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5497850771782641}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09055118110236221, "obj2": 0.8348553987509655}, {"determining": "( Min( ( MRS + Const ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( ( PN * Min( ( RRS / MDR ) ,MDR ) ) / Min( ( ( ARS / Max( CRS,( PN / PN ) ) ) + ARS ) ,DDR ) ) ) )", "choosing": "( ( ( DS / Max( CS,RCSe ) ) * RCSe ) + Min( ( MLU - ( Max( ( ( MUC + CS ) / Min( Max( RMSe,RMSe ) ,RMSe ) ),( ( MUC + MUM ) - CS ) ) + ( MUC / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( Min( MUM ,RMSe ) ,RCSe ) ) ) ) / MLU ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5107536826759704}, {"determining": "Min( ( Min( ( Min( ( ( Const - Max( DDR,DDR ) ) + MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( MLU - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.02700525665909482}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.65748031496063, "obj2": 0.19092325499303867}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,( ( ARS / ARS ) + ARS ) ) * ( Min( FirstVNF_RAM_Server ,Const ) / MDR ) ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + ( DS - ( ( MUM + DS ) * MUR ) ) ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / CS ) ) ) ) ) ) - CS ) )", "obj1": 0.8858267716535433, "obj2": 0.04339977435883847}, {"determining": "( ( CRS + ( Max( MRS,( Min( FirstVNF_CPU_Server ,( AMS * ACS ) ) * ACS ) ) - Max( MRS,Max( ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ),BR ) ) ) ) - Min( AMS ,MRS ) )", "choosing": "Min( ( CS + DS ) ,( ( DS / ( MUC * DS ) ) - Min( ( CS / RMSe ) ,( DS + ( Min( MUM ,( ( MLU + RCSe ) * ( RRSe * DS ) ) ) + MUM ) ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.2601495126162082}, {"determining": "( ( ( RRS / ( Min( ( DDR * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ) * ( ( Min( ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( RRS + ACS ) ) ) / ( Const * DDR ) )", "choosing": "( ( DS / Max( Min( ( CS / MUC ) ,Min( MUR ,( MUM + CS ) ) ),( ( MLU + MUR ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5978971493192292}, {"determining": "( ( FirstVNF_RAM / ARS ) / ( Const - Min( FirstVNF_CPU_Server ,Max( PN,MDR ) ) ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( MUM - RRSe ) - ( DS / ( DS * RMSe ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.3720472440944882, "obj2": 0.4777977891613793}], "21": [{"determining": "( ( MDR * AMS ) - ( ( Min( Min( AMS ,MRS ) ,( DDR - MRS ) ) + DDR ) + MRS ) )", "choosing": "( ( ( ( ( Max( RCSe,RCSe ) - MUM ) - RRSe ) / MUR ) + MLU ) + Min( ( MLU - ( Max( ( ( CS + MUC ) + ( DS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / Max( RRSe,MUM ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,( MLU / RRSe ) ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) + MRS ) )", "choosing": "( ( RCSe + ( MUC - CS ) ) - Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Max( ACS,BR ) ,ACS ) * ( AMS - FirstVNF_CPU ) ) + DDR ) / FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( RCSe / Min( RMSe ,RMSe ) ) ) / Max( ( RCSe / RMSe ),( Max( ( Max( MUC,( MUR / MUR ) ) + RRSe ),( RRSe * RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8635528467108932}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,ACS ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( ( ( Max( MUR,DS ) + ( MLU + MUR ) ) / MUR ) - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,CS ) + Max( MUR,( RRSe / Max( DS,MUM ) ) ) ) / RCSe ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.6968503937007874, "obj2": 0.1540758343689058}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / MUR ) ,( CS - ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) - Min( ( MUC / MUR ) ,( MUM / ( ( ( MUR * RCSe ) / MUC ) / Min( MLU ,RCSe ) ) ) ) ) ) )", "obj1": 0.4311023622047244, "obj2": 0.3760579280987909}, {"determining": "( Min( Max( ( ( ( Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) * ( FirstVNF_CPU - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ),( ( Const / ( ACS + PN ) ) / ( FirstVNF_CPU - AMS ) ) ) ,PN ) / ( ( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - RCSe ) + ( ( Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) / RCSe ) + Min( ( ( ( DS / Min( DS ,( RCSe * MUR ) ) ) / Max( RMSe,MUC ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.42981964657360433}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) ) ,( ( Max( BR,( Max( ( FirstVNF_CPU * Max( ACS,AMS ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) + CRS ) ) / Max( PN,FirstVNF_Mem ) ) + ( ( DDR * CRS ) * CRS ) ) )", "choosing": "( ( MUR / Max( MLU,( Max( MUR,RCSe ) - ( DS + ( RRSe / MUM ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6692913385826772, "obj2": 0.18501386686120783}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - ( Min( DS ,MUC ) + ( RRSe - RRSe ) ) ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( MUR - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7458461275950927}, {"determining": "( ( Min( ( MDR * AMS ) ,( ( ( ( Max( ACS,ARS ) / MRS ) - BR ) - MDR ) * Min( AMS ,FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( CS - MUM ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Min( RCSe ,MUC ) ) ) ) ) - Min( MUM ,MUM ) )", "obj1": 0.5452755905511811, "obj2": 0.2655047896874593}, {"determining": "( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,( ARS - FirstVNF_CPU ) ) ) - ( ( ARS / ( CRS / CRS ) ) * ( BR - ( Min( DDR ,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUC - ( MLU / MUR ) ) - CS ) * ( CS * MUR ) ) - Min( MLU ,CS ) )", "obj1": 0.48031496062992124, "obj2": 0.3234065859863689}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7740329539822995}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6377952755905512, "obj2": 0.22166988542107216}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( ( CS / MUM ) / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8160741343772104}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( Const / ACS ) + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( Max( ( MUR / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / ( DS + CS ) ) / ( MLU / Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( MUM * RRSe ) ) / CS ),MUC ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08719124783143223}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.5177165354330708, "obj2": 0.2820027445177024}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.6181102362204725, "obj2": 0.2227186298248211}, {"determining": "Min( ( Min( ( Min( ( ( PN - ( MRS + ACS ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( Const ,RRS ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM_Server * ARS ) / BR ) - Const ) )", "choosing": "( ( ( Min( ( MUC * MUM ) ,( RCSe + RMSe ) ) * Min( ( MUM / ( Min( RCSe ,( RCSe / RCSe ) ) / Max( RRSe,( CS * MUM ) ) ) ) ,( MUC / MUR ) ) ) - CS ) + Max( ( MUC / ( ( Min( RRSe ,DS ) / DS ) * CS ) ),MUC ) )", "obj1": 0.9153543307086615, "obj2": 0.0331775324211539}, {"determining": "( ( ACS * ( Const * Const ) ) - ( Min( Min( PN ,MDR ) ,Max( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + ( MDR - FirstVNF_CPU ) ) + MRS ) ),MDR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( MUM - MUC ) - MUC ),Min( ( MLU + ( MUC / ( ( RCSe * DS ) - RMSe ) ) ) ,DS ) ) / RRSe ) / ( Max( ( ( ( DS / Max( RCSe,MUM ) ) + MUC ) + CS ),( Max( RCSe,MUR ) * Max( Min( RRSe ,Min( MUM ,MLU ) ),CS ) ) ) / MLU ) )", "obj1": 0.6062992125984252, "obj2": 0.24002696412199911}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( DDR / ( ( ( FirstVNF_RAM + ARS ) / FirstVNF_Mem ) + ACS ) ) ) / Min( ( Min( Const ,MDR ) * ( ACS + BR ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUC * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( RCSe / ( Max( RRSe,MUM ) / Max( ( ( MUM + Max( DS,CS ) ) * MUR ),( RRSe / Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5600561084173625}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( FirstVNF_CPU_Server - MDR ) ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) )", "obj1": 0.7637795275590551, "obj2": 0.09919519363422498}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37287002792506396}, {"determining": "Min( Min( ( MDR + AMS ) ,FirstVNF_RAM_Server ) ,Min( ( Const * ( ACS * AMS ) ) ,ARS ) )", "choosing": "( ( RCSe - ( DS / Max( DS,CS ) ) ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),( MUM * MUC ) ) ,RMSe ) ) + Max( ( ( DS - RCSe ) - CS ),( MUM / MUM ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6623099202115406}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,( ( ( DS - CS ) - CS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5398989859312635}, {"determining": "( Max( Max( FirstVNF_Mem,( ACS / ( Max( FirstVNF_RAM,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ),AMS ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Min( ( Max( ( CS - RMSe ),MLU ) / ( MUM + MUM ) ) ,( ( RCSe / ( CS * Min( MUR ,RRSe ) ) ) - MUM ) ) * Min( ( ( RRSe - RCSe ) / MUR ) ,( MUM / ( MUM - Max( DS,( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.31299212598425197, "obj2": 0.5378959770203993}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( Min( FirstVNF_Mem_Server ,PN ),( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( BR ,FirstVNF_RAM_Server ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( DS / ( DS - RCSe ) ) - Min( CS ,MUM ) )", "obj1": 0.6476377952755905, "obj2": 0.19517577159735933}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( ( ( ARS + FirstVNF_Mem_Server ) - BR ) - BR ) )", "choosing": "Min( Max( CS,MLU ) ,MUC )", "obj1": 0.4468503937007874, "obj2": 0.34812179206897814}, {"determining": "Min( ( Const * MRS ) ,( Min( ( ( ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_RAM ) * PN ) - FirstVNF_CPU_Server ) * Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe - Max( RCSe,MUM ) ) + ( ( ( ( RCSe - Min( MLU ,( MUC + MUM ) ) ) * MUC ) / ( Max( RMSe,( RCSe / Min( ( MUM / RRSe ) ,MUR ) ) ) * RCSe ) ) * MUC ) )", "obj1": 0.8917322834645669, "obj2": 0.04081747179195279}, {"determining": "( Max( ( ( RRS + Const ) - ( ( RRS * MDR ) - BR ) ),ACS ) - ( ( Const * RRS ) * RRS ) )", "choosing": "( ( MUC - ( ( MLU - CS ) + ( MUR - Min( CS ,( MUM * RRSe ) ) ) ) ) + ( MUC * MLU ) )", "obj1": 0.5905511811023622, "obj2": 0.2430210111595982}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) ) * ( AMS - MDR ) ) ) ) )", "choosing": "Min( MUC ,( ( ( DS - CS ) - CS ) - Min( ( Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5512014284392153}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "( ( CRS + ( Max( MRS,( Min( FirstVNF_CPU_Server ,( AMS * ACS ) ) * ACS ) ) - Max( MRS,Max( ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ),BR ) ) ) ) - Min( AMS ,MRS ) )", "choosing": "Min( ( CS + DS ) ,( ( DS / ( MUC * DS ) ) - Min( ( CS / RMSe ) ,( DS + ( Min( MUM ,( ( MLU + RCSe ) * ( RRSe * DS ) ) ) + MUM ) ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.2601495126162082}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.2637795275590551, "obj2": 0.5783856245676975}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU ) / ( ( FirstVNF_RAM / ( PN - ACS ) ) + MDR ) ) / ( Max( MDR,ACS ) / DDR ) ) - ( ACS * PN ) )", "choosing": "( ( ( ( RCSe * MLU ) / MUR ) + MLU ) + Min( ( MLU - ( ( Min( CS ,Max( CS,( RCSe / RRSe ) ) ) + MLU ) + ( RRSe / Max( RRSe,MUM ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( ( RRSe + RMSe ),( RCSe / Min( RCSe ,MLU ) ) ) ) / MUR ) ) )", "obj1": 0.84251968503937, "obj2": 0.059884951978315545}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( RCSe * DS ) - RMSe ) )", "obj1": 0.8700787401574803, "obj2": 0.057326374742811936}, {"determining": "( ( ACS * AMS ) - ( ( AMS * MRS ) + DDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( RMSe + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( Max( Max( Max( MLU,( DS + MLU ) ),( CS + CS ) ),DS ),MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.49803149606299213, "obj2": 0.2944686089332702}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "Max( Min( ( DDR + ( Min( ACS ,AMS ) * ( Min( AMS ,FirstVNF_RAM_Server ) - MDR ) ) ) ,FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,( RMSe + MUC ) ) + DS ) ) / ( DS + MUM ) )", "obj1": 0.1594488188976378, "obj2": 0.706042597131564}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( MDR + Min( BR ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( Max( RRSe,RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,( Max( MUC,MUM ) - ( DS * MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.46135373167162275}, {"determining": "( Max( ( Const * MDR ),ACS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) - Min( CS ,( RRSe + ( ( MUC / MUR ) + ( MUM / ( Max( ( CS / MUM ),CS ) / ( MUC / MUC ) ) ) ) ) ) )", "obj1": 0.5748031496062992, "obj2": 0.24801052229283935}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( ACS * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( ( ( MUR * ( MLU - DS ) ) + RCSe ) / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3543307086614173, "obj2": 0.48786561907975745}, {"determining": "( ( ACS * DDR ) - ( Min( Max( CRS,Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( Const - MDR ) ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Min( ( DS + ( ( CS * MLU ) - MUM ) ) ,Min( MUR ,DS ) ) / ( MUR - ( RCSe * DS ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10405851003521965}, {"determining": "( Min( Max( Max( FirstVNF_Mem_Server,DDR ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + RCSe ) - ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.39173228346456695, "obj2": 0.4547366147896316}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( Max( PN,Min( BR ,Max( BR,( FirstVNF_CPU - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) * Min( MDR ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( RCSe - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7362250341728691}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "( Max( ( ( ( RRS * ( FirstVNF_RAM * FirstVNF_Mem ) ) - ( MRS * PN ) ) - FirstVNF_RAM ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( DS + Min( ( CS * RMSe ) ,MUM ) ) - CS ) )", "obj1": 0.5688976377952756, "obj2": 0.252833381814649}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( MRS + ( ( FirstVNF_CPU - AMS ) / ARS ) ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( MLU - MUC ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - RCSe ) )", "obj1": 0.9448818897637795, "obj2": 0.023419502674890534}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU + AMS ) ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Max( AMS,DDR ) - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,( Min( Max( Max( RRSe,MUC ),DS ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - ( RCSe * DS ) ) ) ) / DS ) - Min( CS ,MUM ) )", "obj1": 0.4094488188976378, "obj2": 0.44440052069475466}, {"determining": "( ( ACS * PN ) - ( Max( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ),DDR ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) * ( MLU * DS ) ) / ( Max( ( ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8188976377952756, "obj2": 0.07117552418623425}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,AMS ) / ( ( FirstVNF_CPU + ( ( Const / FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server + Max( PN,FirstVNF_RAM_Server ) ) + ( MRS / PN ) ) ) ) / ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RRSe / Min( Max( Max( Max( MLU,Max( MUR,MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + ( ( ( RCSe - DS ) - MUM ) - Min( MUC ,Min( MUC ,Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.46855489100277287}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( Max( AMS,Min( ACS ,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + ( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.017141095969432446}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( Max( BR,( Max( FirstVNF_RAM,( Max( ( ( DDR / AMS ) - ACS ),( ( Const * MDR ) * AMS ) ) - Max( ( ( DDR / AMS ) - Min( FirstVNF_Mem ,ARS ) ),( AMS * Max( FirstVNF_CPU_Server,PN ) ) ) ) ) / CRS ) ) * Max( ARS,( ACS - Const ) ) )", "choosing": "( ( ( DS * MUC ) / Max( ( Min( ( CS / MUM ) ,MUM ) / ( MUM / MUC ) ),MUR ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08661417322834646, "obj2": 0.8506069980420871}, {"determining": "Min( ( Min( AMS ,( Min( ( ( CRS * Min( ARS ,BR ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU * Const ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( ( RRSe / CS ),DS ) ,CS ) ) + Min( ( ( MUM - Max( ( ( RMSe - RCSe ) - Min( MUR ,RMSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( Min( ( RCSe / RRSe ) ,( MUR + ( Max( MLU,MLU ) - MLU ) ) ) / ( DS * MUC ) ) - Min( ( RMSe / RMSe ) ,( MUR + DS ) ) )", "obj1": 0.19094488188976377, "obj2": 0.64916328588765}, {"determining": "Max( ( Min( MDR ,( MDR - Max( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ),( ( MDR * DDR ) + Max( Max( DDR,FirstVNF_CPU ),( MDR * FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / BR ) / Const ) ),( Const - MDR ) )", "choosing": "( ( DS / Max( ( Max( ( RRSe / ( MUM + ( MUR / MLU ) ) ),Max( MUR,Max( MUC,DS ) ) ) - Max( Min( MUC ,RCSe ),Max( RRSe,Max( Min( DS ,MUM ),MUC ) ) ) ),MLU ) ) - Min( MUR ,RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.6004762161791302}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( ACS,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUM + ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) ) / RMSe ),MUR ) / Max( ( Min( ( ( ( DS + CS ) * MLU ) + MUR ) ,Min( MUM ,MUM ) ) * ( MLU - RMSe ) ),RMSe ) )", "obj1": 0.9744094488188977, "obj2": 0.009413173621273292}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) * ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,( ( ( ( RCSe / ( MUM + MLU ) ) + ( RRSe - RCSe ) ) * ( ( MLU - ( MUM + RCSe ) ) / DS ) ) + ( RRSe / RMSe ) ) ) / DS ) - ( CS / ( ( MUM * MUC ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.480142835932235}, {"determining": "( ( ( ( MDR - FirstVNF_RAM_Server ) / Min( RRS ,BR ) ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_CPU_Server ,( PN * MDR ) ) - Const ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * Max( RMSe,DS ) ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - ( ( MUM - ( Min( DS ,RMSe ) * DS ) ) * MUM ) )", "obj1": 0.3484251968503937, "obj2": 0.4931229301844405}, {"determining": "Max( ( ( ( DDR / MRS ) + ( Min( ACS ,AMS ) * ( Const - MDR ) ) ) + FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( CRS * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,Min( ( ( ( MLU - CS ) / ( RMSe / MUC ) ) + MUR ) ,RCSe ) ) + DS ) ) / ( DS + MUC ) )", "obj1": 0.16929133858267717, "obj2": 0.7018661254279608}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / FirstVNF_CPU_Server ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS * RMSe ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.4153543307086614, "obj2": 0.43287083017244266}, {"determining": "Max( ( Const - MDR ),( Min( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ,Max( ( ACS - ( ( FirstVNF_Mem * Min( ACS ,BR ) ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( Max( ACS,AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( Max( MLU,( ( DS * RMSe ) - MUR ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6219504534012233}, {"determining": "Max( ( Min( PN ,BR ) + FirstVNF_CPU ),( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * ( RMSe + MUR ) ) ) ) / ( DS + MUC ) )", "obj1": 0.17913385826771652, "obj2": 0.6902123616289018}, {"determining": "( Min( ( MRS + Const ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( ( PN * Min( ( RRS / MDR ) ,MDR ) ) / Min( ( ( ARS / Max( CRS,( PN / PN ) ) ) + ARS ) ,DDR ) ) ) )", "choosing": "( ( ( DS / Max( CS,RCSe ) ) * RCSe ) + Min( ( MLU - ( Max( ( ( MUC + CS ) / Min( Max( RMSe,RMSe ) ,RMSe ) ),( ( MUC + MUM ) - CS ) ) + ( MUC / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( Min( MUM ,RMSe ) ,RCSe ) ) ) ) / MLU ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5107536826759704}, {"determining": "( ( CRS * Min( FirstVNF_CPU_Server ,Min( ( ( ACS * AMS ) + ( ( ( FirstVNF_RAM + FirstVNF_CPU ) / ARS ) + ARS ) ) ,ARS ) ) ) * ( Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( Max( ( FirstVNF_RAM + AMS ),Max( AMS,AMS ) ) / AMS ) ) )", "choosing": "Min( Max( RMSe,Min( Min( RRSe ,( RCSe / MUR ) ) ,( ( RMSe * ( DS - MUR ) ) * CS ) ) ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RRSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.17716535433070865, "obj2": 0.700365624071836}, {"determining": "Min( ( Min( ( Min( ( ( Const - Max( DDR,DDR ) ) + MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( MLU - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.02700525665909482}, {"determining": "( ( PN * ACS ) - Max( Min( Min( PN ,FirstVNF_Mem_Server ) ,( MDR + ( FirstVNF_RAM / Max( ACS,( DDR - ( PN * FirstVNF_CPU ) ) ) ) ) ),( ACS - ( MDR - Const ) ) ) )", "choosing": "( ( ( ( RCSe - RRSe ) - ( MUR + ( Min( MLU ,( MLU - RRSe ) ) - MLU ) ) ) / ( DS * MUC ) ) - Min( ( RMSe / ( ( MUC + ( MUC * CS ) ) + DS ) ) ,( MUR + DS ) ) )", "obj1": 0.7421259842519685, "obj2": 0.11507379763314247}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( MRS + ( ( DDR + ACS ) / ARS ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( Max( ( RRSe + Max( MUC,( MUR / MUC ) ) ),( RRSe / ( RCSe + ( MUR / MUM ) ) ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) - CS ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.0748923316921896}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.49803149606299213, "obj2": 0.2944686089332702}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( CRS * ( FirstVNF_RAM + FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,BR ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUM / MUR ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( Max( MUC,MUM ) / Max( Max( DS,DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8169291338582677, "obj2": 0.07173074182428106}, {"determining": "( ( AMS - ( CRS * PN ) ) - Max( ( ( FirstVNF_Mem_Server - RRS ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( ( MUR * DS ),MUR ),MLU ) / ( ( RCSe * DS ) - MUC ) )", "obj1": 0.7440944881889764, "obj2": 0.11031357800490244}, {"determining": "( ( FirstVNF_RAM * ACS ) - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( MLU - ( RRSe + ( MUR * DS ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3362567968601052}, {"determining": "( ( ( RRS / ( Min( ( DDR * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ) * ( ( Min( ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( RRS + ACS ) ) ) / ( Const * DDR ) )", "choosing": "( ( DS / Max( Min( ( CS / MUC ) ,Min( MUR ,( MUM + CS ) ) ),( ( MLU + MUR ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5978971493192292}, {"determining": "Max( ( Min( MDR ,( ( BR + FirstVNF_Mem_Server ) / DDR ) ) * FirstVNF_Mem_Server ),( Min( MDR ,Max( ( ACS - ( ( ( AMS / FirstVNF_CPU_Server ) * ACS ) - ( ( ACS + ACS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU * Const ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( MUR + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2283464566929134, "obj2": 0.6103365690701137}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) ) ) - CS ) )", "obj1": 0.5019685039370079, "obj2": 0.2907169686351412}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08858267716535433, "obj2": 0.8464432684972332}, {"determining": "( ( ( DDR / PN ) - Max( CRS,FirstVNF_Mem_Server ) ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( MRS + ( ( CRS + FirstVNF_RAM ) / ARS ) ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( ( ( ( CS * DS ) + DS ) + MUM ) + MUR ) / ( Min( RMSe ,RCSe ) / Max( MUM,CS ) ) ),( ( DS / RMSe ) + RMSe ) )", "obj1": 0.9881889763779528, "obj2": 0.005899917223681827}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.45866141732283466, "obj2": 0.34084084070240145}, {"determining": "Max( ( FirstVNF_Mem_Server * ( ( ( DDR + ACS ) / ARS ) + ( ( BR + FirstVNF_Mem_Server ) / DDR ) ) ),( Min( MDR ,Max( ( ( FirstVNF_CPU * ACS ) + FirstVNF_CPU_Server ),( FirstVNF_CPU * Const ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,( RCSe + ( MUR / MUM ) ) ) ) - ( ( DS / Min( DS ,RMSe ) ) - Min( ( CS / RMSe ) ,Min( Min( MLU ,MLU ) ,Min( RCSe ,MUC ) ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6069299265250787}, {"determining": "( Max( FirstVNF_Mem,( Const * ( FirstVNF_CPU + FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,Max( ( Min( ( MUC * DS ) ,( ( ( MUC - CS ) / CS ) + RMSe ) ) * Max( RCSe,Max( MUR,MUR ) ) ),( ( CS - Max( RMSe,( Min( MUM ,RCSe ) * MLU ) ) ) - MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.34722128052839557}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09251968503937008, "obj2": 0.8335218902230243}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.65748031496063, "obj2": 0.19092325499303867}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.33661417322834647, "obj2": 0.5044196410639086}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.39960629921259844, "obj2": 0.4487399150159486}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) / ( ( RCSe * DS ) - RMSe ) )", "obj1": 0.8759842519685039, "obj2": 0.0537652675973024}, {"determining": "Max( ( ( Min( ( Max( ( ( RRS / DDR ) + ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) / Min( MRS ,ACS ) ) ,( ( FirstVNF_CPU_Server / ( BR * MRS ) ) - ( ACS * ( MRS / BR ) ) ) ) - FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ),Max( Min( MDR ,Max( ( FirstVNF_CPU * Const ),( ACS - ( ( ( AMS / FirstVNF_CPU_Server ) * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,Min( Min( MUM ,Max( MUC,DS ) ) ,( ( RRSe / ( DS * RMSe ) ) - Min( ( Min( RRSe ,MLU ) / Max( RMSe,CS ) ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.5890583092537647}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.09055118110236221, "obj2": 0.8348553987509655}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( BR / CRS ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / ( ( RCSe * DS ) - RMSe ) ),( RMSe + ( DS / RMSe ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - Min( ( MUC / RRSe ) ,( MUR / ( MLU / MUC ) ) ) ) )", "obj1": 0.3464566929133858, "obj2": 0.5031791185454566}, {"determining": "( Max( PN,Min( BR ,Max( BR,( ( FirstVNF_RAM_Server - ARS ) + MRS ) ) ) ) * Min( MDR ,( MDR + CRS ) ) )", "choosing": "( ( RMSe + ( Min( RMSe ,DS ) - DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( RCSe - ( CS / ( CS * DS ) ) ) ) / ( RCSe / ( RMSe * ( Max( RMSe,RMSe ) * MUM ) ) ) ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7347501566891471}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * ( MDR / AMS ) ) * ( Const - MDR ) ) ) ) * Min( ( Const * AMS ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),Min( Max( RMSe,MUR ) ,( ( ( DS / DS ) * MLU ) - MUR ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.045384524576316705}, {"determining": "( ( FirstVNF_RAM / ARS ) / ( Const - Min( FirstVNF_CPU_Server ,Max( PN,MDR ) ) ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( MUM - RRSe ) - ( DS / ( DS * RMSe ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.3720472440944882, "obj2": 0.4777977891613793}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.19488188976377951, "obj2": 0.6457998280077561}, {"determining": "( Max( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + Max( MUR,( CS - RCSe ) ) ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5098425196850394, "obj2": 0.28609749820867086}, {"determining": "( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) ) ) + DDR ) + MRS ) )", "choosing": "( ( RCSe + ( MUC - CS ) ) - ( ( Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) / RCSe ) + Min( ( ( ( DS / Min( DS ,( RCSe * MUR ) ) ) / Max( RMSe,MUC ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.001939409661468402}], "22": [{"determining": "( ( CRS * Min( DDR ,Min( ( ( ACS / ACS ) + Max( AMS,MDR ) ) ,ARS ) ) ) * ( Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( Max( ( FirstVNF_RAM + Min( ACS ,( PN / ACS ) ) ),Max( AMS,AMS ) ) / AMS ) ) )", "choosing": "Min( ( DS - Max( ( ( ( RCSe / MUR ) - MUR ) - RRSe ),DS ) ) ,( ( ( MLU + ( RMSe + ( DS / RMSe ) ) ) * Max( ( MUC / RCSe ),( MUM / Max( MUM,( RRSe + ( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * AMS ) - ( ( Min( Min( AMS ,MRS ) ,( DDR - MRS ) ) + DDR ) + MRS ) )", "choosing": "( ( ( ( ( Max( RCSe,RCSe ) - MUM ) - RRSe ) / MUR ) + MLU ) + Min( ( MLU - ( Max( ( ( CS + MUC ) + ( DS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / Max( RRSe,MUM ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( RCSe ,( MLU / RRSe ) ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Max( ACS,BR ) ,ACS ) * ( AMS - FirstVNF_CPU ) ) + DDR ) / FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( RCSe / Min( RMSe ,RMSe ) ) ) / Max( ( RCSe / RMSe ),( Max( ( Max( MUC,( MUR / MUR ) ) + RRSe ),( RRSe * RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8635528467108932}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,ACS ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( ( ( Max( MUR,DS ) + ( MLU + MUR ) ) / MUR ) - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,CS ) + Max( MUR,( RRSe / Max( DS,MUM ) ) ) ) / RCSe ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.6968503937007874, "obj2": 0.1540758343689058}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) ) ,( ( Max( BR,( Max( ( FirstVNF_CPU * Max( ACS,AMS ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) + CRS ) ) / Max( PN,FirstVNF_Mem ) ) + ( ( DDR * CRS ) * CRS ) ) )", "choosing": "( ( MUR / Max( MLU,( Max( MUR,RCSe ) - ( DS + ( RRSe / MUM ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6692913385826772, "obj2": 0.18501386686120783}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( MDR - Max( ARS,ACS ) ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RCSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe / Max( MUC,DS ) ) ) ) - CS ) )", "obj1": 0.42913385826771655, "obj2": 0.38303800165008384}, {"determining": "( Min( Max( ( ( ( Min( ( FirstVNF_CPU_Server * DDR ) ,AMS ) * ( FirstVNF_CPU - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ),( ( Const / ( ACS + PN ) ) / ( FirstVNF_CPU - AMS ) ) ) ,PN ) / ( ( ( Min( MDR ,Max( ( Const - CRS ),FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) / DDR ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - RCSe ) + ( ( Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,RMSe ) ),DS ) ,CS ) / RCSe ) + Min( ( ( ( DS / Min( DS ,( RCSe * MUR ) ) ) / Max( RMSe,MUC ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.42981964657360433}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - ( Min( DS ,MUC ) + ( RRSe - RRSe ) ) ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( MUR - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7458461275950927}, {"determining": "( ( Min( ( MDR * AMS ) ,( ( ( ( Max( ACS,ARS ) / MRS ) - BR ) - MDR ) * Min( AMS ,FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( CS - MUM ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Min( RCSe ,MUC ) ) ) ) ) - Min( MUM ,MUM ) )", "obj1": 0.5452755905511811, "obj2": 0.2655047896874593}, {"determining": "( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,( ARS - FirstVNF_CPU ) ) ) - ( ( ARS / ( CRS / CRS ) ) * ( BR - ( Min( DDR ,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUC - ( MLU / MUR ) ) - CS ) * ( CS * MUR ) ) - Min( MLU ,CS ) )", "obj1": 0.48031496062992124, "obj2": 0.3234065859863689}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7740329539822995}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU / RRS ) ) - DDR ) / Max( Min( ( PN / PN ) ,Max( DDR,PN ) ),Min( CRS ,( FirstVNF_RAM - FirstVNF_RAM ) ) ) ) ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / Min( RMSe ,MUC ) ),MUR ) / Max( MUC,DS ) ) / ( MLU / RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8136320986195572}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.5177165354330708, "obj2": 0.2820027445177024}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.6181102362204725, "obj2": 0.2227186298248211}, {"determining": "( ( ACS * ( Const * Const ) ) - ( Min( Min( PN ,MDR ) ,Max( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + ( MDR - FirstVNF_CPU ) ) + MRS ) ),MDR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( MUM - MUC ) - MUC ),Min( ( MLU + ( MUC / ( ( RCSe * DS ) - RMSe ) ) ) ,DS ) ) / RRSe ) / ( Max( ( ( ( DS / Max( RCSe,MUM ) ) + MUC ) + CS ),( Max( RCSe,MUR ) * Max( Min( RRSe ,Min( MUM ,MLU ) ),CS ) ) ) / MLU ) )", "obj1": 0.6062992125984252, "obj2": 0.24002696412199911}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( DDR / ( ( ( FirstVNF_RAM + ARS ) / FirstVNF_Mem ) + ACS ) ) ) / Min( ( Min( Const ,MDR ) * ( ACS + BR ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUC * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( RCSe / ( Max( RRSe,MUM ) / Max( ( ( MUM + Max( DS,CS ) ) * MUR ),( RRSe / Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5600561084173625}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.2637795275590551, "obj2": 0.5783856245676975}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,( ( ( DS - CS ) - CS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5398989859312635}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( CS ,MUM ) ) ) - CS ) )", "obj1": 0.4940944881889764, "obj2": 0.29583087017466836}, {"determining": "Min( Min( ( MDR + AMS ) ,FirstVNF_RAM_Server ) ,Min( ( Const * ( ACS * AMS ) ) ,ARS ) )", "choosing": "( ( RCSe - ( DS / Max( DS,CS ) ) ) + ( ( RCSe / Min( Max( Max( Max( MLU,( MUC - CS ) ),( CS + CS ) ),( MUM * MUC ) ) ,RMSe ) ) + Max( ( ( DS - RCSe ) - CS ),( MUM / MUM ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6623099202115406}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( Const / ACS ) + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( Max( ( MUR / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / ( DS + CS ) ) / ( MLU / Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( MUM * RRSe ) ) / CS ),MUC ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08719124783143223}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "( Max( ( Max( FirstVNF_RAM,FirstVNF_RAM ) / CRS ),Min( FirstVNF_Mem ,( MRS - CRS ) ) ) * ( AMS - MDR ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( MUM - RRSe ) - ( DS / ( DS * RMSe ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.22440944881889763, "obj2": 0.6180204451375192}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "( Min( ( MRS + Const ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( ( PN * Min( ( RRS / MDR ) ,MDR ) ) / Min( ( ( ARS / Max( CRS,( PN / PN ) ) ) + ARS ) ,DDR ) ) ) )", "choosing": "( ( ( DS / Max( CS,RCSe ) ) * RCSe ) + Min( ( MLU - ( Max( ( ( MUC + CS ) / Min( Max( RMSe,RMSe ) ,RMSe ) ),( ( MUC + MUM ) - CS ) ) + ( MUC / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( Min( MUM ,RMSe ) ,RCSe ) ) ) ) / MLU ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5107536826759704}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) ) * ( AMS - MDR ) ) ) ) )", "choosing": "Min( MUC ,( ( ( DS - CS ) - CS ) - Min( ( Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5512014284392153}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( ( FirstVNF_CPU / RRS ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) )", "obj1": 0.6338582677165354, "obj2": 0.2173561603583178}, {"determining": "( Max( ( Const - ( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) + MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.3686038666424412}, {"determining": "Max( ( FirstVNF_Mem_Server * ( Max( PN,( FirstVNF_Mem / AMS ) ) + ACS ) ),( ( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( ( Min( MDR ,( ( AMS + FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_RAM * ARS ) ),MDR ) - CRS ) ) )", "choosing": "( ( ( DS * ( MUM * ( MUM - RCSe ) ) ) / Min( Min( DS ,CS ) ,RMSe ) ) - MUC )", "obj1": 0.18503937007874016, "obj2": 0.6858614650818847}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) + MRS ) ) + MDR ) ) / ( Max( ( ( DDR / AMS ) - Min( FirstVNF_Mem ,ARS ) ),( AMS * Max( FirstVNF_CPU_Server,PN ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS / MUM ) - MUM ) - MUC ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),( Max( RCSe,MUR ) / ( DS * DS ) ) ) / MLU ) )", "obj1": 0.6456692913385826, "obj2": 0.2118487105720114}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "( Min( ACS ,Max( ( ( Const - MDR ) * Min( ( Min( ( FirstVNF_CPU * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,MDR ) ) ,AMS ) ),Min( FirstVNF_CPU ,( FirstVNF_Mem + ACS ) ) ) ) * ( ( Min( ACS ,( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( Max( RMSe,RCSe ),MUR ) / ( ( RCSe * DS ) - RMSe ) )", "obj1": 0.8700787401574803, "obj2": 0.057326374742811936}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU ) / ( ( FirstVNF_RAM / ( PN - ACS ) ) + MDR ) ) / ( Max( MDR,ACS ) / DDR ) ) - ( ACS * PN ) )", "choosing": "( ( ( ( RCSe * MLU ) / MUR ) + MLU ) + Min( ( MLU - ( ( Min( CS ,Max( CS,( RCSe / RRSe ) ) ) + MLU ) + ( RRSe / Max( RRSe,MUM ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( ( RRSe + RMSe ),( RCSe / Min( RCSe ,MLU ) ) ) ) / MUR ) ) )", "obj1": 0.84251968503937, "obj2": 0.059884951978315545}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,BR ) ,( ( FirstVNF_RAM / ( MRS + ( ( DDR + ACS ) / ( DDR / FirstVNF_RAM ) ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( Max( ( RRSe + Max( MUC,( MUR / MUC ) ) ),( RRSe / ( RCSe + ( MUR / MUM ) ) ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) - CS ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,Min( MUC ,RRSe ) ) ) )", "obj1": 0.7952755905511811, "obj2": 0.07705927750881464}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( ( RRS / ( FirstVNF_RAM_Server * Const ) ) - DDR ) ,MDR ) ) - FirstVNF_RAM ) ) * Min( FirstVNF_Mem ,ARS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( ( MUM + Max( ( DS / MLU ),MUC ) ) * ( DS * ( RCSe - ( RRSe / ( ( DS * MUR ) + RRSe ) ) ) ) ) ) / Max( ( RMSe / RCSe ),( Max( ( MUC + Max( MUC,( ( MUC / MUM ) / ( DS / DS ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( DS,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.831041157585384}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + CRS ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,Min( ( RMSe / RMSe ) ,( MUR + DS ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6338563774672823}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "Max( Min( ( DDR + ( Min( ACS ,AMS ) * ( Min( AMS ,FirstVNF_RAM_Server ) - MDR ) ) ) ,FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,( RMSe + MUC ) ) + DS ) ) / ( DS + MUM ) )", "obj1": 0.1594488188976378, "obj2": 0.706042597131564}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6535433070866141, "obj2": 0.18911972928693024}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( MDR + Min( BR ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( Max( RRSe,RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,( Max( MUC,MUM ) - ( DS * MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.46135373167162275}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( Min( FirstVNF_Mem_Server ,PN ),( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( BR ,FirstVNF_RAM_Server ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( DS / ( DS - RCSe ) ) - Min( CS ,MUM ) )", "obj1": 0.6476377952755905, "obj2": 0.19517577159735933}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( ACS * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( ( ( MUR * ( MLU - DS ) ) + RCSe ) / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3543307086614173, "obj2": 0.48786561907975745}, {"determining": "( ( CRS + ( Max( MRS,( Min( FirstVNF_CPU_Server ,( AMS * ACS ) ) * ACS ) ) - Max( MRS,Max( ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ),BR ) ) ) ) - Min( AMS ,MRS ) )", "choosing": "Min( ( CS + DS ) ,( ( DS / ( MUC * DS ) ) - Min( ( CS / RMSe ) ,( DS + ( Min( MUM ,( ( MLU + RCSe ) * ( RRSe * DS ) ) ) + MUM ) ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.2601495126162082}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ( ( Min( MDR ,MRS ) / PN ) - RRS ) ) / ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) ) - BR ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( ( MLU / RRSe ) ,( RCSe + RMSe ) ) * RCSe ) - CS ) ,MUC )", "obj1": 0.5866141732283464, "obj2": 0.24114758985158502}, {"determining": "( ( PN * ACS ) - Max( Min( Min( PN ,FirstVNF_Mem_Server ) ,( MDR + ( FirstVNF_RAM / Max( ACS,( DDR - ( PN * FirstVNF_CPU ) ) ) ) ) ),( ACS - ( MDR - Const ) ) ) )", "choosing": "( ( ( ( RCSe - RRSe ) - ( MUR + ( Min( MLU ,( MLU - RRSe ) ) - MLU ) ) ) / ( DS * MUC ) ) - Min( ( RMSe / ( ( MUC + ( MUC * CS ) ) + DS ) ) ,( MUR + DS ) ) )", "obj1": 0.7421259842519685, "obj2": 0.11507379763314247}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * ( MDR / AMS ) ) * ( Const - MDR ) ) ) ) * Min( ( Const * AMS ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),Min( Max( RMSe,MUR ) ,( ( ( DS / DS ) * MLU ) - MUR ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.045384524576316705}, {"determining": "( Max( PN,Min( BR ,Max( BR,( FirstVNF_CPU - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) * Min( MDR ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( RCSe - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7362250341728691}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( ACS - MDR ) ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ) ) ) ) )", "obj1": 0.7696850393700787, "obj2": 0.0948085984669267}, {"determining": "Min( ( Min( ( Min( ( ( ( Const - MDR ) - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem * ACS ) - ( Max( ACS,FirstVNF_CPU_Server ) * BR ) ) )", "choosing": "( ( Max( RRSe,MUM ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),Min( CS ,RCSe ) ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - MUR ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.04081747179195279}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,AMS ) / ( ( FirstVNF_CPU + ( ( Const / FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server + Max( PN,FirstVNF_RAM_Server ) ) + ( MRS / PN ) ) ) ) / ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RRSe / Min( Max( Max( Max( MLU,Max( MUR,MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + ( ( ( RCSe - DS ) - MUM ) - Min( MUC ,Min( MUC ,Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.46855489100277287}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( ( ACS * PN ) - ( Max( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ),DDR ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) * ( MLU * DS ) ) / ( Max( ( ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8188976377952756, "obj2": 0.07117552418623425}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) * ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,( ( ( ( RCSe / ( MUM + MLU ) ) + ( RRSe - RCSe ) ) * ( ( MLU - ( MUM + RCSe ) ) / DS ) ) + ( RRSe / RMSe ) ) ) / DS ) - ( CS / ( ( MUM * MUC ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.480142835932235}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU + AMS ) ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Max( AMS,DDR ) - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,( Min( Max( Max( RRSe,MUC ),DS ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - ( RCSe * DS ) ) ) ) / DS ) - Min( CS ,MUM ) )", "obj1": 0.4094488188976378, "obj2": 0.44440052069475466}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( ( ( ARS + FirstVNF_Mem_Server ) - BR ) - BR ) )", "choosing": "Min( Max( CS,MLU ) ,MUC )", "obj1": 0.4468503937007874, "obj2": 0.34812179206897814}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( Min( ( RCSe / RRSe ) ,( MUR + ( Max( MLU,MLU ) - MLU ) ) ) / ( DS * MUC ) ) - Min( ( RMSe / RMSe ) ,( MUR + DS ) ) )", "obj1": 0.19094488188976377, "obj2": 0.64916328588765}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( Max( BR,( Max( FirstVNF_RAM,( Max( ( ( DDR / AMS ) - ACS ),( ( Const * MDR ) * AMS ) ) - Max( ( ( DDR / AMS ) - Min( FirstVNF_Mem ,ARS ) ),( AMS * Max( FirstVNF_CPU_Server,PN ) ) ) ) ) / CRS ) ) * Max( ARS,( ACS - Const ) ) )", "choosing": "( ( ( DS * MUC ) / Max( ( Min( ( CS / MUM ) ,MUM ) / ( MUM / MUC ) ),MUR ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08661417322834646, "obj2": 0.8506069980420871}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS * Min( MDR ,Min( ( CRS / FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR + ( MUR + CS ) ) + ( MLU / MUR ) )", "obj1": 0.9606299212598425, "obj2": 0.01589918463284609}, {"determining": "Min( ( Min( AMS ,( Min( ( ( CRS * Min( ARS ,BR ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU * Const ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( ( RRSe / CS ),DS ) ,CS ) ) + Min( ( ( MUM - Max( ( ( RMSe - RCSe ) - Min( MUR ,RMSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "Min( ( Min( ( Min( ( ( PN - ( MRS + ACS ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( Const ,RRS ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM_Server * ARS ) / BR ) - Const ) )", "choosing": "( ( ( Min( ( MUC * MUM ) ,( RCSe + RMSe ) ) * Min( ( MUM / ( Min( RCSe ,( RCSe / RCSe ) ) / Max( RRSe,( CS * MUM ) ) ) ) ,( MUC / MUR ) ) ) - CS ) + Max( ( MUC / ( ( Min( RRSe ,DS ) / DS ) * CS ) ),MUC ) )", "obj1": 0.9153543307086615, "obj2": 0.0331775324211539}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08858267716535433, "obj2": 0.8464432684972332}, {"determining": "Max( ( Min( ( ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) * ( RRS / ( ACS - ( MDR * ACS ) ) ) ) ,Min( RRS ,Const ) ) * FirstVNF_Mem_Server ),( Const - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( DS / Min( ( MLU - ( ( DS * RMSe ) - Min( ( RCSe / MUR ) ,DS ) ) ) ,( Max( ( ( DS + CS ) + ( RMSe + DS ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - ( ( Min( Min( MUR ,( ( CS - ( MUR * DS ) ) + ( MUM + Min( MUR ,MLU ) ) ) ) ,MUC ) + ( MUC / Min( CS ,( RCSe / ( ( DS / RRSe ) - RRSe ) ) ) ) ) - RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6430432626800384}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( RCSe + Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6389000197643743}, {"determining": "( ( ( ( MDR - FirstVNF_RAM_Server ) / Min( RRS ,BR ) ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_CPU_Server ,( PN * MDR ) ) - Const ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * Max( RMSe,DS ) ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - ( ( MUM - ( Min( DS ,RMSe ) * DS ) ) * MUM ) )", "obj1": 0.3484251968503937, "obj2": 0.4931229301844405}, {"determining": "( Min( Max( Max( FirstVNF_Mem_Server,DDR ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + RCSe ) - ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.39173228346456695, "obj2": 0.4547366147896316}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( BR / CRS ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / ( ( RCSe * DS ) - RMSe ) ),( RMSe + ( DS / RMSe ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - Min( ( MUC / RRSe ) ,( MUR / ( MLU / MUC ) ) ) ) )", "obj1": 0.3464566929133858, "obj2": 0.5031791185454566}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.33661417322834647, "obj2": 0.5044196410639086}, {"determining": "Max( ( ( ( DDR / MRS ) + ( Min( ACS ,AMS ) * ( Const - MDR ) ) ) + FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( CRS * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,Min( ( ( ( MLU - CS ) / ( RMSe / MUC ) ) + MUR ) ,RCSe ) ) + DS ) ) / ( DS + MUC ) )", "obj1": 0.16929133858267717, "obj2": 0.7018661254279608}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / FirstVNF_CPU_Server ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS * RMSe ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.4153543307086614, "obj2": 0.43287083017244266}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( ACS,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUM + ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) ) / RMSe ),MUR ) / Max( ( Min( ( ( ( DS + CS ) * MLU ) + MUR ) ,Min( MUM ,MUM ) ) * ( MLU - RMSe ) ),RMSe ) )", "obj1": 0.9744094488188977, "obj2": 0.009413173621273292}, {"determining": "Max( ( Min( PN ,BR ) + FirstVNF_CPU ),( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * ( RMSe + MUR ) ) ) ) / ( DS + MUC ) )", "obj1": 0.17913385826771652, "obj2": 0.6902123616289018}, {"determining": "( ( ( RRS / ( Min( ( DDR * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ) * ( ( Min( ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( RRS + ACS ) ) ) / ( Const * DDR ) )", "choosing": "( ( DS / Max( Min( ( CS / MUC ) ,Min( MUR ,( MUM + CS ) ) ),( ( MLU + MUR ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5978971493192292}, {"determining": "( ( CRS * Min( FirstVNF_CPU_Server ,Min( ( ( ACS * AMS ) + ( ( ( FirstVNF_RAM + FirstVNF_CPU ) / ARS ) + ARS ) ) ,ARS ) ) ) * ( Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( Max( ( FirstVNF_RAM + AMS ),Max( AMS,AMS ) ) / AMS ) ) )", "choosing": "Min( Max( RMSe,Min( Min( RRSe ,( RCSe / MUR ) ) ,( ( RMSe * ( DS - MUR ) ) * CS ) ) ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RRSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.17716535433070865, "obj2": 0.700365624071836}, {"determining": "Min( ( Min( ( Min( ( ( Const - Max( DDR,DDR ) ) + MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( MLU - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.02700525665909482}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37287002792506396}, {"determining": "( ( FirstVNF_RAM * ACS ) - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( MLU - ( RRSe + ( MUR * DS ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3362567968601052}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / Max( FirstVNF_CPU,AMS ) ),( Min( ( Min( ( FirstVNF_CPU_Server / DDR ) ,AMS ) * ( Const - Max( BR,FirstVNF_CPU ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * MDR ) )", "choosing": "Min( ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) ,( CS / MUR ) )", "obj1": 0.3700787401574803, "obj2": 0.4769342192335457}, {"determining": "Max( ( ( Min( ( Max( ( ( RRS / DDR ) + ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) / Min( MRS ,ACS ) ) ,( ( FirstVNF_CPU_Server / ( BR * MRS ) ) - ( ACS * ( MRS / BR ) ) ) ) - FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ),Max( Min( MDR ,Max( ( FirstVNF_CPU * Const ),( ACS - ( ( ( AMS / FirstVNF_CPU_Server ) * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,Min( Min( MUM ,Max( MUC,DS ) ) ,( ( RRSe / ( DS * RMSe ) ) - Min( ( Min( RRSe ,MLU ) / Max( RMSe,CS ) ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.5890583092537647}, {"determining": "Min( ( Const * MRS ) ,( Min( ( ( ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_RAM ) * PN ) - FirstVNF_CPU_Server ) * Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe - Max( RCSe,MUM ) ) + ( ( ( ( RCSe - Min( MLU ,( MUC + MUM ) ) ) * MUC ) / ( Max( RMSe,( RCSe / Min( ( MUM / RRSe ) ,MUR ) ) ) * RCSe ) ) * MUC ) )", "obj1": 0.8917322834645669, "obj2": 0.04081747179195279}, {"determining": "( Max( ( Const * MDR ),ACS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) - Min( CS ,( RRSe + ( ( MUC / MUR ) + ( MUM / ( Max( ( CS / MUM ),CS ) / ( MUC / MUC ) ) ) ) ) ) )", "obj1": 0.5748031496062992, "obj2": 0.24801052229283935}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( FirstVNF_Mem / PN ) + DDR ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * RCSe ) - CS ) )", "obj1": 0.5807086614173228, "obj2": 0.24524740577321608}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( ( BR + FirstVNF_Mem_Server ) / DDR ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( Max( ( RRSe + Max( MUC,( MUR / MUC ) ) ),( RRSe / ( RCSe + ( MUM / MUM ) ) ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) - CS ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07404723566933002}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( CRS * ( FirstVNF_RAM + FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,BR ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUM / MUR ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( Max( MUC,MUM ) / Max( Max( DS,DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8169291338582677, "obj2": 0.07173074182428106}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( ( Const - DDR ) / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( ( ( RRSe / CS ) - DS ) ,CS ) ) + Min( ( MUM - ( MUM - Max( ( ( RMSe - RCSe ) - Min( MUR ,RMSe ) ),Min( CS ,MUM ) ) ) ) ,( DS / DS ) ) ) )", "obj1": 0.9488188976377953, "obj2": 0.02020145270373777}, {"determining": "( ( AMS - ( CRS * PN ) ) - Max( ( ( FirstVNF_Mem_Server - RRS ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( ( MUR * DS ),MUR ),MLU ) / ( ( RCSe * DS ) - MUC ) )", "obj1": 0.7440944881889764, "obj2": 0.11031357800490244}, {"determining": "Min( ( Min( ( Min( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - ( ( PN * MDR ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( RRSe / MUR ) ,( MUM / ( ( ( MUC / MUR ) / ( RRSe + MLU ) ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + MUM ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03153106765927286}, {"determining": "( Max( ( ( Min( RRS ,( DDR + MDR ) ) / FirstVNF_CPU ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RRSe - ( Max( ( CS - RMSe ),DS ) - ( MUM / MUM ) ) ) ) * MLU ) - CS ) )", "obj1": 0.5649606299212598, "obj2": 0.2547330135199094}, {"determining": "Max( ( FirstVNF_Mem_Server * ( ( ( DDR + ACS ) / ARS ) + ( ( BR + FirstVNF_Mem_Server ) / DDR ) ) ),( Min( MDR ,Max( ( ( FirstVNF_CPU * ACS ) + FirstVNF_CPU_Server ),( FirstVNF_CPU * Const ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,( RCSe + ( MUR / MUM ) ) ) ) - ( ( DS / Min( DS ,RMSe ) ) - Min( ( CS / RMSe ) ,Min( Min( MLU ,MLU ) ,Min( RCSe ,MUC ) ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6069299265250787}, {"determining": "( Max( ( ( ( RRS * ( FirstVNF_RAM * FirstVNF_Mem ) ) - ( MRS * PN ) ) - FirstVNF_RAM ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( DS + Min( ( CS * RMSe ) ,MUM ) ) - CS ) )", "obj1": 0.5688976377952756, "obj2": 0.252833381814649}, {"determining": "( ( PN * AMS ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - MDR ) ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,Min( Max( MUR,( MLU / RRSe ) ) ,( ( ( DS * RMSe ) / DS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.10331151356520171}, {"determining": "( Max( FirstVNF_Mem,( Const * ( FirstVNF_CPU + FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,Max( ( Min( ( MUC * DS ) ,( ( ( MUC - CS ) / CS ) + RMSe ) ) * Max( RCSe,Max( MUR,MUR ) ) ),( ( CS - Max( RMSe,( Min( MUM ,RCSe ) * MLU ) ) ) - MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.34722128052839557}, {"determining": "Max( ( Min( MDR ,( MDR - Max( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ),( ( MDR * DDR ) + Max( Max( DDR,FirstVNF_CPU ),( MDR * FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / BR ) / Const ) ),( Const - MDR ) )", "choosing": "( ( DS / Max( ( Max( ( RRSe / ( MUM + ( MUR / MLU ) ) ),Max( MUR,Max( MUC,DS ) ) ) - Max( Min( MUC ,RCSe ),Max( RRSe,Max( Min( DS ,MUM ),MUC ) ) ) ),MLU ) ) - Min( MUR ,RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.6004762161791302}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( FirstVNF_CPU_Server - MDR ) ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) )", "obj1": 0.7637795275590551, "obj2": 0.09919519363422498}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC / MUR ) ,( CS - ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) - Min( ( MUC / MUR ) ,( MUM / ( ( ( MUR * RCSe ) / MUC ) / Min( MLU ,RCSe ) ) ) ) ) ) )", "obj1": 0.4311023622047244, "obj2": 0.3760579280987909}], "23": [{"determining": "Min( ( Min( ( Max( FirstVNF_RAM,CRS ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( ( ( FirstVNF_Mem * ACS ) - ( Max( ACS,FirstVNF_CPU_Server ) * BR ) ) - ACS ) )", "choosing": "( ( ( Max( ( MUC * DS ),( RCSe + RMSe ) ) * Max( RMSe,( MLU - RCSe ) ) ) - CS ) + ( Min( ( ( RMSe - CS ) - CS ) ,( DS / DS ) ) + ( RCSe / Min( Max( Max( Max( MUM,RCSe ),Min( CS ,RCSe ) ),DS ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Min( DDR ,Min( ( ( ACS / ACS ) + Max( AMS,MDR ) ) ,ARS ) ) ) * ( Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( Max( ( FirstVNF_RAM + Min( ACS ,( PN / ACS ) ) ),Max( AMS,AMS ) ) / AMS ) ) )", "choosing": "Min( ( DS - Max( ( ( ( RCSe / MUR ) - MUR ) - RRSe ),DS ) ) ,( ( ( MLU + ( RMSe + ( DS / RMSe ) ) ) * Max( ( MUC / RCSe ),( MUM / Max( MUM,( RRSe + ( DS - RRSe ) ) ) ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( Max( ACS,BR ) ,ACS ) * ( AMS - FirstVNF_CPU ) ) + DDR ) / FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( RCSe / Min( RMSe ,RMSe ) ) ) / Max( ( RCSe / RMSe ),( Max( ( Max( MUC,( MUR / MUR ) ) + RRSe ),( RRSe * RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8635528467108932}, {"determining": "( ( Max( MRS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - ( ARS - FirstVNF_CPU ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MUM ),MUR ) / Max( MLU,MLU ) )", "obj1": 0.4015748031496063, "obj2": 0.42013670174510015}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( MDR - Max( ARS,ACS ) ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RCSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe / Max( MUC,DS ) ) ) ) - CS ) )", "obj1": 0.42913385826771655, "obj2": 0.38303800165008384}, {"determining": "( Min( Max( Max( FirstVNF_Mem_Server,DDR ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + RCSe ) - ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.39173228346456695, "obj2": 0.4547366147896316}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - ( Min( DS ,MUC ) + ( RRSe - RRSe ) ) ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( MUR - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7458461275950927}, {"determining": "( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,( ARS - FirstVNF_CPU ) ) ) - ( ( ARS / ( CRS / CRS ) ) * ( BR - ( Min( DDR ,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUC - ( MLU / MUR ) ) - CS ) * ( CS * MUR ) ) - Min( MLU ,CS ) )", "obj1": 0.48031496062992124, "obj2": 0.3234065859863689}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7740329539822995}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "Max( ( Min( PN ,BR ) + FirstVNF_CPU ),( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * ( RMSe + MUR ) ) ) ) / ( DS + MUC ) )", "obj1": 0.17913385826771652, "obj2": 0.6902123616289018}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU / RRS ) ) - DDR ) / Max( Min( ( PN / PN ) ,Max( DDR,PN ) ),Min( CRS ,( FirstVNF_RAM - FirstVNF_RAM ) ) ) ) ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / Min( RMSe ,MUC ) ),MUR ) / Max( MUC,DS ) ) / ( MLU / RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8136320986195572}, {"determining": "Max( Min( FirstVNF_Mem_Server ,( RRS * RRS ) ),( Min( Max( ( ACS - ( ( FirstVNF_Mem * Min( RRS ,BR ) ) - ( ( ARS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ,( ( Const / Const ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( ( ( RRSe * ( RRSe - MUM ) ) + Max( ( RRSe / MUR ),MUM ) ) ,( MUM / RMSe ) ) ) ) * CS ) )", "obj1": 0.18503937007874016, "obj2": 0.6536873483727235}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,ACS ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( ( ( Max( MUR,DS ) + ( MLU + MUR ) ) / MUR ) - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,CS ) + Max( MUR,( RRSe / Max( DS,MUM ) ) ) ) / RCSe ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.6968503937007874, "obj2": 0.1540758343689058}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( FirstVNF_CPU_Server - MDR ) ) ) ) + MDR ) ) / ( ACS - ( ACS * PN ) ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.05431621517128827}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * ( MDR / AMS ) ) * ( Const - MDR ) ) ) ) * Min( ( Const * AMS ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),Min( Max( RMSe,MUR ) ,( ( ( DS / DS ) * MLU ) - MUR ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.045384524576316705}, {"determining": "( ( ACS * ( Const * Const ) ) - ( Min( Min( PN ,MDR ) ,Max( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + ( MDR - FirstVNF_CPU ) ) + MRS ) ),MDR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( MUM - MUC ) - MUC ),Min( ( MLU + ( MUC / ( ( RCSe * DS ) - RMSe ) ) ) ,DS ) ) / RRSe ) / ( Max( ( ( ( DS / Max( RCSe,MUM ) ) + MUC ) + CS ),( Max( RCSe,MUR ) * Max( Min( RRSe ,Min( MUM ,MLU ) ),CS ) ) ) / MLU ) )", "obj1": 0.6062992125984252, "obj2": 0.24002696412199911}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( ACS,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUM + ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) ) / RMSe ),MUR ) / Max( ( Min( ( ( ( DS + CS ) * MLU ) + MUR ) ,Min( MUM ,MUM ) ) * ( MLU - RMSe ) ),RMSe ) )", "obj1": 0.9744094488188977, "obj2": 0.009413173621273292}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,( ( ( DS - CS ) - CS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5398989859312635}, {"determining": "( Max( ( MDR - Const ),ACS ) - ( ( Min( BR ,FirstVNF_CPU ) - BR ) - ( PN * CRS ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( RMSe - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.4940944881889764, "obj2": 0.29580530116570275}, {"determining": "( Max( Min( ( ( ( ( FirstVNF_Mem / Const ) * Const ) - ( ( ( MDR + RRS ) / ( Const - DDR ) ) * ( FirstVNF_CPU * CRS ) ) ) * ( ( Max( Min( DDR ,CRS ),PN ) - BR ) - MDR ) ) ,( MDR * AMS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( MLU,( ( ( Min( RCSe ,( MLU + MUM ) ) * MLU ) - CS ) - ( ( ( ( DS / MUC ) * ( MLU - CS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5393700787401575, "obj2": 0.2695697736065891}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM + Max( ( Max( FirstVNF_Mem_Server,( ARS / AMS ) ) - MDR ),BR ) ) ),( Min( Max( ( FirstVNF_CPU_Server + ( ( Max( BR,Const ) - ( PN / MDR ) ) * FirstVNF_Mem_Server ) ),CRS ) ,DDR ) + ( ( ( ( CRS - Min( RRS ,( FirstVNF_CPU_Server / RRS ) ) ) * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) + CRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) + RCSe ) + ( ( RCSe / Min( Max( ( CS / ( ( DS - RCSe ) * ( CS + MUM ) ) ),Max( Max( Min( MUM ,RCSe ),MLU ),Min( RMSe ,( RRSe / MUM ) ) ) ) ,CS ) ) + ( ( MLU - CS ) + DS ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6178104740691426}, {"determining": "Min( ( Min( ( Min( ( ( ( FirstVNF_CPU / Const ) - Min( RRS ,BR ) ) * PN ) ,ACS ) / Min( MRS ,ACS ) ) ,BR ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,( FirstVNF_RAM / Max( ACS,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ( Min( MDR ,MDR ) - MDR ) ) ) ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( ( ( ( ( DS * RMSe ) / DS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) / RMSe ) - ( MUM * ( Min( ( CS / CS ) ,MUC ) + ( ( RCSe * RCSe ) - RCSe ) ) ) ) ,( ( Max( DS,CS ) + Max( MUR,( RRSe / Max( DS,MUM ) ) ) ) / RCSe ) ) + ( ( MUM - ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) ) + ( DS / DS ) ) ) )", "obj1": 0.6948818897637795, "obj2": 0.15471480242692523}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7645104437838857}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( DDR / ( ( ( FirstVNF_RAM + ARS ) / FirstVNF_Mem ) + ACS ) ) ) / Min( ( Min( Const ,MDR ) * ( ACS + BR ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUC * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( RCSe / ( Max( RRSe,MUM ) / Max( ( ( MUM + Max( DS,CS ) ) * MUR ),( RRSe / Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5600561084173625}, {"determining": "Max( ( FirstVNF_Mem_Server * ( ( ( DDR + ACS ) / ARS ) + ( ( BR + FirstVNF_Mem_Server ) / DDR ) ) ),( Min( MDR ,Max( ( ( FirstVNF_CPU * ACS ) + FirstVNF_CPU_Server ),( FirstVNF_CPU * Const ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,( RCSe + ( MUR / MUM ) ) ) ) - ( ( DS / Min( DS ,RMSe ) ) - Min( ( CS / RMSe ) ,Min( Min( MLU ,MLU ) ,Min( RCSe ,MUC ) ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6069299265250787}, {"determining": "( Min( ( MRS + Const ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( ( PN * Min( ( RRS / MDR ) ,MDR ) ) / Min( ( ( ARS / Max( CRS,( PN / PN ) ) ) + ARS ) ,DDR ) ) ) )", "choosing": "( ( ( DS / Max( CS,RCSe ) ) * RCSe ) + Min( ( MLU - ( Max( ( ( MUC + CS ) / Min( Max( RMSe,RMSe ) ,RMSe ) ),( ( MUC + MUM ) - CS ) ) + ( MUC / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( Min( MUM ,RMSe ) ,RCSe ) ) ) ) / MLU ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5107536826759704}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) ) * ( AMS - MDR ) ) ) ) )", "choosing": "Min( MUC ,( ( ( DS - CS ) - CS ) - Min( ( Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5512014284392153}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( ( FirstVNF_CPU / RRS ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) )", "obj1": 0.6338582677165354, "obj2": 0.2173561603583178}, {"determining": "( Max( ( Const - ( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) + MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.3686038666424412}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) + MRS ) ) + MDR ) ) / ( Max( ( ( DDR / AMS ) - Min( FirstVNF_Mem ,ARS ) ),( AMS * Max( FirstVNF_CPU_Server,PN ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS / MUM ) - MUM ) - MUC ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),( Max( RCSe,MUR ) / ( DS * DS ) ) ) / MLU ) )", "obj1": 0.6456692913385826, "obj2": 0.2118487105720114}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS * Min( MDR ,Min( ( CRS / FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR + ( MUR + CS ) ) + ( MLU / MUR ) )", "obj1": 0.9606299212598425, "obj2": 0.01589918463284609}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( ( RRS / ( FirstVNF_RAM_Server * Const ) ) - DDR ) ,MDR ) ) - FirstVNF_RAM ) ) * Min( FirstVNF_Mem ,ARS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( ( MUM + Max( ( DS / MLU ),MUC ) ) * ( DS * ( RCSe - ( RRSe / ( ( DS * MUR ) + RRSe ) ) ) ) ) ) / Max( ( RMSe / RCSe ),( Max( ( MUC + Max( MUC,( ( MUC / MUM ) / ( DS / DS ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( DS,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.831041157585384}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "Max( ( AMS / PN ),Max( FirstVNF_Mem,PN ) )", "choosing": "( ( ( RRSe * DS ) - Max( MLU,( Max( RMSe,DS ) / MUM ) ) ) / Max( ( CS * MLU ),MUR ) )", "obj1": 0.14173228346456693, "obj2": 0.7327587892892451}, {"determining": "Max( Min( ( DDR + ( Min( ACS ,AMS ) * ( Min( AMS ,FirstVNF_RAM_Server ) - MDR ) ) ) ,FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,( RMSe + MUC ) ) + DS ) ) / ( DS + MUM ) )", "obj1": 0.1594488188976378, "obj2": 0.706042597131564}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( MDR + Min( BR ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( Max( RRSe,RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,( Max( MUC,MUM ) - ( DS * MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.46135373167162275}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( Min( FirstVNF_Mem_Server ,PN ),( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( BR ,FirstVNF_RAM_Server ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( DS / ( DS - RCSe ) ) - Min( CS ,MUM ) )", "obj1": 0.6476377952755905, "obj2": 0.19517577159735933}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.033897056789633055}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( ACS * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4874451549855828}, {"determining": "( Max( ( Const * MDR ),ACS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) - Min( CS ,( RRSe + ( ( MUC / MUR ) + ( MUM / ( Max( ( CS / MUM ),CS ) / ( MUC / MUC ) ) ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5760779499345703}, {"determining": "( ( CRS + ( Max( MRS,( Min( FirstVNF_CPU_Server ,( AMS * ACS ) ) * ACS ) ) - Max( MRS,Max( ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ),BR ) ) ) ) - Min( AMS ,MRS ) )", "choosing": "Min( ( CS + DS ) ,( ( DS / ( MUC * DS ) ) - Min( ( CS / RMSe ) ,( DS + ( Min( MUM ,( ( MLU + RCSe ) * ( RRSe * DS ) ) ) + MUM ) ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.2601495126162082}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ( ( Min( MDR ,MRS ) / PN ) - RRS ) ) / ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) ) - BR ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( ( MLU / RRSe ) ,( RCSe + RMSe ) ) * RCSe ) - CS ) ,MUC )", "obj1": 0.5866141732283464, "obj2": 0.24114758985158502}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU ) / ( ( FirstVNF_RAM / ( PN - ACS ) ) + MDR ) ) / ( Max( MDR,ACS ) / DDR ) ) - ( ACS * PN ) )", "choosing": "( ( ( ( RCSe * MLU ) / MUR ) + MLU ) + Min( ( MLU - ( ( Min( CS ,Max( CS,( RCSe / RRSe ) ) ) + MLU ) + ( RRSe / Max( RRSe,MUM ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( ( RRSe + RMSe ),( RCSe / Min( RCSe ,MLU ) ) ) ) / MUR ) ) )", "obj1": 0.84251968503937, "obj2": 0.059884951978315545}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6161417322834646, "obj2": 0.2229756303012398}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( Const / ACS ) + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( Max( ( MUR / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / ( DS + CS ) ) / ( MLU / Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( MUM * RRSe ) ) / CS ),MUC ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08719124783143223}, {"determining": "( ( Min( ( MDR * AMS ) ,( ( ( ( Max( ACS,ARS ) / MRS ) - BR ) - MDR ) * Min( AMS ,FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( CS - MUM ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Min( RCSe ,MUC ) ) ) ) ) - Min( MUM ,MUM ) )", "obj1": 0.5452755905511811, "obj2": 0.2655047896874593}, {"determining": "( ACS - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),Min( ( CS / RMSe ) ,Min( Min( MLU ,MLU ) ,Min( RCSe ,MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.5177165354330708, "obj2": 0.2820027445177024}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "( ( PN * AMS ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( Min( AMS ,MRS ),( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - MDR ) ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + DS ),MUR ) / ( ( RCSe * DS ) - Max( MLU,Min( Max( MUR,( MLU / RRSe ) ) ,( ( ( DS * RMSe ) / DS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.10819322844883715}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( Max( MLU,( ( DS * RMSe ) - MUR ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5039370078740157, "obj2": 0.289353443750159}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,AMS ) / ( ( FirstVNF_CPU + ( ( Const / FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server + Max( PN,FirstVNF_RAM_Server ) ) + ( MRS / PN ) ) ) ) / ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RRSe / Min( Max( Max( Max( MLU,Max( MUR,MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + ( ( ( RCSe - DS ) - MUM ) - Min( MUC ,Min( MUC ,Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.46855489100277287}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( ( ACS * PN ) - ( Max( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ),DDR ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) * ( MLU * DS ) ) / ( Max( ( ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8188976377952756, "obj2": 0.07117552418623425}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.5177165354330708, "obj2": 0.2820027445177024}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) * ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,( ( ( ( RCSe / ( MUM + MLU ) ) + ( RRSe - RCSe ) ) * ( ( MLU - ( MUM + RCSe ) ) / DS ) ) + ( RRSe / RMSe ) ) ) / DS ) - ( CS / ( ( MUM * MUC ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.480142835932235}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( ( ( ARS + FirstVNF_Mem_Server ) - BR ) - BR ) )", "choosing": "Min( Max( CS,MLU ) ,MUC )", "obj1": 0.4468503937007874, "obj2": 0.34812179206897814}, {"determining": "Min( ( Const * MRS ) ,( Min( ( ( ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_RAM ) * PN ) - FirstVNF_CPU_Server ) * Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe - Max( RCSe,MUM ) ) + ( ( ( ( RCSe - Min( MLU ,( MUC + MUM ) ) ) * MUC ) / ( Max( RMSe,( RCSe / Min( ( MUM / RRSe ) ,MUR ) ) ) * RCSe ) ) * MUC ) )", "obj1": 0.8917322834645669, "obj2": 0.04081747179195279}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) ) ,( ( Max( BR,( Max( ( FirstVNF_CPU * Max( ACS,AMS ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) + CRS ) ) / Max( PN,FirstVNF_Mem ) ) + ( ( DDR * CRS ) * CRS ) ) )", "choosing": "( ( MUR / Max( MLU,( Max( MUR,RCSe ) - ( DS + ( RRSe / MUM ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6692913385826772, "obj2": 0.18501386686120783}, {"determining": "( ( ( Min( CRS ,FirstVNF_RAM_Server ) - RRS ) / ( Max( Max( ( MDR / ( BR / BR ) ),Max( ( FirstVNF_Mem - Max( ACS,FirstVNF_Mem_Server ) ),Const ) ),FirstVNF_Mem ) / Const ) ) - Max( ( Min( FirstVNF_Mem ,( DDR - PN ) ) + DDR ),MRS ) )", "choosing": "( Min( ( MUR / ( ( Max( RCSe,RCSe ) - MUM ) - RRSe ) ) ,MLU ) + ( MUM / ( MUC * Min( CS ,MUC ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( Max( BR,( Max( FirstVNF_RAM,( Max( ( ( DDR / AMS ) - ACS ),( ( Const * MDR ) * AMS ) ) - Max( ( ( DDR / AMS ) - Min( FirstVNF_Mem ,ARS ) ),( AMS * Max( FirstVNF_CPU_Server,PN ) ) ) ) ) / CRS ) ) * Max( ARS,( ACS - Const ) ) )", "choosing": "( ( ( DS * MUC ) / Max( ( Min( ( CS / MUM ) ,MUM ) / ( MUM / MUC ) ),MUR ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08661417322834646, "obj2": 0.8506069980420871}, {"determining": "Min( ( Min( AMS ,( Min( ( ( CRS * Min( ARS ,BR ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU * Const ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( ( RRSe / CS ),DS ) ,CS ) ) + Min( ( ( MUM - Max( ( ( RMSe - RCSe ) - Min( MUR ,RMSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "( ( ( ( MDR - FirstVNF_RAM_Server ) / Min( RRS ,BR ) ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_CPU_Server ,( PN * MDR ) ) - Const ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * Max( RMSe,DS ) ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - ( ( MUM - ( Min( DS ,RMSe ) * DS ) ) * MUM ) )", "obj1": 0.3484251968503937, "obj2": 0.4931229301844405}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6535433070866141, "obj2": 0.18911972928693024}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( BR / CRS ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / ( ( RCSe * DS ) - RMSe ) ),( RMSe + ( DS / RMSe ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - Min( ( MUC / RRSe ) ,( MUR / ( MLU / MUC ) ) ) ) )", "obj1": 0.3464566929133858, "obj2": 0.5031791185454566}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.33661417322834647, "obj2": 0.5044196410639086}, {"determining": "Max( ( ( ( DDR / MRS ) + ( Min( ACS ,AMS ) * ( Const - MDR ) ) ) + FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( CRS * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,Min( ( ( ( MLU - CS ) / ( RMSe / MUC ) ) + MUR ) ,RCSe ) ) + DS ) ) / ( DS + MUC ) )", "obj1": 0.16929133858267717, "obj2": 0.7018661254279608}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.6181102362204725, "obj2": 0.2227186298248211}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.2637795275590551, "obj2": 0.5783856245676975}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / ACS ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * ( DS / DS ) ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( Max( ( ( MLU + MUM ) / MUR ),Min( RCSe ,MUR ) ),( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6296191901388912}, {"determining": "Max( ( Min( MDR ,( MDR - Max( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ),( ( MDR * DDR ) + Max( Max( DDR,FirstVNF_CPU ),( MDR * FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / BR ) / Const ) ),( Const - MDR ) )", "choosing": "( ( DS / Max( ( Max( ( RRSe / ( MUM + ( MUR / MLU ) ) ),Max( MUR,Max( MUC,DS ) ) ) - Max( Min( MUC ,RCSe ),Max( RRSe,Max( Min( DS ,MUM ),MUC ) ) ) ),MLU ) ) - Min( MUR ,RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.6004762161791302}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,Min( CRS ,FirstVNF_Mem ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.0945591584277995}, {"determining": "Max( ( ( Min( ( Max( ( ( RRS / DDR ) + ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) / Min( MRS ,ACS ) ) ,( ( FirstVNF_CPU_Server / ( BR * MRS ) ) - ( ACS * ( MRS / BR ) ) ) ) - FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ),Max( Min( MDR ,Max( ( FirstVNF_CPU * Const ),( ACS - ( ( ( AMS / FirstVNF_CPU_Server ) * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,Min( Min( MUM ,Max( MUC,DS ) ) ,( ( RRSe / ( DS * RMSe ) ) - Min( ( Min( RRSe ,MLU ) / Max( RMSe,CS ) ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.5890583092537647}, {"determining": "( ( AMS - ( CRS * PN ) ) - Max( ( ( FirstVNF_Mem_Server - RRS ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( ( MUR * DS ),MUR ),MLU ) / ( ( RCSe * DS ) - MUC ) )", "obj1": 0.7440944881889764, "obj2": 0.11031357800490244}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( ( CRS * Min( FirstVNF_CPU_Server ,Min( ( ( ACS * AMS ) + ( ( ( FirstVNF_RAM + FirstVNF_CPU ) / ARS ) + ARS ) ) ,ARS ) ) ) * ( Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( Max( ( FirstVNF_RAM + AMS ),Max( AMS,AMS ) ) / AMS ) ) )", "choosing": "Min( Max( RMSe,Min( Min( RRSe ,( RCSe / MUR ) ) ,( ( RMSe * ( DS - MUR ) ) * CS ) ) ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RRSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.17716535433070865, "obj2": 0.700365624071836}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "( ( FirstVNF_RAM * ACS ) - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( MLU - ( RRSe + ( MUR * DS ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3362567968601052}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37287002792506396}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / Max( FirstVNF_CPU,AMS ) ),( Min( ( Min( ( FirstVNF_CPU_Server / DDR ) ,AMS ) * ( Const - Max( BR,FirstVNF_CPU ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * MDR ) )", "choosing": "Min( ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) ,( CS / MUR ) )", "obj1": 0.3700787401574803, "obj2": 0.4769342192335457}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( BR ,FirstVNF_RAM_Server ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6653543307086615, "obj2": 0.18877287881433377}, {"determining": "( ( ( RRS / ( Min( ( DDR * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ) * ( ( Min( ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( Min( ( Min( Max( DDR,DDR ) ,AMS ) * ( Max( RRS,ACS ) - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ACS ) ) ) / ( Const * DDR ) )", "choosing": "( ( DS / Max( Min( ( CS - MUC ) ,Min( MUR ,( MUM + CS ) ) ),( ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - ( ( RRSe / RMSe ) + Max( ( ( MUC + CS ) + ( MLU - RCSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.5977251067997914}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( RCSe * DS ) - RMSe ) ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.4547244094488189, "obj2": 0.343595592932589}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( Min( ( RCSe / RRSe ) ,( MUR + ( Max( MLU,MLU ) - MLU ) ) ) / ( DS * MUC ) ) - Min( ( RMSe / RMSe ) ,( MUR + DS ) ) )", "obj1": 0.19094488188976377, "obj2": 0.64916328588765}, {"determining": "Min( ( Min( ( Min( ( ( ( Const - MDR ) - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem * ACS ) - ( Max( ACS,FirstVNF_CPU_Server ) * BR ) ) )", "choosing": "( ( Max( RRSe,MUM ) - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),Min( CS ,RCSe ) ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - MUR ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.04081747179195279}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( FirstVNF_Mem / PN ) + DDR ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * RCSe ) - CS ) )", "obj1": 0.5807086614173228, "obj2": 0.24524740577321608}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( CRS * ( FirstVNF_RAM + FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,BR ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUM / MUR ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( Max( MUC,MUM ) / Max( Max( DS,DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8169291338582677, "obj2": 0.07173074182428106}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08858267716535433, "obj2": 0.8464432684972332}, {"determining": "Min( ( Min( ( Min( ( ( Const - Max( DDR,DDR ) ) + MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - MDR ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ),DS ) ,CS ) ) + Min( ( ( MLU - RCSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.02700525665909482}, {"determining": "( ( PN * AMS ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - MDR ) ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( RRSe - RCSe ) + ( Min( ( ( ( Max( MUR,DS ) + ( MLU + MUR ) ) / MUR ) - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,CS ) + Max( MUR,( RRSe / Max( DS,MUM ) ) ) ) / RCSe ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7834645669291339, "obj2": 0.08116162632891039}, {"determining": "Max( ( Min( ( ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) * ( RRS / ( ACS - ( MDR * ACS ) ) ) ) ,Min( RRS ,Const ) ) * FirstVNF_Mem_Server ),( Const - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( DS / Min( ( MLU - ( ( DS * RMSe ) - Min( ( RCSe / MUR ) ,DS ) ) ) ,( Max( ( ( DS + CS ) + ( RMSe + DS ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - ( ( Min( Min( MUR ,( ( CS - ( MUR * DS ) ) + ( MUM + Min( MUR ,MLU ) ) ) ) ,MUC ) + ( MUC / Min( CS ,( RCSe / ( ( DS / RRSe ) - RRSe ) ) ) ) ) - RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6430432626800384}, {"determining": "Min( ( Min( ( Min( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - ( ( PN * MDR ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( RRSe / MUR ) ,( MUM / ( ( ( MUC / MUR ) / ( RRSe + MLU ) ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + MUM ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03153106765927286}, {"determining": "( Max( ( ( Min( RRS ,( DDR + MDR ) ) / FirstVNF_CPU ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RRSe - ( Max( ( CS - RMSe ),DS ) - ( MUM / MUM ) ) ) ) * MLU ) - CS ) )", "obj1": 0.5649606299212598, "obj2": 0.2547330135199094}], "24": [{"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Max( FirstVNF_RAM,CRS ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( ( ( FirstVNF_Mem * ACS ) - ( Max( ACS,FirstVNF_CPU_Server ) * BR ) ) - ACS ) )", "choosing": "( ( ( Max( ( MUC * DS ),( RCSe + RMSe ) ) * Max( RMSe,( MLU - RCSe ) ) ) - CS ) + ( Min( ( ( RMSe - CS ) - CS ) ,( DS / DS ) ) + ( RCSe / Min( Max( Max( Max( MUM,RCSe ),Min( CS ,RCSe ) ),DS ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( PN / FirstVNF_RAM_Server ) + Min( ( DDR + ( Min( ACS ,( BR / Const ) ) * Min( Max( AMS,ARS ) ,MDR ) ) ) ,FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,( MRS + ARS ) ) - FirstVNF_RAM ) ) * ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RCSe ,MUR ) / ( Max( MUR,MUC ) / MUR ) ) / ( CS * RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8576522560637384}, {"determining": "( ( Max( MRS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - ( ARS - FirstVNF_CPU ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MUM ),MUR ) / Max( MLU,MLU ) )", "obj1": 0.4015748031496063, "obj2": 0.42013670174510015}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( MDR - Max( ARS,ACS ) ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RCSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe / Max( MUC,DS ) ) ) ) - CS ) )", "obj1": 0.42913385826771655, "obj2": 0.38303800165008384}, {"determining": "( Min( Max( Max( FirstVNF_Mem_Server,DDR ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + RCSe ) - ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.39173228346456695, "obj2": 0.4547366147896316}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - ( Min( DS ,MUC ) + ( RRSe - RRSe ) ) ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( MUR - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7458461275950927}, {"determining": "( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,( ARS - FirstVNF_CPU ) ) ) - ( ( ARS / ( CRS / CRS ) ) * ( BR - ( Min( DDR ,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUC - ( MLU / MUR ) ) - CS ) * ( CS * MUR ) ) - Min( MLU ,CS ) )", "obj1": 0.48031496062992124, "obj2": 0.3234065859863689}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7740329539822995}, {"determining": "Max( ( Min( PN ,BR ) + FirstVNF_CPU ),( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * ( RMSe + MUR ) ) ) ) / ( DS + MUC ) )", "obj1": 0.17913385826771652, "obj2": 0.6902123616289018}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU / RRS ) ) - DDR ) / Max( Min( ( PN / PN ) ,Max( DDR,PN ) ),Min( CRS ,( FirstVNF_RAM - FirstVNF_RAM ) ) ) ) ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / Min( RMSe ,MUC ) ),MUR ) / Max( MUC,DS ) ) / ( MLU / RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8136320986195572}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( FirstVNF_CPU_Server - MDR ) ) ) ) + MDR ) ) / ( ACS - ( ACS * PN ) ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.05431621517128827}, {"determining": "Max( Min( FirstVNF_Mem_Server ,( RRS * RRS ) ),( Min( Max( ( ACS - ( ( FirstVNF_Mem * Min( RRS ,BR ) ) - ( ( ARS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ,( ( Const / Const ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( ( ( RRSe * ( RRSe - MUM ) ) + Max( ( RRSe / MUR ),MUM ) ) ,( MUM / RMSe ) ) ) ) * CS ) )", "obj1": 0.18503937007874016, "obj2": 0.6536873483727235}, {"determining": "( Max( ( MDR - Const ),ACS ) - ( ( Min( BR ,FirstVNF_CPU ) - BR ) - ( PN * CRS ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( RMSe - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.4940944881889764, "obj2": 0.29580530116570275}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,ACS ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.7066929133858267, "obj2": 0.15020897109842568}, {"determining": "( ( ACS * Max( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU_Server ,DDR ) / ( Min( ( RRS / MDR ) ,( CRS + FirstVNF_RAM ) ) * PN ) ) ),( ( ( Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,( AMS * MDR ) ) ) * ( MDR / AMS ) ) * ( Const - MDR ) ) ) ) * Min( ( Const * AMS ) ,MDR ) )", "choosing": "Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS + RMSe ) ),Min( Max( RMSe,MUR ) ,( ( ( DS / DS ) * MLU ) - MUR ) ) ) + ( RRSe / RMSe ) ) ) ,( ( Max( DS,MUM ) + Max( MUR,( RRSe / Min( RCSe ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.8799212598425197, "obj2": 0.045384524576316705}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "( ( ACS * ( Const * Const ) ) - ( Min( Min( PN ,MDR ) ,Max( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + ( MDR - FirstVNF_CPU ) ) + MRS ) ),MDR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( MUM - MUC ) - MUC ),Min( ( MLU + ( MUC / ( ( RCSe * DS ) - RMSe ) ) ) ,DS ) ) / RRSe ) / ( Max( ( ( ( DS / Max( RCSe,MUM ) ) + MUC ) + CS ),( Max( RCSe,MUR ) * Max( Min( RRSe ,Min( MUM ,MLU ) ),CS ) ) ) / MLU ) )", "obj1": 0.6062992125984252, "obj2": 0.24002696412199911}, {"determining": "( ( Min( Max( PN,MDR ) ,( MDR + ( DDR / ( Max( Max( PN,Const ),MRS ) - Const ) ) ) ) / ( ACS * BR ) ) - ( PN * AMS ) )", "choosing": "( ( RMSe * MUR ) + ( Min( ( ( MUM * ( ( ( MUM * RRSe ) * Max( CS,RRSe ) ) - Min( RRSe ,( MUR / RCSe ) ) ) ) + Min( RCSe ,RCSe ) ) ,( ( Max( DS,CS ) + Max( ( RRSe / Max( DS,RRSe ) ),MUM ) ) / RCSe ) ) + Min( ( RCSe / RMSe ) ,( DS / DS ) ) ) )", "obj1": 0.7834645669291339, "obj2": 0.08097818247587628}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( CRS * ( FirstVNF_RAM + FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,BR ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUM / MUR ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( Max( MUC,MUM ) / Max( Max( DS,DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8169291338582677, "obj2": 0.07173074182428106}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( FirstVNF_Mem / PN ) + DDR ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * RCSe ) - CS ) )", "obj1": 0.5807086614173228, "obj2": 0.24524740577321608}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,Min( CRS ,FirstVNF_Mem ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.0945591584277995}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7645104437838857}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20887967831758358}, {"determining": "Min( ( Min( ( ( MRS + ACS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( Min( FirstVNF_RAM_Server ,BR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,PN ) ),Min( FirstVNF_RAM_Server ,BR ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( Max( DS,( RMSe + ( RMSe + ( RRSe + DS ) ) ) ) * ( MUC * RMSe ) ) ) - Min( Min( MUM ,( Min( RCSe ,( ( ( MUR - MUC ) / MLU ) * ( RMSe / Min( RRSe ,RRSe ) ) ) ) - RMSe ) ) ,Min( ( Max( MLU,( MUR * MUC ) ) / RMSe ) ,RCSe ) ) )", "obj1": 0.6476377952755905, "obj2": 0.1949958508031028}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "Max( ( AMS / PN ),Max( FirstVNF_Mem,PN ) )", "choosing": "( ( ( RRSe * DS ) - Max( MLU,( Max( RMSe,DS ) / MUM ) ) ) / Max( ( CS * MLU ),MUR ) )", "obj1": 0.14173228346456693, "obj2": 0.7327587892892451}, {"determining": "( ( PN * AMS ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( Min( AMS ,MRS ),( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - MDR ) ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + DS ),MUR ) / ( ( RCSe * DS ) - Max( MLU,Min( Max( MUR,( MLU / RRSe ) ) ,( ( ( DS * RMSe ) / DS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.10819322844883715}, {"determining": "( Min( ( MRS + Const ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( ( PN * Min( ( RRS / MDR ) ,MDR ) ) / Min( ( ( ARS / Max( CRS,( PN / PN ) ) ) + ARS ) ,DDR ) ) ) )", "choosing": "( ( ( DS / Max( CS,RCSe ) ) * RCSe ) + Min( ( MLU - ( Max( ( ( MUC + CS ) / Min( Max( RMSe,RMSe ) ,RMSe ) ),( ( MUC + MUM ) - CS ) ) + ( MUC / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( Min( MUM ,RMSe ) ,RCSe ) ) ) ) / MLU ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5107536826759704}, {"determining": "( Max( ( Const - ( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) + MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.3686038666424412}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,( ( ( DS - CS ) - CS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5398989859312635}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS * Min( MDR ,Min( ( CRS / FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR + ( MUR + CS ) ) + ( MLU / MUR ) )", "obj1": 0.9606299212598425, "obj2": 0.01589918463284609}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( ( ( ARS + FirstVNF_Mem_Server ) - BR ) - BR ) )", "choosing": "Min( Max( CS,MLU ) ,MUC )", "obj1": 0.4468503937007874, "obj2": 0.34812179206897814}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( DDR / ( ( ( FirstVNF_RAM + ARS ) / FirstVNF_Mem ) + ACS ) ) ) / Min( ( Min( Const ,MDR ) * ( ACS + BR ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUC * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( RCSe / ( Max( RRSe,MUM ) / Max( ( ( MUM + Max( DS,CS ) ) * MUR ),( RRSe / Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5600561084173625}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( ( RRS / ( FirstVNF_RAM_Server * Const ) ) - DDR ) ,MDR ) ) - FirstVNF_RAM ) ) * Min( FirstVNF_Mem ,ARS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( ( MUM + Max( ( DS / MLU ),MUC ) ) * ( DS * ( RCSe - ( RRSe / ( ( DS * MUR ) + RRSe ) ) ) ) ) ) / Max( ( RMSe / RCSe ),( Max( ( MUC + Max( MUC,( ( MUC / MUM ) / ( DS / DS ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( DS,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.831041157585384}, {"determining": "( FirstVNF_CPU_Server + ( BR / ( ( CRS - Max( ( MDR * CRS ),( ( ( RRS - DDR ) * FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) - Min( ( RCSe + ( ( Max( MUM,( MUR * DS ) ) / ( Max( CS,( CS / RCSe ) ) / RMSe ) ) * Max( Min( ( ( RRSe / RMSe ) * ( MUC + MLU ) ) ,MUC ),DS ) ) ) ,MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.7194317866088872}, {"determining": "( ( ( Min( CRS ,FirstVNF_RAM_Server ) - RRS ) / ( Max( Max( ( MDR / ( BR / BR ) ),Max( ( FirstVNF_Mem - Max( ACS,FirstVNF_Mem_Server ) ),Const ) ),FirstVNF_Mem ) / Const ) ) - Max( ( Min( FirstVNF_Mem ,( DDR - PN ) ) + DDR ),MRS ) )", "choosing": "( Min( ( MUR / ( ( Max( RCSe,RCSe ) - MUM ) - RRSe ) ) ,MLU ) + ( MUM / ( MUC * Min( CS ,MUC ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "Max( Min( ( DDR + ( Min( ACS ,AMS ) * ( Min( AMS ,FirstVNF_RAM_Server ) - MDR ) ) ) ,FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,( RMSe + MUC ) ) + DS ) ) / ( DS + MUM ) )", "obj1": 0.1594488188976378, "obj2": 0.706042597131564}, {"determining": "Max( ( ( Min( ( Max( ( ( RRS / DDR ) + ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) / Min( MRS ,ACS ) ) ,( ( FirstVNF_CPU_Server / ( BR * MRS ) ) - ( ACS * ( MRS / BR ) ) ) ) - FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ),Max( Min( MDR ,Max( ( FirstVNF_CPU * Const ),( ACS - ( ( ( AMS / FirstVNF_CPU_Server ) * ACS ) - ( ( ACS + FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,Min( Min( MUM ,Max( MUC,DS ) ) ,( ( RRSe / ( DS * RMSe ) ) - Min( ( Min( RRSe ,MLU ) / Max( RMSe,CS ) ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.5890583092537647}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( MDR + Min( BR ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( Max( RRSe,RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,( Max( MUC,MUM ) - ( DS * MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.46135373167162275}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( ACS * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4874451549855828}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37287002792506396}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ( ( Min( MDR ,MRS ) / PN ) - RRS ) ) / ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) ) - BR ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( ( MLU / RRSe ) ,( RCSe + RMSe ) ) * RCSe ) - CS ) ,MUC )", "obj1": 0.5866141732283464, "obj2": 0.24114758985158502}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.033897056789633055}, {"determining": "( Max( FirstVNF_Mem,( CRS + Max( Min( ( ( Const - MDR ) * Max( FirstVNF_CPU,PN ) ) ,ACS ),Min( MRS ,ACS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( MLU,Min( Max( MUR,( MLU / RRSe ) ) ,( ( ( DS * RMSe ) / DS ) - ( ( CS / RMSe ) * ( DS + MUR ) ) ) ) ) / ( MUR * CS ) ) + ( Max( ( MLU - MLU ),Min( RCSe ,RCSe ) ) / ( ( DS - RCSe ) / MUR ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2192733420049602}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( RCSe * DS ) - RMSe ) ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.4547244094488189, "obj2": 0.343595592932589}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6161417322834646, "obj2": 0.2229756303012398}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU ) / ( ( FirstVNF_RAM / ( PN - ACS ) ) + MDR ) ) / ( Max( MDR,ACS ) / DDR ) ) - ( ACS * PN ) )", "choosing": "( ( ( ( RCSe * MLU ) / MUR ) + MLU ) + Min( ( MLU - ( ( Min( CS ,Max( CS,( RCSe / RRSe ) ) ) + MLU ) + ( RRSe / Max( RRSe,MUM ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( ( RRSe + RMSe ),( RCSe / Min( RCSe ,MLU ) ) ) ) / MUR ) ) )", "obj1": 0.84251968503937, "obj2": 0.059884951978315545}, {"determining": "Max( ( Const - MDR ),( Min( ( ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ,Max( ( ( Const - MDR ) - ( ( FirstVNF_Mem * Min( ACS ,BR ) ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( Max( ACS,AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( Max( MLU,( ( DS * RMSe ) - MUR ) ),( Max( ( ( DS + DS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6379827146549552}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,AMS ) / ( ( FirstVNF_CPU + ( ( Const / FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server + Max( PN,FirstVNF_RAM_Server ) ) + ( MRS / PN ) ) ) ) / ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RRSe / Min( Max( Max( Max( MLU,Max( MUR,MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + ( ( ( RCSe - DS ) - MUM ) - Min( MUC ,Min( MUC ,Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.46855489100277287}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( ( ACS * PN ) - ( Max( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ),DDR ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) * ( MLU * DS ) ) / ( Max( ( ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8188976377952756, "obj2": 0.07117552418623425}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( Const / ACS ) + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( Max( ( MUR / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / ( DS + CS ) ) / ( MLU / Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( MUM * RRSe ) ) / CS ),MUC ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08719124783143223}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM + Max( ( Max( FirstVNF_Mem_Server,( ARS / AMS ) ) - MDR ),BR ) ) ),( Min( Max( ( FirstVNF_CPU_Server + ( ( Max( BR,Const ) - ( PN / MDR ) ) * FirstVNF_Mem_Server ) ),CRS ) ,DDR ) + ( ( ( ( CRS - Min( RRS ,( FirstVNF_CPU_Server / RRS ) ) ) * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) + CRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) + RCSe ) + ( ( RCSe / Min( Max( ( CS / ( ( DS - RCSe ) * ( CS + MUM ) ) ),Max( Max( Min( MUM ,RCSe ),MLU ),Min( RMSe ,( RRSe / MUM ) ) ) ) ,CS ) ) + ( ( MLU - CS ) + DS ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6178104740691426}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) * ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,( ( ( ( RCSe / ( MUM + MLU ) ) + ( RRSe - RCSe ) ) * ( ( MLU - ( MUM + RCSe ) ) / DS ) ) + ( RRSe / RMSe ) ) ) / DS ) - ( CS / ( ( MUM * MUC ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.480142835932235}, {"determining": "( Max( Min( ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) * ( ( ( Min( RRS ,ACS ) / FirstVNF_CPU ) - BR ) - MDR ) ) ,( MDR * AMS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( MLU,( ( ( Min( RCSe ,( RCSe + RMSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( MLU - DS ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5275590551181102, "obj2": 0.2758635570602323}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + ( Min( MDR ,FirstVNF_CPU_Server ) / ( ( FirstVNF_Mem_Server + Max( PN,BR ) ) - CRS ) ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( RMSe - MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / MUR ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6318529240990785}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.26968503937007876, "obj2": 0.5704729974942714}, {"determining": "( ( FirstVNF_RAM * ACS ) - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( MLU - ( RRSe + ( MUR * DS ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3362567968601052}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Const ) - FirstVNF_RAM ) ) * ( AMS - MDR ) ) ) ) )", "choosing": "Min( MUC ,( ( ( DS - CS ) - CS ) - Min( ( Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5512014284392153}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08858267716535433, "obj2": 0.8464432684972332}, {"determining": "( ( ( ( MDR - FirstVNF_RAM_Server ) / Min( RRS ,BR ) ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_CPU_Server ,( PN * MDR ) ) - Const ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * Max( RMSe,DS ) ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - ( ( MUM - ( Min( DS ,RMSe ) * DS ) ) * MUM ) )", "obj1": 0.3484251968503937, "obj2": 0.4931229301844405}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( Max( AMS,Min( ACS ,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / Max( Max( MLU,( ( DS * RMSe ) - MUR ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.9488188976377953, "obj2": 0.020184751293221437}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6535433070866141, "obj2": 0.18911972928693024}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( BR / CRS ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / ( ( RCSe * DS ) - RMSe ) ),( RMSe + ( DS / RMSe ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - Min( ( MUC / RRSe ) ,( MUR / ( MLU / MUC ) ) ) ) )", "obj1": 0.3464566929133858, "obj2": 0.5031791185454566}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.33661417322834647, "obj2": 0.5044196410639086}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( FirstVNF_Mem / PN ) + DDR ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5492125984251969, "obj2": 0.2619274023549701}, {"determining": "Max( ( ( ( DDR / MRS ) + ( Min( ACS ,AMS ) * ( Const - MDR ) ) ) + FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( CRS * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,Min( ( ( ( MLU - CS ) / ( RMSe / MUC ) ) + MUR ) ,RCSe ) ) + DS ) ) / ( DS + MUC ) )", "obj1": 0.16929133858267717, "obj2": 0.7018661254279608}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( ACS,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUM + ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) ) / RMSe ),MUR ) / Max( ( Min( ( ( ( DS + CS ) * MLU ) + MUR ) ,Min( MUM ,MUM ) ) * ( MLU - RMSe ) ),RMSe ) )", "obj1": 0.9744094488188977, "obj2": 0.009413173621273292}, {"determining": "( ( AMS - ( CRS * PN ) ) - Max( ( ( FirstVNF_Mem_Server - RRS ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( ( MUR * DS ),MUR ),MLU ) / ( ( RCSe * DS ) - MUC ) )", "obj1": 0.7440944881889764, "obj2": 0.11031357800490244}, {"determining": "( ( CRS * Min( FirstVNF_CPU_Server ,Min( ( ( ACS * AMS ) + ( ( ( FirstVNF_RAM + FirstVNF_CPU ) / ARS ) + ARS ) ) ,ARS ) ) ) * ( Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( Max( ( FirstVNF_RAM + AMS ),Max( AMS,AMS ) ) / AMS ) ) )", "choosing": "Min( Max( RMSe,Min( Min( RRSe ,( RCSe / MUR ) ) ,( ( RMSe * ( DS - MUR ) ) * CS ) ) ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RRSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.17716535433070865, "obj2": 0.700365624071836}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) ) ,( ( Max( BR,( Max( ( FirstVNF_CPU * Max( ACS,AMS ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) + CRS ) ) / Max( PN,FirstVNF_Mem ) ) + ( ( DDR * CRS ) * CRS ) ) )", "choosing": "( ( MUR / Max( MLU,( Max( MUR,RCSe ) - ( DS + ( RRSe / MUM ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6692913385826772, "obj2": 0.18501386686120783}, {"determining": "( ( RRS * CRS ) - ( Max( MRS,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,Min( ( FirstVNF_Mem + AMS ) ,MRS ) ) ) )", "choosing": "( Min( Max( ( MUR + RMSe ),Min( MUR ,MUM ) ) ,( ( ( MUM + DS ) * MUM ) - ( MUM / DS ) ) ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5452652136227852}, {"determining": "Min( ( Min( AMS ,( Min( ( ( CRS * Min( ARS ,BR ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU * Const ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( ( RRSe / CS ),DS ) ,CS ) ) + Min( ( ( MUM - Max( ( ( RMSe - RCSe ) - Min( MUR ,RMSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "Max( ( Min( ( ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) * ( RRS / ( ACS - ( MDR * ACS ) ) ) ) ,Min( RRS ,Const ) ) * FirstVNF_Mem_Server ),( Const - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( DS / Min( ( MLU - ( ( DS * RMSe ) - Min( ( RCSe / MUR ) ,DS ) ) ) ,( Max( ( ( DS + CS ) + ( RMSe + DS ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - ( ( Min( Min( MUR ,( ( CS - ( MUR * DS ) ) + ( MUM + Min( MUR ,MLU ) ) ) ) ,MUC ) + ( MUC / Min( CS ,( RCSe / ( ( DS / RRSe ) - RRSe ) ) ) ) ) - RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6430432626800384}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( FirstVNF_Mem / RRS ) + ( DDR / PN ) ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( MUR + CS ) ) + ( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / Max( Max( MLU,( ( DS * RMSe ) - MUR ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5118110236220472, "obj2": 0.28506510031345844}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "Max( ( Min( MDR ,( MDR - Max( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ),( ( MDR * DDR ) + Max( Max( DDR,FirstVNF_CPU ),( MDR * FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / BR ) / Const ) ),( Const - MDR ) )", "choosing": "( ( DS / Max( ( Max( ( RRSe / ( MUM + ( MUR / MLU ) ) ),Max( MUR,Max( MUC,DS ) ) ) - Max( Min( MUC ,RCSe ),Max( RRSe,Max( Min( DS ,MUM ),MUC ) ) ) ),MLU ) ) - Min( MUR ,RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.6004762161791302}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( ACS,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUM + ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) ) / RMSe ),MUR ) / Max( ( Min( ( ( ( DS + CS ) * MLU ) + MUR ) ,Min( MUM ,MUM ) ) * ( MLU - RMSe ) ),RMSe ) )", "obj1": 0.9763779527559056, "obj2": 0.008423558405662255}, {"determining": "Min( ( Min( ( Min( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - ( ( PN * MDR ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( RRSe / MUR ) ,( MUM / ( ( ( MUC / MUR ) / ( RRSe + MLU ) ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Min( Max( Max( Max( MUM,RCSe ),( DS + MUM ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03153106765927286}, {"determining": "Max( ( ( ACS + MDR ) + ( FirstVNF_RAM / RRS ) ),( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + CRS ) + ( DDR + MDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( MUR ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.610672419696844}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( Max( MLU,( ( DS * RMSe ) - MUR ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5039370078740157, "obj2": 0.289353443750159}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / Max( FirstVNF_CPU,AMS ) ),( Min( ( Min( ( FirstVNF_CPU_Server / DDR ) ,AMS ) * ( Const - Max( BR,FirstVNF_CPU ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * MDR ) )", "choosing": "Min( ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) ,( CS / MUR ) )", "obj1": 0.3700787401574803, "obj2": 0.4769342192335457}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.2637795275590551, "obj2": 0.5783856245676975}, {"determining": "( ( ( RRS / ( Min( ( DDR * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ) * ( ( Min( ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_CPU ) + FirstVNF_RAM ) ,ACS ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( Min( ( Min( Max( DDR,DDR ) ,AMS ) * ( Max( RRS,ACS ) - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ACS ) ) ) / ( Const * DDR ) )", "choosing": "( ( DS / Max( Min( ( CS - MUC ) ,Min( MUR ,( MUM + CS ) ) ),( ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - ( ( RRSe / RMSe ) + Max( ( ( MUC + CS ) + ( MLU - RCSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.5977251067997914}, {"determining": "Max( ( FirstVNF_Mem_Server * ( ( ( DDR + ACS ) / ARS ) + ( ( BR + FirstVNF_Mem_Server ) / DDR ) ) ),( Min( MDR ,Max( ( ( FirstVNF_CPU * ACS ) + FirstVNF_CPU_Server ),( FirstVNF_CPU * Const ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,( RCSe + ( MUR / MUM ) ) ) ) - ( ( DS / Min( DS ,RMSe ) ) - Min( ( CS / RMSe ) ,Min( Min( MLU ,MLU ) ,Min( RCSe ,MUC ) ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6069299265250787}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ARS * Min( FirstVNF_Mem_Server ,BR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.6181102362204725, "obj2": 0.2227186298248211}, {"determining": "( Max( Min( ( ( ( ( FirstVNF_Mem / Const ) * Const ) - ( ( ( MDR + RRS ) / ( Const - DDR ) ) * ( FirstVNF_CPU * CRS ) ) ) * ( ( Max( Min( DDR ,CRS ),PN ) - BR ) - MDR ) ) ,( MDR * AMS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( MLU,( ( ( Min( RCSe ,( MLU + MUM ) ) * MLU ) - CS ) - ( ( ( ( DS / MUC ) * ( MLU - CS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5393700787401575, "obj2": 0.2695697736065891}, {"determining": "( ( Min( ( MDR * AMS ) ,( ( ( ( Max( ACS,ARS ) / MRS ) - BR ) - MDR ) * Min( AMS ,FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( CS - MUM ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Min( RCSe ,MUC ) ) ) ) ) - Min( MUM ,MUM ) )", "obj1": 0.5452755905511811, "obj2": 0.2655047896874593}], "25": [{"determining": "( ( ACS * PN ) - Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU / RRS ) ) + DDR ) / ( ACS + FirstVNF_CPU ) ) ,Const ) + FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / Max( ( DS * RCSe ),RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( PN / FirstVNF_RAM_Server ) + Min( ( DDR + ( Min( ACS ,( BR / Const ) ) * Min( Max( AMS,ARS ) ,MDR ) ) ) ,FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,( MRS + ARS ) ) - FirstVNF_RAM ) ) * ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RCSe ,MUR ) / ( Max( MUR,MUC ) / MUR ) ) / ( CS * RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8576522560637384}, {"determining": "( ( Max( MRS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - ( ARS - FirstVNF_CPU ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MUM ),MUR ) / Max( MLU,MLU ) )", "obj1": 0.4015748031496063, "obj2": 0.42013670174510015}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( MDR - Max( ARS,ACS ) ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RCSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe / Max( MUC,DS ) ) ) ) - CS ) )", "obj1": 0.42322834645669294, "obj2": 0.3874650613980654}, {"determining": "Max( Min( FirstVNF_Mem_Server ,( RRS * RRS ) ),( Min( Max( ( ACS - ( ( FirstVNF_Mem * Min( RRS ,BR ) ) - ( ( ARS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ,( ( Const / Const ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( ( ( RRSe * ( RRSe - MUM ) ) + Max( ( RRSe / MUR ),MUM ) ) ,( MUM / RMSe ) ) ) ) * CS ) )", "obj1": 0.18503937007874016, "obj2": 0.6536873483727235}, {"determining": "( Min( Max( Max( FirstVNF_Mem_Server,DDR ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + RCSe ) - ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.39173228346456695, "obj2": 0.4547366147896316}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - ( Min( DS ,MUC ) + ( RRSe - RRSe ) ) ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( MUR - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7458461275950927}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7740329539822995}, {"determining": "Max( ( Min( PN ,BR ) + FirstVNF_CPU ),( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * ( RMSe + MUR ) ) ) ) / ( DS + MUC ) )", "obj1": 0.17913385826771652, "obj2": 0.6902123616289018}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU / RRS ) ) - DDR ) / Max( Min( ( PN / PN ) ,Max( DDR,PN ) ),Min( CRS ,( FirstVNF_RAM - FirstVNF_RAM ) ) ) ) ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / Min( RMSe ,MUC ) ),MUR ) / Max( MUC,DS ) ) / ( MLU / RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8136320986195572}, {"determining": "( ( Min( Max( PN,MDR ) ,( MDR + ( DDR / ( Max( Max( PN,Const ),MRS ) - Const ) ) ) ) / ( ACS * BR ) ) - ( PN * AMS ) )", "choosing": "( ( RMSe * MUR ) + ( Min( ( ( MUM * ( ( ( MUM * RRSe ) * Max( CS,RRSe ) ) - Min( RRSe ,( MUR / RCSe ) ) ) ) + Min( RCSe ,RCSe ) ) ,( ( Max( DS,CS ) + Max( ( RRSe / Max( DS,RRSe ) ),MUM ) ) / RCSe ) ) + Min( ( RCSe / RMSe ) ,( DS / DS ) ) ) )", "obj1": 0.7834645669291339, "obj2": 0.08097818247587628}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,ACS ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.7066929133858267, "obj2": 0.15020897109842568}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20887967831758358}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( RMSe + ( DS / RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.5905511811023622, "obj2": 0.23420527567088595}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( CRS * ( FirstVNF_RAM + FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,BR ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUM / MUR ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( Max( MUC,MUM ) / Max( Max( DS,DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8169291338582677, "obj2": 0.07173074182428106}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + ( Min( CRS ,BR ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.25196850393700787, "obj2": 0.5882521189471053}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7645104437838857}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( FirstVNF_CPU_Server - MDR ) ) ) ) + MDR ) ) / ( ACS - ( ACS * PN ) ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.05431621517128827}, {"determining": "Min( ( Min( ( ( MRS + ACS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( Min( FirstVNF_RAM_Server ,BR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,PN ) ),Min( FirstVNF_RAM_Server ,BR ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( Max( DS,( RMSe + ( RMSe + ( RRSe + DS ) ) ) ) * ( MUC * RMSe ) ) ) - Min( Min( MUM ,( Min( RCSe ,( ( ( MUR - MUC ) / MLU ) * ( RMSe / Min( RRSe ,RRSe ) ) ) ) - RMSe ) ) ,Min( ( Max( MLU,( MUR * MUC ) ) / RMSe ) ,RCSe ) ) )", "obj1": 0.6476377952755905, "obj2": 0.1949958508031028}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "Max( ( AMS / PN ),Max( FirstVNF_Mem,PN ) )", "choosing": "( ( ( RRSe * DS ) - Max( MLU,( Max( RMSe,DS ) / MUM ) ) ) / Max( ( CS * MLU ),MUR ) )", "obj1": 0.14173228346456693, "obj2": 0.7327587892892451}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6161417322834646, "obj2": 0.2229756303012398}, {"determining": "( Min( ( MRS + Const ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( ( PN * Min( ( RRS / MDR ) ,MDR ) ) / Min( ( ( ARS / Max( CRS,( PN / PN ) ) ) + ARS ) ,DDR ) ) ) )", "choosing": "( ( ( DS / Max( CS,RCSe ) ) * RCSe ) + Min( ( MLU - ( Max( ( ( MUC + CS ) / Min( Max( RMSe,RMSe ) ,RMSe ) ),( ( MUC + MUM ) - CS ) ) + ( MUC / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( Min( MUM ,RMSe ) ,RCSe ) ) ) ) / MLU ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5107536826759704}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "( Max( ( Const - ( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) + MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.3686038666424412}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,( ( ( DS - CS ) - CS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5398989859312635}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( MDR + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( RMSe - CS ) - CS ) ,( DS / DS ) ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( ( MUC / Min( DS ,CS ) ) - ( ( MUM + ( RRSe / CS ) ) / ( ( MUR * RCSe ) / MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.9606299212598425, "obj2": 0.015111619354468947}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( ( ( ARS + FirstVNF_Mem_Server ) - BR ) - BR ) )", "choosing": "Min( Max( CS,MLU ) ,MUC )", "obj1": 0.4468503937007874, "obj2": 0.34812179206897814}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( ( RRS / ( FirstVNF_RAM_Server * Const ) ) - DDR ) ,MDR ) ) - FirstVNF_RAM ) ) * Min( FirstVNF_Mem ,ARS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( ( MUM + Max( ( DS / MLU ),MUC ) ) * ( DS * ( RCSe - ( RRSe / ( ( DS * MUR ) + RRSe ) ) ) ) ) ) / Max( ( RMSe / RCSe ),( Max( ( MUC + Max( MUC,( ( MUC / MUM ) / ( DS / DS ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( DS,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.831041157585384}, {"determining": "Max( ( Min( MDR ,( MDR - Max( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ),( ( MDR * DDR ) + Max( Max( DDR,FirstVNF_CPU ),( MDR * FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / BR ) / Const ) ),( Const - MDR ) )", "choosing": "( ( DS / Max( ( Max( ( RRSe / ( MUM + ( MUR / MLU ) ) ),Max( MUR,Max( MUC,DS ) ) ) - Max( Min( MUC ,RCSe ),Max( RRSe,Max( Min( DS ,MUM ),MUC ) ) ) ),MLU ) ) - Min( MUR ,RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.6004762161791302}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.8720472440944882, "obj2": 0.04901678088135341}, {"determining": "( ( ( Min( CRS ,FirstVNF_RAM_Server ) - RRS ) / ( Max( Max( ( MDR / ( BR / BR ) ),Max( ( FirstVNF_Mem - Max( ACS,FirstVNF_Mem_Server ) ),Const ) ),FirstVNF_Mem ) / Const ) ) - Max( ( Min( FirstVNF_Mem ,( DDR - PN ) ) + DDR ),MRS ) )", "choosing": "( Min( ( MUR / ( ( Max( RCSe,RCSe ) - MUM ) - RRSe ) ) ,MLU ) + ( MUM / ( MUC * Min( CS ,MUC ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( MDR + Min( BR ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( Max( RRSe,RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,( Max( MUC,MUM ) - ( DS * MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.46135373167162275}, {"determining": "Max( Min( ( DDR + ( Min( ACS ,AMS ) * ( Min( AMS ,FirstVNF_RAM_Server ) - MDR ) ) ) ,FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,( RMSe + MUC ) ) + DS ) ) / ( DS + MUM ) )", "obj1": 0.1594488188976378, "obj2": 0.706042597131564}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / ( FirstVNF_Mem - ( AMS * Const ) ) ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( CS * DS ) + DS ) + MUM ) / Min( ( ( MUC / ( ( MUM * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6220472440944882, "obj2": 0.21876583926706078}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,Min( CRS ,FirstVNF_Mem ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.0945591584277995}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU ) / ( ( FirstVNF_RAM / ( PN - ACS ) ) + MDR ) ) / ( Max( MDR,ACS ) / DDR ) ) - ( ACS * PN ) )", "choosing": "( ( ( ( RCSe * MLU ) / MUR ) + MLU ) + Min( ( MLU - ( ( Min( CS ,Max( CS,( RCSe / RRSe ) ) ) + MLU ) + ( RRSe / Max( RRSe,MUM ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( ( RRSe + RMSe ),( RCSe / Min( RCSe ,MLU ) ) ) ) / MUR ) ) )", "obj1": 0.84251968503937, "obj2": 0.059884951978315545}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( Const / ACS ) + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( Max( ( MUR / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / ( DS + CS ) ) / ( MLU / Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( MUM * RRSe ) ) / CS ),MUC ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08719124783143223}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + ( Min( MDR ,FirstVNF_CPU_Server ) / ( ( FirstVNF_Mem_Server + Max( PN,BR ) ) - CRS ) ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( RMSe - MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / MUR ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6318529240990785}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( ( FirstVNF_Mem / RRS ) + DDR ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( RCSe,MLU ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.10685796202353584}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( Min( Min( MDR ,PN ) ,Max( FirstVNF_CPU_Server,Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( RCSe * DS ) - ( RRSe - RMSe ) ) ) ,( RMSe + ( DS / RRSe ) ) ) ) - CS ) )", "obj1": 0.4862204724409449, "obj2": 0.3014250091025744}, {"determining": "( Max( Max( ( Min( PN ,BR ) + FirstVNF_CPU ),( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / ( DS + MUC ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.484251968503937, "obj2": 0.3143709608979567}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,( ARS - FirstVNF_CPU ) ) ) - ( ( ARS / ( CRS / CRS ) ) * ( BR - ( Min( DDR ,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUC - ( MLU / MUR ) ) - CS ) * ( CS * MUR ) ) - Min( MLU ,CS ) )", "obj1": 0.48031496062992124, "obj2": 0.3234065859863689}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,AMS ) / ( ( FirstVNF_CPU + ( ( Const / FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server + Max( PN,FirstVNF_RAM_Server ) ) + ( MRS / PN ) ) ) ) / ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RRSe / Min( Max( Max( Max( MLU,Max( MUR,MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + ( ( ( RCSe - DS ) - MUM ) - Min( MUC ,Min( MUC ,Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.46855489100277287}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( RCSe * DS ) - RMSe ) ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.4547244094488189, "obj2": 0.343595592932589}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6535433070866141, "obj2": 0.18911972928693024}, {"determining": "( ( ACS * PN ) - ( Max( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ),DDR ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) * ( MLU * DS ) ) / ( Max( ( ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8188976377952756, "obj2": 0.07117552418623425}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.2637795275590551, "obj2": 0.5783856245676975}, {"determining": "( Max( ( Const - ( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) / MRS ) ) ),( FirstVNF_RAM_Server * PN ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) + ( RRSe + ( ( MLU * Max( Max( MUR,MUR ),Max( RRSe,MUR ) ) ) * RMSe ) ) )", "obj1": 0.42913385826771655, "obj2": 0.37877474682236184}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ACS * AMS ) + ( Max( AMS,Min( ACS ,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / Max( Max( MLU,( ( DS * RMSe ) - MUR ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.9488188976377953, "obj2": 0.020184751293221437}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) * ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,( ( ( ( RCSe / ( MUM + MLU ) ) + ( RRSe - RCSe ) ) * ( ( MLU - ( MUM + RCSe ) ) / DS ) ) + ( RRSe / RMSe ) ) ) / DS ) - ( CS / ( ( MUM * MUC ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.480142835932235}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( CS ,Max( ( Max( MUM,RCSe ) / MUC ),RRSe ) ) ) ) - CS ) )", "obj1": 0.21456692913385828, "obj2": 0.6229573472911288}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37287002792506396}, {"determining": "Max( ( Min( ( ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) * ( RRS / ( ACS - ( MDR * ACS ) ) ) ) ,Min( RRS ,Const ) ) * FirstVNF_Mem_Server ),( Const - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( DS / Min( ( MLU - ( ( DS * RMSe ) - Min( ( RCSe / MUR ) ,DS ) ) ) ,( Max( ( ( DS + CS ) + ( RMSe + DS ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - ( ( Min( Min( MUR ,( ( CS - ( MUR * DS ) ) + ( MUM + Min( MUR ,MLU ) ) ) ) ,MUC ) + ( MUC / Min( CS ,( RCSe / ( ( DS / RRSe ) - RRSe ) ) ) ) ) - RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6430432626800384}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.08858267716535433, "obj2": 0.8464432684972332}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( BR / CRS ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / ( ( RCSe * DS ) - RMSe ) ),( RMSe + ( DS / RMSe ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - Min( ( MUC / RRSe ) ,( MUR / ( MLU / MUC ) ) ) ) )", "obj1": 0.3464566929133858, "obj2": 0.5031791185454566}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( RCSe / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.33661417322834647, "obj2": 0.5044196410639086}, {"determining": "Max( ( ( ( DDR / MRS ) + ( Min( ACS ,AMS ) * ( Const - MDR ) ) ) + FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( CRS * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,Min( ( ( ( MLU - CS ) / ( RMSe / MUC ) ) + MUR ) ,RCSe ) ) + DS ) ) / ( DS + MUC ) )", "obj1": 0.16929133858267717, "obj2": 0.7018661254279608}, {"determining": "( Max( ( MDR - Const ),ACS ) - ( ( Min( BR ,FirstVNF_CPU ) - BR ) - ( PN * CRS ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( RMSe - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.4940944881889764, "obj2": 0.29580530116570275}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) ) ,( ( Max( BR,( Max( ( FirstVNF_CPU * Max( ACS,AMS ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) + CRS ) ) / Max( PN,FirstVNF_Mem ) ) + ( ( DDR * CRS ) * CRS ) ) )", "choosing": "( ( MUR / Max( MLU,( Max( MUR,RCSe ) - ( DS + ( RRSe / MUM ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6692913385826772, "obj2": 0.18501386686120783}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( DDR / ( ( ( FirstVNF_RAM + ARS ) / FirstVNF_Mem ) + ACS ) ) ) / Min( ( Min( Const ,MDR ) * ( ACS + BR ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUC * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( RCSe / ( Max( RRSe,MUM ) / Max( ( ( MUM + Max( DS,CS ) ) * MUR ),( RRSe / Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5600561084173625}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( ACS,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUM + ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) ) / RMSe ),MUR ) / Max( ( Min( ( ( ( DS + CS ) * MLU ) + MUR ) ,Min( MUM ,MUM ) ) * ( MLU - RMSe ) ),RMSe ) )", "obj1": 0.9744094488188977, "obj2": 0.009413173621273292}, {"determining": "( Max( Min( ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) * ( ( ( Min( RRS ,ACS ) / FirstVNF_CPU ) - BR ) - MDR ) ) ,( MDR * AMS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( MLU,( ( ( Min( RCSe ,( RCSe + RMSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( MLU - DS ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5275590551181102, "obj2": 0.2758635570602323}, {"determining": "( Max( Min( ( Min( FirstVNF_Mem ,AMS ) * ( ( ( Min( RRS ,Const ) / FirstVNF_CPU ) - BR ) - MDR ) ) ,( MDR * AMS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( MLU,( ( DS + ( MUM / MUM ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / MUC ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5177165354330708, "obj2": 0.28195372508308364}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( ACS * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4874451549855828}, {"determining": "Max( ( Const - MDR ),( Min( ( ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ,Max( ( ( Const - MDR ) - ( ( FirstVNF_Mem * Min( ACS ,BR ) ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( Max( ACS,AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( Max( MLU,( ( DS * RMSe ) - MUR ) ),( Max( ( ( DS + DS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6379827146549552}, {"determining": "( ( AMS - ( CRS * PN ) ) - Max( ( ( FirstVNF_Mem_Server - RRS ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( ( MUR * DS ),MUR ),MLU ) / ( ( RCSe * DS ) - MUC ) )", "obj1": 0.7440944881889764, "obj2": 0.11031357800490244}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9114173228346457, "obj2": 0.034706416424133926}, {"determining": "( ( CRS * Min( FirstVNF_CPU_Server ,Min( ( ( ACS * AMS ) + ( ( ( FirstVNF_RAM + FirstVNF_CPU ) / ARS ) + ARS ) ) ,ARS ) ) ) * ( Max( CRS,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - ( Max( ( FirstVNF_RAM + AMS ),Max( AMS,AMS ) ) / AMS ) ) )", "choosing": "Min( Max( RMSe,Min( Min( RRSe ,( RCSe / MUR ) ) ,( ( RMSe * ( DS - MUR ) ) * CS ) ) ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RRSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.17716535433070865, "obj2": 0.700365624071836}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "( ( RRS * CRS ) - ( Max( MRS,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,Min( ( FirstVNF_Mem + AMS ) ,MRS ) ) ) )", "choosing": "( Min( Max( ( MUR + RMSe ),Min( MUR ,MUM ) ) ,( ( ( MUM + DS ) * MUM ) - ( MUM / DS ) ) ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5452652136227852}, {"determining": "( ( ( ( MDR - FirstVNF_RAM_Server ) / Min( RRS ,BR ) ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_CPU_Server ,( PN * MDR ) ) - Const ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * Max( RMSe,DS ) ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - ( ( MUM - ( Min( DS ,RMSe ) * DS ) ) * MUM ) )", "obj1": 0.3484251968503937, "obj2": 0.4931229301844405}, {"determining": "Min( ( Min( AMS ,( Min( ( ( CRS * Min( ARS ,BR ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU * Const ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( ( RRSe / CS ),DS ) ,CS ) ) + Min( ( ( MUM - Max( ( ( RMSe - RCSe ) - Min( MUR ,RMSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ( ( Min( MDR ,MRS ) / PN ) - RRS ) ) / ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) ) - BR ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( ( MLU / RRSe ) ,( RCSe + RMSe ) ) * RCSe ) - CS ) ,MUC )", "obj1": 0.5866141732283464, "obj2": 0.24114758985158502}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) + ( DDR / PN ) ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7163341829428361}, {"determining": "( Min( ACS ,( Max( MRS,( ( Const * ( RRS / RRS ) ) * ACS ) ) * ( AMS + Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( ( ACS / ( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Max( ( ( ( Min( Max( ( RMSe - RCSe ),MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ),MUR ) / ( ( ( RCSe - ( Max( RMSe,MUR ) * CS ) ) * ( MLU - RMSe ) ) - RMSe ) )", "obj1": 0.9763779527559056, "obj2": 0.008423558405662255}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / Max( FirstVNF_CPU,AMS ) ),( Min( ( Min( ( FirstVNF_CPU_Server / DDR ) ,AMS ) * ( Const - Max( BR,FirstVNF_CPU ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * MDR ) )", "choosing": "Min( ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) ,( CS / MUR ) )", "obj1": 0.3700787401574803, "obj2": 0.4769342192335457}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) + MRS ) ) / FirstVNF_RAM_Server ) + ( ( DDR * FirstVNF_RAM_Server ) * CRS ) ) )", "choosing": "( ( DS / Max( MLU,( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6673228346456693, "obj2": 0.18745529104841924}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM + Max( ( Max( FirstVNF_Mem_Server,( ARS / AMS ) ) - MDR ),BR ) ) ),( Min( Max( ( FirstVNF_CPU_Server + ( ( Max( BR,Const ) - ( PN / MDR ) ) * FirstVNF_Mem_Server ) ),CRS ) ,DDR ) + ( ( ( ( CRS - Min( RRS ,( FirstVNF_CPU_Server / RRS ) ) ) * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) + CRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) + RCSe ) + ( ( RCSe / Min( Max( ( CS / ( ( DS - RCSe ) * ( CS + MUM ) ) ),Max( Max( Min( MUM ,RCSe ),MLU ),Min( RMSe ,( RRSe / MUM ) ) ) ) ,CS ) ) + ( ( MLU - CS ) + DS ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6178104740691426}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( Max( ( ACS - FirstVNF_CPU_Server ),( FirstVNF_Mem - ( CRS + DDR ) ) ) / Const ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MLU / ( MUR + MUC ) ) + ( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU / Max( MUM,MLU ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( ( ( Max( RCSe,MUM ) * RMSe ) * MUM ) * MUC ) ) ) - Min( CS ,( MUR - MUR ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2512967515779506}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( Min( ( FirstVNF_CPU_Server * CRS ) ,Min( ( ( ( Const - DDR ) * MDR ) + ( Max( AMS,Min( ACS ,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( RRSe * RRSe ) - Min( MUM ,RCSe ) )", "obj1": 0.9488188976377953, "obj2": 0.020184751293221437}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.26968503937007876, "obj2": 0.5704729974942714}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,Max( MRS,( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8937007874015748, "obj2": 0.04177408750208998}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "( ( Min( ( MDR * AMS ) ,( ( ( ( Max( ACS,ARS ) / MRS ) - BR ) - MDR ) * Min( AMS ,FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( CS - MUM ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Min( RCSe ,MUC ) ) ) ) ) - Min( MUM ,MUM ) )", "obj1": 0.5452755905511811, "obj2": 0.2655047896874593}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( ( Max( RRSe,( MUR - ( MUM / RRSe ) ) ) + ( RMSe / MUM ) ) + DS ) / DS ) ) )", "obj1": 0.4625984251968504, "obj2": 0.33681929103764674}, {"determining": "Min( ( Min( ( Min( ( ( PN - Min( PN ,MDR ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.045180162820525824}], "26": [{"determining": "( Min( ACS ,( Max( MRS,( ( Const * ( RRS / RRS ) ) * ACS ) ) * ( AMS + Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( ( ACS / ( ( ARS / ARS ) + ARS ) ) * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - MDR ) )", "choosing": "( Max( ( ( ( Min( Max( ( RMSe - RCSe ),MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ),MUR ) / ( ( ( RCSe - ( ( RCSe * DS ) * CS ) ) * ( MLU - RMSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU / RRS ) ) + DDR ) / ( ACS + FirstVNF_CPU ) ) ,Const ) + FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / Max( ( DS * RCSe ),RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( PN / FirstVNF_RAM_Server ) + Min( ( DDR + ( Min( ACS ,( BR / Const ) ) * Min( Max( AMS,ARS ) ,MDR ) ) ) ,FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,( MRS + ARS ) ) - FirstVNF_RAM ) ) * ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RCSe ,MUR ) / ( Max( MUR,MUC ) / MUR ) ) / ( CS * RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8576522560637384}, {"determining": "( ( Max( MRS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - ( ARS - FirstVNF_CPU ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MUM ),MUR ) / Max( MLU,MLU ) )", "obj1": 0.4015748031496063, "obj2": 0.42013670174510015}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( MDR - Max( ARS,ACS ) ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RCSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe / Max( MUC,DS ) ) ) ) - CS ) )", "obj1": 0.42322834645669294, "obj2": 0.3874650613980654}, {"determining": "Max( ( Min( PN ,BR ) + FirstVNF_CPU ),( Min( ( ( Max( FirstVNF_CPU,( MRS / FirstVNF_RAM ) ) / AMS ) * ( Const - MDR ) ) ,( ( BR / ( CRS * CRS ) ) * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( ( DS + ( RCSe * DS ) ) - ( DS + ( CS * Max( RRSe,( ( RCSe + MLU ) / Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.1732283464566929, "obj2": 0.6725428700251118}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,ACS ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.7066929133858267, "obj2": 0.15020897109842568}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - ( Min( DS ,MUC ) + ( RRSe - RRSe ) ) ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( MUR - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7458461275950927}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7740329539822995}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU / RRS ) ) - DDR ) / Max( Min( ( PN / PN ) ,Max( DDR,PN ) ),Min( CRS ,( FirstVNF_RAM - FirstVNF_RAM ) ) ) ) ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / Min( RMSe ,MUC ) ),MUR ) / Max( MUC,DS ) ) / ( MLU / RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8136320986195572}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( ( Min( ( MDR * AMS ) ,( ( ( ( Max( ACS,ARS ) / MRS ) - BR ) - MDR ) * Min( AMS ,FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( CS - MUM ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Min( RCSe ,MUC ) ) ) ) ) - Min( MUM ,MUM ) )", "obj1": 0.5452755905511811, "obj2": 0.2655047896874593}, {"determining": "Max( Min( FirstVNF_Mem_Server ,( RRS * RRS ) ),( Min( Max( ( ACS - ( ( FirstVNF_Mem * Min( RRS ,BR ) ) - ( ( ARS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ,( ( Const / Const ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( ( ( RRSe * ( RRSe - MUM ) ) + Max( ( RRSe / MUR ),MUM ) ) ,( MUM / RMSe ) ) ) ) * CS ) )", "obj1": 0.18503937007874016, "obj2": 0.6536873483727235}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20887967831758358}, {"determining": "Max( ( ( ( DDR / MRS ) + ( Min( ACS ,AMS ) * ( Const - MDR ) ) ) + FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( CRS * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,Min( ( ( ( MLU - CS ) / ( RMSe / MUC ) ) + MUR ) ,RCSe ) ) + DS ) ) / ( DS + MUC ) )", "obj1": 0.16929133858267717, "obj2": 0.7018661254279608}, {"determining": "( ( MRS - MDR ) / ( ( Const / ( ( ARS * FirstVNF_Mem_Server ) * Const ) ) / ( MDR + ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( ( ( ( ( RRSe / ( MUC / DS ) ) - MUC ) * RCSe ) / Max( RRSe,( RMSe + MUC ) ) ) / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( MUR ,RCSe ) ),Max( CS,RMSe ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4492062780118169}, {"determining": "( Min( ACS ,( Max( MRS,( ( Const * ( RRS / RRS ) ) * ACS ) ) * ( AMS + Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( ( ACS / ( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( RCSe * DS ) - RMSe ) ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.9744094488188977, "obj2": 0.008287543423625662}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( RMSe + ( DS / RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.5905511811023622, "obj2": 0.23420527567088595}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ( Const - MDR ) * MDR ) + ( Max( AMS,Min( ACS ,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / Max( ( ( DS - CS ) - CS ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.9488188976377953, "obj2": 0.020184751293221434}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7645104437838857}, {"determining": "Max( ( Min( MDR ,( MDR - Max( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ),( ( MDR * DDR ) + Max( Max( DDR,FirstVNF_CPU ),( MDR * FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / BR ) / Const ) ),( Const - MDR ) )", "choosing": "( ( DS / Max( ( Max( ( RRSe / ( MUM + ( MUR / MLU ) ) ),Max( MUR,Max( MUC,DS ) ) ) - Max( Min( MUC ,RCSe ),Max( RRSe,Max( Min( DS ,MUM ),MUC ) ) ) ),MLU ) ) - Min( MUR ,RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.6004762161791302}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,( ARS - FirstVNF_CPU ) ) ) - ( ( ARS / ( CRS / CRS ) ) * ( BR - ( Min( DDR ,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUC - ( MLU / MUR ) ) - CS ) * ( CS * MUR ) ) - Min( MLU ,CS ) )", "obj1": 0.48031496062992124, "obj2": 0.3234065859863689}, {"determining": "Min( ( Min( ( ( MRS + ACS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( Min( FirstVNF_RAM_Server ,BR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,PN ) ),Min( FirstVNF_RAM_Server ,BR ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( Max( DS,( RMSe + ( RMSe + ( RRSe + DS ) ) ) ) * ( MUC * RMSe ) ) ) - Min( Min( MUM ,( Min( RCSe ,( ( ( MUR - MUC ) / MLU ) * ( RMSe / Min( RRSe ,RRSe ) ) ) ) - RMSe ) ) ,Min( ( Max( MLU,( MUR * MUC ) ) / RMSe ) ,RCSe ) ) )", "obj1": 0.6476377952755905, "obj2": 0.1949958508031028}, {"determining": "Max( ( ( DDR + ( Min( ACS ,AMS ) * ( Const - MDR ) ) ) + FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MLU,( ( ( Min( RCSe ,( RCSe + RMSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( MLU - DS ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.23228346456692914, "obj2": 0.6090117619581018}, {"determining": "( Min( ( MRS + Const ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( ( PN * Min( ( RRS / MDR ) ,MDR ) ) / Min( ( ( ARS / Max( CRS,( PN / PN ) ) ) + ARS ) ,DDR ) ) ) )", "choosing": "( ( ( DS / Max( CS,RCSe ) ) * RCSe ) + Min( ( MLU - ( Max( ( ( MUC + CS ) / Min( Max( RMSe,RMSe ) ,RMSe ) ),( ( MUC + MUM ) - CS ) ) + ( MUC / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( Min( MUM ,RMSe ) ,RCSe ) ) ) ) / MLU ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5107536826759704}, {"determining": "( ( RRS * CRS ) - ( Max( MRS,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,Min( ( FirstVNF_Mem + AMS ) ,MRS ) ) ) )", "choosing": "( Min( Max( ( MUR + RMSe ),Min( MUR ,MUM ) ) ,( ( ( MUM + DS ) * MUM ) - ( MUM / DS ) ) ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5452652136227852}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( DDR / ( ( ( FirstVNF_RAM + ARS ) / FirstVNF_Mem ) + ACS ) ) ) / Min( ( Min( Const ,MDR ) * ( ACS + BR ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUC * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( RCSe / ( Max( RRSe,MUM ) / Max( ( ( MUM + Max( DS,CS ) ) * MUR ),( RRSe / Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5600561084173625}, {"determining": "( Max( ( Const - ( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) + MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( ( MUC / MUM ) / ( DS / DS ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8401315128661391}, {"determining": "( Max( ( Const - ( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) + MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.3686038666424412}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,( ( ( DS - CS ) - CS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5398989859312635}, {"determining": "Max( ( AMS / PN ),Max( FirstVNF_Mem,PN ) )", "choosing": "( ( ( RRSe * DS ) - Max( MLU,( Max( RMSe,DS ) / MUM ) ) ) / Max( ( CS * MLU ),MUR ) )", "obj1": 0.14173228346456693, "obj2": 0.7327587892892451}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ( ( Min( MDR ,MRS ) / PN ) - RRS ) ) / ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) ) - BR ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( ( MLU / RRSe ) ,( RCSe + RMSe ) ) * RCSe ) - CS ) ,MUC )", "obj1": 0.5866141732283464, "obj2": 0.24114758985158502}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,( ( ARS / MRS ) / RRS ) ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) + ( ( Min( MUC ,RRSe ) + Max( RCSe,RMSe ) ) + RRSe ) ) )", "obj1": 0.6141732283464567, "obj2": 0.22453558533243279}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( ( ( Min( CRS ,FirstVNF_RAM_Server ) - RRS ) / ( Max( Max( ( MDR / ( BR / BR ) ),Max( ( FirstVNF_Mem - Max( ACS,FirstVNF_Mem_Server ) ),Const ) ),FirstVNF_Mem ) / Const ) ) - Max( ( Min( FirstVNF_Mem ,( DDR - PN ) ) + DDR ),MRS ) )", "choosing": "( Min( ( MUR / ( ( Max( RCSe,RCSe ) - MUM ) - RRSe ) ) ,MLU ) + ( MUM / ( MUC * Min( CS ,MUC ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "Max( ( Min( ( ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) * ( RRS / ( ACS - ( MDR * ACS ) ) ) ) ,Min( RRS ,Const ) ) * FirstVNF_Mem_Server ),( Const - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( DS / Min( ( MLU - ( ( DS * RMSe ) - Min( ( RCSe / MUR ) ,DS ) ) ) ,( Max( ( ( DS + CS ) + ( RMSe + DS ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - ( ( Min( Min( MUR ,( ( CS - ( MUR * DS ) ) + ( MUM + Min( MUR ,MLU ) ) ) ) ,MUC ) + ( MUC / Min( CS ,( RCSe / ( ( DS / RRSe ) - RRSe ) ) ) ) ) - RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6430432626800384}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( MDR + Min( BR ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( Max( RRSe,RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,( Max( MUC,MUM ) - ( DS * MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.46135373167162275}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + ( Min( CRS ,BR ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.25196850393700787, "obj2": 0.5882521189471053}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "( Max( Min( ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) * ( ( ( Min( RRS ,ACS ) / FirstVNF_CPU ) - BR ) - MDR ) ) ,( MDR * AMS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( MLU,( ( ( Min( RCSe ,( RCSe + RMSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( MLU - DS ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5275590551181102, "obj2": 0.2758635570602323}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.16154554854700837}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU ) / ( ( FirstVNF_RAM / ( PN - ACS ) ) + MDR ) ) / ( Max( MDR,ACS ) / DDR ) ) - ( ACS * PN ) )", "choosing": "( ( ( ( RCSe * MLU ) / MUR ) + MLU ) + Min( ( MLU - ( ( Min( CS ,Max( CS,( RCSe / RRSe ) ) ) + MLU ) + ( RRSe / Max( RRSe,MUM ) ) ) ) ,( ( Max( RRSe,MUM ) + Max( ( RRSe + RMSe ),( RCSe / Min( RCSe ,MLU ) ) ) ) / MUR ) ) )", "obj1": 0.84251968503937, "obj2": 0.059884951978315545}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( Const / ACS ) + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( Max( ( MUR / ( RCSe - MUC ) ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / ( DS + CS ) ) / ( MLU / Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( MUM * RRSe ) ) / CS ),MUC ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08719124783143223}, {"determining": "( ( ACS * PN ) - ( Min( Min( FirstVNF_CPU_Server ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( CS,RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.8051181102362205, "obj2": 0.07562311009889218}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ) + DDR ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( RCSe,MLU ) / ( ( RCSe * DS ) - Max( ( ( MUC - MUM ) - MUC ),( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10671649113601032}, {"determining": "( ( ACS * ( FirstVNF_CPU_Server + RRS ) ) - ( Max( Min( PN ,MDR ),( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( RCSe * DS ) - RMSe ) ) ,Max( RMSe,Max( CS,( ( MLU + MUR ) + RRSe ) ) ) ) ) - CS ) )", "obj1": 0.484251968503937, "obj2": 0.3031872064968013}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( Min( Max( Max( FirstVNF_Mem_Server,DDR ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + RCSe ) - ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.39173228346456695, "obj2": 0.4547366147896316}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( Min( MRS ,ACS ) / RRS ) + ( DDR / PN ) ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( MUR + CS ) ) + ( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5708661417322834, "obj2": 0.2509930378034641}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,AMS ) / ( ( FirstVNF_CPU + ( ( Const / FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server + Max( PN,FirstVNF_RAM_Server ) ) + ( MRS / PN ) ) ) ) / ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RRSe / Min( Max( Max( Max( MLU,Max( MUR,MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + ( ( ( RCSe - DS ) - MUM ) - Min( MUC ,Min( MUC ,Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.46855489100277287}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6535433070866141, "obj2": 0.18911972928693024}, {"determining": "( ( ACS * PN ) - ( Max( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ),DDR ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) * ( MLU * DS ) ) / ( Max( ( ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8188976377952756, "obj2": 0.07117552418623425}, {"determining": "( Max( ( Const - ( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) / MRS ) ) ),( FirstVNF_RAM_Server * PN ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) + ( RRSe + ( ( MLU * Max( Max( MUR,MUR ),Max( RRSe,MUR ) ) ) * RMSe ) ) )", "obj1": 0.42913385826771655, "obj2": 0.37877474682236184}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( ( RRS / ( FirstVNF_RAM_Server * Const ) ) - DDR ) ,MDR ) ) - FirstVNF_RAM ) ) * Min( FirstVNF_Mem ,ARS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( ( MUM + Max( ( DS / MLU ),MUC ) ) * ( DS * ( RCSe - ( RRSe / ( ( DS * MUR ) + RRSe ) ) ) ) ) ) / Max( ( RMSe / RCSe ),( Max( ( MUC + Max( MUC,( ( MUC / MUM ) / ( DS / DS ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( DS,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.831041157585384}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "Max( Min( ( DDR + ( Min( ACS ,AMS ) * ( Min( AMS ,FirstVNF_RAM_Server ) - MDR ) ) ) ,FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,( RMSe + MUC ) ) + DS ) ) / ( DS + MUM ) )", "obj1": 0.1594488188976378, "obj2": 0.706042597131564}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( ( ( ARS + FirstVNF_Mem_Server ) - BR ) - BR ) )", "choosing": "Min( Max( CS,MLU ) ,MUC )", "obj1": 0.4468503937007874, "obj2": 0.34812179206897814}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37287002792506396}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / ( FirstVNF_Mem - ( AMS * Const ) ) ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( CS * DS ) + DS ) + MUM ) / Min( ( ( MUC / ( ( MUM * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6220472440944882, "obj2": 0.21876583926706078}, {"determining": "( Max( Min( ( Min( FirstVNF_Mem ,AMS ) * ( ( ( Min( RRS ,Const ) / FirstVNF_CPU ) - BR ) - MDR ) ) ,( MDR * AMS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( MLU,( ( DS + ( MUM / MUM ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / MUC ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5177165354330708, "obj2": 0.28195372508308364}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + ( Min( MDR ,FirstVNF_CPU_Server ) / ( ( FirstVNF_Mem_Server + Max( PN,BR ) ) - CRS ) ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,( RMSe - MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / MUR ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6318529240990785}, {"determining": "( ( ( ( MDR - FirstVNF_RAM_Server ) / Min( RRS ,BR ) ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_CPU_Server ,( PN * MDR ) ) - Const ) )", "choosing": "( ( DS / Max( MLU,( Min( ( MUM + ( RRSe / CS ) ) ,Max( MUC,DS ) ) - ( ( DS / ( DS * Max( RMSe,DS ) ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) - ( ( MUM - ( Min( DS ,RMSe ) * DS ) ) * MUM ) )", "obj1": 0.3484251968503937, "obj2": 0.4931229301844405}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( MDR + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( RMSe - CS ) - CS ) ,( DS / DS ) ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( ( MUC / Min( DS ,CS ) ) - ( ( MUM + ( RRSe / CS ) ) / ( ( MUR * RCSe ) / MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.9606299212598425, "obj2": 0.015111619354468947}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM + Max( ( Max( FirstVNF_Mem_Server,( ARS / AMS ) ) - MDR ),BR ) ) ),( Min( Max( ( FirstVNF_CPU_Server + ( ( Max( BR,Const ) - ( PN / MDR ) ) * FirstVNF_Mem_Server ) ),CRS ) ,DDR ) + ( ( ( ( CRS - Min( RRS ,( FirstVNF_CPU_Server / RRS ) ) ) * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) + CRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) + RCSe ) + ( ( RCSe / Min( Max( ( CS / ( ( DS - RCSe ) * ( CS + MUM ) ) ),Max( Max( Min( MUM ,RCSe ),MLU ),Min( RMSe ,( RRSe / MUM ) ) ) ) ,CS ) ) + ( ( MLU - CS ) + DS ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6178104740691426}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( ( Max( RRSe,( MUR - ( MUM / RRSe ) ) ) + ( RMSe / MUM ) ) + DS ) / DS ) ) )", "obj1": 0.4625984251968504, "obj2": 0.33681929103764674}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + ( Min( CRS ,BR ) / ( ( FirstVNF_RAM / Max( ACS,Min( CRS ,FirstVNF_Mem ) ) ) + MDR ) ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2578740157480315, "obj2": 0.5831717460626831}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( CS ,Max( ( Max( MUM,RCSe ) / MUC ),RRSe ) ) ) ) - CS ) )", "obj1": 0.21456692913385828, "obj2": 0.6229573472911288}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "Min( ( Min( AMS ,( Min( ( ( CRS * Min( ARS ,BR ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU * Const ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( ( RRSe / CS ),DS ) ,CS ) ) + Min( ( ( MUM - Max( ( ( RMSe - RCSe ) - Min( MUR ,RMSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.7303149606299213, "obj2": 0.137130204933965}, {"determining": "( ( Min( Max( PN,MDR ) ,( MDR + ( DDR / ( Max( Max( PN,Const ),MRS ) - Const ) ) ) ) / ( ACS * BR ) ) - ( PN * AMS ) )", "choosing": "( ( RMSe * MUR ) + ( Min( ( ( MUM * ( ( ( MUM * RRSe ) * Max( CS,RRSe ) ) - Min( RRSe ,( MUR / RCSe ) ) ) ) + Min( RCSe ,RCSe ) ) ,( ( Max( DS,CS ) + Max( ( RRSe / Max( DS,RRSe ) ),MUM ) ) / RCSe ) ) + Min( ( RCSe / RMSe ) ,( DS / DS ) ) ) )", "obj1": 0.7834645669291339, "obj2": 0.08097818247587628}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( BR / CRS ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / ( ( RCSe * DS ) - RMSe ) ),( RMSe + ( DS / RMSe ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - Min( ( MUC / RRSe ) ,( MUR / ( MLU / MUC ) ) ) ) )", "obj1": 0.3464566929133858, "obj2": 0.5031791185454566}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( FirstVNF_CPU_Server - MDR ) ) ) ) + MDR ) ) / ( ACS - ( ACS * PN ) ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.05431621517128827}, {"determining": "( Max( ( Const - ( Max( FirstVNF_Mem,Min( AMS ,FirstVNF_RAM_Server ) ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) + MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( ( Min( CS ,CS ) - MUC ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.5098425196850394, "obj2": 0.2870070031241092}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) + ( DDR / PN ) ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7163341829428361}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) * ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,( ( ( ( RCSe / ( MUM + MLU ) ) + ( RRSe - RCSe ) ) * ( ( MLU - ( MUM + RCSe ) ) / DS ) ) + ( RRSe / RMSe ) ) ) / DS ) - ( CS / ( ( MUM * MUC ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.480142835932235}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / Max( FirstVNF_CPU,AMS ) ),( Min( ( Min( ( FirstVNF_CPU_Server / DDR ) ,AMS ) * ( Const - Max( BR,FirstVNF_CPU ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * MDR ) )", "choosing": "Min( ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) ,( CS / MUR ) )", "obj1": 0.3700787401574803, "obj2": 0.4769342192335457}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) + MRS ) ) / FirstVNF_RAM_Server ) + ( ( DDR * FirstVNF_RAM_Server ) * CRS ) ) )", "choosing": "( ( DS / Max( MLU,( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * MLU ) - CS ) - ( ( CS - RMSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6673228346456693, "obj2": 0.18735465689867004}, {"determining": "( ( MRS - ( Const + CRS ) ) / ( Const - Min( ( FirstVNF_CPU_Server / AMS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( Min( ( ( DS - RCSe ) - Min( Min( RCSe ,MUM ) ,CS ) ) ,( DS * DS ) ) + ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) ) ) / ( MUR + CS ) ) + Min( ( Min( RRSe ,( Min( Max( ( MUM / RRSe ),MUC ) ,Min( RRSe ,MUR ) ) / ( MUM + ( RCSe - CS ) ) ) ) - MLU ) ,( DS * Min( ( DS - RRSe ) ,RRSe ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4852988797343123}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.03588156442615642}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( MRS * Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) / FirstVNF_RAM_Server ) + ( ( DDR * FirstVNF_RAM_Server ) * CRS ) ) )", "choosing": "( ( DS + Max( Max( ( RRSe / MUR ),( CS / MUM ) ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6732283464566929, "obj2": 0.18452956696784917}, {"determining": "Min( ( Min( ( Min( ( ( PN - Min( PN ,MDR ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.045180162820525824}, {"determining": "( ( ACS - PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( CRS * ( FirstVNF_RAM + FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,BR ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUM / MUR ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( Max( MUC,MUM ) / Max( Max( DS,DS ),RCSe ) ) + MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8169291338582677, "obj2": 0.07173074182428106}, {"determining": "Max( ( Const - MDR ),( Min( ( ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ,Max( ( ( Const - MDR ) - ( ( FirstVNF_Mem * Min( ACS ,BR ) ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( Max( ACS,AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( Max( MLU,( ( DS * RMSe ) - MUR ) ),( Max( ( ( DS + DS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6379827146549552}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( ACS * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4874451549855828}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( RCSe * DS ) - RMSe ) ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.4547244094488189, "obj2": 0.343595592932589}, {"determining": "( Max( ( MDR - Const ),ACS ) - ( ( Min( BR ,FirstVNF_CPU ) - BR ) - ( PN * CRS ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( RMSe - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.4940944881889764, "obj2": 0.29580530116570275}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( Max( ( ACS - FirstVNF_CPU_Server ),( FirstVNF_Mem - ( CRS + DDR ) ) ) / Const ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MLU / ( MUR + MUC ) ) + ( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU / Max( MUM,MLU ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( ( ( Max( RCSe,MUM ) * RMSe ) * MUM ) * MUC ) ) ) - Min( CS ,( MUR - MUR ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2512967515779506}, {"determining": "( ( ( DDR - PN ) - ACS ) * Max( BR,BR ) )", "choosing": "( ( DS / Max( ( ( DS - CS ) - CS ),( MUM + ( RRSe / RMSe ) ) ) ) - Min( ( Min( ( RRSe * MLU ) ,( RRSe + MUM ) ) + MUM ) ,RCSe ) )", "obj1": 0.9586614173228346, "obj2": 0.0165363622346136}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.8720472440944882, "obj2": 0.04901678088135341}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( RRSe / ( ( MUC * ( ( ( ( CS * RCSe ) + CS ) * RMSe ) + CS ) ) * ( MUC * RMSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.27165354330708663, "obj2": 0.5685403262890067}], "27": [{"determining": "Min( ( ( MRS - PN ) - FirstVNF_RAM_Server ) ,( ( Max( Min( FirstVNF_Mem_Server ,PN ),( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( FirstVNF_RAM_Server ,BR ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) - Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( Max( MRS,( ( Const * ( RRS / RRS ) ) * ACS ) ) * ( AMS + Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( ( ACS / ( ( ARS / ARS ) + ARS ) ) * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - MDR ) )", "choosing": "( Max( ( ( ( Min( Max( ( RMSe - RCSe ),MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ),MUR ) / ( ( ( RCSe - ( ( RCSe * DS ) * CS ) ) * ( MLU - RMSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( PN / FirstVNF_RAM_Server ) + Min( ( DDR + ( Min( ACS ,( BR / Const ) ) * Min( Max( AMS,ARS ) ,MDR ) ) ) ,FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,( MRS + ARS ) ) - FirstVNF_RAM ) ) * ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RCSe ,MUR ) / ( Max( MUR,MUC ) / MUR ) ) / ( CS * RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8576522560637384}, {"determining": "( ( Max( MRS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - ( ARS - FirstVNF_CPU ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MUM ),MUR ) / Max( MLU,MLU ) )", "obj1": 0.4015748031496063, "obj2": 0.42013670174510015}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( MDR - Max( ARS,ACS ) ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RCSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe / Max( MUC,DS ) ) ) ) - CS ) )", "obj1": 0.42322834645669294, "obj2": 0.3874650613980654}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - ( Min( DS ,MUC ) + ( RRSe - RRSe ) ) ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( MUR - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7458461275950927}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7740329539822995}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU / RRS ) ) - DDR ) / Max( Min( ( PN / PN ) ,Max( DDR,PN ) ),Min( CRS ,( FirstVNF_RAM - FirstVNF_RAM ) ) ) ) ,Const ) + FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / Min( RMSe ,MUC ) ),MUR ) / Max( MUC,DS ) ) / ( MLU / RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8136320986195572}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "Max( ( ( DDR + ( Min( ACS ,AMS ) * ( Const - MDR ) ) ) + FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MLU,( ( ( Min( RCSe ,( RCSe + RMSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( MLU - DS ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.23228346456692914, "obj2": 0.6090117619581018}, {"determining": "( ( Min( ( MDR * AMS ) ,( ( ( ( Max( ACS,ARS ) / MRS ) - BR ) - MDR ) * Min( AMS ,FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( CS - MUM ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Min( RCSe ,MUC ) ) ) ) ) - Min( MUM ,MUM ) )", "obj1": 0.5452755905511811, "obj2": 0.2655047896874593}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20887967831758358}, {"determining": "Max( ( ( ( DDR / MRS ) + ( Min( ACS ,AMS ) * ( Const - MDR ) ) ) + FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( CRS * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,Min( ( ( ( MLU - CS ) / ( RMSe / MUC ) ) + MUR ) ,RCSe ) ) + DS ) ) / ( DS + MUC ) )", "obj1": 0.16929133858267717, "obj2": 0.7018661254279608}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( MRS - MDR ) / ( ( Const / ( ( ARS * FirstVNF_Mem_Server ) * Const ) ) / ( MDR + ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( ( ( ( ( RRSe / ( MUC / DS ) ) - MUC ) * RCSe ) / Max( RRSe,( RMSe + MUC ) ) ) / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( MUR ,RCSe ) ),Max( CS,RMSe ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4492062780118169}, {"determining": "Max( ( Min( PN ,BR ) + FirstVNF_CPU ),( Min( ( ( Max( FirstVNF_CPU,( MRS / FirstVNF_RAM ) ) / AMS ) * ( Const - MDR ) ) ,( ( BR / ( CRS * CRS ) ) * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( ( DS + ( RCSe * DS ) ) - ( DS + ( CS * Max( RRSe,( ( RCSe + MLU ) / Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.1732283464566929, "obj2": 0.6725428700251118}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,( ( ARS / MRS ) / RRS ) ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) + ( ( Min( MUC ,RRSe ) + Max( RCSe,RMSe ) ) + RRSe ) ) )", "obj1": 0.6141732283464567, "obj2": 0.22453558533243279}, {"determining": "( Max( Min( ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) * ( ( ( Min( RRS ,ACS ) / FirstVNF_CPU ) - BR ) - MDR ) ) ,( MDR * AMS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( MLU,( ( ( Min( RCSe ,( RCSe + RMSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( MLU - DS ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5275590551181102, "obj2": 0.2758635570602323}, {"determining": "( Min( ( MRS + Const ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( ( PN * Min( ( RRS / MDR ) ,MDR ) ) / Min( ( ( ARS / Max( CRS,( PN / PN ) ) ) + ARS ) ,DDR ) ) ) )", "choosing": "( ( ( DS / Max( CS,RCSe ) ) * RCSe ) + Min( ( MLU - ( Max( ( ( MUC + CS ) / Min( Max( RMSe,RMSe ) ,RMSe ) ),( ( MUC + MUM ) - CS ) ) + ( MUC / RMSe ) ) ) ,( ( Max( RRSe,MUM ) + Max( MUR,( RRSe / Min( Min( MUM ,RMSe ) ,RCSe ) ) ) ) / MLU ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5107536826759704}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "( ( ACS * ( FirstVNF_CPU_Server + RRS ) ) - ( Max( Min( PN ,MDR ),( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( RCSe * DS ) - RMSe ) ) ,Max( RMSe,Max( CS,( ( MLU + MUR ) + RRSe ) ) ) ) ) - CS ) )", "obj1": 0.484251968503937, "obj2": 0.3031872064968013}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.03588156442615642}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7645104437838857}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,( ARS - FirstVNF_CPU ) ) ) - ( ( ARS / ( CRS / CRS ) ) * ( BR - ( Min( DDR ,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUC - ( MLU / MUR ) ) - CS ) * ( CS * MUR ) ) - Min( MLU ,CS ) )", "obj1": 0.48031496062992124, "obj2": 0.3234065859863689}, {"determining": "( ( ACS * PN ) - ( ( ACS - BR ) / Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ( FirstVNF_Mem + ARS ),Min( CRS ,FirstVNF_Mem ) ) ) + MDR ) ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( MUC * DS ) - RMSe ) ) ,( ( DS - Max( Min( MUR ,RCSe ),MUM ) ) + RMSe ) ) ) - CS ) )", "obj1": 0.7755905511811023, "obj2": 0.08409807761287728}, {"determining": "Max( Min( FirstVNF_Mem_Server ,( RRS * RRS ) ),( Min( Max( ( ACS - ( ( FirstVNF_Mem * Min( RRS ,BR ) ) - ( ( ARS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ,( ( Const / Const ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( ( ( RRSe * ( RRSe - MUM ) ) + Max( ( RRSe / MUR ),MUM ) ) ,( MUM / RMSe ) ) ) ) * CS ) )", "obj1": 0.18503937007874016, "obj2": 0.6536873483727235}, {"determining": "Max( ( AMS / PN ),Max( FirstVNF_Mem,PN ) )", "choosing": "( ( ( RRSe * DS ) - Max( MLU,( Max( RMSe,DS ) / MUM ) ) ) / Max( ( CS * MLU ),MUR ) )", "obj1": 0.14173228346456693, "obj2": 0.7327587892892451}, {"determining": "( ( RRS * CRS ) - ( Max( MRS,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,Min( ( FirstVNF_Mem + AMS ) ,MRS ) ) ) )", "choosing": "( Min( Max( ( MUR + RMSe ),Min( MUR ,MUM ) ) ,( ( ( MUM + DS ) * MUM ) - ( MUM / DS ) ) ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5452652136227852}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( DDR / ( ( ( FirstVNF_RAM + ARS ) / FirstVNF_Mem ) + ACS ) ) ) / Min( ( Min( Const ,MDR ) * ( ACS + BR ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUC * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( RCSe / ( Max( RRSe,MUM ) / Max( ( ( MUM + Max( DS,CS ) ) * MUR ),( RRSe / Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5600561084173625}, {"determining": "( Min( Min( Const ,BR ) ,Max( Min( RRS ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( ( ( MLU - Max( ( CS / ( RMSe - RRSe ) ),CS ) ) + RMSe ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8392426751097208}, {"determining": "( Max( ( Const - ( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) + MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.3686038666424412}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,( ( ( DS - CS ) - CS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5398989859312635}, {"determining": "( ( FirstVNF_CPU * PN ) - ( Min( ( MDR - BR ) ,FirstVNF_Mem ) / ( ( Min( ( FirstVNF_Mem_Server / ( AMS * MRS ) ) ,MRS ) / MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( Min( Min( ( RCSe - ( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) ,DS ) - CS ) ,( DS / DS ) ) + Min( ( ( DS / MLU ) / ( ( RMSe / Min( DS ,CS ) ) - ( CS / RMSe ) ) ) ,MUR ) ) )", "obj1": 0.7224409448818898, "obj2": 0.146461425421866}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( ( ( ARS + FirstVNF_Mem_Server ) - BR ) - BR ) )", "choosing": "Min( Max( CS,MLU ) ,MUC )", "obj1": 0.4468503937007874, "obj2": 0.34812179206897814}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / ( FirstVNF_Mem - ( AMS * Const ) ) ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( CS * DS ) + DS ) + MUM ) / Min( ( ( MUC / ( ( MUM * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6220472440944882, "obj2": 0.21876583926706078}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "Min( ( Min( ( ( MRS + ACS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( Min( FirstVNF_RAM_Server ,BR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,PN ) ),Min( FirstVNF_RAM_Server ,BR ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( Max( DS,( RMSe + ( RMSe + ( RRSe + DS ) ) ) ) * ( MUC * RMSe ) ) ) - Min( Min( MUM ,( Min( RCSe ,( ( ( MUR - MUC ) / MLU ) * ( RMSe / Min( RRSe ,RRSe ) ) ) ) - RMSe ) ) ,Min( ( Max( MLU,( MUR * MUC ) ) / RMSe ) ,RCSe ) ) )", "obj1": 0.6476377952755905, "obj2": 0.1949958508031028}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ) + DDR ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( RCSe,MLU ) / ( ( RCSe * DS ) - Max( ( ( MUC - MUM ) - MUC ),( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10671649113601032}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * RRS ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + ( RMSe + ( DS / RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.59251968503937, "obj2": 0.2335704861003632}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM + Max( ( Max( FirstVNF_Mem_Server,( ARS / AMS ) ) - MDR ),BR ) ) ),( Min( Max( ( FirstVNF_CPU_Server + ( ( Max( BR,Const ) - ( PN / MDR ) ) * FirstVNF_Mem_Server ) ),CRS ) ,DDR ) + ( ( ( ( CRS - Min( RRS ,( FirstVNF_CPU_Server / RRS ) ) ) * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) + CRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) + RCSe ) + ( ( RCSe / Min( Max( ( CS / ( ( DS - RCSe ) * ( CS + MUM ) ) ),Max( Max( Min( MUM ,RCSe ),MLU ),Min( RMSe ,( RRSe / MUM ) ) ) ) ,CS ) ) + ( ( MLU - CS ) + DS ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6178104740691426}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( DS * RMSe ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.33858267716535434, "obj2": 0.5014965239600612}, {"determining": "Max( ( Min( ( ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) * ( RRS / ( ACS - ( MDR * ACS ) ) ) ) ,Min( RRS ,Const ) ) * FirstVNF_Mem_Server ),( Const - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( DS / Min( ( MLU - ( ( DS * RMSe ) - Min( ( RCSe / MUR ) ,DS ) ) ) ,( Max( ( ( DS + CS ) + ( RMSe + DS ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - ( ( Min( Min( MUR ,( ( CS - ( MUR * DS ) ) + ( MUM + Min( MUR ,MLU ) ) ) ) ,MUC ) + ( MUC / Min( CS ,( RCSe / ( ( DS / RRSe ) - RRSe ) ) ) ) ) - RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6430432626800384}, {"determining": "Max( ( Min( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + FirstVNF_CPU ),( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( ( BR / ( AMS * CRS ) ) * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / CS )", "obj1": 0.17716535433070865, "obj2": 0.6663659373812727}, {"determining": "Max( Min( ( DDR + ( Min( ACS ,AMS ) * ( Min( AMS ,FirstVNF_RAM_Server ) - MDR ) ) ) ,FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,( RMSe + MUC ) ) + DS ) ) / ( DS + MUM ) )", "obj1": 0.1594488188976378, "obj2": 0.706042597131564}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + ( Min( CRS ,BR ) / ( ( FirstVNF_RAM / Max( ACS,Min( CRS ,FirstVNF_Mem ) ) ) + MDR ) ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2578740157480315, "obj2": 0.5831717460626831}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,ACS ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.7066929133858267, "obj2": 0.15020897109842568}, {"determining": "( ( ACS * PN ) - ( Min( Min( FirstVNF_CPU_Server ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( CS,RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.8051181102362205, "obj2": 0.07562311009889218}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( MDR + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( DS / Max( ( ( DS - CS ) - CS ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.9448818897637795, "obj2": 0.02084142825664055}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( RRSe / ( ( MUC * ( ( ( ( CS * RCSe ) + CS ) * RMSe ) + CS ) ) * ( MUC * RMSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.27165354330708663, "obj2": 0.5685403262890067}, {"determining": "( ( ( BR - ARS ) / ( Min( PN ,FirstVNF_CPU ) / ( ( FirstVNF_RAM / ( PN - ACS ) ) + MDR ) ) ) - ( ACS * PN ) )", "choosing": "( ( DS / Max( ( MLU - ( ( DS * RMSe ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.20866141732283464, "obj2": 0.6306223821078232}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + ( Min( CRS ,BR ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2637795275590551, "obj2": 0.5775601680256315}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,AMS ) / ( ( FirstVNF_CPU + ( ( Const / FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server + Max( PN,FirstVNF_RAM_Server ) ) + ( MRS / PN ) ) ) ) / ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RRSe / Min( Max( Max( Max( MLU,Max( MUR,MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + ( ( ( RCSe - DS ) - MUM ) - Min( MUC ,Min( MUC ,Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.46855489100277287}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( ( RRS / ( FirstVNF_RAM_Server * Const ) ) - DDR ) ,MDR ) ) - FirstVNF_RAM ) ) * Min( FirstVNF_Mem ,ARS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( ( MUM + Max( ( DS / MLU ),MUC ) ) * ( DS * ( RCSe - ( RRSe / ( ( DS * MUR ) + RRSe ) ) ) ) ) ) / Max( ( RMSe / RCSe ),( Max( ( MUC + Max( MUC,( ( MUC / MUM ) / ( DS / DS ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( DS,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.831041157585384}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Const ) )", "choosing": "( Max( ( CS * ( ( MUC + MUC ) + MUC ) ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.6988188976377953, "obj2": 0.15345998749165496}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( RCSe * DS ) - RMSe ) ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.4547244094488189, "obj2": 0.343595592932589}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ( ( Min( MDR ,MRS ) / PN ) - RRS ) ) / ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) ) - BR ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( ( MLU / RRSe ) ,( RCSe + RMSe ) ) * RCSe ) - CS ) ,MUC )", "obj1": 0.5866141732283464, "obj2": 0.24114758985158502}, {"determining": "( ( ACS * PN ) - ( Max( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ),DDR ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) * ( MLU * DS ) ) / ( Max( ( ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8188976377952756, "obj2": 0.07117552418623425}, {"determining": "( Min( ACS ,( Max( MRS,( ( Const * ( RRS / RRS ) ) * ACS ) ) * ( AMS + Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( ( ACS / ( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( RCSe * DS ) - RMSe ) ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.9744094488188977, "obj2": 0.008287543423625662}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( CS ,Max( ( Max( MUM,RCSe ) / MUC ),RRSe ) ) ) ) - CS ) )", "obj1": 0.21456692913385828, "obj2": 0.6229573472911288}, {"determining": "( Max( ( Const - ( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) / MRS ) ) ),( FirstVNF_RAM_Server * PN ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) + ( RRSe + ( ( MLU * Max( Max( MUR,MUR ),Max( RRSe,MUR ) ) ) * RMSe ) ) )", "obj1": 0.42913385826771655, "obj2": 0.37877474682236184}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37287002792506396}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ( Const - MDR ) * MDR ) + ( CRS + FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / Max( ( DS * RCSe ),RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) / MLU ) )", "obj1": 0.9881889763779528, "obj2": 0.005899917223681827}, {"determining": "( Min( Max( Max( FirstVNF_Mem_Server,DDR ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + RCSe ) - ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.39173228346456695, "obj2": 0.4547366147896316}, {"determining": "( Max( ( ( Min( RRS ,Const ) * ( FirstVNF_CPU * DDR ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RCSe ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.5767716535433071, "obj2": 0.24730386036049992}, {"determining": "( Max( Min( ( Min( FirstVNF_Mem ,AMS ) * ( ( ( Min( RRS ,Const ) / FirstVNF_CPU ) - BR ) - MDR ) ) ,( MDR * AMS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( MLU,( ( DS + ( MUM / MUM ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / MUC ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5177165354330708, "obj2": 0.28195372508308364}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( FirstVNF_CPU_Server - MDR ) ) ) ) + BR ) ) / ( ACS - ( ACS * PN ) ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( DS - ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.05420586919431723}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) + MRS ) ) / FirstVNF_RAM_Server ) + ( ( DDR * FirstVNF_RAM_Server ) * CRS ) ) )", "choosing": "( ( DS / Max( MLU,( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * MLU ) - CS ) - ( ( CS - RMSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6673228346456693, "obj2": 0.18735465689867004}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - ( ( ( Min( RRS ,Const ) / MRS ) - BR ) - MDR ) ) ,ACS )", "choosing": "( ( ( Min( ( MUC * ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) ) ,( DS + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.07863158331778561}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( ( Max( RRSe,( MUR - ( MUM / RRSe ) ) ) + ( RMSe / MUM ) ) + DS ) / DS ) ) )", "obj1": 0.4625984251968504, "obj2": 0.33681929103764674}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( MRS * Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) / FirstVNF_RAM_Server ) + ( ( DDR * FirstVNF_RAM_Server ) * CRS ) ) )", "choosing": "( ( DS + Max( Max( ( RRSe / MUR ),( CS / MUM ) ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6732283464566929, "obj2": 0.18452956696784917}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.16154554854700837}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6535433070866141, "obj2": 0.18911972928693024}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,( ACS * PN ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04998684681836544}, {"determining": "( Max( ( MDR - Const ),ACS ) - ( ( Min( BR ,FirstVNF_CPU ) - BR ) - ( PN * CRS ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( RMSe - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.4940944881889764, "obj2": 0.29580530116570275}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ( Const - MDR ) * MDR ) + ( Max( AMS,Min( ACS ,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( RMSe - CS ) - CS ) ,( DS / DS ) ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( ( MUC / Min( DS ,CS ) ) - ( ( MUM + ( RRSe / CS ) ) / ( ( MUR * RCSe ) / MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.968503937007874, "obj2": 0.013382930738868338}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) * ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,( ( ( ( RCSe / ( MUM + MLU ) ) + ( RRSe - RCSe ) ) * ( ( MLU - ( MUM + RCSe ) ) / DS ) ) + ( RRSe / RMSe ) ) ) / DS ) - ( CS / ( ( MUM * MUC ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.480142835932235}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / Max( FirstVNF_CPU,AMS ) ),( Min( ( Min( ( FirstVNF_CPU_Server / DDR ) ,AMS ) * ( Const - Max( BR,FirstVNF_CPU ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * MDR ) )", "choosing": "Min( ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) ,( CS / MUR ) )", "obj1": 0.3700787401574803, "obj2": 0.4769342192335457}, {"determining": "( ( MRS - ( Const + CRS ) ) / ( Const - Min( ( FirstVNF_CPU_Server / AMS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( Min( ( ( DS - RCSe ) - Min( Min( RCSe ,MUM ) ,CS ) ) ,( DS * DS ) ) + ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) ) ) / ( MUR + CS ) ) + Min( ( Min( RRSe ,( Min( Max( ( MUM / RRSe ),MUC ) ,Min( RRSe ,MUR ) ) / ( MUM + ( RCSe - CS ) ) ) ) - MLU ) ,( DS * Min( ( DS - RRSe ) ,RRSe ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4852988797343123}, {"determining": "Min( ( ( ( Min( ( ( FirstVNF_Mem - Min( FirstVNF_CPU ,MDR ) ) * PN ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( ( ( RMSe + ( ( RRSe / ( RRSe / CS ) ) * Max( DS,( MUC / RMSe ) ) ) ) * ( ( RCSe + MUM ) * ( RMSe - RRSe ) ) ) / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RMSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( RMSe / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.04223708602390664}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( MDR + Min( BR ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( Max( RRSe,RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,( Max( MUC,MUM ) - ( DS * MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.46135373167162275}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( MDR + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.9488188976377953, "obj2": 0.018938012126951766}, {"determining": "( ( ACS + DDR ) / Min( ( FirstVNF_Mem / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ,Const ) )", "choosing": "( ( ( MUR + ( ( Min( MUM ,CS ) / ( ( DS / DS ) + RCSe ) ) + Min( ( ( MUM * MLU ) * CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( ( MUM / MLU ) + Min( Min( ( MUR / MUR ) ,( MLU + MUR ) ) ,( MUM + ( Min( MUM ,MLU ) * RMSe ) ) ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3464566929133858, "obj2": 0.49503249649122544}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( Max( ( ACS - FirstVNF_CPU_Server ),( FirstVNF_Mem - ( CRS + DDR ) ) ) / Const ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MLU / ( MUR + MUC ) ) + ( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU / Max( MUM,MLU ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( ( ( Max( RCSe,MUM ) * RMSe ) * MUM ) * MUC ) ) ) - Min( CS ,( MUR - MUR ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2512967515779506}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( Min( FirstVNF_Mem_Server ,Min( Min( PN ,MDR ) ,( MDR + ( FirstVNF_CPU * ARS ) ) ) ) / ( ( FirstVNF_Mem_Server + CRS ) / ( MDR + ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,CS ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.45977935049025415}, {"determining": "( Max( ACS,( ( Min( RRS ,Const ) / ( ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) + ( Max( DDR,FirstVNF_CPU_Server ) / ARS ) ) + MRS ) ) - BR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( RMSe - CS ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,Min( ( MUM * ( RMSe - DS ) ) ,( RRSe + MUM ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.1515748031496063, "obj2": 0.719027515706529}, {"determining": "Min( ( Min( ( Min( ( ( PN - Min( PN ,MDR ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.045180162820525824}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( MDR - Max( ARS,ACS ) ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.4704724409448819, "obj2": 0.3355211926941566}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( MDR + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( RMSe - CS ) - CS ) ,( DS / DS ) ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( ( MUC / Min( DS ,CS ) ) - ( ( MUM + ( RRSe / CS ) ) / ( ( MUR * RCSe ) / MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.9586614173228346, "obj2": 0.015791381564447607}], "28": [{"determining": "Min( ( Min( ( Min( ( ( Const - FirstVNF_CPU ) * PN ) ,ACS ) / ( ARS - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( MDR * PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ),DS ) / ( ( RCSe * DS ) - Max( MLU,Min( Max( MUR,( MLU / RRSe ) ) ,( ( ( DS * RMSe ) / DS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - PN ) - FirstVNF_RAM_Server ) ,( ( Max( Min( FirstVNF_Mem_Server ,PN ),( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( FirstVNF_RAM_Server ,BR ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( ( MLU / MUC ) / Max( ( CS / MUM ),MUR ) ) - Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( PN / FirstVNF_RAM_Server ) + Min( ( DDR + ( Min( ACS ,( BR / Const ) ) * Min( Max( AMS,ARS ) ,MDR ) ) ) ,FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,( MRS + ARS ) ) - FirstVNF_RAM ) ) * ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RCSe ,MUR ) / ( Max( MUR,MUC ) / MUR ) ) / ( CS * RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8576522560637384}, {"determining": "( ( Max( MRS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - ( ARS - FirstVNF_CPU ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MUM ),MUR ) / Max( MLU,MLU ) )", "obj1": 0.4015748031496063, "obj2": 0.42013670174510015}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.23129750459143655}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - ( Min( DS ,MUC ) + ( RRSe - RRSe ) ) ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( MUR - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7458461275950927}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( ( FirstVNF_RAM / ( BR - FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.392413966945874}, {"determining": "Max( ( ( DDR + ( Min( ACS ,AMS ) * ( Const - MDR ) ) ) + FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MLU,( ( ( Min( RCSe ,( RCSe + RMSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( MLU - DS ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.23228346456692914, "obj2": 0.6090117619581018}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,( ( ARS / MRS ) / RRS ) ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) + ( ( Min( MUC ,RRSe ) + Max( RCSe,RMSe ) ) + RRSe ) ) )", "obj1": 0.6141732283464567, "obj2": 0.22453558533243279}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20887967831758358}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( MRS - ( FirstVNF_Mem_Server + ACS ) ) + ( DDR / PN ) ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / Min( MUC ,DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( MRS - MDR ) / ( ( Const / ( ( ARS * FirstVNF_Mem_Server ) * Const ) ) / ( MDR + ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( ( ( ( ( RRSe / ( MUC / DS ) ) - MUC ) * RCSe ) / Max( RRSe,( RMSe + MUC ) ) ) / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( MUR ,RCSe ) ),Max( CS,RMSe ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4492062780118169}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "Max( ( ( ( DDR / MRS ) + ( Min( ACS ,AMS ) * ( Const - MDR ) ) ) + FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( CRS * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,Min( ( ( ( MLU - CS ) / ( RMSe / MUC ) ) + MUR ) ,RCSe ) ) + DS ) ) / ( DS + MUC ) )", "obj1": 0.16929133858267717, "obj2": 0.7018661254279608}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37287002792506396}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( AMS - FirstVNF_CPU ) ),( Min( ( Min( ( DDR * DDR ) ,DDR ) * ( Const - FirstVNF_CPU ) ) ,Min( ( ( FirstVNF_CPU / PN ) * RRS ) ,FirstVNF_CPU_Server ) ) + ( ( BR / ( BR * FirstVNF_RAM ) ) * ( ACS * AMS ) ) ) ) ,( Max( MRS,( AMS + CRS ) ) / PN ) ) / ( Max( FirstVNF_CPU_Server,MDR ) + ( PN / MDR ) ) )", "choosing": "( ( Min( RRSe ,MUR ) * MUM ) - Min( CS ,RCSe ) )", "obj1": 0.328740157480315, "obj2": 0.5070350206836896}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.03588156442615642}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7645104437838857}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( Min( MRS ,ACS ) / RRS ) + ( DDR / PN ) ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.3075876121211308}, {"determining": "Min( ( Min( ( ( MRS + ACS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( Min( FirstVNF_RAM_Server ,BR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,PN ) ),Min( FirstVNF_RAM_Server ,BR ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( Max( DS,( RMSe + ( RMSe + ( RRSe + DS ) ) ) ) * ( MUC * RMSe ) ) ) - Min( Min( MUM ,( Min( RCSe ,( ( ( MUR - MUC ) / MLU ) * ( RMSe / Min( RRSe ,RRSe ) ) ) ) - RMSe ) ) ,Min( ( Max( MLU,( MUR * MUC ) ) / RMSe ) ,RCSe ) ) )", "obj1": 0.6476377952755905, "obj2": 0.1949958508031028}, {"determining": "Max( Min( FirstVNF_Mem_Server ,( RRS * RRS ) ),( Min( Max( ( ACS - ( ( FirstVNF_Mem * Min( RRS ,BR ) ) - ( ( ARS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ,( ( Const / Const ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( ( ( RRSe * ( RRSe - MUM ) ) + Max( ( RRSe / MUR ),MUM ) ) ,( MUM / RMSe ) ) ) ) * CS ) )", "obj1": 0.18503937007874016, "obj2": 0.6536873483727235}, {"determining": "( ( ACS * PN ) - ( ( ACS - BR ) / Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ( FirstVNF_Mem + ARS ),Min( CRS ,FirstVNF_Mem ) ) ) + MDR ) ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( MUC * DS ) - RMSe ) ) ,( ( DS - Max( Min( MUR ,RCSe ),MUM ) ) + RMSe ) ) ) - CS ) )", "obj1": 0.7755905511811023, "obj2": 0.08409807761287728}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "( ( RRS * CRS ) - ( Max( MRS,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,Min( ( FirstVNF_Mem + AMS ) ,MRS ) ) ) )", "choosing": "( Min( Max( ( MUR + RMSe ),Min( MUR ,MUM ) ) ,( ( ( MUM + DS ) * MUM ) - ( MUM / DS ) ) ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5452652136227852}, {"determining": "( ( ACS * PN ) - ( Max( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ),DDR ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) * ( MLU * DS ) ) / ( Max( ( ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8188976377952756, "obj2": 0.07117552418623425}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( DDR / ( ( ( FirstVNF_RAM + ARS ) / FirstVNF_Mem ) + ACS ) ) ) / Min( ( Min( Const ,MDR ) * ( ACS + BR ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUC * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( RCSe / ( Max( RRSe,MUM ) / Max( ( ( MUM + Max( DS,CS ) ) * MUR ),( RRSe / Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5600561084173625}, {"determining": "( ( ( ARS * ( ( ( ( FirstVNF_Mem_Server - PN ) / Max( PN,FirstVNF_Mem ) ) + FirstVNF_CPU ) / PN ) ) + FirstVNF_RAM ) * ( FirstVNF_RAM_Server + ( Max( FirstVNF_Mem_Server,CRS ) * ( ACS + RRS ) ) ) )", "choosing": "( Max( ( MLU * ( MUM * Max( ( ( RMSe + RCSe ) * Min( RMSe ,( CS * CS ) ) ),( ( ( CS + DS ) / CS ) / ( RMSe + CS ) ) ) ) ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( DS + Min( ( MUM + RCSe ) ,MUM ) ) ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ) ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.35111251947592953}, {"determining": "( ( ACS + DDR ) / Min( ( FirstVNF_Mem / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ,Const ) )", "choosing": "( ( ( MUR + ( ( Min( MUM ,CS ) / ( ( DS / DS ) + RCSe ) ) + Min( ( ( MUM * MLU ) * CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( ( MUM / MLU ) + Min( Min( ( MUR / MUR ) ,( MLU + MUR ) ) ,( MUM + ( Min( MUM ,MLU ) * RMSe ) ) ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3464566929133858, "obj2": 0.49503249649122544}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / ( FirstVNF_Mem - ( AMS * Const ) ) ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( CS * DS ) + DS ) + MUM ) / Min( ( ( MUC / ( ( MUM * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6220472440944882, "obj2": 0.21876583926706078}, {"determining": "( ( MRS - ( Const + CRS ) ) / ( Const - Min( ( FirstVNF_CPU_Server / AMS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( Min( ( ( DS - RCSe ) - Min( Min( RCSe ,MUM ) ,CS ) ) ,( DS * DS ) ) + ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) ) ) / ( MUR + CS ) ) + Min( ( Min( RRSe ,( Min( Max( ( MUM / RRSe ),MUC ) ,Min( RRSe ,MUR ) ) / ( MUM + ( RCSe - CS ) ) ) ) - MLU ) ,( DS * Min( ( DS - RRSe ) ,RRSe ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4852988797343123}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server * MDR ) - Min( FirstVNF_Mem ,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),Min( Max( PN,MRS ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( ( Max( ( MUR / RMSe ),CS ) / MUR ),Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( MUM / MUM ),RCSe ),( CS + ( MUR * MUM ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.680198249634941}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ) + DDR ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( RCSe,MLU ) / ( ( RCSe * DS ) - Max( ( ( MUC - MUM ) - MUC ),( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10671649113601032}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "Max( ( AMS / PN ),Max( FirstVNF_Mem,PN ) )", "choosing": "( ( ( RRSe * DS ) - Max( MLU,( Max( RMSe,DS ) / MUM ) ) ) / Max( ( CS * MLU ),MUR ) )", "obj1": 0.14173228346456693, "obj2": 0.7327587892892451}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "( ( ( BR - ARS ) / ( Min( Min( AMS ,( FirstVNF_CPU_Server / DDR ) ) ,Min( AMS ,CRS ) ) / ( ( FirstVNF_RAM / ( FirstVNF_CPU - ACS ) ) + MDR ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( DS / Max( ( ( ( DS / ( MUR + RRSe ) ) / Min( DS ,DS ) ) - MLU ),Min( RMSe ,( MLU * ( ( Max( RCSe,CS ) / ( MUR * CS ) ) * RRSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.21850393700787402, "obj2": 0.6172957303581308}, {"determining": "Max( ( Min( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + FirstVNF_CPU ),( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( ( BR / ( AMS * CRS ) ) * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / CS )", "obj1": 0.17716535433070865, "obj2": 0.6663659373812727}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + ( Min( CRS ,BR ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) ) ) - Min( CS ,MUM ) )", "obj1": 0.2637795275590551, "obj2": 0.5775601680256315}, {"determining": "Max( ( Min( ( ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) * ( RRS / ( ACS - ( MDR * ACS ) ) ) ) ,Min( RRS ,Const ) ) * FirstVNF_Mem_Server ),( Const - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( DS / Min( ( MLU - ( ( DS * RMSe ) - Min( ( RCSe / MUR ) ,DS ) ) ) ,( Max( ( ( DS + CS ) + ( RMSe + DS ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - ( ( Min( Min( MUR ,( ( CS - ( MUR * DS ) ) + ( MUM + Min( MUR ,MLU ) ) ) ) ,MUC ) + ( MUC / Min( CS ,( RCSe / ( ( DS / RRSe ) - RRSe ) ) ) ) ) - RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6430432626800384}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( FirstVNF_CPU_Server ,( ( Const - ( MDR + FirstVNF_CPU_Server ) ) * MDR ) ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.25196850393700787, "obj2": 0.5800106216744582}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( DS * RMSe ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.33858267716535434, "obj2": 0.5014965239600612}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( RRSe / ( ( MUC * ( ( ( ( CS * RCSe ) + CS ) * RMSe ) + CS ) ) * ( MUC * RMSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.27165354330708663, "obj2": 0.5685403262890067}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( FirstVNF_CPU_Server - MDR ) ) ) ) + BR ) ) / ( ACS - ( ACS * PN ) ) ) )", "choosing": "( Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ) ) ) / ( ( RCSe * ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / RMSe ) ,( DS - ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05562896175250742}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,ACS ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - CS ) ,( DS / DS ) ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( DS * DS ) ) ,MUR ) ) )", "obj1": 0.7263779527559056, "obj2": 0.14172019385714132}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( Min( ( MLU / RRSe ) ,( RCSe + RMSe ) ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.5354330708661418, "obj2": 0.2697721989037047}, {"determining": "( ( FirstVNF_CPU * PN ) - ( Min( ( MDR - BR ) ,FirstVNF_Mem ) / ( ( Min( ( FirstVNF_Mem_Server / ( AMS * MRS ) ) ,MRS ) / MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( Min( Min( ( RCSe - ( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) ,DS ) - CS ) ,( DS / DS ) ) + Min( ( ( DS / MLU ) / ( ( RMSe / Min( DS ,CS ) ) - ( CS / RMSe ) ) ) ,MUR ) ) )", "obj1": 0.7224409448818898, "obj2": 0.146461425421866}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,AMS ) / ( ( FirstVNF_CPU + ( ( Const / FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server + Max( PN,FirstVNF_RAM_Server ) ) + ( MRS / PN ) ) ) ) / ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RRSe / Min( Max( Max( Max( MLU,Max( MUR,MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + ( ( ( RCSe - DS ) - MUM ) - Min( MUC ,Min( MUC ,Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.46855489100277287}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( MDR - Max( ARS,ACS ) ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RCSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe / Max( MUC,DS ) ) ) ) - CS ) )", "obj1": 0.42322834645669294, "obj2": 0.3874650613980654}, {"determining": "( Max( ( MDR - Const ),ACS ) - ( ( Min( BR ,FirstVNF_CPU ) - BR ) - ( PN * CRS ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( RMSe - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.4940944881889764, "obj2": 0.29580530116570275}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6535433070866141, "obj2": 0.18911972928693024}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( ( RRS / ( FirstVNF_RAM_Server * Const ) ) - DDR ) ,MDR ) ) - FirstVNF_RAM ) ) * Min( FirstVNF_Mem ,ARS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( ( MUM + Max( ( DS / MLU ),MUC ) ) * ( DS * ( RCSe - ( RRSe / ( ( DS * MUR ) + RRSe ) ) ) ) ) ) / Max( ( RMSe / RCSe ),( Max( ( MUC + Max( MUC,( ( MUC / MUM ) / ( DS / DS ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( DS,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.831041157585384}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( MDR + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( DS / Max( ( ( DS - CS ) - CS ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.9448818897637795, "obj2": 0.02084142825664055}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( RCSe * DS ) - RMSe ) ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.4547244094488189, "obj2": 0.343595592932589}, {"determining": "( Min( ACS ,( Max( MRS,( ( Const * ( RRS / RRS ) ) * ACS ) ) * ( AMS + Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( ( ACS / ( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( RCSe * DS ) - RMSe ) ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.9744094488188977, "obj2": 0.008287543423625662}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "( Max( ( Const - ( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) / MRS ) ) ),( FirstVNF_RAM_Server * PN ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) + ( RRSe + ( ( MLU * Max( Max( MUR,MUR ),Max( RRSe,MUR ) ) ) * RMSe ) ) )", "obj1": 0.42913385826771655, "obj2": 0.37877474682236184}, {"determining": "( Max( ( ( Min( RRS ,Const ) * ( FirstVNF_CPU * DDR ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RCSe ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.5767716535433071, "obj2": 0.24730386036049992}, {"determining": "( ( ACS * ( FirstVNF_CPU_Server + RRS ) ) - ( Max( Min( PN ,MDR ),( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( RCSe * DS ) - RMSe ) ) ,Max( RMSe,Max( CS,( ( MLU + MUR ) + RRSe ) ) ) ) ) - CS ) )", "obj1": 0.484251968503937, "obj2": 0.3031872064968013}, {"determining": "( Min( Min( Const ,BR ) ,Max( Min( RRS ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( ( ( MLU - Max( ( CS / ( RMSe - RRSe ) ),CS ) ) + RMSe ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8392426751097208}, {"determining": "( ( Min( ( MDR * AMS ) ,( ( ( ( Max( ACS,ARS ) / MRS ) - BR ) - MDR ) * Min( AMS ,FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( CS - MUM ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Min( RCSe ,MUC ) ) ) ) ) - Min( MUM ,MUM ) )", "obj1": 0.5452755905511811, "obj2": 0.2655047896874593}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( ( FirstVNF_RAM - Min( ( RRS - ( Max( PN,DDR ) / PN ) ) ,( ACS * PN ) ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) - ( DS * DS ) ) / Max( ( RCSe / Max( DS,( MUM * Min( RMSe ,RRSe ) ) ) ),Min( Max( Min( ( Max( Min( RRSe ,MUR ),( MUM - DS ) ) * MUR ) ,RMSe ),CS ) ,MUC ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8480371235354126}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - ( ( ( Min( RRS ,Const ) / MRS ) - BR ) - MDR ) ) ,ACS )", "choosing": "( ( ( Min( ( MUC * ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) ) ,( DS + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.07863158331778561}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Const ) )", "choosing": "( Max( ( CS * ( ( MUC + MUC ) + MUC ) ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.6988188976377953, "obj2": 0.15345998749165496}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5336332250114763}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( ( Max( RRSe,( MUR - ( MUM / RRSe ) ) ) + ( RMSe / MUM ) ) + DS ) / DS ) ) )", "obj1": 0.4625984251968504, "obj2": 0.33681929103764674}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( CS ,Max( ( Max( MUM,RCSe ) / MUC ),RRSe ) ) ) ) - CS ) )", "obj1": 0.21456692913385828, "obj2": 0.6229573472911288}, {"determining": "( Max( Min( ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) * ( ( ( Min( RRS ,ACS ) / FirstVNF_CPU ) - BR ) - MDR ) ) ,( MDR * AMS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( MLU,( ( ( Min( RCSe ,( RCSe + RMSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( MLU - DS ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5275590551181102, "obj2": 0.2758635570602323}, {"determining": "( Max( Min( ( Min( ( ( FirstVNF_RAM / ACS ) + MDR ) ,AMS ) * ( ( ( FirstVNF_CPU + PN ) - BR ) - FirstVNF_CPU_Server ) ) ,( AMS * MDR ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( ( ( RRSe - MLU ) + RRSe ),( ( ( DS - ( DS * MUC ) ) + ( MUM / MUM ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / MUC ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5511811023622047, "obj2": 0.2605156991057105}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( ( FirstVNF_RAM - FirstVNF_CPU ) + ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / MDR ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( Max( CS,( ( MUC + MUC ) + MUC ) ),MUR ) / ( ( RCSe * DS ) - Max( Min( RRSe ,DS ),( Min( Max( MUC,DS ) ,MUM ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7834645669291339, "obj2": 0.08125649709013441}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.16154554854700837}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,ACS ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.7066929133858267, "obj2": 0.15020897109842565}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( ( ( BR - ARS ) / ( Min( PN ,FirstVNF_CPU ) / ( ( FirstVNF_RAM / ( PN - ACS ) ) + MDR ) ) ) - ( ACS * PN ) )", "choosing": "( ( DS / Max( ( MLU - ( ( DS * RMSe ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.20866141732283464, "obj2": 0.6306223821078232}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,( ( ( DS - CS ) - CS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5398989859312635}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) * ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,( ( ( ( RCSe / ( MUM + MLU ) ) + ( RRSe - RCSe ) ) * ( ( MLU - ( MUM + RCSe ) ) / DS ) ) + ( RRSe / RMSe ) ) ) / DS ) - ( CS / ( ( MUM * MUC ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.480142835932235}, {"determining": "Max( ( Min( PN ,BR ) + FirstVNF_CPU ),( Min( ( ( Max( FirstVNF_CPU,( MRS / FirstVNF_RAM ) ) / AMS ) * ( Const - MDR ) ) ,( ( BR / ( CRS * CRS ) ) * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( ( DS + ( RCSe * DS ) ) - ( DS + ( CS * Max( RRSe,( ( RCSe + MLU ) / Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.1732283464566929, "obj2": 0.6725428700251118}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( MRS * Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) / FirstVNF_RAM_Server ) + ( ( DDR * FirstVNF_RAM_Server ) * CRS ) ) )", "choosing": "( ( DS + Max( Max( ( RRSe / MUR ),( CS / MUM ) ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6732283464566929, "obj2": 0.18452956696784917}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / Max( FirstVNF_CPU,AMS ) ),( Min( ( Min( ( FirstVNF_CPU_Server / DDR ) ,AMS ) * ( Const - Max( BR,FirstVNF_CPU ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * MDR ) )", "choosing": "Min( ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) ,( CS / MUR ) )", "obj1": 0.3700787401574803, "obj2": 0.4769342192335457}, {"determining": "( Min( Max( Max( FirstVNF_Mem_Server,DDR ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + RCSe ) - ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.39173228346456695, "obj2": 0.4547366147896316}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( Max( ( ACS - FirstVNF_CPU_Server ),( FirstVNF_Mem - ( CRS + DDR ) ) ) / Const ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MLU / ( MUR + MUC ) ) + ( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU / Max( MUM,MLU ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( ( ( Max( RCSe,MUM ) * RMSe ) * MUM ) * MUC ) ) ) - Min( CS ,( MUR - MUR ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2512967515779506}, {"determining": "Min( ( ( ( Min( ( ( FirstVNF_Mem - Min( FirstVNF_CPU ,MDR ) ) * PN ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( ( ( RMSe + ( ( RRSe / ( RRSe / CS ) ) * Max( DS,( MUC / RMSe ) ) ) ) * ( ( RCSe + MUM ) * ( RMSe - RRSe ) ) ) / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RMSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( RMSe / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.04223708602390664}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( MDR + Min( BR ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( Max( RRSe,RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,( Max( MUC,MUM ) - ( DS * MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.46135373167162275}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,Min( CRS ,MRS ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * MUR ) - CS ) )", "obj1": 0.8070866141732284, "obj2": 0.0732785275241343}, {"determining": "( ( ACS * PN ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( ( RRS * ( Min( MDR ,FirstVNF_CPU_Server ) / PN ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( RCSe - DS ) + MUC ) / Max( ( DS / DS ),RCSe ) ) + ( RMSe + ( DS / RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6673228346456693, "obj2": 0.18702282324818226}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ( ACS * PN ) * MDR ) + ( CRS + FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( DS - RCSe ) - MUM ) + MUM ),Min( ( ( MUC / Max( ( DS * RCSe ),RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) / MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.005183365726254115}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( ( ( ARS + FirstVNF_Mem_Server ) - BR ) - BR ) )", "choosing": "Min( Max( CS,MLU ) ,MUC )", "obj1": 0.4468503937007874, "obj2": 0.34812179206897814}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( MDR + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( RMSe - CS ) - CS ) ,( DS / DS ) ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( ( MUC / Min( DS ,CS ) ) - ( ( MUM + ( RRSe / CS ) ) / ( ( MUR * RCSe ) / MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.9586614173228346, "obj2": 0.015791381564447607}, {"determining": "( Max( Min( ( ( ACS * PN ) - ( Max( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ),DDR ) / ( ACS - MRS ) ) ) ,( MDR * AMS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) / Max( MLU,( ( DS + ( MUM / MUM ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / MUC ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5137795275590551, "obj2": 0.28207800751361445}, {"determining": "( Min( PN ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,( RMSe + MUC ) ) - MUC ) - Min( CS ,MUM ) )", "obj1": 0.5019685039370079, "obj2": 0.29332037171033054}], "29": [{"determining": "( ( Max( Min( PN ,MDR ),( ( ( FirstVNF_CPU + PN ) * Min( RRS ,BR ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) - ( ACS * ( FirstVNF_CPU_Server + RRS ) ) )", "choosing": "( Max( ( CS * ( ( MUC + MUC ) + MUC ) ),MUR ) / ( ( RCSe * DS ) - Max( DS,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( ( MUC - MUC ) * MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( ( ( Const - FirstVNF_CPU ) * PN ) ,ACS ) / ( ARS - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( MDR * PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ),DS ) / ( ( RCSe * DS ) - Max( MLU,Min( Max( MUR,( MLU / RRSe ) ) ,( ( ( DS * RMSe ) / DS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( RRS - ( ( Const - MDR ) * PN ) ) ,( Const - MDR ) ) ) - FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( ( MUC / MUM ) / ( CS / RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8872550996306123}, {"determining": "( ( Max( MRS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - ( ARS - FirstVNF_CPU ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MUM ),MUR ) / Max( MLU,MLU ) )", "obj1": 0.4015748031496063, "obj2": 0.42013670174510015}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.23129750459143655}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - ( Min( DS ,MUC ) + ( RRSe - RRSe ) ) ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( MUR - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7458461275950927}, {"determining": "Max( ( ( DDR + ( Min( ACS ,AMS ) * ( Const - MDR ) ) ) + FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( MDR * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MLU,( ( ( Min( RCSe ,( RCSe + RMSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( MLU - DS ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.23228346456692914, "obj2": 0.6090117619581018}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( ( FirstVNF_RAM / ( BR - FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.392413966945874}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,( ( ARS / MRS ) / RRS ) ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) + ( ( Min( MUC ,RRSe ) + Max( RCSe,RMSe ) ) + RRSe ) ) )", "obj1": 0.6141732283464567, "obj2": 0.22453558533243279}, {"determining": "Min( ( Min( ( Min( Max( PN,( PN - Min( ARS ,MDR ) ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - ( BR + BR ) ) ,ACS )", "choosing": "( ( ( DS * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8720472440944882, "obj2": 0.04945900464581868}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "Max( ( Min( ( ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) * ( RRS / ( ACS - ( MDR * ACS ) ) ) ) ,Min( RRS ,Const ) ) * FirstVNF_Mem_Server ),( Const - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( DS / Min( ( MLU - ( ( DS * RMSe ) - Min( ( RCSe / MUR ) ,DS ) ) ) ,( Max( ( ( DS + CS ) + ( RMSe + DS ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - ( ( Min( Min( MUR ,( ( CS - ( MUR * DS ) ) + ( MUM + Min( MUR ,MLU ) ) ) ) ,MUC ) + ( MUC / Min( CS ,( RCSe / ( ( DS / RRSe ) - RRSe ) ) ) ) ) - RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6430432626800384}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20887967831758358}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( MRS - ( FirstVNF_Mem_Server + ACS ) ) + ( DDR / PN ) ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / Min( MUC ,DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( ( MRS - MDR ) / ( ( Const / ( ( ARS * FirstVNF_Mem_Server ) * Const ) ) / ( MDR + ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( ( ( ( ( RRSe / ( MUC / DS ) ) - MUC ) * RCSe ) / Max( RRSe,( RMSe + MUC ) ) ) / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( MUR ,RCSe ) ),Max( CS,RMSe ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4492062780118169}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "Max( ( ( ( DDR / MRS ) + ( Min( ACS ,AMS ) * ( Const - MDR ) ) ) + FirstVNF_CPU ),( Min( ( Min( FirstVNF_Mem ,AMS ) * ( Const - MDR ) ) ,( CRS * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Max( MUR,Min( ( ( ( MLU - CS ) / ( RMSe / MUC ) ) + MUR ) ,RCSe ) ) + DS ) ) / ( DS + MUC ) )", "obj1": 0.16929133858267717, "obj2": 0.7018661254279608}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( Max( ( ( PN / FirstVNF_RAM_Server ) + Min( ( DDR + ( Min( ACS ,( BR / Const ) ) * Min( Max( AMS,ARS ) ,MDR ) ) ) ,FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,( MRS + ARS ) ) - FirstVNF_RAM ) ) * ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RCSe ,MUR ) / ( Max( MUR,MUC ) / MUR ) ) / ( CS * RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8576522560637384}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37287002792506396}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( AMS - FirstVNF_CPU ) ),( Min( ( Min( ( DDR * DDR ) ,DDR ) * ( Const - FirstVNF_CPU ) ) ,Min( ( ( FirstVNF_CPU / PN ) * RRS ) ,FirstVNF_CPU_Server ) ) + ( ( BR / ( BR * FirstVNF_RAM ) ) * ( ACS * AMS ) ) ) ) ,( Max( MRS,( AMS + CRS ) ) / PN ) ) / ( Max( FirstVNF_CPU_Server,MDR ) + ( PN / MDR ) ) )", "choosing": "( ( Min( RRSe ,MUR ) * MUM ) - Min( CS ,RCSe ) )", "obj1": 0.328740157480315, "obj2": 0.5070350206836896}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( MDR + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( RMSe - CS ) - CS ) ,( DS / DS ) ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( ( MUC / Min( DS ,CS ) ) - ( ( MUM + ( RRSe / CS ) ) / ( ( MUR * RCSe ) / MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.9586614173228346, "obj2": 0.015791381564447607}, {"determining": "( ( ( BR - ARS ) / ( Min( PN ,FirstVNF_CPU ) / ( ( FirstVNF_RAM / ( PN - ACS ) ) + MDR ) ) ) - ( ACS * PN ) )", "choosing": "( ( DS / Max( ( MLU - ( ( DS * RMSe ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.20866141732283464, "obj2": 0.6306223821078232}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7645104437838857}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( Min( MRS ,ACS ) / RRS ) + ( DDR / PN ) ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.3075876121211308}, {"determining": "Min( ( Min( ( ( MRS + ACS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( Min( FirstVNF_RAM_Server ,BR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,PN ) ),Min( FirstVNF_RAM_Server ,BR ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( Max( DS,( RMSe + ( RMSe + ( RRSe + DS ) ) ) ) * ( MUC * RMSe ) ) ) - Min( Min( MUM ,( Min( RCSe ,( ( ( MUR - MUC ) / MLU ) * ( RMSe / Min( RRSe ,RRSe ) ) ) ) - RMSe ) ) ,Min( ( Max( MLU,( MUR * MUC ) ) / RMSe ) ,RCSe ) ) )", "obj1": 0.6476377952755905, "obj2": 0.1949958508031028}, {"determining": "( ( ACS * PN ) - ( ( ACS - BR ) / Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ( FirstVNF_Mem + ARS ),Min( CRS ,FirstVNF_Mem ) ) ) + MDR ) ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( MUC * DS ) - RMSe ) ) ,( ( DS - Max( Min( MUR ,RCSe ),MUM ) ) + RMSe ) ) ) - CS ) )", "obj1": 0.7755905511811023, "obj2": 0.08409807761287728}, {"determining": "Max( ( AMS / PN ),Max( FirstVNF_Mem,PN ) )", "choosing": "( ( ( RRSe * DS ) - Max( MLU,( Max( RMSe,DS ) / MUM ) ) ) / Max( ( CS * MLU ),MUR ) )", "obj1": 0.14173228346456693, "obj2": 0.7327587892892451}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( ( RRS * CRS ) - ( Max( MRS,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,Min( ( FirstVNF_Mem + AMS ) ,MRS ) ) ) )", "choosing": "( Min( Max( ( MUR + RMSe ),Min( MUR ,MUM ) ) ,( ( ( MUM + DS ) * MUM ) - ( MUM / DS ) ) ) + ( ( RCSe / Min( Max( Max( Max( Min( MUM ,RRSe ),MLU ),Min( CS ,( RRSe * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - Max( ( ( RMSe - RCSe ) - Max( MUM,RCSe ) ),Min( CS ,MUM ) ) ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5452652136227852}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( DDR / ( ( ( FirstVNF_RAM + ARS ) / FirstVNF_Mem ) + ACS ) ) ) / Min( ( Min( Const ,MDR ) * ( ACS + BR ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUC * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( RCSe / ( Max( RRSe,MUM ) / Max( ( ( MUM + Max( DS,CS ) ) * MUR ),( RRSe / Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5600561084173625}, {"determining": "( ( ( ARS * ( ( ( ( FirstVNF_Mem_Server - PN ) / Max( PN,FirstVNF_Mem ) ) + FirstVNF_CPU ) / PN ) ) + FirstVNF_RAM ) * ( FirstVNF_RAM_Server + ( Max( FirstVNF_Mem_Server,CRS ) * ( ACS + RRS ) ) ) )", "choosing": "( Max( ( MLU * ( MUM * Max( ( ( RMSe + RCSe ) * Min( RMSe ,( CS * CS ) ) ),( ( ( CS + DS ) / CS ) / ( RMSe + CS ) ) ) ) ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( DS + Min( ( MUM + RCSe ) ,MUM ) ) ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ) ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.35111251947592953}, {"determining": "( ( ACS * PN ) - ( Max( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ),DDR ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) * ( MLU * DS ) ) / ( Max( ( ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8188976377952756, "obj2": 0.07117552418623425}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / RRSe ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6200787401574803, "obj2": 0.2141726404259328}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "Min( ( ( ( Min( ( ( FirstVNF_Mem - Min( FirstVNF_CPU ,MDR ) ) * PN ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( ( ( RMSe + ( ( RRSe / ( RRSe / CS ) ) * Max( DS,( MUC / RMSe ) ) ) ) * ( ( RCSe + MUM ) * ( RMSe - RRSe ) ) ) / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RMSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( RMSe / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.04223708602390664}, {"determining": "( ( MRS - ( Const + CRS ) ) / ( Const - Min( ( FirstVNF_CPU_Server / AMS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( Min( ( ( DS - RCSe ) - Min( Min( RCSe ,MUM ) ,CS ) ) ,( DS * DS ) ) + ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) ) ) / ( MUR + CS ) ) + Min( ( Min( RRSe ,( Min( Max( ( MUM / RRSe ),MUC ) ,Min( RRSe ,MUR ) ) / ( MUM + ( RCSe - CS ) ) ) ) - MLU ) ,( DS * Min( ( DS - RRSe ) ,RRSe ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4852988797343123}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server * MDR ) - Min( FirstVNF_Mem ,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),Min( Max( PN,MRS ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( ( Max( ( MUR / RMSe ),CS ) / MUR ),Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( MUM / MUM ),RCSe ),( CS + ( MUR * MUM ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.680198249634941}, {"determining": "Max( Min( FirstVNF_Mem_Server ,( RRS * RRS ) ),( Min( Max( ( ACS - ( ( FirstVNF_Mem * Min( RRS ,BR ) ) - ( ( ARS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ,( ( Const / Const ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( ( ( RRSe * ( RRSe - MUM ) ) + Max( ( RRSe / MUR ),MUM ) ) ,( MUM / RMSe ) ) ) ) * CS ) )", "obj1": 0.18503937007874016, "obj2": 0.6536873483727235}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "( ( ( BR - ARS ) / ( Min( Min( AMS ,( FirstVNF_CPU_Server / DDR ) ) ,Min( AMS ,CRS ) ) / ( ( FirstVNF_RAM / ( FirstVNF_CPU - ACS ) ) + MDR ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( DS / Max( ( ( ( DS / ( MUR + RRSe ) ) / Min( DS ,DS ) ) - MLU ),Min( RMSe ,( MLU * ( ( Max( RCSe,CS ) / ( MUR * CS ) ) * RRSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.21850393700787402, "obj2": 0.6172957303581308}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( MDR + Min( BR ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( Max( RRSe,RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,( Max( MUC,MUM ) - ( DS * MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.46135373167162275}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - ( ( ( Min( RRS ,Const ) / MRS ) - BR ) - MDR ) ) ,ACS )", "choosing": "( ( ( Min( ( MUC * ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) ) ,( DS + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.07863158331778561}, {"determining": "( Max( ( Const - Max( BR,FirstVNF_CPU ) ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / Min( ( CS * MUC ) ,( RCSe + RMSe ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5738749764717745}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( RRSe / ( ( MUC * ( ( ( ( CS * RCSe ) + CS ) * RMSe ) + CS ) ) * ( MUC * RMSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.27165354330708663, "obj2": 0.5685403262890067}, {"determining": "( ( FirstVNF_CPU * PN ) - ( Min( ( MDR - BR ) ,FirstVNF_Mem ) / ( ( Min( ( FirstVNF_Mem_Server / ( AMS * MRS ) ) ,MRS ) / MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( Min( Min( ( RCSe - ( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) ,DS ) - CS ) ,( DS / DS ) ) + Min( ( ( DS / MLU ) / ( ( RMSe / Min( DS ,CS ) ) - ( CS / RMSe ) ) ) ,MUR ) ) )", "obj1": 0.7224409448818898, "obj2": 0.146461425421866}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,ACS ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - CS ) ,( DS / DS ) ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( DS * DS ) ) ,MUR ) ) )", "obj1": 0.7263779527559056, "obj2": 0.14090709978267887}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( MDR + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( DS / Max( ( ( DS - CS ) - CS ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.9448818897637795, "obj2": 0.02084142825664055}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9094488188976378, "obj2": 0.03530609869183174}, {"determining": "( Min( Max( Max( FirstVNF_Mem_Server,DDR ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + RCSe ) - ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.39173228346456695, "obj2": 0.4547366147896316}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,AMS ) / ( ( FirstVNF_CPU + ( ( Const / FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server + Max( PN,FirstVNF_RAM_Server ) ) + ( MRS / PN ) ) ) ) / ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RRSe / Min( Max( Max( Max( MLU,Max( MUR,MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + ( ( ( RCSe - DS ) - MUM ) - Min( MUC ,Min( MUC ,Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.46855489100277287}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6535433070866141, "obj2": 0.18911972928693024}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( MDR - Max( ARS,ACS ) ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RCSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe / Max( MUC,DS ) ) ) ) - CS ) )", "obj1": 0.42322834645669294, "obj2": 0.3874650613980654}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( ( RRS / ( FirstVNF_RAM_Server * Const ) ) - DDR ) ,MDR ) ) - FirstVNF_RAM ) ) * Min( FirstVNF_Mem ,ARS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( ( MUM + Max( ( DS / MLU ),MUC ) ) * ( DS * ( RCSe - ( RRSe / ( ( DS * MUR ) + RRSe ) ) ) ) ) ) / Max( ( RMSe / RCSe ),( Max( ( MUC + Max( MUC,( ( MUC / MUM ) / ( DS / DS ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( DS,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.831041157585384}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "( Max( ( Const - ( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) / MRS ) ) ),( FirstVNF_RAM_Server * PN ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) + ( RRSe + ( ( MLU * Max( Max( MUR,MUR ),Max( RRSe,MUR ) ) ) * RMSe ) ) )", "obj1": 0.42913385826771655, "obj2": 0.37877474682236184}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - ( ACS * MDR ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS * ( ( CS - CS ) - ( ( RCSe / ( MUC - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.8484251968503937, "obj2": 0.05716960684549551}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( DS * RMSe ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.33858267716535434, "obj2": 0.5014965239600612}, {"determining": "( ( ACS + DDR ) / Min( ( FirstVNF_Mem / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ,Const ) )", "choosing": "( ( ( MUR + ( ( Min( MUM ,CS ) / ( ( DS / DS ) + RCSe ) ) + Min( ( ( MUM * MLU ) * CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( ( MUM / MLU ) + Min( Min( ( MUR / MUR ) ,( MLU + MUR ) ) ,( MUM + ( Min( MUM ,MLU ) * RMSe ) ) ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3464566929133858, "obj2": 0.49503249649122544}, {"determining": "( Max( ( ( Min( RRS ,Const ) * ( FirstVNF_CPU * DDR ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RCSe ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.5767716535433071, "obj2": 0.24730386036049992}, {"determining": "( Min( Min( Const ,BR ) ,Max( Min( RRS ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( ( ( MLU - Max( ( CS / ( RMSe - RRSe ) ),CS ) ) + RMSe ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8392426751097208}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( ( FirstVNF_RAM - Min( ( RRS - ( Max( PN,DDR ) / PN ) ) ,( ACS * PN ) ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) - ( DS * DS ) ) / Max( ( RCSe / Max( DS,( MUM * Min( RMSe ,RRSe ) ) ) ),Min( Max( Min( ( Max( Min( RRSe ,MUR ),( MUM - DS ) ) * MUR ) ,RMSe ),CS ) ,MUC ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8480371235354126}, {"determining": "Min( ( Min( ( Min( ( ( Const - DDR ) * PN ) ,ACS ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,( DS / DS ) ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.9389763779527559, "obj2": 0.024499162567285553}, {"determining": "( ( ACS * PN ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( ( RRS * ( Min( MDR ,FirstVNF_CPU_Server ) / PN ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( RCSe - DS ) + MUC ) / Max( ( DS / DS ),RCSe ) ) + ( RMSe + ( DS / RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6673228346456693, "obj2": 0.18702282324818226}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( FirstVNF_CPU_Server ,( ( Const - ( MDR + FirstVNF_CPU_Server ) ) * MDR ) ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.25196850393700787, "obj2": 0.5800106216744582}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5336332250114763}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( CS ,Max( ( Max( MUM,RCSe ) / MUC ),RRSe ) ) ) ) - CS ) )", "obj1": 0.21456692913385828, "obj2": 0.6229573472911288}, {"determining": "( Min( ACS ,( Max( MRS,( ( Const * ( RRS / RRS ) ) * ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ) * ( AMS + Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( ( ACS / ( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( RCSe * DS ) - MUC ) ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.9744094488188977, "obj2": 0.008287543423625662}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( ( FirstVNF_RAM - FirstVNF_CPU ) + ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / MDR ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( Max( CS,( ( MUC + MUC ) + MUC ) ),MUR ) / ( ( RCSe * DS ) - Max( Min( RRSe ,DS ),( Min( Max( MUC,DS ) ,MUM ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7834645669291339, "obj2": 0.08125649709013441}, {"determining": "( Max( Min( ( Min( ( ( FirstVNF_RAM / ACS ) + MDR ) ,AMS ) * ( ( ( FirstVNF_CPU + PN ) - BR ) - FirstVNF_CPU_Server ) ) ,( AMS * MDR ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( ( ( RRSe - MLU ) + RRSe ),( ( ( DS - ( DS * MUC ) ) + ( MUM / MUM ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / MUC ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5511811023622047, "obj2": 0.2605156991057105}, {"determining": "( ( ACS * ( FirstVNF_CPU_Server + RRS ) ) - ( Max( Min( PN ,MDR ),( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( RCSe * DS ) - RMSe ) ) ,Max( RMSe,Max( CS,( ( MLU + MUR ) + RRSe ) ) ) ) ) - CS ) )", "obj1": 0.484251968503937, "obj2": 0.3031872064968013}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,ACS ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.7066929133858267, "obj2": 0.15020897109842565}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( MRS * Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) / FirstVNF_RAM_Server ) + ( ( DDR * FirstVNF_RAM_Server ) * CRS ) ) )", "choosing": "( ( DS + Max( Max( ( RRSe / MUR ),( CS / MUM ) ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6732283464566929, "obj2": 0.18452956696784917}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,Min( CRS ,MRS ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * MUR ) - CS ) )", "obj1": 0.8070866141732284, "obj2": 0.0732785275241343}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,( ( ( DS - CS ) - CS ) - Min( ( CS / RMSe ) ,( DS + MUR ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5398989859312635}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( Min( ( MLU / RRSe ) ,( RCSe + RMSe ) ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.5354330708661418, "obj2": 0.2697721989037047}, {"determining": "( ( ( FirstVNF_CPU_Server * BR ) - Max( ACS,BR ) ) * ( AMS / FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / ( MUR * CS ) ) + ( DS / ( ( ( MUR - ( Min( ( RCSe * RMSe ) ,Min( MUM ,MUM ) ) - RRSe ) ) + DS ) / DS ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28727136128339215}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) * ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,( ( ( ( RCSe / ( MUM + MLU ) ) + ( RRSe - RCSe ) ) * ( ( MLU - ( MUM + RCSe ) ) / DS ) ) + ( RRSe / RMSe ) ) ) / DS ) - ( CS / ( ( MUM * MUC ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.480142835932235}, {"determining": "Max( ( Min( PN ,BR ) + FirstVNF_CPU ),( Min( ( ( Max( FirstVNF_CPU,( MRS / FirstVNF_RAM ) ) / AMS ) * ( Const - MDR ) ) ,( ( BR / ( CRS * CRS ) ) * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( ( DS + ( RCSe * DS ) ) - ( DS + ( CS * Max( RRSe,( ( RCSe + MLU ) / Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.1732283464566929, "obj2": 0.6725428700251118}, {"determining": "( Max( Min( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) ,( MDR * AMS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( MLU,( ( ( DS - ( DS * MUC ) ) + ( MUM / MUM ) ) - ( ( DS / ( MUC * RMSe ) ) - Min( ( CS / MUC ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5177165354330708, "obj2": 0.28205309806794887}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.16154554854700837}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / Max( FirstVNF_CPU,AMS ) ),( Min( ( Min( ( FirstVNF_CPU_Server / DDR ) ,AMS ) * ( Const - Max( BR,FirstVNF_CPU ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * MDR ) )", "choosing": "Min( ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) ,( CS / MUR ) )", "obj1": 0.3700787401574803, "obj2": 0.4769342192335457}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( FirstVNF_CPU_Server - MDR ) ) ) ) + BR ) ) / ( ACS - ( ACS * PN ) ) ) )", "choosing": "( ( Max( ( Min( ( MLU / RRSe ) ,( RCSe + RMSe ) ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.8543307086614174, "obj2": 0.05562896175250742}, {"determining": "( Min( ACS ,( Max( MRS,( ( Const * ( RRS / RRS ) ) * ACS ) ) * ( AMS + Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( ( ACS / ( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / ( ( RCSe * DS ) - RMSe ) ) ,( RMSe + ( DS / RMSe ) ) ) ) - CS ) )", "obj1": 0.9744094488188977, "obj2": 0.008287543423625662}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server * MDR ) - Min( FirstVNF_Mem ,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),Min( Max( PN,MRS ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( ( Max( ( MUR / RMSe ),CS ) / MUR ),Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( MUM / MUM ),RCSe ),( CS + ( MUR * MUM ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6657143633210894}, {"determining": "( ( Min( ( MDR * AMS ) ,( ( ( ( Max( ACS,ARS ) / MRS ) - BR ) - MDR ) * Min( AMS ,FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( CS - MUM ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Min( RCSe ,MUC ) ) ) ) ) - Min( MUM ,MUM ) )", "obj1": 0.5452755905511811, "obj2": 0.2655047896874593}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( Max( ( ACS - FirstVNF_CPU_Server ),( FirstVNF_Mem - ( CRS + DDR ) ) ) / Const ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MLU / ( MUR + MUC ) ) + ( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU / Max( MUM,MLU ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( ( ( Max( RCSe,MUM ) * RMSe ) * MUM ) * MUC ) ) ) - Min( CS ,( MUR - MUR ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2512967515779506}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ( ACS * PN ) * MDR ) + ( CRS + FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( DS - RCSe ) - MUM ) + MUM ),Min( ( ( MUC / Max( ( DS * RCSe ),RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) / MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.005183365726254115}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( Min( Min( CRS ,FirstVNF_Mem ) ,FirstVNF_Mem_Server ) + DDR ) ) + MDR ) ) / ( MRS - ACS ) ) )", "choosing": "( Max( RCSe,MLU ) / ( ( Min( ( ( MUR * ( DS + Max( MUC,MUR ) ) ) / RRSe ) ,MLU ) * ( MUC + RCSe ) ) - Max( ( ( ( DS / ( DS * RMSe ) ) - Min( ( CS / MUC ) ,( DS + MUR ) ) ) - MUC ),( Min( MUM ,Max( MLU,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.10593504197321059}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( Max( ( FirstVNF_CPU / PN ),( ( Min( PN ,MRS ) + AMS ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( DS / ( MLU / ( CS + DS ) ) ) ) ) / MLU ) ) )", "obj1": 0.4921259842519685, "obj2": 0.2971623505283679}], "30": [{"determining": "Min( ( ( FirstVNF_RAM_Server * PN ) - FirstVNF_CPU_Server ) ,( ( Max( MDR,( ( ACS * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - MRS ) ) - ( ( CRS + MDR ) + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) - ACS ) )", "choosing": "( Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUM + Max( RMSe,CS ) ) ) ),DS ) ,CS ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - CS ) ,( DS + DS ) ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( ( RMSe / Min( DS ,CS ) ) - ( ( MUM + ( RRSe / CS ) ) / ( ( MUR * RCSe ) / MUR ) ) ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( PN ,MDR ),( ( ( FirstVNF_CPU + PN ) * Min( RRS ,BR ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) - ( ACS * ( FirstVNF_CPU_Server + RRS ) ) )", "choosing": "( Max( ( CS * ( ( MUC + MUC ) + MUC ) ),MUR ) / ( ( RCSe * DS ) - Max( DS,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( ( MUC - MUC ) * MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( RRS - ( ( Const - MDR ) * PN ) ) ,( Const - MDR ) ) ) - FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( ( MUC / MUM ) / ( CS / RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8872550996306123}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( ( Max( MRS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - ( ARS - FirstVNF_CPU ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MUM ),MUR ) / Max( MLU,MLU ) )", "obj1": 0.4015748031496063, "obj2": 0.42013670174510015}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( MRS - ( FirstVNF_Mem_Server + ACS ) ) + ( DDR / PN ) ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / Min( MUC ,DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - ( Min( DS ,MUC ) + ( RRSe - RRSe ) ) ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( MUR - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7458461275950927}, {"determining": "Max( ( Min( Min( ( ( Const - ( Max( FirstVNF_Mem,ACS ) - Min( CRS ,FirstVNF_Mem ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( ( BR / ( CRS * AMS ) ) * AMS ) ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( MUM / RRSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,ACS ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.7066929133858267, "obj2": 0.15020897109842565}, {"determining": "( ( MRS - MDR ) / ( ( Const / ( ( ARS * FirstVNF_Mem_Server ) * Const ) ) / ( MDR + ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( ( ( ( ( RRSe / ( MUC / DS ) ) - MUC ) * RCSe ) / Max( RRSe,( RMSe + MUC ) ) ) / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( MUR ,RCSe ) ),Max( CS,RMSe ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4492062780118169}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( Max( ( ( PN / FirstVNF_RAM_Server ) + Min( ( DDR + ( Min( ACS ,( BR / Const ) ) * Min( Max( AMS,ARS ) ,MDR ) ) ) ,FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,( MRS + ARS ) ) - FirstVNF_RAM ) ) * ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RCSe ,MUR ) / ( Max( MUR,MUC ) / MUR ) ) / ( CS * RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8576522560637384}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Max( ACS,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( RCSe ,Min( Min( ( ( MLU / RRSe ) - DS ) ,MLU ) ,DS ) ) * ( MLU + ( RMSe + ( DS / ( DS + RMSe ) ) ) ) ) - MUM ) ,( DS / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37287002792506396}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( AMS - FirstVNF_CPU ) ),( Min( ( Min( ( DDR * DDR ) ,DDR ) * ( Const - FirstVNF_CPU ) ) ,Min( ( ( FirstVNF_CPU / PN ) * RRS ) ,FirstVNF_CPU_Server ) ) + ( ( BR / ( BR * FirstVNF_RAM ) ) * ( ACS * AMS ) ) ) ) ,( Max( MRS,( AMS + CRS ) ) / PN ) ) / ( Max( FirstVNF_CPU_Server,MDR ) + ( PN / MDR ) ) )", "choosing": "( ( Min( RRSe ,MUR ) * MUM ) - Min( CS ,RCSe ) )", "obj1": 0.328740157480315, "obj2": 0.5070350206836896}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "Max( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * ( DS + ( MUC + MUC ) ) ) ) ) / ( RMSe - Max( ( ( MUM / ( MUR - DS ) ) - RRSe ),( RMSe / ( RMSe + ( Min( RMSe ,MUM ) / CS ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39362163132959965}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9094488188976378, "obj2": 0.03530609869183174}, {"determining": "( Min( ACS ,( Max( MRS,( ( Const * ( RRS / RRS ) ) * ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ) * ( AMS + Min( Min( ( FirstVNF_CPU_Server / AMS ) ,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( ( ACS / ( ( ARS / ARS ) + ARS ) ) * ( Const - MDR ) ) - MDR ) )", "choosing": "Min( MUC ,( ( DS - RCSe ) - Min( Min( RCSe ,MUM ) ,CS ) ) )", "obj1": 0.9744094488188977, "obj2": 0.008265204178253814}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7645104437838857}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "( ( ( ARS * ( ( ( ( FirstVNF_Mem_Server - PN ) / Max( PN,FirstVNF_Mem ) ) + FirstVNF_CPU ) / PN ) ) + FirstVNF_RAM ) * ( FirstVNF_RAM_Server + ( Max( FirstVNF_Mem_Server,CRS ) * ( ACS + RRS ) ) ) )", "choosing": "( Max( ( MLU * ( MUM * Max( ( ( RMSe + RCSe ) * Min( RMSe ,( CS * CS ) ) ),( ( ( CS + DS ) / CS ) / ( RMSe + CS ) ) ) ) ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( DS + Min( ( MUM + RCSe ) ,MUM ) ) ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ) ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.35111251947592953}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,Min( CRS ,FirstVNF_Mem ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.7755905511811023, "obj2": 0.08409492551060462}, {"determining": "Max( ( AMS / PN ),Max( FirstVNF_Mem,PN ) )", "choosing": "( ( ( RRSe * DS ) - Max( MLU,( Max( RMSe,DS ) / MUM ) ) ) / Max( ( CS * MLU ),MUR ) )", "obj1": 0.14173228346456693, "obj2": 0.7327587892892451}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( MDR + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( RMSe - CS ) - CS ) ,( DS / DS ) ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( ( MUC / Min( DS ,CS ) ) - ( ( MUM + ( RRSe / CS ) ) / ( ( MUR * RCSe ) / MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.9586614173228346, "obj2": 0.015791381564447607}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( ( ACS * PN ) - ( Max( ( Min( CRS ,BR ) / FirstVNF_Mem_Server ),DDR ) / ( ACS - MRS ) ) )", "choosing": "( ( Max( ( ( MUC - MUM ) - MUC ),Min( ( ( RCSe + ( ( MUR / MUM ) * Min( CS ,MLU ) ) ) + MLU ) ,DS ) ) * ( MLU * DS ) ) / ( Max( ( ( ( DS / Max( MUM,( RCSe + MUM ) ) ) / MLU ) + CS ),MUC ) / MLU ) )", "obj1": 0.8188976377952756, "obj2": 0.07117552418623425}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( Min( ( MLU / RRSe ) ,( RCSe + RMSe ) ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.5354330708661418, "obj2": 0.2697721989037047}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( ACS + DDR ) / Min( ( FirstVNF_Mem / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ,Const ) )", "choosing": "( ( ( MUR + ( ( Min( MUM ,CS ) / ( ( DS / DS ) + RCSe ) ) + Min( ( ( MUM * MLU ) * CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( ( MUM / MLU ) + Min( Min( ( MUR / MUR ) ,( MLU + MUR ) ) ,( MUM + ( Min( MUM ,MLU ) * RMSe ) ) ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3464566929133858, "obj2": 0.49503249649122544}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / RRSe ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6200787401574803, "obj2": 0.2141726404259328}, {"determining": "( ( MRS - ( Const + CRS ) ) / ( Const - Min( ( FirstVNF_CPU_Server / AMS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( Min( ( ( DS - RCSe ) - Min( Min( RCSe ,MUM ) ,CS ) ) ,( DS * DS ) ) + ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) ) ) / ( MUR + CS ) ) + Min( ( Min( RRSe ,( Min( Max( ( MUM / RRSe ),MUC ) ,Min( RRSe ,MUR ) ) / ( MUM + ( RCSe - CS ) ) ) ) - MLU ) ,( DS * Min( ( DS - RRSe ) ,RRSe ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4852988797343123}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.16154554854700837}, {"determining": "( ( MRS - ( Const + CRS ) ) / ( Const - Min( ( FirstVNF_CPU_Server / AMS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( Min( ( ( DS - RCSe ) - Min( Min( RCSe ,MUM ) ,CS ) ) ,( DS * DS ) ) + ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) ) ) / ( MUR + CS ) ) + Min( ( Min( RRSe ,( Min( Max( ( MUM / RRSe ),MUC ) ,Min( RRSe ,MUR ) ) / ( MUM + ( RCSe - CS ) ) ) ) - MLU ) ,( DS * Min( ( DS - RRSe ) ,RRSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6081625903119531}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),Min( CS ,MUC ) ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6122047244094488, "obj2": 0.22833737352739567}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_CPU ,( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) )", "obj1": 0.47834645669291337, "obj2": 0.32958458899878407}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20887967831758358}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( FirstVNF_CPU_Server ,( ( Const - ( MDR + FirstVNF_CPU_Server ) ) * MDR ) ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.25196850393700787, "obj2": 0.5800106216744582}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( DS * RMSe ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.33858267716535434, "obj2": 0.5014965239600612}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( CS ,Max( ( Max( MUM,RCSe ) / MUC ),RRSe ) ) ) ) - CS ) )", "obj1": 0.19881889763779528, "obj2": 0.6378861550553576}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,Min( CRS ,MRS ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * MUR ) - CS ) )", "obj1": 0.8070866141732284, "obj2": 0.0732785275241343}, {"determining": "Min( ( Min( ( ( MRS + ACS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( Min( FirstVNF_RAM_Server ,BR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,PN ) ),Min( FirstVNF_RAM_Server ,BR ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( Max( DS,( RMSe + ( RMSe + ( RRSe + DS ) ) ) ) * ( MUC * RMSe ) ) ) - Min( Min( MUM ,( Min( RCSe ,( ( ( MUR - MUC ) / MLU ) * ( RMSe / Min( RRSe ,RRSe ) ) ) ) - RMSe ) ) ,Min( ( Max( MLU,( MUR * MUC ) ) / RMSe ) ,RCSe ) ) )", "obj1": 0.6476377952755905, "obj2": 0.1949958508031028}, {"determining": "( Min( Max( Max( FirstVNF_Mem_Server,DDR ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( FirstVNF_CPU ,( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + RCSe ) - ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.39173228346456695, "obj2": 0.4547366147896316}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( RCSe + RMSe ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.639763779527559, "obj2": 0.2033895095154817}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6535433070866141, "obj2": 0.18911972928693024}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( MDR - Max( ARS,ACS ) ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RCSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe / Max( MUC,DS ) ) ) ) - CS ) )", "obj1": 0.42322834645669294, "obj2": 0.3874650613980654}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - ( ACS * MDR ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS * ( ( CS - CS ) - ( ( RCSe / ( MUC - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.8484251968503937, "obj2": 0.05716960684549551}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( ( RRS / ( FirstVNF_RAM_Server * Const ) ) - DDR ) ,MDR ) ) - FirstVNF_RAM ) ) * Min( FirstVNF_Mem ,ARS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( ( MUM + Max( ( DS / MLU ),MUC ) ) * ( DS * ( RCSe - ( RRSe / ( ( DS * MUR ) + RRSe ) ) ) ) ) ) / Max( ( RMSe / RCSe ),( Max( ( MUC + Max( MUC,( ( MUC / MUM ) / ( DS / DS ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( DS,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.831041157585384}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( DDR / ( ( ( FirstVNF_RAM + ARS ) / FirstVNF_Mem ) + ACS ) ) ) / Min( ( Min( Const ,MDR ) * ( ACS + BR ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUC * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( RCSe / ( Max( RRSe,MUM ) / Max( ( ( MUM + Max( DS,CS ) ) * MUR ),( RRSe / Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5600561084173625}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "Min( ( Min( ( Min( ( ( PN - Min( ARS ,MDR ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,ACS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( DS * Min( ( RMSe + ( DS / Max( MUR,Min( RCSe ,MUC ) ) ) ) ,( MUC / ( ( ( MUM - CS ) * DS ) * RMSe ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8779527559055118, "obj2": 0.04726779076929084}, {"determining": "Min( ( ( ( Min( ( ( FirstVNF_Mem - Min( FirstVNF_CPU ,MDR ) ) * PN ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( ( ( RMSe + ( ( RRSe / ( RRSe / CS ) ) * Max( DS,( MUC / RMSe ) ) ) ) * ( ( RCSe + MUM ) * ( RMSe - RRSe ) ) ) / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RMSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( RMSe / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.04223708602390664}, {"determining": "( ( ( BR - ARS ) / ( Min( Min( AMS ,( FirstVNF_CPU_Server / DDR ) ) ,Min( AMS ,CRS ) ) / ( ( FirstVNF_RAM / ( FirstVNF_CPU - ACS ) ) + MDR ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( DS / Max( ( ( ( DS / ( MUR + RRSe ) ) / Min( DS ,DS ) ) - MLU ),Min( RMSe ,( MLU * ( ( Max( RCSe,CS ) / ( MUR * CS ) ) * RRSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.21850393700787402, "obj2": 0.6172957303581308}, {"determining": "( Max( ( Const - ( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) / MRS ) ) ),( FirstVNF_RAM_Server * PN ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) + ( RRSe + ( ( MLU * Max( Max( MUR,MUR ),Max( RRSe,MUR ) ) ) * RMSe ) ) )", "obj1": 0.42913385826771655, "obj2": 0.37877474682236184}, {"determining": "( Max( ( ( Min( RRS ,Const ) * ( FirstVNF_CPU * DDR ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RCSe ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.5767716535433071, "obj2": 0.24730386036049992}, {"determining": "( Min( Min( Const ,BR ) ,Max( Min( RRS ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( ( ( MLU - Max( ( CS / ( RMSe - RRSe ) ),CS ) ) + RMSe ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8392426751097208}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( Min( Min( CRS ,FirstVNF_Mem ) ,FirstVNF_Mem_Server ) + DDR ) ) + MDR ) ) / ( MRS - ACS ) ) )", "choosing": "( Max( RCSe,MLU ) / ( ( Min( ( ( MUR * ( DS + Max( MUC,MUR ) ) ) / RRSe ) ,MLU ) * ( MUC + RCSe ) ) - Max( ( ( ( DS / ( DS * RMSe ) ) - Min( ( CS / MUC ) ,( DS + MUR ) ) ) - MUC ),( Min( MUM ,Max( MLU,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.10593504197321059}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,ACS ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - CS ) ,( DS / DS ) ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( DS * DS ) ) ,MUR ) ) )", "obj1": 0.7263779527559056, "obj2": 0.14090709978267887}, {"determining": "( ( Min( ( MDR * AMS ) ,( ( ( ( Max( ACS,ARS ) / MRS ) - BR ) - MDR ) * Min( AMS ,FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( CS - MUM ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Min( RCSe ,MUC ) ) ) ) ) - Min( MUM ,MUM ) )", "obj1": 0.5452755905511811, "obj2": 0.2655047896874593}, {"determining": "Max( Min( FirstVNF_Mem_Server ,( RRS * RRS ) ),( Min( Max( ( ACS - ( ( FirstVNF_Mem * Min( RRS ,BR ) ) - ( ( ARS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ,( ( Const / Const ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( ( ( RRSe * ( RRSe - MUM ) ) + Max( ( RRSe / MUR ),MUM ) ) ,( MUM / RMSe ) ) ) ) * CS ) )", "obj1": 0.18503937007874016, "obj2": 0.6536873483727235}, {"determining": "( Max( ( Const - MDR ),ACS ) - Max( Min( MRS ,ACS ),Min( ( ( RRS + ACS ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( RRSe ,( ( CS + MUR ) - CS ) )", "obj1": 0.28346456692913385, "obj2": 0.5535032609954204}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( ( FirstVNF_RAM - Min( ( RRS - ( Max( PN,DDR ) / PN ) ) ,( ACS * PN ) ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) - ( DS * DS ) ) / Max( ( RCSe / Max( DS,( MUM * Min( RMSe ,RRSe ) ) ) ),Min( Max( Min( ( Max( Min( RRSe ,MUR ),( MUM - DS ) ) * MUR ) ,RMSe ),CS ) ,MUC ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8480371235354126}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_Mem_Server - Const ) * Min( MRS ,ARS ) ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) + MRS ) / Min( RRS ,Const ) ) - ( FirstVNF_CPU_Server * MRS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,( MUC - ( RMSe * MUC ) ) ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( CS / ( CS * MUM ) ) ,Max( ( MUM / RRSe ),RCSe ) ) - Max( ( MLU * DS ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.3075876121211308}, {"determining": "( ( FirstVNF_RAM + ( MDR - ( CRS / FirstVNF_Mem ) ) ) / ( ( MRS + Min( AMS ,( ( ( BR / AMS ) - Min( Const ,( CRS + Const ) ) ) + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) - ( ( Max( MUC,MUR ) + DS ) / Max( ( MUM - DS ),Min( Min( Min( ( ( CS / DS ) + ( CS - RCSe ) ) ,MUC ) ,MLU ) ,MUM ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6292167504222614}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MLU - ( ( DS * RMSe ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3368119246968877}, {"determining": "( ( ACS * PN ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( ( RRS * ( Min( MDR ,FirstVNF_CPU_Server ) / PN ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( RCSe - DS ) + MUC ) / Max( ( DS / DS ),RCSe ) ) + ( RMSe + ( DS / RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6673228346456693, "obj2": 0.18702282324818226}, {"determining": "( Max( ( Const - Max( BR,FirstVNF_CPU ) ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / Min( ( CS * MUC ) ,( RCSe + RMSe ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5738749764717745}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - ACS ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ) ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3431337594811589}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5336332250114763}, {"determining": "Max( ( Min( PN ,BR ) + FirstVNF_CPU ),( Min( ( ( Max( FirstVNF_CPU,( MRS / FirstVNF_RAM ) ) / AMS ) * ( Const - MDR ) ) ,( ( BR / ( CRS * CRS ) ) * AMS ) ) * FirstVNF_RAM ) )", "choosing": "( ( ( DS + ( RCSe * DS ) ) - ( DS + ( CS * Max( RRSe,( ( RCSe + MLU ) / Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.1732283464566929, "obj2": 0.6725428700251118}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.44881889763779526, "obj2": 0.34690913971921133}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( ( FirstVNF_RAM - FirstVNF_CPU ) + ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / MDR ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( Max( CS,( ( MUC + MUC ) + MUC ) ),MUR ) / ( ( RCSe * DS ) - Max( Min( RRSe ,DS ),( Min( Max( MUC,DS ) ,MUM ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7834645669291339, "obj2": 0.08125649709013441}, {"determining": "( Max( Min( ( Min( ( ( FirstVNF_RAM / ACS ) + MDR ) ,AMS ) * ( ( ( FirstVNF_CPU + PN ) - BR ) - FirstVNF_CPU_Server ) ) ,( AMS * MDR ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( ( ( RRSe - MLU ) + RRSe ),( ( ( DS - ( DS * MUC ) ) + ( MUM / MUM ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / MUC ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5511811023622047, "obj2": 0.2605156991057105}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) * ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,( ( ( ( RCSe / ( MUM + MLU ) ) + ( RRSe - RCSe ) ) * ( ( MLU - ( MUM + RCSe ) ) / DS ) ) + ( RRSe / RMSe ) ) ) / DS ) - ( CS / ( ( MUM * MUC ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.480142835932235}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( Max( ( ACS - FirstVNF_CPU_Server ),( FirstVNF_Mem - ( CRS + DDR ) ) ) / Const ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MLU / ( MUR + MUC ) ) + ( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU / Max( MUM,MLU ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( ( ( Max( RCSe,MUM ) * RMSe ) * MUM ) * MUC ) ) ) - Min( CS ,( MUR - MUR ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2512967515779506}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "( ( PN * ACS ) - ( Max( MDR,Max( RRS,Min( Max( MDR,FirstVNF_RAM ) ,BR ) ) ) + Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( ( ( ( ( ( ( MUR + MUR ) - MUR ) - ( RRSe * ( MUM * RCSe ) ) ) - MUR ) * ( Min( MUR ,MUM ) * MLU ) ) / CS ) / DS ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / RRSe ) )", "obj1": 0.8622047244094488, "obj2": 0.05340076225947931}, {"determining": "( ( FirstVNF_CPU * PN ) - ( Min( ( MDR - BR ) ,FirstVNF_Mem ) / ( ( Min( ( FirstVNF_Mem_Server / ( AMS * MRS ) ) ,MRS ) / MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( Min( Min( ( RCSe - ( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) ,DS ) - CS ) ,( DS / DS ) ) + Min( ( ( DS / MLU ) / ( ( RMSe / Min( DS ,CS ) ) - ( CS / RMSe ) ) ) ,MUR ) ) )", "obj1": 0.7224409448818898, "obj2": 0.146461425421866}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( Min( MUM ,RCSe ) * DS ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + ( MUC - MUR ) ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.23031496062992127, "obj2": 0.6119905733738662}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,( ( ARS / MRS ) / RRS ) ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) + ( ( Min( MUC ,RRSe ) + Max( RCSe,RMSe ) ) + RRSe ) ) )", "obj1": 0.6141732283464567, "obj2": 0.22453558533243279}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) / Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,ACS ) ) ,( Max( AMS,ACS ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( Max( BR,( MRS * Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,AMS ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) / FirstVNF_RAM_Server ) + ( ( DDR * FirstVNF_RAM_Server ) * CRS ) ) )", "choosing": "( ( DS + Max( Max( ( RRSe / MUR ),( CS / MUM ) ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.6732283464566929, "obj2": 0.18452956696784917}, {"determining": "Min( ( Min( ( Min( Max( PN,( PN - Min( ARS ,MDR ) ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - ( BR + BR ) ) ,ACS )", "choosing": "( ( ( DS * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8720472440944882, "obj2": 0.04945900464581868}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( AMS ,( Min( PN ,ACS ) / Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - Const ) ) + RRS ) ,( ( Const - MDR ) * PN ) ) ) ) ) ,Max( ( ( CRS - ( PN - MDR ) ) - RRS ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUR ,MUC ) / RRSe ) / ( ( RCSe * DS ) - Max( ( ( Max( ( MUC + MLU ),MUM ) / RRSe ) * CS ),( Max( MUM,MUR ) + Max( ( DS * RRSe ),MUM ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.17268599059721892}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,AMS ) / ( ( FirstVNF_CPU + ( ( Const / FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server + Max( PN,FirstVNF_RAM_Server ) ) + ( MRS / PN ) ) ) ) / ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RRSe / Min( Max( Max( Max( MLU,Max( MUR,MLU ) ),Min( RCSe ,MUR ) ),Max( CS,RMSe ) ) ,CS ) ) + ( ( ( RCSe - DS ) - MUM ) - Min( MUC ,Min( MUC ,Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.46855489100277287}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server * MDR ) - Min( FirstVNF_Mem ,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),Min( Max( PN,MRS ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( ( Max( ( MUR / RMSe ),CS ) / MUR ),Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( MUM / MUM ),RCSe ),( CS + ( MUR * MUM ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6657143633210894}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( MUM * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.23129750459143655}, {"determining": "( ( ( DDR / PN ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ( ACS * PN ) * MDR ) + ( CRS + FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( DS - RCSe ) - MUM ) + MUM ),Min( ( ( MUC / Max( ( DS * RCSe ),RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) / MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.005183365726254115}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) / ( ( MDR + Min( BR ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( Max( RRSe,RCSe ) + ( ( RCSe / Min( Max( Max( Max( MLU,Min( MUC ,RRSe ) ),Min( RCSe ,MUR ) ),Max( CS,( Max( MUC,MUM ) - ( DS * MUC ) ) ) ) ,CS ) ) + Min( ( ( DS - RCSe ) - MUM ) ,( DS / DS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.46135373167162275}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( ( FirstVNF_RAM / ( BR - FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.392413966945874}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "( ( AMS + ( ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) - BR ) ) - ( ( ( FirstVNF_Mem / RRS ) + DDR ) + MRS ) )", "choosing": "( ( RRSe / ( ( MUC * ( ( ( ( CS * RCSe ) + CS ) * RMSe ) + CS ) ) * ( MUC * RMSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.27165354330708663, "obj2": 0.5685403262890067}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( ACS * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( ( MUR + ( ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( ( Max( MUM,RCSe ) / MUC ) / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.36811023622047245, "obj2": 0.47236930651267944}], "31": [{"determining": "( ( Max( Min( PN ,MDR ),( ( ( FirstVNF_CPU + PN ) * Min( RRS ,BR ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) - ( ACS * ( FirstVNF_CPU_Server + RRS ) ) )", "choosing": "( Max( ( CS * ( ( MUC + MUC ) + MUC ) ),MUR ) / ( ( RCSe * DS ) - Max( DS,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( ( MUC - MUC ) * MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server * PN ) - FirstVNF_CPU_Server ) ,( ( Max( MDR,( ( ACS * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - MRS ) ) - ( ( CRS + MDR ) + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) - ACS ) )", "choosing": "( Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUM + Max( RMSe,CS ) ) ) ),DS ) ,CS ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - CS ) ,( DS + DS ) ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( ( RMSe / Min( DS ,CS ) ) - ( ( MUM + ( RRSe / CS ) ) / ( ( MUR * RCSe ) / MUR ) ) ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR / PN ) + ( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,Min( ( RRS - ( ( Const - MDR ) * PN ) ) ,( Const - MDR ) ) ) - FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( ( MUC / MUM ) / ( CS / RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( MUM + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8869620376390731}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4422957405927955}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( MRS - ( FirstVNF_Mem_Server + ACS ) ) + ( DDR / PN ) ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / Min( MUC ,DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( ( Max( MRS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - ( ARS - FirstVNF_CPU ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MUM ),MUR ) / Max( MLU,MLU ) )", "obj1": 0.4015748031496063, "obj2": 0.42013670174510015}, {"determining": "Max( ( Min( Min( ( ( Const - ( Max( FirstVNF_Mem,ACS ) - Min( CRS ,FirstVNF_Mem ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( ( BR / ( CRS * AMS ) ) * AMS ) ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( MUM / RRSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( CS ,Max( ( Max( MUM,RCSe ) / MUC ),RRSe ) ) ) ) - CS ) )", "obj1": 0.19881889763779528, "obj2": 0.6378861550553576}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( ACS * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( ( MUR + ( ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( ( Max( MUM,RCSe ) / MUC ) / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.36811023622047245, "obj2": 0.47236930651267944}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,Min( CRS ,MRS ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * MUR ) - CS ) )", "obj1": 0.8070866141732284, "obj2": 0.0732785275241343}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "Max( Min( FirstVNF_Mem_Server ,( RRS * RRS ) ),( Min( Max( ( ACS - ( ( FirstVNF_Mem * Min( RRS ,BR ) ) - ( ( ARS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ,( ( Const / Const ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( ( ( RRSe * ( RRSe - MUM ) ) + Max( ( RRSe / MUR ),MUM ) ) ,( MUM / RMSe ) ) ) ) * CS ) )", "obj1": 0.18503937007874016, "obj2": 0.6536873483727235}, {"determining": "( Max( ( ( PN / FirstVNF_RAM_Server ) + Min( ( DDR + ( Min( ACS ,( BR / Const ) ) * Min( Max( AMS,ARS ) ,MDR ) ) ) ,FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,( MRS + ARS ) ) - FirstVNF_RAM ) ) * ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RCSe ,MUR ) / ( Max( MUR,MUC ) / MUR ) ) / ( CS * RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8576522560637384}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( AMS - FirstVNF_CPU ) ),( Min( ( Min( ( DDR * DDR ) ,DDR ) * ( Const - FirstVNF_CPU ) ) ,Min( ( ( FirstVNF_CPU / PN ) * RRS ) ,FirstVNF_CPU_Server ) ) + ( ( BR / ( BR * FirstVNF_RAM ) ) * ( ACS * AMS ) ) ) ) ,( Max( MRS,( AMS + CRS ) ) / PN ) ) / ( Max( FirstVNF_CPU_Server,MDR ) + ( PN / MDR ) ) )", "choosing": "( ( Min( RRSe ,MUR ) * MUM ) - Min( CS ,RCSe ) )", "obj1": 0.328740157480315, "obj2": 0.5070350206836896}, {"determining": "Max( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * ( DS + ( MUC + MUC ) ) ) ) ) / ( RMSe - Max( ( ( MUM / ( MUR - DS ) ) - RRSe ),( RMSe / ( RMSe + ( Min( RMSe ,MUM ) / CS ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39362163132959965}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9094488188976378, "obj2": 0.03530609869183174}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,ACS ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( DS * MUC ) ) - Min( CS ,MUM ) )", "obj1": 0.7066929133858267, "obj2": 0.15020897109842565}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "Max( ( AMS / PN ),Max( FirstVNF_Mem,PN ) )", "choosing": "( ( ( RRSe * DS ) - Max( MLU,( Max( RMSe,DS ) / MUM ) ) ) / Max( ( CS * MLU ),MUR ) )", "obj1": 0.14173228346456693, "obj2": 0.7327587892892451}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( ( FirstVNF_RAM - FirstVNF_CPU ) + ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / MDR ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( Max( CS,( ( MUC + MUC ) + MUC ) ),MUR ) / ( ( RCSe * DS ) - Max( Min( RRSe ,DS ),( Min( Max( MUC,DS ) ,MUM ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7834645669291339, "obj2": 0.08125649709013441}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "Min( ( Min( ( Min( ( ( PN - Min( PN ,MDR ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RMSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.06944282215893285}, {"determining": "( ( MRS - Max( ( ( Max( FirstVNF_Mem,( Const / FirstVNF_RAM ) ) / Max( ACS,( MRS - ( BR * FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( Const - Min( ( FirstVNF_CPU_Server / AMS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( Min( ( ( DS - RCSe ) - Min( Min( RCSe ,MUM ) ,CS ) ) ,( DS * DS ) ) + ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) ) ) / ( ( MUM - MUM ) + CS ) ) + Min( ( Min( RRSe ,( Min( Max( ( MUM / RRSe ),MUC ) ,Min( RRSe ,MUR ) ) / ( MUM + ( RCSe - CS ) ) ) ) - MLU ) ,( DS * Min( ( DS - RRSe ) ,RRSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6052547297447539}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) / ( Min( Min( ACS ,ARS ) ,( Const / RRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( CS ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.655511811023622, "obj2": 0.17652981956238653}, {"determining": "( Max( ( Const - MDR ),ACS ) - Max( Min( MRS ,ACS ),Min( ( ( RRS + ACS ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( RRSe ,( ( CS + MUR ) - CS ) )", "obj1": 0.28346456692913385, "obj2": 0.5535032609954204}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - ( Min( DS ,MUC ) + ( RRSe - RRSe ) ) ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( MUR - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7458461275950927}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / RRSe ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6200787401574803, "obj2": 0.2141726404259328}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( Min( Min( CRS ,FirstVNF_Mem ) ,FirstVNF_Mem_Server ) + DDR ) ) + MDR ) ) / ( MRS - ACS ) ) )", "choosing": "( Max( RCSe,MLU ) / ( ( Min( ( ( MUR * ( DS + Max( MUC,MUR ) ) ) / RRSe ) ,MLU ) * ( MUC + RCSe ) ) - Max( ( ( ( DS / ( DS * RMSe ) ) - Min( ( CS / MUC ) ,( DS + MUR ) ) ) - MUC ),( Min( MUM ,Max( MLU,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.10593504197321059}, {"determining": "Min( ( Min( ( Min( ( ( Const - MDR ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - ( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) ,( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( MUC / MLU ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.1610566580326335}, {"determining": "( ( ( ARS * ( ( ( ( FirstVNF_Mem_Server - PN ) / Max( PN,FirstVNF_Mem ) ) + FirstVNF_CPU ) / PN ) ) + FirstVNF_RAM ) * ( FirstVNF_RAM_Server + ( Max( FirstVNF_Mem_Server,CRS ) * ( ACS + RRS ) ) ) )", "choosing": "( Max( ( MLU * ( MUM * Max( ( ( RMSe + RCSe ) * Min( RMSe ,( CS * CS ) ) ),( ( ( CS + DS ) / CS ) / ( RMSe + CS ) ) ) ) ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( DS + Min( ( MUM + RCSe ) ,MUM ) ) ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ) ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.35111251947592953}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - BR ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4800885192619844}, {"determining": "( ( ( DDR / Const ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ( ACS * PN ) * MDR ) + ( CRS + FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( DS - RCSe ) - MUM ) + MUM ),Min( ( ( MUC / Max( ( DS * RCSe ),RMSe ) ) + MLU ) ,DS ) ) / ( CS * RMSe ) ) / ( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) / MLU ) )", "obj1": 0.9409448818897638, "obj2": 0.02712726907423778}, {"determining": "( Max( MRS,( Min( ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( Min( ARS ,MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - ( ( CS * RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7523452002201604}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( Min( ( MLU / RRSe ) ,( RCSe + RMSe ) ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.5118110236220472, "obj2": 0.28847252646542343}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - ( FirstVNF_Mem_Server + CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7645104437838857}, {"determining": "( ( FirstVNF_RAM + ( MDR - ( CRS / FirstVNF_Mem ) ) ) / ( ( MRS + Min( AMS ,( ( ( BR / AMS ) - Min( Const ,( CRS + Const ) ) ) + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) - ( ( Max( MUC,MUR ) + DS ) / Max( ( MUM - DS ),Min( Min( Min( ( ( CS / DS ) + ( CS - RCSe ) ) ,MUC ) ,MLU ) ,MUM ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6292167504222614}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),Min( CS ,MUC ) ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6122047244094488, "obj2": 0.22833737352739567}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server * MDR ) - Min( FirstVNF_Mem ,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),Min( Max( PN,MRS ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( ( Max( ( MUR / RMSe ),CS ) / MUR ),Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( MUM / MUM ),RCSe ),( CS + ( MUR * MUM ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6657143633210894}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / AMS ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - MUR ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5377035592329947}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( Min( MUM ,RCSe ) * DS ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + ( MUC - MUR ) ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.23031496062992127, "obj2": 0.6119905733738662}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,Min( CRS ,FirstVNF_Mem ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.7755905511811023, "obj2": 0.08409492551060462}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_CPU ,( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) )", "obj1": 0.47834645669291337, "obj2": 0.32958458899878407}, {"determining": "( ( ACS + DDR ) / Min( ( FirstVNF_Mem / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ,Const ) )", "choosing": "( ( ( MUR + ( ( Min( MUM ,CS ) / ( ( DS / DS ) + RCSe ) ) + Min( ( ( MUM * MLU ) * CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( ( MUM / MLU ) + Min( Min( ( MUR / MUR ) ,( MLU + MUR ) ) ,( MUM + ( Min( MUM ,MLU ) * RMSe ) ) ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3464566929133858, "obj2": 0.49503249649122544}, {"determining": "( ( PN * ACS ) - ( Max( MDR,Max( RRS,Min( Max( MDR,FirstVNF_RAM ) ,BR ) ) ) + Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( ( ( ( ( ( ( MUR + MUR ) - MUR ) - ( RRSe * ( MUM * RCSe ) ) ) - MUR ) * ( Min( MUR ,MUM ) * MLU ) ) / CS ) / DS ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / RRSe ) )", "obj1": 0.8622047244094488, "obj2": 0.05340076225947931}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( FirstVNF_CPU_Server ,( ( Const - ( MDR + FirstVNF_CPU_Server ) ) * MDR ) ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.25196850393700787, "obj2": 0.5800106216744582}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,( DS * RMSe ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.42013670174510015}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20887967831758358}, {"determining": "( ( Max( ARS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( ( FirstVNF_RAM / Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( ( MUR - ( DS / Max( CS,DS ) ) ) * DS ) - Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.49803149606299213, "obj2": 0.29620636305950543}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server * MDR ) - Max( MDR,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),Min( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( ( BR / ( FirstVNF_Mem * Min( MDR ,Max( CRS,FirstVNF_Mem_Server ) ) ) ) * AMS ) ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,( ( MUC * MUM ) / DS ) ) ) ) ) ) / Max( Max( ( MUM / MUM ),RCSe ),( CS + ( MUR * MUM ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6716900773323762}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Min( ( ( DDR / MDR ) - CRS ) ,FirstVNF_CPU_Server ) ) * ( ( ( Max( ( ARS - BR ),FirstVNF_RAM_Server ) * CRS ) * ( Min( ( MDR / ARS ) ,( RRS - Max( ACS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( Max( MUC,MUR ) - MUR ) ) ) ) ) / Max( ( DS + ( MUM * MUR ) ),Max( Min( ( MUM * MUM ) ,RMSe ),MLU ) ) )", "obj1": 0.43503937007874016, "obj2": 0.36591978659432717}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "( Max( ( ( ( ARS * Max( ( FirstVNF_Mem + PN ),CRS ) ) / ( ( ( Min( MRS ,ACS ) / RRS ) + ( DDR / PN ) ) + MRS ) ) - AMS ),ACS ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS - MLU ) - MUR ) / ( ( RCSe * DS ) - Max( MLU,( Max( Max( ( ( MUR - CS ) / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) - Max( ( DS / ( CS * MUM ) ),Max( ( MUM / RRSe ),RCSe ) ) ) ) ) )", "obj1": 0.4822834645669291, "obj2": 0.3067687731125079}, {"determining": "( Max( ( Const - ( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) / MRS ) ) ),( FirstVNF_RAM_Server * PN ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) + ( RRSe + ( ( MLU * Max( Max( MUR,MUR ),Max( RRSe,MUR ) ) ) * RMSe ) ) )", "obj1": 0.42913385826771655, "obj2": 0.37877474682236184}, {"determining": "Min( ( Min( ( ( MRS + ACS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( Min( FirstVNF_RAM_Server ,BR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,PN ) ),Min( FirstVNF_RAM_Server ,BR ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( Max( DS,( RMSe + ( RMSe + ( RRSe + DS ) ) ) ) * ( MUC * RMSe ) ) ) - Min( Min( MUM ,( Min( RCSe ,( ( ( MUR - MUC ) / MLU ) * ( RMSe / Min( RRSe ,RRSe ) ) ) ) - RMSe ) ) ,Min( ( Max( MLU,( MUR * MUC ) ) / RMSe ) ,RCSe ) ) )", "obj1": 0.6476377952755905, "obj2": 0.1949958508031028}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( RCSe + RMSe ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.639763779527559, "obj2": 0.2033895095154817}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_Mem_Server - Const ) * Min( MRS ,ARS ) ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) + MRS ) / Min( RRS ,Const ) ) - ( FirstVNF_CPU_Server * MRS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,( MUC - ( RMSe * MUC ) ) ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( CS / ( CS * MUM ) ) ,Max( ( MUM / RRSe ),RCSe ) ) - Max( ( MLU * DS ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.3075876121211308}, {"determining": "( Max( ( ( DDR / PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( ( RRS / ( FirstVNF_RAM_Server * Const ) ) - DDR ) ,MDR ) ) - FirstVNF_RAM ) ) * Min( FirstVNF_Mem ,ARS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( ( MUM + Max( ( DS / MLU ),MUC ) ) * ( DS * ( RCSe - ( RRSe / ( ( DS * MUR ) + RRSe ) ) ) ) ) ) / Max( ( RMSe / RCSe ),( Max( ( MUC + Max( MUC,( ( MUC / MUM ) / ( DS / DS ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( DS,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.831041157585384}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6535433070866141, "obj2": 0.18911972928693024}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( Max( ( ACS - FirstVNF_CPU_Server ),( FirstVNF_Mem - ( CRS + DDR ) ) ) / Const ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MLU / ( MUR + MUC ) ) + ( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU / Max( MUM,MLU ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( ( ( Max( RCSe,MUM ) * RMSe ) * MUM ) * MUC ) ) ) - Min( CS ,( MUR - MUR ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2512967515779506}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( DDR / ( ( ( FirstVNF_RAM + ARS ) / FirstVNF_Mem ) + ACS ) ) ) / Min( ( Min( Const ,MDR ) * ( ACS + BR ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUC * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( RCSe / ( Max( RRSe,MUM ) / Max( ( ( MUM + Max( DS,CS ) ) * MUR ),( RRSe / Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5600561084173625}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MLU - ( ( DS * RMSe ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3368119246968877}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5336332250114763}, {"determining": "( ( ( BR - ARS ) / ( Min( Min( AMS ,( FirstVNF_CPU_Server / DDR ) ) ,Min( AMS ,CRS ) ) / ( ( FirstVNF_RAM / ( FirstVNF_CPU - ACS ) ) + MDR ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( DS / Max( ( ( ( DS / ( MUR + RRSe ) ) / Min( DS ,DS ) ) - MLU ),Min( RMSe ,( MLU * ( ( Max( RCSe,CS ) / ( MUR * CS ) ) * RRSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.21850393700787402, "obj2": 0.6172957303581308}, {"determining": "( Min( Min( Const ,BR ) ,Max( Min( RRS ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( ( ( MLU - Max( ( CS / ( RMSe - RRSe ) ),CS ) ) + RMSe ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8392426751097208}, {"determining": "( Max( ( RRS - Max( BR,FirstVNF_CPU ) ),ACS ) - Min( ( AMS + FirstVNF_CPU ) ,( MRS / Max( CRS,MDR ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( ( ( DS - RCSe ) * RMSe ) * Max( MUC,DS ) ) ) ) ) ) / ( ( ( MUR / MUM ) * Min( CS ,MLU ) ) - RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5737611606054623}, {"determining": "( ( Min( ( MDR * AMS ) ,( ( ( ( Max( ACS,ARS ) / MRS ) - BR ) - MDR ) * Min( AMS ,FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( CS - MUM ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Min( RCSe ,MUC ) ) ) ) ) - Min( MUM ,MUM ) )", "obj1": 0.5452755905511811, "obj2": 0.2655047896874593}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( MDR + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + RCSe ) - ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) ) ) ) - Min( CS ,CS ) )", "obj1": 0.9507874015748031, "obj2": 0.01821586378042982}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( ( FirstVNF_RAM - Min( ( RRS - ( Max( PN,DDR ) / PN ) ) ,( ACS * PN ) ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) - ( DS * DS ) ) / Max( ( RCSe / Max( DS,( MUM * Min( RMSe ,RRSe ) ) ) ),Min( Max( Min( ( Max( Min( RRSe ,MUR ),( MUM - DS ) ) * MUR ) ,RMSe ),CS ) ,MUC ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8480371235354126}, {"determining": "Min( ( Min( ( Min( ( ( PN - Min( ARS ,MDR ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,ACS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( DS * Min( ( RMSe + ( DS / Max( MUR,Min( RCSe ,MUC ) ) ) ) ,( MUC / ( ( ( MUM - CS ) * DS ) * RMSe ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8779527559055118, "obj2": 0.04726779076929084}, {"determining": "( Max( Min( ( Min( ( ( FirstVNF_RAM / ACS ) + MDR ) ,AMS ) * ( ( ( FirstVNF_CPU + PN ) - BR ) - FirstVNF_CPU_Server ) ) ,( AMS * MDR ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( ( ( RRSe - MLU ) + RRSe ),( ( ( DS - ( DS * MUC ) ) + ( MUM / MUM ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / MUC ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5511811023622047, "obj2": 0.2605156991057105}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( MDR + ( FirstVNF_CPU * ARS ) ) ) / ( ACS - DDR ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( RMSe - CS ) - CS ) ,( DS / DS ) ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( ( MUC / Min( DS ,CS ) ) - ( ( MUM + ( RRSe / CS ) ) / ( ( MUR * RCSe ) / MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.9586614173228346, "obj2": 0.015791381564447607}, {"determining": "( Max( ( ( Min( RRS ,Const ) * ( FirstVNF_CPU * DDR ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RCSe ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.5767716535433071, "obj2": 0.24730386036049992}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,( ( ARS / MRS ) / RRS ) ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) + ( ( Min( MUC ,RRSe ) + Max( RCSe,RMSe ) ) + RRSe ) ) )", "obj1": 0.6141732283464567, "obj2": 0.22453558533243279}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( RCSe - DS ) + MUC ) / Max( ( DS / DS ),RCSe ) ) + ( RMSe + ( DS / RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.5807086614173228, "obj2": 0.24067249972511026}, {"determining": "( Max( Min( ( Min( ( ( FirstVNF_RAM / ACS ) + MDR ) ,AMS ) * ( ( ( FirstVNF_CPU + PN ) - BR ) - FirstVNF_CPU_Server ) ) ,( AMS * MDR ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( ( ( RRSe - MLU ) + RRSe ),( ( ( DS - ( DS * MUC ) ) + ( MUM / MUM ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / MUC ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5216535433070866, "obj2": 0.2800161839440334}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ,PN ) / Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + ( CRS * MRS ) ) ) )", "choosing": "( ( ( MUR + ( ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / ( RCSe * MUR ) ) ) ) ) / ( MUR + RMSe ) ) + Min( ( MLU - ( Max( ( ( CS + MUC ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( ( ( MUM / RCSe ) / MUC ) / Max( Max( RCSe,( MUM / CS ) ),( DS / ( CS * MUM ) ) ) ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6235314040118703}, {"determining": "Min( ( ( ( Min( ( ( FirstVNF_Mem - Min( FirstVNF_CPU ,MDR ) ) * PN ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( ( ( RMSe + ( ( RRSe / ( RRSe / CS ) ) * Max( DS,( MUC / RMSe ) ) ) ) * ( ( RCSe + MUM ) * ( RMSe - RRSe ) ) ) / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RMSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( RMSe / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.04223708602390664}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( DS * RMSe ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.33858267716535434, "obj2": 0.5014965239600612}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( ACS * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - ( DS * Max( RRSe,RRSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.3641732283464567, "obj2": 0.47995632763229346}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( AMS ,( Min( PN ,ACS ) / Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - Const ) ) + RRS ) ,( ( Const - MDR ) * PN ) ) ) ) ) ,Max( ( ( CRS - ( PN - MDR ) ) - RRS ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUR ,MUC ) / RRSe ) / ( ( RCSe * DS ) - Max( ( ( Max( ( MUC + MLU ),MUM ) / RRSe ) * CS ),( Max( MUM,MUR ) + Max( ( DS * RRSe ),MUM ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.17268599059721892}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( Min( ( MLU / RRSe ) ,( RCSe + RMSe ) ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.5354330708661418, "obj2": 0.2697721989037047}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( MDR - Max( ARS,ACS ) ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RCSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe / Max( MUC,DS ) ) ) ) - CS ) )", "obj1": 0.42322834645669294, "obj2": 0.3874650613980654}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ) ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.27119817678963787}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,( ( Const + BR ) - Min( PN ,AMS ) ) ) ) - ( Min( Min( ( PN + FirstVNF_CPU_Server ) ,MDR ) ,ACS ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( RRSe * DS ) ,MUC ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( ( ( RCSe / MUC ) / MUR ),CS ) ) / Max( Max( RRSe,MUM ),DS ) ) ,MUM ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14711131318468326}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( MRS ,Min( ( ARS / Min( AMS ,MRS ) ) ,( Min( RRS ,ACS ) - CRS ) ) ) * PN ) * FirstVNF_CPU_Server ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( ( RRSe / MUM ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUC,RCSe ),Max( ( ( ( MUR * Max( RCSe,DS ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.4311023622047244, "obj2": 0.3669406816293351}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( FirstVNF_CPU_Server - MDR ) ) ) ) + BR ) ) / ( ACS - ( ACS * PN ) ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( MUM / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.8484251968503937, "obj2": 0.05716960684549551}], "32": [{"determining": "( ( ( FirstVNF_Mem - PN ) - RRS ) - ( Max( Min( PN ,MDR ),( ( ( FirstVNF_CPU + PN ) * Min( RRS ,BR ) ) + MDR ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MLU * ( MUM * Max( ( ( RMSe + RCSe ) * Min( RMSe ,( CS * CS ) ) ),( Max( CS,CS ) / CS ) ) ) ),MUR ) / ( ( RCSe * DS ) - Max( CS,( Min( ( DS + Min( ( MUM + RCSe ) ,MUM ) ) ,Max( MUC,DS ) ) - Max( Max( RCSe,( MUM / RRSe ) ),( DS + CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( PN ,MDR ),( ( ( FirstVNF_CPU + PN ) * Min( RRS ,BR ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) - ( ACS * ( FirstVNF_CPU_Server + RRS ) ) )", "choosing": "( Max( ( CS * ( ( MUC + MUC ) + MUC ) ),MUR ) / ( ( RCSe * DS ) - Max( DS,( Min( MUM ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( ( MUC - MUC ) * MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR / PN ) + ( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,Min( ( RRS - ( ( Const - MDR ) * PN ) ) ,( Const - MDR ) ) ) - FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( ( MUC / MUM ) / ( CS / RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( MUM + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8869620376390731}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4422957405927955}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( MRS - ( FirstVNF_Mem_Server + ACS ) ) + ( DDR / PN ) ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / Min( MUC ,DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( ( Max( MRS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - ( ARS - FirstVNF_CPU ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MUM ),MUR ) / Max( MLU,MLU ) )", "obj1": 0.4015748031496063, "obj2": 0.42013670174510015}, {"determining": "Max( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * ( DS + ( MUC + MUC ) ) ) ) ) / ( RMSe - Max( ( ( MUM / ( MUR - DS ) ) - RRSe ),( RMSe / ( RMSe + ( Min( RMSe ,MUM ) / CS ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39362163132959965}, {"determining": "Max( ( Min( Min( ( ( Const - ( Max( FirstVNF_Mem,ACS ) - Min( CRS ,FirstVNF_Mem ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( ( BR / ( CRS * AMS ) ) * AMS ) ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( MUM / RRSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,( ( Const + BR ) - Min( PN ,AMS ) ) ) ) - ( Min( Min( ( PN + FirstVNF_CPU_Server ) ,MDR ) ,ACS ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( RRSe * DS ) ,MUC ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( ( ( RCSe / MUC ) / MUR ),CS ) ) / Max( Max( RRSe,MUM ),DS ) ) ,MUM ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14711131318468326}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( Max( ( ( PN / FirstVNF_RAM_Server ) + Min( ( DDR + ( Min( ACS ,( BR / Const ) ) * Min( Max( AMS,ARS ) ,MDR ) ) ) ,FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,( MRS + ARS ) ) - FirstVNF_RAM ) ) * ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RCSe ,MUR ) / ( Max( MUR,MUC ) / MUR ) ) / ( CS * RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8576522560637384}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( ACS * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( ( MUR + ( ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( ( Max( MUM,RCSe ) / MUC ) / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.36811023622047245, "obj2": 0.47236930651267944}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( ( FirstVNF_RAM - FirstVNF_CPU ) + ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / MDR ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( Max( Max( CS,( ( MUC + MUC ) + MUC ) ),MUR ) / ( ( RCSe * DS ) - Max( Min( RRSe ,DS ),( Min( Max( MUC,DS ) ,MUM ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7834645669291339, "obj2": 0.08125649709013441}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9094488188976378, "obj2": 0.03530609869183174}, {"determining": "Min( ( Min( ( Min( ( ( PN - Min( ARS ,MDR ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,ACS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( DS * Min( ( RMSe + ( DS / Max( MUR,Min( RCSe ,MUC ) ) ) ) ,( MUC / ( ( ( MUM - CS ) * DS ) * RMSe ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8779527559055118, "obj2": 0.04726779076929084}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "( ( AMS * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / MRS ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC / MUR ),Max( ( ( MUC + MUC ) + MUC ),RRSe ) ) + Min( MUM ,( ( MUC * RCSe ) / ( MUC - DS ) ) ) ),Min( RCSe ,CS ) ) / ( ( CS + MUR ) / Max( MUM,MLU ) ) ),( RMSe + ( DS / RMSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02752118329749438}, {"determining": "Max( ( AMS / PN ),Max( FirstVNF_Mem,PN ) )", "choosing": "( ( ( RRSe * DS ) - Max( MLU,( Max( RMSe,DS ) / MUM ) ) ) / Max( ( CS * MLU ),MUR ) )", "obj1": 0.14173228346456693, "obj2": 0.7327587892892451}, {"determining": "( ( PN * ACS ) - ( Max( MDR,Max( RRS,Min( Max( MDR,FirstVNF_RAM ) ,BR ) ) ) + Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( ( ( ( ( ( ( MUR + MUR ) - MUR ) - ( RRSe * ( MUM * RCSe ) ) ) - MUR ) * ( Min( MUR ,MUM ) * MLU ) ) / CS ) / DS ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / RRSe ) )", "obj1": 0.8622047244094488, "obj2": 0.05340076225947931}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) / ( Min( Min( ACS ,ARS ) ,( Const / RRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( CS ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.655511811023622, "obj2": 0.17652981956238653}, {"determining": "( ( ACS * PN ) - ( ( ( ( FirstVNF_RAM_Server - Const ) + AMS ) + FirstVNF_RAM ) * DDR ) )", "choosing": "Min( DS ,( ( Min( ( Min( ( ( MLU - MUC ) + RMSe ) ,( ( MUC * CS ) + ( MUR / DS ) ) ) * DS ) ,( RCSe + RMSe ) ) * MUR ) - CS ) )", "obj1": 0.8070866141732284, "obj2": 0.07322901722916622}, {"determining": "( Max( ( Const - MDR ),ACS ) - Max( Min( MRS ,ACS ),Min( ( ( RRS + ACS ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( RRSe ,( ( CS + MUR ) - CS ) )", "obj1": 0.28346456692913385, "obj2": 0.5535032609954204}, {"determining": "( ( ( Min( ( CRS / Min( ACS ,CRS ) ) ,CRS ) + ( ( Min( AMS ,CRS ) + BR ) - FirstVNF_Mem_Server ) ) * ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,MUM ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( DS * MUC ) - ( ( ( MUM + ( Min( RMSe ,RRSe ) + MUM ) ) + RCSe ) / RMSe ) ) ) - ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) / CS ) ) ) / Max( DS,MUC ) ) )", "obj1": 0.3484251968503937, "obj2": 0.4788257295904661}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( FirstVNF_CPU_Server - MDR ) ) ) ) + BR ) ) / ( ACS - ( ACS * PN ) ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( MUM / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.8484251968503937, "obj2": 0.05716960684549551}, {"determining": "Min( ( ( ( Min( ( ( PN - ( FirstVNF_CPU * DDR ) ) * PN ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * Min( Min( RRSe ,RMSe ) ,MUC ) ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RMSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( RMSe / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.00970714608329065}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - ( Min( DS ,MUC ) + ( RRSe - RRSe ) ) ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( MUR - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7458461275950927}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "( Max( MRS,( Min( ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( Min( ARS ,MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - ( ( CS * RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7523452002201604}, {"determining": "Min( ( Min( ( Min( ( ( PN - FirstVNF_CPU ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,Max( MLU,MLU ) ) ) ) ) ) - CS ) + ( ( RMSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006712413989081544}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( Min( Max( ( MDR - ( Max( CRS,FirstVNF_Mem ) - ARS ) ),MDR ) ,DDR ) * Min( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( MDR - Max( ARS,ACS ) ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( ( DS / DS ) ,( ( Max( ( MUC / MUR ),( MUM / Max( MUM,Max( RCSe,( DS - RRSe ) ) ) ) ) * ( MLU + ( RMSe / Max( MUC,DS ) ) ) ) - CS ) )", "obj1": 0.42322834645669294, "obj2": 0.3874650613980654}, {"determining": "( ( MRS - Max( ( ( Max( FirstVNF_Mem,( Const / FirstVNF_RAM ) ) / Max( ACS,( MRS - ( BR * FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( Const - Min( ( FirstVNF_CPU_Server / AMS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( Min( ( ( DS - RCSe ) - Min( Min( RCSe ,MUM ) ,CS ) ) ,( DS * DS ) ) + ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) ) ) / ( ( MUM - MUM ) + CS ) ) + Min( ( Min( RRSe ,( Min( Max( ( MUM / RRSe ),MUC ) ,Min( RRSe ,MUR ) ) / ( MUM + ( RCSe - CS ) ) ) ) - MLU ) ,( DS * Min( ( DS - RRSe ) ,RRSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6052547297447539}, {"determining": "( ( ( ARS * ( ( ( ( FirstVNF_Mem_Server - PN ) / Max( PN,FirstVNF_Mem ) ) + FirstVNF_CPU ) / PN ) ) + FirstVNF_RAM ) * ( FirstVNF_RAM_Server + ( Max( FirstVNF_Mem_Server,CRS ) * ( ACS + RRS ) ) ) )", "choosing": "( Max( ( MLU * ( MUM * Max( ( ( RMSe + RCSe ) * Min( RMSe ,( CS * CS ) ) ),( ( ( CS + DS ) / CS ) / ( RMSe + CS ) ) ) ) ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( DS + Min( ( MUM + RCSe ) ,MUM ) ) ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ) ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.35111251947592953}, {"determining": "( ( ACS + DDR ) / Min( ( FirstVNF_Mem / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ,Const ) )", "choosing": "( ( ( MUR + ( ( Min( MUM ,CS ) / ( ( DS / DS ) + RCSe ) ) + Min( ( ( MUM * MLU ) * CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( ( MUM / MLU ) + Min( Min( ( MUR / MUR ) ,( MLU + MUR ) ) ,( MUM + ( Min( MUM ,MLU ) * RMSe ) ) ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3464566929133858, "obj2": 0.49503249649122544}, {"determining": "Min( ( Min( ( Min( ( ( PN - Min( PN ,MDR ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RMSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.06944282215893285}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + Max( Min( ( Min( Const ,CRS ) / FirstVNF_Mem ) ,DDR ),( FirstVNF_Mem_Server + Min( RRS ,PN ) ) ) ) )", "choosing": "( ( MLU / ( ( Min( RRSe ,MUM ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUM ) / Max( ( Max( RMSe,CS ) * MUC ),( MLU - ( RCSe + MUM ) ) ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7634673847789472}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),Min( CS ,MUC ) ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6122047244094488, "obj2": 0.22833737352739567}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_Mem,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),( Max( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ),Min( RRS ,RRS ) ) / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) / Max( ( Min( ( Max( ( CS + DS ),Min( MLU ,Max( MUR,RCSe ) ) ) + DS ) ,MUR ) / CS ),Max( ( MLU / MUM ),RCSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6619577895696983}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / AMS ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - MUR ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5377035592329947}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( DDR / ( ( ( FirstVNF_RAM + ARS ) / FirstVNF_Mem ) + ACS ) ) ) / Min( ( Min( Const ,MDR ) * ( ACS + BR ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUC * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( RCSe / ( Max( RRSe,MUM ) / Max( ( ( MUM + Max( DS,CS ) ) * MUR ),( RRSe / Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5600561084173625}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_CPU ,( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) )", "obj1": 0.47834645669291337, "obj2": 0.32958458899878407}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( FirstVNF_CPU_Server ,( ( Const - ( MDR + FirstVNF_CPU_Server ) ) * MDR ) ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.25196850393700787, "obj2": 0.5800106216744582}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,( DS * RMSe ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.42013670174510015}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Min( ( ( DDR / MDR ) - CRS ) ,FirstVNF_CPU_Server ) ) * ( ( ( Max( ( ARS - BR ),FirstVNF_RAM_Server ) * CRS ) * ( Min( ( MDR / ARS ) ,( RRS - Max( ACS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( Max( MUC,MUR ) - MUR ) ) ) ) ) / Max( ( DS + ( MUM * MUR ) ),Max( Min( ( MUM * MUM ) ,RMSe ),MLU ) ) )", "obj1": 0.43503937007874016, "obj2": 0.36591978659432717}, {"determining": "( FirstVNF_RAM - ( Min( Min( PN ,Max( AMS,MDR ) ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( MDR - ACS ) ) )", "choosing": "( ( DS - ( DS * Max( ( CS * ( ( RMSe * RCSe ) - CS ) ),RRSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.18700787401574803, "obj2": 0.6508047440566519}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( DS * RMSe ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.33858267716535434, "obj2": 0.5014965239600612}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( RRS * FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM_Server / ( ARS * RRS ) ) ) )", "choosing": "Min( ( ( RCSe * MUR ) * MUM ) ,( Min( ( RRSe - RRSe ) ,( Min( DS ,MUC ) * RMSe ) ) + Max( MLU,Min( ( ( RCSe - Min( RCSe ,CS ) ) - MUM ) ,MUC ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5654544921583355}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( MLU,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08535968077463055}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( CS ,Max( ( Max( MUM,RCSe ) / MUC ),RRSe ) ) ) ) - CS ) )", "obj1": 0.19881889763779528, "obj2": 0.6378861550553576}, {"determining": "( Max( ( Const - ( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) / MRS ) ) ),( FirstVNF_RAM_Server * PN ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) + ( RRSe + ( ( MLU * Max( Max( MUR,MUR ),Max( RRSe,MUR ) ) ) * RMSe ) ) )", "obj1": 0.42913385826771655, "obj2": 0.37877474682236184}, {"determining": "( ( FirstVNF_RAM + ( MDR - ( CRS / FirstVNF_Mem ) ) ) / ( ( MRS + Min( AMS ,( ( ( BR / AMS ) - Min( Const ,( CRS + Const ) ) ) + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) - ( ( Max( MUC,MUR ) + DS ) / Max( ( MUM - DS ),Min( Min( Min( ( ( CS / DS ) + ( CS - RCSe ) ) ,MUC ) ,MLU ) ,MUM ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6292167504222614}, {"determining": "Min( ( Min( ( ( MRS + ACS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( Min( FirstVNF_RAM_Server ,BR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,PN ) ),Min( FirstVNF_RAM_Server ,BR ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( Max( DS,( RMSe + ( RMSe + ( RRSe + DS ) ) ) ) * ( MUC * RMSe ) ) ) - Min( Min( MUM ,( Min( RCSe ,( ( ( MUR - MUC ) / MLU ) * ( RMSe / Min( RRSe ,RRSe ) ) ) ) - RMSe ) ) ,Min( ( Max( MLU,( MUR * MUC ) ) / RMSe ) ,RCSe ) ) )", "obj1": 0.6476377952755905, "obj2": 0.1949958508031028}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( RCSe - DS ) + MUC ) / Max( ( DS / DS ),RCSe ) ) + ( RMSe + ( DS / RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.5807086614173228, "obj2": 0.24067249972511026}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server * MDR ) - Max( MDR,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),Min( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( ( BR / ( FirstVNF_Mem * Min( MDR ,Max( CRS,FirstVNF_Mem_Server ) ) ) ) * AMS ) ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,( ( MUC * MUM ) / DS ) ) ) ) ) ) / Max( Max( ( MUM / MUM ),RCSe ),( CS + ( MUR * MUM ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6716900773323762}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( DS * RMSe ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.32677165354330706, "obj2": 0.5140890041704244}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( RCSe + RMSe ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.639763779527559, "obj2": 0.2033895095154817}, {"determining": "( ( ( DDR / Const ) - ACS ) * ( CRS - Min( MDR ,Min( ( ( ( ACS * PN ) * MDR ) + ( CRS + FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( ( DS - RCSe ) - MUM ) + MUM ),Min( ( ( MUC / Max( ( DS * RCSe ),RMSe ) ) + MLU ) ,DS ) ) / ( CS * RMSe ) ) / ( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) / MLU ) )", "obj1": 0.9409448818897638, "obj2": 0.02712726907423778}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_Mem_Server - Const ) * Min( MRS ,ARS ) ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) + MRS ) / Min( RRS ,Const ) ) - ( FirstVNF_CPU_Server * MRS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,( MUC - ( RMSe * MUC ) ) ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( CS / ( CS * MUM ) ) ,Max( ( MUM / RRSe ),RCSe ) ) - Max( ( MLU * DS ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.3075876121211308}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "Min( ( ( ( Min( ( ( FirstVNF_Mem - Min( FirstVNF_CPU ,MDR ) ) * PN ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) * Min( ( MUC * DS ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( ( ( RMSe + ( ( RRSe / ( RRSe / CS ) ) * Max( DS,( MUC / RMSe ) ) ) ) * ( ( RCSe + MUM ) * ( RMSe - RRSe ) ) ) / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RMSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( RMSe / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.04223708602390664}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20887967831758358}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6535433070866141, "obj2": 0.18911972928693024}, {"determining": "Min( ( Min( AMS ,( Min( ( ( Const - MDR ) * PN ) ,( ( Max( FirstVNF_RAM,BR ) - ( AMS - AMS ) ) + RRS ) ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,Max( AMS,DDR ) )", "choosing": "( ( RRSe / Min( MUC ,RRSe ) ) / Max( RCSe,MUR ) )", "obj1": 0.6968503937007874, "obj2": 0.15491845722345152}, {"determining": "( Max( ( RRS - Max( BR,FirstVNF_CPU ) ),ACS ) - Min( ( AMS + FirstVNF_CPU ) ,( MRS / Max( CRS,MDR ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( ( ( DS - RCSe ) * RMSe ) * Max( MUC,DS ) ) ) ) ) ) / ( ( ( MUR / MUM ) * Min( CS ,MLU ) ) - RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5737611606054623}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,MDR ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( ACS * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - ( DS * RCSe ) ) - Min( CS ,MUM ) )", "obj1": 0.3661417322834646, "obj2": 0.4784376276776217}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5336332250114763}, {"determining": "( ( ( BR - ARS ) / ( Min( Min( AMS ,( FirstVNF_CPU_Server / DDR ) ) ,Min( AMS ,CRS ) ) / ( ( FirstVNF_RAM / ( FirstVNF_CPU - ACS ) ) + MDR ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( DS / Max( ( ( ( DS / ( MUR + RRSe ) ) / Min( DS ,DS ) ) - MLU ),Min( RMSe ,( MLU * ( ( Max( RCSe,CS ) / ( MUR * CS ) ) * RRSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.21850393700787402, "obj2": 0.6172957303581308}, {"determining": "( Min( Min( Const ,BR ) ,Max( Min( RRS ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( ( ( MLU - Max( ( CS / ( RMSe - RRSe ) ),CS ) ) + RMSe ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8392426751097208}, {"determining": "( ( Min( ( MDR * AMS ) ,( ( ( ( Max( ACS,ARS ) / MRS ) - BR ) - MDR ) * Min( AMS ,FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( CS - MUM ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Min( RCSe ,MUC ) ) ) ) ) - Min( MUM ,MUM ) )", "obj1": 0.5452755905511811, "obj2": 0.2655047896874593}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( ( FirstVNF_RAM - Min( ( RRS - ( Max( PN,DDR ) / PN ) ) ,( ACS * PN ) ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) - ( DS * DS ) ) / Max( ( RCSe / Max( DS,( MUM * Min( RMSe ,RRSe ) ) ) ),Min( Max( Min( ( Max( Min( RRSe ,MUR ),( MUM - DS ) ) * MUR ) ,RMSe ),CS ) ,MUC ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8480371235354126}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( AMS - FirstVNF_CPU ) ),( Min( ( Min( ( DDR * DDR ) ,DDR ) * ( Const - FirstVNF_CPU ) ) ,Min( ( ( FirstVNF_CPU / PN ) * RRS ) ,FirstVNF_CPU_Server ) ) + ( ( BR / ( BR * FirstVNF_RAM ) ) * ( ACS * AMS ) ) ) ) ,( Max( MRS,( AMS + CRS ) ) / PN ) ) / ( Max( FirstVNF_CPU_Server,MDR ) + ( PN / MDR ) ) )", "choosing": "( ( Min( RRSe ,MUR ) * MUM ) - Min( CS ,RCSe ) )", "obj1": 0.328740157480315, "obj2": 0.5070350206836896}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),Max( MUC,DS ) ) / ( ( RCSe * DS ) - Max( MLU,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3387993290133328}, {"determining": "( Max( Min( ( Min( ( ( FirstVNF_RAM / ACS ) + MDR ) ,AMS ) * ( ( ( FirstVNF_CPU + PN ) - BR ) - FirstVNF_CPU_Server ) ) ,( AMS * MDR ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( ( ( RRSe - MLU ) + RRSe ),( ( ( DS - ( DS * MUC ) ) + ( MUM / MUM ) ) - ( ( DS / ( DS * RMSe ) ) - Min( ( CS / MUC ) ,( DS + MUR ) ) ) ) ) ) - Min( CS ,MUM ) )", "obj1": 0.5511811023622047, "obj2": 0.2605156991057105}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( Min( Min( CRS ,FirstVNF_Mem ) ,FirstVNF_Mem_Server ) + DDR ) ) + MDR ) ) / ( MRS - ACS ) ) )", "choosing": "( Max( RCSe,MLU ) / ( ( Min( ( ( MUR * ( DS + Max( MUC,MUR ) ) ) / RRSe ) ,MLU ) * ( MUC + RCSe ) ) - Max( ( ( ( DS / ( DS * RMSe ) ) - Min( ( CS / MUC ) ,( DS + MUR ) ) ) - MUC ),( Min( MUM ,Max( MLU,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.10593504197321059}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( MUM ,Max( MUC,DS ) ) - ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.302522400195794}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,( ( ARS / MRS ) / RRS ) ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) + ( ( Min( MUC ,RRSe ) + Max( RCSe,RMSe ) ) + RRSe ) ) )", "obj1": 0.6141732283464567, "obj2": 0.22453558533243279}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ,PN ) / Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + ( CRS * MRS ) ) ) )", "choosing": "( ( ( MUR + ( ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / ( RCSe * MUR ) ) ) ) ) / ( MUR + RMSe ) ) + Min( ( MLU - ( Max( ( ( CS + MUC ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( ( ( MUM / RCSe ) / MUC ) / Max( Max( RCSe,( MUM / CS ) ),( DS / ( CS * MUM ) ) ) ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6235314040118703}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( AMS ,( Min( PN ,ACS ) / Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - Const ) ) + RRS ) ,( ( Const - MDR ) * PN ) ) ) ) ) ,Max( ( ( CRS - ( PN - MDR ) ) - RRS ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUR ,MUC ) / RRSe ) / ( ( RCSe * DS ) - Max( ( ( Max( ( MUC + MLU ),MUM ) / RRSe ) * CS ),( Max( MUM,MUR ) + Max( ( DS * RRSe ),MUM ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.17268599059721892}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( Min( ( MLU / RRSe ) ,( RCSe + RMSe ) ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.5354330708661418, "obj2": 0.2697721989037047}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( Min( MUM ,RCSe ) * DS ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + ( MUC - MUR ) ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.23031496062992127, "obj2": 0.6119905733738662}, {"determining": "Max( Min( FirstVNF_Mem_Server ,( RRS * RRS ) ),( Min( Max( ( ACS - ( ( FirstVNF_Mem * Min( RRS ,BR ) ) - ( ( ARS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ),( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ,( ( Const / Const ) * ( FirstVNF_Mem_Server / ( ACS - Const ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( MUC ,( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * ( ( DS - ( DS * MUC ) ) - Min( ( ( RRSe * ( RRSe - MUM ) ) + Max( ( RRSe / MUR ),MUM ) ) ,( MUM / RMSe ) ) ) ) * CS ) )", "obj1": 0.18503937007874016, "obj2": 0.6536873483727235}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / RRSe ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6200787401574803, "obj2": 0.2141726404259328}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,( CRS * AMS ) ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( Max( Max( ( MUM / MUM ),RCSe ),( CS + ( MUR * MUM ) ) ) * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.4625984251968504, "obj2": 0.3365032276757787}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( Max( ( ACS - FirstVNF_CPU_Server ),( FirstVNF_Mem - ( CRS + DDR ) ) ) / Const ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MLU / ( MUR + MUC ) ) + ( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU / Max( MUM,MLU ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( ( ( Max( RCSe,MUM ) * RMSe ) * MUM ) * MUC ) ) ) - Min( CS ,( MUR - MUR ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2512967515779506}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6220472440944882, "obj2": 0.21240383330136284}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( MRS ,Min( ( ARS / Min( AMS ,MRS ) ) ,( Min( RRS ,ACS ) - CRS ) ) ) * PN ) * FirstVNF_CPU_Server ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( ( RRSe / MUM ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUC,RCSe ),Max( ( ( ( MUR * Max( RCSe,DS ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.4311023622047244, "obj2": 0.3669406816293351}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( Min( MUM ,RCSe ) * DS ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + ( MUC - MUR ) ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.6378319301750717}], "33": [{"determining": "( ( Min( ( ARS * Const ) ,ARS ) + BR ) - ( Max( Min( CRS ,FirstVNF_CPU ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( CS ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( ( Max( DS,RMSe ) - MLU ) * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - PN ) - RRS ) - ( Max( Min( PN ,MDR ),( ( ( FirstVNF_CPU + PN ) * Min( RRS ,BR ) ) + MDR ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MLU * ( MUM * Max( ( ( RMSe + RCSe ) * Min( RMSe ,( CS * CS ) ) ),( Max( CS,CS ) / CS ) ) ) ),MUR ) / ( ( RCSe * DS ) - Max( CS,( Min( ( DS + Min( ( MUM + RCSe ) ,MUM ) ) ,Max( MUC,DS ) ) - Max( Max( RCSe,( MUM / RRSe ) ),( DS + CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR / PN ) + ( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,Min( ( RRS - ( ( Const - MDR ) * PN ) ) ,( Const - MDR ) ) ) - FirstVNF_RAM ) ) * ( AMS - MDR ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( ( RRSe + Max( MUC,( ( MUC / MUM ) / ( CS / RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( MUM + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8869620376390731}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4422957405927955}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( MRS - ( FirstVNF_Mem_Server + ACS ) ) + ( DDR / PN ) ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / Min( MUC ,DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "Max( ( Min( Min( ( ( Const - ( Max( FirstVNF_Mem,ACS ) - Min( CRS ,FirstVNF_Mem ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( ( BR / ( CRS * AMS ) ) * AMS ) ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( MUM / RRSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "Max( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * ( DS + ( MUC + MUC ) ) ) ) ) / ( RMSe - Max( ( ( MUM / ( MUR - DS ) ) - RRSe ),( RMSe / ( RMSe + ( Min( RMSe ,MUM ) / CS ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39362163132959965}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( Min( ( MLU / RRSe ) ,( RCSe + RMSe ) ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.5354330708661418, "obj2": 0.2697721989037047}, {"determining": "Min( ( ( ( Min( ( ( PN - Min( PN ,MDR ) ) * ( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( Max( ( MLU * ( MUM * Max( ( ( RMSe + RCSe ) * Min( RMSe ,( CS * CS ) ) ),( ( ( CS + DS ) / CS ) / ( RMSe + CS ) ) ) ) ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( DS + Min( ( MUM + RCSe ) ,MUM ) ) ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ) ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.02709350214201455}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "Min( ( Min( AMS ,( Min( ( ( Const - MDR ) * PN ) ,( ( Max( FirstVNF_RAM,BR ) - ( AMS - AMS ) ) + RRS ) ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,Max( AMS,DDR ) )", "choosing": "( ( RRSe / Min( MUC ,RRSe ) ) / Max( RCSe,MUR ) )", "obj1": 0.6968503937007874, "obj2": 0.1549184572234515}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,( ( Const + BR ) - Min( PN ,AMS ) ) ) ) - ( Min( Min( ( PN + FirstVNF_CPU_Server ) ,MDR ) ,ACS ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( RRSe * DS ) ,MUC ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( ( ( RCSe / MUC ) / MUR ),CS ) ) / Max( Max( RRSe,MUM ),DS ) ) ,MUM ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14711131318468326}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( Max( ( ( PN / FirstVNF_RAM_Server ) + Min( ( DDR + ( Min( ACS ,( BR / Const ) ) * Min( Max( AMS,ARS ) ,MDR ) ) ) ,FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,( MRS + ARS ) ) - FirstVNF_RAM ) ) * ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RCSe ,MUR ) / ( Max( MUR,MUC ) / MUR ) ) / ( CS * RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8576522560637384}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( ACS * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( ( MUR + ( ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( ( Max( MUM,RCSe ) / MUC ) / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.36811023622047245, "obj2": 0.47236930651267944}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * PN ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9094488188976378, "obj2": 0.03530609869183174}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( ( ( ( MUM / MUM ) + CS ) * ( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5118110236220472, "obj2": 0.2851641374179667}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "Min( ( ( ( Min( ( ( PN - ( FirstVNF_CPU * DDR ) ) * PN ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * Min( Min( RRSe ,RMSe ) ,MUC ) ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RMSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( RMSe / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.00970714608329065}, {"determining": "Min( ( Min( ( ( MRS + ACS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( Min( FirstVNF_RAM_Server ,BR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,PN ) ),Min( FirstVNF_RAM_Server ,BR ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( Max( DS,( RMSe + ( RMSe + ( RRSe + DS ) ) ) ) * ( MUC * RMSe ) ) ) - Min( Min( MUM ,( Min( RCSe ,( ( ( MUR - MUC ) / MLU ) * ( RMSe / Min( RRSe ,RRSe ) ) ) ) - RMSe ) ) ,Min( ( Max( MLU,( MUR * MUC ) ) / RMSe ) ,RCSe ) ) )", "obj1": 0.6476377952755905, "obj2": 0.1949958508031028}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "( FirstVNF_CPU_Server + Max( Min( DDR ,FirstVNF_Mem_Server ),( PN + Min( ( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU * DDR ) ),( BR / ( Const - RRS ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC - Min( MLU ,( ( Max( Max( ( RMSe - MUC ),RMSe ),Min( ( RCSe + MLU ) ,( DS - RRSe ) ) ) + DS ) / DS ) ) ) - ( MUM - ( DS / MUM ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7282233206216409}, {"determining": "( ( ACS * PN ) - ( Min( Const ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( FirstVNF_CPU_Server - MDR ) ) ) ) + BR ) ) / ( ACS - ( ACS * PN ) ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( MUM / ( DS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.968503937007874, "obj2": 0.01781565597550414}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "( ( ( Min( ( CRS / Min( ACS ,CRS ) ) ,CRS ) + ( ( Min( AMS ,CRS ) + BR ) - FirstVNF_Mem_Server ) ) * ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,MUM ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( DS * MUC ) - ( ( ( MUM + ( Min( RMSe ,RRSe ) + MUM ) ) + RCSe ) / RMSe ) ) ) - ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) / CS ) ) ) / Max( DS,MUC ) ) )", "obj1": 0.3484251968503937, "obj2": 0.4788257295904661}, {"determining": "( Max( MRS,( Min( ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( Min( ARS ,MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - ( ( CS * RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7523452002201604}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / Min( Min( PN ,ARS ) ,ACS ) ) - Max( ARS,( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem ,DDR ) + Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUM * ( MLU + MLU ) ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - Max( ( CS * CS ),RMSe ) ) ,( DS / DS ) ) + ( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( CS,MLU ) * MLU ) ) ) / ( DS * DS ) ) / MUR ) ) )", "obj1": 0.7263779527559056, "obj2": 0.13994405232928778}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( BR + ( ( ACS * ( ARS + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * MUC ),MUR ) / ( Min( ( MUR * RMSe ) ,Min( MUC ,RMSe ) ) - Max( MLU,Max( Min( MUM ,Max( MUC,DS ) ),( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ) ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3843327016947516}, {"determining": "( ( MRS - Max( ( ( Max( FirstVNF_Mem,( Const / FirstVNF_RAM ) ) / Max( ACS,( MRS - ( BR * FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( Const - Min( ( FirstVNF_CPU_Server / AMS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( Min( ( ( DS - RCSe ) - Min( Min( RCSe ,MUM ) ,CS ) ) ,( DS * DS ) ) + ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) ) ) / ( ( MUM - MUM ) + CS ) ) + Min( ( Min( RRSe ,( Min( Max( ( MUM / RRSe ),MUC ) ,Min( RRSe ,MUR ) ) / ( MUM + ( RCSe - CS ) ) ) ) - MLU ) ,( DS * Min( ( DS - RRSe ) ,RRSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6052547297447539}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / ( Min( Min( CRS ,FirstVNF_Mem ) ,FirstVNF_Mem_Server ) + DDR ) ) + MDR ) ) / ( MRS - ACS ) ) )", "choosing": "( Max( RCSe,MLU ) / ( ( Min( ( ( MUR * ( DS + Max( MUC,MUR ) ) ) / RRSe ) ,MLU ) * ( MUC + RCSe ) ) - Max( ( ( ( DS / ( DS * RMSe ) ) - Min( ( CS / MUC ) ,( DS + MUR ) ) ) - MUC ),( Min( MUM ,Max( MLU,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.10593504197321059}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "( ( PN * ACS ) - ( Max( MDR,Max( RRS,Min( Max( MDR,FirstVNF_RAM ) ,BR ) ) ) + Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( ( ( ( ( ( ( MUR + MUR ) - MUR ) - ( RRSe * ( MUM * RCSe ) ) ) - MUR ) * ( Min( MUR ,MUM ) * MLU ) ) / CS ) / DS ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / RRSe ) )", "obj1": 0.8622047244094488, "obj2": 0.05340076225947931}, {"determining": "( ( ACS + DDR ) / Min( ( FirstVNF_Mem / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ,Const ) )", "choosing": "( ( ( MUR + ( ( Min( MUM ,CS ) / ( ( DS / DS ) + RCSe ) ) + Min( ( ( MUM * MLU ) * CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( ( MUM / MLU ) + Min( Min( ( MUR / MUR ) ,( MLU + MUR ) ) ,( MUM + ( Min( MUM ,MLU ) * RMSe ) ) ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3464566929133858, "obj2": 0.49503249649122544}, {"determining": "( Max( ( Const - MDR ),ACS ) - Max( Min( MRS ,ACS ),Min( ( ( RRS + ACS ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( RRSe ,( ( CS + MUR ) - CS ) )", "obj1": 0.28346456692913385, "obj2": 0.5535032609954204}, {"determining": "Min( ( Min( ( Min( ( ( PN - FirstVNF_CPU ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - ( MUM + RCSe ) ) ) ) ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0031790893795900087}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "( Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) * ( AMS + Max( Min( ( Min( Const ,CRS ) / FirstVNF_Mem ) ,DDR ),( FirstVNF_Mem_Server + Min( RRS ,PN ) ) ) ) )", "choosing": "( ( MLU / ( ( Min( RRSe ,MUM ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUM ) / Max( ( Max( RMSe,CS ) * MUC ),( MLU - ( RCSe + MUM ) ) ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7634673847789472}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),Min( CS ,MUC ) ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6122047244094488, "obj2": 0.22833737352739567}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( DDR / ( ( ( FirstVNF_RAM + ARS ) / FirstVNF_Mem ) + ACS ) ) ) / Min( ( Min( Const ,MDR ) * ( ACS + BR ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - MUC ) + ( MUC * MUM ) ) ) + ( RRSe / RMSe ) ) ) ,( RCSe / ( Max( RRSe,MUM ) / Max( ( ( MUM + Max( DS,CS ) ) * MUR ),( RRSe / Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5600561084173625}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_CPU ,( Min( ( ( ACS / ARS ) + ARS ) ,DDR ) / ( Min( ( RRS / MDR ) ,FirstVNF_Mem ) * PN ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( ( ( ( MUC / MLU ) * ( MLU - DS ) ) + RCSe ) - ( RCSe * MUC ) ) )", "obj1": 0.47834645669291337, "obj2": 0.32958458899878407}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( FirstVNF_CPU_Server ,( ( Const - ( MDR + FirstVNF_CPU_Server ) ) * MDR ) ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.25196850393700787, "obj2": 0.5800106216744582}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_Mem_Server - Const ) * Min( MRS ,ARS ) ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) + MRS ) / Min( RRS ,Const ) ) - ( FirstVNF_CPU_Server * MRS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,( MUC - ( RMSe * MUC ) ) ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( CS / ( CS * MUM ) ) ,Max( ( MUM / RRSe ),RCSe ) ) - Max( ( MLU * DS ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.3075876121211308}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( DS * RMSe ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.33858267716535434, "obj2": 0.5014965239600612}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( RRS * FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM_Server / ( ARS * RRS ) ) ) )", "choosing": "Min( ( ( RCSe * MUR ) * MUM ) ,( Min( ( RRSe - RRSe ) ,( Min( DS ,MUC ) * RMSe ) ) + Max( MLU,Min( ( ( RCSe - Min( RCSe ,CS ) ) - MUM ) ,MUC ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5654544921583355}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_Mem,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),( Max( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ),Min( RRS ,RRS ) ) / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) / Max( ( Min( ( Max( ( CS + DS ),Min( MLU ,Max( MUR,RCSe ) ) ) + DS ) ,MUR ) / CS ),Max( ( MLU / MUM ),RCSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6619577895696983}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( Max( ( ACS - FirstVNF_CPU_Server ),( FirstVNF_Mem - ( CRS + DDR ) ) ) / Const ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MLU / ( MUR + MUC ) ) + ( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU / Max( MUM,MLU ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( ( ( Max( RCSe,MUM ) * RMSe ) * MUM ) * MUC ) ) ) - Min( CS ,( MUR - MUR ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2512967515779506}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,Max( ( ARS + BR ),Min( PN ,FirstVNF_CPU ) ) ) ) + MDR ) ) * ( ACS - MRS ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( ( RCSe - MUR ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( MLU,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC + MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08509727077729494}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.3008131853008299}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( RRS - ( Max( FirstVNF_Mem_Server,BR ) / PN ) ) ,MDR ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),Max( MUC,DS ) ) / ( ( RCSe * DS ) - Max( MLU,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6686399201743638}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( MDR - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( DS * RMSe ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,( MUM / MUM ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5124868396126969}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( RCSe + RMSe ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.639763779527559, "obj2": 0.2033895095154817}, {"determining": "( Max( ( Const - ( ( MDR * AMS ) - ( ( Min( FirstVNF_Mem ,( DDR - MRS ) ) + DDR ) / MRS ) ) ),( FirstVNF_RAM_Server * PN ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) + ( RRSe + ( ( MLU * Max( Max( MUR,MUR ),Max( RRSe,MUR ) ) ) * RMSe ) ) )", "obj1": 0.42913385826771655, "obj2": 0.37877474682236184}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8326861237133328}, {"determining": "( Max( MRS,( Min( ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( FirstVNF_CPU_Server ,( Min( ARS ,MDR ) * MDR ) ) ) ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( BR / Min( CRS ,CRS ) ) ,DDR ) * ( ( FirstVNF_Mem + FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( ( MUC / MLU ) / MUR ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - Min( ( CS * RMSe ) ,RCSe ) ) ) ) ) ) )", "obj1": 0.13976377952755906, "obj2": 0.744611791140933}, {"determining": "( ( ACS * PN ) - ( Min( ( ( FirstVNF_RAM / Max( ACS,Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) + MDR ) ,Min( PN ,MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( MUC - MUR ) + Max( MUM,DS ) )", "obj1": 0.7933070866141733, "obj2": 0.07774856348364859}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20887967831758358}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) / ( Min( Min( ACS ,ARS ) ,( Const / RRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( CS ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.1775029823856164}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "( Max( ( RRS - Max( BR,FirstVNF_CPU ) ),ACS ) - Min( ( AMS + FirstVNF_CPU ) ,( MRS / Max( CRS,MDR ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( ( ( DS - RCSe ) * RMSe ) * Max( MUC,DS ) ) ) ) ) ) / ( ( ( MUR / MUM ) * Min( CS ,MLU ) ) - RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5737611606054623}, {"determining": "Max( ( AMS / PN ),Max( FirstVNF_Mem,PN ) )", "choosing": "( ( ( RRSe * DS ) - Max( MLU,( Max( RMSe,DS ) / MUM ) ) ) / Max( ( CS * MLU ),MUR ) )", "obj1": 0.14173228346456693, "obj2": 0.7327587892892451}, {"determining": "Min( ( Min( ( Min( ( ( PN - Min( ARS ,MDR ) ) * PN ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,ACS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( DS * Min( ( RMSe + ( DS / Max( MUR,Min( RCSe ,MUC ) ) ) ) ,( MUC / ( ( ( MUM - CS ) * DS ) * RMSe ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8779527559055118, "obj2": 0.04726779076929084}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,MDR ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( ACS * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - ( DS * RCSe ) ) - Min( CS ,MUM ) )", "obj1": 0.3661417322834646, "obj2": 0.4784376276776217}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( RCSe - DS ) + MUC ) / Max( ( DS / DS ),RCSe ) ) + ( RMSe + ( DS / RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.5807086614173228, "obj2": 0.24067249972511026}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5336332250114763}, {"determining": "( ( ( BR - ARS ) / ( Min( Min( AMS ,( FirstVNF_CPU_Server / DDR ) ) ,Min( AMS ,CRS ) ) / ( ( FirstVNF_RAM / ( FirstVNF_CPU - ACS ) ) + MDR ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( DS / Max( ( ( ( DS / ( MUR + RRSe ) ) / Min( DS ,DS ) ) - MLU ),Min( RMSe ,( MLU * ( ( Max( RCSe,CS ) / ( MUR * CS ) ) * RRSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.21850393700787402, "obj2": 0.6172957303581308}, {"determining": "( ( Min( ( MDR * AMS ) ,( ( ( ( Max( ACS,ARS ) / MRS ) - BR ) - MDR ) * Min( AMS ,FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( CS - MUM ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Min( RCSe ,MUC ) ) ) ) ) - Min( MUM ,MUM ) )", "obj1": 0.5452755905511811, "obj2": 0.2655047896874593}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( Min( MUM ,RCSe ) * DS ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + ( MUC - MUR ) ) + ( DS + RMSe ) ),Max( ( DS / DS ),RRSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.1968503937007874, "obj2": 0.642699240948285}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( ( FirstVNF_RAM - Min( ( RRS - ( Max( PN,DDR ) / PN ) ) ,( ACS * PN ) ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) - ( DS * DS ) ) / Max( ( RCSe / Max( DS,( MUM * Min( RMSe ,RRSe ) ) ) ),Min( Max( Min( ( Max( Min( RRSe ,MUR ),( MUM - DS ) ) * MUR ) ,RMSe ),CS ) ,MUC ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8480371235354126}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( CS,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8228346456692913, "obj2": 0.0666997617640463}, {"determining": "( Min( Min( Const ,BR ) ,Max( Min( RRS ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( ( ( MLU - Max( ( CS / ( RMSe - RRSe ) ),CS ) ) + RMSe ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8392426751097208}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),Max( MUC,DS ) ) * ( ( RCSe * DS ) - Max( MLU,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5511811023622047, "obj2": 0.26028078900082996}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( AMS - FirstVNF_CPU ) ),( Min( ( Min( ( DDR * DDR ) ,DDR ) * ( Const - FirstVNF_CPU ) ) ,Min( ( ( FirstVNF_CPU / PN ) * RRS ) ,FirstVNF_CPU_Server ) ) + ( ( BR / ( BR * FirstVNF_RAM ) ) * ( ACS * AMS ) ) ) ) ,( Max( MRS,( AMS + CRS ) ) / PN ) ) / ( Max( FirstVNF_CPU_Server,MDR ) + ( PN / MDR ) ) )", "choosing": "( ( Min( RRSe ,MUR ) * MUM ) - Min( CS ,RCSe ) )", "obj1": 0.328740157480315, "obj2": 0.5070350206836896}, {"determining": "( ( ACS + PN ) - ( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ( ( Max( ARS,FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - MRS ) ,MDR ) ) * ( ( AMS * Min( MDR ,Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) / Min( ( Min( PN ,Max( MRS,MRS ) ) + DDR ) ,Min( MDR ,( MRS - Max( Min( CRS ,FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RCSe - Min( CS ,( MLU - RRSe ) ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + ( ( RMSe - ( MUM + CS ) ) + MUR ) ) ) / ( DS * MLU ) ) - Max( Min( ( MUC + Max( DS,( RMSe * ( RCSe / RMSe ) ) ) ) ,MUM ),Min( ( RCSe / ( MUR + CS ) ) ,( CS + ( MUM / MUM ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17428086956827413}, {"determining": "( ( ( RRS + RRS ) * FirstVNF_Mem ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.33071513937443}, {"determining": "( ( MDR * Const ) - ( Min( Min( PN ,Min( ( FirstVNF_CPU * DDR ) ,ARS ) ) ,( ( ( Const / PN ) * ( Min( RRS ,FirstVNF_RAM_Server ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),( ( ( RRSe / ( ( RCSe * DS ) - RMSe ) ) + MLU ) - DS ) ) / MUM ) / Min( ( MUR - DS ) ,Max( MLU,MLU ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2432047831277824}, {"determining": "( FirstVNF_RAM - ( Min( Min( PN ,Max( AMS,MDR ) ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( MDR - ACS ) ) )", "choosing": "( ( DS - ( DS * Max( ( CS * ( ( RMSe * RCSe ) - CS ) ),RRSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.18700787401574803, "obj2": 0.6508047440566519}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),Max( MUC,DS ) ) / ( ( RCSe * DS ) - Max( MLU,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5, "obj2": 0.29354669048482596}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / AMS ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5395514575694911}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - ( Min( DS ,MUC ) + ( RRSe - RRSe ) ) ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( MUR - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7458461275950927}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( AMS ,( Min( PN ,ACS ) / Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - Const ) ) + RRS ) ,( ( Const - MDR ) * PN ) ) ) ) ) ,Max( ( ( CRS - ( PN - MDR ) ) - RRS ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUR ,MUC ) / RRSe ) / ( ( RCSe * DS ) - Max( ( ( Max( ( MUC + MLU ),MUM ) / RRSe ) * CS ),( Max( MUM,MUR ) + Max( ( DS * RRSe ),MUM ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.17268599059721892}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( ( FirstVNF_RAM + ( MDR - ( CRS / FirstVNF_Mem ) ) ) / ( ( MRS + Min( AMS ,( ( ( BR / AMS ) - Min( Const ,( CRS + Const ) ) ) + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) - ( ( Max( MUC,MUR ) + DS ) / Max( ( MUM - DS ),Min( Min( Min( ( ( CS / DS ) + ( CS - RCSe ) ) ,MUC ) ,MLU ) ,MUM ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6292167504222614}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,( CRS * AMS ) ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( Max( Max( ( MUM / MUM ),RCSe ),( CS + ( MUR * MUM ) ) ) * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.4625984251968504, "obj2": 0.3365032276757787}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Min( ( ( DDR / MDR ) - CRS ) ,FirstVNF_CPU_Server ) ) * ( ( ( Max( ( ARS - BR ),FirstVNF_RAM_Server ) * CRS ) * ( Min( ( MDR / ARS ) ,( RRS - Max( ACS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( Max( MUC,MUR ) - MUR ) ) ) ) ) / Max( ( DS + ( MUM * MUR ) ),Max( Min( ( MUM * MUM ) ,RMSe ),MLU ) ) )", "obj1": 0.43503937007874016, "obj2": 0.36591978659432717}, {"determining": "( ( ( FirstVNF_CPU_Server / Min( PN ,AMS ) ) - PN ) * ( AMS * ( Min( DDR ,( FirstVNF_Mem - Min( CRS ,CRS ) ) ) * ( ( FirstVNF_RAM_Server + RRS ) * ( MRS - PN ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,MUC ) * ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) ) ) / Min( ( MUC / ( MUC - RRSe ) ) ,( DS / ( ( ( MUM / DS ) + MUC ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7648193773400791}, {"determining": "Min( ( Min( ( Min( ( ( PN - Min( PN ,MDR ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RMSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.06944282215893285}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6220472440944882, "obj2": 0.21240383330136284}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( MRS ,Min( ( ARS / Min( AMS ,MRS ) ) ,( Min( RRS ,ACS ) - CRS ) ) ) * PN ) * FirstVNF_CPU_Server ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( ( RRSe / MUM ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUC,RCSe ),Max( ( ( ( MUR * Max( RCSe,DS ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.4311023622047244, "obj2": 0.3669406816293351}, {"determining": "( ( FirstVNF_Mem * PN ) - ( ( ( BR - DDR ) * FirstVNF_Mem_Server ) / ( ACS / ( ACS * ( PN / MDR ) ) ) ) )", "choosing": "( ( MUM - ( DS + Max( CS,Max( ( ( ( MUC / MUC ) + RCSe ) - RCSe ),Min( Max( ( RMSe + RRSe ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( Min( RMSe ,( MUM + MUM ) ),MLU ),Max( ( ( MUC - ( ( MUR / ( RCSe * RCSe ) ) + MUC ) ) / ( CS * RRSe ) ),( ( RRSe + ( CS * RMSe ) ) + MUC ) ) ) )", "obj1": 0.8464566929133859, "obj2": 0.05803078295610111}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * Max( MDR,( ( ACS * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - MRS ) ) ) ) )", "choosing": "( Max( ( CS * MLU ),MUR ) / ( ( RCSe * DS ) - Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.045007826046268795}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( Min( MUM ,RCSe ) * DS ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + ( MUC - MUR ) ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.6378319301750717}], "34": [{"determining": "( ( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( CS * MLU ),( DS * RCSe ) ) / ( ( RCSe * DS ) - Max( MLU,( Max( Max( ( MUM / RRSe ),RCSe ),( RMSe / ( CS * MUM ) ) ) - ( ( CS * DS ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS * Const ) ,ARS ) + BR ) - ( Max( Min( CRS ,FirstVNF_CPU ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( CS ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( ( Max( DS,RMSe ) - MLU ) * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( MRS - ( FirstVNF_Mem_Server + ACS ) ) + ( DDR / PN ) ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / Min( MUC ,DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "Max( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * ( DS + ( MUC + MUC ) ) ) ) ) / ( RMSe - Max( ( ( MUM / ( MUR - DS ) ) - RRSe ),( RMSe / ( RMSe + ( Min( RMSe ,MUM ) / CS ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39362163132959965}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,Max( ( ARS + BR ),Min( PN ,FirstVNF_CPU ) ) ) ) + MDR ) ) * ( ACS - MRS ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( ( RCSe - MUR ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( MLU,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC + MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08509727077729494}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),Min( CS ,MUC ) ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6122047244094488, "obj2": 0.22833737352739567}, {"determining": "( ( ( ( FirstVNF_CPU * ( AMS + ( RRS / FirstVNF_RAM ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - ( RRS + FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + BR ) ) ) * ( Min( ( PN * MDR ) ,( FirstVNF_Mem + MDR ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Max( MUM,RCSe ),( MLU + ( MUR * Max( ( CS + Min( RCSe ,( MUC * RCSe ) ) ),MLU ) ) ) ) / ( MUC + CS ) )", "obj1": 0.47244094488188976, "obj2": 0.32890572668396667}, {"determining": "Max( ( Min( Min( ( ( Const - ( Max( FirstVNF_Mem,ACS ) - Min( CRS ,FirstVNF_Mem ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( ( BR / ( CRS * AMS ) ) * AMS ) ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( MUM / RRSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4422957405927955}, {"determining": "Min( ( Min( AMS ,( Min( ( ( Const - MDR ) * PN ) ,( ( Max( FirstVNF_RAM,BR ) - ( AMS - AMS ) ) + RRS ) ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,Max( AMS,DDR ) )", "choosing": "( ( RRSe / Min( MUC ,RRSe ) ) / Max( RCSe,MUR ) )", "obj1": 0.6968503937007874, "obj2": 0.1549184572234515}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_Mem_Server - Const ) * Min( MRS ,ARS ) ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) + MRS ) / Min( RRS ,Const ) ) - ( FirstVNF_CPU_Server * MRS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,( MUC - ( RMSe * MUC ) ) ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( CS / ( CS * MUM ) ) ,Max( ( MUM / RRSe ),RCSe ) ) - Max( ( MLU * DS ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.3075876121211308}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) - ( ( ACS * CRS ) * Max( Min( PN ,AMS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( MUC + ( ( DS * MUC ) + ( ( RMSe - ( MUC / DS ) ) * Min( DS ,Min( DS ,RRSe ) ) ) ) ) ) - ( ( ( ( RCSe - ( MUM * RRSe ) ) / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUC,MUM ) ),Max( RCSe,( MLU / ( CS / MLU ) ) ) ) ) ) / ( ( ( Max( MUM,Min( Max( MLU,RCSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * ( ( MUR * Min( RRSe ,DS ) ) / ( ( Min( RCSe ,MLU ) - ( MLU - RCSe ) ) - CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4330477702396556}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,( ( Const + BR ) - Min( PN ,AMS ) ) ) ) - ( Min( Min( ( PN + FirstVNF_CPU_Server ) ,MDR ) ,ACS ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( RRSe * DS ) ,MUC ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( ( ( RCSe / MUC ) / MUR ),CS ) ) / Max( Max( RRSe,MUM ),DS ) ) ,MUM ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14711131318468326}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( ACS * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( ( MUR + ( ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) + Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( Max( ( ( MUC + CS ) + ( CS * RMSe ) ),( ( MLU - RCSe ) + ( MUR * MUM ) ) ) + ( ( Max( MUM,RCSe ) / MUC ) / RMSe ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.36811023622047245, "obj2": 0.47236930651267944}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.39173228346456695, "obj2": 0.4177876189058781}, {"determining": "Min( ( Min( ( ( MRS + ACS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( Min( FirstVNF_RAM_Server ,BR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,PN ) ),Min( FirstVNF_RAM_Server ,BR ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( Max( DS,( RMSe + ( RMSe + ( RRSe + DS ) ) ) ) * ( MUC * RMSe ) ) ) - Min( Min( MUM ,( Min( RCSe ,( ( ( MUR - MUC ) / MLU ) * ( RMSe / Min( RRSe ,RRSe ) ) ) ) - RMSe ) ) ,Min( ( Max( MLU,( MUR * MUC ) ) / RMSe ) ,RCSe ) ) )", "obj1": 0.6476377952755905, "obj2": 0.1949958508031028}, {"determining": "( ( MRS - Max( ( ( Max( FirstVNF_Mem,( Const / FirstVNF_RAM ) ) / Max( ACS,( MRS - ( BR * FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( Const - Min( ( FirstVNF_CPU_Server / AMS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( Min( ( ( DS - RCSe ) - Min( Min( RCSe ,MUM ) ,CS ) ) ,( DS * DS ) ) + ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) ) ) / ( ( MUM - MUM ) + CS ) ) + Min( ( Min( RRSe ,( Min( Max( ( MUM / RRSe ),MUC ) ,Min( RRSe ,MUR ) ) / ( MUM + ( RCSe - CS ) ) ) ) - MLU ) ,( DS * Min( ( DS - RRSe ) ,RRSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6052547297447539}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server + Min( ( ( MDR + MRS ) * ARS ) ,MRS ) ) )", "choosing": "( ( Max( DS,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,RMSe ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) - ( ( ( CS * DS ) - RRSe ) * DS ) ) * ( ( Min( MLU ,MUC ) - ( ( RCSe / RCSe ) + MUC ) ) + MUR ) )", "obj1": 0.5236220472440944, "obj2": 0.2768886735995327}, {"determining": "( Max( MRS,( Min( ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( FirstVNF_CPU_Server ,( Min( ARS ,MDR ) * MDR ) ) ) ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( BR / Min( CRS ,CRS ) ) ,DDR ) * ( ( FirstVNF_Mem + FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( ( MUC / MLU ) / MUR ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - Min( ( CS * RMSe ) ,RCSe ) ) ) ) ) ) )", "obj1": 0.13976377952755906, "obj2": 0.744611791140933}, {"determining": "( ( ACS * PN ) - ( Min( ( ( FirstVNF_RAM / Max( ACS,Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) + MDR ) ,Min( PN ,MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( MUC - MUR ) + Max( MUM,DS ) )", "obj1": 0.7933070866141733, "obj2": 0.07774856348364859}, {"determining": "( ( ( Min( ( CRS / Min( ACS ,CRS ) ) ,CRS ) + ( ( Min( AMS ,CRS ) + BR ) - FirstVNF_Mem_Server ) ) * ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,MUM ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( DS * MUC ) - ( ( ( MUM + ( Min( RMSe ,RRSe ) + MUM ) ) + RCSe ) / RMSe ) ) ) - ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) / CS ) ) ) / Max( DS,MUC ) ) )", "obj1": 0.3484251968503937, "obj2": 0.4788257295904661}, {"determining": "( Max( ( ( PN / FirstVNF_RAM_Server ) + Min( ( DDR + ( Min( ACS ,( BR / Const ) ) * Min( Max( AMS,ARS ) ,MDR ) ) ) ,FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,( MRS + ARS ) ) - FirstVNF_RAM ) ) * ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RCSe ,MUR ) / ( Max( MUR,MUC ) / MUR ) ) / ( CS * RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8576522560637384}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / Min( Min( PN ,ARS ) ,ACS ) ) - Max( ARS,( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem ,DDR ) + Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUM * ( MLU + MLU ) ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - Max( ( CS * CS ),RMSe ) ) ,( DS / DS ) ) + ( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( CS,MLU ) * MLU ) ) ) / ( DS * DS ) ) / MUR ) ) )", "obj1": 0.7263779527559056, "obj2": 0.13994405232928778}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) / ( Min( Min( ACS ,ARS ) ,( Const / RRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( CS ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.1775029823856164}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( RRS * FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM_Server / ( ARS * RRS ) ) ) )", "choosing": "Min( ( ( RCSe * MUR ) * MUM ) ,( Min( ( RRSe - RRSe ) ,( Min( DS ,MUC ) * RMSe ) ) + Max( MLU,Min( ( ( RCSe - Min( RCSe ,CS ) ) - MUM ) ,MUC ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5654544921583355}, {"determining": "( ( ACS + DDR ) / Min( ( FirstVNF_Mem / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ,Const ) )", "choosing": "( ( ( MUR + ( ( Min( MUM ,CS ) / ( ( DS / DS ) + RCSe ) ) + Min( ( ( MUM * MLU ) * CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( ( MUM / MLU ) + Min( Min( ( MUR / MUR ) ,( MLU + MUR ) ) ,( MUM + ( Min( MUM ,MLU ) * RMSe ) ) ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3464566929133858, "obj2": 0.49503249649122544}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( Min( ( MLU / RRSe ) ,( RCSe + RMSe ) ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.5354330708661418, "obj2": 0.2697721989037047}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "( ( PN * ACS ) - ( Max( MDR,Max( RRS,Min( Max( MDR,FirstVNF_RAM ) ,BR ) ) ) + Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( ( ( ( ( ( ( MUR + MUR ) - MUR ) - ( RRSe * ( MUM * RCSe ) ) ) - MUR ) * ( Min( MUR ,MUM ) * MLU ) ) / CS ) / DS ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / RRSe ) )", "obj1": 0.8622047244094488, "obj2": 0.05340076225947931}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / AMS ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5395514575694911}, {"determining": "( Min( Max( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( Max( RRS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( Max( ( RMSe / RCSe ),MUR ),( Max( MUC,Max( ( DS / ( RMSe * CS ) ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,MUC ) )", "obj1": 0.2283464566929134, "obj2": 0.6117850599682849}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MLU * ( MUM * Max( ( ( RMSe + RCSe ) * Min( RMSe ,( CS * CS ) ) ),( ( ( CS + DS ) / CS ) / ( RMSe + CS ) ) ) ) ),MUR ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( DS + Min( ( MUM + RCSe ) ,MUM ) ) ,Max( MUC,DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS + CS ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5561892966387405}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6220472440944882, "obj2": 0.21240383330136284}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( BR + ( ( ACS * ( ARS + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * MUC ),MUR ) / ( Min( ( MUR * RMSe ) ,Min( MUC ,RMSe ) ) - Max( MLU,Max( Min( MUM ,Max( MUC,DS ) ),( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ) ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3843327016947516}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( DS * RMSe ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.33858267716535434, "obj2": 0.5014965239600612}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_Mem,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),( Max( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ),Min( RRS ,RRS ) ) / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) / Max( ( Min( ( Max( ( CS + DS ),Min( MLU ,Max( MUR,RCSe ) ) ) + DS ) ,MUR ) / CS ),Max( ( MLU / MUM ),RCSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6619577895696983}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5336332250114763}, {"determining": "( ( PN * FirstVNF_Mem ) - ( Min( Min( ( Max( PN,DDR ) / PN ) ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( RRS - MDR ) ) ) ) + BR ) ) / ( ACS - ( ACS * ( PN / MDR ) ) ) ) )", "choosing": "( ( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) - ( DS + Max( CS,Max( RRSe,Min( Max( ( RMSe + RRSe ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( Min( RMSe ,( MUM * MUM ) ),MLU ),Max( ( ( MUC - ( ( MUR / ( RCSe * RCSe ) ) + MUC ) ) / ( CS * RRSe ) ),( ( RRSe + ( CS * RMSe ) ) + MUC ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.10395200933022818}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( Max( ( ACS - FirstVNF_CPU_Server ),( FirstVNF_Mem - ( CRS + DDR ) ) ) / Const ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MLU / ( MUR + MUC ) ) + ( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU / Max( MUM,MLU ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( ( ( Max( RCSe,MUM ) * RMSe ) * MUM ) * MUC ) ) ) - Min( CS ,( MUR - MUR ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2512967515779506}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( Min( MUM ,RCSe ) * DS ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + ( MUC - MUR ) ) + ( DS + RMSe ) ),Max( ( DS / DS ),RRSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.1968503937007874, "obj2": 0.642699240948285}, {"determining": "( Max( ( Const - MDR ),ACS ) - Max( Min( MRS ,ACS ),Min( ( ( RRS + ACS ) * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( RRSe ,( ( CS + MUR ) - CS ) )", "obj1": 0.28346456692913385, "obj2": 0.5535032609954204}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( ( ( ( MUM / MUM ) + CS ) * ( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5118110236220472, "obj2": 0.2851641374179667}, {"determining": "( ( ( RRS - ( RRS * ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + PN ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) / Min( ACS ,ACS ) ) * MDR ) + ( ( ( FirstVNF_Mem - FirstVNF_RAM ) / ( Max( BR,FirstVNF_Mem_Server ) + ARS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + CS ) + MLU ),MUC ) ) / ( ( MUR / CS ) + ( RCSe - MUM ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3490683756670861}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( ( FirstVNF_RAM - Min( ( RRS - ( Max( PN,DDR ) / PN ) ) ,( ACS * PN ) ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) - ( DS * DS ) ) / Max( ( RCSe / Max( DS,( MUM * Min( RMSe ,RRSe ) ) ) ),Min( Max( Min( ( Max( Min( RRSe ,MUR ),( MUM - DS ) ) * MUR ) ,RMSe ),CS ) ,MUC ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8480371235354126}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( RCSe + RMSe ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.639763779527559, "obj2": 0.2033895095154817}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.07474421724103308}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "( ( MRS - Max( ( ( Max( FirstVNF_Mem,( Const / FirstVNF_RAM ) ) / Max( ACS,( MRS - ( BR * FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( Const - Min( ( FirstVNF_CPU_Server / AMS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - ( ( CS * RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7605025414985577}, {"determining": "( ( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.9881889763779528, "obj2": 0.009229791772028732}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,MDR ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( ACS * DDR ) ,FirstVNF_CPU_Server ) * ( Const - MDR ) ) ,( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - ( DS * RCSe ) ) - Min( CS ,MUM ) )", "obj1": 0.3661417322834646, "obj2": 0.4784376276776217}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( RCSe - DS ) + MUC ) / Max( ( DS / DS ),RCSe ) ) + ( RMSe + ( DS / RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.5807086614173228, "obj2": 0.24067249972511026}, {"determining": "( ( ACS + PN ) - ( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ( ( Max( ARS,FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - MRS ) ,MDR ) ) * ( ( AMS * Min( MDR ,Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) / Min( ( Min( PN ,Max( MRS,MRS ) ) + DDR ) ,Min( MDR ,( MRS - Max( Min( CRS ,FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RCSe - Min( CS ,( MLU - RRSe ) ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + ( ( RMSe - ( MUM + CS ) ) + MUR ) ) ) / ( DS * MLU ) ) - Max( Min( ( MUC + Max( DS,( RMSe * ( RCSe / RMSe ) ) ) ) ,MUM ),Min( ( RCSe / ( MUR + CS ) ) ,( CS + ( MUM / MUM ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17428086956827413}, {"determining": "( ( FirstVNF_RAM + ( MDR - ( CRS / FirstVNF_Mem ) ) ) / ( ( MRS + Min( AMS ,( ( ( BR / AMS ) - Min( Const ,( CRS + Const ) ) ) + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) - ( ( Max( MUC,MUR ) + DS ) / Max( ( MUM - DS ),Min( Min( Min( ( ( CS / DS ) + ( CS - RCSe ) ) ,MUC ) ,MLU ) ,MUM ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6292167504222614}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,ACS ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * RCSe ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),Min( CS ,MUC ) ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.7401574803149606, "obj2": 0.13191256925737063}, {"determining": "( ( Min( ( MDR * AMS ) ,( ( ( ( Max( ACS,ARS ) / MRS ) - BR ) - MDR ) * Min( AMS ,FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( CS - MUM ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Min( RCSe ,MUC ) ) ) ) ) - Min( MUM ,MUM ) )", "obj1": 0.5452755905511811, "obj2": 0.2655047896874593}, {"determining": "( Max( MRS,( Min( ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( Min( ARS ,MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - ( ( CS * RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7523452002201604}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( CS,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8228346456692913, "obj2": 0.0666997617640463}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( RRSe,RCSe ) - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.33628643361400257}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8326861237133328}, {"determining": "( ( ( Const / BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - ( ( FirstVNF_Mem - ( BR - FirstVNF_Mem_Server ) ) - ACS ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) + ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( MUM * MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8343411891239033}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( FirstVNF_CPU_Server ,( ( Const - ( MDR + FirstVNF_CPU_Server ) ) * MDR ) ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.25196850393700787, "obj2": 0.5800106216744582}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),Max( MUC,DS ) ) * ( ( RCSe * DS ) - Max( MLU,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5511811023622047, "obj2": 0.26028078900082996}, {"determining": "Min( ( ( ( Min( ( ( PN - ( FirstVNF_CPU * DDR ) ) * PN ) ,( ACS - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * Min( Min( RRSe ,RMSe ) ,MUC ) ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - Max( ( MUM / MUM ),RCSe ) ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RMSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( RMSe / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.023753783045644856}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( AMS - FirstVNF_CPU ) ),( Min( ( Min( ( DDR * DDR ) ,DDR ) * ( Const - FirstVNF_CPU ) ) ,Min( ( ( FirstVNF_CPU / PN ) * RRS ) ,FirstVNF_CPU_Server ) ) + ( ( BR / ( BR * FirstVNF_RAM ) ) * ( ACS * AMS ) ) ) ) ,( Max( MRS,( AMS + CRS ) ) / PN ) ) / ( Max( FirstVNF_CPU_Server,MDR ) + ( PN / MDR ) ) )", "choosing": "( ( Min( RRSe ,MUR ) * MUM ) - Min( CS ,RCSe ) )", "obj1": 0.328740157480315, "obj2": 0.5070350206836896}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "( ( MDR * Const ) - ( Min( Min( PN ,Min( ( FirstVNF_CPU * DDR ) ,ARS ) ) ,( ( ( Const / PN ) * ( Min( RRS ,FirstVNF_RAM_Server ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),( ( ( RRSe / ( ( RCSe * DS ) - RMSe ) ) + MLU ) - DS ) ) / MUM ) / Min( ( MUR - DS ) ,Max( MLU,MLU ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2432047831277824}, {"determining": "Min( ( Min( ( Min( ( ( PN - Min( ARS ,MDR ) ) * PN ) ,FirstVNF_Mem ) / Min( MRS ,ACS ) ) ,ACS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( DS * Min( ( RMSe + ( Min( CS ,MUM ) / Max( MUR,Min( RCSe ,MUC ) ) ) ) ,( MUC / ( ( ( MUM - CS ) * DS ) * RMSe ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.04379068716579754}, {"determining": "( FirstVNF_RAM - ( Min( Min( PN ,Max( AMS,MDR ) ) ,( ( FirstVNF_RAM / ACS ) + MDR ) ) / ( MDR - ACS ) ) )", "choosing": "( ( DS - ( DS * Max( ( CS * ( ( RMSe * RCSe ) - CS ) ),RRSe ) ) ) - Min( CS ,MUM ) )", "obj1": 0.18700787401574803, "obj2": 0.6508047440566519}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,( ( DDR - MRS ) * Min( MDR ,ARS ) ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) + FirstVNF_CPU_Server ) ) / ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Max( CRS,Const ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - AMS ) ),( ACS + ( Min( MRS ,( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ACS * AMS ) ) ) ) - PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,CS ) - ( RCSe - ( ( ( Max( ( RMSe + ( DS + RMSe ) ),MUC ) + MUC ) * MUC ) - RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6216233104497181}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( RRS - ( Max( FirstVNF_Mem_Server,BR ) / PN ) ) ,MDR ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),Max( MUC,DS ) ) / ( ( RCSe * DS ) - Max( MLU,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6686399201743638}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "Min( FirstVNF_Mem ,( Min( Min( ( FirstVNF_RAM / ARS ) ,Min( ( Max( FirstVNF_RAM,BR ) * Max( FirstVNF_RAM,( ARS + BR ) ) ) ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04881779249084595}, {"determining": "( ( ( BR - ARS ) / ( Min( Min( AMS ,( FirstVNF_CPU_Server / DDR ) ) ,Min( AMS ,CRS ) ) / ( ( FirstVNF_RAM / ( FirstVNF_CPU - ACS ) ) + MDR ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( DS / Max( ( ( ( DS / ( MUR + RRSe ) ) / Min( DS ,DS ) ) - MLU ),Min( RMSe ,( MLU * ( ( Max( RCSe,CS ) / ( MUR * CS ) ) * RRSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.21850393700787402, "obj2": 0.6172957303581308}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.30020539479987485}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - ( Min( DS ,MUC ) + ( RRSe - RRSe ) ) ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( MUR - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7458461275950927}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( AMS ,( Min( PN ,ACS ) / Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - Const ) ) + RRS ) ,( ( Const - MDR ) * PN ) ) ) ) ) ,Max( ( ( CRS - ( PN - MDR ) ) - RRS ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUR ,MUC ) / RRSe ) / ( ( RCSe * DS ) - Max( ( ( Max( ( MUC + MLU ),MUM ) / RRSe ) * CS ),( Max( MUM,MUR ) + Max( ( DS * RRSe ),MUM ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.17268599059721892}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "( ( ACS * PN ) - ( Min( Min( ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) ,MDR ) ,ACS ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - CS ) ,( DS / DS ) ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( CS,MLU ) * MLU ) ) ) / ( DS * DS ) ) ,MUR ) ) )", "obj1": 0.8149606299212598, "obj2": 0.07193179833647592}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_Mem ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( Max( ( MUC / ( RMSe * MUR ) ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * CS ) ) ) / ( DS + MUC ) )", "obj1": 0.3228346456692913, "obj2": 0.5184486120205051}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( Min( MRS ,ACS ) / RRS ) + ( DDR / PN ) ) + MRS ) ) - AMS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Max( ( MLU - Min( Min( MUC ,MLU ) ,( DS + MUR ) ) ),( Max( ( ( DS + MLU ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RMSe / RRSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5059055118110236, "obj2": 0.287753887145245}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20887967831758358}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( ( ACS * MDR ) - ( FirstVNF_CPU_Server - MDR ) ) ) ) + BR ) ) / ( ACS - ( ACS * PN ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,MUR ) ) ) ) / Max( Max( Min( ( MUM * MUM ) ,RMSe ),MLU ),( DS + ( MUM * MUR ) ) ) )", "obj1": 0.8464566929133859, "obj2": 0.05803078295610111}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Min( ( ( DDR / MDR ) - CRS ) ,FirstVNF_CPU_Server ) ) * ( ( ( Max( ( ARS - BR ),FirstVNF_RAM_Server ) * CRS ) * ( Min( ( MDR / ARS ) ,( RRS - Max( ACS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( Max( MUC,MUR ) - MUR ) ) ) ) ) / Max( ( DS + ( MUM * MUR ) ),Max( Min( ( MUM * MUM ) ,RMSe ),MLU ) ) )", "obj1": 0.43503937007874016, "obj2": 0.36591978659432717}, {"determining": "( Max( ( RRS - Max( BR,FirstVNF_CPU ) ),ACS ) - Min( ( AMS + FirstVNF_CPU ) ,( MRS / Max( CRS,MDR ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( ( ( DS - RCSe ) * RMSe ) * Max( MUC,DS ) ) ) ) ) ) / ( ( ( MUR / MUM ) * Min( CS ,MLU ) ) - RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5737611606054623}], "35": [{"determining": "( ( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_RAM + ( BR * CRS ) ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( CS * MLU ),( DS * RCSe ) ) / ( ( RCSe * DS ) - Max( MLU,( Max( Max( ( MUM / RRSe ),RCSe ),( RRSe * ( DS / RMSe ) ) ) - ( ( CS * DS ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( CS * MLU ),( DS * RCSe ) ) / ( ( RCSe * DS ) - Max( MLU,( Max( Max( ( MUM / RRSe ),RCSe ),( RMSe / ( CS * MUM ) ) ) - ( ( CS * DS ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( Max( ( ( FirstVNF_RAM * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) - Max( RRS,( PN - ( FirstVNF_CPU * DDR ) ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RCSe - RRSe ) + ( ( ( CS * RRSe ) * Min( RCSe ,RCSe ) ) + MUR ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( MUC * Min( Min( RRSe ,RMSe ) ,MUC ) ) ,( RCSe + RMSe ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4686129519384606}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4422957405927955}, {"determining": "Max( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * ( DS + ( MUC + MUC ) ) ) ) ) / ( RMSe - Max( ( ( MUM / ( MUR - DS ) ) - RRSe ),( RMSe / ( RMSe + ( Min( RMSe ,MUM ) / CS ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39362163132959965}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( BR + ( ( ACS * ( ARS + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS * MUC ),MUR ) / ( Min( ( MUR * RMSe ) ,Min( MUC ,RMSe ) ) - Max( MLU,Max( Min( MUM ,Max( MUC,DS ) ),( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ) ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3843327016947516}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),Min( CS ,MUC ) ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6122047244094488, "obj2": 0.22833737352739567}, {"determining": "( ( ( ( FirstVNF_CPU * ( AMS + ( RRS / FirstVNF_RAM ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - ( RRS + FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + BR ) ) ) * ( Min( ( PN * MDR ) ,( FirstVNF_Mem + MDR ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Max( MUM,RCSe ),( MLU + ( MUR * Max( ( CS + Min( RCSe ,( MUC * RCSe ) ) ),MLU ) ) ) ) / ( MUC + CS ) )", "obj1": 0.47244094488188976, "obj2": 0.32890572668396667}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Min( ( ( DDR / MDR ) - CRS ) ,FirstVNF_CPU_Server ) ) * ( ( ( Max( ( ARS - BR ),FirstVNF_RAM_Server ) * CRS ) * ( Min( ( MDR / ARS ) ,( RRS - Max( ACS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( Max( MUC,MUR ) - MUR ) ) ) ) ) / Max( ( DS + ( MUM * MUR ) ),Max( Min( ( MUM * MUM ) ,RMSe ),MLU ) ) )", "obj1": 0.43503937007874016, "obj2": 0.36591978659432717}, {"determining": "Min( ( Min( AMS ,( Min( ( ( Const - MDR ) * PN ) ,( ( Max( FirstVNF_RAM,BR ) - ( ACS - AMS ) ) + RRS ) ) / Min( MRS ,ACS ) ) ) - FirstVNF_RAM_Server ) ,Max( AMS,DDR ) )", "choosing": "( ( RRSe / Min( MUC ,( MUM * RCSe ) ) ) / Max( RCSe,MUR ) )", "obj1": 0.6968503937007874, "obj2": 0.15491845722345146}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / AMS ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5526171899242893}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) - ( ( ACS * CRS ) * Max( Min( PN ,AMS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( MUC + ( ( DS * MUC ) + ( ( RMSe - ( MUC / DS ) ) * Min( DS ,Min( DS ,RRSe ) ) ) ) ) ) - ( ( ( ( RCSe - ( MUM * RRSe ) ) / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUC,MUM ) ),Max( RCSe,( MLU / ( CS / MLU ) ) ) ) ) ) / ( ( ( Max( MUM,Min( Max( MLU,RCSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * ( ( MUR * Min( RRSe ,DS ) ) / ( ( Min( RCSe ,MLU ) - ( MLU - RCSe ) ) - CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4330477702396556}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "Max( ( Min( Min( ( ( Const - ( Max( FirstVNF_Mem,ACS ) - Min( CRS ,FirstVNF_Mem ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( ( BR / ( CRS * AMS ) ) * AMS ) ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( MUM / RRSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.39173228346456695, "obj2": 0.4177876189058781}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6220472440944882, "obj2": 0.21240383330136284}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( MRS - ( FirstVNF_Mem_Server + ACS ) ) + ( DDR / PN ) ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / Min( MUC ,DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.7017508397089516}, {"determining": "Min( ( Min( ( ( MRS + ACS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( Min( FirstVNF_RAM_Server ,BR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,PN ) ),Min( FirstVNF_RAM_Server ,BR ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( Max( DS,( RMSe + ( RMSe + ( RRSe + DS ) ) ) ) * ( MUC * RMSe ) ) ) - Min( Min( MUM ,( Min( RCSe ,( ( ( MUR - MUC ) / MLU ) * ( RMSe / Min( RRSe ,RRSe ) ) ) ) - RMSe ) ) ,Min( ( Max( MLU,( MUR * MUC ) ) / RMSe ) ,RCSe ) ) )", "obj1": 0.6476377952755905, "obj2": 0.1949958508031028}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "Min( ( Min( ( Min( ( ( PN - Min( ARS ,MDR ) ) * PN ) ,FirstVNF_Mem ) / Min( MRS ,ACS ) ) ,ACS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( DS * Min( ( RMSe + ( Min( CS ,MUM ) / Max( MUR,Min( RCSe ,MUC ) ) ) ) ,( MUC / ( ( ( MUM - CS ) * DS ) * RMSe ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.04379068716579754}, {"determining": "( Max( ( ( PN / FirstVNF_RAM_Server ) + Min( ( DDR + ( Min( ACS ,( BR / Const ) ) * Min( Max( AMS,ARS ) ,MDR ) ) ) ,FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,( MRS + ARS ) ) - FirstVNF_RAM ) ) * ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RCSe ,MUR ) / ( Max( MUR,MUC ) / MUR ) ) / ( CS * RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8576522560637384}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_Mem_Server - Const ) * Min( MRS ,ARS ) ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) + MRS ) / Min( RRS ,Const ) ) - ( FirstVNF_CPU_Server * MRS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,( MUC - ( RMSe * MUC ) ) ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( CS / ( CS * MUM ) ) ,Max( ( MUM / RRSe ),RCSe ) ) - Max( ( MLU * DS ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.3075876121211308}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server + Min( ( ( MDR + MRS ) * ARS ) ,MRS ) ) )", "choosing": "( ( Max( DS,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,RMSe ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) - ( ( ( CS * DS ) - RRSe ) * DS ) ) * ( ( Min( MLU ,MUC ) - ( ( RCSe / RCSe ) + MUC ) ) + MUR ) )", "obj1": 0.5236220472440944, "obj2": 0.2768886735995327}, {"determining": "Min( FirstVNF_Mem ,( Min( Min( ( FirstVNF_RAM / ARS ) ,Min( ( Max( FirstVNF_RAM,BR ) * Max( FirstVNF_RAM,( ARS + BR ) ) ) ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04881779249084595}, {"determining": "( ( ( Min( ( CRS / Min( ACS ,CRS ) ) ,CRS ) + ( ( Min( AMS ,CRS ) + BR ) - FirstVNF_Mem_Server ) ) * ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,MUM ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( DS * MUC ) - ( ( ( MUM + ( Min( RMSe ,RRSe ) + MUM ) ) + RCSe ) / RMSe ) ) ) - ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) / CS ) ) ) / Max( DS,MUC ) ) )", "obj1": 0.3484251968503937, "obj2": 0.4788257295904661}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / Min( Min( PN ,ARS ) ,ACS ) ) - Max( ARS,( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem ,DDR ) + Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUM * ( MLU + MLU ) ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - Max( ( CS * CS ),RMSe ) ) ,( DS / DS ) ) + ( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( CS,MLU ) * MLU ) ) ) / ( DS * DS ) ) / MUR ) ) )", "obj1": 0.7263779527559056, "obj2": 0.13994405232928778}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) / ( Min( Min( ACS ,ARS ) ,( Const / RRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( CS ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.1775029823856164}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9232283464566929, "obj2": 0.03494615021604694}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( RRSe,RCSe ) - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.33628643361400257}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "( ( ACS + DDR ) / Min( ( FirstVNF_Mem / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ,Const ) )", "choosing": "( ( ( MUR + ( ( Min( MUM ,CS ) / ( ( DS / DS ) + RCSe ) ) + Min( ( ( MUM * MLU ) * CS ) ,( DS / DS ) ) ) ) / ( MUR + CS ) ) + Min( ( MLU - ( ( MUM / MLU ) + Min( Min( ( MUR / MUR ) ,( MLU + MUR ) ) ,( MUM + ( Min( MUM ,MLU ) * RMSe ) ) ) ) ) ,( ( MUC / MUR ) / RCSe ) ) )", "obj1": 0.3464566929133858, "obj2": 0.49503249649122544}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( AMS - FirstVNF_CPU ) ),( Min( ( Min( ( DDR * DDR ) ,DDR ) * ( Const - FirstVNF_CPU ) ) ,Min( ( ( FirstVNF_CPU / PN ) * RRS ) ,FirstVNF_CPU_Server ) ) + ( ( BR / ( BR * FirstVNF_RAM ) ) * ( ACS * AMS ) ) ) ) ,( Max( MRS,( AMS + CRS ) ) / PN ) ) / ( Max( FirstVNF_CPU_Server,MDR ) + ( PN / MDR ) ) )", "choosing": "( ( Min( RRSe ,MUR ) * MUM ) - Min( CS ,RCSe ) )", "obj1": 0.328740157480315, "obj2": 0.5070350206836896}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "( ( PN * ACS ) - ( Max( MDR,Max( RRS,Min( Max( MDR,FirstVNF_RAM ) ,BR ) ) ) + Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( ( ( ( ( ( ( MUR + MUR ) - MUR ) - ( RRSe * ( MUM * RCSe ) ) ) - MUR ) * ( Min( MUR ,MUM ) * MLU ) ) / CS ) / DS ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / RRSe ) )", "obj1": 0.8622047244094488, "obj2": 0.05340076225947931}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( RRS * FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM_Server / ( ARS * RRS ) ) ) )", "choosing": "Min( ( ( RCSe * MUR ) * MUM ) ,( Min( ( RRSe - RRSe ) ,( Min( DS ,MUC ) * RMSe ) ) + Max( MLU,Min( ( ( RCSe - Min( RCSe ,CS ) ) - MUM ) ,MUC ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5654544921583355}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM ) * ( FirstVNF_Mem_Server * CRS ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MLU - Min( Min( MUC ,MLU ) ,( DS + MUR ) ) ),( Max( ( ( MLU + DS ) - ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RMSe / RRSe ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.2854330708661417, "obj2": 0.5416514995931986}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( FirstVNF_CPU_Server ,( ( Const - ( MDR + FirstVNF_CPU_Server ) ) * MDR ) ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.25196850393700787, "obj2": 0.5800106216744582}, {"determining": "( Min( Max( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - ( ( CS * RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7620158739885424}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - ( ( DS * RMSe ) - Min( RCSe ,DS ) ) ),( Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.33858267716535434, "obj2": 0.5014965239600612}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_Mem,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),( Max( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ),Min( RRS ,RRS ) ) / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) / Max( ( Min( ( Max( ( CS + DS ),Min( MLU ,Max( MUR,RCSe ) ) ) + DS ) ,MUR ) / CS ),Max( ( MLU / MUM ),RCSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6619577895696983}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5336332250114763}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( CS,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8228346456692913, "obj2": 0.0666997617640463}, {"determining": "Min( ( ( ( Min( ( ( PN - ( FirstVNF_CPU * DDR ) ) * PN ) ,( ACS - DDR ) ) / Min( MRS ,ACS ) ) / ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ) ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * Min( Min( RRSe ,RMSe ) ,Min( Max( RCSe,MLU ) ,MUM ) ) ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - Max( ( MUM / MUM ),RCSe ) ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RMSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( RMSe / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.02550044123315381}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( Max( ( ACS - FirstVNF_CPU_Server ),( FirstVNF_Mem - ( CRS + DDR ) ) ) / Const ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MLU / ( MUR + MUC ) ) + ( Max( ( RRSe + Max( MUC,( MUR / MUR ) ) ),( RRSe / RCSe ) ) / Max( ( MLU / Max( MUM,MLU ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( Min( Max( RCSe,MLU ) ,MUM ) + MUM ) + MUM ) / RMSe ) - ( ( ( Max( RCSe,MUM ) * RMSe ) * MUM ) * MUC ) ) ) - Min( CS ,( MUR - MUR ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2512967515779506}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( ( ( ( MUM / MUM ) + CS ) * ( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5118110236220472, "obj2": 0.2851641374179667}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( AMS - FirstVNF_Mem_Server ) ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( MLU,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * ( MUR + RRSe ) ) ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08509173898946452}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( RRS - ( Max( FirstVNF_Mem_Server,BR ) / PN ) ) ,MDR ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),Max( MUC,DS ) ) / ( ( RCSe * DS ) - Max( MLU,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6686399201743638}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_Mem ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( Max( ( MUC / ( RMSe * MUR ) ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * CS ) ) ) / ( DS + MUC ) )", "obj1": 0.3228346456692913, "obj2": 0.5184486120205051}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( ( FirstVNF_RAM - Min( ( RRS - ( Max( PN,DDR ) / PN ) ) ,( ACS * PN ) ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) - ( DS * DS ) ) / Max( ( RCSe / Max( DS,( MUM * Min( RMSe ,RRSe ) ) ) ),Min( Max( Min( ( Max( Min( RRSe ,MUR ),( MUM - DS ) ) * MUR ) ,RMSe ),CS ) ,MUC ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8480371235354126}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( RCSe + RMSe ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.639763779527559, "obj2": 0.2033895095154817}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "( ( FirstVNF_RAM + ( MDR - ( CRS / FirstVNF_Mem ) ) ) / ( ( MRS + Min( AMS ,( ( ( BR / AMS ) - Min( Const ,( CRS + Const ) ) ) + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) - ( ( Max( MUC,MUR ) + DS ) / Max( ( MUM - DS ),Min( Min( Min( ( ( CS / DS ) + ( CS - RCSe ) ) ,MUC ) ,MLU ) ,MUM ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6292167504222614}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,( ( Const + BR ) - Min( PN ,AMS ) ) ) ) - ( Min( Min( ( PN + FirstVNF_CPU_Server ) ,MDR ) ,ACS ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( RRSe * DS ) ,MUC ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( ( ( RCSe / MUC ) / MUR ),CS ) ) / Max( Max( RRSe,MUM ),DS ) ) ,MUM ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14711131318468326}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20887967831758358}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "( Max( ( RRS - Max( BR,FirstVNF_CPU ) ),ACS ) - Min( ( AMS + FirstVNF_CPU ) ,( MRS / Max( CRS,MDR ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( ( ( DS - RCSe ) * RMSe ) * Max( MUC,DS ) ) ) ) ) ) / ( ( ( MUR / MUM ) * Min( CS ,MLU ) ) - RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5737611606054623}, {"determining": "( ( MRS - Max( ( ( Max( FirstVNF_Mem,( Const / FirstVNF_RAM ) ) / Max( ACS,( MRS - ( BR * FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( Const - Min( ( FirstVNF_CPU_Server / AMS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( Min( ( ( DS - RCSe ) - Min( Min( RCSe ,MUM ) ,CS ) ) ,( DS * DS ) ) + ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) ) ) / ( ( MUM - MUM ) + CS ) ) + Min( ( Min( RRSe ,( Min( Max( ( MUM / RRSe ),MUC ) ,Min( RRSe ,MUR ) ) / ( MUM + ( RCSe - CS ) ) ) ) - MLU ) ,( DS * Min( ( DS - RRSe ) ,RRSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6052547297447539}, {"determining": "( ( PN * FirstVNF_Mem ) - ( Min( Min( ( Max( PN,DDR ) / PN ) ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( RRS - MDR ) ) ) ) + BR ) ) / ( ACS - ( ACS * ( PN / MDR ) ) ) ) )", "choosing": "( ( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) - ( DS + Max( CS,Max( RRSe,Min( Max( ( RMSe + RRSe ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( Min( RMSe ,( MUM * MUM ) ),MLU ),Max( ( ( MUC - ( ( MUR / ( RCSe * RCSe ) ) + MUC ) ) / ( CS * RRSe ) ),( ( RRSe + ( CS * RMSe ) ) + MUC ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.10395200933022818}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( RCSe - DS ) + MUC ) / Max( ( DS / DS ),RCSe ) ) + ( RMSe + ( DS / RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.5807086614173228, "obj2": 0.24067249972511026}, {"determining": "( ( ACS + PN ) - ( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ( ( Max( ARS,FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - MRS ) ,MDR ) ) * ( ( AMS * Min( MDR ,Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) / Min( ( Min( PN ,Max( MRS,MRS ) ) + DDR ) ,Min( MDR ,( MRS - Max( Min( CRS ,FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RCSe - Min( CS ,( MLU - RRSe ) ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + ( ( RMSe - ( MUM + CS ) ) + MUR ) ) ) / ( DS * MLU ) ) - Max( Min( ( MUC + Max( DS,( RMSe * ( RCSe / RMSe ) ) ) ) ,MUM ),Min( ( RCSe / ( MUR + CS ) ) ,( CS + ( MUM / MUM ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17428086956827413}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,ACS ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * RCSe ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),Min( CS ,MUC ) ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.7401574803149606, "obj2": 0.13191256925737063}, {"determining": "( ( Min( ( MDR * AMS ) ,( ( ( ( Max( ACS,ARS ) / MRS ) - BR ) - MDR ) * Min( AMS ,FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( CS - MUM ),( ( ( Min( ( MUC * DS ) ,( RMSe + RCSe ) ) * MLU ) - CS ) - ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Min( RCSe ,MUC ) ) ) ) ) - Min( MUM ,MUM ) )", "obj1": 0.5452755905511811, "obj2": 0.2655047896874593}, {"determining": "( ( ( RRS - ( RRS * ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + PN ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) / Min( ACS ,ACS ) ) * MDR ) + ( ( ( FirstVNF_Mem - FirstVNF_RAM ) / ( Max( BR,FirstVNF_Mem_Server ) + ARS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + CS ) + MLU ),MUC ) ) / ( ( MUR / CS ) + ( RCSe - MUM ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3490683756670861}, {"determining": "( ( ACS * PN ) - ( Min( Min( ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) ,MDR ) ,ACS ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( CS ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( ( Max( DS,RMSe ) - MLU ) * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.7854330708661418, "obj2": 0.0814950323786736}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8326861237133328}, {"determining": "( ( ( Const / BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - ( ( FirstVNF_Mem - ( BR - FirstVNF_Mem_Server ) ) - ACS ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) + ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( MUM * MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8343411891239033}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( ( ACS * MDR ) - ( FirstVNF_CPU_Server - MDR ) ) ) ) + BR ) ) / ( ACS - ( ACS * PN ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,MUR ) ) ) ) / Max( Max( Min( ( MUM * MUM ) ,RMSe ),MLU ),( DS + ( MUM * MUR ) ) ) )", "obj1": 0.8464566929133859, "obj2": 0.05803078295610111}, {"determining": "( Max( MRS,( Min( ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( Min( ARS ,MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / Max( Max( ( RCSe / RMSe ),MUR ),( Max( MUC,Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.24015748031496062, "obj2": 0.6040325996247796}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),Max( MUC,DS ) ) * ( ( RCSe * DS ) - Max( MLU,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5511811023622047, "obj2": 0.26028078900082996}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( ( PN - Min( PN ,MDR ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( ( ( RRSe + DS ) + MLU ) * Max( RRSe,DS ) ) ) ) ) ) / ( ( ( MUR / MUM ) * Min( CS ,MLU ) ) + RCSe ) )", "obj1": 0.452755905511811, "obj2": 0.3437135214288952}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "( ( MDR * Const ) - ( Min( Min( PN ,Min( ( FirstVNF_CPU * DDR ) ,ARS ) ) ,( ( ( Const / PN ) * ( Min( RRS ,FirstVNF_RAM_Server ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),( ( ( RRSe / ( ( RCSe * DS ) - RMSe ) ) + MLU ) - DS ) ) / MUM ) / Min( ( MUR - DS ) ,Max( MLU,MLU ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2432047831277824}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,( ( DDR - MRS ) * Min( MDR ,ARS ) ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) + FirstVNF_CPU_Server ) ) / ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Max( CRS,Const ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - AMS ) ),( ACS + ( Min( MRS ,( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ACS * AMS ) ) ) ) - PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,CS ) - ( RCSe - ( ( ( Max( ( RMSe + ( DS + RMSe ) ),MUC ) + MUC ) * MUC ) - RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6216233104497181}, {"determining": "( Max( PN,Min( BR ,Max( BR,( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) * Min( ( ( FirstVNF_CPU_Server * ( ( DDR + Const ) * ( BR + ( FirstVNF_Mem - Min( ARS ,MDR ) ) ) ) ) * FirstVNF_RAM_Server ) ,( MDR + MRS ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - ( Min( DS ,MUC ) + ( RRSe - RRSe ) ) ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( Min( Max( CS,( CS * RRSe ) ) ,MUC ) ,( MUM / ( ( MLU / ( MUR - ( DS / Max( CS,DS ) ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7458461275950927}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( AMS ,( Min( PN ,ACS ) / Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - Const ) ) + RRS ) ,( ( Const - MDR ) * PN ) ) ) ) ) ,Max( ( ( CRS - ( PN - MDR ) ) - RRS ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUR ,MUC ) / RRSe ) / ( ( RCSe * DS ) - Max( ( ( Max( ( MUC + MLU ),MUM ) / RRSe ) * CS ),( Max( MUM,MUR ) + Max( ( DS * RRSe ),MUM ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.17268599059721892}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "( ( PN * ACS ) - ( Min( Min( ( Max( PN,DDR ) / PN ) ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( RRS - MDR ) ) ) ) + BR ) ) / ( ACS - ( ACS * ( PN / MDR ) ) ) ) )", "choosing": "( ( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) - ( DS + Max( DS,Max( RRSe,Min( Max( ( RMSe + RRSe ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( Min( RMSe ,( MUM * MUM ) ),MLU ),Max( ( ( MUC - ( ( MUR / ( RCSe * RCSe ) ) + MUC ) ) / ( CS * RRSe ) ),( ( RRSe + ( CS * RMSe ) ) + MUC ) ) ) )", "obj1": 0.7460629921259843, "obj2": 0.10952953094688538}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9232283464566929, "obj2": 0.03494615021604694}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( ( ( DDR / MDR ) - CRS ) * FirstVNF_CPU_Server ) ) * ( ( ( Max( FirstVNF_RAM_Server,( ARS - BR ) ) * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_Mem ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( CRS - Const ) ) ) ,( RRS - Max( ACS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( MUC - MUR ) ) ) ) ) / Max( Max( Min( ( MUM * MUM ) ,RMSe ),MLU ),( DS + ( MUM * MUR ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * Min( ( ( Min( BR ,ACS ) - BR ) / Min( Min( ACS ,RRS ) ,DDR ) ) ,AMS ) ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) / ( Min( Min( CRS ,( BR - RRS ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) - ( DS + RMSe ) ),Max( ( MLU / DS ),RCSe ) ) ),Max( MUC,DS ) ) * ( ( RCSe * Min( ( RMSe + CS ) ,DS ) ) - ( CS + MLU ) ) )", "obj1": 0.5334645669291339, "obj2": 0.271623418074417}, {"determining": "( ( ACS / CRS ) - FirstVNF_CPU )", "choosing": "( Min( DS ,Max( RRSe,( RRSe + CS ) ) ) - Min( MUM ,CS ) )", "obj1": 0.2047244094488189, "obj2": 0.6364134607309241}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / AMS ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5395514575694911}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( Min( ( MLU / RRSe ) ,( RCSe + RMSe ) ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.5354330708661418, "obj2": 0.2697721989037047}], "36": [{"determining": "( Min( ( RRS - ( Max( FirstVNF_Mem_Server,BR ) / PN ) ) ,MDR ) * ( ( ( Max( FirstVNF_RAM_Server,( ARS - BR ) ) * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_Mem ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( CRS - Const ) ) ) ,( RRS - Max( ACS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( MUC - MUR ) ) ) ) ) / ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_RAM + ( BR * CRS ) ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( CS * MLU ),( DS * RCSe ) ) / ( ( RCSe * DS ) - Max( MLU,( Max( Max( ( MUM / RRSe ),RCSe ),( RRSe * ( DS / RMSe ) ) ) - ( ( CS * DS ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "Max( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * ( DS + ( MUC + MUC ) ) ) ) ) / ( RMSe - Max( ( ( MUM / ( MUR - DS ) ) - RRSe ),( RMSe / ( RMSe + ( Min( RMSe ,MUM ) / CS ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39362163132959965}, {"determining": "( Max( ( ( FirstVNF_RAM * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) - Max( RRS,( PN - ( FirstVNF_CPU * DDR ) ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RCSe - RRSe ) + ( ( ( CS * RRSe ) * Min( RCSe ,RCSe ) ) + MUR ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( MUC * Min( Min( RRSe ,RMSe ) ,MUC ) ) ,( RCSe + RMSe ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4686129519384606}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.41732283464566927, "obj2": 0.38031670951664026}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "Min( ( Min( ( Min( ( ( PN - Min( PN ,MDR ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) ,( ( FirstVNF_CPU / PN ) * ( ( ( Const * ARS ) + AMS ) + MRS ) ) ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RMSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.797244094488189, "obj2": 0.07685635400903375}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( CS,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8228346456692913, "obj2": 0.0666997617640463}, {"determining": "( ( ( ( FirstVNF_CPU * ( AMS + ( RRS / FirstVNF_RAM ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - ( RRS + FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + BR ) ) ) * ( Min( ( PN * MDR ) ,( FirstVNF_Mem + MDR ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Max( MUM,RCSe ),( MLU + ( MUR * Max( ( CS + Min( RCSe ,( MUC * RCSe ) ) ),MLU ) ) ) ) / ( MUC + CS ) )", "obj1": 0.47244094488188976, "obj2": 0.32890572668396667}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + BR ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,MUR ) / ( Max( ( ( ( DS / Max( ( DS / DS ),Min( CS ,MUC ) ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.610236220472441, "obj2": 0.2269548979800411}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Min( ( ( DDR / MDR ) - CRS ) ,FirstVNF_CPU_Server ) ) * ( ( ( Max( ( ARS - BR ),FirstVNF_RAM_Server ) * CRS ) * ( Min( ( MDR / ARS ) ,( RRS - Max( ACS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( Max( MUC,MUR ) - MUR ) ) ) ) ) / Max( ( DS + ( MUM * MUR ) ),Max( Min( ( MUM * MUM ) ,RMSe ),MLU ) ) )", "obj1": 0.43503937007874016, "obj2": 0.36591978659432717}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server * DDR ) + ( ( MRS - ( MRS / PN ) ) * PN ) ) ) ),( ACS / BR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( MUR / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( Max( ( MUR / ( MLU * MUC ) ),RRSe ) * RRSe ) ,MUC ) )", "obj1": 0.36811023622047245, "obj2": 0.4449882141722993}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "Max( ( Min( Min( ( ( Const - ( Max( FirstVNF_Mem,ACS ) - Min( CRS ,FirstVNF_Mem ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( ( BR / ( CRS * AMS ) ) * AMS ) ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( MUM / RRSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( MRS - ( FirstVNF_Mem_Server + ACS ) ) + ( DDR / PN ) ) + MRS ) ) - BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / Min( MUC ,DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / DS ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.7017508397089516}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,( ( Const + BR ) - Min( PN ,AMS ) ) ) ) - ( Min( Min( ( PN + FirstVNF_CPU_Server ) ,MDR ) ,ACS ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( RRSe * DS ) ,MUC ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( ( ( RCSe / MUC ) / MUR ),CS ) ) / Max( Max( RRSe,MUM ),DS ) ) ,MUM ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14711131318468326}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_Mem_Server - Const ) * Min( MRS ,ARS ) ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) + MRS ) / Min( RRS ,Const ) ) - ( FirstVNF_CPU_Server * MRS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,( MUC - ( RMSe * MUC ) ) ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( CS / ( CS * MUM ) ) ,Max( ( MUM / RRSe ),RCSe ) ) - Max( ( MLU * DS ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.3075876121211308}, {"determining": "Min( FirstVNF_Mem ,( Min( Min( ( FirstVNF_RAM / ARS ) ,Min( ( Max( FirstVNF_RAM,BR ) * Max( FirstVNF_RAM,( ARS + BR ) ) ) ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04881779249084595}, {"determining": "Max( ( Min( Min( ( ( Const - ( Max( FirstVNF_Mem,ACS ) - Min( CRS ,FirstVNF_Mem ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( ( BR / ( CRS * AMS ) ) * AMS ) ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( MUM / RRSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6491597716753157}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "Min( ( Min( ( Min( ( ( PN - Min( ARS ,MDR ) ) * PN ) ,FirstVNF_Mem ) / Min( MRS ,ACS ) ) ,ACS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( DS * Min( ( RMSe + ( Min( CS ,MUM ) / Max( MUR,Min( RCSe ,MUC ) ) ) ) ,( MUC / ( ( ( MUM - CS ) * DS ) * RMSe ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.04379068716579754}, {"determining": "( Max( ( ( PN / FirstVNF_RAM_Server ) + Min( ( DDR + ( Min( ACS ,( BR / Const ) ) * Min( Max( AMS,ARS ) ,MDR ) ) ) ,FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,( MRS + ARS ) ) - FirstVNF_RAM ) ) * ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RCSe ,MUR ) / ( Max( MUR,MUC ) / MUR ) ) / ( CS * RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8576522560637384}, {"determining": "Min( ( Min( ( ( MRS + ACS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( Min( FirstVNF_RAM_Server ,BR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( Max( ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,PN ) ),Min( FirstVNF_RAM_Server ,BR ) ) + MRS ) ) / FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( Max( DS,( RMSe + ( RMSe + ( RRSe + DS ) ) ) ) * ( MUC * RMSe ) ) ) - Min( Min( MUM ,( Min( RCSe ,( ( ( MUR - MUC ) / MLU ) * ( RMSe / Min( RRSe ,RRSe ) ) ) ) - RMSe ) ) ,Min( ( Max( MLU,( MUR * MUC ) ) / RMSe ) ,RCSe ) ) )", "obj1": 0.6476377952755905, "obj2": 0.1949958508031028}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) - ( ( ACS * CRS ) * Max( Min( PN ,AMS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( MUC + ( ( DS * MUC ) + ( ( RMSe - ( MUC / DS ) ) * Min( DS ,Min( DS ,RRSe ) ) ) ) ) ) - ( ( ( ( RCSe - ( MUM * RRSe ) ) / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUC,MUM ) ),Max( RCSe,( MLU / ( CS / MLU ) ) ) ) ) ) / ( ( ( Max( MUM,Min( Max( MLU,RCSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * ( ( MUR * Min( RRSe ,DS ) ) / ( ( Min( RCSe ,MLU ) - ( MLU - RCSe ) ) - CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4330477702396556}, {"determining": "( ( ( Min( ( CRS / Min( ACS ,CRS ) ) ,CRS ) + ( ( Min( AMS ,CRS ) + BR ) - FirstVNF_Mem_Server ) ) * ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,MUM ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( DS * MUC ) - ( ( ( MUM + ( Min( RMSe ,RRSe ) + MUM ) ) + RCSe ) / RMSe ) ) ) - ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) / CS ) ) ) / Max( DS,MUC ) ) )", "obj1": 0.3484251968503937, "obj2": 0.4788257295904661}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / Min( Min( PN ,ARS ) ,ACS ) ) - Max( ARS,( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem ,DDR ) + Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUM * ( MLU + MLU ) ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - Max( ( CS * CS ),RMSe ) ) ,( DS / DS ) ) + ( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( CS,MLU ) * MLU ) ) ) / ( DS * DS ) ) / MUR ) ) )", "obj1": 0.7263779527559056, "obj2": 0.13994405232928778}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "( Min( ( Max( ( ( FirstVNF_CPU + ( Min( DDR ,FirstVNF_Mem_Server ) * CRS ) ) * ( RRS * FirstVNF_Mem ) ),( PN - ( FirstVNF_CPU * DDR ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / ( ( RRSe / MLU ) + Max( ( ( MUR / DS ) - RRSe ),( MUM * ( ( MUC * Min( MLU ,RMSe ) ) * MUC ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.38976377952755903, "obj2": 0.4249684867076595}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( AMS - FirstVNF_CPU ) ),( Min( ( Min( ( DDR * DDR ) ,DDR ) * ( Const - FirstVNF_CPU ) ) ,Min( ( ( FirstVNF_CPU / PN ) * RRS ) ,FirstVNF_CPU_Server ) ) + ( ( BR / ( BR * FirstVNF_RAM ) ) * ( ACS * AMS ) ) ) ) ,( Max( MRS,( AMS + CRS ) ) / PN ) ) / ( Max( FirstVNF_CPU_Server,MDR ) + ( PN / MDR ) ) )", "choosing": "( ( Min( RRSe ,MUR ) * MUM ) - Min( CS ,RCSe ) )", "obj1": 0.328740157480315, "obj2": 0.5070350206836896}, {"determining": "( ( FirstVNF_RAM - ( Max( FirstVNF_CPU,ARS ) * RRS ) ) * ( Min( ( MDR * MDR ) ,( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * PN ) ,( ( Max( FirstVNF_RAM,BR ) - ( ACS - AMS ) ) + RRS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( Max( ( CS / ( MUR * MUM ) ),Max( ( MUM / MUM ),RCSe ) ) * Max( RRSe,Min( Max( RRSe,RCSe ) ,( ( DS + CS ) + ( DS + RCSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.4915651678590498}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * Min( Min( RRSe ,RMSe ) ,Min( Max( RCSe,MLU ) ,MUM ) ) ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - Max( ( MUM / MUM ),RCSe ) ) + ( ( RCSe / ( MLU + ( MUM / ( Max( RCSe,MUR ) - ( CS - RMSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( RMSe / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.053272051929340834}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "( ( ACS * PN ) - ( Min( Min( ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) ,MDR ) ,ACS ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( CS ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( ( Max( DS,RMSe ) - MLU ) * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.7854330708661418, "obj2": 0.0814950323786736}, {"determining": "( ( ACS * PN ) - ( Min( Min( ( AMS / ( FirstVNF_CPU + CRS ) ) ,FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / CS ) / ( Max( ( ( ( ( ( RCSe - DS ) + MUC ) / Max( ( RCSe / MUM ),RCSe ) ) + ( RMSe + ( DS / RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20166459055471547}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( FirstVNF_CPU_Server ,( ( Const - ( MDR + FirstVNF_CPU_Server ) ) * MDR ) ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.25196850393700787, "obj2": 0.5800106216744582}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,( ( DDR - MRS ) * Min( MDR ,ARS ) ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) + FirstVNF_CPU_Server ) ) / ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Max( CRS,Const ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - AMS ) ),( ACS + ( Min( MRS ,( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ACS * AMS ) ) ) ) - PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,CS ) - ( RCSe - ( ( ( Max( ( RMSe + ( DS + RMSe ) ),MUC ) + MUC ) * MUC ) - RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6216233104497181}, {"determining": "( ( ACS / CRS ) - FirstVNF_CPU )", "choosing": "( Min( DS ,Max( RRSe,( RRSe + CS ) ) ) - Min( MUM ,CS ) )", "obj1": 0.2047244094488189, "obj2": 0.6364134607309241}, {"determining": "( Min( Max( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( ( ( BR / PN ) * ( ACS * AMS ) ) / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( ( RMSe * MUR ) / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - ( ( CS * RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7485846932745895}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_Mem,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),( Max( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ),Min( RRS ,RRS ) ) / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) / Max( ( Min( ( Max( ( CS + DS ),Min( MLU ,Max( MUR,RCSe ) ) ) + DS ) ,MUR ) / CS ),Max( ( MLU / MUM ),RCSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6619577895696983}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,AMS ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MLU - Min( Min( MUC ,MLU ) ,( DS + MUR ) ) ),( Max( ( ( DS + MLU ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RMSe / RRSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.33858267716535434, "obj2": 0.501368466619432}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( ( ( ( MUM / MUM ) + CS ) * ( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5118110236220472, "obj2": 0.2851641374179667}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( RRSe,RCSe ) - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.33628643361400257}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( RRS - ( Max( FirstVNF_Mem_Server,BR ) / PN ) ) ,MDR ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),Max( MUC,DS ) ) / ( ( RCSe * DS ) - Max( MLU,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6686399201743638}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( Min( ( Min( ( DDR * DDR ) ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) * ( Const - MDR ) ) ,Min( MDR ,FirstVNF_Mem ) ) + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( Max( ( MUC / ( RMSe * MUR ) ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * CS ) ) ) / ( DS + MUC ) )", "obj1": 0.3228346456692913, "obj2": 0.5184486120205051}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( ( FirstVNF_RAM - Min( ( RRS - ( Max( PN,DDR ) / PN ) ) ,( ACS * PN ) ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) - ( DS * DS ) ) / Max( ( RCSe / Max( DS,( MUM * Min( RMSe ,RRSe ) ) ) ),Min( Max( Min( ( Max( Min( RRSe ,MUR ),( MUM - DS ) ) * MUR ) ,RMSe ),CS ) ,MUC ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8480371235354126}, {"determining": "Min( ( ( ( Min( ( ARS + Min( FirstVNF_Mem ,MDR ) ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * RRSe ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.035981264748015884}, {"determining": "( ( PN * ACS ) - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Min( Min( PN ,MDR ) ,( MRS * Const ) ) ) )", "choosing": "( ( ( ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Max( DS,RMSe ) ) + ( ( Min( ( MUC * DS ) ,( ( MUR + MLU ) / ( RCSe + DS ) ) ) * MLU ) - CS ) ) / MUM ) / ( ( ( ( ( DS / Max( ( RCSe + RMSe ),RCSe ) ) + MUC ) + CS ) * ( RCSe / MUM ) ) / MLU ) )", "obj1": 0.7007874015748031, "obj2": 0.1546229908857381}, {"determining": "( Min( Max( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - ( ( CS * RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7620158739885424}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "( ( FirstVNF_RAM + ( MDR - ( CRS / FirstVNF_Mem ) ) ) / ( ( MRS + Min( AMS ,( ( ( BR / AMS ) - Min( Const ,( CRS + Const ) ) ) + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) - ( ( Max( MUC,MUR ) + DS ) / Max( ( MUM - DS ),Min( Min( Min( ( ( CS / DS ) + ( CS - RCSe ) ) ,MUC ) ,MLU ) ,MUM ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6292167504222614}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( PN / Min( ( PN + CRS ) ,MRS ) ) ,( RRS - Max( ARS,ACS ) ) ) / ( MRS * Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR - ( MUR + CS ) ) + Min( MLU ,Max( ( ( RRSe * MUC ) - Min( Min( ( DS - MUM ) ,CS ) ,RMSe ) ),MUM ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5513220624511641}, {"determining": "( Max( ( RRS - Max( BR,FirstVNF_CPU ) ),ACS ) - Min( ( AMS + FirstVNF_CPU ) ,( MRS / Max( CRS,MDR ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( ( ( DS - RCSe ) * RMSe ) * Max( MUC,DS ) ) ) ) ) ) / ( ( ( MUR / MUM ) * Min( CS ,MLU ) ) - RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5737611606054623}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( Min( CS ,MUC ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6200787401574803, "obj2": 0.2141726404259328}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6220472440944882, "obj2": 0.21240383330136284}, {"determining": "( ( MRS - Max( ( ( Max( FirstVNF_Mem,( Const / FirstVNF_RAM ) ) / Max( ACS,( MRS - ( BR * FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( Const - Min( ( FirstVNF_CPU_Server / AMS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( Min( ( ( DS - RCSe ) - Min( Min( RCSe ,MUM ) ,CS ) ) ,( DS * DS ) ) + ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) ) ) / ( ( MUM - MUM ) + CS ) ) + Min( ( Min( RRSe ,( Min( Max( ( MUM / RRSe ),MUC ) ,Min( RRSe ,MUR ) ) / ( MUM + ( RCSe - CS ) ) ) ) - MLU ) ,( DS * Min( ( DS - RRSe ) ,RRSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6052547297447539}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) / ( Min( Min( ACS ,ARS ) ,( Const / RRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( CS ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.1775029823856164}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,ACS ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * RCSe ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),Min( CS ,MUC ) ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.7401574803149606, "obj2": 0.13191256925737063}, {"determining": "( ( ( RRS - ( RRS * ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + PN ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) / Min( ACS ,ACS ) ) * MDR ) + ( ( ( FirstVNF_Mem - FirstVNF_RAM ) / ( Max( BR,FirstVNF_Mem_Server ) + ARS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + CS ) + MLU ),MUC ) ) / ( ( MUR / CS ) + ( RCSe - MUM ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3490683756670861}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5336332250114763}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( RRS * FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM_Server / ( ARS * RRS ) ) ) )", "choosing": "Min( ( ( RCSe * MUR ) * MUM ) ,( Min( ( RRSe - RRSe ) ,( Min( DS ,MUC ) * RMSe ) ) + Max( MLU,Min( ( ( RCSe - Min( RCSe ,CS ) ) - MUM ) ,MUC ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5654544921583355}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8326861237133328}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "Min( ( ( ( Min( ( ( PN - ( FirstVNF_CPU * DDR ) ) * PN ) ,( Const - DDR ) ) / Min( ( PN / Min( ( FirstVNF_CPU_Server * CRS ) ,MRS ) ) ,ACS ) ) / AMS ) - CRS ) ,ACS )", "choosing": "( ( Max( ( MUR / ( MUR + CS ) ),( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) - Min( CS ,MUR ) )", "obj1": 0.9665354330708661, "obj2": 0.012059845727104284}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08509173898946452}, {"determining": "( ( ACS + PN ) - ( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ( ( Max( ARS,FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - MRS ) ,MDR ) ) * ( ( AMS * Min( MDR ,Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) / Min( ( Min( PN ,Max( MRS,MRS ) ) + DDR ) ,Min( MDR ,( MRS - Max( Min( CRS ,FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RCSe - Min( CS ,( MLU - RRSe ) ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + ( ( RMSe - ( MUM + CS ) ) + MUR ) ) ) / ( DS * MLU ) ) - Max( Min( ( MUC + Max( DS,( RMSe * ( RCSe / RMSe ) ) ) ) ,MUM ),Min( ( RCSe / ( MUR + CS ) ) ,( CS + ( MUM / MUM ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17428086956827413}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM ) * ( FirstVNF_Mem_Server * CRS ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MLU - Min( Min( MUC ,MLU ) ,( DS + MUR ) ) ),( Max( ( ( MLU + DS ) - ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RMSe / RRSe ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.2854330708661417, "obj2": 0.5416514995931986}, {"determining": "( ( ( Const / BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - ( ( FirstVNF_Mem - ( BR - FirstVNF_Mem_Server ) ) - ACS ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) + ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( MUM * MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8343411891239033}, {"determining": "( Max( MRS,( Min( ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( Min( ARS ,MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / Max( Max( ( RCSe / RMSe ),MUR ),( Max( MUC,Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.24015748031496062, "obj2": 0.6040325996247796}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),Max( MUC,DS ) ) * ( ( RCSe * DS ) - Max( MLU,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5511811023622047, "obj2": 0.26028078900082996}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "( ( MDR * Const ) - ( Min( Min( PN ,Min( ( FirstVNF_CPU * DDR ) ,ARS ) ) ,( ( ( Const / PN ) * ( Min( RRS ,FirstVNF_RAM_Server ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),( ( ( RRSe / ( ( RCSe * DS ) - RMSe ) ) + MLU ) - DS ) ) / MUM ) / Min( ( MUR - DS ) ,Max( MLU,MLU ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2432047831277824}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server + Min( ( ( MDR + MRS ) * ARS ) ,MRS ) ) )", "choosing": "( ( Max( DS,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,RMSe ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) - ( ( ( CS * DS ) - RRSe ) * DS ) ) * ( ( Min( MLU ,MUC ) - ( ( RCSe / RCSe ) + MUC ) ) + MUR ) )", "obj1": 0.5236220472440944, "obj2": 0.2768886735995327}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( AMS ,( Min( PN ,ACS ) / Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - Const ) ) + RRS ) ,( ( Const - MDR ) * PN ) ) ) ) ) ,Max( ( ( CRS - ( PN - MDR ) ) - RRS ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUR ,MUC ) / RRSe ) / ( ( RCSe * DS ) - Max( ( ( Max( ( MUC + MLU ),MUM ) / RRSe ) * CS ),( Max( MUM,MUR ) + Max( ( DS * RRSe ),MUM ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.17268599059721892}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( ( ACS * MDR ) - ( FirstVNF_CPU_Server - MDR ) ) ) ) + BR ) ) / ( ACS - ( ACS * PN ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,MUR ) ) ) ) / Max( Max( Min( ( MUM * MUM ) ,RMSe ),MLU ),( DS + ( MUM * MUR ) ) ) )", "obj1": 0.8464566929133859, "obj2": 0.05803078295610111}, {"determining": "Min( ( ( Max( ACS,Max( AMS,FirstVNF_RAM ) ) * ( Const / FirstVNF_RAM ) ) - FirstVNF_RAM_Server ) ,PN )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUR / MUC ) ,( Min( RCSe ,MLU ) / ( Min( RRSe ,CS ) / Max( RMSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( MUM / Max( MLU,( MUR - ( MLU - Min( RRSe ,DS ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9940944881889764, "obj2": 0.007297398801730705}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "Min( ( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( Max( ( RCSe + RMSe ),RCSe ) - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6417322834645669, "obj2": 0.2007271349179185}, {"determining": "( ( PN * FirstVNF_Mem ) - ( Min( Min( ( Max( PN,DDR ) / PN ) ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - ( RRS - MDR ) ) ) ) + BR ) ) / ( ACS - ( ACS * ( PN / MDR ) ) ) ) )", "choosing": "( ( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) - ( DS + Max( CS,Max( RRSe,Min( Max( ( RMSe + RRSe ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( Min( RMSe ,( MUM * MUM ) ),MLU ),Max( ( ( MUC - ( ( MUR / ( RCSe * RCSe ) ) + MUC ) ) / ( CS * RRSe ) ),( ( RRSe + ( CS * RMSe ) ) + MUC ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.10395200933022818}, {"determining": "Min( ( ( ( Min( ( FirstVNF_RAM * ( FirstVNF_CPU / ACS ) ) ,( Const - DDR ) ) / Min( ( PN / Min( ( FirstVNF_CPU_Server * CRS ) ,MRS ) ) ,ACS ) ) / AMS ) - CRS ) ,ACS )", "choosing": "( ( Max( ( MUR / ( MUR + CS ) ),( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUM,MLU ) ),Max( RCSe,RRSe ) ) ) ) / ( ( Min( ( MUC * MLU ) ,CS ) / RMSe ) - ( DS * MUC ) ) ) - MUR )", "obj1": 0.9271653543307087, "obj2": 0.03349595952040597}, {"determining": "Min( ( ( ( Min( ( ARS + Max( ( PN * RRS ),MDR ) ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( Max( ( Max( ( ( DS + CS ) - ( DS + RMSe ) ),Max( ( MLU / DS ),RCSe ) ) + CS ),Max( MUC,DS ) ) * ( ( ( MLU / MUM ) * Min( ( RMSe + CS ) ,DS ) ) - ( CS + MLU ) ) )", "obj1": 0.937007874015748, "obj2": 0.028570409722105148}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.265748031496063, "obj2": 0.5554160268872083}, {"determining": "( Min( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - ( ( CS * RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7620158739885424}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4422957405927955}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / AMS ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - RRSe ) + ( MUR - ( MUR + CS ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5395514575694911}], "37": [{"determining": "( Max( MRS,( Min( ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - ( RRS - Max( ARS,ACS ) ) ) ,FirstVNF_RAM ) - ACS ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( ( DS + RMSe ) - ( ( RRSe * CS ) + RCSe ) ) ) / ( MLU / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( Max( FirstVNF_Mem_Server,BR ) / PN ) ) ,MDR ) * ( ( ( Max( FirstVNF_RAM_Server,( ARS - BR ) ) * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_Mem ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( CRS - Const ) ) ) ,( RRS - Max( ACS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( MUC - MUR ) ) ) ) ) / ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4980359232453927}, {"determining": "Max( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * ( DS + ( MUC + MUC ) ) ) ) ) / ( RMSe - Max( ( ( MUM / ( MUR - DS ) ) - RRSe ),( RMSe / ( RMSe + ( Min( RMSe ,MUM ) / CS ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39362163132959965}, {"determining": "( ( MDR * Const ) - ( Min( Min( PN ,Min( ( FirstVNF_CPU * DDR ) ,ARS ) ) ,( ( ( Const / PN ) * ( Min( RRS ,FirstVNF_RAM_Server ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),( ( ( RRSe / ( ( RCSe * DS ) - RMSe ) ) + MLU ) - DS ) ) / MUM ) / Min( ( MUR - DS ) ,Max( MLU,MLU ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2432047831277824}, {"determining": "( Max( ( ( FirstVNF_RAM * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) - Max( RRS,( PN - ( FirstVNF_CPU * DDR ) ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RCSe - RRSe ) + ( ( ( CS * RRSe ) * Min( RCSe ,RCSe ) ) + MUR ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( MUC * Min( Min( RRSe ,RMSe ) ,MUC ) ) ,( RCSe + RMSe ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4686129519384606}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.41732283464566927, "obj2": 0.38031670951664026}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "( ( FirstVNF_RAM - ( Max( FirstVNF_CPU,ARS ) * RRS ) ) * ( Min( ( MDR * MDR ) ,( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * PN ) ,( ( Max( FirstVNF_RAM,BR ) - ( ACS - AMS ) ) + RRS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( Max( ( CS / ( MUR * MUM ) ),Max( ( MUM / MUM ),RCSe ) ) * Max( RRSe,Min( Max( RRSe,RCSe ) ,( ( DS + CS ) + ( DS + RCSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.4915651678590498}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Min( ( ( DDR / MDR ) - CRS ) ,FirstVNF_CPU_Server ) ) * ( ( ( Max( ( ARS - BR ),FirstVNF_RAM_Server ) * CRS ) * ( Min( ( MDR / ARS ) ,( RRS - Max( ACS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( Max( MUC,MUR ) - MUR ) ) ) ) ) / Max( ( DS + ( MUM * MUR ) ),Max( Min( ( MUM * MUM ) ,RMSe ),MLU ) ) )", "obj1": 0.43503937007874016, "obj2": 0.36591978659432717}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( CS,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8228346456692913, "obj2": 0.0666997617640463}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "( ( ( ( FirstVNF_CPU * ( AMS + ( RRS / FirstVNF_RAM ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - ( RRS + FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + BR ) ) ) * ( Min( ( PN * MDR ) ,( FirstVNF_Mem + MDR ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Max( MUM,RCSe ),( MLU + ( MUR * Max( ( CS + Min( RCSe ,( MUC * RCSe ) ) ),MLU ) ) ) ) / ( MUC + CS ) )", "obj1": 0.47244094488188976, "obj2": 0.32890572668396667}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server * DDR ) + ( ( MRS - ( MRS / PN ) ) * PN ) ) ) ),( ACS / BR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( MUR / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( Max( ( MUR / ( MLU * MUC ) ),RRSe ) * RRSe ) ,MUC ) )", "obj1": 0.36811023622047245, "obj2": 0.4449882141722993}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_Mem_Server - Const ) * Min( MRS ,ARS ) ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) + MRS ) / Min( RRS ,Const ) ) - ( FirstVNF_CPU_Server * MRS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,( MUC - ( RMSe * MUC ) ) ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( CS / ( CS * MUM ) ) ,Max( ( MUM / RRSe ),RCSe ) ) - Max( ( MLU * DS ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.3075876121211308}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "Max( ( Min( Min( ( ( Const - ( Max( FirstVNF_Mem,ACS ) - Min( CRS ,FirstVNF_Mem ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ) ,( ( BR / ( CRS * AMS ) ) * AMS ) ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( MUM / RRSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + BR ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,MUR ) / ( Max( ( ( ( DS / Max( ( DS / DS ),Min( CS ,MUC ) ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.610236220472441, "obj2": 0.2269548979800411}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "Min( ( Min( ( Min( ( ( PN - Min( ARS ,MDR ) ) * PN ) ,FirstVNF_Mem ) / Min( MRS ,ACS ) ) ,ACS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( DS * Min( ( RMSe + ( Min( CS ,MUM ) / Max( MUR,Min( RCSe ,MUC ) ) ) ) ,( MUC / ( ( ( MUM - CS ) * DS ) * RMSe ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.04379068716579754}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + MDR ) ) / ( Min( Min( ACS ,ARS ) ,( Const / RRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( CS ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.1775029823856164}, {"determining": "Min( ( ( ( Min( ( ARS + Min( FirstVNF_Mem ,MDR ) ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * RRSe ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.035981264748015884}, {"determining": "( Max( ( ( PN / FirstVNF_RAM_Server ) + Min( ( DDR + ( Min( ACS ,( BR / Const ) ) * Min( Max( AMS,ARS ) ,MDR ) ) ) ,FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,( MRS + ARS ) ) - FirstVNF_RAM ) ) * ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RCSe ,MUR ) / ( Max( MUR,MUC ) / MUR ) ) / ( CS * RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8576522560637384}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + FirstVNF_RAM ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( Min( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) ,RMSe ),CS ) ,MUC ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( ( ( ( MUM / MUM ) + CS ) * ( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.6456692913385826, "obj2": 0.19417781497032993}, {"determining": "( ( ( Min( ( CRS / Min( ACS ,CRS ) ) ,CRS ) + ( ( Min( AMS ,CRS ) + BR ) - FirstVNF_Mem_Server ) ) * ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,MUM ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( DS * MUC ) - ( ( ( MUM + ( Min( RMSe ,RRSe ) + MUM ) ) + RCSe ) / RMSe ) ) ) - ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) / CS ) ) ) / Max( DS,MUC ) ) )", "obj1": 0.3484251968503937, "obj2": 0.4788257295904661}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / Min( Min( PN ,ARS ) ,ACS ) ) - Max( ARS,( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem ,DDR ) + Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUM * ( MLU + MLU ) ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - Max( ( CS * CS ),RMSe ) ) ,( DS / DS ) ) + ( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( CS,MLU ) * MLU ) ) ) / ( DS * DS ) ) / MUR ) ) )", "obj1": 0.7263779527559056, "obj2": 0.13994405232928778}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,Min( ( BR - BR ) ,( ACS * FirstVNF_RAM_Server ) ) ) ) + BR ) ) / ( ACS - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( DS + ( Max( RRSe,MUR ) * CS ) ) ) / Max( Max( Min( ( MUM * ( ( MUC - RRSe ) / MLU ) ) ,RMSe ),MLU ),( DS + ( MUM * MUR ) ) ) )", "obj1": 0.8464566929133859, "obj2": 0.057946768057930455}, {"determining": "( ( PN * ACS ) - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Min( Min( PN ,MDR ) ,( MRS * Const ) ) ) )", "choosing": "( ( ( ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Max( DS,RMSe ) ) + ( ( Min( ( MUC * DS ) ,( ( MUR + MLU ) / ( RCSe + DS ) ) ) * MLU ) - CS ) ) / MUM ) / ( ( ( ( ( DS / Max( ( RCSe + RMSe ),RCSe ) ) + MUC ) + CS ) * ( RCSe / MUM ) ) / MLU ) )", "obj1": 0.7007874015748031, "obj2": 0.1546229908857381}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( PN / Min( ( PN + CRS ) ,MRS ) ) ,( RRS - Max( ARS,ACS ) ) ) / ( MRS * Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR - ( MUR + CS ) ) + Min( MLU ,Max( ( ( RRSe * MUC ) - Min( Min( ( DS - MUM ) ,CS ) ,RMSe ) ),MUM ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5513220624511641}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( CS,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.07472396174933396}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MUR / CS ),( ( RMSe / RRSe ) + ( ( ( DS + MLU ) + ( DS + RMSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5098425196850394, "obj2": 0.28489132991275135}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "Min( FirstVNF_Mem ,( Min( Min( ( FirstVNF_RAM / ARS ) ,Min( ( Max( FirstVNF_RAM,BR ) * Max( FirstVNF_RAM,( ARS + BR ) ) ) ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04881779249084595}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "( ( ACS * PN ) - ( Min( Min( ( AMS / ( FirstVNF_CPU + CRS ) ) ,FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / CS ) / ( Max( ( ( ( ( ( RCSe - DS ) + MUC ) / Max( ( RCSe / MUM ),RCSe ) ) + ( RMSe + ( DS / RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20166459055471547}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( FirstVNF_CPU_Server ,( ( Const - ( MDR + FirstVNF_CPU_Server ) ) * MDR ) ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.25196850393700787, "obj2": 0.5800106216744582}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,( ( DDR - MRS ) * Min( MDR ,ARS ) ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) + FirstVNF_CPU_Server ) ) / ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Max( CRS,Const ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - AMS ) ),( ACS + ( Min( MRS ,( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ACS * AMS ) ) ) ) - PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,CS ) - ( RCSe - ( ( ( Max( ( RMSe + ( DS + RMSe ) ),MUC ) + MUC ) * MUC ) - RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6216233104497181}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6459353665454972}, {"determining": "Min( ( ( ( Min( ( ARS + Max( ( PN * RRS ),MDR ) ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( Max( ( Max( ( ( DS + CS ) - ( DS + RMSe ) ),Max( ( MLU / DS ),RCSe ) ) + CS ),Max( MUC,DS ) ) * ( ( ( MLU / MUM ) * Min( ( RMSe + CS ) ,DS ) ) - ( CS + MLU ) ) )", "obj1": 0.937007874015748, "obj2": 0.028570409722105148}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_Mem,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),( Max( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ),Min( RRS ,RRS ) ) / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) / Max( ( Min( ( Max( ( CS + DS ),Min( MLU ,Max( MUR,RCSe ) ) ) + DS ) ,MUR ) / CS ),Max( ( MLU / MUM ),RCSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6619577895696983}, {"determining": "Min( ( ( Max( ACS,Max( AMS,FirstVNF_RAM ) ) * ( Const / FirstVNF_RAM ) ) - FirstVNF_RAM_Server ) ,PN )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUR / MUC ) ,( Min( RCSe ,MLU ) / ( Min( RRSe ,CS ) / Max( RMSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( MUM / Max( MLU,( MUR - ( MLU - Min( RRSe ,DS ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9940944881889764, "obj2": 0.007297398801730705}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5336332250114763}, {"determining": "( ( ( RRS - ( RRS * ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + PN ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) / Min( ACS ,ACS ) ) * MDR ) + ( ( ( FirstVNF_Mem - FirstVNF_RAM ) / ( Max( BR,FirstVNF_Mem_Server ) + ARS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + CS ) + MLU ),MUC ) ) / ( ( MUR / CS ) + ( RCSe - MUM ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3490683756670861}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08509173898946452}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,( ( Const + BR ) - Min( PN ,AMS ) ) ) ) - ( Min( Min( ( PN + FirstVNF_CPU_Server ) ,MDR ) ,ACS ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( RRSe * DS ) ,MUC ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( ( ( RCSe / MUC ) / MUR ),CS ) ) / Max( Max( RRSe,MUM ),DS ) ) ,MUM ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14711131318468326}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( RRS - ( Max( FirstVNF_Mem_Server,BR ) / PN ) ) ,MDR ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),Max( MUC,DS ) ) / ( ( RCSe * DS ) - Max( MLU,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6686399201743638}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( ( FirstVNF_RAM - Min( ( RRS - ( Max( PN,DDR ) / PN ) ) ,( ACS * PN ) ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) - ( DS * DS ) ) / Max( ( RCSe / Max( DS,( MUM * Min( RMSe ,RRSe ) ) ) ),Min( Max( Min( ( Max( Min( RRSe ,MUR ),( MUM - DS ) ) * MUR ) ,RMSe ),CS ) ,MUC ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8480371235354126}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "( ( FirstVNF_RAM + ( MDR - ( CRS / FirstVNF_Mem ) ) ) / ( ( MRS + Min( AMS ,( ( ( BR / AMS ) - Min( Const ,( CRS + Const ) ) ) + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) - ( ( Max( MUC,MUR ) + DS ) / Max( ( MUM - DS ),Min( Min( Min( ( ( CS / DS ) + ( CS - RCSe ) ) ,MUC ) ,MLU ) ,MUM ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6292167504222614}, {"determining": "( Max( Min( ( ( Const - Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ) ) / Min( RRS ,Const ) ) ,MRS ),ACS ) - ( ( DDR / ACS ) * AMS ) )", "choosing": "( ( ( MLU / Min( ( Min( MLU ,RRSe ) + MUC ) ,Min( ( Min( CS ,( MUC / MUR ) ) + MUR ) ,RMSe ) ) ) / Min( ( CS / MUM ) ,( MUM / ( ( MLU / ( DS / RRSe ) ) / ( ( CS / MUM ) / MUR ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.697591401632469}, {"determining": "( Max( ( RRS - Max( BR,FirstVNF_CPU ) ),ACS ) - Min( ( AMS + FirstVNF_CPU ) ,( MRS / Max( CRS,MDR ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( ( ( DS - RCSe ) * RMSe ) * Max( MUC,DS ) ) ) ) ) ) / ( ( ( MUR / MUM ) * Min( CS ,MLU ) ) - RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5737611606054623}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( Min( CS ,MUC ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6200787401574803, "obj2": 0.2141726404259328}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),RCSe ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.6220472440944882, "obj2": 0.21240383330136284}, {"determining": "( ( MRS - Max( ( ( Max( FirstVNF_Mem,( Const / FirstVNF_RAM ) ) / Max( ACS,( MRS - ( BR * FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( Const - Min( ( FirstVNF_CPU_Server / AMS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( Min( ( ( DS - RCSe ) - Min( Min( RCSe ,MUM ) ,CS ) ) ,( DS * DS ) ) + ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) ) ) / ( ( MUM - MUM ) + CS ) ) + Min( ( Min( RRSe ,( Min( Max( ( MUM / RRSe ),MUC ) ,Min( RRSe ,MUR ) ) / ( MUM + ( RCSe - CS ) ) ) ) - MLU ) ,( DS * Min( ( DS - RRSe ) ,RRSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6052547297447539}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.265748031496063, "obj2": 0.5554160268872083}, {"determining": "( Min( Max( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / ( PN * FirstVNF_Mem ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( ( ( FirstVNF_RAM / ACS ) + MDR ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( Min( RRSe ,( DS * RCSe ) ) - MUM ) / ( ( CS / MUM ) * DS ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7670745550192624}, {"determining": "( ( ACS + PN ) - ( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ( ( Max( ARS,FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - MRS ) ,MDR ) ) * ( ( AMS * Min( MDR ,Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) / Min( ( Min( PN ,Max( MRS,MRS ) ) + DDR ) ,Min( MDR ,( MRS - Max( Min( CRS ,FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RCSe - Min( CS ,( MLU - RRSe ) ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + ( ( RMSe - ( MUM + CS ) ) + MUR ) ) ) / ( DS * MLU ) ) - Max( Min( ( MUC + Max( DS,( RMSe * ( RCSe / RMSe ) ) ) ) ,MUM ),Min( ( RCSe / ( MUR + CS ) ) ,( CS + ( MUM / MUM ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17428086956827413}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,ACS ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * RCSe ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),Min( CS ,MUC ) ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.7401574803149606, "obj2": 0.13191256925737063}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server + Min( ( ( MDR + MRS ) * ARS ) ,MRS ) ) )", "choosing": "( ( Max( DS,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,RMSe ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) - ( ( ( CS * DS ) - RRSe ) * DS ) ) * ( ( Min( MLU ,MUC ) - ( ( RCSe / RCSe ) + MUC ) ) + MUR ) )", "obj1": 0.5236220472440944, "obj2": 0.2768886735995327}, {"determining": "Min( ( ( ( Min( ( FirstVNF_RAM * ( FirstVNF_CPU / ACS ) ) ,( Const - DDR ) ) / Min( ( PN / Min( ( FirstVNF_CPU_Server * CRS ) ,MRS ) ) ,ACS ) ) / AMS ) - CRS ) ,ACS )", "choosing": "( ( Max( ( MUR / ( MUR + CS ) ),( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUM,MLU ) ),Max( RCSe,RRSe ) ) ) ) / ( ( Min( ( MUC * MLU ) ,CS ) / RMSe ) - ( DS * MUC ) ) ) - MUR )", "obj1": 0.9271653543307087, "obj2": 0.03349595952040597}, {"determining": "( ( ACS / CRS ) - FirstVNF_CPU )", "choosing": "( Min( DS ,Max( RRSe,( RRSe + CS ) ) ) - Min( MUM ,CS ) )", "obj1": 0.2047244094488189, "obj2": 0.6364134607309241}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( Const ,FirstVNF_Mem ) + DDR ) + BR ) ) + BR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - Max( RRSe,( ( RRSe / MUM ) + CS ) ) ) - Min( MUM ,CS ) )", "obj1": 0.5393700787401575, "obj2": 0.27085038786023374}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( RRS * FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM_Server / ( ARS * RRS ) ) ) )", "choosing": "Min( ( ( RCSe * MUR ) * MUM ) ,( Min( ( RRSe - RRSe ) ,( Min( DS ,MUC ) * RMSe ) ) + Max( MLU,Min( ( ( RCSe - Min( RCSe ,CS ) ) - MUM ) ,MUC ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5654544921583355}, {"determining": "( Min( Max( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( ( ( BR / PN ) * ( ACS * AMS ) ) / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( ( RMSe * MUR ) / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - ( ( CS * RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7485846932745895}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8326861237133328}, {"determining": "Min( ( ( ( Min( ( ( PN - ( FirstVNF_CPU * DDR ) ) * PN ) ,( Const - DDR ) ) / Min( ( PN / Min( ( FirstVNF_CPU_Server * CRS ) ,MRS ) ) ,ACS ) ) / AMS ) - CRS ) ,ACS )", "choosing": "( ( Max( ( MUR / ( MUR + CS ) ),( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) - Min( CS ,MUR ) )", "obj1": 0.9665354330708661, "obj2": 0.012059845727104284}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM ) * ( FirstVNF_Mem_Server * CRS ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MLU - Min( Min( MUC ,MLU ) ,( DS + MUR ) ) ),( Max( ( ( MLU + DS ) - ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RMSe / RRSe ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.2854330708661417, "obj2": 0.5416514995931986}, {"determining": "( ( ( Const / BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - ( ( FirstVNF_Mem - ( BR - FirstVNF_Mem_Server ) ) - ACS ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) + ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( MUM * MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8343411891239033}, {"determining": "Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * Min( Min( RRSe ,RMSe ) ,Min( Max( RCSe,MLU ) ,MUM ) ) ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( RCSe ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - Max( ( MUM / MUM ),RCSe ) ) + ( ( RCSe / ( MLU + ( MUM / ( Max( RCSe,MUR ) - ( CS - RMSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( RMSe / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.053272051929340834}, {"determining": "( ( ACS * PN ) - ( Min( ( RRS / ARS ) ,Min( PN ,MDR ) ) / ( FirstVNF_CPU_Server * MRS ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - CS ) ,( DS / DS ) ) + Min( ( ( ( ( RRSe * RMSe ) + Min( DS ,RRSe ) ) - Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( DS * DS ) ) ,MUR ) ) )", "obj1": 0.7106299212598425, "obj2": 0.1527327792663811}, {"determining": "( Max( MRS,( Min( ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( Min( ARS ,MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / Max( Max( ( RCSe / RMSe ),MUR ),( Max( MUC,Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.24015748031496062, "obj2": 0.6040325996247796}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem_Server ,PN ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUR,( MUR * CS ) ) + ( ( ( DS + ( ( CS - CS ) - ( ( MUR / Min( RCSe ,RCSe ) ) / DS ) ) ) / MLU ) / DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6490152250701298}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * MRS ) ) * ( Min( ( MRS * MDR ) ,FirstVNF_CPU_Server ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( Max( Max( ( MUM / MUM ),RCSe ),( CS + ( MUR * MUM ) ) ) * Max( RRSe,Min( Max( RRSe,RCSe ) ,( ( CS + CS ) + ( DS + RMSe ) ) ) ) ) ) ) / ( Max( MUM,RCSe ) - ( DS + ( MUR * MUM ) ) ) )", "obj1": 0.45866141732283466, "obj2": 0.34065098950312017}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "( ( Max( ACS,ACS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( Max( RMSe,MUC ) / RMSe ) ) * ( ( RCSe * DS ) - Max( MLU,( ( DS / RRSe ) - ( MUM / ( Min( Min( RRSe ,MLU ) ,RCSe ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.26332728868205924}, {"determining": "( Min( ( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ) - ( ACS + ( ( ( ( BR / PN ) * ( ACS * AMS ) ) / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( ( ARS / BR ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / Min( MUC ,DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( ( Min( MLU ,MLU ) - MUM ) / ( MLU * ( MUM * RCSe ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.12992125984251968, "obj2": 0.7413554288970575}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( AMS ,( Min( PN ,ACS ) / Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - Const ) ) + RRS ) ,( ( Const - MDR ) * PN ) ) ) ) ) ,Max( ( ( CRS - ( PN - MDR ) ) - RRS ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUR ,MUC ) / RRSe ) / ( ( RCSe * DS ) - Max( ( ( Max( ( MUC + MLU ),MUM ) / RRSe ) * CS ),( Max( MUM,MUR ) + Max( ( DS * RRSe ),MUM ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.17268599059721892}, {"determining": "( Min( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - ( ( CS * RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7608849966456777}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "( ( PN * FirstVNF_Mem ) - ( Min( Min( ( Max( PN,DDR ) / PN ) ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - FirstVNF_RAM ) ) ) + BR ) ) / ( ACS - ( ACS * ( PN / MDR ) ) ) ) )", "choosing": "( ( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) - ( DS + Max( CS,Max( RRSe,Min( Max( ( RMSe + RRSe ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( Min( RMSe ,( MUM * MUM ) ),MLU ),Max( ( ( MUC - ( ( MUR / ( RCSe * RCSe ) ) + MUC ) ) / ( CS * RRSe ) ),( ( RRSe + ( CS * RMSe ) ) + MUC ) ) ) )", "obj1": 0.75, "obj2": 0.10457632102389727}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) - ( ( ACS * CRS ) * Max( Min( PN ,AMS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( MUC + ( ( DS * MUC ) + ( ( RMSe - ( MUC / DS ) ) * Min( DS ,Min( DS ,RRSe ) ) ) ) ) ) - ( ( ( ( RCSe - ( MUM * RRSe ) ) / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUC,MUM ) ),Max( RCSe,( MLU / ( CS / MLU ) ) ) ) ) ) / ( ( ( Max( MUM,Min( Max( MLU,RCSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * ( ( MUR * Min( RRSe ,DS ) ) / ( ( Min( RCSe ,MLU ) - ( MLU - RCSe ) ) - CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4330477702396556}, {"determining": "( Min( Max( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - ( ( CS * RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7539639454563936}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "Min( ( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( Max( ( RCSe + RMSe ),RCSe ) - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6417322834645669, "obj2": 0.2007271349179185}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Min( ( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ) * MDR ) ,FirstVNF_CPU_Server ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( Max( Max( ( MUM / MUM ),RCSe ),( CS + ( MUR * MUM ) ) ) * Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.33518329322319557}], "38": [{"determining": "Min( ( ( ( AMS * ( FirstVNF_CPU + FirstVNF_CPU ) ) * RRS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( Min( RCSe ,MUR ) + ( Max( ( CS / ( MUR * MUM ) ),Max( ( MUM + MUM ),RCSe ) ) * Max( RRSe,Min( Max( RRSe,RCSe ) ,( ( DS + CS ) + ( DS + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( Min( ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - ( RRS - Max( ARS,ACS ) ) ) ,FirstVNF_RAM ) - ACS ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( ( DS + RMSe ) - ( ( RRSe * CS ) + RCSe ) ) ) / ( MLU / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) - ( ( ACS * CRS ) * Max( Min( PN ,AMS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( MUC + ( ( DS * MUC ) + ( ( RMSe - ( MUC / DS ) ) * Min( DS ,Min( DS ,RRSe ) ) ) ) ) ) - ( ( ( ( RCSe - ( MUM * RRSe ) ) / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUC,MUM ) ),Max( RCSe,( MLU / ( CS / MLU ) ) ) ) ) ) / ( ( ( Max( MUM,Min( Max( MLU,RCSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * ( ( MUR * Min( RRSe ,DS ) ) / ( ( Min( RCSe ,MLU ) - ( MLU - RCSe ) ) - CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4330477702396556}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4980359232453927}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "( ( MDR * Const ) - ( Min( Min( PN ,Min( ( FirstVNF_CPU * DDR ) ,ARS ) ) ,( ( ( Const / PN ) * ( Min( RRS ,FirstVNF_RAM_Server ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),( ( ( RRSe / ( ( RCSe * DS ) - RMSe ) ) + MLU ) - DS ) ) / MUM ) / Min( ( MUR - DS ) ,Max( MLU,MLU ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2432047831277824}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "( Max( ( ( FirstVNF_RAM * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) - Max( RRS,( PN - ( FirstVNF_CPU * DDR ) ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RCSe - RRSe ) + ( ( ( CS * RRSe ) * Min( RCSe ,RCSe ) ) + MUR ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( MUC * Min( Min( RRSe ,RMSe ) ,MUC ) ) ,( RCSe + RMSe ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4686129519384606}, {"determining": "( ( FirstVNF_RAM - ( Max( FirstVNF_CPU,ARS ) * RRS ) ) * ( Min( ( MDR * MDR ) ,( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * PN ) ,( ( Max( FirstVNF_RAM,BR ) - ( ACS - AMS ) ) + RRS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( Max( ( CS / ( MUR * MUM ) ),Max( ( MUM / MUM ),RCSe ) ) * Max( RRSe,Min( Max( RRSe,RCSe ) ,( ( DS + CS ) + ( DS + RCSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.4915651678590498}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_Mem_Server - Const ) * Min( MRS ,ARS ) ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) + MRS ) / Min( RRS ,Const ) ) - ( FirstVNF_CPU_Server * MRS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,( MUC - ( RMSe * MUC ) ) ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( CS / ( CS * MUM ) ) ,Max( ( MUM / RRSe ),RCSe ) ) - Max( ( MLU * DS ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.3075876121211308}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Min( ( ( DDR / MDR ) - CRS ) ,FirstVNF_CPU_Server ) ) * ( ( ( Max( ( ARS - BR ),FirstVNF_RAM_Server ) * CRS ) * ( Min( ( MDR / ARS ) ,( RRS - Max( ACS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( Max( MUC,MUR ) - MUR ) ) ) ) ) / Max( ( DS + ( MUM * MUR ) ),Max( Min( ( MUM * MUM ) ,RMSe ),MLU ) ) )", "obj1": 0.43503937007874016, "obj2": 0.36591978659432717}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08509173898946452}, {"determining": "Max( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * ( DS + ( MUC + MUC ) ) ) ) ) / ( RMSe - Max( ( ( MUM / ( MUR - DS ) ) - RRSe ),( RMSe / ( RMSe + ( Min( RMSe ,MUM ) / CS ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39362163132959965}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.41732283464566927, "obj2": 0.38031670951664026}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( Max( Min( ( ( Const - Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ) ) / Min( RRS ,Const ) ) ,MRS ),ACS ) - ( ( DDR / ACS ) * AMS ) )", "choosing": "( ( ( MLU / Min( ( Min( MLU ,RRSe ) + MUC ) ,Min( ( Min( CS ,( MUC / MUR ) ) + MUR ) ,RMSe ) ) ) / Min( ( CS / MUM ) ,( MUM / ( ( MLU / ( DS / RRSe ) ) / ( ( CS / MUM ) / MUR ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.697591401632469}, {"determining": "( ( ACS * PN ) - ( ( Min( PN ,MDR ) * ( ( Max( FirstVNF_Mem,( ( ARS + CRS ) * MDR ) ) * ( Min( FirstVNF_RAM_Server ,( MDR / CRS ) ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + DS ),Min( ( MLU + ( MUC / ( Min( DS ,RCSe ) - RMSe ) ) ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( Max( MUM,CS ),RCSe ) ) + ( RMSe + ( DS * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6082677165354331, "obj2": 0.22170252467619994}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "( Max( ( Max( AMS,( FirstVNF_RAM / Min( ( RRS - Const ) ,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ARS ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( ( Max( MUM,DS ) + DS ) + DS ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + Max( ( RCSe - ( RCSe - RMSe ) ),Min( CS ,MLU ) ) ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUC + Min( Max( RCSe,MLU ) ,MUM ) ) - RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.4456291768469064}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "Min( ( Min( ( Min( ( Max( ( ARS + BR ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) * ( ACS - MDR ) ) ,Max( MRS,( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( CS,RRSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( Min( MLU ,( MUR - MUC ) ) ,RCSe ) ) )", "obj1": 0.7874015748031497, "obj2": 0.079510381137382}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "Min( FirstVNF_Mem ,( Min( Min( ( FirstVNF_RAM / ARS ) ,Min( ( Max( FirstVNF_RAM,BR ) * Max( FirstVNF_RAM,( ARS + BR ) ) ) ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04881779249084595}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "( ( ( ( FirstVNF_CPU * ( AMS + ( RRS / FirstVNF_RAM ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - ( RRS + FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + BR ) ) ) * ( Min( ( PN * MDR ) ,( FirstVNF_Mem + MDR ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Max( MUM,RCSe ),( MLU + ( MUR * Max( ( CS + Min( RCSe ,( MUC * RCSe ) ) ),MLU ) ) ) ) / ( MUC + CS ) )", "obj1": 0.47244094488188976, "obj2": 0.32890572668396667}, {"determining": "Min( ( ( ( Min( ( ARS + Min( FirstVNF_Mem ,MDR ) ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * RRSe ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.035981264748015884}, {"determining": "( Max( ( ( PN / FirstVNF_RAM_Server ) + Min( ( DDR + ( Min( ACS ,( BR / Const ) ) * Min( Max( AMS,ARS ) ,MDR ) ) ) ,FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,( MRS + ARS ) ) - FirstVNF_RAM ) ) * ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RCSe ,MUR ) / ( Max( MUR,MUC ) / MUR ) ) / ( CS * RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8576522560637384}, {"determining": "( ( ( Min( ( CRS / Min( ACS ,CRS ) ) ,CRS ) + ( ( Min( AMS ,CRS ) + BR ) - FirstVNF_Mem_Server ) ) * ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,MUM ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( DS * MUC ) - ( ( ( MUM + ( Min( RMSe ,RRSe ) + MUM ) ) + RCSe ) / RMSe ) ) ) - ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) / CS ) ) ) / Max( DS,MUC ) ) )", "obj1": 0.3484251968503937, "obj2": 0.4788257295904661}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / Min( Min( PN ,ARS ) ,ACS ) ) - Max( ARS,( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem ,DDR ) + Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUM * ( MLU + MLU ) ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - Max( ( CS * CS ),RMSe ) ) ,( DS / DS ) ) + ( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( CS,MLU ) * MLU ) ) ) / ( DS * DS ) ) / MUR ) ) )", "obj1": 0.7263779527559056, "obj2": 0.13994405232928778}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,Min( ( BR - BR ) ,( ACS * FirstVNF_RAM_Server ) ) ) ) + BR ) ) / ( ACS - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( DS + ( Max( RRSe,MUR ) * CS ) ) ) / Max( Max( Min( ( MUM * ( ( MUC - RRSe ) / MLU ) ) ,RMSe ),MLU ),( DS + ( MUM * MUR ) ) ) )", "obj1": 0.8464566929133859, "obj2": 0.057946768057930455}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "( ( Max( ACS,ACS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( Max( RMSe,MUC ) / RMSe ) ) * ( ( RCSe * DS ) - Max( MLU,( ( DS / RRSe ) - ( MUM / ( Min( Min( RRSe ,MLU ) ,RCSe ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.26332728868205924}, {"determining": "( ( PN * ACS ) - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Min( Min( PN ,MDR ) ,( MRS * Const ) ) ) )", "choosing": "( ( ( ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Max( DS,RMSe ) ) + ( ( Min( ( MUC * DS ) ,( ( MUR + MLU ) / ( RCSe + DS ) ) ) * MLU ) - CS ) ) / MUM ) / ( ( ( ( ( DS / Max( ( RCSe + RMSe ),RCSe ) ) + MUC ) + CS ) * ( RCSe / MUM ) ) / MLU ) )", "obj1": 0.7007874015748031, "obj2": 0.1546229908857381}, {"determining": "( ( PN * FirstVNF_Mem ) - ( Min( Min( ( Max( PN,DDR ) / PN ) ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - FirstVNF_RAM ) ) ) + BR ) ) / ( ACS - ( ACS * ( PN / MDR ) ) ) ) )", "choosing": "( ( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) - ( DS + Max( CS,Max( RRSe,Min( Max( ( RMSe + RRSe ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( Min( RMSe ,( MUM * MUM ) ),MLU ),Max( ( ( MUC - ( ( MUR / ( RCSe * RCSe ) ) + MUC ) ) / ( CS * RRSe ) ),( ( RRSe + ( CS * RMSe ) ) + MUC ) ) ) )", "obj1": 0.75, "obj2": 0.10457632102389727}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( FirstVNF_CPU_Server ,( ( Const - ( MDR + FirstVNF_CPU_Server ) ) * MDR ) ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.25196850393700787, "obj2": 0.5800106216744582}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,( ( DDR - MRS ) * Min( MDR ,ARS ) ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) + FirstVNF_CPU_Server ) ) / ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Max( CRS,Const ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - AMS ) ),( ACS + ( Min( MRS ,( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ACS * AMS ) ) ) ) - PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,CS ) - ( RCSe - ( ( ( Max( ( RMSe + ( DS + RMSe ) ),MUC ) + MUC ) * MUC ) - RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6216233104497181}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6459353665454972}, {"determining": "( ( ( PN * MDR ) / ( FirstVNF_RAM - ( AMS * ( PN - FirstVNF_Mem_Server ) ) ) ) - ( Min( Min( PN ,RRS ) ,( ( ACS + FirstVNF_RAM ) + MDR ) ) / ( ACS - MDR ) ) )", "choosing": "( ( DS - ( DS * ( MUC * MUC ) ) ) - ( CS + MUM ) )", "obj1": 0.8346456692913385, "obj2": 0.062408434151376924}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_Mem,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),( Max( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ),Min( RRS ,RRS ) ) / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) / Max( ( Min( ( Max( ( CS + DS ),Min( MLU ,Max( MUR,RCSe ) ) ) + DS ) ,MUR ) / CS ),Max( ( MLU / MUM ),RCSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6619577895696983}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,( ( Const + BR ) - Min( PN ,AMS ) ) ) ) - ( Min( Min( ( PN + FirstVNF_CPU_Server ) ,MDR ) ,ACS ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( RRSe * DS ) ,MUC ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( ( ( RCSe / MUC ) / MUR ),CS ) ) / Max( Max( RRSe,MUM ),DS ) ) ,MUM ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14711131318468326}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + FirstVNF_RAM ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( Min( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) ,RMSe ),CS ) ,MUC ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( ( ( ( MUM / MUM ) + CS ) * ( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.6456692913385826, "obj2": 0.19417781497032993}, {"determining": "Min( ( ( ( Min( ( ARS + Max( ( PN * RRS ),MDR ) ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( Max( ( Max( ( ( DS + CS ) - ( DS + RMSe ) ),Max( ( MLU / DS ),RCSe ) ) + CS ),Max( MUC,DS ) ) * ( ( ( MLU / MUM ) * Min( ( RMSe + CS ) ,DS ) ) - ( CS + MLU ) ) )", "obj1": 0.937007874015748, "obj2": 0.028570409722105148}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( Min( FirstVNF_RAM ,Min( ( RRS - ( Max( FirstVNF_Mem_Server,BR ) / PN ) ) ,MDR ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),Max( MUC,DS ) ) / ( ( RCSe * DS ) - Max( MLU,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6686399201743638}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( ( FirstVNF_RAM - Min( ( RRS - ( Max( PN,DDR ) / PN ) ) ,( ACS * PN ) ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) - ( DS * DS ) ) / Max( ( RCSe / Max( DS,( MUM * Min( RMSe ,RRSe ) ) ) ),Min( Max( Min( ( Max( Min( RRSe ,MUR ),( MUM - DS ) ) * MUR ) ,RMSe ),CS ) ,MUC ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8480371235354126}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM ) * ( FirstVNF_Mem_Server * CRS ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MLU - Min( Min( MUC ,MLU ) ,( DS + MUR ) ) ),( Max( ( ( MLU + DS ) - ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) + ( RMSe / RRSe ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.2854330708661417, "obj2": 0.5416514995931986}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + FirstVNF_CPU ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( ( FirstVNF_RAM_Server * ARS ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( ( ( ( MUR / MUM ) * Min( CS ,MLU ) ) - Min( Max( ( Min( MUR ,MUR ) / ( RRSe / CS ) ),Max( ( MUC / RRSe ),( MUR * MUM ) ) ) ,MLU ) ) / Min( Max( Max( Max( CS,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8070866141732284, "obj2": 0.07288776910961317}, {"determining": "( ( FirstVNF_RAM + ( MDR - ( CRS / FirstVNF_Mem ) ) ) / ( ( MRS + Min( AMS ,( ( ( BR / AMS ) - Min( Const ,( CRS + Const ) ) ) + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) - ( ( Max( MUC,MUR ) + DS ) / Max( ( MUM - DS ),Min( Min( Min( ( ( CS / DS ) + ( CS - RCSe ) ) ,MUC ) ,MLU ) ,MUM ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6292167504222614}, {"determining": "( Max( ( RRS - Max( BR,FirstVNF_CPU ) ),ACS ) - Min( ( AMS + FirstVNF_CPU ) ,( MRS / Max( CRS,MDR ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( ( ( DS - RCSe ) * RMSe ) * Max( MUC,DS ) ) ) ) ) ) / ( ( ( MUR / MUM ) * Min( CS ,MLU ) ) - RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5737611606054623}, {"determining": "( ( MRS - Max( ( ( Max( FirstVNF_Mem,( Const / FirstVNF_RAM ) ) / Max( ACS,( MRS - ( BR * FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( Const - Min( ( FirstVNF_CPU_Server / AMS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR + ( Min( ( ( DS - RCSe ) - Min( Min( RCSe ,MUM ) ,CS ) ) ,( DS * DS ) ) + ( ( ( DS / DS ) + RCSe ) / Min( MUM ,CS ) ) ) ) / ( ( MUM - MUM ) + CS ) ) + Min( ( Min( RRSe ,( Min( Max( ( MUM / RRSe ),MUC ) ,Min( RRSe ,MUR ) ) / ( MUM + ( RCSe - CS ) ) ) ) - MLU ) ,( DS * Min( ( DS - RRSe ) ,RRSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6052547297447539}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MUR / CS ),( ( RMSe / RRSe ) + ( ( ( DS + MLU ) + ( DS + RMSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5098425196850394, "obj2": 0.28489132991275135}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( CS,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.07472396174933396}, {"determining": "Max( ( Min( ACS ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( ACS / AMS ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server / AMS ) * ( ( CRS * ( Const + MDR ) ) / BR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MLU - RCSe ) - RCSe ) - RMSe ) - ( DS + ( RRSe * Max( RRSe,Max( ( MUR + MUC ),( MUM / MLU ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( ( MUR * DS ) + DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( Min( Max( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / ( PN * FirstVNF_Mem ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( ( ( FirstVNF_RAM / ACS ) + MDR ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( Min( RRSe ,( DS * RCSe ) ) - MUM ) / ( ( CS / MUM ) * DS ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7670745550192624}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5336332250114763}, {"determining": "( ( ACS + PN ) - ( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ( ( Max( ARS,FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - MRS ) ,MDR ) ) * ( ( AMS * Min( MDR ,Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) / Min( ( Min( PN ,Max( MRS,MRS ) ) + DDR ) ,Min( MDR ,( MRS - Max( Min( CRS ,FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RCSe - Min( CS ,( MLU - RRSe ) ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + ( ( RMSe - ( MUM + CS ) ) + MUR ) ) ) / ( DS * MLU ) ) - Max( Min( ( MUC + Max( DS,( RMSe * ( RCSe / RMSe ) ) ) ) ,MUM ),Min( ( RCSe / ( MUR + CS ) ) ,( CS + ( MUM / MUM ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17428086956827413}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,ACS ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * RCSe ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),Min( CS ,MUC ) ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.7401574803149606, "obj2": 0.13191256925737063}, {"determining": "( Max( Const,BR ) / ( FirstVNF_CPU_Server - AMS ) )", "choosing": "Min( MUC ,( Min( DS ,RRSe ) - ( ( MUR * MUM ) * ( Max( ( CS * ( ( DS + RMSe ) / RMSe ) ),MUC ) + ( DS / ( ( CS * Min( RRSe ,RMSe ) ) + ( DS * ( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5298297329471645}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server + Min( ( ( MDR + MRS ) * ARS ) ,MRS ) ) )", "choosing": "( ( Max( DS,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,RMSe ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) - ( ( ( CS * DS ) - RRSe ) * DS ) ) * ( ( Min( MLU ,MUC ) - ( ( RCSe / RCSe ) + MUC ) ) + MUR ) )", "obj1": 0.5236220472440944, "obj2": 0.2768886735995327}, {"determining": "( ( ACS / CRS ) - FirstVNF_CPU )", "choosing": "( Min( DS ,Max( RRSe,( RRSe + CS ) ) ) - Min( MUM ,CS ) )", "obj1": 0.2047244094488189, "obj2": 0.6364134607309241}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( Min( ( Max( ( CS + RMSe ),MLU ) + Min( Max( MLU,MLU ) ,MUR ) ) ,CS ) ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.1792170201757545}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( RRS * FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM_Server / ( ARS * RRS ) ) ) )", "choosing": "Min( ( ( RCSe * MUR ) * MUM ) ,( Min( ( RRSe - RRSe ) ,( Min( DS ,MUC ) * RMSe ) ) + Max( MLU,Min( ( ( RCSe - Min( RCSe ,CS ) ) - MUM ) ,MUC ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5654544921583355}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( Max( MRS,( FirstVNF_Mem_Server + ACS ) ) + ( PN / DDR ) ) + MRS ) ) - BR ),( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) - ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe + RRSe ) - Min( CS ,RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7459895419029233}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8326861237133328}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.265748031496063, "obj2": 0.5554160268872083}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5078740157480315, "obj2": 0.28736026301284573}, {"determining": "( ( ( Const / BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - ( ( FirstVNF_Mem - ( BR - FirstVNF_Mem_Server ) ) - ACS ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) + ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( MUM * MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8343411891239033}, {"determining": "( ( ACS * PN ) - ( Min( ( RRS / ARS ) ,Min( PN ,MDR ) ) / ( FirstVNF_CPU_Server * MRS ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - CS ) ,( DS / DS ) ) + Min( ( ( ( ( RRSe * RMSe ) + Min( DS ,RRSe ) ) - Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( DS * DS ) ) ,MUR ) ) )", "obj1": 0.7106299212598425, "obj2": 0.1527327792663811}, {"determining": "( Max( MRS,( Min( ( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( Min( ARS ,MDR ) * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) * ACS ) ) * ( AMS + ( Min( ( FirstVNF_Mem / Min( CRS ,CRS ) ) ,DDR ) * ( ( MRS - PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / Max( Max( ( RCSe / RMSe ),MUR ),( Max( MUC,Max( ( DS / DS ),RCSe ) ) + ( RRSe / RMSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.24015748031496062, "obj2": 0.6040325996247796}, {"determining": "( Min( Max( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - ( ( CS * RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7539639454563936}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem_Server ,PN ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUR,( MUR * CS ) ) + ( ( ( DS + ( ( CS - CS ) - ( ( MUR / Min( RCSe ,RCSe ) ) / DS ) ) ) / MLU ) / DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6490152250701298}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,PN ) + DDR ) + BR ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,MUR ) / ( ( DS + ( Max( Max( RCSe,( MUM / MUM ) ),( CS / ( MUR * MUM ) ) ) * Max( RRSe,Min( Max( RRSe,RCSe ) ,( ( DS + CS ) + ( DS + RMSe ) ) ) ) ) ) / MLU ) )", "obj1": 0.6318897637795275, "obj2": 0.20881719908244936}, {"determining": "Min( ACS ,Min( ( FirstVNF_Mem_Server / Const ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - MUR ) + Max( ( ( ( DS - ( ( Min( DS ,MLU ) - CS ) * RCSe ) ) / DS ) + RCSe ),MUC ) )", "obj1": 0.8208661417322834, "obj2": 0.06734028309878833}, {"determining": "Min( ( Min( Max( MRS,( FirstVNF_RAM - Min( RRS ,DDR ) ) ) ,Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,( PN * ( FirstVNF_RAM - Min( ACS ,RRS ) ) ) ) ) ) - FirstVNF_RAM_Server ) ,( ( Max( MDR,( ( ACS * ( Const * CRS ) ) - MRS ) ) - ( Max( ACS,FirstVNF_CPU_Server ) - ( RRS + ( FirstVNF_RAM_Server - PN ) ) ) ) - ACS ) )", "choosing": "( ( MLU * MUM ) + Max( RCSe,CS ) )", "obj1": 0.7381889763779528, "obj2": 0.13390418689380107}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( PN / Min( ( PN + CRS ) ,MRS ) ) ,( RRS - Max( ARS,ACS ) ) ) / ( MRS * Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR - ( MUR + CS ) ) + Min( MLU ,Max( ( ( RRSe * MUC ) - Min( Min( ( DS - MUM ) ,CS ) ,RMSe ) ),MUM ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5513220624511641}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( ( Max( AMS,RRS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),ACS ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( ( RCSe / ( CS + MUM ) ),DS ) ) ) ) / Max( MLU,( Min( RRSe ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38925674773117563}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( AMS ,( Min( PN ,ACS ) / Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - Const ) ) + RRS ) ,( ( Const - MDR ) * PN ) ) ) ) ) ,Max( ( ( CRS - ( PN - MDR ) ) - RRS ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUR ,MUC ) / RRSe ) / ( ( RCSe * DS ) - Max( ( ( Max( ( MUC + MLU ),MUM ) / RRSe ) * CS ),( Max( MUM,MUR ) + Max( ( DS * RRSe ),MUM ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.17268599059721892}, {"determining": "Min( ( Min( ( Min( ( ( PN - Min( ARS ,MDR ) ) * PN ) ,FirstVNF_Mem ) / Min( MRS ,ACS ) ) ,ACS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( DS * Min( ( RMSe + ( Min( CS ,MUM ) / Max( MUR,Min( RCSe ,MUC ) ) ) ) ,( MUC / ( ( ( MUM - CS ) * DS ) * RMSe ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.04379068716579754}, {"determining": "( Min( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + MRS ) ) ,PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),( MLU - ( ( CS * RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7608849966456777}, {"determining": "( ( ACS * PN ) - ( Min( Min( ( AMS / ( FirstVNF_CPU + CRS ) ) ,FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / CS ) / ( Max( ( ( ( ( ( RCSe - DS ) + MUC ) / Max( ( RCSe / MUM ),RCSe ) ) + ( RMSe + ( DS / RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20166459055471547}, {"determining": "Min( ( ( Max( ACS,Max( AMS,FirstVNF_RAM ) ) * ( Const / FirstVNF_RAM ) ) - FirstVNF_RAM_Server ) ,PN )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUR / MUC ) ,( Min( RCSe ,MLU ) / ( Min( RRSe ,CS ) / Max( RMSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( MUM / Max( MLU,( MUR - ( MLU - Min( RRSe ,DS ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9940944881889764, "obj2": 0.007297398801730705}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server * DDR ) + ( ( MRS - ( MRS / PN ) ) * PN ) ) ) ),( ACS / BR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( MUR / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( Max( ( MUR / ( MLU * MUC ) ),RRSe ) * RRSe ) ,MUC ) )", "obj1": 0.36811023622047245, "obj2": 0.4449882141722993}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.49015748031496065, "obj2": 0.29969472879837034}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "Min( ( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * ACS ) ) ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( Max( ( RCSe + RMSe ),RCSe ) - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6161417322834646, "obj2": 0.21867651496964305}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( Min( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) ,RMSe ),CS ) ,MUC ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( ( ( ( MUM / MUM ) + CS ) * ( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.19574686282778514}, {"determining": "( Min( ( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / Max( ACS,ACS ) ) / ( FirstVNF_CPU - AMS ) ) - ( ACS + ( ( ( ( BR / PN ) * ( ACS * AMS ) ) / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( ( ARS / BR ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / Min( MUC ,DS ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( ( Min( MLU ,MLU ) - MUM ) / ( MLU * ( MUM * RCSe ) ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.12992125984251968, "obj2": 0.7413554288970575}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( ( PN - Min( PN ,MDR ) ) + ( ( DDR / PN ) + RRS ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,( FirstVNF_RAM_Server / DDR ) ) ) * MDR ) + ( MRS * RRS ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( Min( ( Min( RRSe ,RCSe ) * ( MUM - RCSe ) ) ,CS ),MUR ) ) ) ) / Max( Max( Min( ( MUM * MUM ) ,RMSe ),MLU ),( ( MUM * MUR ) + DS ) ) )", "obj1": 0.44291338582677164, "obj2": 0.3545556773904551}], "39": [{"determining": "( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Min( Min( PN ,MDR ) ,( ( ( PN / FirstVNF_CPU ) * ( ( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) + MRS ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUC ) - ( CS / ( ( MUC * Max( MUR,DS ) ) * DS ) ) ) ) ) - Min( MLU ,( RRSe + ( ( MUC / MUR ) * ( ( ( RCSe / ( CS - CS ) ) / DS ) / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS * ( FirstVNF_CPU + FirstVNF_CPU ) ) * RRS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( Min( RCSe ,MUR ) + ( Max( ( CS / ( MUR * MUM ) ),Max( ( MUM + MUM ),RCSe ) ) * Max( RRSe,Min( Max( RRSe,RCSe ) ,( ( DS + CS ) + ( DS + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) - ( ( ACS * CRS ) * Max( Min( PN ,AMS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( MUC + ( ( DS * MUC ) + ( ( RMSe - ( MUC / DS ) ) * Min( DS ,Min( DS ,RRSe ) ) ) ) ) ) - ( ( ( ( RCSe - ( MUM * RRSe ) ) / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUC,MUM ) ),Max( RCSe,( MLU / ( CS / MLU ) ) ) ) ) ) / ( ( ( Max( MUM,Min( Max( MLU,RCSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * ( ( MUR * Min( RRSe ,DS ) ) / ( ( Min( RCSe ,MLU ) - ( MLU - RCSe ) ) - CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4330477702396556}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4980359232453927}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "( Max( ( ( FirstVNF_RAM * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) - Max( RRS,( PN - ( FirstVNF_CPU * DDR ) ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RCSe - RRSe ) + ( ( ( CS * RRSe ) * Min( RCSe ,RCSe ) ) + MUR ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( MUC * Min( Min( RRSe ,RMSe ) ,MUC ) ) ,( RCSe + RMSe ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4686129519384606}, {"determining": "( ( FirstVNF_RAM - ( Max( FirstVNF_CPU,ARS ) * RRS ) ) * ( Min( ( MDR * MDR ) ,( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * PN ) ,( ( Max( FirstVNF_RAM,BR ) - ( ACS - AMS ) ) + RRS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( Max( ( CS / ( MUR * MUM ) ),Max( ( MUM / MUM ),RCSe ) ) * Max( RRSe,Min( Max( RRSe,RCSe ) ,( ( DS + CS ) + ( DS + RCSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.4915651678590498}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08509173898946452}, {"determining": "( ( MDR * Const ) - ( Min( Min( PN ,Min( ( FirstVNF_CPU * DDR ) ,ARS ) ) ,( ( ( Const / PN ) * ( Min( RRS ,FirstVNF_RAM_Server ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),( ( ( RRSe / ( ( RCSe * DS ) - RMSe ) ) + MLU ) - DS ) ) / MUM ) / Min( ( MUR - DS ) ,Max( MLU,MLU ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2432047831277824}, {"determining": "Max( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * ( DS + ( MUC + MUC ) ) ) ) ) / ( RMSe - Max( ( ( MUM / ( MUR - DS ) ) - RRSe ),( RMSe / ( RMSe + ( Min( RMSe ,MUM ) / CS ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39362163132959965}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "( Max( Min( ( ( Const - Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ) ) / Min( RRS ,Const ) ) ,MRS ),ACS ) - ( ( DDR / ACS ) * AMS ) )", "choosing": "( ( ( MLU / Min( ( Min( MLU ,RRSe ) + MUC ) ,Min( ( Min( CS ,( MUC / MUR ) ) + MUR ) ,RMSe ) ) ) / Min( ( CS / MUM ) ,( MUM / ( ( MLU / ( DS / RRSe ) ) / ( ( CS / MUM ) / MUR ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.697591401632469}, {"determining": "( Max( ( ( Min( Min( FirstVNF_CPU ,( Const - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,MDR ) / Min( DDR ,( Const + CRS ) ) ) - ( MDR * AMS ) ),ACS ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( MUM,MUR ) - ( ( Max( MUR,( MUR + CS ) ) + ( Max( Min( MLU ,DS ),MLU ) * RMSe ) ) / Min( RCSe ,CS ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6250575335946054}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6459353665454972}, {"determining": "( ( ACS * PN ) - ( ( Min( PN ,MDR ) * ( ( Max( FirstVNF_Mem,( ( ARS + CRS ) * MDR ) ) * ( Min( FirstVNF_RAM_Server ,( MDR / CRS ) ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + DS ),Min( ( MLU + ( MUC / ( Min( DS ,RCSe ) - RMSe ) ) ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( Max( MUM,CS ),RCSe ) ) + ( RMSe + ( DS * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6082677165354331, "obj2": 0.22170252467619994}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "( Max( ( Max( AMS,( FirstVNF_RAM / Min( ( RRS - Const ) ,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ARS ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( ( Max( MUM,DS ) + DS ) + DS ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + Max( ( RCSe - ( RCSe - RMSe ) ),Min( CS ,MLU ) ) ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUC + Min( Max( RCSe,MLU ) ,MUM ) ) - RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.4456291768469064}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( PN / Min( ( PN + CRS ) ,MRS ) ) ,( RRS - Max( ARS,ACS ) ) ) / ( MRS * Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR - ( MUR + CS ) ) + Min( MLU ,Max( ( ( RRSe * MUC ) - Min( Min( ( DS - MUM ) ,CS ) ,RMSe ) ),MUM ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5513220624511641}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + ( AMS * MRS ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( Max( CS,CS ) - ( ( ( MUC / MLU ) / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2854330708661417, "obj2": 0.537644131765151}, {"determining": "Max( ( Min( ACS ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( ACS / AMS ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server / AMS ) * ( ( CRS * ( Const + MDR ) ) / BR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MLU - RCSe ) - RCSe ) - RMSe ) - ( DS + ( RRSe * Max( RRSe,Max( ( MUR + MUC ),( MUM / MLU ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( ( MUR * DS ) + DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,PN ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),( MLU - ( ( RRSe * CS ) + RCSe ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.27467128712255057}, {"determining": "( Max( ( ( PN / FirstVNF_RAM_Server ) + Min( ( DDR + ( Min( ACS ,( BR / Const ) ) * Min( Max( AMS,ARS ) ,MDR ) ) ) ,FirstVNF_CPU ) ),( Min( FirstVNF_RAM ,( MRS + ARS ) ) - FirstVNF_RAM ) ) * ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RCSe ,MUR ) / ( Max( MUR,MUC ) / MUR ) ) / ( CS * RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8576522560637384}, {"determining": "( ( ( Min( ( CRS / Min( ACS ,CRS ) ) ,CRS ) + ( ( Min( AMS ,CRS ) + BR ) - FirstVNF_Mem_Server ) ) * ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,MUM ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( DS * MUC ) - ( ( ( MUM + ( Min( RMSe ,RRSe ) + MUM ) ) + RCSe ) / RMSe ) ) ) - ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) / CS ) ) ) / Max( DS,MUC ) ) )", "obj1": 0.3484251968503937, "obj2": 0.4788257295904661}, {"determining": "( ( PN * ACS ) - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Min( Min( PN ,MDR ) ,( MRS * Const ) ) ) )", "choosing": "( ( ( ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Max( DS,RMSe ) ) + ( ( Min( ( MUC * DS ) ,( ( MUR + MLU ) / ( RCSe + DS ) ) ) * MLU ) - CS ) ) / MUM ) / ( ( ( ( ( DS / Max( ( RCSe + RMSe ),RCSe ) ) + MUC ) + CS ) * ( RCSe / MUM ) ) / MLU ) )", "obj1": 0.7007874015748031, "obj2": 0.1546229908857381}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "( ( PN * FirstVNF_Mem ) - ( Min( Min( ( Max( PN,DDR ) / PN ) ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - FirstVNF_RAM ) ) ) + BR ) ) / ( ACS - ( ACS * ( PN / MDR ) ) ) ) )", "choosing": "( ( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) - ( DS + Max( CS,Max( RRSe,Min( Max( ( RMSe + RRSe ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( Min( RMSe ,( MUM * MUM ) ),MLU ),Max( ( ( MUC - ( ( MUR / ( RCSe * RCSe ) ) + MUC ) ) / ( CS * RRSe ) ),( ( RRSe + ( CS * RMSe ) ) + MUC ) ) ) )", "obj1": 0.75, "obj2": 0.10457632102389727}, {"determining": "( ( Max( ACS,ACS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( Max( RMSe,MUC ) / RMSe ) ) * ( ( RCSe * DS ) - Max( MLU,( ( DS / RRSe ) - ( MUM / ( Min( Min( RRSe ,MLU ) ,RCSe ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.26332728868205924}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.41732283464566927, "obj2": 0.38031670951664026}, {"determining": "Min( FirstVNF_Mem ,( Min( Min( ( FirstVNF_RAM / ARS ) ,Min( ( Max( FirstVNF_RAM,BR ) * Max( FirstVNF_RAM,( ARS + BR ) ) ) ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04881779249084595}, {"determining": "Min( ( Min( ( Min( Max( Max( ( ARS + FirstVNF_CPU ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( PN - AMS ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / ( Max( ( MDR + Min( AMS ,Const ) ),FirstVNF_CPU_Server ) * MRS ) ) ,AMS ) - ( ( FirstVNF_RAM + Min( ACS ,CRS ) ) + ( Const - MDR ) ) ) ,ACS )", "choosing": "( ( MUC - DS ) + ( ( ( ( ( Min( RCSe ,MUC ) / MUM ) * Min( CS ,MLU ) ) - RCSe ) / Min( ( RCSe / ( Max( ( MUM - MUR ),MUC ) / MLU ) ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.053976486855338984}, {"determining": "Min( ( Min( ( Min( ( Max( ( ARS + BR ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) * ( ACS - MDR ) ) ,Max( MRS,( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( ( DS / Min( Max( Max( Max( CS,RRSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) + Min( Min( MLU ,( MUR - MUC ) ) ,RCSe ) ) )", "obj1": 0.7874015748031497, "obj2": 0.079510381137382}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( ( PN - Min( PN ,MDR ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.42913385826771655, "obj2": 0.37003267951297336}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,( ( DDR - MRS ) * Min( MDR ,ARS ) ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) + FirstVNF_CPU_Server ) ) / ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Max( CRS,Const ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - AMS ) ),( ACS + ( Min( MRS ,( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ACS * AMS ) ) ) ) - PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,CS ) - ( RCSe - ( ( ( Max( ( RMSe + ( DS + RMSe ) ),MUC ) + MUC ) * MUC ) - RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6216233104497181}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( Min( ( Max( ( CS + RMSe ),MLU ) + Min( Max( MLU,MLU ) ,MUR ) ) ,CS ) ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.1792170201757545}, {"determining": "Min( ( ( ( Min( ( ARS + Min( FirstVNF_Mem ,MDR ) ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * RRSe ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.035981264748015884}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server + Min( ( ( MDR + MRS ) * ARS ) ,MRS ) ) )", "choosing": "( ( Max( DS,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,RMSe ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) - ( ( ( CS * DS ) - RRSe ) * DS ) ) * ( ( Min( MLU ,MUC ) - ( ( RCSe / RCSe ) + MUC ) ) + MUR ) )", "obj1": 0.5236220472440944, "obj2": 0.2768886735995327}, {"determining": "( ( ACS + PN ) - ( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ( ( Max( ARS,FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - MRS ) ,MDR ) ) * ( ( AMS * Min( MDR ,Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) / Min( ( Min( PN ,Max( MRS,MRS ) ) + DDR ) ,Min( MDR ,( MRS - Max( Min( CRS ,FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RCSe - Min( CS ,( MLU - RRSe ) ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + ( ( RMSe - ( MUM + CS ) ) + MUR ) ) ) / ( DS * MLU ) ) - Max( Min( ( MUC + Max( DS,( RMSe * ( RCSe / RMSe ) ) ) ) ,MUM ),Min( ( RCSe / ( MUR + CS ) ) ,( CS + ( MUM / MUM ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17428086956827413}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( Min( RCSe ,MLU ) / ( Min( RRSe ,MLU ) / Max( RMSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2521366210016316}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,( ( Const + BR ) - Min( PN ,AMS ) ) ) ) - ( Min( Min( ( PN + FirstVNF_CPU_Server ) ,MDR ) ,ACS ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( RRSe * DS ) ,MUC ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( ( ( RCSe / MUC ) / MUR ),CS ) ) / Max( Max( RRSe,MUM ),DS ) ) ,MUM ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14711131318468326}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM / ACS ) + Max( FirstVNF_Mem_Server,BR ) ) - Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUC,MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( ( MLU + Max( RRSe,MUC ) ) / MUM ),DS ) ) ) ) / ( MLU + ( ( CS + Min( RCSe ,Min( RRSe ,RRSe ) ) ) * DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7189266925208706}, {"determining": "( Max( ( ( DDR * PN ) + FirstVNF_CPU ),( ( FirstVNF_RAM - Min( ( RRS - ( Max( PN,DDR ) / PN ) ) ,( ACS * PN ) ) ) - FirstVNF_RAM ) ) * ( AMS - ( Const * DDR ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) - ( DS * DS ) ) / Max( ( RCSe / Max( DS,( MUM * Min( RMSe ,RRSe ) ) ) ),Min( Max( Min( ( Max( Min( RRSe ,MUR ),( MUM - DS ) ) * MUR ) ,RMSe ),CS ) ,MUC ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8480371235354126}, {"determining": "( Max( ( RRS - Max( BR,FirstVNF_CPU ) ),ACS ) - Min( ( AMS + FirstVNF_CPU ) ,( MRS / Max( CRS,MDR ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( ( ( DS - RCSe ) * RMSe ) * Max( MUC,DS ) ) ) ) ) ) / ( ( ( MUR / MUM ) * Min( CS ,MLU ) ) - RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5737611606054623}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MUR / CS ),( ( RMSe / RRSe ) + ( ( ( DS + MLU ) + ( DS + RMSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5098425196850394, "obj2": 0.28489132991275135}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.265748031496063, "obj2": 0.5554160268872083}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Const - MDR ) * MDR ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,MUR ) / ( ( DS + ( Max( Max( RCSe,( MUM / MUM ) ),( CS / ( MUR * MUM ) ) ) * Max( RRSe,Min( DS ,MUC ) ) ) ) / MLU ) )", "obj1": 0.6240157480314961, "obj2": 0.21422367287289606}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,ACS ) + DDR ) + MRS ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * RCSe ) + DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( DS / Max( ( DS / DS ),Min( CS ,MUC ) ) ) + MUC ) + CS ),MUC ) / MLU ) )", "obj1": 0.7401574803149606, "obj2": 0.13191256925737063}, {"determining": "Min( ( ( ( Min( ( ARS + Max( ( PN * RRS ),MDR ) ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( Max( ( Max( ( ( DS + CS ) - ( DS + RMSe ) ),Max( ( MLU / DS ),RCSe ) ) + CS ),Max( MUC,DS ) ) * ( ( ( MLU / MUM ) * Min( ( RMSe + CS ) ,DS ) ) - ( CS + MLU ) ) )", "obj1": 0.937007874015748, "obj2": 0.028570409722105148}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Min( ( ( DDR / MDR ) - CRS ) ,FirstVNF_CPU_Server ) ) * ( ( ( Max( ( ARS - BR ),FirstVNF_RAM_Server ) * CRS ) * ( Min( ( MDR / ARS ) ,( RRS - Max( ACS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( Max( MUC,MUR ) - MUR ) ) ) ) ) / Max( ( DS + ( MUM * MUR ) ),Max( Min( ( MUM * MUM ) ,RMSe ),MLU ) ) )", "obj1": 0.43503937007874016, "obj2": 0.36591978659432717}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( FirstVNF_CPU / PN ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) + MDR ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MUR / CS ),( ( RMSe / RRSe ) + ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.47834645669291337, "obj2": 0.3228868107935522}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( ACS ,( RRS * FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM_Server / ( ARS * RRS ) ) ) )", "choosing": "Min( ( ( RCSe * MUR ) * MUM ) ,( Min( ( RRSe - RRSe ) ,( Min( DS ,MUC ) * RMSe ) ) + Max( MLU,Min( ( ( RCSe - Min( RCSe ,CS ) ) - MUM ) ,MUC ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5654544921583355}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( Max( MRS,( FirstVNF_Mem_Server + ACS ) ) + ( PN / DDR ) ) + MRS ) ) - BR ),( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) - ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe + RRSe ) - Min( CS ,RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7459895419029233}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8326861237133328}, {"determining": "( ( Max( FirstVNF_Mem,( ( MDR * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( AMS ,FirstVNF_CPU ) / Min( MRS ,( AMS / DDR ) ) ) * MDR ) / ( MRS * RRS ) ) )", "choosing": "( ( ( DS + ( ( MUR - CS ) * Max( Min( ( Min( RRSe ,RCSe ) * ( DS * DS ) ) ,CS ),MUR ) ) ) - RMSe ) / ( MUC * MUC ) )", "obj1": 0.4645669291338583, "obj2": 0.3354990323197636}, {"determining": "( ( ( Const / BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - ( ( FirstVNF_Mem - ( BR - FirstVNF_Mem_Server ) ) - ACS ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) + ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( MUM * MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8343411891239033}, {"determining": "( ( ACS * PN ) - ( Min( ( RRS / ARS ) ,Min( PN ,MDR ) ) / ( FirstVNF_CPU_Server * MRS ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - CS ) ,( DS / DS ) ) + Min( ( ( ( ( RRSe * RMSe ) + Min( DS ,RRSe ) ) - Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( DS * DS ) ) ,MUR ) ) )", "obj1": 0.7106299212598425, "obj2": 0.1527327792663811}, {"determining": "Min( ( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) + ( Const - MDR ) ) ) + MDR ) ) / ( FirstVNF_CPU_Server * ACS ) ) ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( Max( ( RCSe + RMSe ),RCSe ) - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6161417322834646, "obj2": 0.21867651496964305}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem_Server ,PN ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUR,( MUR * CS ) ) + ( ( ( DS + ( ( CS - CS ) - ( ( MUR / Min( RCSe ,RCSe ) ) / DS ) ) ) / MLU ) / DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6490152250701298}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( Min( FirstVNF_Mem ,PN ) + DDR ) + BR ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,MUR ) / ( ( DS + ( Max( Max( RCSe,( MUM / MUM ) ),( CS / ( MUR * MUM ) ) ) * Max( RRSe,Min( Max( RRSe,RCSe ) ,( ( DS + CS ) + ( DS + RMSe ) ) ) ) ) ) / MLU ) )", "obj1": 0.6318897637795275, "obj2": 0.20881719908244936}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "( Min( PN ,Max( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / ( Min( AMS ,CRS ) + BR ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * Max( ACS,( ACS / FirstVNF_CPU ) ) ) ) ) ) / ( ( ( FirstVNF_RAM / ACS ) + MDR ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( DS,( CS - ( Min( MLU ,RRSe ) / Max( CS,MUR ) ) ) ) / ( MUM + RMSe ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),DS ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7659619892451427}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_Mem_Server - Const ) * Min( MRS ,ARS ) ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) + MRS ) / Min( RRS ,Const ) ) - ( FirstVNF_CPU_Server * MRS ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,( MUC - ( RMSe * MUC ) ) ) / ( ( RCSe * DS ) - Max( MLU,( Min( ( CS / ( CS * MUM ) ) ,Max( ( MUM / RRSe ),RCSe ) ) - Max( ( MLU * DS ),( DS / ( CS * MUM ) ) ) ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.3075876121211308}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / Min( Min( PN ,ARS ) ,ACS ) ) - Max( ARS,( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem ,DDR ) + Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUM * ( MLU + MLU ) ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - Max( ( CS * CS ),RMSe ) ) ,( DS / DS ) ) + ( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( CS,MLU ) * MLU ) ) ) / ( DS * DS ) ) / MUR ) ) )", "obj1": 0.7263779527559056, "obj2": 0.13994405232928778}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_Mem,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),( Max( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ),Min( RRS ,RRS ) ) / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) / Max( ( Min( ( Max( ( CS + DS ),Min( MLU ,Max( MUR,RCSe ) ) ) + DS ) ,MUR ) / CS ),Max( ( MLU / MUM ),RCSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6619577895696983}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( ( Max( AMS,RRS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),ACS ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( ( RCSe / ( CS + MUM ) ),DS ) ) ) ) / Max( MLU,( Min( RRSe ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38925674773117563}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.49015748031496065, "obj2": 0.29969472879837034}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( AMS ,( Min( PN ,ACS ) / Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - Const ) ) + RRS ) ,( ( Const - MDR ) * PN ) ) ) ) ) ,Max( ( ( CRS - ( PN - MDR ) ) - RRS ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUR ,MUC ) / RRSe ) / ( ( RCSe * DS ) - Max( ( ( Max( ( MUC + MLU ),MUM ) / RRSe ) * CS ),( Max( MUM,MUR ) + Max( ( DS * RRSe ),MUM ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.17268599059721892}, {"determining": "( ( Min( FirstVNF_Mem ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Max( BR,FirstVNF_RAM_Server ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / CS ) ) ) / ( ( ( ( ( MLU + DS ) + CS ) / MUM ) / DS ) / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5236192556224637}, {"determining": "Min( ACS ,Min( ( FirstVNF_Mem_Server / Const ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - MUR ) + Max( ( ( ( DS - ( ( Min( DS ,MLU ) - CS ) * RCSe ) ) / DS ) + RCSe ),MUC ) )", "obj1": 0.8208661417322834, "obj2": 0.06734028309878833}, {"determining": "Min( ( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) * ( Const - DDR ) ) ) + Max( ACS,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server * ACS ) ) ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * Min( ( MUC / ( DS / DS ) ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6496062992125984, "obj2": 0.19341544353807544}, {"determining": "( ( ACS * PN ) - ( Min( Min( ( AMS / ( FirstVNF_CPU + CRS ) ) ,FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / CS ) / ( Max( ( ( ( ( ( RCSe - DS ) + MUC ) / Max( ( RCSe / MUM ),RCSe ) ) + ( RMSe + ( DS / RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20166459055471547}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( FirstVNF_CPU_Server ,( ( Const - ( MDR + FirstVNF_CPU_Server ) ) * MDR ) ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.25196850393700787, "obj2": 0.5800106216744582}, {"determining": "Min( ( ( Max( ACS,Max( AMS,FirstVNF_RAM ) ) * ( Const / FirstVNF_RAM ) ) - FirstVNF_RAM_Server ) ,PN )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUR / MUC ) ,( Min( RCSe ,MLU ) / ( Min( RRSe ,CS ) / Max( RMSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( MUM / Max( MLU,( MUR - ( MLU - Min( RRSe ,DS ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9940944881889764, "obj2": 0.007297398801730705}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( Max( CS,RCSe ) - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3450223799869615}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server * DDR ) + ( ( MRS - ( MRS / PN ) ) * PN ) ) ) ),( ACS / BR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( MUR / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( Max( ( MUR / ( MLU * MUC ) ),RRSe ) * RRSe ) ,MUC ) )", "obj1": 0.36811023622047245, "obj2": 0.4449882141722993}, {"determining": "( ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM + Min( ( RRS - Const ) ,CRS ) ) + FirstVNF_CPU_Server ) ) / ( ACS - FirstVNF_Mem_Server ) ) - ( DDR * AMS ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6071964133859814}, {"determining": "Min( ( ( MDR / DDR ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( ( ( ( Max( DS,RMSe ) + RCSe ) * MLU ) - DS ) - ( Max( ( ( RCSe - MLU ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( MLU / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.028891851929316315}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ACS,ARS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( ( RMSe + CS ) / Max( ( ( Min( Min( MLU ,DS ) ,MLU ) / DS ) - MLU ),CS ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5287138824417845}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUM - ( DS + ( CS * ( RRSe / Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( MUM / MUM ),RCSe ),( Min( MUR ,( MUM + DS ) ) / CS ) ) )", "obj1": 0.8818897637795275, "obj2": 0.046044732466908836}, {"determining": "Min( ACS ,Max( AMS,ARS ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( ( MUM + ( ( DS - RRSe ) + RRSe ) ) / Max( ( MLU / ( MLU - MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RRSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( MUM * MUC ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.2907057990124553}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5336332250114763}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( Min( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) ,RMSe ),CS ) ,MUC ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( ( ( ( MUM / MUM ) + CS ) * ( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.19574686282778514}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUM - ( DS + ( CS * Max( Min( ( Min( RRSe ,RCSe ) * ( MUM - RCSe ) ) ,CS ),MUR ) ) ) ) / Max( Max( Min( ( MUM * MUM ) ,RMSe ),MLU ),( ( MUM * MUR ) + DS ) ) )", "obj1": 0.812992125984252, "obj2": 0.06854238900109101}, {"determining": "( ( ( ( FirstVNF_CPU * ( AMS + ( RRS / FirstVNF_RAM ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - ( RRS + FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + BR ) ) ) * ( Min( ( PN * MDR ) ,( FirstVNF_Mem + MDR ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Max( MUM,RCSe ),( MLU + ( MUR * Max( ( CS + Min( RCSe ,( MUC * RCSe ) ) ),MLU ) ) ) ) / ( MUC + CS ) )", "obj1": 0.47244094488188976, "obj2": 0.32890572668396667}], "40": [{"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( MRS - ( FirstVNF_Mem_Server + ACS ) ) + ( DDR / PN ) ) + MRS ) ) - BR ),( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) - ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) ) - ( Const * Max( BR,Const ) ) )", "choosing": "( ( Max( Max( RRSe,RRSe ),RCSe ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / RCSe ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Min( Min( PN ,MDR ) ,( ( ( PN / FirstVNF_CPU ) * ( ( ( FirstVNF_Mem / RRS ) + FirstVNF_RAM ) + MRS ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( MLU,( ( MLU + MUC ) - ( CS / ( ( MUC * Max( MUR,DS ) ) * DS ) ) ) ) ) - Min( MLU ,( RRSe + ( ( MUC / MUR ) * ( ( ( RCSe / ( CS - CS ) ) / DS ) / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) - ( ( ACS * CRS ) * Max( Min( PN ,AMS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( MUC + ( ( DS * MUC ) + ( ( RMSe - ( MUC / DS ) ) * Min( DS ,Min( DS ,RRSe ) ) ) ) ) ) - ( ( ( ( RCSe - ( MUM * RRSe ) ) / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUC,MUM ) ),Max( RCSe,( MLU / ( CS / MLU ) ) ) ) ) ) / ( ( ( Max( MUM,Min( Max( MLU,RCSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * ( ( MUR * Min( RRSe ,DS ) ) / ( ( Min( RCSe ,MLU ) - ( MLU - RCSe ) ) - CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4330477702396556}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4980359232453927}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8415229710925695}, {"determining": "( Max( ( ( FirstVNF_RAM * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) - Max( RRS,( PN - ( FirstVNF_CPU * DDR ) ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RCSe - RRSe ) + ( ( ( CS * RRSe ) * Min( RCSe ,RCSe ) ) + MUR ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( MUC * Min( Min( RRSe ,RMSe ) ,MUC ) ) ,( RCSe + RMSe ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4686129519384606}, {"determining": "Max( ( Min( ACS ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( ACS / AMS ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server / AMS ) * ( ( CRS * ( Const + MDR ) ) / BR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MLU - RCSe ) - RCSe ) - RMSe ) - ( DS + ( RRSe * Max( RRSe,Max( ( MUR + MUC ),( MUM / MLU ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( ( MUR * DS ) + DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( ( FirstVNF_RAM - ( Max( FirstVNF_CPU,ARS ) * RRS ) ) * ( Min( ( MDR * MDR ) ,( Min( MRS ,ACS ) / Min( ( ( Const - MDR ) * PN ) ,( ( Max( FirstVNF_RAM,BR ) - ( ACS - AMS ) ) + RRS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( Max( ( CS / ( MUR * MUM ) ),Max( ( MUM / MUM ),RCSe ) ) * Max( RRSe,Min( Max( RRSe,RCSe ) ,( ( DS + CS ) + ( DS + RCSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( DS + ( MUR * MUM ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.4915651678590498}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / ( MRS / ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( Min( ( ( DS - CS ) - MLU ) ,Max( MUC,RRSe ) ) + ( DS / Min( Max( Max( Max( CS,RCSe ),( DS + ( MUR * MUM ) ) ),DS ) ,CS ) ) ) )", "obj1": 0.84251968503937, "obj2": 0.05994459564750436}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / Min( Min( PN ,ARS ) ,ACS ) ) - Max( ARS,( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem ,DDR ) + Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUM * ( MLU + MLU ) ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - Max( ( CS * CS ),RMSe ) ) ,( DS / DS ) ) + ( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( CS,( Max( CS,MLU ) * MLU ) ) ) / ( DS * DS ) ) / MUR ) ) )", "obj1": 0.7263779527559056, "obj2": 0.13994405232928778}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUM - ( DS + ( CS * Max( Min( ( Min( RRSe ,RCSe ) * ( MUM - RCSe ) ) ,CS ),MUR ) ) ) ) / Max( Max( Min( ( MUM * MUM ) ,RMSe ),MLU ),( ( MUM * MUR ) + DS ) ) )", "obj1": 0.812992125984252, "obj2": 0.06854238900109101}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_Mem,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),( Max( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ),Min( RRS ,RRS ) ) / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) / Max( ( Min( ( Max( ( CS + DS ),Min( MLU ,Max( MUR,RCSe ) ) ) + DS ) ,MUR ) / CS ),Max( ( MLU / MUM ),RCSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6619577895696983}, {"determining": "Min( ( ( ( Min( ( ARS + Min( FirstVNF_Mem ,MDR ) ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * RRSe ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.035981264748015884}, {"determining": "Max( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * ( DS + ( MUC + MUC ) ) ) ) ) / ( RMSe - Max( ( ( MUM / ( MUR - DS ) ) - RRSe ),( RMSe / ( RMSe + ( Min( RMSe ,MUM ) / CS ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39362163132959965}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "( ( MDR * Const ) - ( Min( Min( PN ,Min( ( FirstVNF_CPU * DDR ) ,ARS ) ) ,( ( ( Const / PN ) * ( Min( RRS ,FirstVNF_RAM_Server ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),( ( ( RRSe / ( ( RCSe * DS ) - RMSe ) ) + MLU ) - DS ) ) / MUM ) / Min( ( MUR - DS ) ,Max( MLU,MLU ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2432047831277824}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( RCSe - DS ) + MUC ) / Max( ( DS / MUM ),RCSe ) ) + ( RMSe + ( DS / DS ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.7401574803149606, "obj2": 0.12349868851227971}, {"determining": "Min( ( ( DDR - ( ( DDR - Max( MDR,( ACS * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ) - Max( Const,FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( Min( ( ( Max( ( DS / DS ),Min( RRSe ,RRSe ) ) - CS ) - CS ) ,( DS / DS ) ) + ( DS / Max( Max( Max( Max( CS,RCSe ),( DS + ( MUR * MUM ) ) ),DS ),CS ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07948261741320206}, {"determining": "( Max( Min( ( ( Const - Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ) ) / Min( RRS ,Const ) ) ,MRS ),ACS ) - ( ( DDR / ACS ) * AMS ) )", "choosing": "( ( ( MLU / Min( ( Min( MLU ,RRSe ) + MUC ) ,Min( ( Min( CS ,( MUC / MUR ) ) + MUR ) ,RMSe ) ) ) / Min( ( CS / MUM ) ,( MUM / ( ( MLU / ( DS / RRSe ) ) / ( ( CS / MUM ) / MUR ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.697591401632469}, {"determining": "( Max( ( ( Min( Min( FirstVNF_CPU ,( Const - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,MDR ) / Min( DDR ,( Const + CRS ) ) ) - ( MDR * AMS ) ),ACS ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( MUM,MUR ) - ( ( Max( MUR,( MUR + CS ) ) + ( Max( Min( MLU ,DS ),MLU ) * RMSe ) ) / Min( RCSe ,CS ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6250575335946054}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6459353665454972}, {"determining": "( ( ACS * PN ) - ( ( Min( PN ,MDR ) * ( ( Max( FirstVNF_Mem,( ( ARS + CRS ) * MDR ) ) * ( Min( FirstVNF_RAM_Server ,( MDR / CRS ) ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + DS ),Min( ( MLU + ( MUC / ( Min( DS ,RCSe ) - RMSe ) ) ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( Max( MUM,CS ),RCSe ) ) + ( RMSe + ( DS * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6082677165354331, "obj2": 0.22170252467619994}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08509173898946452}, {"determining": "Min( ( Min( ( Min( Max( Max( ( ARS + FirstVNF_CPU ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( PN - AMS ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / ( Max( ( MDR + Min( AMS ,Const ) ),FirstVNF_CPU_Server ) * MRS ) ) ,AMS ) - ( ( FirstVNF_RAM + Min( ACS ,CRS ) ) + ( Const - MDR ) ) ) ,ACS )", "choosing": "( ( MUC - DS ) + ( ( ( ( ( Min( RCSe ,MUC ) / MUM ) * Min( CS ,MLU ) ) - RCSe ) / Min( ( RCSe / ( Max( ( MUM - MUR ),MUC ) / MLU ) ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.053976486855338984}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( Max( MRS,( FirstVNF_Mem_Server + ACS ) ) + ( PN / DDR ) ) + MRS ) ) - BR ),( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) - ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe + RRSe ) - Min( CS ,RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7459895419029233}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "( Max( ( Max( AMS,( FirstVNF_RAM / Min( ( RRS - Const ) ,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ARS ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( ( Max( MUM,DS ) + DS ) + DS ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + Max( ( RCSe - ( RCSe - RMSe ) ),Min( CS ,MLU ) ) ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUC + Min( Max( RCSe,MLU ) ,MUM ) ) - RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.4456291768469064}, {"determining": "Min( ACS ,Min( ( FirstVNF_Mem_Server / Const ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - MUR ) + Max( ( ( ( DS - ( ( Min( DS ,MLU ) - CS ) * RCSe ) ) / DS ) + RCSe ),MUC ) )", "obj1": 0.8208661417322834, "obj2": 0.06734028309878833}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( PN / Min( ( PN + CRS ) ,MRS ) ) ,( RRS - Max( ARS,ACS ) ) ) / ( MRS * Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR - ( MUR + CS ) ) + Min( MLU ,Max( ( ( RRSe * MUC ) - Min( Min( ( DS - MUM ) ,CS ) ,RMSe ) ),MUM ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5513220624511641}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MUR / CS ),( ( RMSe / RRSe ) + ( ( ( DS + MLU ) + ( DS + RMSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5098425196850394, "obj2": 0.28489132991275135}, {"determining": "( ( ( Min( ( CRS / Min( ACS ,CRS ) ) ,CRS ) + ( ( Min( AMS ,CRS ) + BR ) - FirstVNF_Mem_Server ) ) * ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,MUM ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( DS * MUC ) - ( ( ( MUM + ( Min( RMSe ,RRSe ) + MUM ) ) + RCSe ) / RMSe ) ) ) - ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) / CS ) ) ) / Max( DS,MUC ) ) )", "obj1": 0.3484251968503937, "obj2": 0.4788257295904661}, {"determining": "( ( PN * ACS ) - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Min( Min( PN ,MDR ) ,( MRS * Const ) ) ) )", "choosing": "( ( ( ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Max( DS,RMSe ) ) + ( ( Min( ( MUC * DS ) ,( ( MUR + MLU ) / ( RCSe + DS ) ) ) * MLU ) - CS ) ) / MUM ) / ( ( ( ( ( DS / Max( ( RCSe + RMSe ),RCSe ) ) + MUC ) + CS ) * ( RCSe / MUM ) ) / MLU ) )", "obj1": 0.7007874015748031, "obj2": 0.1546229908857381}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( DDR / PN ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.47834645669291337, "obj2": 0.3074927420005288}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "( ( PN * FirstVNF_Mem ) - ( Min( Min( ( Max( PN,DDR ) / PN ) ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - FirstVNF_RAM ) ) ) + BR ) ) / ( ACS - ( ACS * ( PN / MDR ) ) ) ) )", "choosing": "( ( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) - ( DS + Max( CS,Max( RRSe,Min( Max( ( RMSe + RRSe ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( Min( RMSe ,( MUM * MUM ) ),MLU ),Max( ( ( MUC - ( ( MUR / ( RCSe * RCSe ) ) + MUC ) ) / ( CS * RRSe ) ),( ( RRSe + ( CS * RMSe ) ) + MUC ) ) ) )", "obj1": 0.75, "obj2": 0.10457632102389727}, {"determining": "( ( Min( Min( PN ,MDR ) ,( ( FirstVNF_RAM + Min( ( RRS - Const ) ,CRS ) ) + FirstVNF_CPU_Server ) ) / ( ACS - FirstVNF_Mem_Server ) ) - ( DDR * AMS ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6071964133859814}, {"determining": "Min( FirstVNF_Mem ,( Min( Min( ( FirstVNF_RAM / ARS ) ,Min( ( Max( FirstVNF_RAM,BR ) * Max( FirstVNF_RAM,( ARS + BR ) ) ) ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04881779249084595}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + ( AMS * MRS ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( Max( CS,CS ) - ( ( ( MUC / MLU ) / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2854330708661417, "obj2": 0.537644131765151}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( ( BR / PN ) * ( ACS * AMS ) ) ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.44881889763779526, "obj2": 0.343824956234838}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,( ( DDR - MRS ) * Min( MDR ,ARS ) ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) + FirstVNF_CPU_Server ) ) / ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Max( CRS,Const ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - AMS ) ),( ACS + ( Min( MRS ,( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ACS * AMS ) ) ) ) - PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,CS ) - ( RCSe - ( ( ( Max( ( RMSe + ( DS + RMSe ) ),MUC ) + MUC ) * MUC ) - RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6216233104497181}, {"determining": "( Max( ( RRS - Max( BR,FirstVNF_CPU ) ),ACS ) - Min( ( AMS + FirstVNF_CPU ) ,( MRS / Max( CRS,MDR ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( ( ( DS - RCSe ) * RMSe ) * Max( MUC,DS ) ) ) ) ) ) / ( ( ( MUR / MUM ) * Min( CS ,MLU ) ) - RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5737611606054623}, {"determining": "( ( Max( ACS,ACS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( Max( RMSe,MUC ) / RMSe ) ) * ( ( RCSe * DS ) - Max( MLU,( ( DS / RRSe ) - ( MUM / ( Min( Min( RRSe ,MLU ) ,RCSe ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.26332728868205924}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + AMS ) + MRS ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( CS * DS ) + DS ) + MUM ),Min( Min( ( Max( ( CS + RMSe ),MLU ) + Min( Max( MLU,MLU ) ,MUR ) ) ,CS ) ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.17901614866314897}, {"determining": "( ( ( ( Min( ( ( PN - Min( PN ,MDR ) ) * ( FirstVNF_CPU / ARS ) ) ,( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) ) / Min( MRS ,ACS ) ) / MDR ) + ( CRS + FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( DS,( CS * Max( RRSe,Min( Max( RCSe,( MUC - MUC ) ) ,Min( RRSe ,DS ) ) ) ) ) - MUM ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + MLU ) + MLU ),MUC ) ) )", "obj1": 0.23818897637795275, "obj2": 0.5950203049910331}, {"determining": "( Max( ( Const - MDR ),ACS ) - ( Min( MRS ,ACS ) / Min( FirstVNF_CPU_Server ,( ( Const - ( MDR + FirstVNF_CPU_Server ) ) * MDR ) ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.25196850393700787, "obj2": 0.5800106216744582}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ACS,ARS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( ( RMSe + CS ) / Max( ( ( Min( Min( MLU ,DS ) ,MLU ) / DS ) - MLU ),CS ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5287138824417845}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "( Min( PN ,Max( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / ( Min( AMS ,CRS ) + BR ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * Max( ACS,( ACS / FirstVNF_CPU ) ) ) ) ) ) / ( ( ( FirstVNF_RAM / ACS ) + MDR ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( DS,( CS - ( Min( MLU ,RRSe ) / Max( CS,MUR ) ) ) ) / ( MUM + RMSe ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),DS ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7659619892451427}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server + Min( ( ( MDR + MRS ) * ARS ) ,MRS ) ) )", "choosing": "( ( Max( DS,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,RMSe ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) - ( ( ( CS * DS ) - RRSe ) * DS ) ) * ( ( Min( MLU ,MUC ) - ( ( RCSe / RCSe ) + MUC ) ) + MUR ) )", "obj1": 0.5236220472440944, "obj2": 0.2768886735995327}, {"determining": "( ( ACS + PN ) - ( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ( ( Max( ARS,FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - MRS ) ,MDR ) ) * ( ( AMS * Min( MDR ,Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) / Min( ( Min( PN ,Max( MRS,MRS ) ) + DDR ) ,Min( MDR ,( MRS - Max( Min( CRS ,FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RCSe - Min( CS ,( MLU - RRSe ) ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + ( ( RMSe - ( MUM + CS ) ) + MUR ) ) ) / ( DS * MLU ) ) - Max( Min( ( MUC + Max( DS,( RMSe * ( RCSe / RMSe ) ) ) ) ,MUM ),Min( ( RCSe / ( MUR + CS ) ) ,( CS + ( MUM / MUM ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17428086956827413}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5393700787401575, "obj2": 0.2682732671687935}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5610236220472441, "obj2": 0.24729136148477668}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,( ( Const + BR ) - Min( PN ,AMS ) ) ) ) - ( Min( Min( ( PN + FirstVNF_CPU_Server ) ,MDR ) ,ACS ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( RRSe * DS ) ,MUC ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( ( ( RCSe / MUC ) / MUR ),CS ) ) / Max( Max( RRSe,MUM ),DS ) ) ,MUM ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14711131318468326}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM / ACS ) + Max( FirstVNF_Mem_Server,BR ) ) - Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUC,MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( ( MLU + Max( RRSe,MUC ) ) / MUM ),DS ) ) ) ) / ( MLU + ( ( CS + Min( RCSe ,Min( RRSe ,RRSe ) ) ) * DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7189266925208706}, {"determining": "( Max( ( ( FirstVNF_RAM * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) - Max( RRS,( PN - ( FirstVNF_CPU * DDR ) ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( Min( ( Min( RRSe ,RCSe ) * ( DS / DS ) ) ,CS ),MUR ) ) ) ) / Max( Max( Min( ( MUM * MUM ) ,RMSe ),MLU ),( ( MUM * MUR ) + DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.32332717762647234}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem,ACS ) ) * ( ( MDR * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - Min( DS ,( ( ( ( RCSe + MUR ) * ( CS - ( MLU * CS ) ) ) / ( DS + Min( ( RRSe + MUR ) ,CS ) ) ) * Max( Min( RRSe ,MLU ),Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Min( Max( MUC,RCSe ) ,RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36571432728100917}, {"determining": "Min( ( ( MDR / DDR ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( ( ( ( Max( DS,RMSe ) + RCSe ) * MLU ) - DS ) - ( Max( ( ( RCSe - MLU ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( MLU / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.028891851929316315}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.41732283464566927, "obj2": 0.38031670951664026}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( ( RRSe - ( CS / MUM ) ) - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5584803016475136}, {"determining": "( ( ( FirstVNF_RAM - Const ) / CRS ) - Max( ( ( ACS / CRS ) - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( CS + MUR ) ) + ( Min( Min( Min( Min( MLU ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / ( RRSe - MLU ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) - ( RCSe * Max( MLU,CS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.532500231998929}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,PN ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),( MLU - ( ( RRSe * CS ) + RCSe ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.27467128712255057}, {"determining": "( ( ( ( FirstVNF_CPU * ( AMS + ( RRS / FirstVNF_RAM ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - ( RRS + FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + BR ) ) ) * ( Min( ( PN * MDR ) ,( FirstVNF_Mem + MDR ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Max( MUM,RCSe ),( MLU + ( MUR * Max( ( CS + Min( RCSe ,( MUC * RCSe ) ) ),MLU ) ) ) ) / ( MUC + CS ) )", "obj1": 0.47244094488188976, "obj2": 0.32890572668396667}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8326861237133328}, {"determining": "Min( ( ( ( Min( ( ( PN - ( BR * DDR ) ) * PN ) ,( BR / ( CRS * AMS ) ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,Min( MRS ,( FirstVNF_CPU - RRS ) ) )", "choosing": "( ( ( MUC / ( MUC - ( MUM + MUM ) ) ) / Max( ( ( ( DS / ( MUR + RRSe ) ) - Min( DS ,RCSe ) ) - ( ( RMSe * RMSe ) + ( MUR - RMSe ) ) ),( DS + ( CS * Max( Min( ( MUC * RRSe ) ,( RCSe + RMSe ) ),RRSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.968503937007874, "obj2": 0.01348474522098381}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / Max( ACS,ACS ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),Max( MLU,DS ) ) ) ) + ( DS / ( ( DS + ( ( ( RRSe - ( CS / MUM ) ) - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3372389618300944}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "Min( ( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) * ( Const - DDR ) ) ) + Max( ACS,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server * ACS ) ) ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * Min( ( MUC / ( DS / DS ) ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6496062992125984, "obj2": 0.19341544353807544}, {"determining": "Min( ACS ,Max( AMS,ARS ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( ( MUM + ( ( DS - RRSe ) + RRSe ) ) / Max( ( MLU / ( MLU - MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RRSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( MUM * MUC ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.2907057990124553}, {"determining": "( ( ACS * PN ) - ( Min( ( RRS / ARS ) ,Min( PN ,MDR ) ) / ( FirstVNF_CPU_Server * MRS ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - CS ) ,( DS / DS ) ) + Min( ( ( ( ( RRSe * RMSe ) + Min( DS ,RRSe ) ) - Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( DS * DS ) ) ,MUR ) ) )", "obj1": 0.7106299212598425, "obj2": 0.1527327792663811}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem_Server ,PN ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUR,( MUR * CS ) ) + ( ( ( DS + ( ( CS - CS ) - ( ( MUR / Min( RCSe ,RCSe ) ) / DS ) ) ) / MLU ) / DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6490152250701298}, {"determining": "( Max( Min( Max( AMS,RRS ) ,( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( ( FirstVNF_Mem_Server / Const ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( RMSe,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),( Max( Max( RRSe,DS ),RRSe ) / DS ) ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.3763715233267665}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( ( Max( AMS,RRS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),ACS ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( ( RCSe / ( CS + MUM ) ),DS ) ) ) ) / Max( MLU,( Min( RRSe ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38925674773117563}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( AMS ,( Min( PN ,ACS ) / Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - Const ) ) + RRS ) ,( ( Const - MDR ) * PN ) ) ) ) ) ,Max( ( ( CRS - ( PN - MDR ) ) - RRS ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUR ,MUC ) / RRSe ) / ( ( RCSe * DS ) - Max( ( ( Max( ( MUC + MLU ),MUM ) / RRSe ) * CS ),( Max( MUM,MUR ) + Max( ( DS * RRSe ),MUM ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.17268599059721892}, {"determining": "( ( Min( FirstVNF_Mem ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Max( BR,FirstVNF_RAM_Server ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / CS ) ) ) / ( ( ( ( ( MLU + DS ) + CS ) / MUM ) / DS ) / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5236192556224637}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( ( PN - Min( PN ,MDR ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.44291338582677164, "obj2": 0.3518200640993819}, {"determining": "( ( ACS * PN ) - ( Min( Min( ( AMS / ( FirstVNF_CPU + CRS ) ) ,FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / CS ) / ( Max( ( ( ( ( ( RCSe - DS ) + MUC ) / Max( ( RCSe / MUM ),RCSe ) ) + ( RMSe + ( DS / RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6338582677165354, "obj2": 0.20166459055471547}, {"determining": "Min( ( ( Max( ACS,Max( AMS,FirstVNF_RAM ) ) * ( Const / FirstVNF_RAM ) ) - FirstVNF_RAM_Server ) ,PN )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUR / MUC ) ,( Min( RCSe ,MLU ) / ( Min( RRSe ,CS ) / Max( RMSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( MUM / Max( MLU,( MUR - ( MLU - Min( RRSe ,DS ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9940944881889764, "obj2": 0.007297398801730705}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.265748031496063, "obj2": 0.5554160268872083}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server * DDR ) + ( ( MRS - ( MRS / PN ) ) * PN ) ) ) ),( ACS / BR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( MUR / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( Max( ( MUR / ( MLU * MUC ) ),RRSe ) * RRSe ) ,MUC ) )", "obj1": 0.36811023622047245, "obj2": 0.4449882141722993}, {"determining": "( ( Max( FirstVNF_Mem,( ( MDR * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( AMS ,FirstVNF_CPU ) / Min( MRS ,( AMS / DDR ) ) ) * MDR ) / ( MRS * RRS ) ) )", "choosing": "( ( ( DS + ( ( MUR - CS ) * Max( Min( ( Min( RRSe ,RCSe ) * ( DS * DS ) ) ,CS ),MUR ) ) ) - RMSe ) / ( MUC * MUC ) )", "obj1": 0.4645669291338583, "obj2": 0.3354990323197636}, {"determining": "Min( ( ( ( Min( ( ARS + Max( ( PN * RRS ),MDR ) ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( Max( ( Max( ( ( DS + CS ) - ( DS + RMSe ) ),Max( ( MLU / DS ),RCSe ) ) + CS ),Max( MUC,DS ) ) * ( ( ( MLU / MUM ) * Min( ( RMSe + CS ) ,DS ) ) - ( CS + MLU ) ) )", "obj1": 0.937007874015748, "obj2": 0.028570409722105148}, {"determining": "( Max( ( FirstVNF_CPU_Server + AMS ),( ( ACS + ACS ) / FirstVNF_Mem ) ) * ( ( ( FirstVNF_Mem_Server + CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + ( RRSe / CS ) ) ,DS ) ) ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.3012954195962432}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUM - ( DS + ( CS * ( RRSe / Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( MUM / MUM ),RCSe ),( Min( MUR ,( MUM + DS ) ) / CS ) ) )", "obj1": 0.8818897637795275, "obj2": 0.046044732466908836}], "41": [{"determining": "Min( ( FirstVNF_RAM_Server - ( ( ( RRS + FirstVNF_Mem_Server ) + MRS ) - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ARS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUC * MLU ) + ( ( RCSe / Max( MLU,( ( ( RRSe + DS ) + MUR ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( ( MRS - ( FirstVNF_Mem_Server + ACS ) ) + ( DDR / PN ) ) + MRS ) ) - BR ),( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) - ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) ) - ( Const * Max( BR,Const ) ) )", "choosing": "( ( Max( Max( RRSe,RRSe ),RCSe ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / ( DS / RCSe ) ) / Max( ( CS / MUM ),MUR ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) - ( ( ACS * CRS ) * Max( Min( PN ,AMS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( MUC + ( ( DS * MUC ) + ( ( RMSe - ( MUC / DS ) ) * Min( DS ,Min( DS ,RRSe ) ) ) ) ) ) - ( ( ( ( RCSe - ( MUM * RRSe ) ) / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUC,MUM ) ),Max( RCSe,( MLU / ( CS / MLU ) ) ) ) ) ) / ( ( ( Max( MUM,Min( Max( MLU,RCSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * ( ( MUR * Min( RRSe ,DS ) ) / ( ( Min( RCSe ,MLU ) - ( MLU - RCSe ) ) - CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4330477702396556}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8415229710925695}, {"determining": "( ( ACS * PN ) - ( ( Min( PN ,MDR ) * ( ( Max( FirstVNF_Mem,( ( ARS + CRS ) * MDR ) ) * ( Min( FirstVNF_RAM_Server ,( MDR / CRS ) ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + DS ),Min( ( MLU + ( MUC / ( Min( DS ,RCSe ) - RMSe ) ) ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( Max( MUM,CS ),RCSe ) ) + ( RMSe + ( DS * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6082677165354331, "obj2": 0.22170252467619994}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,( BR - ARS ) ) ) - ( FirstVNF_Mem_Server - ( Min( ( Min( AMS ,BR ) + BR ) ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) + DS ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Max( ( MLU / Max( MLU,( RRSe - MUM ) ) ),Max( MUM,RRSe ) ) / Min( RCSe ,MUR ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.328740157480315, "obj2": 0.4864192119524837}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( Max( MRS,( FirstVNF_Mem_Server + ACS ) ) + ( PN / DDR ) ) + MRS ) ) - BR ),( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) - ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe + RRSe ) - Min( CS ,RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7459895419029233}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU * ( FirstVNF_CPU_Server + ( FirstVNF_RAM / RRS ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( ( BR / PN ) * ( ACS * AMS ) ) ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( RRSe ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.3464566929133858, "obj2": 0.4699822477081211}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4980359232453927}, {"determining": "( Min( PN ,Max( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / ( Min( AMS ,CRS ) + BR ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * Max( ACS,( ACS / FirstVNF_CPU ) ) ) ) ) ) / ( ( ( FirstVNF_RAM / ACS ) + MDR ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( DS,( CS - ( Min( MLU ,RRSe ) / Max( CS,MUR ) ) ) ) / ( MUM + RMSe ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),DS ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7659619892451427}, {"determining": "( ( ( PN / Min( ( Min( MDR ,BR ) * PN ) ,AMS ) ) * ACS ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( DDR + Min( MDR ,MDR ) ) ) ) ) ) / Min( ( FirstVNF_CPU / MDR ) ,ACS ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( RRSe / MLU ) ,MUR ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( RMSe * DS ) - ( Min( ( RCSe + ( MUM / MUM ) ) ,( ( MUC / ( RMSe - RMSe ) ) / ( MUR + CS ) ) ) - Max( RRSe,DS ) ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20400820927373708}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) + ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU + ARS ) )", "choosing": "( Min( MUC ,RMSe ) / Max( Max( DS,RCSe ),Max( ( ( ( MUR * Max( DS,CS ) ) + ( Max( MLU,RRSe ) * MUC ) ) + MLU ),MUC ) ) )", "obj1": 0.25, "obj2": 0.5697002142824248}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( RCSe + RMSe ) ,( MUC * DS ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( ( RRSe + DS ) + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12929426148997944}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08509173898946452}, {"determining": "Max( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * ( DS + ( MUC + MUC ) ) ) ) ) / ( RMSe - Max( ( ( MUM / ( MUR - DS ) ) - RRSe ),( RMSe / ( RMSe + ( Min( RMSe ,MUM ) / CS ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39362163132959965}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( FirstVNF_Mem * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),FirstVNF_Mem ) ) + ( MDR * Min( AMS ,FirstVNF_CPU ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MLU / RRSe ) / MUR ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) + ( DS + ( MUC + MUC ) ) ) ) ) / Max( MUC,DS ) )", "obj1": 0.6338582677165354, "obj2": 0.19890075526365686}, {"determining": "( Max( Min( ( ( Const - Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ) ) / Min( RRS ,Const ) ) ,MRS ),ACS ) - ( ( DDR / ACS ) * AMS ) )", "choosing": "( ( ( MLU / Min( ( Min( MLU ,RRSe ) + MUC ) ,Min( ( Min( CS ,( MUC / MUR ) ) + MUR ) ,RMSe ) ) ) / Min( ( CS / MUM ) ,( MUM / ( ( MLU / ( DS / RRSe ) ) / ( ( CS / MUM ) / MUR ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.697591401632469}, {"determining": "( Max( ( ( Min( Min( FirstVNF_CPU ,( Const - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,MDR ) / Min( DDR ,( Const + CRS ) ) ) - ( MDR * AMS ) ),ACS ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( MUM,MUR ) - ( ( Max( MUR,( MUR + CS ) ) + ( Max( Min( MLU ,DS ),MLU ) * RMSe ) ) / Min( RCSe ,CS ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6250575335946054}, {"determining": "( ( MDR * Const ) - ( Min( Min( PN ,Min( ( FirstVNF_CPU * DDR ) ,ARS ) ) ,( ( ( Const / PN ) * ( Min( RRS ,FirstVNF_RAM_Server ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),( ( ( RRSe / ( ( RCSe * DS ) - RMSe ) ) + MLU ) - DS ) ) / MUM ) / Min( ( MUR - DS ) ,Max( MLU,MLU ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2432047831277824}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,( ( Const + BR ) - Min( PN ,AMS ) ) ) ) - ( Min( Min( ( PN + FirstVNF_CPU_Server ) ,MDR ) ,ACS ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( RRSe * DS ) ,MUC ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( ( ( RCSe / MUC ) / MUR ),CS ) ) / Max( Max( RRSe,MUM ),DS ) ) ,MUM ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14711131318468326}, {"determining": "Min( ( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) * ( Const - DDR ) ) ) + Max( ACS,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server * ACS ) ) ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * Min( ( MUC / ( DS / DS ) ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6496062992125984, "obj2": 0.19341544353807544}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_Mem,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),( Max( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ),Min( RRS ,RRS ) ) / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) / Max( ( Min( ( Max( ( CS + DS ),Min( MLU ,Max( MUR,RCSe ) ) ) + DS ) ,MUR ) / CS ),Max( ( MLU / MUM ),RCSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6619577895696983}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUM - ( DS + ( CS * ( RRSe / Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( MUM / MUM ),RCSe ),( Min( MUR ,( MUM + DS ) ) / CS ) ) )", "obj1": 0.8818897637795275, "obj2": 0.046044732466908836}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( DDR / PN ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.47834645669291337, "obj2": 0.3074927420005288}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8326861237133328}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUM - ( DS + ( CS * Max( Min( ( Min( RRSe ,RCSe ) * ( MUM - RCSe ) ) ,CS ),MUR ) ) ) ) / Max( Max( Min( ( MUM * MUM ) ,RMSe ),MLU ),( ( MUM * MUR ) + DS ) ) )", "obj1": 0.812992125984252, "obj2": 0.06854238900109101}, {"determining": "( ( PN * ACS ) - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Min( Min( PN ,MDR ) ,( MRS * Const ) ) ) )", "choosing": "( ( ( ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Max( DS,RMSe ) ) + ( ( Min( ( MUC * DS ) ,( ( MUR + MLU ) / ( RCSe + DS ) ) ) * MLU ) - CS ) ) / MUM ) / ( ( ( ( ( DS / Max( ( RCSe + RMSe ),RCSe ) ) + MUC ) + CS ) * ( RCSe / MUM ) ) / MLU ) )", "obj1": 0.7007874015748031, "obj2": 0.1546229908857381}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6459353665454972}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "( ( PN * FirstVNF_Mem ) - ( Min( Min( ( Max( PN,DDR ) / PN ) ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - FirstVNF_RAM ) ) ) + BR ) ) / ( ACS - ( ACS * ( PN / MDR ) ) ) ) )", "choosing": "( ( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) - ( DS + Max( CS,Max( RRSe,Min( Max( ( RMSe + RRSe ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( Min( RMSe ,( MUM * MUM ) ),MLU ),Max( ( ( MUC - ( ( MUR / ( RCSe * RCSe ) ) + MUC ) ) / ( CS * RRSe ) ),( ( RRSe + ( CS * RMSe ) ) + MUC ) ) ) )", "obj1": 0.75, "obj2": 0.10457632102389727}, {"determining": "( Max( ( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_RAM - ACS ) ,MDR ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUM,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6050150391587729}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem,ACS ) ) * ( ( MDR * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - Min( DS ,( ( ( ( RCSe + MUR ) * ( CS - ( MLU * CS ) ) ) / ( DS + Min( ( RRSe + MUR ) ,CS ) ) ) * Max( Min( RRSe ,MLU ),Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Min( Max( MUC,RCSe ) ,RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36571432728100917}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),Min( ( ( MUC / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( RCSe - DS ) + MUC ) / Max( ( DS / MUM ),RCSe ) ) + ( RMSe + ( DS / DS ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.7401574803149606, "obj2": 0.12349868851227971}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,( ( DDR - MRS ) * Min( MDR ,ARS ) ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) + FirstVNF_CPU_Server ) ) / ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Max( CRS,Const ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - AMS ) ),( ACS + ( Min( MRS ,( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ACS * AMS ) ) ) ) - PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,CS ) - ( RCSe - ( ( ( Max( ( RMSe + ( DS + RMSe ) ),MUC ) + MUC ) * MUC ) - RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6216233104497181}, {"determining": "( ( PN * ACS ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_CPU_Server / PN ) + ( ( Max( DDR,FirstVNF_CPU_Server ) * PN ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Min( Min( ( Max( ( CS + RMSe ),RRSe ) + Min( ( MUM + CS ) ,MUR ) ) ,CS ) ,RCSe ),( ( ( CS * DS ) + DS ) + MUM ) ) / MUM ) / ( Min( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) ,( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.17808739589189543}, {"determining": "( Max( ( FirstVNF_CPU_Server + AMS ),( ( ACS + ACS ) / FirstVNF_Mem ) ) * ( ( ( FirstVNF_Mem_Server + CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + ( RRSe / CS ) ) ,DS ) ) ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.3012954195962432}, {"determining": "( Max( ( Max( AMS,( FirstVNF_RAM + Min( ( FirstVNF_RAM - Const ) ,CRS ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4618353846240744}, {"determining": "Min( ( ( Max( ACS,Max( AMS,FirstVNF_RAM ) ) * ( Const / FirstVNF_RAM ) ) - FirstVNF_RAM_Server ) ,PN )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUR / MUC ) ,( Min( RCSe ,MLU ) / ( Min( RRSe ,CS ) / Max( RMSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( MUM / Max( MLU,( MUR - ( MLU - Min( RRSe ,DS ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9940944881889764, "obj2": 0.007297398801730705}, {"determining": "( ( PN * ACS ) - ( Min( Min( ( AMS / ( FirstVNF_CPU + CRS ) ) ,FirstVNF_Mem_Server ) ,( CRS + MDR ) ) / ( FirstVNF_CPU_Server * ( Const * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUM ,MUR ) / CS ) / ( Max( ( ( ( ( MUC + ( MUC - DS ) ) / Max( ( RCSe / MUM ),RCSe ) ) + ( RMSe + ( DS / MUM ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.7952755905511811, "obj2": 0.07719381287442495}, {"determining": "( ( Const + MDR ) - ( Min( Min( PN ,MDR ) ,( ( ( ( MRS - ( DDR * Const ) ) - ( ACS * Max( Const,ACS ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe - ( RCSe - RCSe ) ) ,Max( ( RRSe + RRSe ),RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR - Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2585859599563105}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "Max( ( Min( ACS ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( ACS / AMS ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server / AMS ) * ( ( CRS * ( Const + MDR ) ) / BR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MLU - RCSe ) - RCSe ) - RMSe ) - ( DS + ( RRSe * Max( RRSe,Max( ( MUR + MUC ),( MUM / MLU ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( ( MUR * DS ) + DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,( Min( FirstVNF_RAM ,PN ) * ACS ) ) ) / ( MRS / ACS ) ) ,RRS ) - ( FirstVNF_Mem / Min( ACS ,RRS ) ) ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( Min( ( ( DS - CS ) - MLU ) ,Max( RMSe,RRSe ) ) + ( DS / Min( Max( Max( Max( CS,RCSe ),( DS + ( MUC * MUR ) ) ),DS ) ,CS ) ) ) )", "obj1": 0.8326771653543307, "obj2": 0.06356342488129875}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MUR / CS ),( ( RMSe / RRSe ) + ( ( ( DS + MLU ) + ( DS + RMSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5098425196850394, "obj2": 0.28489132991275135}, {"determining": "( ( ACS + PN ) - ( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ( ( Max( ARS,FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - MRS ) ,MDR ) ) * ( ( AMS * Min( MDR ,Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) / Min( ( Min( PN ,Max( MRS,MRS ) ) + DDR ) ,Min( MDR ,( MRS - Max( Min( CRS ,FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RCSe - Min( CS ,( MLU - RRSe ) ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + ( ( RMSe - ( MUM + CS ) ) + MUR ) ) ) / ( DS * MLU ) ) - Max( Min( ( MUC + Max( DS,( RMSe * ( RCSe / RMSe ) ) ) ) ,MUM ),Min( ( RCSe / ( MUR + CS ) ) ,( CS + ( MUM / MUM ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17428086956827413}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem_Server ,PN ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.17125984251968504, "obj2": 0.6768452039737071}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM / ACS ) + Max( FirstVNF_Mem_Server,BR ) ) - Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUC,MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( ( MLU + Max( RRSe,MUC ) ) / MUM ),DS ) ) ) ) / ( MLU + ( ( CS + Min( RCSe ,Min( RRSe ,RRSe ) ) ) * DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7189266925208706}, {"determining": "( Max( ( ( FirstVNF_RAM * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) - Max( RRS,( PN - ( FirstVNF_CPU * DDR ) ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RRSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( MUM * MUC ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.32276572493811573}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "Min( ( ( DDR - ( ( DDR - Max( MDR,( ACS * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ) - Max( Const,FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( Min( ( ( Max( ( DS / DS ),Min( RRSe ,RRSe ) ) - CS ) - CS ) ,( DS / DS ) ) + ( DS / Max( Max( Max( Max( CS,RCSe ),( DS + ( MUR * MUM ) ) ),DS ),CS ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07948261741320206}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( ( RRSe - ( CS / MUM ) ) - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5584803016475136}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server + Min( ( ( MDR + MRS ) * ARS ) ,MRS ) ) )", "choosing": "( ( Max( DS,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,RMSe ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) - ( ( ( CS * DS ) - RRSe ) * DS ) ) * ( ( Min( MLU ,MUC ) - ( ( RCSe / RCSe ) + MUC ) ) + MUR ) )", "obj1": 0.5236220472440944, "obj2": 0.2768886735995327}, {"determining": "Min( ( ( MDR / DDR ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( ( ( ( Max( DS,RMSe ) + RCSe ) * MLU ) - DS ) - ( Max( ( ( RCSe - MLU ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( MLU / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.028891851929316315}, {"determining": "Min( ACS ,Min( ( FirstVNF_Mem_Server / Const ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - MUR ) + Max( ( ( ( DS - ( ( Min( DS ,MLU ) - CS ) * RCSe ) ) / DS ) + RCSe ),MUC ) )", "obj1": 0.8208661417322834, "obj2": 0.06734028309878833}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( ( RRSe - ( CS / MUM ) ) - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2795275590551181, "obj2": 0.546432183459442}, {"determining": "( ( ACS * PN ) - ( Min( ( RRS / ARS ) ,Min( PN ,MDR ) ) / ( FirstVNF_CPU_Server * MRS ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - CS ) ,( DS / DS ) ) + Min( ( ( ( ( RRSe * RMSe ) + Min( DS ,RRSe ) ) - Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( DS * DS ) ) ,MUR ) ) )", "obj1": 0.7106299212598425, "obj2": 0.1527327792663811}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + DS ),Min( ( ( MUC / ( ( DS * RCSe ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( ( DS / RCSe ),RCSe ) ) + ( RMSe + ( DS * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.90748031496063, "obj2": 0.03746494699156874}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "( ( ( ( FirstVNF_CPU * ( AMS + ( RRS / FirstVNF_RAM ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - ( RRS + FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + BR ) ) ) * ( Min( ( PN * MDR ) ,( FirstVNF_Mem + MDR ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Max( MUM,RCSe ),( MLU + ( MUR * Max( ( CS + Min( RCSe ,( MUC * RCSe ) ) ),MLU ) ) ) ) / ( MUC + CS ) )", "obj1": 0.47244094488188976, "obj2": 0.32890572668396667}, {"determining": "( Max( Min( Max( AMS,RRS ) ,( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( ( FirstVNF_Mem_Server / Const ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( RMSe,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),( Max( Max( RRSe,DS ),RRSe ) / DS ) ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.3763715233267665}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.3641732283464567, "obj2": 0.457945972031925}, {"determining": "Min( FirstVNF_Mem ,( Min( Min( ( FirstVNF_RAM / ARS ) ,Min( ( Max( FirstVNF_RAM,BR ) * Max( FirstVNF_RAM,( ARS + BR ) ) ) ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04881779249084595}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( ( Max( AMS,RRS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),ACS ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( ( RCSe / ( CS + MUM ) ),DS ) ) ) ) / Max( MLU,( Min( RRSe ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38925674773117563}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( AMS ,( Min( PN ,ACS ) / Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - Const ) ) + RRS ) ,( ( Const - MDR ) * PN ) ) ) ) ) ,Max( ( ( CRS - ( PN - MDR ) ) - RRS ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUR ,MUC ) / RRSe ) / ( ( RCSe * DS ) - Max( ( ( Max( ( MUC + MLU ),MUM ) / RRSe ) * CS ),( Max( MUM,MUR ) + Max( ( DS * RRSe ),MUM ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.17268599059721892}, {"determining": "( ( Min( FirstVNF_Mem ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Max( BR,FirstVNF_RAM_Server ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / CS ) ) ) / ( ( ( ( ( MLU + DS ) + CS ) / MUM ) / DS ) / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5236192556224637}, {"determining": "Min( ( ( ( Min( ( ARS + Min( FirstVNF_Mem ,MDR ) ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * RRSe ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.035981264748015884}, {"determining": "Min( ( Min( ( Min( Max( Max( ( ARS + FirstVNF_CPU ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( PN - AMS ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / ( Max( ( MDR + Min( AMS ,Const ) ),FirstVNF_CPU_Server ) * MRS ) ) ,AMS ) - ( ( FirstVNF_RAM + Min( ACS ,CRS ) ) + ( Const - MDR ) ) ) ,ACS )", "choosing": "( ( MUC - DS ) + ( ( ( ( ( Min( RCSe ,MUC ) / MUM ) * Min( CS ,MLU ) ) - RCSe ) / Min( ( RCSe / ( Max( ( MUM - MUR ),MUC ) / MLU ) ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.053976486855338984}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,PN ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),( MLU - ( ( RRSe * CS ) + RCSe ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.27467128712255057}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server * DDR ) + ( ( MRS - ( MRS / PN ) ) * PN ) ) ) ),( ACS / BR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( MUR / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( Max( ( MUR / ( MLU * MUC ) ),RRSe ) * RRSe ) ,MUC ) )", "obj1": 0.36811023622047245, "obj2": 0.4449882141722993}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "( ( ( ( Min( ( ( PN - Min( PN ,MDR ) ) * ( FirstVNF_CPU / ARS ) ) ,( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) ) / Min( MRS ,ACS ) ) / MDR ) + ( CRS + FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( DS,( CS * Max( RRSe,Min( Max( RCSe,( MUC - MUC ) ) ,Min( RRSe ,DS ) ) ) ) ) - MUM ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + MLU ) + MLU ),MUC ) ) )", "obj1": 0.23818897637795275, "obj2": 0.5950203049910331}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.41732283464566927, "obj2": 0.38031670951664026}, {"determining": "( Max( ( MDR / ( ( FirstVNF_Mem + FirstVNF_CPU ) / ACS ) ),PN ) - ( DDR * AMS ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,( RCSe - MUC ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.9429133858267716, "obj2": 0.023509925441969698}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ACS,ARS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( ( RMSe + CS ) / Max( ( ( Min( Min( MLU ,DS ) ,MLU ) / DS ) - MLU ),CS ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5287138824417845}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5393700787401575, "obj2": 0.2682732671687935}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + ( AMS * MRS ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( Max( CS,CS ) - ( ( ( MUC / MLU ) / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2854330708661417, "obj2": 0.537644131765151}, {"determining": "( ( Max( FirstVNF_Mem,( ( MDR * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( AMS ,FirstVNF_CPU ) / Min( MRS ,( AMS / DDR ) ) ) * MDR ) / ( MRS * RRS ) ) )", "choosing": "( ( ( DS + ( ( MUR - CS ) * Max( Min( ( Min( RRSe ,RCSe ) * ( DS * DS ) ) ,CS ),MUR ) ) ) - RMSe ) / ( MUC * MUC ) )", "obj1": 0.4645669291338583, "obj2": 0.3354990323197636}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.562992125984252, "obj2": 0.2452353020817945}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU_Server * ACS ) + ( ( MRS - ( PN / MRS ) ) * PN ) ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( DS,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RRSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( MUM * MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ( FirstVNF_RAM - Const ) / CRS ) - Max( ( ( ACS / CRS ) - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( CS + MUR ) ) + ( Min( Min( Min( Min( MLU ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / ( RRSe - MLU ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) - ( RCSe * Max( MLU,CS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.532500231998929}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( PN / Min( ( PN + CRS ) ,MRS ) ) ,( RRS - Max( ARS,ACS ) ) ) / ( MRS * Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR - ( MUR + CS ) ) + Min( MLU ,Max( ( ( RRSe * MUC ) - Min( Min( ( DS - MUM ) ,CS ) ,RMSe ) ),MUM ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5513220624511641}, {"determining": "( Max( ( Max( AMS,( FirstVNF_RAM / Min( ( RRS - Const ) ,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ARS ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( ( Max( MUM,DS ) + DS ) + DS ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + Max( ( RCSe - ( RCSe - RMSe ) ),Min( CS ,MLU ) ) ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUC + Min( Max( RCSe,MLU ) ,MUM ) ) - RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.4456291768469064}, {"determining": "Min( ( ( ( Min( ( ARS + Max( ( PN * RRS ),MDR ) ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( Max( ( Max( ( ( DS + CS ) - ( DS + RMSe ) ),Max( ( MLU / DS ),RCSe ) ) + CS ),Max( MUC,DS ) ) * ( ( ( MLU / MUM ) * Min( ( RMSe + CS ) ,DS ) ) - ( CS + MLU ) ) )", "obj1": 0.937007874015748, "obj2": 0.028570409722105148}], "42": [{"determining": "( ( ACS * PN ) - ( ( ( BR / Const ) * Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_RAM,BR ),MRS ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( ( RRS + FirstVNF_Mem_Server ) + MRS ) - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ARS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUC * MLU ) + ( ( RCSe / Max( MLU,( ( ( RRSe + DS ) + MUR ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) - ( ( ACS * CRS ) * Max( Min( PN ,AMS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( MUC + ( ( DS * MUC ) + ( ( RMSe - ( MUC / DS ) ) * Min( DS ,Min( DS ,RRSe ) ) ) ) ) ) - ( ( ( ( RCSe - ( MUM * RRSe ) ) / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUC,MUM ) ),Max( RCSe,( MLU / ( CS / MLU ) ) ) ) ) ) / ( ( ( Max( MUM,Min( Max( MLU,RCSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * ( ( MUR * Min( RRSe ,DS ) ) / ( ( Min( RCSe ,MLU ) - ( MLU - RCSe ) ) - CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4330477702396556}, {"determining": "( ( ACS * PN ) - ( ( Min( PN ,MDR ) * ( ( Max( FirstVNF_Mem,( ( ARS + CRS ) * MDR ) ) * ( Min( FirstVNF_RAM_Server ,( MDR / CRS ) ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + DS ),Min( ( MLU + ( MUC / ( Min( DS ,RCSe ) - RMSe ) ) ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( Max( MUM,CS ),RCSe ) ) + ( RMSe + ( DS * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6082677165354331, "obj2": 0.22170252467619994}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8415229710925695}, {"determining": "Min( ( Min( ( Min( Max( Max( ( ARS + FirstVNF_CPU ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( PN - AMS ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / ( Max( ( MDR + Min( AMS ,Const ) ),FirstVNF_CPU_Server ) * MRS ) ) ,AMS ) - ( ( FirstVNF_RAM + Min( ACS ,CRS ) ) + ( Const - MDR ) ) ) ,ACS )", "choosing": "( ( MUC - DS ) + ( ( ( ( ( Min( RCSe ,MUC ) / MUM ) * Min( CS ,MLU ) ) - RCSe ) / Min( ( RCSe / ( Max( ( MUM - MUR ),MUC ) / MLU ) ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.053976486855338984}, {"determining": "( ( ( PN / Min( ( Min( MDR ,BR ) * PN ) ,AMS ) ) * ACS ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( DDR + Min( MDR ,MDR ) ) ) ) ) ) / Min( ( FirstVNF_CPU / MDR ) ,ACS ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( RRSe / MLU ) ,MUR ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( RMSe * DS ) - ( Min( ( RCSe + ( MUM / MUM ) ) ,( ( MUC / ( RMSe - RMSe ) ) / ( MUR + CS ) ) ) - Max( RRSe,DS ) ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20400820927373708}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,( Min( FirstVNF_RAM ,PN ) * ACS ) ) ) / ( MRS / ACS ) ) ,RRS ) - ( FirstVNF_Mem / Min( ACS ,RRS ) ) ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( Min( ( ( DS - CS ) - MLU ) ,Max( RMSe,RRSe ) ) + ( DS / Min( Max( Max( Max( CS,RCSe ),( DS + ( MUC * MUR ) ) ),DS ) ,CS ) ) ) )", "obj1": 0.8326771653543307, "obj2": 0.06356342488129875}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) * ( ( ( RRS * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - FirstVNF_Mem ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( Min( RMSe ,MUC ) * Max( Min( MLU ,( MUC + MUM ) ),MUR ) ) )", "obj1": 0.44881889763779526, "obj2": 0.34703881922112434}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,( BR - ARS ) ) ) - ( FirstVNF_Mem_Server - ( Min( ( Min( AMS ,BR ) + BR ) ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) + DS ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Max( ( MLU / Max( MLU,( RRSe - MUM ) ) ),Max( MUM,RRSe ) ) / Min( RCSe ,MUR ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.328740157480315, "obj2": 0.4864192119524837}, {"determining": "Max( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * ( DS + ( MUC + MUC ) ) ) ) ) / ( RMSe - Max( ( ( MUM / ( MUR - DS ) ) - RRSe ),( RMSe / ( RMSe + ( Min( RMSe ,MUM ) / CS ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39362163132959965}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MUR / CS ),( ( RMSe / RRSe ) + ( ( ( DS + MLU ) + ( DS + RMSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5098425196850394, "obj2": 0.28489132991275135}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,DS ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.4625984251968504, "obj2": 0.3324336384590938}, {"determining": "( ( FirstVNF_Mem * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),FirstVNF_Mem ) ) + ( MDR * Min( AMS ,FirstVNF_CPU ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MLU / RRSe ) / MUR ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) + ( DS + ( MUC + MUC ) ) ) ) ) / Max( MUC,DS ) )", "obj1": 0.6338582677165354, "obj2": 0.19890075526365686}, {"determining": "( Max( Min( ( ( Const - Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ) ) / Min( RRS ,Const ) ) ,MRS ),ACS ) - ( ( DDR / ACS ) * AMS ) )", "choosing": "( ( ( MLU / Min( ( Min( MLU ,RRSe ) + MUC ) ,Min( ( Min( CS ,( MUC / MUR ) ) + MUR ) ,RMSe ) ) ) / Min( ( CS / MUM ) ,( MUM / ( ( MLU / ( DS / RRSe ) ) / ( ( CS / MUM ) / MUR ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.697591401632469}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "( ( MDR * Const ) - ( Min( Min( PN ,Min( ( FirstVNF_CPU * DDR ) ,ARS ) ) ,( ( ( Const / PN ) * ( Min( RRS ,FirstVNF_RAM_Server ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + MUM ),( ( ( RRSe / ( ( RCSe * DS ) - RMSe ) ) + MLU ) - DS ) ) / MUM ) / Min( ( MUR - DS ) ,Max( MLU,MLU ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2432047831277824}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "Min( ( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) * ( Const - DDR ) ) ) + Max( ACS,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server * ACS ) ) ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * Min( ( MUC / ( DS / DS ) ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6496062992125984, "obj2": 0.19341544353807544}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4980359232453927}, {"determining": "Min( ( ACS * MDR ) ,( Const + Min( Max( ( MDR / ( ( CRS - FirstVNF_CPU ) / ACS ) ),PN ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) / ( ( RCSe / MLU ) - Max( Min( ( ( ( DS * RMSe ) / DS ) - Min( ( CS - RMSe ) ,( DS + MUR ) ) ) ,( RMSe + MUM ) ),MLU ) ) )", "obj1": 0.687007874015748, "obj2": 0.16360955640352426}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_Mem,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),( Max( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ),Min( RRS ,RRS ) ) / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) / Max( ( Min( ( Max( ( CS + DS ),Min( MLU ,Max( MUR,RCSe ) ) ) + DS ) ,MUR ) / CS ),Max( ( MLU / MUM ),RCSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6619577895696983}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( DDR / PN ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.47834645669291337, "obj2": 0.3074927420005288}, {"determining": "( Max( ( ( Min( Min( FirstVNF_CPU ,( Const - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,MDR ) / Min( DDR ,( Const + CRS ) ) ) - ( MDR * AMS ) ),ACS ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( MUM,MUR ) - ( ( Max( MUR,( MUR + CS ) ) + ( Max( Min( MLU ,DS ),MLU ) * RMSe ) ) / Min( RCSe ,CS ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6250575335946054}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUM - ( DS + ( CS * ( RRSe / Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( MUM / MUM ),RCSe ),( Min( MUR ,( MUM + DS ) ) / CS ) ) )", "obj1": 0.8818897637795275, "obj2": 0.046010816985820775}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) + ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU + ARS ) )", "choosing": "( Min( MUC ,RMSe ) / Max( Max( DS,RCSe ),Max( ( ( ( MUR * Max( DS,CS ) ) + ( Max( MLU,RRSe ) * MUC ) ) + MLU ),MUC ) ) )", "obj1": 0.25, "obj2": 0.5697002142824248}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "( ( PN * ACS ) - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Min( Min( PN ,MDR ) ,( MRS * Const ) ) ) )", "choosing": "( ( ( ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Max( DS,RMSe ) ) + ( ( Min( ( MUC * DS ) ,( ( MUR + MLU ) / ( RCSe + DS ) ) ) * MLU ) - CS ) ) / MUM ) / ( ( ( ( ( DS / Max( ( RCSe + RMSe ),RCSe ) ) + MUC ) + CS ) * ( RCSe / MUM ) ) / MLU ) )", "obj1": 0.7007874015748031, "obj2": 0.1546229908857381}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( ( RRSe - ( CS / MUM ) ) - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5584803016475136}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem,ACS ) ) * ( ( MDR * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - Min( DS ,( ( ( ( RCSe + MUR ) * ( CS - ( MLU * CS ) ) ) / ( DS + Min( ( RRSe + MUR ) ,CS ) ) ) * Max( Min( RRSe ,MLU ),Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Min( Max( MUC,RCSe ) ,RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36571432728100917}, {"determining": "Min( FirstVNF_Mem ,( Min( Min( ( FirstVNF_RAM / ARS ) ,Min( ( Max( FirstVNF_RAM,BR ) * Max( FirstVNF_RAM,( ARS + BR ) ) ) ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04881779249084595}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( RCSe + RMSe ) ,( MUC * DS ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( ( RRSe + DS ) + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12929426148997944}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "Min( ( ( ( Min( ( ARS + Min( FirstVNF_Mem ,MDR ) ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * RRSe ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.035981264748015884}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,( ( DDR - MRS ) * Min( MDR ,ARS ) ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) + FirstVNF_CPU_Server ) ) / ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Max( CRS,Const ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - AMS ) ),( ACS + ( Min( MRS ,( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ACS * AMS ) ) ) ) - PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,CS ) - ( RCSe - ( ( ( Max( ( RMSe + ( DS + RMSe ) ),MUC ) + MUC ) * MUC ) - RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6216233104497181}, {"determining": "( ( Const + MDR ) - ( Min( Min( PN ,MDR ) ,( ( ( ( MRS - ( DDR * Const ) ) - ( ACS * Max( Const,ACS ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe - ( RCSe - RCSe ) ) ,Max( ( RRSe + RRSe ),RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR - Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2585859599563105}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) - ( ( ACS * CRS ) * Max( Min( PN ,AMS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( MUC + ( ( DS * MUC ) + ( ( RMSe - ( MUC / DS ) ) * Min( DS ,Min( DS ,RRSe ) ) ) ) ) ) - ( ( ( ( RCSe - ( MUM * RRSe ) ) / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUC,MUM ) ),Max( RCSe,( MLU / ( CS / MLU ) ) ) ) ) ) / ( ( ( Max( MUM,Min( Max( MLU,RCSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * ( ( MUR * Min( RRSe ,DS ) ) / ( ( Min( RCSe ,MLU ) - ( MLU - RCSe ) ) - CS ) ) ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6405578849796291}, {"determining": "( ( PN * ACS ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_CPU_Server / PN ) + ( ( Max( DDR,FirstVNF_CPU_Server ) * PN ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Min( Min( ( Max( ( CS + RMSe ),RRSe ) + Min( ( MUM + CS ) ,MUR ) ) ,CS ) ,RCSe ),( ( ( CS * DS ) + DS ) + MUM ) ) / MUM ) / ( Min( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) ,( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.17808739589189543}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,( ( Const + BR ) - Min( PN ,AMS ) ) ) ) - ( Min( Min( ( PN + FirstVNF_CPU_Server ) ,MDR ) ,ACS ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( RRSe * DS ) ,MUC ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( ( ( RCSe / MUC ) / MUR ),CS ) ) / Max( Max( RRSe,MUM ),DS ) ) ,MUM ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14711131318468326}, {"determining": "( ( ( ( Min( ( ( PN - Min( PN ,MDR ) ) * ( FirstVNF_CPU / ARS ) ) ,( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) ) / Min( MRS ,ACS ) ) / MDR ) + ( CRS + FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( DS,( CS * Max( RRSe,Min( Max( RCSe,( MUC - MUC ) ) ,Min( RRSe ,DS ) ) ) ) ) - MUM ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + MLU ) + MLU ),MUC ) ) )", "obj1": 0.23818897637795275, "obj2": 0.5950203049910331}, {"determining": "( Max( Min( Max( AMS,RRS ) ,( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( ( FirstVNF_Mem_Server / Const ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( RMSe,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),( Max( Max( RRSe,DS ),RRSe ) / DS ) ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.3763715233267665}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ACS,ARS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( ( RMSe + CS ) / Max( ( ( Min( Min( MLU ,DS ) ,MLU ) / DS ) - MLU ),CS ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5287138824417845}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server + Min( ( ( MDR + MRS ) * ARS ) ,MRS ) ) )", "choosing": "( ( Max( DS,( ( DS / RCSe ) - ( MUM / ( Min( RCSe ,Min( RRSe ,RMSe ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) - ( ( ( CS * DS ) - RRSe ) * DS ) ) * ( ( Min( MLU ,MUC ) - ( ( RCSe / RCSe ) + MUC ) ) + MUR ) )", "obj1": 0.5236220472440944, "obj2": 0.2768886735995327}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( PN / Min( ( PN + CRS ) ,MRS ) ) ,( RRS - Max( ARS,ACS ) ) ) / ( MRS * Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR - ( MUR + CS ) ) + Min( MLU ,Max( ( ( RRSe * MUC ) - Min( Min( ( DS - MUM ) ,CS ) ,RMSe ) ),MUM ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5513220624511641}, {"determining": "( Max( ( Max( AMS,( FirstVNF_RAM + Min( ( FirstVNF_RAM - Const ) ,CRS ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4618353846240744}, {"determining": "Min( ( ( Max( ACS,Max( AMS,FirstVNF_RAM ) ) * ( Const / FirstVNF_RAM ) ) - FirstVNF_RAM_Server ) ,PN )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + RMSe ) ) * Min( ( MUR / MUC ) ,( Min( RCSe ,MLU ) / ( Min( RRSe ,CS ) / Max( RMSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( MUM / Max( MLU,( MUR - ( MLU - Min( RRSe ,DS ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9940944881889764, "obj2": 0.007297398801730705}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "Max( ( Min( ACS ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( ACS / AMS ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server / AMS ) * ( ( CRS * ( Const + MDR ) ) / BR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MLU - RCSe ) - RCSe ) - RMSe ) - ( DS + ( RRSe * Max( RRSe,Max( ( MUR + MUC ),( MUM / MLU ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( ( MUR * DS ) + DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08509173898946452}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.562992125984252, "obj2": 0.2452353020817945}, {"determining": "( ( ACS + PN ) - ( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ( ( Max( ARS,FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - MRS ) ,MDR ) ) * ( ( AMS * Min( MDR ,Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) / Min( ( Min( PN ,Max( MRS,MRS ) ) + DDR ) ,Min( MDR ,( MRS - Max( Min( CRS ,FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RCSe - Min( CS ,( MLU - RRSe ) ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + ( ( RMSe - ( MUM + CS ) ) + MUR ) ) ) / ( DS * MLU ) ) - Max( Min( ( MUC + Max( DS,( RMSe * ( RCSe / RMSe ) ) ) ) ,MUM ),Min( ( RCSe / ( MUR + CS ) ) ,( CS + ( MUM / MUM ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17428086956827413}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.3641732283464567, "obj2": 0.457945972031925}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem_Server ,PN ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.17125984251968504, "obj2": 0.6768452039737071}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.12007874015748031, "obj2": 0.7637515354848919}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM / ACS ) + Max( FirstVNF_Mem_Server,BR ) ) - Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUC,MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( ( MLU + Max( RRSe,MUC ) ) / MUM ),DS ) ) ) ) / ( MLU + ( ( CS + Min( RCSe ,Min( RRSe ,RRSe ) ) ) * DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7189266925208706}, {"determining": "( Max( ( ( FirstVNF_RAM * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) - Max( RRS,( PN - ( FirstVNF_CPU * DDR ) ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RRSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( MUM * MUC ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.32276572493811573}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5393700787401575, "obj2": 0.2682732671687935}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( DDR / PN ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.29970960445502703}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "Min( ( ( DDR - ( ( DDR - Max( MDR,( ACS * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ) - Max( Const,FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( Min( ( ( Max( ( DS / DS ),Min( RRSe ,RRSe ) ) - CS ) - CS ) ,( DS / DS ) ) + ( DS / Max( Max( Max( Max( CS,RCSe ),( DS + ( MUR * MUM ) ) ),DS ),CS ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07948261741320206}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( ACS ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / CS ) ) / Max( Max( Min( ( MUM * MUM ) ,RMSe ),MLU ),( ( MUM * MUR ) + DS ) ) )", "obj1": 0.8011811023622047, "obj2": 0.07377930836616874}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU * ( FirstVNF_CPU_Server + ( FirstVNF_RAM / RRS ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( ( BR / PN ) * ( ACS * AMS ) ) ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( RRSe ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.3464566929133858, "obj2": 0.4699822477081211}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + DS ),Min( ( ( MUC / ( ( DS * RCSe ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( ( DS / RCSe ),RCSe ) ) + ( RMSe + ( DS * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.90748031496063, "obj2": 0.03746494699156874}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( Max( MRS,( FirstVNF_Mem_Server + ACS ) ) + ( PN / DDR ) ) + MRS ) ) - BR ),( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) - ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe + RRSe ) - Min( CS ,RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7459895419029233}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.41732283464566927, "obj2": 0.38031670951664026}, {"determining": "( ( ( FirstVNF_RAM - Const ) / CRS ) - Max( ( ( ACS / CRS ) - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( CS + MUR ) ) + ( Min( Min( Min( Min( MLU ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / ( RRSe - MLU ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) - ( RCSe * Max( MLU,CS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.532500231998929}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU * ( FirstVNF_CPU_Server + ( FirstVNF_RAM / RRS ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( ( BR / PN ) * ( ACS * AMS ) ) ) * ( Min( Min( CRS ,Max( Min( BR ,RRS ),PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( RRSe ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( ( MUR + MUM ),RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.3464566929133858, "obj2": 0.4699822477081211}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + ( AMS * MRS ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( Max( CS,CS ) - ( ( ( MUC / MLU ) / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2854330708661417, "obj2": 0.537644131765151}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( ( RRSe - ( CS / MUM ) ) - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2795275590551181, "obj2": 0.546432183459442}, {"determining": "( Max( ( Min( Min( PN ,MDR ) ,ACS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( DS / DS ) )", "obj1": 0.49803149606299213, "obj2": 0.29358264078938767}, {"determining": "Min( ( ( MDR / DDR ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( ( ( ( Max( DS,RMSe ) + RCSe ) * MLU ) - DS ) - ( Max( ( ( RCSe - MLU ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( MLU / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.028891851929316315}, {"determining": "( ( ( BR + FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,ACS ) ) * Max( ( ( FirstVNF_Mem_Server * ( AMS + PN ) ) * ( AMS + Min( ( Min( CRS ,Max( FirstVNF_Mem,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Min( Max( ( MUM + RRSe ),MUR ) ,( MLU / DS ) ) * ( RRSe * DS ) ),Max( MUM,( MUC - CS ) ) ) + Max( DS,( ( Max( CS,MUC ) - Max( ( RCSe / ( Max( MLU,RMSe ) * MUR ) ),( ( MUM / ( MUC + RRSe ) ) + ( RCSe - MUR ) ) ) ) - Max( Min( ( ( MLU + MUR ) / ( MUM * RMSe ) ) ,RRSe ),MUR ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5654353761879637}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "( ( Max( ( ( Min( FirstVNF_Mem ,( ( DDR - FirstVNF_Mem_Server ) + MRS ) ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( PN / DDR ) + ( PN * MDR ) ) / Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) )", "choosing": "( ( MUM - Max( DS,( CS * ( RRSe + Min( DS ,( RCSe + RCSe ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( Min( MUM ,RCSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6032434669573754}, {"determining": "( ( PN * FirstVNF_Mem ) - ( Min( Min( ( Max( PN,DDR ) / PN ) ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - FirstVNF_RAM ) ) ) + BR ) ) / ( ACS - ( ACS * ( PN / MDR ) ) ) ) )", "choosing": "( ( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) - ( DS + Max( CS,Max( RRSe,Min( Max( ( RMSe + RRSe ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( Min( RMSe ,( MUM * MUM ) ),MLU ),Max( ( ( MUC - ( ( MUR / ( RCSe * RCSe ) ) + MUC ) ) / ( CS * RRSe ) ),( ( RRSe + ( CS * RMSe ) ) + MUC ) ) ) )", "obj1": 0.75, "obj2": 0.10457632102389727}, {"determining": "( Min( PN ,Max( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / ( Min( AMS ,CRS ) + BR ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * Max( ACS,( ACS / FirstVNF_CPU ) ) ) ) ) ) / ( ( ( FirstVNF_RAM / ACS ) + MDR ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( DS,( CS - ( Min( MLU ,RRSe ) / Max( CS,MUR ) ) ) ) / ( MUM + RMSe ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),DS ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7659619892451427}, {"determining": "( ( FirstVNF_RAM_Server * ( Min( BR ,FirstVNF_CPU ) - FirstVNF_CPU ) ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MUC ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( ( ( Min( Max( MUM,MLU ) ,MUM ) + MUM ) + MUR ) / Max( RRSe,DS ) ) - ( MUM / MLU ) ) / ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MUR / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49315041313457}, {"determining": "( ( ( ( FirstVNF_CPU * ( AMS + ( RRS / FirstVNF_RAM ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - ( RRS + FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + BR ) ) ) * ( Min( ( PN * MDR ) ,( FirstVNF_Mem + MDR ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Max( MUM,RCSe ),( MLU + ( MUR * Max( ( CS + Min( RCSe ,( MUC * RCSe ) ) ),MLU ) ) ) ) / ( MUC + CS ) )", "obj1": 0.47244094488188976, "obj2": 0.32890572668396667}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( ( Max( AMS,RRS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),ACS ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( ( RCSe / ( CS + MUM ) ),DS ) ) ) ) / Max( MLU,( Min( RRSe ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38925674773117563}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( AMS ,( Min( PN ,ACS ) / Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM - Const ) ) + RRS ) ,( ( Const - MDR ) * PN ) ) ) ) ) ,Max( ( ( CRS - ( PN - MDR ) ) - RRS ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUR ,MUC ) / RRSe ) / ( ( RCSe * DS ) - Max( ( ( Max( ( MUC + MLU ),MUM ) / RRSe ) * CS ),( Max( MUM,MUR ) + Max( ( DS * RRSe ),MUM ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.17268599059721892}, {"determining": "( ( Min( FirstVNF_Mem ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Max( BR,FirstVNF_RAM_Server ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / CS ) ) ) / ( ( ( ( ( MLU + DS ) + CS ) / MUM ) / DS ) / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5236192556224637}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUM - ( DS + ( CS * Max( Min( ( Min( RRSe ,RCSe ) * ( MUM - RCSe ) ) ,CS ),MUR ) ) ) ) / Max( Max( Min( ( MUM * MUM ) ,RMSe ),MLU ),( ( MUM * MUR ) + DS ) ) )", "obj1": 0.812992125984252, "obj2": 0.06854238900109101}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( Min( Max( ( ( Const - MDR ) * FirstVNF_CPU ),( CRS - FirstVNF_RAM ) ) ,Min( MRS ,( Min( BR ,RRS ) - BR ) ) ) ,Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ACS ) ) ,CRS ) ) ) ,( BR * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( MUM - MUR ) ) / ( MUC - RRSe ) ) / ( ( RCSe * CS ) - ( ( ( MUR + MUM ) + ( MUR + DS ) ) * ( MUM - ( MUR - ( Max( ( RMSe + CS ),( MUR - RRSe ) ) - CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.17313128123413118}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server * DDR ) + ( ( MRS - ( MRS / PN ) ) * PN ) ) ) ),( ACS / BR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( MUR / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( Max( ( MUR / ( MLU * MUC ) ),RRSe ) * RRSe ) ,MUC ) )", "obj1": 0.36811023622047245, "obj2": 0.4449882141722993}, {"determining": "Min( ACS ,Min( ( FirstVNF_Mem_Server / Const ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - MUR ) + Max( ( ( ( DS - ( ( Min( DS ,MLU ) - CS ) * RCSe ) ) / DS ) + RCSe ),MUC ) )", "obj1": 0.8208661417322834, "obj2": 0.06734028309878833}, {"determining": "( ( ACS * PN ) - ( Min( ( RRS / ARS ) ,Min( PN ,MDR ) ) / ( FirstVNF_CPU_Server * MRS ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( ( Min( Max( RCSe,( CS - MUM ) ) ,Min( ( DS + MLU ) ,CS ) ) * DS ) - CS ) ,( DS / DS ) ) + Min( ( ( ( ( RRSe * RMSe ) + Min( DS ,RRSe ) ) - Max( CS,( Max( MLU,MLU ) * MLU ) ) ) / ( DS * DS ) ) ,MUR ) ) )", "obj1": 0.7106299212598425, "obj2": 0.1527327792663811}, {"determining": "( ( PN * ACS ) - ( Min( Min( ( AMS / ( FirstVNF_CPU + CRS ) ) ,FirstVNF_Mem_Server ) ,( CRS + MDR ) ) / ( FirstVNF_CPU_Server * ( Const * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUM ,MUR ) / CS ) / ( Max( ( ( ( ( MUC + ( MUC - DS ) ) / Max( ( RCSe / MUM ),RCSe ) ) + ( RMSe + ( DS / MUM ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.7952755905511811, "obj2": 0.07719381287442495}], "43": [{"determining": "( ( ( ( CRS - FirstVNF_CPU ) / ACS ) * ACS ) - ( Min( ( ( RRS * DDR ) - ( MDR - MDR ) ) ,( MRS * Const ) ) / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Max( DS,RMSe ) ) + ( ( Min( ( MUC * DS ) ,( ( MUR + MLU ) / ( DS + RCSe ) ) ) * MLU ) - CS ) ) / MUR ) / ( ( RCSe / MLU ) - Max( ( RRSe + CS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ( ( BR / Const ) * Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_RAM,BR ),MRS ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ACS ) - DDR ) - FirstVNF_Mem ) - RRS ) * ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RMSe ) / MUR ) / ( DS * ( RRSe + CS ) ) ) / Max( ( RCSe / RMSe ),( Max( ( RCSe + ( MUC - ( MUR / ( MUR / RMSe ) ) ) ),( RRSe / RCSe ) ) / ( MUR + RRSe ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8202994164434512}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8415229710925695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) - ( ( ACS * CRS ) * Max( Min( PN ,AMS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( MUC + ( ( DS * MUC ) + ( ( RMSe - ( MUC / DS ) ) * Min( DS ,Min( DS ,RRSe ) ) ) ) ) ) - ( ( ( ( RCSe - ( MUM * RRSe ) ) / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUC,MUM ) ),Max( RCSe,( MLU / ( CS / MLU ) ) ) ) ) ) / ( ( ( Max( MUM,Min( Max( MLU,RCSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * ( ( MUR * Min( RRSe ,DS ) ) / ( ( Min( RCSe ,MLU ) - ( MLU - RCSe ) ) - CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4330477702396556}, {"determining": "( ( ACS * PN ) - ( ( Min( PN ,MDR ) * ( ( Max( FirstVNF_Mem,( ( ARS + CRS ) * MDR ) ) * ( Min( FirstVNF_RAM_Server ,( MDR / CRS ) ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + DS ),Min( ( MLU + ( MUC / ( Min( DS ,RCSe ) - RMSe ) ) ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( Max( MUM,CS ),RCSe ) ) + ( RMSe + ( DS * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6082677165354331, "obj2": 0.22170252467619994}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( Min( ( Min( RRSe ,RCSe ) * ( MUM - RCSe ) ) ,CS ),MUR ) ) ) ) / Max( Max( Min( ( MUM * MUM ) ,RMSe ),MLU ),( ( MUM * MUR ) + DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.15119326968594224}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,( ( Const + BR ) - Min( PN ,AMS ) ) ) ) - ( Min( Min( ( PN + FirstVNF_CPU_Server ) ,MDR ) ,ACS ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( RRSe * DS ) ,MUC ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( ( ( RCSe / MUC ) / MUR ),CS ) ) / Max( Max( RRSe,MUM ),DS ) ) ,MUM ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14711131318468326}, {"determining": "( ( ( PN / Min( ( Min( MDR ,BR ) * PN ) ,AMS ) ) * ACS ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( DDR + Min( MDR ,MDR ) ) ) ) ) ) / Min( ( FirstVNF_CPU / MDR ) ,ACS ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( RRSe / MLU ) ,MUR ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( RMSe * DS ) - ( Min( ( RCSe + ( MUM / MUM ) ) ,( ( MUC / ( RMSe - RMSe ) ) / ( MUR + CS ) ) ) - Max( RRSe,DS ) ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20400820927373708}, {"determining": "( Max( ACS,FirstVNF_Mem ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( Max( MLU,MUM ),( ( RMSe / RRSe ) + ( ( ( DS + MLU ) + ( DS + RMSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.19881889763779528, "obj2": 0.6391966058648423}, {"determining": "( ( ACS * PN ) - ( Min( Min( ( AMS / ( MRS + BR ) ) ,MDR ) ,( ( ( FirstVNF_Mem / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) * ( Min( CS ,MUC ) + ( MUC + MUC ) ) ) ) ) / ( RMSe - ( MUC * RRSe ) ) )", "obj1": 0.6791338582677166, "obj2": 0.1627667530817356}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "Max( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * ( DS + ( MUC + MUC ) ) ) ) ) / ( RMSe - Max( ( ( MUM / ( MUR - DS ) ) - RRSe ),( RMSe / ( RMSe + ( Min( RMSe ,MUM ) / CS ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39362163132959965}, {"determining": "Min( ( ( MDR / DDR ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( ( ( ( Max( DS,RMSe ) + RCSe ) * MLU ) - DS ) - ( Max( ( ( RCSe - MLU ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( MLU / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.028891851929316315}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,( Min( FirstVNF_RAM ,PN ) * ACS ) ) ) / ( MRS / ACS ) ) ,RRS ) - ( FirstVNF_Mem / Min( ACS ,RRS ) ) ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( Min( ( ( DS - CS ) - MLU ) ,Max( RMSe,RRSe ) ) + ( DS / Min( Max( Max( Max( CS,RCSe ),( DS + ( MUC * MUR ) ) ),DS ) ,CS ) ) ) )", "obj1": 0.8326771653543307, "obj2": 0.06356342488129875}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,( BR - ARS ) ) ) - ( FirstVNF_Mem_Server - ( Min( ( Min( AMS ,BR ) + BR ) ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) + DS ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Max( ( MLU / Max( MLU,( RRSe - MUM ) ) ),Max( MUM,RRSe ) ) / Min( RCSe ,MUR ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.328740157480315, "obj2": 0.4864192119524837}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( Max( MRS,( FirstVNF_Mem_Server + ACS ) ) + ( PN / DDR ) ) + MRS ) ) - BR ),( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) - ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe + RRSe ) - Min( CS ,RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7459895419029233}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( RCSe + RMSe ) ,( MUC * DS ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( ( RRSe + DS ) + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12929426148997944}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4980359232453927}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_Mem,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),( Max( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ),Min( RRS ,RRS ) ) / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) / Max( ( Min( ( Max( ( CS + DS ),Min( MLU ,Max( MUR,RCSe ) ) ) + DS ) ,MUR ) / CS ),Max( ( MLU / MUM ),RCSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6619577895696983}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUM - ( DS + ( CS * ( RRSe / Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( MUM / MUM ),RCSe ),( Min( MUR ,( MUM + DS ) ) / CS ) ) )", "obj1": 0.8818897637795275, "obj2": 0.046010816985820775}, {"determining": "( Max( ( ( Min( Min( FirstVNF_CPU ,( Const - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,MDR ) / Min( DDR ,( Const + CRS ) ) ) - ( MDR * AMS ) ),ACS ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( MUM,MUR ) - ( ( Max( MUR,( MUR + CS ) ) + ( Max( Min( MLU ,DS ),MLU ) * RMSe ) ) / Min( RCSe ,CS ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6250575335946054}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server * DDR ) + ( ( MRS - ( MRS / PN ) ) * PN ) ) ) ),( ACS / BR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( MUR / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( Max( ( MUR / ( MLU * MUC ) ),RRSe ) * RRSe ) ,MUC ) )", "obj1": 0.36811023622047245, "obj2": 0.4449882141722993}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) + ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU + ARS ) )", "choosing": "( Min( MUC ,RMSe ) / Max( Max( DS,RCSe ),Max( ( ( ( MUR * Max( DS,CS ) ) + ( Max( MLU,RRSe ) * MUC ) ) + MLU ),MUC ) ) )", "obj1": 0.25, "obj2": 0.5697002142824248}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU * ( FirstVNF_CPU_Server + ( FirstVNF_RAM / RRS ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( ( BR / PN ) * ( ( FirstVNF_CPU_Server + DDR ) * AMS ) ) ) * ( Min( Min( CRS ,Max( Min( BR ,RRS ),FirstVNF_CPU ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( RRSe + Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( ( RMSe + MUM ),RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4734416848219989}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "( ( Max( ( ( Min( FirstVNF_Mem ,( ( DDR - FirstVNF_Mem_Server ) + MRS ) ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( PN / DDR ) + ( PN * MDR ) ) / Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) )", "choosing": "( ( MUM - Max( DS,( CS * ( RRSe + Min( DS ,( RCSe + RCSe ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( Min( MUM ,RCSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6032434669573754}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem,ACS ) ) * ( ( MDR * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - Min( DS ,( ( ( ( RCSe + MUR ) * ( CS - ( MLU * CS ) ) ) / ( DS + Min( ( RRSe + MUR ) ,CS ) ) ) * Max( Min( RRSe ,MLU ),Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Min( Max( MUC,RCSe ) ,RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36571432728100917}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.562992125984252, "obj2": 0.2452353020817945}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,MDR ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + DS ),( ( MUC - ( ( MUR / ( RCSe * RCSe ) ) + MUC ) ) / ( CS * RRSe ) ) ) / MUM ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( ( DS / RCSe ),RCSe ) ) + ( RMSe + ( DS * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.8543307086614174, "obj2": 0.05767677540145473}, {"determining": "Min( ( ( ( Min( ( ARS + Min( FirstVNF_Mem ,MDR ) ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * RRSe ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.035981264748015884}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,( ( DDR - MRS ) * Min( MDR ,ARS ) ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) + FirstVNF_CPU_Server ) ) / ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Max( CRS,Const ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - AMS ) ),( ACS + ( Min( MRS ,( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ACS * AMS ) ) ) ) - PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,CS ) - ( RCSe - ( ( ( Max( ( RMSe + ( DS + RMSe ) ),MUC ) + MUC ) * MUC ) - RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6216233104497181}, {"determining": "( ( Const + MDR ) - ( Min( Min( PN ,MDR ) ,( ( ( ( MRS - ( DDR * Const ) ) - ( ACS * Max( Const,ACS ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe - ( RCSe - RCSe ) ) ,Max( ( RRSe + RRSe ),RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR - Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2585859599563105}, {"determining": "( ( PN * ACS ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_CPU_Server / PN ) + ( ( Max( DDR,FirstVNF_CPU_Server ) * PN ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Min( Min( ( Max( ( CS + RMSe ),RRSe ) + Min( ( MUM + CS ) ,MUR ) ) ,CS ) ,RCSe ),( ( ( CS * DS ) + DS ) + MUM ) ) / MUM ) / ( Min( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) ,( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.17808739589189543}, {"determining": "( ( ( Min( FirstVNF_CPU ,( Const - ( PN + ACS ) ) ) - MDR ) / Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ( ACS - FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - FirstVNF_Mem ) * ( RRS / ( FirstVNF_Mem + ( FirstVNF_CPU_Server * RRS ) ) ) ) + MDR ) ) / ( ( PN * Const ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / ( ( MUM * MUM ) + ( RMSe * CS ) ) ) - Min( ( RRSe + ( ( MUC / MUR ) * ( MUM / ( ( MUC / MUC ) / Max( ( CS / MUM ),( RRSe / MUR ) ) ) ) ) ) ,MLU ) )", "obj1": 0.5551181102362205, "obj2": 0.2524614783475612}, {"determining": "( Max( Min( ( ( Const - Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ) ) / Min( RRS ,Const ) ) ,MRS ),ACS ) - ( ( DDR / ACS ) * AMS ) )", "choosing": "( ( ( MLU / Min( ( Min( MLU ,RRSe ) + MUC ) ,Min( ( Min( CS ,( MUC / MUR ) ) + MUR ) ,RMSe ) ) ) / Min( ( CS / MUM ) ,( MUM / ( ( MLU / ( DS / RRSe ) ) / ( ( CS / MUM ) / MUR ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.697591401632469}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.3641732283464567, "obj2": 0.457945972031925}, {"determining": "( ( ( ( Min( ( ( PN - Min( PN ,MDR ) ) * ( FirstVNF_CPU / ARS ) ) ,( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) ) / Min( MRS ,ACS ) ) / MDR ) + ( CRS + FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( DS,( CS * Max( RRSe,Min( Max( RCSe,( MUC - MUC ) ) ,Min( RRSe ,DS ) ) ) ) ) - MUM ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + MLU ) + MLU ),MUC ) ) )", "obj1": 0.23818897637795275, "obj2": 0.5950203049910331}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "( Max( Min( Max( AMS,RRS ) ,( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( ( FirstVNF_Mem_Server / Const ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( RMSe,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),( Max( Max( RRSe,DS ),RRSe ) / DS ) ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.3763715233267665}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ACS,ARS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( ( RMSe + CS ) / Max( ( ( Min( Min( MLU ,DS ) ,MLU ) / DS ) - MLU ),CS ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5287138824417845}, {"determining": "( Max( ( Max( AMS,( FirstVNF_RAM + Min( ( FirstVNF_RAM - Const ) ,CRS ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4618353846240744}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.6633858267716536, "obj2": 0.17059718021256795}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( ( RRSe - ( CS / MUM ) ) - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5584803016475136}, {"determining": "Max( ( Min( ACS ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( ACS / AMS ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server / AMS ) * ( ( CRS * ( Const + MDR ) ) / BR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MLU - RCSe ) - RCSe ) - RMSe ) - ( DS + ( RRSe * Max( RRSe,Max( ( MUR + MUC ),( MUM / MLU ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( ( MUR * DS ) + DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08509173898946452}, {"determining": "( Min( PN ,Max( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / ( Min( AMS ,CRS ) + BR ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * Max( ACS,( ACS / FirstVNF_CPU ) ) ) ) ) ) / ( ( ( FirstVNF_RAM / ACS ) + MDR ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( DS,( CS - ( Min( MLU ,RRSe ) / Max( CS,MUR ) ) ) ) / ( MUM + RMSe ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),DS ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7659619892451427}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem_Server ,PN ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.17125984251968504, "obj2": 0.6768452039737071}, {"determining": "( ( ACS * PN ) - ( Min( ( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / CRS ) * ( ACS * ACS ) ) ) * Max( Min( FirstVNF_RAM_Server ,Const ),Const ) ) * MDR ) ,Max( DDR,PN ) ) / AMS ) )", "choosing": "( ( ( CS * ( RRSe + Min( ( RMSe - ( RCSe + Min( MLU ,RRSe ) ) ) ,( DS / MUM ) ) ) ) - Max( DS,( Max( Min( ( RCSe - Min( MUR ,DS ) ) ,Min( RRSe ,DS ) ),( RCSe + DS ) ) * CS ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,CS ) ) )", "obj1": 0.7204724409448819, "obj2": 0.1306625003435614}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.12007874015748031, "obj2": 0.7637515354848919}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM / ACS ) + Max( FirstVNF_Mem_Server,BR ) ) - Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUC,MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( ( MLU + Max( RRSe,MUC ) ) / MUM ),DS ) ) ) ) / ( MLU + ( ( CS + Min( RCSe ,Min( RRSe ,RRSe ) ) ) * DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7189266925208706}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( ( RRSe - ( CS / MUM ) ) - CS ) - ( ( RCSe / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5502223943418326}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.5728346456692913, "obj2": 0.23694433539328494}, {"determining": "Min( ( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) * ( Const - DDR ) ) ) + Max( ACS,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server * ACS ) ) ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * Min( ( MUC / ( DS / DS ) ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6496062992125984, "obj2": 0.19341544353807544}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + DS ),Min( ( ( MUC / ( ( DS * RCSe ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( ( DS / RCSe ),RCSe ) ) + ( RMSe + ( DS * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.90748031496063, "obj2": 0.03746494699156874}, {"determining": "( ( FirstVNF_Mem * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),FirstVNF_Mem ) ) + ( MDR * Min( AMS ,FirstVNF_CPU ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MLU / RRSe ) / MUR ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) + ( DS + ( MUC + MUC ) ) ) ) ) / Max( MUC,DS ) )", "obj1": 0.6338582677165354, "obj2": 0.19890075526365686}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MUR / CS ),( ( RMSe / RRSe ) + ( ( ( DS + MLU ) + ( DS + RMSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5098425196850394, "obj2": 0.28489132991275135}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) * ( ( ( RRS * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - FirstVNF_Mem ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( Min( RMSe ,MUC ) * Max( Min( MLU ,( MUC + MUM ) ),MUR ) ) )", "obj1": 0.44881889763779526, "obj2": 0.34703881922112434}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.41732283464566927, "obj2": 0.38031670951664026}, {"determining": "( ( ( FirstVNF_RAM - Const ) / CRS ) - Max( ( ( ACS / CRS ) - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( CS + MUR ) ) + ( Min( Min( Min( Min( MLU ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / ( RRSe - MLU ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) - ( RCSe * Max( MLU,CS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.532500231998929}, {"determining": "Min( ACS ,Min( ( FirstVNF_Mem_Server / Const ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - MUR ) + Max( ( ( ( DS - ( ( Min( DS ,MLU ) - CS ) * RCSe ) ) / DS ) + RCSe ),MUC ) )", "obj1": 0.8208661417322834, "obj2": 0.06734028309878833}, {"determining": "( Max( Min( ACS ,BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - MUM )", "obj1": 0.49803149606299213, "obj2": 0.2935503538929344}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + ( AMS * MRS ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( Max( CS,CS ) - ( ( ( MUC / MLU ) / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2854330708661417, "obj2": 0.537644131765151}, {"determining": "Min( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( DDR * FirstVNF_RAM_Server ) ) ,ACS )", "choosing": "( ( Max( ( MUM + ( ( ( CS + ( MLU - MUM ) ) * ( MUC + MUR ) ) - DS ) ),DS ) / Min( DS ,( RCSe + RMSe ) ) ) / ( Max( ( Max( DS,MUR ) / MUC ),MUC ) / MLU ) )", "obj1": 0.8011811023622047, "obj2": 0.07377272424649071}, {"determining": "( ( ( BR + FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,ACS ) ) * Max( ( ( FirstVNF_Mem_Server * ( AMS + PN ) ) * ( AMS + Min( ( Min( CRS ,Max( FirstVNF_Mem,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Min( Max( ( MUM + RRSe ),MUR ) ,( MLU / DS ) ) * ( RRSe * DS ) ),Max( MUM,( MUC - CS ) ) ) + Max( DS,( ( Max( CS,MUC ) - Max( ( RCSe / ( Max( MLU,RMSe ) * MUR ) ),( ( MUM / ( MUC + RRSe ) ) + ( RCSe - MUR ) ) ) ) - Max( Min( ( ( MLU + MUR ) / ( MUM * RMSe ) ) ,RRSe ),MUR ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5654353761879637}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( Min( ( RRS / ARS ) ,Min( PN ,MDR ) ) / ( FirstVNF_CPU_Server * MRS ) ) ) ) * ( FirstVNF_Mem_Server * CRS ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( Min( ( ( CS / MUM ) - RRSe ) ,CS ) - Max( ( ( CS / MUR ) * ( MUM + CS ) ),MLU ) ) ) / MLU ) ) )", "obj1": 0.452755905511811, "obj2": 0.3437023518062093}, {"determining": "( ( FirstVNF_RAM_Server * ( Min( BR ,FirstVNF_CPU ) - FirstVNF_CPU ) ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MUC ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( ( ( Min( Max( MUM,MLU ) ,MUM ) + MUM ) + MUR ) / Max( RRSe,DS ) ) - ( MUM / MLU ) ) / ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MUR / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49315041313457}, {"determining": "( ( ( ( FirstVNF_CPU * ( AMS + ( RRS / FirstVNF_RAM ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - ( RRS + FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + BR ) ) ) * ( Min( ( PN * MDR ) ,( FirstVNF_Mem + MDR ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Max( MUM,RCSe ),( MLU + ( MUR * Max( ( CS + Min( RCSe ,( MUC * RCSe ) ) ),MLU ) ) ) ) / ( MUC + CS ) )", "obj1": 0.47244094488188976, "obj2": 0.32890572668396667}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( ( Max( AMS,RRS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),ACS ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( ( RCSe / ( CS + MUM ) ),DS ) ) ) ) / Max( MLU,( Min( RRSe ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38925674773117563}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( ( MUR / CS ),( ( RMSe / RRSe ) + ( ( ( DS + MLU ) + ( DS + RMSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5787401574803149, "obj2": 0.23343961276033054}, {"determining": "( ( Min( FirstVNF_Mem ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Max( BR,FirstVNF_RAM_Server ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / CS ) ) ) / ( ( ( ( ( MLU + DS ) + CS ) / MUM ) / DS ) / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5236192556224637}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,DS ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.45866141732283466, "obj2": 0.33485982583323787}, {"determining": "Min( FirstVNF_Mem ,( Min( Min( ( FirstVNF_RAM / ARS ) ,Min( ( Max( FirstVNF_RAM,BR ) * Max( FirstVNF_RAM,( ARS + BR ) ) ) ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04881779249084595}, {"determining": "Min( FirstVNF_Mem ,( Min( Min( ( FirstVNF_RAM / ARS ) ,Min( ( Max( FirstVNF_RAM,BR ) * Max( FirstVNF_RAM,( ARS + BR ) ) ) ,ACS ) ) ,AMS ) - ( DDR / PN ) ) )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / RCSe ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.003806832259377578}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,DS ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.4625984251968504, "obj2": 0.3324336384590938}, {"determining": "( Max( ( ( AMS / ( Max( ARS,Const ) - Max( AMS,( FirstVNF_RAM_Server / AMS ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,( MDR + DDR ) ) - MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( ( MUC + ( MLU * MUR ) ) / DS ),RRSe ) / ( DS + MUC ) ) - Min( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUM,( RRSe + MUC ) ) ),Max( RCSe,RRSe ) ) ) ) ,( ( ( ( MLU + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( DS,( RRSe - CS ) ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4763779527559055, "obj2": 0.3165892413302117}, {"determining": "( ( PN * ACS ) - ( Min( Min( ( AMS / ( FirstVNF_CPU + CRS ) ) ,FirstVNF_Mem_Server ) ,( CRS + MDR ) ) / ( FirstVNF_CPU_Server * ( Const * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUM ,MUR ) / CS ) / ( Max( ( ( ( ( MUC + ( MUC - DS ) ) / Max( ( RCSe / MUM ),RCSe ) ) + ( RMSe + ( DS / MUM ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.7952755905511811, "obj2": 0.07719381287442495}, {"determining": "( ( ACS + PN ) - ( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ( ( Max( ARS,FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - MRS ) ,MDR ) ) * ( ( AMS * Min( MDR ,Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) / Min( ( Min( PN ,Max( MRS,MRS ) ) + DDR ) ,Min( MDR ,( MRS - Max( Min( CRS ,FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RCSe - Min( CS ,( MLU - RRSe ) ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + ( ( RMSe - ( MUM + CS ) ) + MUR ) ) ) / ( DS * MLU ) ) - Max( Min( ( MUC + Max( DS,( RMSe * ( RCSe / RMSe ) ) ) ) ,MUM ),Min( ( RCSe / ( MUR + CS ) ) ,( CS + ( MUM / MUM ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17428086956827413}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + DS ),Min( ( ( MUC / ( ( DS * RCSe ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( ( DS / RCSe ),RCSe ) ) + ( RMSe + ( DS * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.05323649404806416}, {"determining": "Max( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( AMS,RRS ) ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) * ( DS + ( MUC + MUC ) ) ) ) ) / ( RMSe - Max( ( ( MUM / ( MUR - DS ) ) - RRSe ),( RMSe / ( RMSe + ( Min( RMSe ,MUM ) / CS ) ) ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.6986104170721639}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,DDR ) + ( ( MRS - ( PN / MRS ) ) * ( ARS + RRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS / CS ) + ( DS + ( MUM + MUC ) ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),( MLU - ( ( RRSe * CS ) + RCSe ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5236220472440944, "obj2": 0.27621625161884816}, {"determining": "Min( ( Min( ( Min( Max( Max( ( ARS + FirstVNF_CPU ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( PN - AMS ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / ( Max( ( MDR + Min( AMS ,Const ) ),FirstVNF_CPU_Server ) * MRS ) ) ,AMS ) - ( ( FirstVNF_RAM + Min( ACS ,CRS ) ) + ( Const - MDR ) ) ) ,ACS )", "choosing": "( ( MUC - DS ) + ( ( ( ( ( Min( RCSe ,MUC ) / MUM ) * Min( CS ,MLU ) ) - RCSe ) / Min( ( RCSe / ( Max( ( MUM - MUR ),MUC ) / MLU ) ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.053976486855338984}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5393700787401575, "obj2": 0.2682732671687935}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,PN ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),( MLU - ( ( RRSe * CS ) + RCSe ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5196850393700787, "obj2": 0.2780681409676679}, {"determining": "( ( PN * FirstVNF_Mem ) - ( Min( Min( ( Max( PN,DDR ) / PN ) ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - FirstVNF_RAM_Server ) ) ) + BR ) ) / ( ACS - ( ACS * ( PN / MDR ) ) ) ) )", "choosing": "( ( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) - ( DS + Max( CS,Max( RRSe,Min( Max( ( RMSe + RRSe ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( Min( RMSe ,( MUM * MUM ) ),MLU ),Max( ( ( MUC - ( ( MUR / ( RCSe * RCSe ) ) + MUC ) ) / ( CS * RRSe ) ),( ( ( DS * RCSe ) + ( CS * RMSe ) ) + MUC ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.10274032222474086}], "44": [{"determining": "( ( ( Min( ( ( ( ARS / Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + ( PN + FirstVNF_RAM_Server ) ) - Min( ( MDR * PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) * MRS ) * Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / Min( DS ,Min( Min( ( MUC + MUR ) ,DS ) ,CS ) ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MLU * ( RCSe / ( MUC / ( MUR / ( RMSe / RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) / ACS ) * ACS ) - ( Min( ( ( RRS * DDR ) - ( MDR - MDR ) ) ,( MRS * Const ) ) / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( MUR * ( MUR - MUC ) ) + RCSe ) - Max( DS,RMSe ) ) + ( ( Min( ( MUC * DS ) ,( ( MUR + MLU ) / ( DS + RCSe ) ) ) * MLU ) - CS ) ) / MUR ) / ( ( RCSe / MLU ) - Max( ( RRSe + CS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * Min( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server - ( Min( ( CRS / BR ) ,FirstVNF_RAM_Server ) + BR ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - ( ( ( Min( RRSe ,RCSe ) + ( DS * MUC ) ) + MUM ) - ( ( Max( MLU,MUR ) - DS ) - RCSe ) ) ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( DS + MUC ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8171816977981369}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,Max( ACS,( MRS - ( RRS * ARS ) ) ) ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( MUC,( MUM + MUM ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8373631865037017}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,( ( Const + BR ) - Min( PN ,AMS ) ) ) ) - ( Min( Min( ( PN + FirstVNF_CPU_Server ) ,MDR ) ,ACS ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( RRSe * DS ) ,MUC ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( ( ( RCSe / MUC ) / MUR ),CS ) ) / Max( Max( RRSe,MUM ),DS ) ) ,MUM ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14711131318468326}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU * ( FirstVNF_CPU_Server + ( FirstVNF_RAM / RRS ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( ( BR / PN ) * ( ( FirstVNF_CPU_Server + DDR ) * AMS ) ) ) * ( Min( Min( CRS ,Max( Min( BR ,RRS ),FirstVNF_CPU ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( RRSe + Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( ( RMSe + MUM ),RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4734416848219989}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "( ( FirstVNF_Mem * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),FirstVNF_Mem ) ) + ( MDR * Min( AMS ,FirstVNF_CPU ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MLU / RRSe ) / MUR ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) + ( DS + ( MUC + MUC ) ) ) ) ) / Max( MUC,DS ) )", "obj1": 0.6338582677165354, "obj2": 0.19890075526365686}, {"determining": "Min( ACS ,Min( ( FirstVNF_Mem_Server / Const ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - MUR ) + Max( ( ( ( DS - ( ( Min( DS ,MLU ) - CS ) * RCSe ) ) / DS ) + RCSe ),MUC ) )", "obj1": 0.8208661417322834, "obj2": 0.06734028309878833}, {"determining": "( ( ACS * PN ) - ( Min( Min( ( AMS / ( MRS + BR ) ) ,MDR ) ,( ( ( FirstVNF_Mem / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) * ( Min( CS ,MUC ) + ( MUC + MUC ) ) ) ) ) / ( RMSe - ( MUC * RRSe ) ) )", "obj1": 0.6791338582677166, "obj2": 0.1627667530817356}, {"determining": "Min( ( ( MDR / DDR ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( ( ( ( Max( DS,RMSe ) + RCSe ) * MLU ) - DS ) - ( Max( ( ( RCSe - MLU ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( MLU / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.028891851929316315}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,( BR - ARS ) ) ) - ( FirstVNF_Mem_Server - ( Min( ( Min( AMS ,BR ) + BR ) ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) + DS ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Max( ( MLU / Max( MLU,( RRSe - MUM ) ) ),Max( MUM,RRSe ) ) / Min( RCSe ,MUR ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.328740157480315, "obj2": 0.4864192119524837}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( Max( MRS,( FirstVNF_Mem_Server + ACS ) ) + ( PN / DDR ) ) + MRS ) ) - BR ),( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) - ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe + RRSe ) - Min( CS ,RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7459895419029233}, {"determining": "Min( ( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * ( ( FirstVNF_RAM + DDR ) * ( Const - DDR ) ) ) + Max( ACS,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server * ACS ) ) ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * Min( ( MUC / ( DS / DS ) ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.6496062992125984, "obj2": 0.19341544353807544}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5393700787401575, "obj2": 0.2682732671687935}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4980359232453927}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_Mem,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),( Max( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ),Min( RRS ,RRS ) ) / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) / Max( ( Min( ( Max( ( CS + DS ),Min( MLU ,Max( MUR,RCSe ) ) ) + DS ) ,MUR ) / CS ),Max( ( MLU / MUM ),RCSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6619577895696983}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ARS,ACS ) ) ) / BR ) ) + ( AMS * MRS ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( Max( CS,CS ) - ( ( ( MUC / MLU ) / ( CS - CS ) ) / DS ) ) ) / MLU ) ) )", "obj1": 0.2854330708661417, "obj2": 0.537644131765151}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,( Min( FirstVNF_RAM ,PN ) * ACS ) ) ) / ( MRS / ACS ) ) ,RRS ) - ( FirstVNF_Mem / Min( ACS ,RRS ) ) ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( Min( ( ( DS - CS ) - MLU ) ,Max( RMSe,RRSe ) ) + ( DS / Min( Max( Max( Max( CS,RCSe ),( DS + ( MUC * MUR ) ) ),DS ) ,CS ) ) ) )", "obj1": 0.8326771653543307, "obj2": 0.06356342488129875}, {"determining": "Min( ( FirstVNF_CPU_Server * Max( DDR,CRS ) ) ,( Min( ( Min( ( ( PN - MDR ) * FirstVNF_CPU ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / ( MRS + ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe - MUR ) / ( CS / MUM ) )", "obj1": 0.8799212598425197, "obj2": 0.045629490696726366}, {"determining": "( Max( ( ( Min( Min( FirstVNF_CPU ,( Const - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,MDR ) / Min( DDR ,( Const + CRS ) ) ) - ( MDR * AMS ) ),ACS ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( MUM,MUR ) - ( ( Max( MUR,( MUR + CS ) ) + ( Max( Min( MLU ,DS ),MLU ) * RMSe ) ) / Min( RCSe ,CS ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6250575335946054}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server * DDR ) + ( ( MRS - ( MRS / PN ) ) * PN ) ) ) ),( ACS / BR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( MUR / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( Max( ( MUR / ( MLU * MUC ) ),RRSe ) * RRSe ) ,MUC ) )", "obj1": 0.36811023622047245, "obj2": 0.4449882141722993}, {"determining": "( Max( ( Max( AMS,( FirstVNF_RAM + Min( ( FirstVNF_RAM - Const ) ,CRS ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4618353846240744}, {"determining": "Min( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( DDR * FirstVNF_RAM_Server ) ) ,ACS )", "choosing": "( ( Max( ( MUM + ( ( ( CS + ( MLU - MUM ) ) * ( MUC + MUR ) ) - DS ) ),DS ) / Min( DS ,( RCSe + RMSe ) ) ) / ( Max( ( Max( DS,MUR ) / MUC ),MUC ) / MLU ) )", "obj1": 0.8011811023622047, "obj2": 0.07377272424649071}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) + ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU + ARS ) )", "choosing": "( Min( MUC ,RMSe ) / Max( Max( DS,RCSe ),Max( ( ( ( MUR * Max( DS,CS ) ) + ( Max( MLU,RRSe ) * MUC ) ) + MLU ),MUC ) ) )", "obj1": 0.25, "obj2": 0.5697002142824248}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( Min( ( Min( RRSe ,RCSe ) * ( MUM - RCSe ) ) ,CS ),MUR ) ) ) ) / Max( Max( Min( ( MUM * MUM ) ,RMSe ),MLU ),( ( MUM * MUR ) + DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.15119326968594224}, {"determining": "( Min( Max( ( ( Max( FirstVNF_Mem,( Const / ( ARS * BR ) ) ) / Max( ACS,( MRS - ( RRS * ARS ) ) ) ) / Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,BR ) ) ),( FirstVNF_RAM + FirstVNF_RAM ) ) ,DDR ) / ( Const + ( FirstVNF_CPU_Server - Max( ( Min( MDR ,ACS ) / Const ),DDR ) ) ) )", "choosing": "Min( Max( Min( Max( MUM,MLU ) ,CS ),MUC ) ,( RRSe * ( MUC / ( MUC - ( MUM + Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5211000159507205}, {"determining": "( Max( ACS,( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( ( ( ACS + CRS ) / FirstVNF_CPU ) * CRS ) + BR ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,( MUC + RRSe ) ) ) ) ) ) ) / Max( MLU,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS - MUM ) ) ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.3967707376079904}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem,ACS ) ) * ( ( MDR * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - Min( DS ,( ( ( ( RCSe + MUR ) * ( CS - ( MLU * CS ) ) ) / ( DS + Min( ( RRSe + MUR ) ,CS ) ) ) * Max( Min( RRSe ,MLU ),Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Min( Max( MUC,RCSe ) ,RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36571432728100917}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * Min( ( MUC / ( DS / DS ) ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.05754332013557143}, {"determining": "( ( ACS * PN ) - ( ( Min( PN ,MDR ) * ( ( Max( FirstVNF_Mem,( ( ARS + CRS ) * MDR ) ) * ( Min( FirstVNF_RAM_Server ,( MDR / CRS ) ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + DS ),Min( ( MLU + ( MUC / ( Min( DS ,RCSe ) - RMSe ) ) ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( Max( MUM,CS ),RCSe ) ) + ( RMSe + ( DS * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6082677165354331, "obj2": 0.22170252467619994}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08509173898946452}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.12007874015748031, "obj2": 0.7637515354848919}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,( ( DDR - MRS ) * Min( MDR ,ARS ) ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) + FirstVNF_CPU_Server ) ) / ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Max( CRS,Const ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - AMS ) ),( ACS + ( Min( MRS ,( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ACS * AMS ) ) ) ) - PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,CS ) - ( RCSe - ( ( ( Max( ( RMSe + ( DS + RMSe ) ),MUC ) + MUC ) * MUC ) - RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6216233104497181}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "( ( PN * ACS ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_CPU_Server / PN ) + ( ( Max( DDR,FirstVNF_CPU_Server ) * PN ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Min( Min( ( Max( ( CS + RMSe ),RRSe ) + Min( ( MUM + CS ) ,MUR ) ) ,CS ) ,RCSe ),( ( ( CS * DS ) + DS ) + MUM ) ) / MUM ) / ( Min( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) ,( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.17808739589189543}, {"determining": "( Max( Min( ( ( Const - Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ) ) / Min( RRS ,Const ) ) ,MRS ),ACS ) - ( ( DDR / ACS ) * AMS ) )", "choosing": "( ( ( MLU / Min( ( Min( MLU ,RRSe ) + MUC ) ,Min( ( Min( CS ,( MUC / MUR ) ) + MUR ) ,RMSe ) ) ) / Min( ( CS / MUM ) ,( MUM / ( ( MLU / ( DS / RRSe ) ) / ( ( CS / MUM ) / MUR ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.697591401632469}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.3641732283464567, "obj2": 0.457945972031925}, {"determining": "( ( ( ( Min( ( ( PN - Min( PN ,MDR ) ) * ( FirstVNF_CPU / ARS ) ) ,( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) ) / Min( MRS ,ACS ) ) / MDR ) + ( CRS + FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( DS,( CS * Max( RRSe,Min( Max( RCSe,( MUC - MUC ) ) ,Min( RRSe ,DS ) ) ) ) ) - MUM ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + MLU ) + MLU ),MUC ) ) )", "obj1": 0.23818897637795275, "obj2": 0.5950203049910331}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "( Max( Min( Max( AMS,RRS ) ,( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( ( FirstVNF_Mem_Server / Const ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( RMSe,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),( Max( Max( RRSe,DS ),RRSe ) / DS ) ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.3763715233267665}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( BR + Min( ( Max( Const,MRS ) / CRS ) ,FirstVNF_RAM_Server ) ) ) ),ARS ) - ( FirstVNF_CPU_Server * Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM - ( DS * ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / ( ( ( ( ( MUM * ( DS * MUM ) ) + RRSe ) * ( ( MUR * MUM ) * ( MUR + ( Min( MLU ,MUC ) + RCSe ) ) ) ) / ( MUC - MUM ) ) - MLU ) )", "obj1": 0.3838582677165354, "obj2": 0.4246984983018075}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ACS,ARS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( ( RMSe + CS ) / Max( ( ( Min( Min( MLU ,DS ) ,MLU ) / DS ) - MLU ),CS ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5287138824417845}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,DS ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.30079467885768496}, {"determining": "( ( ( ( FirstVNF_CPU * ( AMS + ( RRS / FirstVNF_RAM ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - ( RRS + FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + BR ) ) ) * ( Min( ( PN * MDR ) ,( FirstVNF_Mem + MDR ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Max( MUM,RCSe ),( MLU + ( MUR * Max( ( CS + Min( RCSe ,( MUC * RCSe ) ) ),MLU ) ) ) ) / ( MUC + CS ) )", "obj1": 0.47244094488188976, "obj2": 0.32890572668396667}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,PN ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),( MLU - ( ( RRSe * CS ) + RCSe ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5236220472440944, "obj2": 0.27533302154961303}, {"determining": "( ( ACS * PN ) - ( Min( Min( ( AMS / ( MRS + BR ) ) ,MDR ) ,( ( ( FirstVNF_Mem / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) * ( Min( CS ,MUC ) + ( MUC + MUC ) ) ) ) ) / ( RMSe - ( MUC * RRSe ) ) )", "obj1": 0.7933070866141733, "obj2": 0.08504272564837012}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( Max( AMS,PN ) + Max( CRS,PN ) ) ) ) ) ) / Max( Min( Min( ACS ,ARS ) ,( Const / MRS ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Max( ( RMSe / RMSe ),( RRSe * MUR ) ) ,( Max( RCSe,RRSe ) - MUM ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.16948246460483804}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) - ( ( ACS * CRS ) * Max( Min( PN ,AMS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( MUC + ( ( DS * MUC ) + ( ( RMSe - ( MUC / DS ) ) * Min( DS ,Min( DS ,RRSe ) ) ) ) ) ) - ( ( ( ( RCSe - ( MUM * RRSe ) ) / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUC,MUM ) ),Max( RCSe,( MLU / ( CS / MLU ) ) ) ) ) ) / ( ( ( Max( MUM,Min( Max( MLU,RCSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * ( ( MUR * Min( RRSe ,DS ) ) / ( ( Min( RCSe ,MLU ) - ( MLU - RCSe ) ) - CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4330477702396556}, {"determining": "Max( ( Min( ACS ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( ACS / AMS ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server / AMS ) * ( ( CRS * ( Const + MDR ) ) / BR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MLU - RCSe ) - RCSe ) - RMSe ) - ( DS + ( RRSe * Max( RRSe,Max( ( MUR + MUC ),( MUM / MLU ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( ( MUR * DS ) + DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,( FirstVNF_RAM / DDR ) ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( MRS / Const ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( CS * RRSe ) / CS ) ,Max( MUC,RMSe ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( RMSe * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,( RRSe / DS ) ) ) )", "obj1": 0.594488188976378, "obj2": 0.22273487339302916}, {"determining": "( Min( PN ,Max( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / ( Min( AMS ,CRS ) + BR ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * Max( ACS,( ACS / FirstVNF_CPU ) ) ) ) ) ) / ( ( ( FirstVNF_RAM / ACS ) + MDR ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / ( ( Max( DS,( CS - ( Min( MLU ,RRSe ) / Max( CS,MUR ) ) ) ) / ( MUM + RMSe ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),DS ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7659619892451427}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( ( Const + MDR ) - ( Min( Min( PN ,MDR ) ,( ( ( ( MRS - ( DDR * Const ) ) - ( ACS * Max( Const,ACS ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe - ( RCSe - RCSe ) ) ,Max( ( RRSe + RRSe ),RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR - Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2585859599563105}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem_Server ,PN ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe - ( DS + ( CS * Max( Max( ( RRSe - ( DS * RMSe ) ),RCSe ),Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.17125984251968504, "obj2": 0.6768452039737071}, {"determining": "( ( ACS * PN ) - ( Min( ( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / CRS ) * ( ACS * ACS ) ) ) * Max( Min( FirstVNF_RAM_Server ,Const ),Const ) ) * MDR ) ,Max( DDR,PN ) ) / AMS ) )", "choosing": "( ( ( CS * ( RRSe + Min( ( RMSe - ( RCSe + Min( MLU ,RRSe ) ) ) ,( DS / MUM ) ) ) ) - Max( DS,( Max( Min( ( RCSe - Min( MUR ,DS ) ) ,Min( RRSe ,DS ) ),( RCSe + DS ) ) * CS ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,CS ) ) )", "obj1": 0.7204724409448819, "obj2": 0.1306625003435614}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM / ACS ) + Max( FirstVNF_Mem_Server,BR ) ) - Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUC,MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( ( MLU + Max( RRSe,MUC ) ) / MUM ),DS ) ) ) ) / ( MLU + ( ( CS + Min( RCSe ,Min( RRSe ,RRSe ) ) ) * DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7189266925208706}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( ( RRS - Max( ARS,ACS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( CS,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.1968503937007874, "obj2": 0.648704433657865}, {"determining": "( Max( ( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( CS / MUM ) / ( RCSe + RMSe ) ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUM,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( DS,( RRSe - CS ) ) ) - ( DS * MUC ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.31177001590421816}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.5728346456692913, "obj2": 0.23694433539328494}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MUR / CS ),( ( RMSe / RRSe ) + ( ( ( DS + MLU ) + ( DS + RMSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5098425196850394, "obj2": 0.28489132991275135}, {"determining": "( ( Max( ( ( Min( FirstVNF_Mem ,( ( DDR - FirstVNF_Mem_Server ) + MRS ) ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( PN / DDR ) + ( PN * MDR ) ) / Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) )", "choosing": "( ( MUM - Max( DS,( CS * ( RRSe + Min( DS ,( RCSe + RCSe ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( Min( MUM ,RCSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6032434669573754}, {"determining": "( ( PN * FirstVNF_Mem ) - ( Min( Min( ( Max( PN,DDR ) / PN ) ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) ) + BR ) ) / ( ACS - ( ACS * ( PN / MDR ) ) ) ) )", "choosing": "( ( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) - ( DS + Max( CS,Max( RRSe,Min( Max( ( RMSe + RRSe ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( Min( RMSe ,( MUM * MUM ) ),MLU ),Max( ( ( MUC - ( ( MUR / ( RCSe * RCSe ) ) + MUC ) ) / ( CS * RRSe ) ),( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) + MUC ) ) ) )", "obj1": 0.7480314960629921, "obj2": 0.1058099714030051}, {"determining": "Min( Max( ARS,Const ) ,( FirstVNF_Mem_Server / Min( MRS ,DDR ) ) )", "choosing": "( ( MLU + ( ( RRSe + Min( ( CS / ( RMSe / MUM ) ) ,MUM ) ) - DS ) ) / ( Max( ( MUM / RCSe ),MUR ) * ( MUM / ( ( MLU * MUC ) - Max( ( MUR / MUM ),DS ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09258496368481155}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + DS ),Min( ( ( MUC / ( ( DS * RCSe ) - RMSe ) ) + MLU ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( ( DS / RCSe ),RCSe ) ) + ( RMSe + ( DS * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.90748031496063, "obj2": 0.03746494699156874}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( RCSe + RRSe ) - Min( CS ,RCSe ) )", "obj1": 0.7401574803149606, "obj2": 0.12248138200407545}, {"determining": "( Max( ( ( AMS / ( Max( ARS,Const ) - Max( AMS,( FirstVNF_RAM_Server / AMS ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,( MDR + DDR ) ) - MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( ( MUC + ( MLU * MUR ) ) / DS ),RRSe ) / ( DS + MUC ) ) - Min( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUM,( RRSe + MUC ) ) ),Max( RCSe,RRSe ) ) ) ) ,( ( ( ( MLU + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( DS,( RRSe - CS ) ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4763779527559055, "obj2": 0.3165892413302117}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.41732283464566927, "obj2": 0.38031670951664026}, {"determining": "( ( ( PN / Min( ( Min( MDR ,BR ) * PN ) ,AMS ) ) * ACS ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( DDR + Min( MDR ,MDR ) ) ) ) ) ) / Min( ( FirstVNF_CPU / MDR ) ,ACS ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( RRSe / MLU ) ,MUR ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( RMSe * DS ) - ( Min( ( RCSe + ( MUM / MUM ) ) ,( ( MUC / ( RMSe - RMSe ) ) / ( MUR + CS ) ) ) - Max( RRSe,DS ) ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20400820927373708}, {"determining": "( ( ( FirstVNF_RAM - Const ) / CRS ) - Max( ( ( ACS / CRS ) - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( CS + MUR ) ) + ( Min( Min( Min( Min( MLU ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / ( RRSe - MLU ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) - ( RCSe * Max( MLU,CS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.532500231998929}, {"determining": "( Min( Max( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / ( Min( AMS ,CRS ) + BR ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( ( ( FirstVNF_RAM / ACS ) + MDR ) - ( DDR / PN ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUR * Max( DS,RCSe ) ) ) * DS ) ) / Min( ( MUC / MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),DS ) ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.012988233466377805}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( ( MRS + MRS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / ( ( ( RRSe / CS ) - DS ) + MUC ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,MUM ) ,MUM ) ) ) )", "obj1": 0.6122047244094488, "obj2": 0.20759422604687452}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "Min( ( Min( ( Min( Max( Max( ( ARS + FirstVNF_CPU ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( PN - AMS ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / ( Max( ( MDR + Min( AMS ,Const ) ),FirstVNF_CPU_Server ) * MRS ) ) ,AMS ) - ( ( FirstVNF_RAM + Min( ACS ,CRS ) ) + ( Const - MDR ) ) ) ,ACS )", "choosing": "( ( MUC - DS ) + ( ( ( ( ( Min( RCSe ,MUC ) / MUM ) * Min( CS ,MLU ) ) - RCSe ) / Min( ( RCSe / ( Max( ( MUM - MUR ),MUC ) / MLU ) ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.053976486855338984}, {"determining": "( Max( Min( ACS ,BR ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - MUM )", "obj1": 0.49803149606299213, "obj2": 0.2935503538929344}, {"determining": "( ( ( BR + FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,ACS ) ) * Max( ( ( FirstVNF_Mem_Server * ( AMS + PN ) ) * ( AMS + Min( ( Min( CRS ,Max( FirstVNF_Mem,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Min( Max( ( MUM + RRSe ),MUR ) ,( MLU / DS ) ) * ( RRSe * DS ) ),Max( MUM,( MUC - CS ) ) ) + Max( DS,( ( Max( CS,MUC ) - Max( ( RCSe / ( Max( MLU,RMSe ) * MUR ) ),( ( MUM / ( MUC + RRSe ) ) + ( RCSe - MUR ) ) ) ) - Max( Min( ( ( MLU + MUR ) / ( MUM * RMSe ) ) ,RRSe ),MUR ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5654353761879637}, {"determining": "( ( FirstVNF_RAM_Server * ( Min( BR ,FirstVNF_CPU ) - FirstVNF_CPU ) ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MUC ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( ( ( Min( Max( MUM,MLU ) ,MUM ) + MUM ) + MUR ) / Max( RRSe,DS ) ) - ( MUM / MLU ) ) / ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MUR / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49315041313457}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.687007874015748, "obj2": 0.1524491374145042}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( ( Max( AMS,RRS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),ACS ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( ( RCSe / ( CS + MUM ) ),DS ) ) ) ) / Max( MLU,( Min( RRSe ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38925674773117563}, {"determining": "( ( Min( FirstVNF_Mem ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Max( BR,FirstVNF_RAM_Server ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( CS - CS ) - ( ( RCSe / ( CS - CS ) ) / CS ) ) ) / ( ( ( ( ( MLU + DS ) + CS ) / MUM ) / DS ) / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5236192556224637}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.562992125984252, "obj2": 0.2452353020817945}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( RCSe + RMSe ) ,( MUC * DS ) ) * Min( ( MUC / MUR ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( ( RRSe + DS ) + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( RMSe - MUC ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.7322834645669292, "obj2": 0.1283387933639795}, {"determining": "( ( PN * FirstVNF_Mem ) - ( Min( Min( ( Max( PN,DDR ) / PN ) ,MDR ) ,( ( FirstVNF_RAM / Max( ACS,( DDR - FirstVNF_RAM_Server ) ) ) + BR ) ) / ( ACS - ( ACS * ( PN / MDR ) ) ) ) )", "choosing": "( ( ( Max( Min( RRSe ,MUR ),RCSe ) * MUR ) - ( DS + Max( CS,Max( RRSe,Min( Max( ( RMSe + RRSe ),RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( Min( RMSe ,( MUM * MUM ) ),MLU ),Max( ( ( MUC - ( ( MUR / ( RCSe * RCSe ) ) + MUC ) ) / ( CS * RRSe ) ),( ( ( DS * RCSe ) + ( CS * RMSe ) ) + MUC ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.10274032222474086}, {"determining": "( ( ACS + PN ) - ( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ( ( Max( ARS,FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - MRS ) ,MDR ) ) * ( ( AMS * Min( MDR ,Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) / Min( ( Min( PN ,Max( MRS,MRS ) ) + DDR ) ,Min( MDR ,( MRS - Max( Min( CRS ,FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RCSe - Min( CS ,( MLU - RRSe ) ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + ( ( RMSe - ( MUM + CS ) ) + MUR ) ) ) / ( DS * MLU ) ) - Max( Min( ( MUC + Max( DS,( RMSe * ( RCSe / RMSe ) ) ) ) ,MUM ),Min( ( RCSe / ( MUR + CS ) ) ,( CS + ( MUM / MUM ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17428086956827413}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,DS ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.4625984251968504, "obj2": 0.3324336384590938}, {"determining": "Min( FirstVNF_Mem ,( Min( Min( ( FirstVNF_RAM / ARS ) ,Min( ( Max( FirstVNF_RAM,BR ) * Max( FirstVNF_RAM,( ARS + BR ) ) ) ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04881779249084595}, {"determining": "( ( PN * ACS ) - ( Min( Min( ( AMS / ( FirstVNF_CPU + CRS ) ) ,FirstVNF_Mem_Server ) ,( CRS + MDR ) ) / ( FirstVNF_CPU_Server * ( Const * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUM ,MUR ) / CS ) / ( Max( ( ( ( ( MUC + ( MUC - DS ) ) / Max( ( RCSe / MUM ),RCSe ) ) + ( RMSe + ( DS / MUM ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.7952755905511811, "obj2": 0.07719381287442495}, {"determining": "Min( ( ( ( Min( ( ARS + Min( FirstVNF_Mem ,Min( PN ,MDR ) ) ) ,( Const - DDR ) ) / Min( MRS ,ACS ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * RRSe ) ,( RCSe + RMSe ) ) * Min( ( MUC / MUR ) ,Max( ( DS / RCSe ),RCSe ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03460148886961941}], "45": [{"determining": "( ( FirstVNF_Mem / ARS ) * ( FirstVNF_CPU_Server + ( ( DDR / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ACS ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / Min( MLU ,( Min( ( RRSe + ( Max( MLU,( MLU / RMSe ) ) * CS ) ) ,MUR ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( ( ARS / Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + ( PN + FirstVNF_RAM_Server ) ) - Min( ( MDR * PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) * MRS ) * Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / Min( DS ,Min( Min( ( MUC + MUR ) ,DS ) ,CS ) ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MLU * ( RCSe / ( MUC / ( MUR / ( RMSe / RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,Max( ACS,( MRS - ( RRS * ARS ) ) ) ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( MUC,( MUM + MUM ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8373631865037017}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( ( ( FirstVNF_RAM + ( ARS + Max( Const,( ( MRS - Const ) - FirstVNF_RAM_Server ) ) ) ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) + FirstVNF_RAM ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( PN + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * ( MUC - ( ( CS / MUM ) / ( RMSe / MUC ) ) ) ),( RRSe / RCSe ) ) / Max( ( RCSe - Max( MUM,MLU ) ),( MUM + Min( ( ( RMSe / DS ) * MUR ) ,( MUM - ( RRSe + RMSe ) ) ) ) ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8126349739618789}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,( ( Const + BR ) - Min( PN ,AMS ) ) ) ) - ( Min( Min( ( PN + FirstVNF_CPU_Server ) ,MDR ) ,ACS ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( ( MUM * MLU ) + ( Min( ( RRSe * DS ) ,MUC ) + Min( ( Max( ( Max( RMSe,MLU ) + Min( DS ,RRSe ) ),Max( ( ( RCSe / MUC ) / MUR ),CS ) ) / Max( Max( RRSe,MUM ),DS ) ) ,MUM ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14711131318468326}, {"determining": "( ( ( ( Min( Min( CRS ,FirstVNF_RAM ) ,ACS ) / Min( ( ( PN - Max( MRS,MRS ) ) * ( ( MDR / PN ) + FirstVNF_CPU ) ) ,( ( ( AMS + FirstVNF_RAM_Server ) / ( ARS * MDR ) ) / ( Max( FirstVNF_CPU_Server,MDR ) * FirstVNF_RAM ) ) ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( DS,( CS / Max( RRSe,Min( MUM ,( RMSe + RMSe ) ) ) ) ) - MUM ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( RMSe - ( MUM + CS ) ) + MUR ) + MLU ) + MLU ),MUC ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5546823319561044}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Max( ( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_Mem_Server - ( Min( Max( DDR,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUC + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Min( Max( RMSe,MLU ) ,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5205925666014279}, {"determining": "( Max( ( ( Min( Min( FirstVNF_CPU ,( Const - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,MDR ) / Min( DDR ,( Const + CRS ) ) ) - ( MDR * AMS ) ),ACS ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( MUM,MUR ) - ( ( Max( MUR,( MUR + CS ) ) + ( Max( Min( MLU ,DS ),MLU ) * RMSe ) ) / Min( RCSe ,CS ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6250575335946054}, {"determining": "( ( Const + MDR ) - ( Min( Min( PN ,MDR ) ,( ( ( ( MRS - ( DDR * Const ) ) - ( ACS * Max( Const,ACS ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe - ( RCSe - RCSe ) ) ,Max( ( RRSe + RRSe ),RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR - Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2585859599563105}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( ( RRS - Max( ARS,ACS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( CS,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.1968503937007874, "obj2": 0.648704433657865}, {"determining": "( ( FirstVNF_Mem * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),FirstVNF_Mem ) ) + ( MDR * Min( AMS ,FirstVNF_CPU ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MLU / RRSe ) / MUR ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) + ( DS + ( MUC + MUC ) ) ) ) ) / Max( MUC,DS ) )", "obj1": 0.6338582677165354, "obj2": 0.19890075526365686}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.562992125984252, "obj2": 0.2452353020817945}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * Min( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server - ( Min( ( CRS / BR ) ,FirstVNF_RAM_Server ) + BR ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - ( ( ( Min( RRSe ,RCSe ) + ( DS * MUC ) ) + MUM ) - ( ( Max( MLU,MUR ) - DS ) - RCSe ) ) ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( DS + MUC ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8171816977981369}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4980359232453927}, {"determining": "Min( ACS ,Min( ( FirstVNF_Mem_Server / Const ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - MUR ) + Max( ( ( ( DS - ( ( Min( DS ,MLU ) - CS ) * RCSe ) ) / DS ) + RCSe ),MUC ) )", "obj1": 0.8208661417322834, "obj2": 0.06734028309878833}, {"determining": "( Max( Min( ( ( Const - Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ) ) / Min( RRS ,Const ) ) ,MRS ),ACS ) - ( ( DDR / ACS ) * AMS ) )", "choosing": "( ( ( MLU / Min( ( Min( MLU ,RRSe ) + MUC ) ,Min( ( Min( CS ,( MUC / MUR ) ) + MUR ) ,RMSe ) ) ) / Min( ( CS / MUM ) ,( MUM / ( ( MLU / ( DS / RRSe ) ) / ( ( CS / MUM ) / MUR ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.697591401632469}, {"determining": "( ( ACS * PN ) - ( Min( Min( ( AMS / ( MRS + BR ) ) ,MDR ) ,( ( ( FirstVNF_Mem / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) * RCSe ) - ( DS + ( Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) * ( Min( CS ,MUC ) + ( MUC + MUC ) ) ) ) ) / ( RMSe - ( MUC * RRSe ) ) )", "obj1": 0.6791338582677166, "obj2": 0.1627667530817356}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( Max( MRS,( FirstVNF_Mem_Server + ACS ) ) + ( PN / DDR ) ) + MRS ) ) - BR ),( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) - ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe + RRSe ) - Min( CS ,RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7459895419029233}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.6437007874015748, "obj2": 0.18517079802793998}, {"determining": "( ( ( BR + FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,ACS ) ) * Max( ( ( FirstVNF_Mem_Server * ( AMS + PN ) ) * ( AMS + Min( ( Min( CRS ,Max( FirstVNF_Mem,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Min( Max( ( MUM + RRSe ),MUR ) ,( MLU / DS ) ) * ( RRSe * DS ) ),Max( MUM,( MUC - CS ) ) ) + Max( DS,( ( Max( CS,MUC ) - Max( ( RCSe / ( Max( MLU,RMSe ) * MUR ) ),( ( MUM / ( MUC + RRSe ) ) + ( RCSe - MUR ) ) ) ) - Max( Min( ( ( MLU + MUR ) / ( MUM * RMSe ) ) ,RRSe ),MUR ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5654353761879637}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MUR / CS ),( ( RMSe / RRSe ) + ( ( ( DS + MLU ) + ( DS + RMSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5098425196850394, "obj2": 0.28489132991275135}, {"determining": "Min( ( FirstVNF_CPU_Server * Max( DDR,CRS ) ) ,( Min( ( Min( ( ( PN - MDR ) * FirstVNF_CPU ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / ( MRS + ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe - MUR ) / ( CS / MUM ) )", "obj1": 0.8799212598425197, "obj2": 0.045629490696726366}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( ( Max( FirstVNF_Mem_Server,BR ) - Min( PN ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUM,( CS / MUM ) ),Max( ( ( ( MUR * ( DS / RCSe ) ) + RRSe ) + ( DS / Max( DS,CS ) ) ),MUC ) ) / ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.34939227984429655}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server * DDR ) + ( ( MRS - ( MRS / PN ) ) * PN ) ) ) ),( ACS / BR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( MUR / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( Max( ( MUR / ( MLU * MUC ) ),RRSe ) * RRSe ) ,MUC ) )", "obj1": 0.36811023622047245, "obj2": 0.4449882141722993}, {"determining": "( Max( ( Max( AMS,( FirstVNF_RAM + Min( ( FirstVNF_RAM - Min( FirstVNF_RAM ,ARS ) ) ,CRS ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MUR ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( Min( RMSe ,( MUR - CS ) ) / ( ( ( RCSe + ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.4613056070726891}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) + ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU + ARS ) )", "choosing": "( Min( MUC ,RMSe ) / Max( Max( DS,RCSe ),Max( ( ( ( MUR * Max( DS,CS ) ) + ( Max( MLU,RRSe ) * MUC ) ) + MLU ),MUC ) ) )", "obj1": 0.25, "obj2": 0.5697002142824248}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( Min( ( Min( RRSe ,RCSe ) * ( MUM - RCSe ) ) ,CS ),MUR ) ) ) ) / Max( Max( Min( ( MUM * MUM ) ,RMSe ),MLU ),( ( MUM * MUR ) + DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.15119326968594224}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ACS,ARS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( ( RMSe + CS ) / Max( ( ( Min( Min( MLU ,DS ) ,MLU ) / DS ) - MLU ),CS ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5287138824417845}, {"determining": "Min( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( DDR * FirstVNF_RAM_Server ) ) ,ACS )", "choosing": "( ( Max( ( MUM + ( ( ( CS + ( MLU - MUM ) ) * ( MUC + MUR ) ) - DS ) ),DS ) / Min( DS ,( RCSe + RMSe ) ) ) / ( Max( ( Max( DS,MUR ) / MUC ),MUC ) / MLU ) )", "obj1": 0.8011811023622047, "obj2": 0.07377272424649071}, {"determining": "( ( ACS * PN ) - ( ( Min( PN ,MDR ) * ( ( Max( FirstVNF_Mem,( ( ARS + CRS ) * MDR ) ) * ( Min( FirstVNF_RAM_Server ,( MDR / CRS ) ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + DS ),Min( ( MLU + ( MUC / ( Min( DS ,RCSe ) - RMSe ) ) ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( Max( MUM,CS ),RCSe ) ) + ( RMSe + ( DS * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6082677165354331, "obj2": 0.22170252467619994}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( Max( FirstVNF_RAM,BR ) ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / MLU ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( MUM,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.45866141732283466, "obj2": 0.3392545165233785}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,PN ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),( MLU - ( ( RRSe * CS ) + RCSe ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5236220472440944, "obj2": 0.27533302154961303}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.3641732283464567, "obj2": 0.457945972031925}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,( ( DDR - MRS ) * Min( MDR ,ARS ) ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) + FirstVNF_CPU_Server ) ) / ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Max( CRS,Const ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - AMS ) ),( ACS + ( Min( MRS ,( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ACS * AMS ) ) ) ) - PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,CS ) - ( RCSe - ( ( ( Max( ( RMSe + ( DS + RMSe ) ),MUC ) + MUC ) * MUC ) - RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6216233104497181}, {"determining": "Min( FirstVNF_Mem ,( Min( Min( ( FirstVNF_RAM / ARS ) ,Min( ( Max( FirstVNF_RAM,BR ) * Max( FirstVNF_RAM,( ARS + BR ) ) ) ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04881779249084595}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,( BR - ARS ) ) ) - ( FirstVNF_Mem_Server - ( Min( ( Min( AMS ,BR ) + BR ) ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) + DS ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Max( ( MLU / Max( MLU,( RRSe - MUM ) ) ),Max( MUM,RRSe ) ) / Min( RCSe ,MUR ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.328740157480315, "obj2": 0.4864192119524837}, {"determining": "( ( Max( ( ( Min( FirstVNF_Mem ,( ( DDR - FirstVNF_Mem_Server ) + MRS ) ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( PN / DDR ) + ( PN * MDR ) ) / Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) )", "choosing": "( ( MUM - Max( DS,( CS * ( RRSe + Min( DS ,( RCSe + RCSe ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( Min( MUM ,RCSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6032434669573754}, {"determining": "( ( Min( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + MRS ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( PN * MDR ) ) / Min( MRS ,ACS ) ) * AMS ) + Max( ACS,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( MLU + Min( RRSe ,Max( MUM,( MUM - CS ) ) ) ) * MUM ) - MUM ) - ( RMSe + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.234251968503937, "obj2": 0.5940256487777793}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "Min( ( Min( ( Min( Max( Max( ( ARS + FirstVNF_CPU ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( PN - AMS ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / ( Max( ( MDR + Min( AMS ,Const ) ),FirstVNF_CPU_Server ) * MRS ) ) ,AMS ) - ( ( FirstVNF_RAM + Min( ACS ,CRS ) ) + ( Const - MDR ) ) ) ,ACS )", "choosing": "( ( MUC - DS ) + ( ( ( ( ( Min( RCSe ,MUC ) / MUM ) * Min( CS ,MLU ) ) - RCSe ) / Min( ( RCSe / ( Max( ( MUM - MUR ),MUC ) / MLU ) ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.053976486855338984}, {"determining": "( ( ( PN / Min( ( Min( MDR ,BR ) * PN ) ,AMS ) ) * ACS ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( DDR + Min( MDR ,MDR ) ) ) ) ) ) / Min( ( FirstVNF_CPU / MDR ) ,ACS ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( RRSe / MLU ) ,MUR ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( RMSe * DS ) - ( Min( ( RCSe + ( MUM / MUM ) ) ,( ( MUC / ( RMSe - RMSe ) ) / ( MUR + CS ) ) ) - Max( RRSe,DS ) ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20400820927373708}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( RCSe + RRSe ) - Min( CS ,RCSe ) )", "obj1": 0.7401574803149606, "obj2": 0.12248138200407545}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_Mem,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),( Max( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ),Min( RRS ,RRS ) ) / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) / Max( ( Min( ( Max( ( CS + DS ),Min( MLU ,Max( MUR,RCSe ) ) ) + DS ) ,MUR ) / CS ),Max( ( MLU / MUM ),RCSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6619577895696983}, {"determining": "( ( ACS * PN ) - ( Min( ( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / CRS ) * ( ACS * ACS ) ) ) * Max( Min( FirstVNF_RAM_Server ,Const ),Const ) ) * MDR ) ,Max( DDR,PN ) ) / AMS ) )", "choosing": "( ( ( CS * ( RRSe + Min( ( RMSe - ( RCSe + Min( MLU ,RRSe ) ) ) ,( DS / MUM ) ) ) ) - Max( DS,( Max( Min( ( RCSe - Min( MUR ,DS ) ) ,Min( RRSe ,DS ) ),( RCSe + DS ) ) * CS ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,CS ) ) )", "obj1": 0.7204724409448819, "obj2": 0.1306625003435614}, {"determining": "( ( ( ( FirstVNF_CPU * ( AMS + ( RRS / FirstVNF_RAM ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - ( RRS + FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + BR ) ) ) * ( Min( ( PN * MDR ) ,( FirstVNF_Mem + MDR ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Max( MUM,RCSe ),( MLU + ( MUR * Max( ( CS + Min( RCSe ,( MUC * RCSe ) ) ),MLU ) ) ) ) / ( MUC + CS ) )", "obj1": 0.47244094488188976, "obj2": 0.32890572668396667}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem,ACS ) ) * ( ( MDR * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - Min( DS ,( ( ( ( RCSe + MUR ) * ( CS - ( MLU * CS ) ) ) / ( DS + Min( ( RRSe + MUR ) ,CS ) ) ) * Max( Min( RRSe ,MLU ),Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Min( Max( MUC,RCSe ) ,RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36571432728100917}, {"determining": "( Min( Max( ( ( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( ( ( FirstVNF_RAM / ACS ) + MDR ) - ( DDR / PN ) ) )", "choosing": "( ( MLU / ( ( Max( ( CS - RMSe ),DS ) / ( MUR * Max( DS,RCSe ) ) ) * DS ) ) / Min( Min( ( ( DS - ( DS / Max( ( DS / MUM ),Max( RMSe,CS ) ) ) ) - MLU ) ,( DS / DS ) ) ,( MUM / ( ( MLU / MUC ) / Max( ( CS / MUM ),DS ) ) ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002637271468902291}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.12007874015748031, "obj2": 0.7637515354848919}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( Max( AMS,PN ) + Max( CRS,PN ) ) ) ) ) ) / Max( Min( Min( ACS ,ARS ) ,( Const / MRS ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Max( ( RMSe / RMSe ),( RRSe * MUR ) ) ,( Max( RCSe,RRSe ) - MUM ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.16948246460483804}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.281496062992126, "obj2": 0.5417961098761224}, {"determining": "Max( ( Min( ACS ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( ACS / AMS ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server / AMS ) * ( ( CRS * ( Const + MDR ) ) / BR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MLU - RCSe ) - RCSe ) - RMSe ) - ( DS + ( RRSe * Max( RRSe,Max( ( MUR + MUC ),( MUM / MLU ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( ( MUR * DS ) + DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,( FirstVNF_RAM / DDR ) ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( MRS / Const ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( CS * RRSe ) / CS ) ,Max( MUC,RMSe ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( RMSe * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,( RRSe / DS ) ) ) )", "obj1": 0.594488188976378, "obj2": 0.22273487339302916}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5393700787401575, "obj2": 0.2682732671687935}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - Max( MRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ),AMS ) - ( FirstVNF_Mem_Server - Max( ( CRS / MRS ),FirstVNF_Mem_Server ) ) ),AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) ,( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUM ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / ( ( ( Min( RRSe ,MUM ) - RMSe ) - MLU ) * RRSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.4757875924662519}, {"determining": "( ( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,( RRS / CRS ) ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( PN * MDR ) ) - Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( DS / ( ( ( MUR / MLU ) - MUR ) * MUM ) ),MUC ) ) )", "obj1": 0.4015748031496063, "obj2": 0.40326060238470535}, {"determining": "( ( PN * ACS ) - ( Min( Min( PN ,MDR ) ,( ( FirstVNF_CPU_Server / PN ) + ( ( Max( DDR,FirstVNF_CPU_Server ) * PN ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Min( Min( ( Max( ( CS + RMSe ),RRSe ) + Min( ( MUM + CS ) ,MUR ) ) ,CS ) ,RCSe ),( ( ( CS * DS ) + DS ) + MUM ) ) / MUM ) / ( Min( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) ,( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.17808739589189543}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,( Min( FirstVNF_RAM ,PN ) * ACS ) ) ) / ( MRS / ACS ) ) ,RRS ) - ( FirstVNF_Mem / Min( ACS ,RRS ) ) ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( Min( ( ( DS - CS ) - MLU ) ,Max( RMSe,RRSe ) ) + ( DS / Min( Max( Max( Max( CS,RCSe ),( DS + ( MUC * MUR ) ) ),DS ) ,CS ) ) ) )", "obj1": 0.8326771653543307, "obj2": 0.06356342488129875}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU * ( FirstVNF_CPU_Server + ( FirstVNF_RAM / RRS ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( ( BR / PN ) * ( ( FirstVNF_CPU_Server + DDR ) * AMS ) ) ) * ( Min( Min( CRS ,Max( Min( BR ,RRS ),FirstVNF_CPU ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( RRSe + Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( ( RMSe + MUM ),RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4734416848219989}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM / ACS ) + Max( FirstVNF_Mem_Server,BR ) ) - Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUC,MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( ( MLU + Max( RRSe,MUC ) ) / MUM ),DS ) ) ) ) / ( MLU + ( ( CS + Min( RCSe ,Min( RRSe ,RRSe ) ) ) * DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7189266925208706}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( ( MRS + MRS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / ( ( ( RRSe / CS ) - DS ) + MUC ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,MUM ) ,MUM ) ) ) )", "obj1": 0.6122047244094488, "obj2": 0.20759422604687452}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( ( RCSe + DS ),Min( ( RCSe - Min( MUC ,MUC ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12728276907597635}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( BR + Min( ( Max( Const,MRS ) / CRS ) ,FirstVNF_RAM_Server ) ) ) ),ARS ) - ( FirstVNF_CPU_Server * Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM - ( DS * ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / ( ( ( ( ( MUM * ( DS * MUM ) ) + RRSe ) * ( ( MUR * MUM ) * ( MUR + ( Min( MLU ,MUC ) + RCSe ) ) ) ) / ( MUC - MUM ) ) - MLU ) )", "obj1": 0.3838582677165354, "obj2": 0.4246984983018075}, {"determining": "Min( ( ( MDR / DDR ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( ( ( ( Max( DS,RMSe ) + RCSe ) * MLU ) - DS ) - ( Max( ( ( RCSe - MLU ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( MLU / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.028891851929316315}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( MLU,( Min( MLU ,Max( ( Min( CS ,( MLU + MLU ) ) + Max( MUC,MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.41338582677165353, "obj2": 0.3887762767580138}, {"determining": "( Max( ACS,( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( ( ( ACS + CRS ) / FirstVNF_CPU ) * CRS ) + BR ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,( MUC + RRSe ) ) ) ) ) ) ) / Max( MLU,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS - MUM ) ) ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.3967707376079904}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.41732283464566927, "obj2": 0.38031670951664026}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "Min( Max( ARS,Const ) ,( FirstVNF_Mem_Server / Min( MRS ,DDR ) ) )", "choosing": "( ( MLU + ( ( RRSe + Min( ( CS / ( RMSe / MUM ) ) ,MUM ) ) - DS ) ) / ( Max( ( MUM / RCSe ),MUR ) * ( MUM / ( ( MLU * MUC ) - Max( ( MUR / MUM ),DS ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09258496368481155}, {"determining": "( Max( ( ( AMS / ( Max( ARS,Const ) - Max( AMS,( FirstVNF_RAM_Server / AMS ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,( MDR + DDR ) ) - MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( ( MUC + ( MLU * MUR ) ) / DS ),RRSe ) / ( DS + MUC ) ) - Min( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUM,( RRSe + MUC ) ) ),Max( RCSe,RRSe ) ) ) ) ,( ( ( ( MLU + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( DS,( RRSe - CS ) ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4763779527559055, "obj2": 0.3165892413302117}, {"determining": "Min( ( ( ( Min( ( ARS + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,( Const - DDR ) ) / Max( ( Min( Min( BR ,FirstVNF_CPU ) ,( Const * PN ) ) / DDR ),( FirstVNF_RAM * ( FirstVNF_RAM - Const ) ) ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,CS ) ) + RRSe ) + MLU ),MUC ) ) + ( Max( RCSe,Max( MLU,( ( MLU + MUR ) - ( Max( MUM,( RRSe * RCSe ) ) - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( CS - ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) ) ,( DS / DS ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.027974348644654343}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( ( ( FirstVNF_RAM - Const ) / CRS ) - Max( ( ( ACS / CRS ) - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( CS + MUR ) ) + ( Min( Min( Min( Min( MLU ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / ( RRSe - MLU ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) - ( RCSe * Max( MLU,CS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.532500231998929}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( ( ACS * ACS ) ,Max( CRS,PN ) ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( RCSe - Min( MUC ,MUC ) ) * Max( DS,DS ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.4625984251968504, "obj2": 0.3324196186661496}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( MLU,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.42097949427043074}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,PN ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),( MLU - ( ( RRSe * CS ) + RCSe ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.2735824111880113}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) - ( ( ACS * CRS ) * Max( Min( PN ,AMS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( MUC + ( ( DS * MUC ) + ( ( RMSe - ( MUC / DS ) ) * Min( DS ,Min( DS ,RRSe ) ) ) ) ) ) - ( ( ( ( RCSe - ( MUM * RRSe ) ) / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUC,MUM ) ),Max( RCSe,( MLU / ( CS / MLU ) ) ) ) ) ) / ( ( ( Max( MUM,Min( Max( MLU,RCSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * ( ( MUR * Min( RRSe ,DS ) ) / ( ( Min( RCSe ,MLU ) - ( MLU - RCSe ) ) - CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4330477702396556}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08509173898946452}, {"determining": "Min( ( Min( ( Min( ( BR + ( RRS + FirstVNF_CPU ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) * FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUR / Max( ( Min( DS ,CS ) * Min( Max( MUM,( ( MLU - DS ) / ( RRSe + RRSe ) ) ) ,RCSe ) ),( MUM / DS ) ) ) + ( DS / ( MLU / ( DS + ( ( CS - CS ) - ( ( Max( RRSe,RCSe ) + CS ) / DS ) ) ) ) ) )", "obj1": 0.84251968503937, "obj2": 0.06022945055779188}, {"determining": "( ( FirstVNF_RAM_Server * ( Min( BR ,FirstVNF_CPU ) - FirstVNF_CPU ) ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MUC ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( ( ( Min( Max( MUM,MLU ) ,MUM ) + MUM ) + MUR ) / Max( RRSe,DS ) ) - ( MUM / MLU ) ) / ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MUR / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49315041313457}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.687007874015748, "obj2": 0.1524491374145042}, {"determining": "( ( ( ( ACS - Max( MRS,DDR ) ) + PN ) * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) / ( MDR * Min( DDR ,( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( DS + MUM ) ,RRSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( CS - MUM ) )", "obj1": 0.5787401574803149, "obj2": 0.23419979488372505}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem_Server ,PN ) / ( ( Min( Min( CRS ,Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM ) / ( ACS + Const ) ) / FirstVNF_RAM_Server ) ) ) / Min( Const ,Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe - ( DS + ( ( MLU / CS ) * Max( ( ( RRSe - ( DS * RMSe ) ) + Max( Min( MUR ,DS ),MUM ) ),Min( Min( ( RCSe + RCSe ) ,DS ) ,( RRSe - DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.1732283464566929, "obj2": 0.6711485089568967}, {"determining": "( ( ACS * PN ) - ( Min( Min( ( AMS / ( MRS + BR ) ) ,MDR ) ,( ( ( FirstVNF_Mem / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.08197389436177295}, {"determining": "( ( ACS + PN ) - ( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ( ( Max( ARS,FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - MRS ) ,MDR ) ) * ( ( AMS * Min( MDR ,Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) / Min( ( Min( PN ,Max( MRS,MRS ) ) + DDR ) ,Min( MDR ,( MRS - Max( Min( CRS ,FirstVNF_RAM ),FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RCSe - Min( CS ,( MLU - RRSe ) ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + ( ( RMSe - ( MUM + CS ) ) + MUR ) ) ) / ( DS * MLU ) ) - Max( Min( ( MUC + Max( DS,( RMSe * ( RCSe / RMSe ) ) ) ) ,MUM ),Min( ( RCSe / ( MUR + CS ) ) ,( CS + ( MUM / MUM ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17428086956827413}, {"determining": "( ( PN * ACS ) - ( Min( Min( ( AMS / ( FirstVNF_CPU + CRS ) ) ,FirstVNF_Mem_Server ) ,( CRS + MDR ) ) / ( FirstVNF_CPU_Server * ( Const * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUM ,MUR ) / CS ) / ( Max( ( ( ( ( MUC + ( MUC - DS ) ) / Max( ( RCSe / MUM ),RCSe ) ) + ( RMSe + ( DS / MUM ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.7952755905511811, "obj2": 0.07719381287442495}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * Min( ( MUC / ( DS / DS ) ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.05754332013557143}], "46": [{"determining": "( ( ( ACS * PN ) - ( PN + ARS ) ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( RCSe + RRSe ) - ( Max( ( RRSe - ( CS / RCSe ) ),DS ) * ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ARS ) * ( FirstVNF_CPU_Server + ( ( DDR / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ACS ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / Min( MLU ,( Min( ( RRSe + ( Max( MLU,( MLU / RMSe ) ) * CS ) ) ,MUR ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,Max( ACS,( MRS - ( RRS * ARS ) ) ) ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( MUC,( MUM + MUM ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8373631865037017}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "Min( ( ( MDR / DDR ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( ( ( ( Max( DS,RMSe ) + RCSe ) * MLU ) - DS ) - ( Max( ( ( RCSe - MLU ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( MLU / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.028891851929316315}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.562992125984252, "obj2": 0.2452353020817945}, {"determining": "( ( ( ( Min( Min( CRS ,FirstVNF_RAM ) ,ACS ) / Min( ( ( PN - Max( MRS,MRS ) ) * ( ( MDR / PN ) + FirstVNF_CPU ) ) ,( ( ( AMS + FirstVNF_RAM_Server ) / ( ARS * MDR ) ) / ( Max( FirstVNF_CPU_Server,MDR ) * FirstVNF_RAM ) ) ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( DS,( CS / Max( RRSe,Min( MUM ,( RMSe + RMSe ) ) ) ) ) - MUM ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( RMSe - ( MUM + CS ) ) + MUR ) + MLU ) + MLU ),MUC ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5546823319561044}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.12007874015748031, "obj2": 0.7637515354848919}, {"determining": "( ( ( FirstVNF_RAM + ( ARS + Max( Const,( ( MRS - Const ) - FirstVNF_RAM_Server ) ) ) ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) + FirstVNF_RAM ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( PN + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * ( MUC - ( ( CS / MUM ) / ( RMSe / MUC ) ) ) ),( RRSe / RCSe ) ) / Max( ( RCSe - Max( MUM,MLU ) ),( MUM + Min( ( ( RMSe / DS ) * MUR ) ,( MUM - ( RRSe + RMSe ) ) ) ) ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8126349739618789}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem,ACS ) ) * ( ( MDR * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - Min( DS ,( ( ( ( RCSe + MUR ) * ( CS - ( MLU * CS ) ) ) / ( DS + Min( ( RRSe + MUR ) ,CS ) ) ) * Max( Min( RRSe ,MLU ),Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Min( Max( MUC,RCSe ) ,RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36571432728100917}, {"determining": "( Max( ( ( Min( Min( FirstVNF_CPU ,( Const - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,MDR ) / Min( DDR ,( Const + CRS ) ) ) - ( MDR * AMS ) ),ACS ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( MUM,MUR ) - ( ( Max( MUR,( MUR + CS ) ) + ( Max( Min( MLU ,DS ),MLU ) * RMSe ) ) / Min( RCSe ,CS ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6250575335946054}, {"determining": "( ( Const + MDR ) - ( Min( Min( PN ,MDR ) ,( ( ( ( MRS - ( DDR * Const ) ) - ( ACS * Max( Const,ACS ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe - ( RCSe - RCSe ) ) ,Max( ( RRSe + RRSe ),RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR - Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2585859599563105}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( ( RRS - Max( ARS,ACS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( CS,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.1968503937007874, "obj2": 0.648704433657865}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.41732283464566927, "obj2": 0.38031670951664026}, {"determining": "Min( ACS ,Min( ( FirstVNF_Mem_Server / Const ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - MUR ) + Max( ( ( ( DS - ( ( Min( DS ,MLU ) - CS ) * RCSe ) ) / DS ) + RCSe ),MUC ) )", "obj1": 0.8208661417322834, "obj2": 0.06734028309878833}, {"determining": "( ( ACS * PN ) - ( ( ARS - FirstVNF_Mem_Server ) / ( Min( Min( ACS ,ARS ) ,( FirstVNF_Mem_Server / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) / Min( Min( Min( Min( RCSe ,( MUC + RMSe ) ) ,MUC ) ,MUM ) ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.16191543591804153}, {"determining": "( Max( Min( ( ( Const - Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ) ) / Min( RRS ,Const ) ) ,MRS ),ACS ) - ( ( DDR / ACS ) * AMS ) )", "choosing": "( ( ( MLU / Min( ( Min( MLU ,RRSe ) + MUC ) ,Min( ( Min( CS ,( MUC / MUR ) ) + MUR ) ,RMSe ) ) ) / Min( ( CS / MUM ) ,( MUM / ( ( MLU / ( DS / RRSe ) ) / ( ( CS / MUM ) / MUR ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.697591401632469}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "( ( ( ( ACS - Max( MRS,DDR ) ) + PN ) * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) / ( MDR * Min( DDR ,( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( DS + MUM ) ,RRSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( CS - MUM ) )", "obj1": 0.5787401574803149, "obj2": 0.23419979488372505}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( Max( MRS,( FirstVNF_Mem_Server + ACS ) ) + ( PN / DDR ) ) + MRS ) ) - BR ),( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) - ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe + RRSe ) - Min( CS ,RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7459895419029233}, {"determining": "( ( ( BR + FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,ACS ) ) * Max( ( ( FirstVNF_Mem_Server * ( AMS + PN ) ) * ( AMS + Min( ( Min( CRS ,Max( FirstVNF_Mem,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Min( Max( ( MUM + RRSe ),MUR ) ,( MLU / DS ) ) * ( RRSe * DS ) ),Max( MUM,( MUC - CS ) ) ) + Max( DS,( ( Max( CS,MUC ) - Max( ( RCSe / ( Max( MLU,RMSe ) * MUR ) ),( ( MUM / ( MUC + RRSe ) ) + ( RCSe - MUR ) ) ) ) - Max( Min( ( ( MLU + MUR ) / ( MUM * RMSe ) ) ,RRSe ),MUR ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5654353761879637}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.281496062992126, "obj2": 0.5417961098761224}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * Min( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server - ( Min( ( CRS / BR ) ,FirstVNF_RAM_Server ) + BR ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - ( ( ( Min( RRSe ,RCSe ) + ( DS * MUC ) ) + MUM ) - ( ( Max( MLU,MUR ) - DS ) - RCSe ) ) ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( DS + MUC ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8171816977981369}, {"determining": "Max( ( Min( ACS ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( ACS / AMS ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server / AMS ) * ( ( CRS * ( Const + MDR ) ) / BR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MLU - RCSe ) - RCSe ) - RMSe ) - ( DS + ( RRSe * Max( RRSe,Max( ( MUR + MUC ),( MUM / MLU ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( ( MUR * DS ) + DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) - ( ( ACS * CRS ) * Max( Min( PN ,AMS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( MUC + ( ( DS * MUC ) + ( ( RMSe - ( MUC / DS ) ) * Min( DS ,Min( DS ,RRSe ) ) ) ) ) ) - ( ( ( ( RCSe - ( MUM * RRSe ) ) / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUC,MUM ) ),Max( RCSe,( MLU / ( CS / MLU ) ) ) ) ) ) / ( ( ( Max( MUM,Min( Max( MLU,RCSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * ( ( MUR * Min( RRSe ,DS ) ) / ( ( Min( RCSe ,MLU ) - ( MLU - RCSe ) ) - CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4330477702396556}, {"determining": "Min( ( FirstVNF_CPU_Server * Max( DDR,CRS ) ) ,( Min( ( Min( ( ( PN - MDR ) * FirstVNF_CPU ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / ( MRS + ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe - MUR ) / ( CS / MUM ) )", "obj1": 0.8799212598425197, "obj2": 0.045629490696726366}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / Max( MLU,( Min( MLU ,MUR ) - ( MUR - ( MUC + RCSe ) ) ) ) ) + Min( ( CS - ( DS - CS ) ) ,( DS / DS ) ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.6279527559055118, "obj2": 0.19639439606279754}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server * DDR ) + ( ( MRS - ( MRS / PN ) ) * PN ) ) ) ),( ACS / BR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( MUR / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( Max( ( MUR / ( MLU * MUC ) ),RRSe ) * RRSe ) ,MUC ) )", "obj1": 0.36811023622047245, "obj2": 0.4449882141722993}, {"determining": "( Max( ( Max( AMS,( FirstVNF_RAM + Min( ( FirstVNF_RAM - Min( FirstVNF_RAM ,ARS ) ) ,CRS ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MUR ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( Min( RMSe ,( MUR - CS ) ) / ( ( ( RCSe + ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.4613056070726891}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) + ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU + ARS ) )", "choosing": "( Min( MUC ,RMSe ) / Max( Max( DS,RCSe ),Max( ( ( ( MUR * Max( DS,CS ) ) + ( Max( MLU,RRSe ) * MUC ) ) + MLU ),MUC ) ) )", "obj1": 0.25, "obj2": 0.5697002142824248}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Max( CRS,PN ) * ACS ) ) ) / Min( MRS ,Max( AMS,ARS ) ) ) ,AMS ) * FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( Max( ( ( ( ( CS + ( MLU - DS ) ) * ( MUC + MUR ) ) - DS ) + RCSe ),DS ) / MUR ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( ( DS / RCSe ),RCSe ) ) + ( RMSe + ( RRSe * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.7578740157480315, "obj2": 0.1126712672697997}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM - BR ) * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( ( ( ( DS - RMSe ) - CS ) + DS ),Min( ( RCSe - Min( MUC ,MUC ) ) ,Min( RRSe ,RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14348187800213238}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4980359232453927}, {"determining": "( Max( ( ( AMS / ( Max( ARS,Const ) - Max( AMS,( FirstVNF_RAM_Server / AMS ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,( MDR + DDR ) ) - MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( ( MUC + ( MLU * MUR ) ) / DS ),RRSe ) / ( DS + MUC ) ) - Min( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUM,( RRSe + MUC ) ) ),Max( RCSe,RRSe ) ) ) ) ,( ( ( ( MLU + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( DS,( RRSe - CS ) ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4763779527559055, "obj2": 0.3165892413302117}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ACS,ARS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( ( RMSe + CS ) / Max( ( ( Min( Min( MLU ,DS ) ,MLU ) / DS ) - MLU ),CS ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5287138824417845}, {"determining": "( ( ACS * PN ) - ( ( Min( PN ,MDR ) * ( ( Max( FirstVNF_Mem,( ( ARS + CRS ) * MDR ) ) * ( Min( FirstVNF_RAM_Server ,( MDR / CRS ) ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + DS ),Min( ( MLU + ( MUC / ( Min( DS ,RCSe ) - RMSe ) ) ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( Max( MUM,CS ),RCSe ) ) + ( RMSe + ( DS * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6082677165354331, "obj2": 0.22170252467619994}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "( ( ( FirstVNF_RAM - Const ) / CRS ) - Max( ( ( ACS / CRS ) - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( CS + MUR ) ) + ( Min( Min( Min( Min( MLU ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / ( RRSe - MLU ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) - ( RCSe * Max( MLU,CS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.532500231998929}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.3641732283464567, "obj2": 0.457945972031925}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,( ( DDR - MRS ) * Min( MDR ,ARS ) ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) + FirstVNF_CPU_Server ) ) / ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Max( CRS,Const ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - AMS ) ),( ACS + ( Min( MRS ,( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ACS * AMS ) ) ) ) - PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,CS ) - ( RCSe - ( ( ( Max( ( RMSe + ( DS + RMSe ) ),MUC ) + MUC ) * MUC ) - RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6216233104497181}, {"determining": "Min( FirstVNF_Mem ,( Min( Min( ( FirstVNF_RAM / ARS ) ,Min( ( Max( FirstVNF_RAM,BR ) * Max( FirstVNF_RAM,( ARS + BR ) ) ) ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04881779249084595}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( BR + Min( ( Max( Const,MRS ) / CRS ) ,FirstVNF_RAM_Server ) ) ) ),ARS ) - ( FirstVNF_CPU_Server * Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM - ( DS * ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / ( ( ( ( ( MUM * ( DS * MUM ) ) + RRSe ) * ( ( MUR * MUM ) * ( MUR + ( Min( MLU ,MUC ) + RCSe ) ) ) ) / ( MUC - MUM ) ) - MLU ) )", "obj1": 0.3838582677165354, "obj2": 0.4246984983018075}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,( BR - ARS ) ) ) - ( FirstVNF_Mem_Server - ( Min( ( Min( AMS ,BR ) + BR ) ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) + DS ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Max( ( MLU / Max( MLU,( RRSe - MUM ) ) ),Max( MUM,RRSe ) ) / Min( RCSe ,MUR ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.328740157480315, "obj2": 0.4864192119524837}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,CS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + RCSe ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( ( MUR - MUM ),MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5165217847265176}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) * CRS ) * ( Min( Min( ( ACS * ACS ) ,Max( CRS,PN ) ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),( ( RMSe / RRSe ) + ( ( ( DS + MLU ) + ( DS + RMSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) )", "obj1": 0.4822834645669291, "obj2": 0.30595574988657315}, {"determining": "( ( Max( ( ( Min( FirstVNF_Mem ,( ( DDR - FirstVNF_Mem_Server ) + MRS ) ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( PN / DDR ) + ( PN * MDR ) ) / Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) )", "choosing": "( ( MUM - Max( DS,( CS * ( RRSe + Min( DS ,( RCSe + RCSe ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( Min( MUM ,RCSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6032434669573754}, {"determining": "( ( Min( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + MRS ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( PN * MDR ) ) / Min( MRS ,ACS ) ) * AMS ) + Max( ACS,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( MLU + Min( RRSe ,Max( MUM,( MUM - CS ) ) ) ) * MUM ) - MUM ) - ( RMSe + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.234251968503937, "obj2": 0.5940256487777793}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "Min( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( DDR * FirstVNF_RAM_Server ) ) ,ACS )", "choosing": "( ( Max( ( MUM + ( ( ( CS + ( MLU - MUM ) ) * ( MUC + MUR ) ) - DS ) ),DS ) / Min( DS ,( RCSe + RMSe ) ) ) / ( Max( ( Max( DS,MUR ) / MUC ),MUC ) / MLU ) )", "obj1": 0.8011811023622047, "obj2": 0.07377272424649071}, {"determining": "Min( ( Min( ( Min( Max( Max( ( ARS + FirstVNF_CPU ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( PN - AMS ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / ( Max( ( MDR + Min( AMS ,Const ) ),FirstVNF_CPU_Server ) * MRS ) ) ,AMS ) - ( ( FirstVNF_RAM + Min( ACS ,CRS ) ) + ( Const - MDR ) ) ) ,ACS )", "choosing": "( ( MUC - DS ) + ( ( ( ( ( Min( RCSe ,MUC ) / MUM ) * Min( CS ,MLU ) ) - RCSe ) / Min( ( RCSe / ( Max( ( MUM - MUR ),MUC ) / MLU ) ) ,CS ) ) + Min( ( ( DS - CS ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.053976486855338984}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( Max( AMS,PN ) + Max( CRS,PN ) ) ) ) ) ) / Max( Min( Min( ACS ,ARS ) ,( Const / MRS ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Max( ( RMSe / RMSe ),( RRSe * MUR ) ) ,( Max( RCSe,RRSe ) - MUM ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.16948246460483804}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_Mem,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),( Max( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ),Min( RRS ,RRS ) ) / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) / Max( ( Min( ( Max( ( CS + DS ),Min( MLU ,Max( MUR,RCSe ) ) ) + DS ) ,MUR ) / CS ),Max( ( MLU / MUM ),RCSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6619577895696983}, {"determining": "( ( ( ( FirstVNF_CPU * ( AMS + ( RRS / FirstVNF_RAM ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - ( RRS + FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + BR ) ) ) * ( Min( ( PN * MDR ) ,( FirstVNF_Mem + MDR ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Max( MUM,RCSe ),( MLU + ( MUR * Max( ( CS + Min( RCSe ,( MUC * RCSe ) ) ),MLU ) ) ) ) / ( MUC + CS ) )", "obj1": 0.47244094488188976, "obj2": 0.32890572668396667}, {"determining": "( ( ( Min( Const ,BR ) * Max( AMS,Max( ACS,( MRS - ( RRS * ARS ) ) ) ) ) * ( AMS - MRS ) ) - ( Min( Min( ( AMS / ( MRS + BR ) ) ,MDR ) ,( ( ( FirstVNF_Mem / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * Max( MUC,( MUM + MUM ) ) ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.9940944881889764, "obj2": 0.001991279520790714}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,( FirstVNF_RAM / DDR ) ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( MRS / Const ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( CS * RRSe ) / CS ) ,Max( MUC,RMSe ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( RMSe * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,( RRSe / DS ) ) ) )", "obj1": 0.594488188976378, "obj2": 0.22273487339302916}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - Max( MRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ),AMS ) - ( FirstVNF_Mem_Server - Max( ( CRS / MRS ),FirstVNF_Mem_Server ) ) ),AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) ,( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUM ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / ( ( ( Min( RRSe ,MUM ) - RMSe ) - MLU ) * RRSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.4757875924662519}, {"determining": "( ( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,( RRS / CRS ) ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( PN * MDR ) ) - Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( DS / ( ( ( MUR / MLU ) - MUR ) * MUM ) ),MUC ) ) )", "obj1": 0.4015748031496063, "obj2": 0.40326060238470535}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU * ( FirstVNF_CPU_Server + ( FirstVNF_RAM / RRS ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( ( BR / PN ) * ( ( FirstVNF_CPU_Server + DDR ) * AMS ) ) ) * ( Min( Min( CRS ,Max( Min( BR ,RRS ),FirstVNF_CPU ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( RRSe + Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( ( RMSe + MUM ),RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4734416848219989}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem_Server ,PN ) / ( ( Min( Min( CRS ,Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM ) / ( ACS + Const ) ) / FirstVNF_RAM_Server ) ) ) / Min( Const ,Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe - ( DS + ( ( MLU / CS ) * Max( ( ( RRSe - ( DS * RMSe ) ) + Max( Min( MUR ,DS ),MUM ) ),Min( Min( ( RCSe + RCSe ) ,DS ) ,( RRSe - DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.1732283464566929, "obj2": 0.6711485089568967}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM / ACS ) + Max( FirstVNF_Mem_Server,BR ) ) - Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUC,MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( ( MLU + Max( RRSe,MUC ) ) / MUM ),DS ) ) ) ) / ( MLU + ( ( CS + Min( RCSe ,Min( RRSe ,RRSe ) ) ) * DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7189266925208706}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( ( MRS + MRS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / ( ( ( RRSe / CS ) - DS ) + MUC ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,MUM ) ,MUM ) ) ) )", "obj1": 0.6122047244094488, "obj2": 0.20759422604687452}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "( ( ( PN / Min( ( Min( MDR ,BR ) * PN ) ,AMS ) ) * ACS ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( DDR + Min( MDR ,MDR ) ) ) ) ) ) / Min( ( FirstVNF_CPU / MDR ) ,ACS ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( RRSe / MLU ) ,MUR ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( RMSe * DS ) - ( Min( ( RCSe + ( MUM / MUM ) ) ,( ( MUC / ( RMSe - RMSe ) ) / ( MUR + CS ) ) ) - Max( RRSe,DS ) ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20400820927373708}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( Min( MUC ,RMSe ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,CS ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.7145669291338582, "obj2": 0.13787076506453813}, {"determining": "( Max( ACS,( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( ( ( ACS + CRS ) / FirstVNF_CPU ) * CRS ) + BR ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,( MUC + RRSe ) ) ) ) ) ) ) / Max( MLU,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS - MUM ) ) ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.3967707376079904}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.517274254170924}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "Min( Max( ARS,Const ) ,( FirstVNF_Mem_Server / Min( MRS ,DDR ) ) )", "choosing": "( ( MLU + ( ( RRSe + Min( ( CS / ( RMSe / MUM ) ) ,MUM ) ) - DS ) ) / ( Max( ( MUM / RCSe ),MUR ) * ( MUM / ( ( MLU * MUC ) - Max( ( MUR / MUM ),DS ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09258496368481155}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "Min( ( ( ( Min( ( ARS + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,( Const - DDR ) ) / Max( ( Min( Min( BR ,FirstVNF_CPU ) ,( Const * PN ) ) / DDR ),( FirstVNF_RAM * ( FirstVNF_RAM - Const ) ) ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,CS ) ) + RRSe ) + MLU ),MUC ) ) + ( Max( RCSe,Max( MLU,( ( MLU + MUR ) - ( Max( MUM,( RRSe * RCSe ) ) - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( CS - ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) ) ,( DS / DS ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.027974348644654343}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( DDR * Max( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,FirstVNF_RAM ),Max( MRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( ( RCSe + DS ),Min( ( RCSe - Min( MUC ,MUC ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / ( MUR * ( DS * MLU ) ) )", "obj1": 0.6929133858267716, "obj2": 0.14999652487686674}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( ( ACS * ACS ) ,Max( CRS,PN ) ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( RCSe - Min( MUC ,MUC ) ) * Max( DS,DS ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.4625984251968504, "obj2": 0.3324196186661496}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5393700787401575, "obj2": 0.2682732671687935}, {"determining": "( Min( Max( ( ( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( ( ( FirstVNF_RAM / ACS ) + MDR ) - ( DDR / PN ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.9763779527559056, "obj2": 0.009189206549366842}, {"determining": "( ( ACS * PN ) - ( Min( Min( ( AMS / ( MRS + BR ) ) ,MDR ) ,( ( ( FirstVNF_Mem / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.08197389436177295}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.6437007874015748, "obj2": 0.18517079802793998}, {"determining": "( ( PN * ACS ) - ( Min( Min( ( AMS / ( FirstVNF_CPU + CRS ) ) ,FirstVNF_Mem_Server ) ,( CRS + MDR ) ) / ( FirstVNF_CPU_Server * ( Const * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUM ,MUR ) / CS ) / ( Max( ( ( ( ( MUC + ( MUC - DS ) ) / Max( ( RCSe / MUM ),RCSe ) ) + ( RMSe + ( DS / MUM ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.7952755905511811, "obj2": 0.07719381287442495}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( MLU,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.42097949427043074}, {"determining": "( ( ACS * PN ) - ( Min( ( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / CRS ) * ( ACS * ACS ) ) ) * Max( Min( FirstVNF_RAM_Server ,Const ),Const ) ) * MDR ) ,Max( DDR,PN ) ) / AMS ) )", "choosing": "( ( ( CS * ( RRSe + Min( ( RMSe - ( RCSe + Min( MLU ,RRSe ) ) ) ,( DS / MUM ) ) ) ) - Max( DS,( Max( Min( ( RCSe - Min( MUR ,DS ) ) ,Min( RRSe ,DS ) ),( RCSe + DS ) ) * CS ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,CS ) ) )", "obj1": 0.7204724409448819, "obj2": 0.1306625003435614}, {"determining": "( ( FirstVNF_RAM_Server * ( Min( BR ,FirstVNF_CPU ) - FirstVNF_CPU ) ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MUC ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( ( ( Min( Max( MUM,MLU ) ,MUM ) + MUM ) + MUR ) / Max( RRSe,DS ) ) - ( MUM / MLU ) ) / ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MUR / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49315041313457}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + Max( ( ( FirstVNF_RAM / RRS ) + ARS ),( FirstVNF_RAM / ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( Min( ACS ,BR ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) * CS ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( Max( DS,RCSe ) * MLU ) + ( ( ( MUR * CS ) / DS ) - Max( RMSe,Max( MUR,MUC ) ) ) ) + MLU ),MUC ) ) )", "obj1": 0.687007874015748, "obj2": 0.15199309033614528}, {"determining": "( ( PN * ACS ) - ( FirstVNF_CPU + RRS ) )", "choosing": "( ( ( MLU - RMSe ) / MLU ) / Max( MLU,( Min( MLU ,Max( ( Min( MUC ,CS ) + ( MUC * MUR ) ),DS ) ) / Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.17806875622170554}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * Min( ( MUC / ( DS / DS ) ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.05754332013557143}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,PN ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),( MLU - ( ( RRSe * CS ) + RCSe ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5216535433070866, "obj2": 0.2781143508267392}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08509173898946452}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,( Min( FirstVNF_RAM ,PN ) * ACS ) ) ) / ( MRS / ACS ) ) ,RRS ) - ( FirstVNF_Mem / Min( ACS ,RRS ) ) ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( Min( ( ( DS - CS ) - MLU ) ,Max( RMSe,RRSe ) ) + ( DS / Min( Max( Max( Max( CS,RCSe ),( DS + ( MUC * MUR ) ) ),DS ) ,CS ) ) ) )", "obj1": 0.8326771653543307, "obj2": 0.06356342488129875}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,Min( Min( ( ACS * ACS ) ,Max( CRS,PN ) ) ,FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( MUR / CS ),( ( RMSe / ( RCSe + RCSe ) ) + ( ( ( DS + MLU ) + ( DS + RMSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5118110236220472, "obj2": 0.28340858999423757}, {"determining": "Min( ( Min( ( Min( ( BR + ( RRS + FirstVNF_CPU ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) * FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( MUR / Max( ( Min( DS ,CS ) * Min( Max( MUM,( ( MLU - DS ) / ( RRSe + RRSe ) ) ) ,RCSe ) ),( MUM / DS ) ) ) + ( DS / ( MLU / ( DS + ( ( CS - CS ) - ( ( Max( RRSe,RCSe ) + CS ) / DS ) ) ) ) ) )", "obj1": 0.84251968503937, "obj2": 0.06022945055779188}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( ( Max( FirstVNF_Mem_Server,BR ) - Min( PN ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUM,( CS / MUM ) ),Max( ( ( ( MUR * ( DS / RCSe ) ) + RRSe ) + ( DS / Max( DS,CS ) ) ),MUC ) ) / ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.34939227984429655}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( RCSe - Min( MUC ,MUC ) ) * Max( DS,DS ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.49015748031496065, "obj2": 0.29970589842105627}], "47": [{"determining": "Min( Max( ARS,Const ) ,( FirstVNF_Mem_Server / Min( MRS ,DDR ) ) )", "choosing": "( ( MLU + ( ( RRSe + Min( ( CS / ( RMSe / MUM ) ) ,MUM ) ) - DS ) ) / ( Max( ( MUM / RCSe ),MUR ) * ( MUM / ( ( MLU * MUC ) - Max( ( MUR / MUM ),DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * PN ) - ( PN + ARS ) ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( RCSe + RRSe ) - ( Max( ( RRSe - ( CS / RCSe ) ),DS ) * ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,Max( ACS,( MRS - ( RRS * ARS ) ) ) ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( MUC,( MUM + MUM ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8373631865037017}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "Min( ( ( MDR / DDR ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( ( ( ( Max( DS,RMSe ) + RCSe ) * MLU ) - DS ) - ( Max( ( ( RCSe - MLU ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( MLU / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.028891851929316315}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( ( ( FirstVNF_RAM + ( ARS + Max( Const,( ( MRS - Const ) - FirstVNF_RAM_Server ) ) ) ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) + FirstVNF_RAM ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( PN + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * ( MUC - ( ( CS / MUM ) / ( RMSe / MUC ) ) ) ),( RRSe / RCSe ) ) / Max( ( RCSe - Max( MUM,MLU ) ),( MUM + Min( ( ( RMSe / DS ) * MUR ) ,( MUM - ( RRSe + RMSe ) ) ) ) ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8126349739618789}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.12007874015748031, "obj2": 0.7637515354848919}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem,ACS ) ) * ( ( MDR * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - Min( DS ,( ( ( ( RCSe + MUR ) * ( CS - ( MLU * CS ) ) ) / ( DS + Min( ( RRSe + MUR ) ,CS ) ) ) * Max( Min( RRSe ,MLU ),Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Min( Max( MUC,RCSe ) ,RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36571432728100917}, {"determining": "( Max( ( ( Min( Min( FirstVNF_CPU ,( Const - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,MDR ) / Min( DDR ,( Const + CRS ) ) ) - ( MDR * AMS ) ),ACS ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( MUM,MUR ) - ( ( Max( MUR,( MUR + CS ) ) + ( Max( Min( MLU ,DS ),MLU ) * RMSe ) ) / Min( RCSe ,CS ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6250575335946054}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( ( RRS - Max( ARS,ACS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( CS,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.1968503937007874, "obj2": 0.648704433657865}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * Min( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server - ( Min( ( CRS / BR ) ,FirstVNF_RAM_Server ) + BR ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - ( ( ( Min( RRSe ,RCSe ) + ( DS * MUC ) ) + MUM ) - ( ( Max( MLU,MUR ) - DS ) - RCSe ) ) ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( DS + MUC ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8171816977981369}, {"determining": "Min( ACS ,Min( ( FirstVNF_Mem_Server / Const ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - MUR ) + Max( ( ( ( DS - ( ( Min( DS ,MLU ) - CS ) * RCSe ) ) / DS ) + RCSe ),MUC ) )", "obj1": 0.8208661417322834, "obj2": 0.06734028309878833}, {"determining": "( Max( Min( ( ( Const - Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ) ) / Min( RRS ,Const ) ) ,MRS ),ACS ) - ( ( DDR / ACS ) * AMS ) )", "choosing": "( ( ( MLU / Min( ( Min( MLU ,RRSe ) + MUC ) ,Min( ( Min( CS ,( MUC / MUR ) ) + MUR ) ,RMSe ) ) ) / Min( ( CS / MUM ) ,( MUM / ( ( MLU / ( DS / RRSe ) ) / ( ( CS / MUM ) / MUR ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.697591401632469}, {"determining": "( ( ( ( Min( Min( CRS ,FirstVNF_RAM ) ,ACS ) / Min( ( ( PN - Max( MRS,MRS ) ) * ( ( MDR / PN ) + FirstVNF_CPU ) ) ,( ( ( AMS + FirstVNF_RAM_Server ) / ( ARS * MDR ) ) / ( Max( FirstVNF_CPU_Server,MDR ) * FirstVNF_RAM ) ) ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( DS,( CS / Max( RRSe,Min( MUM ,( RMSe + RMSe ) ) ) ) ) - MUM ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( RMSe - ( MUM + CS ) ) + MUR ) + MLU ) + MLU ),MUC ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5546823319561044}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "( ( Const + MDR ) - ( Min( Min( PN ,MDR ) ,( ( ( ( MRS - ( DDR * Const ) ) - ( ACS * Max( Const,ACS ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe - ( RCSe - RCSe ) ) ,Max( ( RRSe + RRSe ),RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR - Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2585859599563105}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( Max( MRS,( FirstVNF_Mem_Server + ACS ) ) + ( PN / DDR ) ) + MRS ) ) - BR ),( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) - ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe + RRSe ) - Min( CS ,RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7459895419029233}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.41732283464566927, "obj2": 0.38031670951664026}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.281496062992126, "obj2": 0.5417961098761224}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server * DDR ) + ( ( MRS - ( MRS / PN ) ) * PN ) ) ) ),( ACS / BR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( MUR / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( Max( ( MUR / ( MLU * MUC ) ),RRSe ) * RRSe ) ,MUC ) )", "obj1": 0.36811023622047245, "obj2": 0.4449882141722993}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "Max( ( Min( ACS ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( ACS / AMS ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server / AMS ) * ( ( CRS * ( Const + MDR ) ) / BR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MLU - RCSe ) - RCSe ) - RMSe ) - ( DS + ( RRSe * Max( RRSe,Max( ( MUR + MUC ),( MUM / MLU ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( ( MUR * DS ) + DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) - ( ( ACS * CRS ) * Max( Min( PN ,AMS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( MUC + ( ( DS * MUC ) + ( ( RMSe - ( MUC / DS ) ) * Min( DS ,Min( DS ,RRSe ) ) ) ) ) ) - ( ( ( ( RCSe - ( MUM * RRSe ) ) / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUC,MUM ) ),Max( RCSe,( MLU / ( CS / MLU ) ) ) ) ) ) / ( ( ( Max( MUM,Min( Max( MLU,RCSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * ( ( MUR * Min( RRSe ,DS ) ) / ( ( Min( RCSe ,MLU ) - ( MLU - RCSe ) ) - CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4330477702396556}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "Min( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( DDR * FirstVNF_RAM_Server ) ) ,ACS )", "choosing": "( ( Max( ( MUM + ( ( ( CS + ( MLU - MUM ) ) * ( MUC + MUR ) ) - DS ) ),DS ) / Min( DS ,( RCSe + RMSe ) ) ) / ( Max( ( Max( DS,MUR ) / MUC ),MUC ) / MLU ) )", "obj1": 0.8011811023622047, "obj2": 0.07377272424649071}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) + ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU + ARS ) )", "choosing": "( Min( MUC ,RMSe ) / Max( Max( DS,RCSe ),Max( ( ( ( MUR * Max( DS,CS ) ) + ( Max( MLU,RRSe ) * MUC ) ) + MLU ),MUC ) ) )", "obj1": 0.25, "obj2": 0.5697002142824248}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.6437007874015748, "obj2": 0.18517079802793998}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ,( ( ( FirstVNF_Mem_Server - ( ACS * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,PN ) * Const ) ) + ( ( ( Min( CRS ,MDR ) + AMS ) - Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,ACS ) ) + FirstVNF_CPU_Server ) ) ) / AMS ) )", "choosing": "( Max( Min( Max( MUC,Max( Min( Min( Min( MLU ,MUC ) ,MLU ) ,RRSe ),RCSe ) ) ,CS ),MUR ) / Min( MUC ,RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.12680088085961608}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Max( CRS,PN ) * ACS ) ) ) / Min( MRS ,Max( AMS,ARS ) ) ) ,AMS ) * FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( Max( ( ( ( ( CS + ( MLU - DS ) ) * ( MUC + MUR ) ) - DS ) + RCSe ),DS ) / MUR ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( ( DS / RCSe ),RCSe ) ) + ( RMSe + ( RRSe * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.7578740157480315, "obj2": 0.1126712672697997}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4980359232453927}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ACS,ARS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( ( RMSe + CS ) / Max( ( ( Min( Min( MLU ,DS ) ,MLU ) / DS ) - MLU ),CS ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5287138824417845}, {"determining": "( ( ACS * PN ) - ( ( Min( PN ,MDR ) * ( ( Max( FirstVNF_Mem,( ( ARS + CRS ) * MDR ) ) * ( Min( FirstVNF_RAM_Server ,( MDR / CRS ) ) * Const ) ) + MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,RCSe ) * DS ) / DS ) + DS ),Min( ( MLU + ( MUC / ( Min( DS ,RCSe ) - RMSe ) ) ) ,DS ) ) / MUM ) / ( Max( ( ( ( ( ( MUR - CS ) + MUC ) / Max( Max( MUM,CS ),RCSe ) ) + ( RMSe + ( DS * RMSe ) ) ) + CS ),MUC ) / MLU ) )", "obj1": 0.6082677165354331, "obj2": 0.22170252467619994}, {"determining": "( ( ( FirstVNF_RAM - Const ) / CRS ) - Max( ( ( ACS / CRS ) - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( CS + MUR ) ) + ( Min( Min( Min( Min( MLU ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / ( RRSe - MLU ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) - ( RCSe * Max( MLU,CS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.532500231998929}, {"determining": "( Max( ( Max( AMS,( FirstVNF_RAM + Min( ( FirstVNF_RAM - Min( FirstVNF_RAM ,ARS ) ) ,CRS ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MUR ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( Min( RMSe ,( MUR - CS ) ) / ( ( ( RCSe + ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.4613056070726891}, {"determining": "( ( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( MDR * AMS ) ) / Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) )", "choosing": "( ( MUM - ( DS + ( Max( MUR,( MUR + CS ) ) * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( DS / ( CS * MUM ) ),MUC ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4548676095633967}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,( ( DDR - MRS ) * Min( MDR ,ARS ) ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) + FirstVNF_CPU_Server ) ) / ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Max( CRS,Const ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - AMS ) ),( ACS + ( Min( MRS ,( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ACS * AMS ) ) ) ) - PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,CS ) - ( RCSe - ( ( ( Max( ( RMSe + ( DS + RMSe ) ),MUC ) + MUC ) * MUC ) - RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6216233104497181}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( BR + Min( ( Max( Const,MRS ) / CRS ) ,FirstVNF_RAM_Server ) ) ) ),ARS ) - ( FirstVNF_CPU_Server * Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM - ( DS * ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / ( ( ( ( ( MUM * ( DS * MUM ) ) + RRSe ) * ( ( MUR * MUM ) * ( MUR + ( Min( MLU ,MUC ) + RCSe ) ) ) ) / ( MUC - MUM ) ) - MLU ) )", "obj1": 0.3838582677165354, "obj2": 0.4246984983018075}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,( BR - ARS ) ) ) - ( FirstVNF_Mem_Server - ( Min( ( Min( AMS ,BR ) + BR ) ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) + DS ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Max( ( MLU / Max( MLU,( RRSe - MUM ) ) ),Max( MUM,RRSe ) ) / Min( RCSe ,MUR ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.328740157480315, "obj2": 0.4864192119524837}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,CS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + RCSe ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( ( MUR - MUM ),MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5165217847265176}, {"determining": "( Max( ( ( AMS / ( Max( ARS,Const ) - Max( AMS,( FirstVNF_RAM_Server / AMS ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,( MDR + DDR ) ) - MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( ( MUC + ( MLU * MUR ) ) / DS ),RRSe ) / ( DS + MUC ) ) - Min( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUM,( RRSe + MUC ) ) ),Max( RCSe,RRSe ) ) ) ) ,( ( ( ( MLU + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( DS,( RRSe - CS ) ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4763779527559055, "obj2": 0.3165892413302117}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,Max( MLU,MUM ) ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.2483189499878203}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Max( ( FirstVNF_Mem_Server * CRS ),( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_CPU / FirstVNF_RAM ) / ( AMS - BR ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) / Max( Const,RRS ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe / ( MUR * CS ) ) + ( DS / ( ( DS + Min( Min( MUM ,MUM ) ,MUC ) ) / MLU ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5978328231256723}, {"determining": "( Max( ACS,( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( ( ( ACS + CRS ) / FirstVNF_CPU ) * CRS ) + BR ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,( MUC + RRSe ) ) ) ) ) ) ) / Max( MLU,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS - MUM ) ) ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.3967707376079904}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * Max( AMS,FirstVNF_Mem_Server ) ) * ARS ) + PN ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( Min( MUR ,RMSe ) + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( Max( ( ( MUR * Max( CS,RCSe ) ) + RRSe ),( MUR * MUR ) ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.468503937007874, "obj2": 0.3285970750840619}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5393700787401575, "obj2": 0.2682732671687935}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,( FirstVNF_RAM / DDR ) ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( MRS / Const ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( CS * RRSe ) / CS ) ,Max( MUC,RMSe ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( RMSe * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,( RRSe / DS ) ) ) )", "obj1": 0.594488188976378, "obj2": 0.22273487339302916}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - Max( MRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ),AMS ) - ( FirstVNF_Mem_Server - Max( ( CRS / MRS ),FirstVNF_Mem_Server ) ) ),AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) ,( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUM ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / ( ( ( Min( RRSe ,MUM ) - RMSe ) - MLU ) * RRSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.4757875924662519}, {"determining": "( ( ACS * PN ) - ( ( ARS - FirstVNF_Mem_Server ) / ( Min( Min( ACS ,ARS ) ,( FirstVNF_Mem_Server / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) / Min( Min( Min( Min( RCSe ,( MUC + RMSe ) ) ,MUC ) ,MUM ) ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.16191543591804153}, {"determining": "( ( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,( RRS / CRS ) ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( PN * MDR ) ) - Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( DS / ( ( ( MUR / MLU ) - MUR ) * MUM ) ),MUC ) ) )", "obj1": 0.4015748031496063, "obj2": 0.40326060238470535}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( ARS,( FirstVNF_RAM - MDR ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( ( RRSe - ( CS / MUM ) ) - CS ) - ( RMSe + Min( RCSe ,Min( MLU ,MUC ) ) ) ) ) / ( CS - ( CS + ( DS / Min( ( RRSe - RCSe ) ,CS ) ) ) ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5605272921678494}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU * ( FirstVNF_CPU_Server + ( FirstVNF_RAM / RRS ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( ( BR / PN ) * ( ( FirstVNF_CPU_Server + DDR ) * AMS ) ) ) * ( Min( Min( CRS ,Max( Min( BR ,RRS ),FirstVNF_CPU ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( RRSe + Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( ( RMSe + MUM ),RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4734416848219989}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem_Server ,PN ) / ( ( Min( Min( CRS ,Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM ) / ( ACS + Const ) ) / FirstVNF_RAM_Server ) ) ) / Min( Const ,Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe - ( DS + ( ( MLU / CS ) * Max( ( ( RRSe - ( DS * RMSe ) ) + Max( Min( MUR ,DS ),MUM ) ),Min( Min( ( RCSe + RCSe ) ,DS ) ,( RRSe - DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.1732283464566929, "obj2": 0.6711485089568967}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM / ACS ) + Max( FirstVNF_Mem_Server,BR ) ) - Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUC,MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( ( MLU + Max( RRSe,MUC ) ) / MUM ),DS ) ) ) ) / ( MLU + ( ( CS + Min( RCSe ,Min( RRSe ,RRSe ) ) ) * DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7189266925208706}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( ( MRS + MRS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / ( ( ( RRSe / CS ) - DS ) + MUC ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,MUM ) ,MUM ) ) ) )", "obj1": 0.6122047244094488, "obj2": 0.20759422604687452}, {"determining": "Min( FirstVNF_Mem ,( Min( Min( ( FirstVNF_RAM / ARS ) ,Min( ( Max( FirstVNF_RAM,BR ) * Max( FirstVNF_RAM,( ARS + BR ) ) ) ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04881779249084595}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "( Min( MRS ,MDR ) - Max( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Min( ( FirstVNF_Mem_Server / Const ) ,AMS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS / Max( ( ( RRSe + CS ) / CS ),( ( RMSe / ( RCSe + RCSe ) ) + ( ( ( DS + MLU ) + ( DS + RCSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( MUM ,( ( RMSe * ( Max( ( ( MUM - DS ) - RCSe ),Min( Max( CS,DS ) ,CS ) ) * RRSe ) ) - Max( Min( CS ,( RRSe - MUC ) ),RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.193399005149478}, {"determining": "( ( ( FirstVNF_Mem - ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Max( Min( AMS ,Min( ( FirstVNF_CPU_Server - MRS ) ,FirstVNF_CPU_Server ) ),FirstVNF_RAM ) * CRS ) * ( Min( ( Min( ( FirstVNF_CPU - DDR ) ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( FirstVNF_Mem_Server * CRS ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( DS + ( CS * Max( Max( ( RCSe + RCSe ),DS ),RRSe ) ) ) ) / Max( Max( MUM,( ( MLU + RMSe ) * ( RRSe / Min( MLU ,MUC ) ) ) ),Max( ( ( ( MUR * ( ( RRSe - RCSe ) * MLU ) ) + RRSe ) + ( MUR - MUR ) ),MUC ) ) )", "obj1": 0.4153543307086614, "obj2": 0.3864995628573752}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.517274254170924}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "Min( Max( ARS,Const ) ,( FirstVNF_Mem_Server / Min( MRS ,DDR ) ) )", "choosing": "( ( MLU + ( ( RRSe + Min( ( CS / ( RMSe / MUM ) ) ,MUM ) ) - DS ) ) / ( Max( ( MUM / RCSe ),MUR ) * ( MUM / ( ( MLU * MUC ) - Max( ( MUR / MUM ),DS ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09258496368481155}, {"determining": "( ( Min( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + MRS ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( PN * MDR ) ) / Min( MRS ,ACS ) ) * AMS ) + Max( ACS,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( MLU + Min( RRSe ,Max( MUM,( MUM - CS ) ) ) ) * MUM ) - MUM ) - ( RMSe + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.234251968503937, "obj2": 0.5940256487777793}, {"determining": "Min( ( ( ( Min( ( ARS + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,( Const - DDR ) ) / Max( ( Min( Min( BR ,FirstVNF_CPU ) ,( Const * PN ) ) / DDR ),( FirstVNF_RAM * ( FirstVNF_RAM - Const ) ) ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,CS ) ) + RRSe ) + MLU ),MUC ) ) + ( Max( RCSe,Max( MLU,( ( MLU + MUR ) - ( Max( MUM,( RRSe * RCSe ) ) - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( CS - ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) ) ,( DS / DS ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.027974348644654343}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM - BR ) * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( ( ( ( DS - RMSe ) - CS ) + DS ),Min( ( RCSe - Min( MUC ,MUC ) ) ,Min( RRSe ,RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14348187800213238}, {"determining": "( ( Max( ( RRS + ( Const * BR ) ),PN ) + FirstVNF_Mem_Server ) / ( ( ( FirstVNF_RAM / ACS ) + MDR ) - ( DDR / AMS ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( Min( ( RCSe + RCSe ) ,DS ),RRSe ) ) ) ) / ( MUR / MUR ) )", "obj1": 0.9763779527559056, "obj2": 0.00918920654936684}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( ( Max( FirstVNF_Mem_Server,BR ) - Min( PN ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUM,( CS / MUM ) ),Max( ( ( ( MUR * ( DS / RCSe ) ) + RRSe ) + ( DS / Max( DS,CS ) ) ),MUC ) ) / ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.34939227984429655}, {"determining": "Min( ( FirstVNF_CPU_Server * Max( DDR,CRS ) ) ,( Min( ( Min( ( ( PN - MDR ) * FirstVNF_CPU ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / ( MRS + ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe - MUR ) / ( CS / MUM ) )", "obj1": 0.8799212598425197, "obj2": 0.045629490696726366}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ( PN * CRS ) * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / Max( Max( ( MUR + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.16490063273511005}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( MLU,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.42097949427043074}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * ( BR + ( PN * ACS ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * ( CS + MUR ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( MUM / DS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.0428848208560903}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( CRS,PN ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( RCSe - Min( MUC ,MUC ) ) * Max( DS,DS ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.4566929133858268, "obj2": 0.3371907937792568}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,( Min( FirstVNF_RAM ,PN ) * ACS ) ) ) / ( MRS / ACS ) ) ,RRS ) - ( FirstVNF_Mem / Min( ACS ,RRS ) ) ) ,ACS )", "choosing": "( ( MUC - MUR ) + ( Min( ( ( DS - CS ) - MLU ) ,Max( RMSe,RRSe ) ) + ( DS / Min( Max( Max( Max( CS,RCSe ),( DS + ( MUC * MUR ) ) ),DS ) ,CS ) ) ) )", "obj1": 0.8326771653543307, "obj2": 0.06356342488129875}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( ( PN - ( PN + FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + MLU ) - MUC ) / Max( Max( MUM,( CS / MUC ) ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.4507874015748031, "obj2": 0.34342887499010527}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08509173898946452}, {"determining": "( ( FirstVNF_RAM_Server * ( Min( BR ,FirstVNF_CPU ) - FirstVNF_CPU ) ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MUC ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( ( ( Min( Max( MUM,MLU ) ,MUM ) + MUM ) + MUR ) / Max( RRSe,DS ) ) - ( MUM / MLU ) ) / ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MUR / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49315041313457}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM - AMS ) * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) - MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( RRSe,( CS * Max( ( ( ( MUR * RMSe ) + Min( MUC ,DS ) ) + CS ),Min( ( RCSe - Min( MUC ,MUC ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( MLU + ( ( MUR * Max( DS,RCSe ) ) + RRSe ) ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.7244094488188977, "obj2": 0.1292872234346313}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,DDR ) + ( ( MRS - ( ( FirstVNF_Mem * FirstVNF_CPU ) / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( Const - ( PN + FirstVNF_CPU_Server ) ) ) * ( Min( Min( CRS ,Max( ACS,PN ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + ARS ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),( MLU - ( ( RRSe * CS ) + RCSe ) ) ) / ( MLU / MUC ) ) ) ) * ( ( MUR + RCSe ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.2721721305873556}, {"determining": "( ( ( PN / Min( ( Min( MDR ,BR ) * PN ) ,AMS ) ) * ACS ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( DDR + Min( MDR ,MDR ) ) ) ) ) ) / Min( ( FirstVNF_CPU / MDR ) ,ACS ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( RRSe / MLU ) ,MUR ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( RMSe * DS ) - ( Min( ( RCSe + ( MUM / MUM ) ) ,( ( MUC / ( RMSe - RMSe ) ) / ( MUR + CS ) ) ) - Max( RRSe,DS ) ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20400820927373708}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( ( RCSe + DS ),Min( ( RCSe - Min( MUC ,RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.6988188976377953, "obj2": 0.14633755105701024}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + Max( ( ( FirstVNF_RAM / RRS ) + ARS ),( FirstVNF_RAM / ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( Min( ACS ,BR ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) * CS ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( Max( DS,RCSe ) * MLU ) + ( ( ( MUR * CS ) / DS ) - Max( RMSe,Max( MUR,MUC ) ) ) ) + MLU ),MUC ) ) )", "obj1": 0.687007874015748, "obj2": 0.15199309033614528}, {"determining": "( ( PN * ACS ) - ( FirstVNF_CPU + RRS ) )", "choosing": "( ( ( MLU - RMSe ) / MLU ) / Max( MLU,( Min( MLU ,Max( ( Min( MUC ,CS ) + ( MUC * MUR ) ),DS ) ) / Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.17806875622170554}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * Min( ( MUC / ( DS / DS ) ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.05754332013557143}, {"determining": "( ( ( ( ACS - Max( MRS,DDR ) ) + PN ) * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) / ( MDR * Min( DDR ,( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( DS + MUM ) ,RRSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( CS - MUM ) )", "obj1": 0.5787401574803149, "obj2": 0.23419979488372505}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( RRSe * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.5708661417322834, "obj2": 0.24114991837287056}, {"determining": "( ( ( BR + FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,ACS ) ) * Max( ( ( FirstVNF_Mem_Server * ( AMS + PN ) ) * ( AMS + Min( ( Min( CRS ,Max( FirstVNF_Mem,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Min( Max( ( MUM + RRSe ),MUR ) ,( MLU / DS ) ) * ( RRSe * DS ) ),Max( MUM,( MUC - CS ) ) ) + Max( DS,( ( Max( CS,MUC ) - Max( ( RCSe / ( Max( MLU,RMSe ) * MUR ) ),( ( MUM / ( MUC + RRSe ) ) + ( RCSe - MUR ) ) ) ) - Max( Min( ( ( MLU + MUR ) / ( MUM * RMSe ) ) ,RRSe ),MUR ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5654353761879637}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.562992125984252, "obj2": 0.2452353020817945}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * Min( ( MUC / ( DS / Min( Max( RCSe,MLU ) ,MUM ) ) ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.053394250373599864}, {"determining": "( ( ACS * PN ) - ( Min( ( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / CRS ) * ( ACS * ACS ) ) ) * Max( Min( FirstVNF_RAM_Server ,Const ),Const ) ) * MDR ) ,Max( DDR,PN ) ) / AMS ) )", "choosing": "( ( ( CS * ( RRSe + Min( ( RMSe - ( RCSe + Min( MLU ,RRSe ) ) ) ,( DS / MUM ) ) ) ) - Max( DS,( Max( Min( ( RCSe - Min( MUR ,DS ) ) ,Min( RRSe ,DS ) ),( RCSe + DS ) ) * CS ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,CS ) ) )", "obj1": 0.7204724409448819, "obj2": 0.1306625003435614}, {"determining": "Max( ( Min( Min( ( ( Const - ( ( FirstVNF_CPU_Server / ARS ) - Max( FirstVNF_Mem,ACS ) ) ) * MDR ) ,FirstVNF_CPU_Server ) ,BR ) + ( MDR / FirstVNF_RAM_Server ) ),( Max( ( ( FirstVNF_Mem / AMS ) * ( Const - MDR ) ),Min( RRS ,RRS ) ) / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) / Max( ( Min( ( Max( ( CS + DS ),Min( MLU ,Max( MUR,RCSe ) ) ) + DS ) ,MUR ) / CS ),Max( ( MLU / MUM ),RCSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6619577895696983}], "48": [{"determining": "( ( ACS * PN ) - ( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ) + ARS ) )", "choosing": "( ( ( CS * RMSe ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * Max( ( CS - RRSe ),DS ) ) - Min( Min( ( Max( ( RRSe - ( CS / RCSe ) ),DS ) * ( CS - RMSe ) ) ,MUR ) ,Min( MUM ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ARS,Const ) ,( FirstVNF_Mem_Server / Min( MRS ,DDR ) ) )", "choosing": "( ( MLU + ( ( RRSe + Min( ( CS / ( RMSe / MUM ) ) ,MUM ) ) - DS ) ) / ( Max( ( MUM / RCSe ),MUR ) * ( MUM / ( ( MLU * MUC ) - Max( ( MUR / MUM ),DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,Max( ACS,( MRS - ( RRS * ARS ) ) ) ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( MUC,( MUM + MUM ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8373631865037017}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,DDR ) + ( ( MRS - ( ( FirstVNF_Mem * FirstVNF_CPU ) / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( Const - ( PN + FirstVNF_CPU_Server ) ) ) * ( Min( Min( CRS ,Max( ACS,PN ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + ARS ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),( MLU - ( ( RRSe * CS ) + RCSe ) ) ) / ( MLU / MUC ) ) ) ) * ( ( MUR + RCSe ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.2721721305873556}, {"determining": "( ( FirstVNF_RAM_Server * ( Min( BR ,FirstVNF_CPU ) - FirstVNF_CPU ) ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MUC ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUC ) ) / ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.49803149606299213, "obj2": 0.2935938104120736}, {"determining": "( ( ( FirstVNF_RAM + ( ARS + Max( Const,( ( MRS - Const ) - FirstVNF_RAM_Server ) ) ) ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) + FirstVNF_RAM ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( PN + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * ( MUC - ( ( CS / MUM ) / ( RMSe / MUC ) ) ) ),( RRSe / RCSe ) ) / Max( ( RCSe - Max( MUM,MLU ) ),( MUM + Min( ( ( RMSe / DS ) * MUR ) ,( MUM - ( RRSe + RMSe ) ) ) ) ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8126349739618789}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.12007874015748031, "obj2": 0.7637515354848919}, {"determining": "( Max( ( ( AMS / ( Max( ARS,Const ) - Max( AMS,( FirstVNF_RAM_Server / AMS ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,( MDR + DDR ) ) - MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( ( MUC + ( MLU * MUR ) ) / DS ),RRSe ) / ( DS + MUC ) ) - Min( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUM,( RRSe + MUC ) ) ),Max( RCSe,RRSe ) ) ) ) ,( ( ( ( MLU + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( DS,( RRSe - CS ) ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4763779527559055, "obj2": 0.3165892413302117}, {"determining": "( Max( ( ( Min( Min( FirstVNF_CPU ,( Const - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,MDR ) / Min( DDR ,( Const + CRS ) ) ) - ( MDR * AMS ) ),ACS ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( MUM,MUR ) - ( ( Max( MUR,( MUR + CS ) ) + ( Max( Min( MLU ,DS ),MLU ) * RMSe ) ) / Min( RCSe ,CS ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6250575335946054}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( ( RRS - Max( ARS,ACS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( CS,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.1968503937007874, "obj2": 0.648704433657865}, {"determining": "( Min( MRS ,MDR ) - Max( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Min( ( FirstVNF_Mem_Server / Const ) ,AMS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS / Max( ( ( RRSe + CS ) / CS ),( ( RMSe / ( RCSe + RCSe ) ) + ( ( ( DS + MLU ) + ( DS + RCSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( MUM ,( ( RMSe * ( Max( ( ( MUM - DS ) - RCSe ),Min( Max( CS,DS ) ,CS ) ) * RRSe ) ) - Max( Min( CS ,( RRSe - MUC ) ),RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.193399005149478}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * Min( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server - ( Min( ( CRS / BR ) ,FirstVNF_RAM_Server ) + BR ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - ( ( ( Min( RRSe ,RCSe ) + ( DS * MUC ) ) + MUM ) - ( ( Max( MLU,MUR ) - DS ) - RCSe ) ) ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( DS + MUC ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8171816977981369}, {"determining": "( Max( Min( ( ( Const - Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ) ) / Min( RRS ,Const ) ) ,MRS ),ACS ) - ( ( DDR / ACS ) * AMS ) )", "choosing": "( ( ( MLU / Min( ( Min( MLU ,RRSe ) + MUC ) ,Min( ( Min( CS ,( MUC / MUR ) ) + MUR ) ,RMSe ) ) ) / Min( ( CS / MUM ) ,( MUM / ( ( MLU / ( DS / RRSe ) ) / ( ( CS / MUM ) / MUR ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.697591401632469}, {"determining": "( ( ( ( Min( Min( CRS ,FirstVNF_RAM ) ,ACS ) / Min( ( ( PN - Max( MRS,MRS ) ) * ( ( MDR / PN ) + FirstVNF_CPU ) ) ,( ( ( AMS + FirstVNF_RAM_Server ) / ( ARS * MDR ) ) / ( Max( FirstVNF_CPU_Server,MDR ) * FirstVNF_RAM ) ) ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( DS,( CS / Max( RRSe,Min( MUM ,( RMSe + RMSe ) ) ) ) ) - MUM ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( RMSe - ( MUM + CS ) ) + MUR ) + MLU ) + MLU ),MUC ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5546823319561044}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( Max( MRS,( FirstVNF_Mem_Server + ACS ) ) + ( PN / DDR ) ) + MRS ) ) - BR ),( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) - ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe + RRSe ) - Min( CS ,RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7459895419029233}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Max( CRS,PN ) * ACS ) ) ) / Min( MRS ,Max( AMS,ARS ) ) ) ,AMS ) * FirstVNF_RAM_Server ) ,ACS )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.7854330708661418, "obj2": 0.08144944981247085}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.281496062992126, "obj2": 0.5417961098761224}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server * DDR ) + ( ( MRS - ( MRS / PN ) ) * PN ) ) ) ),( ACS / BR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( MUR / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - Min( ( Max( ( MUR / ( MLU * MUC ) ),RRSe ) * RRSe ) ,MUC ) )", "obj1": 0.36811023622047245, "obj2": 0.4449882141722993}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM - BR ) * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( ( ( ( DS - RMSe ) - CS ) + DS ),Min( ( RCSe - Min( MUC ,MUC ) ) ,Min( RRSe ,RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14348187800213238}, {"determining": "Min( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( DDR * FirstVNF_RAM_Server ) ) ,ACS )", "choosing": "( ( Max( ( MUM + ( ( ( CS + ( MLU - MUM ) ) * ( MUC + MUR ) ) - DS ) ),DS ) / Min( DS ,( RCSe + RMSe ) ) ) / ( Max( ( Max( DS,MUR ) / MUC ),MUC ) / MLU ) )", "obj1": 0.8011811023622047, "obj2": 0.07377272424649071}, {"determining": "Max( ( Min( ACS ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( ACS / AMS ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server / AMS ) * ( ( CRS * ( Const + MDR ) ) / BR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MLU - RCSe ) - RCSe ) - RMSe ) - ( DS + ( RRSe * Max( RRSe,Max( ( MUR + MUC ),( MUM / MLU ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( ( MUR * DS ) + DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) + ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU + ARS ) )", "choosing": "( Min( MUC ,RMSe ) / Max( Max( DS,RCSe ),Max( ( ( ( MUR * Max( DS,CS ) ) + ( Max( MLU,RRSe ) * MUC ) ) + MLU ),MUC ) ) )", "obj1": 0.25, "obj2": 0.5697002142824248}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ,( ( ( FirstVNF_Mem_Server - ( ACS * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,PN ) * Const ) ) + ( ( ( Min( CRS ,MDR ) + AMS ) - Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,ACS ) ) + FirstVNF_CPU_Server ) ) ) / AMS ) )", "choosing": "( Max( Min( Max( MUC,Max( Min( Min( Min( MLU ,MUC ) ,MLU ) ,RRSe ),RCSe ) ) ,CS ),MUR ) / Min( MUC ,RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.12680088085961608}, {"determining": "Min( ( ( MDR / DDR ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( ( ( ( Max( DS,RMSe ) + RCSe ) * MLU ) - DS ) - ( Max( ( ( RCSe - MLU ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( MLU / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.028891851929316315}, {"determining": "( ( ( PN / Min( ( Min( MDR ,BR ) * PN ) ,AMS ) ) * ACS ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( DDR + Min( MDR ,MDR ) ) ) ) ) ) / Min( ( FirstVNF_CPU / MDR ) ,ACS ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( RRSe / MLU ) ,MUR ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( RMSe * DS ) - ( Min( ( RCSe + ( MUM / MUM ) ) ,( ( MUC / ( RMSe - RMSe ) ) / ( MUR + CS ) ) ) - Max( RRSe,DS ) ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20400820927373708}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ,( ( ( FirstVNF_Mem_Server - ( ACS * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( Min( MUC ,RMSe ) / Max( Max( MUM,RCSe ),CS ) )", "obj1": 0.7559055118110236, "obj2": 0.11149528760857538}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4980359232453927}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem,ACS ) ) * ( ( MDR * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - Min( DS ,( ( ( ( RCSe + MUR ) * ( CS - ( MLU * CS ) ) ) / ( DS + Min( ( RRSe + MUR ) ,CS ) ) ) * Max( Min( RRSe ,MLU ),Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Min( Max( MUC,RCSe ) ,RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36571432728100917}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ACS,ARS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( ( RMSe + CS ) / Max( ( ( Min( Min( MLU ,DS ) ,MLU ) / DS ) - MLU ),CS ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5287138824417845}, {"determining": "( ( ( FirstVNF_RAM - Const ) / CRS ) - Max( ( ( ACS / CRS ) - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( CS + MUR ) ) + ( Min( Min( Min( Min( MLU ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / ( RRSe - MLU ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) - ( RCSe * Max( MLU,CS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.532500231998929}, {"determining": "( Max( ( Max( AMS,( FirstVNF_RAM + Min( ( FirstVNF_RAM - Min( FirstVNF_RAM ,ARS ) ) ,CRS ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MUR ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( Min( RMSe ,( MUR - CS ) ) / ( ( ( RCSe + ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.4613056070726891}, {"determining": "( ( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( MDR * AMS ) ) / Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) )", "choosing": "( ( MUM - ( DS + ( Max( MUR,( MUR + CS ) ) * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( DS / ( CS * MUM ) ),MUC ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4548676095633967}, {"determining": "( ( ACS * PN ) - ( Min( ( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / CRS ) * ( ACS * ACS ) ) ) * Max( Min( FirstVNF_RAM_Server ,Const ),Const ) ) * MDR ) ,Max( DDR,PN ) ) / AMS ) )", "choosing": "( ( ( CS * ( RRSe + Min( ( RMSe - ( RCSe + Min( MLU ,RRSe ) ) ) ,( DS / MUM ) ) ) ) - Max( DS,( Max( Min( ( RCSe - Min( MUR ,DS ) ) ,Min( RRSe ,DS ) ),( RCSe + DS ) ) * CS ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,CS ) ) )", "obj1": 0.7204724409448819, "obj2": 0.1306625003435614}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,( ( DDR - MRS ) * Min( MDR ,ARS ) ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) + FirstVNF_CPU_Server ) ) / ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Max( CRS,Const ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - AMS ) ),( ACS + ( Min( MRS ,( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ACS * AMS ) ) ) ) - PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,CS ) - ( RCSe - ( ( ( Max( ( RMSe + ( DS + RMSe ) ),MUC ) + MUC ) * MUC ) - RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6216233104497181}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,( BR - ARS ) ) ) - ( FirstVNF_Mem_Server - ( Min( ( Min( AMS ,BR ) + BR ) ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) + DS ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Max( ( MLU / Max( MLU,( RRSe - MUM ) ) ),Max( MUM,RRSe ) ) / Min( RCSe ,MUR ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.328740157480315, "obj2": 0.4864192119524837}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,CS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + RCSe ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( ( MUR - MUM ),MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5165217847265176}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Max( ( FirstVNF_Mem_Server * CRS ),( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_CPU / FirstVNF_RAM ) / ( AMS - BR ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) / Max( Const,RRS ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe / ( MUR * CS ) ) + ( DS / ( ( DS + Min( Min( MUM ,MUM ) ,MUC ) ) / MLU ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5978328231256723}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * Max( AMS,FirstVNF_Mem_Server ) ) * ARS ) + PN ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( Min( MUR ,RMSe ) + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( Max( ( ( MUR * Max( CS,RCSe ) ) + RRSe ),( MUR * MUR ) ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.468503937007874, "obj2": 0.3285970750840619}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( MLU,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.3763715233267665}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * Min( ( MUC / ( DS / Min( Max( RCSe,MLU ) ,MUM ) ) ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.053394250373599864}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ARS ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.3006349557650156}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + Max( ( ( FirstVNF_RAM / RRS ) + ARS ),( FirstVNF_RAM / ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( Min( ACS ,BR ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) * CS ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( Max( DS,RCSe ) * MLU ) + ( ( ( MUR * CS ) / DS ) - Max( RMSe,Max( MUR,MUC ) ) ) ) + MLU ),MUC ) ) )", "obj1": 0.687007874015748, "obj2": 0.15199309033614528}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.6437007874015748, "obj2": 0.18517079802793998}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "( ( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,( RRS / CRS ) ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( PN * MDR ) ) - Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( DS / ( ( ( MUR / MLU ) - MUR ) * MUM ) ),MUC ) ) )", "obj1": 0.4015748031496063, "obj2": 0.40326060238470535}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "( ( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * Max( ARS,( FirstVNF_RAM - MDR ) ) )", "choosing": "( ( MUR / ( MUR * CS ) ) + ( DS / ( ( DS + ( ( ( RRSe - ( CS / MUM ) ) - CS ) - ( RMSe + Min( RCSe ,Min( MLU ,MUC ) ) ) ) ) / ( CS - ( CS + ( DS / Min( ( RRSe - RCSe ) ,CS ) ) ) ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5605272921678494}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * FirstVNF_CPU_Server ) ) * ( Min( Min( MRS ,ACS ) ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Min( RCSe ,( RMSe + RRSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.21938999737474413}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem_Server ,PN ) / ( ( Min( Min( CRS ,Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM ) / ( ACS + Const ) ) / FirstVNF_RAM_Server ) ) ) / Min( Const ,Min( ( PN / MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe - ( DS + ( ( MLU / CS ) * Max( ( ( RRSe - ( DS * RMSe ) ) + Max( Min( MUR ,DS ),MUM ) ),Min( Min( ( RCSe + RCSe ) ,DS ) ,( RRSe - DS ) ) ) ) ) ) / ( DS + MUC ) )", "obj1": 0.1732283464566929, "obj2": 0.6711485089568967}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM / ACS ) + Max( FirstVNF_Mem_Server,BR ) ) - Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUC,MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( ( MLU + Max( RRSe,MUC ) ) / MUM ),DS ) ) ) ) / ( MLU + ( ( CS + Min( RCSe ,Min( RRSe ,RRSe ) ) ) * DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7189266925208706}, {"determining": "( ( ( ( ACS - Max( MRS,DDR ) ) + PN ) * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) / ( MDR * Min( DDR ,( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( DS + MUM ) ,RRSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( CS - MUM ) )", "obj1": 0.5787401574803149, "obj2": 0.23419979488372505}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / ( ( BR / FirstVNF_RAM ) / FirstVNF_CPU ) ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.610236220472441, "obj2": 0.21040260653086215}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "( ( ( FirstVNF_Mem - ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Max( Min( AMS ,Min( ( FirstVNF_CPU_Server - MRS ) ,FirstVNF_CPU_Server ) ),FirstVNF_RAM ) * CRS ) * ( Min( ( Min( ( FirstVNF_CPU - DDR ) ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( FirstVNF_Mem_Server * CRS ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( DS + ( CS * Max( Max( ( RCSe + RCSe ),DS ),RRSe ) ) ) ) / Max( Max( MUM,( ( MLU + RMSe ) * ( RRSe / Min( MLU ,MUC ) ) ) ),Max( ( ( ( MUR * ( ( RRSe - RCSe ) * MLU ) ) + RRSe ) + ( MUR - MUR ) ),MUC ) ) )", "obj1": 0.4153543307086614, "obj2": 0.3864995628573752}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.517274254170924}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "( ( Const + MDR ) - ( Min( Min( PN ,MDR ) ,( ( ( ( MRS - ( DDR * Const ) ) - ( ACS * Max( Const,ACS ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe - ( RCSe - RCSe ) ) ,Max( ( RRSe + RRSe ),RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR - Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2585859599563105}, {"determining": "( ( Min( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + MRS ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( PN * MDR ) ) / Min( MRS ,ACS ) ) * AMS ) + Max( ACS,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( MLU + Min( RRSe ,Max( MUM,( MUM - CS ) ) ) ) * MUM ) - MUM ) - ( RMSe + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.234251968503937, "obj2": 0.5940256487777793}, {"determining": "Min( ( ( ( Min( ( ARS + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,( Const - DDR ) ) / Max( ( Min( Min( BR ,FirstVNF_CPU ) ,( Const * PN ) ) / DDR ),( FirstVNF_RAM * ( FirstVNF_RAM - Const ) ) ) ) / AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,CS ) ) + RRSe ) + MLU ),MUC ) ) + ( Max( RCSe,Max( MLU,( ( MLU + MUR ) - ( Max( MUM,( RRSe * RCSe ) ) - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( CS - ( DS - ( DS / Max( ( MUM / DS ),RCSe ) ) ) ) ,( DS / DS ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.027974348644654343}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ARS ,ACS ) ,( Max( ( BR + Const ),FirstVNF_CPU_Server ) / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Min( RCSe ,( Max( ( CS + MUC ),( CS / RCSe ) ) * MUC ) ) ) ) / MUM ) / ( ( Min( ( RRSe * MUC ) ,( RCSe + RMSe ) ) * ( RMSe * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.5511811023622047, "obj2": 0.2548728615598716}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU * ( FirstVNF_CPU_Server + ( FirstVNF_RAM / RRS ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( ( BR / PN ) * ( ( FirstVNF_CPU_Server + DDR ) * AMS ) ) ) * ( Min( Min( CRS ,Max( Min( BR ,RRS ),FirstVNF_CPU ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( RRSe + Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( ( RMSe + MUM ),RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4734416848219989}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - Max( MRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ),AMS ) - ( FirstVNF_Mem_Server - Max( ( CRS / MRS ),FirstVNF_Mem_Server ) ) ),AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) ,( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUM ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / ( ( ( Min( RRSe ,MUM ) - RMSe ) - MLU ) * RRSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.4757875924662519}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( ( Max( FirstVNF_Mem_Server,BR ) - Min( PN ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUM,( CS / MUM ) ),Max( ( ( ( MUR * ( DS / RCSe ) ) + RRSe ) + ( DS / Max( DS,CS ) ) ),MUC ) ) / ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.34939227984429655}, {"determining": "( ( ACS * PN ) - ( ( ARS - FirstVNF_Mem_Server ) / ( Min( Min( ACS ,ARS ) ,( FirstVNF_Mem_Server / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) / Min( Min( Min( Min( RCSe ,( MUC + RMSe ) ) ,MUC ) ,MUM ) ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.16191543591804153}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( MLU,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.42097949427043074}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + Max( ( ( FirstVNF_RAM / RRS ) + ARS ),( FirstVNF_RAM / ( ( FirstVNF_CPU_Server - CRS ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( Max( DS,RCSe ) * RCSe ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.8110236220472441, "obj2": 0.06960207899299231}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * ( BR + ( PN * ACS ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * ( CS + MUR ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( MUM / DS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.0428848208560903}, {"determining": "( ( PN * ACS ) - ( FirstVNF_CPU + RRS ) )", "choosing": "( ( ( MLU - RMSe ) / MLU ) / Max( MLU,( Min( MLU ,Max( ( Min( MUC ,CS ) + ( MUC * MUR ) ),DS ) ) / Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.00429977607171186}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * ( BR + ( PN * ACS ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * ( CS + MUR ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( MUM / DS ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.03283842617522303}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) - ( ( ACS * CRS ) * Max( Min( PN ,AMS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe - MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( MUC + ( ( DS * MUC ) + ( ( RMSe - ( MUC / DS ) ) * Min( DS ,Min( DS ,RRSe ) ) ) ) ) ) - ( ( ( ( RCSe - ( MUM * RRSe ) ) / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUC,MUM ) ),Max( RCSe,( MLU / ( CS / MLU ) ) ) ) ) ) / ( ( ( Max( MUM,Min( Max( MLU,RCSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * ( ( MUR * Min( RRSe ,DS ) ) / ( ( Min( RCSe ,MLU ) - ( MLU - RCSe ) ) - CS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4330477702396556}, {"determining": "Min( Max( ARS,Const ) ,( FirstVNF_Mem_Server / Min( MRS ,DDR ) ) )", "choosing": "( ( MLU + ( ( RRSe + Min( ( CS / ( RMSe / MUM ) ) ,MUM ) ) - DS ) ) / ( Max( ( MUM / RCSe ),MUR ) * ( MUM / ( ( MLU * MUC ) - Max( ( MUR / MUM ),DS ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09258496368481155}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( ( PN - ( PN + FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + MLU ) - MUC ) / Max( Max( MUM,( CS / MUC ) ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.4507874015748031, "obj2": 0.34342887499010527}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.41732283464566927, "obj2": 0.38031670951664026}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + Max( ( ( FirstVNF_RAM / RRS ) + ARS ),( FirstVNF_RAM / ( ( FirstVNF_CPU_Server - CRS ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( Max( DS,RCSe ) * RCSe ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.8366141732283464, "obj2": 0.06025701286188814}, {"determining": "( ( FirstVNF_RAM_Server * ( Min( BR ,FirstVNF_CPU ) - FirstVNF_CPU ) ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MUC ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( ( ( Min( Max( MUM,MLU ) ,MUM ) + MUM ) + MUR ) / Max( RRSe,DS ) ) - ( MUM / MLU ) ) / ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MUR / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49315041313457}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( ACS * ( ACS * ACS ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RCSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.24744477429195114}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * ( BR + ( PN * ACS ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * ( CS + MUR ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( MUM / DS ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.03283842617522303}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM - AMS ) * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) - MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( RRSe,( CS * Max( ( ( ( MUR * RMSe ) + Min( MUC ,DS ) ) + CS ),Min( ( RCSe - Min( MUC ,MUC ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( MLU + ( ( MUR * Max( DS,RCSe ) ) + RRSe ) ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.7244094488188977, "obj2": 0.1292872234346313}, {"determining": "( Min( Max( ( ( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( ( ( FirstVNF_RAM / ACS ) + Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) - ( DDR / PN ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.9724409448818898, "obj2": 0.010574971036646695}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.6594488188976378, "obj2": 0.17293354058927862}, {"determining": "( ( ACS * PN ) - ( AMS / Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ( PN * CRS ) * Max( FirstVNF_CPU,RRS ) ) ) * ( ( FirstVNF_Mem_Server - ( MDR + MRS ) ) * Const ) ) + BR ) ) ) )", "choosing": "( ( RRSe - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( CS,RCSe ),( ( Max( ( MUM / Max( MUC,( MLU / MUR ) ) ),( ( ( MUR * CS ) - CS ) * CS ) ) / ( RCSe / ( MUM + MLU ) ) ) + RRSe ) ) )", "obj1": 0.6633858267716536, "obj2": 0.16948250631892017}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,( FirstVNF_RAM / DDR ) ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( MRS / Const ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( CS * RRSe ) / CS ) ,Max( MUC,RMSe ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( RMSe * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,( RRSe / DS ) ) ) )", "obj1": 0.594488188976378, "obj2": 0.22273487339302916}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5393700787401575, "obj2": 0.2682732671687935}, {"determining": "Min( FirstVNF_Mem ,( Min( Min( ( FirstVNF_RAM / ARS ) ,Min( ( Max( FirstVNF_RAM,BR ) * Max( FirstVNF_RAM,( ARS + BR ) ) ) ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,Max( RRSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( CS / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04881779249084595}, {"determining": "( ( ( BR + FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,ACS ) ) * Max( ( ( FirstVNF_Mem_Server * ( AMS + PN ) ) * ( AMS + Min( ( Min( CRS ,Max( FirstVNF_Mem,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Min( Max( ( MUM + RRSe ),MUR ) ,( MLU / DS ) ) * ( RRSe * DS ) ),Max( MUM,( MUC - CS ) ) ) + Max( DS,( ( Max( CS,MUC ) - Max( ( RCSe / ( Max( MLU,RMSe ) * MUR ) ),( ( MUM / ( MUC + RRSe ) ) + ( RCSe - MUR ) ) ) ) - Max( Min( ( ( MLU + MUR ) / ( MUM * RMSe ) ) ,RRSe ),MUR ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5654353761879637}, {"determining": "( ( Max( ( ( RRS + MDR ) + ( ( MDR * ( AMS * Max( AMS,FirstVNF_Mem_Server ) ) ) - Const ) ),DDR ) * ( RRS + DDR ) ) - ( Max( Min( PN ,MDR ),( ( RRS / Max( ACS,CRS ) ) + MDR ) ) / ( ACS - MRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MUM ) / Max( MLU,( Min( MUM ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( ( ( DS - ( MUM * MUM ) ) / ( RRSe * ( MUR + RRSe ) ) ),Max( ( MUM / CS ),RCSe ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08509173898946452}, {"determining": "Min( ( FirstVNF_CPU_Server * Max( DDR,CRS ) ) ,( Min( ( Min( ( ( PN - MDR ) * FirstVNF_CPU ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / ( MRS + ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe - MUR ) / ( CS / MUM ) )", "obj1": 0.8799212598425197, "obj2": 0.045629490696726366}], "49": [{"determining": "( ( RRS - Max( ( ( ( Min( RRS ,ACS ) * FirstVNF_CPU ) / FirstVNF_Mem_Server ) - ARS ),ACS ) ) * ( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) + FirstVNF_RAM ) ) * ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * MUR ) ) / Max( ( MUM * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ) + ARS ) )", "choosing": "( ( ( CS * RMSe ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * Max( ( CS - RRSe ),DS ) ) - Min( Min( ( Max( ( RRSe - ( CS / RCSe ) ),DS ) * ( CS - RMSe ) ) ,MUR ) ,Min( MUM ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,Max( ACS,( MRS - ( RRS * ARS ) ) ) ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( MUC,( MUM + MUM ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8373631865037017}, {"determining": "( ( ( FirstVNF_RAM + ( ARS + Max( Const,( ( MRS - Const ) - FirstVNF_RAM_Server ) ) ) ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) + FirstVNF_RAM ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( PN + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * ( MUC - ( ( CS / MUM ) / ( RMSe / MUC ) ) ) ),( RRSe / RCSe ) ) / Max( ( RCSe - Max( MUM,MLU ) ),( MUM + Min( ( ( RMSe / DS ) * MUR ) ,( MUM - ( RRSe + RMSe ) ) ) ) ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8126349739618789}, {"determining": "( ( Max( CRS,PN ) * Max( AMS,Max( ACS,( MRS - ( RRS * ARS ) ) ) ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / DS ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( MUC,( MUM + MUM ) ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7538588096238454}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.6437007874015748, "obj2": 0.18517079802793998}, {"determining": "( Max( ( ( AMS / ( Max( ARS,Const ) - Max( AMS,( FirstVNF_RAM_Server / AMS ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,( MDR + DDR ) ) - MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( ( MUC + ( MLU * MUR ) ) / DS ),RRSe ) / ( DS + MUC ) ) - Min( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUM,( RRSe + MUC ) ) ),Max( RCSe,RRSe ) ) ) ) ,( ( ( ( MLU + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( DS,( RRSe - CS ) ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4763779527559055, "obj2": 0.3165892413302117}, {"determining": "( Max( ( ( Min( Min( FirstVNF_CPU ,( Const - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,MDR ) / Min( DDR ,( Const + CRS ) ) ) - ( MDR * AMS ) ),ACS ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( MUM,MUR ) - ( ( Max( MUR,( MUR + CS ) ) + ( Max( Min( MLU ,DS ),MLU ) * RMSe ) ) / Min( RCSe ,CS ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6250575335946054}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( ( RRS - Max( ARS,ACS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( CS,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.1968503937007874, "obj2": 0.648704433657865}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + Max( ( ( FirstVNF_RAM / RRS ) + ARS ),( FirstVNF_RAM / ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( Min( ACS ,BR ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) * CS ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( Max( DS,RCSe ) * MLU ) + ( ( ( MUR * CS ) / DS ) - Max( RMSe,Max( MUR,MUC ) ) ) ) + MLU ),MUC ) ) )", "obj1": 0.687007874015748, "obj2": 0.15199309033614528}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM - BR ) * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( ( ( ( DS - RMSe ) - CS ) + DS ),Min( ( RCSe - Min( MUC ,MUC ) ) ,Min( RRSe ,RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14348187800213238}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * Min( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server - ( Min( ( CRS / BR ) ,FirstVNF_RAM_Server ) + BR ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - ( ( ( Min( RRSe ,RCSe ) + ( DS * MUC ) ) + MUM ) - ( ( Max( MLU,MUR ) - DS ) - RCSe ) ) ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( DS + MUC ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8171816977981369}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "( ( ACS * PN ) - ( ( ARS - FirstVNF_Mem_Server ) / ( Min( Min( ACS ,ARS ) ,( FirstVNF_Mem_Server / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) / Min( Min( Min( Min( RCSe ,( MUC + RMSe ) ) ,MUC ) ,MUM ) ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.16191543591804153}, {"determining": "( Max( Min( ( ( Const - Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ) ) / Min( RRS ,Const ) ) ,MRS ),ACS ) - ( ( DDR / ACS ) * AMS ) )", "choosing": "( ( ( MLU / Min( ( Min( MLU ,RRSe ) + MUC ) ,Min( ( Min( CS ,( MUC / MUR ) ) + MUR ) ,RMSe ) ) ) / Min( ( CS / MUM ) ,( MUM / ( ( MLU / ( DS / RRSe ) ) / ( ( CS / MUM ) / MUR ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.697591401632469}, {"determining": "( ( ( ( Min( Min( CRS ,FirstVNF_RAM ) ,ACS ) / Min( ( ( PN - Max( MRS,MRS ) ) * ( ( MDR / PN ) + FirstVNF_CPU ) ) ,( ( ( AMS + FirstVNF_RAM_Server ) / ( ARS * MDR ) ) / ( Max( FirstVNF_CPU_Server,MDR ) * FirstVNF_RAM ) ) ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( DS,( CS / Max( RRSe,Min( MUM ,( RMSe + RMSe ) ) ) ) ) - MUM ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( RMSe - ( MUM + CS ) ) + MUR ) + MLU ) + MLU ),MUC ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5546823319561044}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ARS ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.3006349557650156}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.281496062992126, "obj2": 0.5417961098761224}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( ( ( FirstVNF_RAM - Const ) / CRS ) - Max( ( ( ACS / CRS ) - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( CS + MUR ) ) + ( Min( Min( Min( Min( MLU ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / ( RRSe - MLU ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) - ( RCSe * Max( MLU,CS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.532500231998929}, {"determining": "Max( ( Min( ACS ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( ACS / AMS ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server / AMS ) * ( ( CRS * ( Const + MDR ) ) / BR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MLU - RCSe ) - RCSe ) - RMSe ) - ( DS + ( RRSe * Max( RRSe,Max( ( MUR + MUC ),( MUM / MLU ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( ( MUR * DS ) + DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "Min( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( DDR * FirstVNF_RAM_Server ) ) ,ACS )", "choosing": "( ( Max( ( MUM + ( ( ( CS + ( MLU - MUM ) ) * ( MUC + MUR ) ) - DS ) ),DS ) / Min( DS ,( RCSe + RMSe ) ) ) / ( Max( ( Max( DS,MUR ) / MUC ),MUC ) / MLU ) )", "obj1": 0.8011811023622047, "obj2": 0.07377272424649071}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "( ( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,( RRS / CRS ) ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( PN * MDR ) ) - Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( DS / ( ( ( MUR / MLU ) - MUR ) * MUM ) ),MUC ) ) )", "obj1": 0.4015748031496063, "obj2": 0.40326060238470535}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.6594488188976378, "obj2": 0.17293354058927862}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) + ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU + ARS ) )", "choosing": "( Min( MUC ,RMSe ) / Max( Max( DS,RCSe ),Max( ( ( ( MUR * Max( DS,CS ) ) + ( Max( MLU,RRSe ) * MUC ) ) + MLU ),MUC ) ) )", "obj1": 0.25, "obj2": 0.5697002142824248}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + Max( ( ( FirstVNF_RAM / RRS ) + Min( ACS ,ARS ) ),( FirstVNF_RAM / ( ( FirstVNF_CPU_Server - CRS ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),( Min( Min( Min( Min( RRSe ,( DS + MUC ) ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.06498946749680377}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ,( ( ( FirstVNF_Mem_Server - ( ACS * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( Min( MUC ,RMSe ) / Max( Max( MUM,RCSe ),CS ) )", "obj1": 0.7559055118110236, "obj2": 0.11149528760857538}, {"determining": "( Max( ( Max( AMS,( FirstVNF_RAM + Min( ( FirstVNF_RAM - Const ) ,Min( PN ,MDR ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( Min( MUC ,DS ),RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4970870106344712}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem,ACS ) ) * ( ( MDR * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - Min( DS ,( ( ( ( RCSe + MUR ) * ( CS - ( MLU * CS ) ) ) / ( DS + Min( ( RRSe + MUR ) ,CS ) ) ) * Max( Min( RRSe ,MLU ),Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Min( Max( MUC,RCSe ) ,RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36571432728100917}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5244941588362677}, {"determining": "( Max( ( Max( AMS,( FirstVNF_RAM + Min( ( FirstVNF_RAM - Min( FirstVNF_RAM ,ARS ) ) ,CRS ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MUR ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( Min( RMSe ,( MUR - CS ) ) / ( ( ( RCSe + ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.4613056070726891}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,CS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + RCSe ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( ( MUR - MUM ),MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5165217847265176}, {"determining": "( ( Max( ( ( Max( FirstVNF_Mem,( ( DDR - MRS ) * Min( MDR ,ARS ) ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) + FirstVNF_CPU_Server ) ) / ( ( Max( Min( CRS ,FirstVNF_Mem ),FirstVNF_CPU ) - ( Max( CRS,Const ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - AMS ) ),( ACS + ( Min( MRS ,( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ACS * AMS ) ) ) ) - PN ) / ( Const - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,CS ) - ( RCSe - ( ( ( Max( ( RMSe + ( DS + RMSe ) ),MUC ) + MUC ) * MUC ) - RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6216233104497181}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,( BR - ARS ) ) ) - ( FirstVNF_Mem_Server - ( Min( ( Min( AMS ,BR ) + BR ) ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) + DS ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Max( ( MLU / Max( MLU,( RRSe - MUM ) ) ),Max( MUM,RRSe ) ) / Min( RCSe ,MUR ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.328740157480315, "obj2": 0.4864192119524837}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Max( ( FirstVNF_Mem_Server * CRS ),( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_CPU / FirstVNF_RAM ) / ( AMS - BR ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) / Max( Const,RRS ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe / ( MUR * CS ) ) + ( DS / ( ( DS + Min( Min( MUM ,MUM ) ,MUC ) ) / MLU ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5978328231256723}, {"determining": "( ( ACS * PN ) - ( AMS / Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ( PN * CRS ) * Max( FirstVNF_CPU,RRS ) ) ) * ( ( FirstVNF_Mem_Server - ( MDR + MRS ) ) * Const ) ) + BR ) ) ) )", "choosing": "( ( RRSe - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( CS,RCSe ),( ( Max( ( MUM / Max( MUC,( MLU / MUR ) ) ),( ( ( MUR * CS ) - CS ) * CS ) ) / ( RCSe / ( MUM + MLU ) ) ) + RRSe ) ) )", "obj1": 0.6633858267716536, "obj2": 0.16948250631892017}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * Max( AMS,FirstVNF_Mem_Server ) ) * ARS ) + PN ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( Min( MUR ,RMSe ) + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( Max( ( ( MUR * Max( CS,RCSe ) ) + RRSe ),( MUR * MUR ) ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.468503937007874, "obj2": 0.3285970750840619}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RRSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( MLU,( Min( MLU ,Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.3763715233267665}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / ( ( BR / FirstVNF_RAM ) / FirstVNF_CPU ) ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.610236220472441, "obj2": 0.21040260653086215}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * ( BR + ( PN * ACS ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( Min( Min( Min( ( RRSe / CS ) ,MUR ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( RMSe * DS ) ) - ( Min( ( RCSe + ( MUM / MUM ) ) ,( ( MUC / ( RMSe - RMSe ) ) / ( MUR + CS ) ) ) - Max( RRSe,DS ) ) ) )", "obj1": 0.844488188976378, "obj2": 0.05848045044616566}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( Max( DS,RCSe ) * RCSe ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6696258904675119}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU * ( ACS * ACS ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,MUM ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.5708661417322834, "obj2": 0.24086999478920143}, {"determining": "( ( ( PN / Min( ( Min( MDR ,BR ) * PN ) ,AMS ) ) * ACS ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( DDR + Min( MDR ,MDR ) ) ) ) ) ) / Min( ( FirstVNF_CPU / MDR ) ,ACS ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( RRSe / MLU ) ,MUR ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( RMSe * DS ) - ( Min( ( RCSe + ( MUM / MUM ) ) ,( ( MUC / ( RMSe - RMSe ) ) / ( MUR + CS ) ) ) - Max( RRSe,DS ) ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20400820927373708}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( Max( MRS,( FirstVNF_Mem_Server + ACS ) ) + ( PN / DDR ) ) + MRS ) ) - BR ),( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) - ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe + RRSe ) - Min( CS ,RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7459895419029233}, {"determining": "( Min( MRS ,MDR ) - Max( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Min( ( FirstVNF_Mem_Server / Const ) ,AMS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS / Max( ( ( RRSe + CS ) / CS ),( ( RMSe / ( RCSe + RCSe ) ) + ( ( ( DS + MLU ) + ( DS + RCSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( MUM ,( ( RMSe * ( Max( ( ( MUM - DS ) - RCSe ),Min( Max( CS,DS ) ,CS ) ) * RRSe ) ) - Max( Min( CS ,( RRSe - MUC ) ),RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.193399005149478}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - Max( MRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ),AMS ) - ( FirstVNF_Mem_Server - Max( ( CRS / MRS ),FirstVNF_Mem_Server ) ) ),AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) ,( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUM ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / ( ( ( Min( RRSe ,MUM ) - RMSe ) - MLU ) * RRSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.4757875924662519}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU * ( FirstVNF_CPU_Server + ( FirstVNF_RAM / RRS ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( ( BR / PN ) * ( ( FirstVNF_CPU_Server + DDR ) * AMS ) ) ) * ( Min( Min( CRS ,Max( Min( BR ,RRS ),FirstVNF_CPU ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( RRSe + Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( ( RMSe + MUM ),RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4734416848219989}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * Min( ( MUC / ( DS / Min( Max( RCSe,MLU ) ,MUM ) ) ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.053394250373599864}, {"determining": "( ( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( PN * MDR ) ) / Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( DS / ( CS * MUM ) ),MUC ) ) )", "obj1": 0.3858267716535433, "obj2": 0.421853487470664}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM / ACS ) + Max( FirstVNF_Mem_Server,BR ) ) - Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUC,MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( ( MLU + Max( RRSe,MUC ) ) / MUM ),DS ) ) ) ) / ( MLU + ( ( CS + Min( RCSe ,Min( RRSe ,RRSe ) ) ) * DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7189266925208706}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Max( CRS,PN ) * ACS ) ) ) / Min( MRS ,Max( AMS,ARS ) ) ) ,AMS ) * FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.7854330708661418, "obj2": 0.080466451888951}, {"determining": "( ( ( ( ACS - Max( MRS,DDR ) ) + PN ) * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) / ( MDR * Min( DDR ,( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( DS + MUM ) ,RRSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( CS - MUM ) )", "obj1": 0.5787401574803149, "obj2": 0.23419979488372505}, {"determining": "( ( ACS * PN ) - Min( PN ,Max( MRS,MRS ) ) )", "choosing": "( ( ( CS * MLU ) * MUC ) / ( ( Min( ( CS * MUC ) ,( RMSe + RCSe ) ) * ( RMSe / DS ) ) - Min( Max( CS,MUM ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.22928786280169966}, {"determining": "Min( ( ( MDR / DDR ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( ( ( ( Max( DS,RMSe ) + RCSe ) * MLU ) - DS ) - ( Max( ( ( RCSe - MLU ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( MLU / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.028891851929316315}, {"determining": "( ( ACS * PN ) - ( ( Min( Max( FirstVNF_RAM,DDR ) ,DDR ) + FirstVNF_RAM_Server ) / ( Min( Min( ACS ,ARS ) ,( MRS * Const ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,Max( RCSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( MUM / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.7165354330708661, "obj2": 0.13671721747203458}, {"determining": "Min( Max( ARS,Const ) ,( FirstVNF_Mem_Server / Min( MRS ,DDR ) ) )", "choosing": "( ( MLU + ( ( RRSe + Min( ( CS / ( RMSe / MUM ) ) ,MUM ) ) - DS ) ) / ( Max( ( MUM / RCSe ),MUR ) * ( MUM / ( ( MLU * MUC ) - Max( ( MUR / MUM ),DS ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09258496368481155}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "( ( Const + MDR ) - ( Min( Min( PN ,MDR ) ,( ( ( ( MRS - ( DDR * Const ) ) - ( ACS * Max( Const,ACS ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe - ( RCSe - RCSe ) ) ,Max( ( RRSe + RRSe ),RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR - Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2585859599563105}, {"determining": "( ( ACS * PN ) - ( Min( Max( DDR,CRS ) ,( ( ( ACS / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + Max( CRS,PN ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUR ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.021570515780501287}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ARS ,ACS ) ,( Max( ( BR + Const ),FirstVNF_CPU_Server ) / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Min( RCSe ,( Max( ( CS + MUC ),( CS / RCSe ) ) * MUC ) ) ) ) / MUM ) / ( ( Min( ( RRSe * MUC ) ,( RCSe + RMSe ) ) * ( RMSe * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.5511811023622047, "obj2": 0.2548728615598716}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * ( BR + ( PN * ACS ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( MUC - ( Max( ( ( RCSe - MUC ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( MLU / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.905511811023622, "obj2": 0.03948184249763828}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ( Min( FirstVNF_RAM ,MDR ) * CRS ) - FirstVNF_Mem_Server ) * ( Min( Min( MRS ,ACS ) ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( DS / MUR ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),CS ),Min( RCSe ,( RMSe + RRSe ) ) ) )", "obj1": 0.6279527559055118, "obj2": 0.1983815319047511}, {"determining": "( ( Max( ( Min( Min( CRS ,Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM ) / ( ACS + Const ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Max( ( FirstVNF_Mem_Server * CRS ),( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_CPU / FirstVNF_RAM ) / ( AMS - BR ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) / Max( Const,RRS ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe / ( MUR * CS ) ) + ( DS / ( ( DS + Min( Min( MUM ,MUM ) ,Max( Min( MUR ,DS ),MUM ) ) ) / MLU ) ) )", "obj1": 0.5039370078740157, "obj2": 0.28944691738940254}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ,( ( ( FirstVNF_Mem_Server - ( ACS * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,PN ) * Const ) ) + ( ( ( Min( CRS ,MDR ) + AMS ) - Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,ACS ) ) + FirstVNF_CPU_Server ) ) ) / AMS ) )", "choosing": "( Max( Min( Max( MUC,Max( Min( Min( Min( MLU ,MUC ) ,MLU ) ,RRSe ),RCSe ) ) ,CS ),MUR ) / Min( MUC ,RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.12680088085961608}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + Max( ( ( FirstVNF_RAM / RRS ) + ARS ),( FirstVNF_RAM / ( ( FirstVNF_CPU_Server - CRS ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( Max( DS,RCSe ) * RCSe ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.8366141732283464, "obj2": 0.06025701286188814}, {"determining": "( Min( Max( ( ( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) / ( FirstVNF_CPU - AMS ) ),( ACS + ( ( BR / PN ) * ( ACS * AMS ) ) ) ) ,PN ) / ( ( ( FirstVNF_RAM / ACS ) + Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) - ( DDR / PN ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.9724409448818898, "obj2": 0.010574971036646695}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5137795275590551, "obj2": 0.2849154636448759}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( ( Max( FirstVNF_Mem_Server,BR ) - Min( PN ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUM,( CS / MUM ) ),Max( ( ( ( MUR * ( DS / RCSe ) ) + RRSe ) + ( DS / Max( DS,CS ) ) ),MUC ) ) / ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.34939227984429655}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * ( BR + ( PN * ACS ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * ( CS + MUR ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( MUM / DS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.0428848208560903}, {"determining": "( Max( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,Max( ( ACS * RRS ),AMS ) ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( Max( MUM,RRSe ) * RRSe ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,CS ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.4312354871701299}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( AMS * FirstVNF_CPU_Server ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,MLU ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21855256652682806}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "( ( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( MDR * AMS ) ) / Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) )", "choosing": "( ( MUM - ( DS + ( Max( MUR,( MUR + CS ) ) * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( DS / ( CS * MUM ) ),MUC ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4548676095633967}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.41732283464566927, "obj2": 0.38031670951664026}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.517274254170924}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS / Max( ( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / CS ),( ( RMSe / ( RCSe + RCSe ) ) + ( ( ( DS + MLU ) + ( DS + RMSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.5177165354330708, "obj2": 0.2794144213028139}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "( ( FirstVNF_RAM_Server * ( Min( BR ,FirstVNF_CPU ) - FirstVNF_CPU ) ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MUC ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( ( ( Min( Max( MUM,MLU ) ,MUM ) + MUM ) + MUR ) / Max( RRSe,DS ) ) - ( MUM / MLU ) ) / ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MUR / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49315041313457}, {"determining": "( ( PN * ACS ) - ( FirstVNF_CPU + RRS ) )", "choosing": "( ( ( MLU - RMSe ) / MLU ) / Max( MLU,( Min( MLU ,Max( ( Min( MUC ,CS ) + ( MUC * MUR ) ),DS ) ) / Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.00429977607171186}, {"determining": "( ( ( FirstVNF_Mem - ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Max( Min( AMS ,Min( ( FirstVNF_CPU_Server - MRS ) ,FirstVNF_CPU_Server ) ),FirstVNF_RAM ) * CRS ) * ( Min( ( Min( ( FirstVNF_CPU - DDR ) ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( FirstVNF_Mem_Server * CRS ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( DS + ( CS * Max( Max( ( RCSe + RCSe ),DS ),RRSe ) ) ) ) / Max( Max( MUM,( ( MLU + RMSe ) * ( RRSe / Min( MLU ,MUC ) ) ) ),Max( ( ( ( MUR * ( ( RRSe - RCSe ) * MLU ) ) + RRSe ) + ( MUR - MUR ) ),MUC ) ) )", "obj1": 0.4153543307086614, "obj2": 0.3864995628573752}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,( FirstVNF_RAM / DDR ) ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( MRS / Const ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( CS * RRSe ) / CS ) ,Max( MUC,RMSe ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( RMSe * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,( RRSe / DS ) ) ) )", "obj1": 0.594488188976378, "obj2": 0.22273487339302916}, {"determining": "( Max( ( Min( ACS ,ARS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,Max( DS,RCSe ) ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.4489019622361061}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( Max( RRSe,DS ),Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( Max( DS,RCSe ) * RCSe ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.8110236220472441, "obj2": 0.06960207899299231}, {"determining": "( ( Min( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + MRS ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( PN * MDR ) ) / Min( MRS ,ACS ) ) * AMS ) + Max( ACS,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( MLU + Min( RRSe ,Max( MUM,( MUM - CS ) ) ) ) * MUM ) - MUM ) - ( RMSe + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.234251968503937, "obj2": 0.5940256487777793}, {"determining": "Min( ( Min( ( Min( ( Min( ( PN * ARS ) ,MDR ) * ( BR + ( PN * ACS ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,DDR ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * ( CS + MUR ) ) - CS ) + ( ( RCSe / Max( RMSe,( ( MLU + MUR ) - ( MUR - ( MUC + MUM ) ) ) ) ) + Min( ( CS / ( RMSe / MUM ) ) ,MUM ) ) )", "obj1": 0.9271653543307087, "obj2": 0.03109362636150704}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( Min( ( ( ARS - Min( PN ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( DS,RCSe ),Max( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.4153543307086614, "obj2": 0.3864995628573752}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM - AMS ) * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) - MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( RRSe,( CS * Max( ( ( ( MUR * RMSe ) + Min( MUC ,DS ) ) + CS ),Min( ( RCSe - Min( MUC ,MUC ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( MLU + ( ( MUR * Max( DS,RCSe ) ) + RRSe ) ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.7244094488188977, "obj2": 0.1292872234346313}, {"determining": "( ( ( BR + FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,ACS ) ) * Max( ( ( FirstVNF_Mem_Server * ( AMS + PN ) ) * ( AMS + Min( ( Min( CRS ,Max( FirstVNF_Mem,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Min( Max( ( MUM + RRSe ),MUR ) ,( MLU / DS ) ) * ( RRSe * DS ) ),Max( MUM,( MUC - CS ) ) ) + Max( DS,( ( Max( CS,MUC ) - Max( ( RCSe / ( Max( MLU,RMSe ) * MUR ) ),( ( MUM / ( MUC + RRSe ) ) + ( RCSe - MUR ) ) ) ) - Max( Min( ( ( MLU + MUR ) / ( MUM * RMSe ) ) ,RRSe ),MUR ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5654353761879637}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( ( PN - ( PN + FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + MLU ) - MUC ) / Max( Max( MUM,( CS / MUC ) ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.4507874015748031, "obj2": 0.34342887499010527}], "50": [{"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Min( MRS ,ACS ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,DDR ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * ( CS + MUR ) ) - CS ) + ( ( RCSe / Min( ( RCSe + RCSe ) ,DS ) ) + Min( ( CS / ( RMSe / MUM ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( ( ( ( Min( RRS ,ACS ) * FirstVNF_CPU ) / FirstVNF_Mem_Server ) - ARS ),ACS ) ) * ( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) + FirstVNF_RAM ) ) * ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * MUR ) ) / Max( ( MUM * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,Max( ACS,( MRS - ( RRS * ARS ) ) ) ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( MUC,( MUM + MUM ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8373631865037017}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( ( ( FirstVNF_RAM + ( ARS + Max( Const,( ( MRS - Const ) - FirstVNF_RAM_Server ) ) ) ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) + FirstVNF_RAM ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( PN + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * ( MUC - ( ( CS / MUM ) / ( RMSe / MUC ) ) ) ),( RRSe / RCSe ) ) / Max( ( RCSe - Max( MUM,MLU ) ),( MUM + Min( ( ( RMSe / DS ) * MUR ) ,( MUM - ( RRSe + RMSe ) ) ) ) ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8126349739618789}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * Min( ( MUC / ( DS / Min( Max( RCSe,MLU ) ,MUM ) ) ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + Min( ( Min( ( Min( RCSe ,( RMSe + RRSe ) ) / RMSe ) ,RRSe ) - CS ) ,( DS / DS ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.053394250373599864}, {"determining": "( ( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,( RRS / CRS ) ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( PN * MDR ) ) - Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( DS / ( ( ( MUR / MLU ) - MUR ) * MUM ) ),MUC ) ) )", "obj1": 0.4015748031496063, "obj2": 0.40326060238470535}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( Max( DS,RCSe ) * RCSe ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6696258904675119}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * Max( AMS,FirstVNF_Mem_Server ) ) * ARS ) + PN ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( Min( MUR ,RMSe ) + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( Max( ( ( MUR * Max( CS,RCSe ) ) + RRSe ),( MUR * MUR ) ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.468503937007874, "obj2": 0.3285970750840619}, {"determining": "( ( ( ( Min( Min( CRS ,FirstVNF_RAM ) ,ACS ) / Min( ( ( PN - Max( MRS,MRS ) ) * ( ( MDR / PN ) + FirstVNF_CPU ) ) ,( ( ( AMS + FirstVNF_RAM_Server ) / ( ARS * MDR ) ) / ( Max( FirstVNF_CPU_Server,MDR ) * FirstVNF_RAM ) ) ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( DS,( CS / Max( RRSe,Min( MUM ,( RMSe + RMSe ) ) ) ) ) - MUM ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( RMSe - ( MUM + CS ) ) + MUR ) + MLU ) + MLU ),MUC ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5546823319561044}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * Min( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server - ( Min( ( CRS / BR ) ,FirstVNF_RAM_Server ) + BR ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - ( ( ( Min( RRSe ,RCSe ) + ( DS * MUC ) ) + MUM ) - ( ( Max( MLU,MUR ) - DS ) - RCSe ) ) ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( DS + MUC ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8171816977981369}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "( Max( ( ( Min( Min( FirstVNF_CPU ,( Const - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,MDR ) / Min( DDR ,( Const + CRS ) ) ) - ( MDR * AMS ) ),ACS ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( MUM,MUR ) - ( ( Max( MUR,( MUR + CS ) ) + ( Max( Min( MLU ,DS ),MLU ) * RMSe ) ) / Min( RCSe ,CS ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6250575335946054}, {"determining": "( ( ACS * PN ) - ( ( ARS - FirstVNF_Mem_Server ) / ( Min( Min( ACS ,ARS ) ,( FirstVNF_Mem_Server / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) / Min( Min( Min( Min( RCSe ,( MUC + RMSe ) ) ,MUC ) ,MUM ) ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.16191543591804153}, {"determining": "( Max( Min( ( ( Const - Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ) ) / Min( RRS ,Const ) ) ,MRS ),ACS ) - ( ( DDR / ACS ) * AMS ) )", "choosing": "( ( ( MLU / Min( ( Min( MLU ,RRSe ) + MUC ) ,Min( ( Min( CS ,( MUC / MUR ) ) + MUR ) ,RMSe ) ) ) / Min( ( CS / MUM ) ,( MUM / ( ( MLU / ( DS / RRSe ) ) / ( ( CS / MUM ) / MUR ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.697591401632469}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "Max( ( Min( ACS ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( ACS / AMS ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server / AMS ) * ( ( CRS * ( Const + MDR ) ) / BR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MLU - RCSe ) - RCSe ) - RMSe ) - ( DS + ( RRSe * Max( RRSe,Max( ( MUR + MUC ),( MUM / MLU ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( ( MUR * DS ) + DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( Max( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,Max( ( ACS * RRS ),AMS ) ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( Max( MUM,RRSe ) * RRSe ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,CS ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.4312354871701299}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) + ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU + ARS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / DS ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( MUC,( MUM + MUM ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7662499987562839}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM - BR ) * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( ( ( ( DS - RMSe ) - CS ) + DS ),Min( ( RCSe - Min( MUC ,MUC ) ) ,Min( RRSe ,RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14348187800213238}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.281496062992126, "obj2": 0.5417961098761224}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * ( BR + ( PN * ACS ) ) ) ,Max( MRS,( Min( MRS ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( MUC - ( Max( ( ( RCSe - MUC ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( RCSe / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.8858267716535433, "obj2": 0.047107462887118416}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( ( ( FirstVNF_RAM - Const ) / CRS ) - Max( ( ( ACS / CRS ) - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( CS + MUR ) ) + ( Min( Min( Min( Min( MLU ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / ( RRSe - MLU ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) - ( RCSe * Max( MLU,CS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.532500231998929}, {"determining": "( Max( ( Min( ACS ,ARS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,Max( DS,RCSe ) ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.4489019622361061}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( ( RRS - Max( ARS,ACS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( CS,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.1968503937007874, "obj2": 0.648704433657865}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM - AMS ) * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) - MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( RRSe,( CS * Max( ( ( ( MUR * RMSe ) + Min( MUC ,DS ) ) + CS ),Min( ( RCSe - Min( MUC ,MUC ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( MLU + ( ( MUR * Max( DS,RCSe ) ) + RRSe ) ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.7244094488188977, "obj2": 0.1292872234346313}, {"determining": "Min( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( DDR * FirstVNF_RAM_Server ) ) ,ACS )", "choosing": "( ( Max( ( MUM + ( ( ( CS + ( MLU - MUM ) ) * ( MUC + MUR ) ) - DS ) ),DS ) / Min( DS ,( RCSe + RMSe ) ) ) / ( Max( ( Max( DS,MUR ) / MUC ),MUC ) / MLU ) )", "obj1": 0.8011811023622047, "obj2": 0.07377272424649071}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) + ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU + ARS ) )", "choosing": "( Min( MUC ,RMSe ) / Max( Max( DS,RCSe ),Max( ( ( ( MUR * Max( DS,CS ) ) + ( Max( MLU,RRSe ) * MUC ) ) + MLU ),MUC ) ) )", "obj1": 0.25, "obj2": 0.5697002142824248}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "( Min( MRS ,RRS ) - ( ( ( Max( RRS,DDR ) + ACS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + BR ) - ( PN / MRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUM ) / Max( ( ( MUC - MUM ) - MUC ),Min( ( ( ( DS - ( MUM / RCSe ) ) / ( ( RCSe * DS ) - RMSe ) ) + MLU ) ,DS ) ) ) / ( Max( ( Max( MUM,CS ) / Max( ( RCSe + DS ),RMSe ) ),Min( Max( RCSe,MUR ) ,( ( CS / DS ) - ( Max( ( RRSe * DS ),MLU ) - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.7421259842519685, "obj2": 0.11303735740980238}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( RRSe - ( DS + ( CS * Max( Max( ( RCSe + RCSe ),DS ),RRSe ) ) ) ) / Max( Max( MUM,( ( MLU + RMSe ) * ( RRSe / Min( MLU ,MUC ) ) ) ),Max( ( ( ( MUR * ( ( RRSe - RCSe ) * MLU ) ) + RRSe ) + ( MUR - MUR ) ),MUC ) ) )", "obj1": 0.7362204724409449, "obj2": 0.12010807132895611}, {"determining": "( Max( ( ( AMS / ( Max( ARS,Const ) - Max( AMS,( FirstVNF_RAM_Server / AMS ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,( MDR + DDR ) ) - MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( ( MUC + ( MLU * MUR ) ) / DS ),RRSe ) / ( DS + MUC ) ) - Min( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUM,( RRSe + MUC ) ) ),Max( RCSe,RRSe ) ) ) ) ,( ( ( ( MLU + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( DS,( RRSe - CS ) ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4763779527559055, "obj2": 0.3165892413302117}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_Mem_Server - Max( FirstVNF_Mem_Server,RRS ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( ( ( ( DS - RMSe ) - CS ) + DS ),Min( ( RCSe - Min( MUC ,RMSe ) ) ,Min( RRSe ,RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.7559055118110236, "obj2": 0.10558186050330487}, {"determining": "( Max( ( Max( AMS,( FirstVNF_RAM + Min( ( FirstVNF_RAM - Const ) ,Min( PN ,MDR ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( Min( MUC ,DS ),RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4970870106344712}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5244941588362677}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),( Min( Min( Min( Min( RRSe ,( DS + MUC ) ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3377678365159592}, {"determining": "( ( Max( CRS,PN ) * Max( AMS,Max( ACS,( MRS - ( RRS * ARS ) ) ) ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / DS ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( MUC,( MUM + MUM ) ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7538588096238454}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,CS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + RCSe ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( ( MUR - MUM ),MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5165217847265176}, {"determining": "( ( ACS * PN ) - ( ( Min( Max( FirstVNF_RAM,DDR ) ,DDR ) + FirstVNF_RAM_Server ) / ( Min( Min( ACS ,ARS ) ,( MRS * Const ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,Max( RCSe,( ( MUM + ( RMSe * RMSe ) ) - ( MLU / RCSe ) ) ) ) + ( ( RMSe / Max( ( Max( ( ( RCSe + MUR ) - MUR ),DS ) * CS ),( MUM + ( ( ( MUM / MUR ) - MUC ) - RRSe ) ) ) ) + ( ( ( DS - ( DS / Max( ( DS / DS ),RCSe ) ) ) - CS ) * ( DS / DS ) ) ) )", "obj1": 0.7165354330708661, "obj2": 0.13671721747203458}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( ( Max( FirstVNF_Mem_Server,BR ) - Min( PN ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUM ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6197097046493015}, {"determining": "Min( Max( ARS,Const ) ,( FirstVNF_Mem_Server / Min( MRS ,DDR ) ) )", "choosing": "( ( MLU + ( ( RRSe + Min( ( CS / ( RMSe / MUM ) ) ,MUM ) ) - DS ) ) / ( Max( ( MUM / RCSe ),MUR ) * ( MUM / ( ( MLU * MUC ) - Max( ( MUR / MUM ),DS ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09258496368481155}, {"determining": "( ( Const + MDR ) - ( Min( Min( PN ,MDR ) ,( ( ( ( MRS - ( DDR * Const ) ) - ( ACS * Max( Const,ACS ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe - ( RCSe - RCSe ) ) ,Max( ( RRSe + RRSe ),RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR - Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2585859599563105}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,( BR - ARS ) ) ) - ( FirstVNF_Mem_Server - ( Min( ( Min( AMS ,BR ) + BR ) ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) + DS ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Max( ( MLU / Max( MLU,( RRSe - MUM ) ) ),Max( MUM,RRSe ) ) / Min( RCSe ,MUR ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.328740157480315, "obj2": 0.4864192119524837}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ACS * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),( MUR + CS ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.27066282489061494}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Max( ( FirstVNF_Mem_Server * CRS ),( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_CPU / FirstVNF_RAM ) / ( AMS - BR ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) / Max( Const,RRS ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe / ( MUR * CS ) ) + ( DS / ( ( DS + Min( Min( MUM ,MUM ) ,MUC ) ) / MLU ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5978328231256723}, {"determining": "( ( ( ( Min( ( ( PN - Max( MRS,MRS ) ) * ( ( MDR / PN ) + FirstVNF_CPU ) ) ,( Const / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) ) / Min( MRS ,ACS ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / RMSe ) - Max( DS,( CS * Max( RRSe,Min( Max( RCSe,( RMSe - MUC ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( RMSe - ( MUM + CS ) ) + MUR ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.4271653543307087, "obj2": 0.3732083215321568}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem,ACS ) ) * ( ( MDR * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - Min( DS ,( ( ( ( RCSe + MUR ) * ( CS - ( MLU * CS ) ) ) / ( DS + Min( ( RRSe + MUR ) ,CS ) ) ) * Max( Min( RRSe ,MLU ),Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Min( Max( MUC,RCSe ) ,RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36571432728100917}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * ( BR + ( PN * ACS ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( Min( Min( Min( ( RRSe / CS ) ,MUR ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( RMSe * DS ) ) - ( Min( ( RCSe + ( MUM / MUM ) ) ,( ( MUC / ( RMSe - RMSe ) ) / ( MUR + CS ) ) ) - Max( RRSe,DS ) ) ) )", "obj1": 0.844488188976378, "obj2": 0.05848045044616566}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Max( CRS,PN ) * ACS ) ) ) / Min( MRS ,Max( AMS,ARS ) ) ) ,AMS ) * FirstVNF_RAM ) ,ACS )", "choosing": "( ( ( MUM / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.7854330708661418, "obj2": 0.08043502677456597}, {"determining": "( Max( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),( Min( Min( Min( Min( RRSe ,( DS + MUC ) ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.41976442837629385}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( Max( MRS,( FirstVNF_Mem_Server + ACS ) ) + ( PN / DDR ) ) + MRS ) ) - BR ),( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) - ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe + RRSe ) - Min( CS ,RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7459895419029233}, {"determining": "( Min( MRS ,MDR ) - Max( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Min( ( FirstVNF_Mem_Server / Const ) ,AMS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS / Max( ( ( RRSe + CS ) / CS ),( ( RMSe / ( RCSe + RCSe ) ) + ( ( ( DS + MLU ) + ( DS + RCSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( MUM ,( ( RMSe * ( Max( ( ( MUM - DS ) - RCSe ),Min( Max( CS,DS ) ,CS ) ) * RRSe ) ) - Max( Min( CS ,( RRSe - MUC ) ),RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.193399005149478}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - Max( MRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ),AMS ) - ( FirstVNF_Mem_Server - Max( ( CRS / MRS ),FirstVNF_Mem_Server ) ) ),AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) ,( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUM ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / ( ( ( Min( RRSe ,MUM ) - RMSe ) - MLU ) * RRSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.4757875924662519}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * ( BR * ( AMS / FirstVNF_RAM_Server ) ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( MUR * Max( MUC,RCSe ) ) + RRSe ) + ( MUR * MUR ) ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.25984251968503935, "obj2": 0.562909031567009}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU * ( FirstVNF_CPU_Server + ( FirstVNF_RAM / RRS ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( ( BR / PN ) * ( ( FirstVNF_CPU_Server + DDR ) * AMS ) ) ) * ( Min( Min( CRS ,Max( Min( BR ,RRS ),FirstVNF_CPU ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( RRSe + Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( ( RMSe + MUM ),RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4734416848219989}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ARS ,ACS ) ,( Max( ( BR + Const ),FirstVNF_CPU_Server ) / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Min( RCSe ,( Max( ( CS + MUC ),( CS / RCSe ) ) * MUC ) ) ) ) / MUM ) / ( ( Min( ( RRSe * MUC ) ,( RCSe + RMSe ) ) * ( RMSe * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.5511811023622047, "obj2": 0.2548728615598716}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( AMS * FirstVNF_CPU_Server ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,MLU ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21855256652682806}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + Max( CRS,PN ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.14971429938100816}, {"determining": "( ( ACS * PN ) - ( AMS / Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ( PN * CRS ) * Max( FirstVNF_CPU,RRS ) ) ) * ( ( FirstVNF_Mem_Server - ( MDR + MRS ) ) * Const ) ) + BR ) ) ) )", "choosing": "( ( RRSe - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( CS,RCSe ),( ( Max( ( MUM / Max( MUC,( MLU / MUR ) ) ),( ( ( MUR * CS ) - CS ) * CS ) ) / ( RCSe / ( MUM + MLU ) ) ) + RRSe ) ) )", "obj1": 0.6633858267716536, "obj2": 0.16948250631892017}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM / ACS ) + Max( FirstVNF_Mem_Server,BR ) ) - Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUC,MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( ( MLU + Max( RRSe,MUC ) ) / MUM ),DS ) ) ) ) / ( MLU + ( ( CS + Min( RCSe ,Min( RRSe ,RRSe ) ) ) * DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7189266925208706}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,Max( CRS,PN ) ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU * ( ACS * ACS ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,MUM ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / ( ( CS / DS ) / ( RCSe + RMSe ) ) ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.5610236220472441, "obj2": 0.24606757794461628}, {"determining": "( ( ( ( ACS - Max( MRS,DDR ) ) + PN ) * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) / ( MDR * Min( DDR ,( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( DS + MUM ) ,RRSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( CS - MUM ) )", "obj1": 0.5787401574803149, "obj2": 0.23419979488372505}, {"determining": "Min( ( ( MDR / DDR ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( ( ( ( Max( DS,RMSe ) + RCSe ) * MLU ) - DS ) - ( Max( ( ( RCSe - MLU ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( MLU / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.028891851929316315}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.27364074381470904}, {"determining": "( ( PN * ACS ) - ( FirstVNF_CPU + RRS ) )", "choosing": "( ( ( MLU - RMSe ) / MLU ) / Max( MLU,( Min( MLU ,Max( ( Min( MUC ,CS ) + ( MUC * MUR ) ),DS ) ) / Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.00429977607171186}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.41732283464566927, "obj2": 0.38031670951664026}, {"determining": "( ( Min( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + MRS ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( PN * MDR ) ) / Min( MRS ,ACS ) ) * AMS ) + Max( ACS,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( MLU + Min( RRSe ,Max( MUM,( MUM - CS ) ) ) ) * MUM ) - MUM ) - ( RMSe + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.234251968503937, "obj2": 0.5940256487777793}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.6437007874015748, "obj2": 0.18517079802793998}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * ( BR + ( PN * ACS ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( MUC - ( Max( ( ( RCSe - MUC ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( MLU / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.905511811023622, "obj2": 0.03948184249763828}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ( Min( FirstVNF_RAM ,MDR ) * CRS ) - FirstVNF_Mem_Server ) * ( Min( Min( MRS ,ACS ) ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( DS / MUR ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),CS ),Min( RCSe ,( RMSe + RRSe ) ) ) )", "obj1": 0.6279527559055118, "obj2": 0.1983815319047511}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + Max( ( ( FirstVNF_RAM / RRS ) + ARS ),( FirstVNF_RAM / ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( Min( ACS ,BR ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) * CS ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( Max( DS,RCSe ) * MLU ) + ( ( ( MUR * CS ) / DS ) - Max( RMSe,Max( MUR,MUC ) ) ) ) + MLU ),MUC ) ) )", "obj1": 0.687007874015748, "obj2": 0.15199309033614528}, {"determining": "( ( ACS * PN ) - PN )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( DS / ( Max( MLU,MUR ) + RRSe ) ) ) ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( Max( DS,RCSe ) * RCSe ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30691899920816335}, {"determining": "( ( ( PN / Min( ( Min( MDR ,BR ) * PN ) ,AMS ) ) * ACS ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( DDR + Min( MDR ,MDR ) ) ) ) ) ) / Min( ( FirstVNF_CPU / MDR ) ,ACS ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( RRSe / MLU ) ,MUR ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( RMSe * DS ) - ( Min( ( RCSe + ( MUM / MUM ) ) ,( ( MUC / ( RMSe - RMSe ) ) / ( MUR + CS ) ) ) - Max( RRSe,DS ) ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20400820927373708}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( ( Max( FirstVNF_Mem_Server,BR ) - Min( PN ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUM,( CS / MUM ) ),Max( ( ( ( MUR * ( DS / RCSe ) ) + RRSe ) + ( DS / Max( DS,CS ) ) ),MUC ) ) / ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.34939227984429655}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + Max( CRS,PN ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.17809905017753241}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "( Max( ( Min( ACS ,ARS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4503181174420854}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / ( ( BR / FirstVNF_RAM ) / FirstVNF_CPU ) ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.610236220472441, "obj2": 0.21040260653086215}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + Max( ( ( FirstVNF_RAM / RRS ) + Min( ACS ,ARS ) ),( FirstVNF_RAM / ( ( FirstVNF_CPU_Server - CRS ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( Min( PN ,ARS ) ,( ( MDR - MDR ) / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) - DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,MUM ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.08315376975931488}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.517274254170924}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5137795275590551, "obj2": 0.2849154636448759}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * ( BR + ( PN * ACS ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,DDR ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * ( CS + MUR ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + ( Min( MUC ,RMSe ) / Max( Max( MUM,RCSe ),CS ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.033130539650716426}, {"determining": "( ( FirstVNF_RAM_Server * ( Min( BR ,FirstVNF_CPU ) - FirstVNF_CPU ) ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MUC ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( ( ( Min( Max( MUM,MLU ) ,MUM ) + MUM ) + MUR ) / Max( RRSe,DS ) ) - ( MUM / MLU ) ) / ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MUR / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49315041313457}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU * ( ACS * ACS ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,MUM ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.5708661417322834, "obj2": 0.24086999478920143}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_CPU / ( ACS * ACS ) ) * Max( ACS,FirstVNF_Mem ) ) + Max( ( ( FirstVNF_RAM / RRS ) + Min( ACS ,ARS ) ),( FirstVNF_RAM / ( ( FirstVNF_CPU_Server - CRS ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),( Min( Min( Min( Min( RRSe ,( DS + MUC ) ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.06862646630248516}, {"determining": "( ( ( FirstVNF_Mem - ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Max( Min( AMS ,Min( ( FirstVNF_CPU_Server - MRS ) ,FirstVNF_CPU_Server ) ),FirstVNF_RAM ) * CRS ) * ( Min( ( Min( ( FirstVNF_CPU - DDR ) ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( FirstVNF_Mem_Server * CRS ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( DS + ( CS * Max( Max( ( RCSe + RCSe ),DS ),RRSe ) ) ) ) / Max( Max( MUM,( ( MLU + RMSe ) * ( RRSe / Min( MLU ,MUC ) ) ) ),Max( ( ( ( MUR * ( ( RRSe - RCSe ) * MLU ) ) + RRSe ) + ( MUR - MUR ) ),MUC ) ) )", "obj1": 0.4153543307086614, "obj2": 0.3864995628573752}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( ( PN - ( PN + FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + MLU ) - MUC ) / Max( Max( MUM,( CS / MUC ) ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.4507874015748031, "obj2": 0.34342887499010527}, {"determining": "( Max( ( Max( AMS,( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - Max( MRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUM ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( Max( DS,CS ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.4269595187593861}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,( FirstVNF_RAM / DDR ) ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( MRS / Const ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( CS * RRSe ) / CS ) ,Max( MUC,RMSe ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( RMSe * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,( RRSe / DS ) ) ) )", "obj1": 0.594488188976378, "obj2": 0.22273487339302916}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( Min( ( ( ARS - Min( PN ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( DS,RCSe ),Max( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.4153543307086614, "obj2": 0.3864995628573752}], "51": [{"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * Min( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server - ( Min( ( ( FirstVNF_CPU_Server / MDR ) / BR ) ,FirstVNF_RAM_Server ) + BR ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Min( MRS ,ACS ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,DDR ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * ( CS + MUR ) ) - CS ) + ( ( RCSe / Min( ( RCSe + RCSe ) ,DS ) ) + Min( ( CS / ( RMSe / MUM ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,DDR ),( Min( FirstVNF_RAM_Server ,( Max( AMS,MDR ) - Max( FirstVNF_CPU_Server,CRS ) ) ) - Max( FirstVNF_RAM_Server,DDR ) ) ) * ( MDR - AMS ) )", "choosing": "( ( Max( MUR,( RCSe / RMSe ) ) / ( DS * DS ) ) / Max( ( RCSe / RMSe ),( Max( Max( ( MLU - RRSe ),DS ),Min( Max( MUM,( MUR - MUM ) ) ,( MLU + DS ) ) ) / Max( ( Max( MUM,RCSe ) / MUC ),( DS + MUM ) ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878837167424005}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,Max( ACS,( MRS - ( RRS * ARS ) ) ) ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( MUC,( MUM + MUM ) ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8373631865037017}, {"determining": "( Max( MRS,( Min( ( ( ( BR / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) - Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) - ACS ) ) * ( CRS + MRS ) )", "choosing": "( ( MUC / ( ( Max( ( CS - RMSe ),DS ) / ( MUM + MUM ) ) * DS ) ) / Min( ( MUC + MUR ) ,( MUM / ( Max( ( CS / MUM ),( MLU - ( ( CS * RRSe ) + RCSe ) ) ) / ( ( CS + MUM ) * ( DS + MUR ) ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7729710080695309}, {"determining": "( ( ( FirstVNF_RAM + ( ARS + Max( Const,( ( MRS - Const ) - FirstVNF_RAM_Server ) ) ) ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) + FirstVNF_RAM ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( PN + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * ( MUC - ( ( CS / MUM ) / ( RMSe / MUC ) ) ) ),( RRSe / RCSe ) ) / Max( ( RCSe - Max( MUM,MLU ) ),( MUM + Min( ( ( RMSe / DS ) * MUR ) ,( MUM - ( RRSe + RMSe ) ) ) ) ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8126349739618789}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_CPU / ( ACS * ACS ) ) * Max( ACS,FirstVNF_Mem ) ) + Max( ( ( FirstVNF_RAM / RRS ) + Min( ACS ,ARS ) ),( FirstVNF_RAM / ( ( FirstVNF_CPU_Server - CRS ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),( Min( Min( Min( Min( RRSe ,( DS + MUC ) ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.06862646630248516}, {"determining": "( ( Max( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,( RRS / CRS ) ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( PN * MDR ) ) - Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( DS / ( ( ( MUR / MLU ) - MUR ) * MUM ) ),MUC ) ) )", "obj1": 0.4015748031496063, "obj2": 0.40326060238470535}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU * ( FirstVNF_CPU_Server + ( FirstVNF_RAM / RRS ) ) ) - Max( PN,Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * ( ( BR / PN ) * ( ( FirstVNF_CPU_Server + DDR ) * AMS ) ) ) * ( Min( Min( CRS ,Max( Min( BR ,RRS ),FirstVNF_CPU ) ) ,( RRS - Max( ARS,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,( RRSe + Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( ( RMSe + MUM ),RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4734416848219989}, {"determining": "Min( ( ( MDR / DDR ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( ( ( ( Max( DS,RMSe ) + RCSe ) * MLU ) - DS ) - ( Max( ( ( RCSe - MLU ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( MLU / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.028891851929316315}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( Max( DS,RCSe ) * RCSe ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6696258904675119}, {"determining": "( Max( Min( ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ,Min( ( PN * MDR ) ,( MRS + ( PN - FirstVNF_Mem ) ) ) ),( BR - ( Min( RRS ,Const ) / ( ( ( ACS + MDR ) - ( RRS / PN ) ) + MRS ) ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU / ( ( Max( ( CS - RRSe ),DS ) / Min( RMSe ,DS ) ) * DS ) ) / ( ( MUC / RCSe ) * ( Max( MUC,MUC ) - RMSe ) ) ) - ( MUR + RCSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7404920200508402}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS + ( ( Const / AMS ) / Min( ( BR * AMS ) ,ARS ) ) ) / AMS ) ) ,( Min( FirstVNF_RAM ,ACS ) * ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( MUM + ( CS - RCSe ) ) + ( ( ( CS + RCSe ) / Max( MLU,( ( ( RRSe / DS ) + DS ) - ( MUR - ( Max( RCSe,RRSe ) + RCSe ) ) ) ) ) + Min( ( ( CS * RRSe ) - MLU ) ,( DS / DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.01955872554757524}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( Min( AMS ,( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe * MUC ) - ( Min( ( ( ( Min( ( RMSe - MUC ) ,( MUR * RCSe ) ) + Max( DS,( RRSe - CS ) ) ) + CS ) + RCSe ) ,MUC ) * ( RRSe + RRSe ) ) )", "obj1": 0.9606299212598425, "obj2": 0.014468432124843267}, {"determining": "( Min( FirstVNF_RAM ,Min( ( DDR / PN ) ,( ( ( ( MDR * FirstVNF_Mem_Server ) / MDR ) / BR ) + Max( MDR,ACS ) ) ) ) / ( ( ( PN * CRS ) + FirstVNF_CPU_Server ) - CRS ) )", "choosing": "( ( MLU / ( ( Min( DS ,CS ) * Min( ( MUM / ( ( MLU - RCSe ) / ( RRSe + RRSe ) ) ) ,RCSe ) ) - CS ) ) + ( DS / ( MLU / ( DS + ( ( ( MUM - MUR ) / DS ) - ( Max( RCSe,MUC ) - CS ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6512780356821468}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5137795275590551, "obj2": 0.2849154636448759}, {"determining": "( Max( ( Min( ACS ,ARS ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4503181174420854}, {"determining": "( ( ( ( ( ( DDR / PN ) + FirstVNF_CPU ) * Min( MRS ,ACS ) ) * AMS ) + Max( ACS,CRS ) ) * ( Max( ( ( Min( Min( FirstVNF_RAM_Server ,( RRS * CRS ) ) ,FirstVNF_Mem ) + DDR ) + MRS ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( MUR,Min( ( RCSe + RCSe ) ,Min( RCSe ,( RRSe / MUC ) ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6108832710095912}, {"determining": "Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( ( ( Const - ACS ) + ( ( BR * RRS ) * MDR ) ) ,PN ) ) ,ACS )", "choosing": "( ( ( ( Min( ( ( DS / DS ) / CS ) ,DS ) + Min( RCSe ,Min( MLU ,MUC ) ) ) / RMSe ) / Min( MUR ,( Max( RMSe,Min( RRSe ,RRSe ) ) * RMSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.9783464566929134, "obj2": 0.007960158960040922}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + Max( Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ),( FirstVNF_RAM / ( ( FirstVNF_CPU_Server - CRS ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,( CS - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( Max( DS,RCSe ) * RCSe ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.8366141732283464, "obj2": 0.06006120495396325}, {"determining": "( Max( Min( ( ( Const - Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ) ) / Min( RRS ,Const ) ) ,MRS ),ACS ) - ( ( DDR / ACS ) * AMS ) )", "choosing": "( ( ( MLU / Min( ( Min( MLU ,RRSe ) + MUC ) ,Min( ( Min( CS ,( MUC / MUR ) ) + MUR ) ,RMSe ) ) ) / Min( ( CS / MUM ) ,( MUM / ( ( MLU / ( DS / RRSe ) ) / ( ( CS / MUM ) / MUR ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.16338582677165353, "obj2": 0.697591401632469}, {"determining": "Max( ( Min( ACS ,BR ) + ( MDR * FirstVNF_RAM_Server ) ),Min( Min( ( ( ACS / AMS ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server / AMS ) * ( ( CRS * ( Const + MDR ) ) / BR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MLU - RCSe ) - RCSe ) - RMSe ) - ( DS + ( RRSe * Max( RRSe,Max( ( MUR + MUC ),( MUM / MLU ) ) ) ) ) ) / Max( Max( MUM,RCSe ),( ( MUR * DS ) + DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6779574818541081}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) + ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU + ARS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / DS ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( MUC,( MUM + MUM ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7662499987562839}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.281496062992126, "obj2": 0.5417961098761224}, {"determining": "( ( ( MRS - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( MDR,DDR ) * Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) - ( Min( RCSe ,MUC ) - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7043994582018618}, {"determining": "( ( ( FirstVNF_RAM - Const ) / CRS ) - Max( ( ( ACS / CRS ) - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR / ( CS + MUR ) ) + ( Min( Min( Min( Min( MLU ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / ( RRSe - MLU ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) - ( RCSe * Max( MLU,CS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.532500231998929}, {"determining": "Min( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( DDR * FirstVNF_RAM_Server ) ) ,ACS )", "choosing": "( ( Max( ( MUM + ( ( ( CS + ( MLU - MUM ) ) * ( MUC + MUR ) ) - DS ) ),DS ) / Min( DS ,( RCSe + RMSe ) ) ) / ( Max( ( Max( DS,MUR ) / MUC ),MUC ) / MLU ) )", "obj1": 0.8011811023622047, "obj2": 0.07377272424649071}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM - AMS ) * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) - MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( RRSe,( CS * Max( ( ( ( MUR * RMSe ) + Min( MUC ,DS ) ) + CS ),Min( ( RCSe - Min( MUC ,MUC ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( ( MLU + ( ( MUR * Max( DS,RCSe ) ) + RRSe ) ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.7244094488188977, "obj2": 0.1292872234346313}, {"determining": "( ( ( ( ACS - Max( MRS,DDR ) ) + PN ) * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) / ( MDR * Min( DDR ,( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,MUM ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.05332698345517918}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * ( BR + ( PN * ACS ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,DDR ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * ( CS + MUR ) ) - CS ) + ( ( RCSe / Max( MLU,( ( MLU + MUR ) - ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) ) ) ) + ( Min( MUC ,RMSe ) / Max( Max( MUM,RCSe ),CS ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.033130539650716426}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + Max( CRS,PN ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.17809905017753241}, {"determining": "( Max( ( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( MUM,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2958308701746684}, {"determining": "( ( ( ( Min( Min( CRS ,FirstVNF_RAM ) ,ACS ) / Min( ( ( PN - Max( MRS,MRS ) ) * ( ( MDR / PN ) + FirstVNF_CPU ) ) ,( ( ( AMS + FirstVNF_RAM_Server ) / ( ARS * MDR ) ) / ( Max( FirstVNF_CPU_Server,MDR ) * FirstVNF_RAM ) ) ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( DS,( CS / Max( RRSe,Min( MUM ,( RMSe + RMSe ) ) ) ) ) - MUM ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( RMSe - ( MUM + CS ) ) + MUR ) + MLU ) + MLU ),MUC ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5546823319561044}, {"determining": "( Max( ( ( AMS / ( Max( ARS,Const ) - Max( AMS,( FirstVNF_RAM_Server / AMS ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,( MDR + DDR ) ) - MRS ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( ( MUC + ( MLU * MUR ) ) / DS ),RRSe ) / ( DS + MUC ) ) - Min( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MUM,( RRSe + MUC ) ) ),Max( RCSe,RRSe ) ) ) ) ,( ( ( ( MLU + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( DS,( RRSe - CS ) ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4763779527559055, "obj2": 0.3165892413302117}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,FirstVNF_Mem ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,Max( DS,RCSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),( Min( Min( Min( Min( RRSe ,( DS + MUC ) ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30639767579864374}, {"determining": "( Min( ( ( FirstVNF_Mem_Server + ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + DDR ) ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( ( ( DS - ( MLU / ( RRSe * ( RMSe / CS ) ) ) ) - Min( CS ,( CS / MUR ) ) ) + CS ) ) / Max( MLU,( ( MLU - Max( ( Min( CS ,MUC ) + ( MUC * MUR ) ),DS ) ) - Max( Min( Min( DS ,RCSe ) ,DS ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41527511030269076}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( RRSe - ( DS + ( CS * Max( Max( ( RCSe + RCSe ),DS ),RRSe ) ) ) ) / Max( Max( MUM,( ( MLU + RMSe ) * ( RRSe / Min( MLU ,MUC ) ) ) ),Max( ( ( ( MUR * ( ( RRSe - RCSe ) * MLU ) ) + RRSe ) + ( MUR - MUR ) ),MUC ) ) )", "obj1": 0.7362204724409449, "obj2": 0.12010807132895611}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_Mem,Max( Max( ACS,RRS ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) / ( ( Max( Max( MLU,( ( MUC - ( RCSe / RRSe ) ) / ( MUC * ( CS + MUM ) ) ) ),MUC ) / ( ( Min( Min( RRSe ,Max( CS,DS ) ) ,RCSe ) / Max( RRSe,RRSe ) ) / ( ( MLU * CS ) + ( Min( ( MUM * MLU ) ,Max( CS,RCSe ) ) * MUC ) ) ) ) - MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7221419570716201}, {"determining": "( Max( ( Max( AMS,( FirstVNF_RAM + Min( ( FirstVNF_RAM - Const ) ,Min( PN ,MDR ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( Min( MUC ,DS ),RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4970870106344712}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5244941588362677}, {"determining": "( ( ACS * PN ) - ( ( ARS - FirstVNF_Mem_Server ) / ( Min( Min( ACS ,ARS ) ,( FirstVNF_Mem_Server / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) / Min( Min( Min( Min( RCSe ,( MUC + RMSe ) ) ,MUC ) ,MUM ) ,RCSe ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.16191543591804153}, {"determining": "( ( Max( CRS,PN ) * Max( AMS,Max( ACS,( MRS - ( RRS * ARS ) ) ) ) ) * ( AMS - MRS ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - RRSe ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / DS ) / ( RCSe + RMSe ) ) ) ),( RRSe / RCSe ) ) / Max( MUC,( MUM + MUM ) ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7538588096238454}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,CS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + RCSe ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( ( MUR - MUM ),MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5165217847265176}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ACS * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.6437007874015748, "obj2": 0.18517079802793998}, {"determining": "( Max( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,DS ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,MUM ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.44555383402992316}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( Min( ( MUC * DS ) ,( RCSe + MUR ) ) * Min( ( MUC / ( DS / Min( Max( RCSe,MLU ) ,MUM ) ) ) ,( MUM / ( Min( CS ,MLU ) / Max( RRSe,( CS / MUM ) ) ) ) ) ) - CS ) + ( ( MUR / ( CS + MUR ) ) + ( Min( Min( Min( Min( MLU ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / ( RRSe - MLU ) ) ) )", "obj1": 0.8779527559055118, "obj2": 0.04984803484036386}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,( BR - ARS ) ) ) - ( FirstVNF_Mem_Server - ( Min( ( Min( AMS ,BR ) + BR ) ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) + DS ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Max( ( MLU / Max( MLU,( RRSe - MUM ) ) ),Max( MUM,RRSe ) ) / Min( RCSe ,MUR ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.328740157480315, "obj2": 0.4864192119524837}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) + ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU + ARS ) )", "choosing": "( Min( MUC ,RMSe ) / Max( Max( DS,RCSe ),Max( ( ( ( MUR * Max( DS,CS ) ) + ( Max( MLU,RRSe ) * MUC ) ) + MLU ),MUC ) ) )", "obj1": 0.25, "obj2": 0.5697002142824248}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Max( ( FirstVNF_Mem_Server * CRS ),( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_CPU / FirstVNF_RAM ) / ( AMS - BR ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) / Max( Const,RRS ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe / ( MUR * CS ) ) + ( DS / ( ( DS + Min( Min( MUM ,MUM ) ,MUC ) ) / MLU ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5978328231256723}, {"determining": "( ( ( ( Min( ( ( PN - Max( MRS,MRS ) ) * ( ( MDR / PN ) + FirstVNF_CPU ) ) ,( Const / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) ) / Min( MRS ,ACS ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / RMSe ) - Max( DS,( CS * Max( RRSe,Min( Max( RCSe,( RMSe - MUC ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( RMSe - ( MUM + CS ) ) + MUR ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.4271653543307087, "obj2": 0.3732083215321568}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / ( ( BR / FirstVNF_RAM ) / FirstVNF_CPU ) ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( ( MLU / ( Max( ( RCSe / MUR ),RRSe ) / DS ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.610236220472441, "obj2": 0.21040260653086215}, {"determining": "( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( CS * ( CS * Max( ( MLU * MLU ),Min( Max( RCSe,Min( MLU ,MUM ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MLU - ( ( Max( Max( MUC,( CS - RCSe ) ),MUM ) * ( Min( RMSe ,MLU ) - MUM ) ) - Min( ( RMSe - MUC ) ,Max( ( MUM / DS ),RMSe ) ) ) ),Max( ( MLU + ( ( Min( MUM ,RCSe ) * ( DS - RCSe ) ) + Min( MUM ,RMSe ) ) ),MUC ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3550717010665779}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem,ACS ) ) * ( ( MDR * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - Min( DS ,( ( ( ( RCSe + MUR ) * ( CS - ( MLU * CS ) ) ) / ( DS + Min( ( RRSe + MUR ) ,CS ) ) ) * Max( Min( RRSe ,MLU ),Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Min( Max( MUC,RCSe ) ,RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36571432728100917}, {"determining": "( ( PN * ACS ) - ( FirstVNF_CPU + RRS ) )", "choosing": "( ( ( MLU - RMSe ) / MLU ) / Max( MLU,( Min( MLU ,Max( ( Min( MUC ,CS ) + ( MUC * MUR ) ),DS ) ) / Max( Max( ( MUM / RRSe ),RCSe ),( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.00429977607171186}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * ( BR + ( PN * ACS ) ) ) ,Max( MRS,( Min( MRS ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( MUC - ( Max( ( ( RCSe - MUC ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( RCSe / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.8858267716535433, "obj2": 0.047107462887118416}, {"determining": "( Max( ( ( Min( RRS ,Const ) / ( ( Max( MRS,( FirstVNF_Mem_Server + ACS ) ) + ( PN / DDR ) ) + MRS ) ) - BR ),( Min( ( PN * MDR ) ,FirstVNF_CPU_Server ) - ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe + RRSe ) - Min( CS ,RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7459895419029233}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * Max( AMS,FirstVNF_Mem_Server ) ) * ARS ) + PN ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( Min( MUR ,RMSe ) + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( Max( ( ( MUR * Max( CS,RCSe ) ) + RRSe ),( MUR * MUR ) ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.468503937007874, "obj2": 0.3285970750840619}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - Max( MRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ),AMS ) - ( FirstVNF_Mem_Server - Max( ( CRS / MRS ),FirstVNF_Mem_Server ) ) ),AMS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) ,( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUM ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / ( ( ( Min( RRSe ,MUM ) - RMSe ) - MLU ) * RRSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.4757875924662519}, {"determining": "( Max( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,Max( ( ACS * RRS ),AMS ) ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( Max( MUM,RRSe ) * RRSe ) ) / ( DS + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,RMSe ) ,CS ) ) + RCSe ) / Max( RRSe,DS ) ) - ( DS * MUC ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.4312354871701299}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ARS ,ACS ) ,( Max( ( BR + Const ),FirstVNF_CPU_Server ) / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Min( RCSe ,( Max( ( CS + MUC ),( CS / RCSe ) ) * MUC ) ) ) ) / MUM ) / ( ( Min( ( RRSe * MUC ) ,( RCSe + RMSe ) ) * ( RMSe * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.5511811023622047, "obj2": 0.2548728615598716}, {"determining": "( ( ( PN / Min( ( Min( MDR ,BR ) * PN ) ,AMS ) ) * ACS ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( DDR + Min( MDR ,MDR ) ) ) ) ) ) / Min( ( FirstVNF_CPU / MDR ) ,ACS ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( RRSe / MLU ) ,MUR ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( RMSe * DS ) - ( Min( ( RCSe + ( MUM / MUM ) ) ,( ( MUC / ( RMSe - RMSe ) ) / ( MUR + CS ) ) ) - Max( RRSe,DS ) ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20400820927373708}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( AMS * FirstVNF_CPU_Server ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,MLU ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21855256652682806}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM / ACS ) + Max( FirstVNF_Mem_Server,BR ) ) - Min( ( PN * CRS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUC,MUR ) ,( MUM / ( ( MLU / MUC ) / Max( ( ( MLU + Max( RRSe,MUC ) ) / MUM ),DS ) ) ) ) / ( MLU + ( ( CS + Min( RCSe ,Min( RRSe ,RRSe ) ) ) * DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7189266925208706}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( ( RRS - Max( ARS,ACS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( Max( CS,RCSe ),Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ) ) )", "obj1": 0.1968503937007874, "obj2": 0.648704433657865}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * ( ( ARS / ( ACS / FirstVNF_CPU_Server ) ) + ARS ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ARS ,ACS ) ,( Max( ( BR + Const ),FirstVNF_CPU_Server ) / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Min( RCSe ,( Max( ( CS + MUC ),( CS / RCSe ) ) * MUC ) ) ) ) / MUM ) / ( ( Min( ( RRSe * MUC ) ,( RCSe + RMSe ) ) * ( RMSe * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.2296317242430488}, {"determining": "Min( ACS ,( ( RRS - ( ACS / FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RCSe ) * Min( ( MUC * ( Min( Max( MUR,MUC ) ,MUM ) + RMSe ) ) ,( RCSe + RMSe ) ) ) - CS ) + ( ( MUM * DS ) + Min( ( DS / DS ) ,( CS - ( DS - CS ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04005161588595966}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5216535433070866, "obj2": 0.2805790613499071}, {"determining": "( ( ACS * PN ) - ( AMS / Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ( PN * CRS ) * Max( FirstVNF_CPU,RRS ) ) ) * ( ( FirstVNF_Mem_Server - ( MDR + MRS ) ) * Const ) ) + BR ) ) ) )", "choosing": "( ( RRSe - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( CS,RCSe ),( ( Max( ( MUM / Max( MUC,( MLU / MUR ) ) ),( ( ( MUR * CS ) - CS ) * CS ) ) / ( RCSe / ( MUM + MLU ) ) ) + RRSe ) ) )", "obj1": 0.6633858267716536, "obj2": 0.16948250631892017}, {"determining": "( ( Min( Const ,BR ) * Max( AMS,FirstVNF_RAM_Server ) ) * ( ( AMS / ( ( FirstVNF_CPU_Server / MDR ) * FirstVNF_RAM ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ) )", "choosing": "( ( Max( ( RCSe / RMSe ),MUR ) / ( DS * DS ) ) / Max( ( ( MUM - ( ( ( Min( RRSe ,RCSe ) + ( DS * MUC ) ) + MUM ) - ( ( Max( MLU,MUR ) - DS ) - RCSe ) ) ) / RMSe ),( Max( ( RRSe * Max( MUC,( ( CS / MUM ) / ( DS + MUC ) ) ) ),( RRSe / RCSe ) ) / Max( ( MLU - Max( MLU,MUM ) ),( MUM + MUM ) ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8171816977981369}, {"determining": "( ( Const + MDR ) - ( Min( Min( PN ,MDR ) ,( ( ( ( MRS - ( DDR * Const ) ) - ( ACS * Max( Const,ACS ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( RRSe,Min( ( RCSe - ( RCSe - RCSe ) ) ,Max( ( RRSe + RRSe ),RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR - Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2585859599563105}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_Mem_Server - Max( FirstVNF_Mem_Server,RRS ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( ( ( ( DS - RMSe ) - CS ) + DS ),Min( ( RCSe - Min( MUC ,RMSe ) ) ,Min( RRSe ,RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.7559055118110236, "obj2": 0.10558186050330487}, {"determining": "( ( Max( ( ( Const - MDR ) * MDR ),FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_CPU_Server + ( ( Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) + ACS ) ) ) ) - ( ( AMS / Min( FirstVNF_Mem ,( MDR - Min( Max( CRS,DDR ) ,FirstVNF_CPU_Server ) ) ) ) - ( ARS * ACS ) ) )", "choosing": "( ( Max( ( MUC + ( Max( RCSe,( MLU / RMSe ) ) * CS ) ),MLU ) * ( RRSe - RMSe ) ) / ( MUM - ( DS / ( CS * ( RRSe * ( Max( Max( MLU,MUR ),( MUM + MUR ) ) / MUM ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5864762232014806}, {"determining": "Min( Max( ARS,Const ) ,( FirstVNF_Mem_Server / Min( MRS ,DDR ) ) )", "choosing": "( ( MLU + ( ( RRSe + Min( ( CS / ( RMSe / MUM ) ) ,MUM ) ) - DS ) ) / ( Max( ( MUM / RCSe ),MUR ) * ( MUM / ( ( MLU * MUC ) - Max( ( MUR / MUM ),DS ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09258496368481155}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) * ( Min( ( ( Const * Min( ( BR / PN ) ,Const ) ) + CRS ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) / MDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),Max( ( MLU - Max( RRSe,( MUC + MUM ) ) ),RMSe ) ) / ( DS / MUM ) )", "obj1": 0.41732283464566927, "obj2": 0.38031670951664026}, {"determining": "( ( Min( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + DDR ) + MRS ) ,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( ( DDR / PN ) + ( PN * MDR ) ) / Min( MRS ,ACS ) ) * AMS ) + Max( ACS,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( MLU + Min( RRSe ,Max( MUM,( MUM - CS ) ) ) ) * MUM ) - MUM ) - ( RMSe + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( MUR * Max( CS,RCSe ) ) + RRSe ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.234251968503937, "obj2": 0.5940256487777793}, {"determining": "( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server + BR ) * ( Max( FirstVNF_Mem,( ACS * ( BR * ( AMS / FirstVNF_RAM_Server ) ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( ( ( ( MUR * Max( MUC,RCSe ) ) + RRSe ) + ( MUR * MUR ) ) + ( MUR * MUR ) ),MUC ) ) )", "obj1": 0.25984251968503935, "obj2": 0.562909031567009}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( CRS - Const ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) / BR ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( ( RCSe + RCSe ) ,DS ) ) ) ) ) / Max( Max( MUM,RCSe ),Max( ( DS / ( CS * MUM ) ),MUC ) ) )", "obj1": 0.2440944881889764, "obj2": 0.5779313719047733}, {"determining": "( ( ( Const * Max( Min( AMS ,MRS ),FirstVNF_Mem ) ) / DDR ) - ( DDR / CRS ) )", "choosing": "( ( MLU - MUM ) / ( Min( ( ( Max( MUR,RRSe ) + RMSe ) * MUM ) ,DS ) * ( ( ( DS - CS ) - MLU ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.0971517716611572}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,( FirstVNF_RAM / DDR ) ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( MRS / Const ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( CS * RRSe ) / CS ) ,Max( MUC,RMSe ) ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( RMSe * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,( RRSe / DS ) ) ) )", "obj1": 0.594488188976378, "obj2": 0.22273487339302916}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * ( BR + ( PN * ACS ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( ( MUC / ( MUC - ( Max( ( ( RCSe - MUC ) + ( MUC - DS ) ),MUC ) + MUM ) ) ) / Max( ( ( ( DS / ( Max( MLU,MUR ) + RRSe ) ) - Min( RMSe ,DS ) ) - MLU ),( Min( MUC ,MUR ) * ( Max( RMSe,Min( DS ,( DS * RCSe ) ) ) / RMSe ) ) ) ) - Min( ( RMSe + ( ( Max( MUM,DS ) / Min( ( ( MLU / CS ) * RCSe ) ,RRSe ) ) + MUR ) ) ,RRSe ) )", "obj1": 0.905511811023622, "obj2": 0.03948184249763828}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_Mem_Server - ( Max( Const,RRS ) * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( Min( Min( MUM ,MUM ) ,MUC ),Min( ( RCSe + MLU ) ,Max( RMSe,RMSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.6259842519685039, "obj2": 0.19799489074849141}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( ( Const - Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * PN ) ,( RRS * ( Const + PN ) ) ) ) * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),( Min( Min( Min( Min( RRSe ,( DS + CS ) ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.2981486645266211}, {"determining": "( Max( ( ( Min( Min( FirstVNF_CPU ,( Const - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,MDR ) / Min( DDR ,( Const + CRS ) ) ) - ( MDR * AMS ) ),ACS ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( MUM,MUR ) - ( ( Max( MUR,( MUR + CS ) ) + ( Max( Min( MLU ,DS ),MLU ) * RMSe ) ) / Min( RCSe ,CS ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6250575335946054}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM - BR ) * ( ACS * ACS ) ) ) * ( Min( FirstVNF_RAM_Server ,Const ) * Const ) ) + MDR ) ) / AMS ) )", "choosing": "( ( MUM - Max( DS,( CS * Max( ( ( ( DS - RMSe ) - CS ) + DS ),Min( ( RCSe - Min( MUC ,MUC ) ) ,Min( RRSe ,RRSe ) ) ) ) ) ) / Max( Max( ( ( ( MUR * Max( DS,RCSe ) ) + RRSe ) + MLU ),MUC ),Max( MUM,RCSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14348187800213238}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( DS + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.27364074381470904}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) * ( ( ( Min( ( ( Max( FirstVNF_Mem_Server,BR ) - Min( PN ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) / Min( MRS ,ACS ) ) * MDR ) + ( CRS + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUM,( CS / MUM ) ),Max( ( ( ( MUR * ( DS / RCSe ) ) + RRSe ) + ( DS / Max( DS,CS ) ) ),MUC ) ) / ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,RCSe ) ,Min( RRSe ,DS ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.34939227984429655}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( RRS - Max( ARS,ARS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),( Min( Min( Min( Min( RRSe ,( DS + MUC ) ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3377678365159592}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( ACS / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + Max( CRS,PN ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.6692913385826772, "obj2": 0.16682562536518641}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,FirstVNF_Mem ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU * ( ACS * ACS ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,MUM ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.5708661417322834, "obj2": 0.24086999478920143}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( Max( ( FirstVNF_Mem_Server * CRS ),( Min( ( Min( CRS ,Max( CRS,PN ) ) - ( ( FirstVNF_CPU / FirstVNF_RAM ) / ( AMS - FirstVNF_RAM ) ) ) ,( RRS - Max( ( MDR - ARS ),ACS ) ) ) / Max( Const,RRS ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe / ( MUR * CS ) ) + ( DS / ( ( DS + Min( ( Max( RCSe,RRSe ) + RCSe ) ,MUC ) ) / MLU ) ) )", "obj1": 0.46653543307086615, "obj2": 0.3355439623931789}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * Max( ( ARS + BR ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,Max( MRS,( Max( CRS,PN ) * ACS ) ) ) / Min( MRS ,Max( AMS,ARS ) ) ) ,AMS ) * FirstVNF_RAM ) ,ACS )", "choosing": "( ( ( MUM / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.08022705236873094}, {"determining": "( ( ACS * PN ) - ( Min( Max( PN,MDR ) ,( ( ( FirstVNF_CPU / PN ) * Max( ACS,FirstVNF_Mem ) ) + Max( ( ( FirstVNF_RAM / RRS ) + ARS ),( FirstVNF_RAM / ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( Min( ACS ,BR ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - ( DS + ( Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) * CS ) ) ) / Max( ( MUM + RCSe ),Max( ( ( ( Max( DS,RCSe ) * MLU ) + ( ( ( MUR * CS ) / DS ) - Max( RMSe,Max( MUR,MUC ) ) ) ) + MLU ),MUC ) ) )", "obj1": 0.687007874015748, "obj2": 0.15199309033614528}, {"determining": "( ( Max( ( Min( ( Min( AMS ,RRS ) - ( CRS - AMS ) ) ,DDR ) + ( ( MRS - ( PN / MRS ) ) * PN ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_Mem_Server * CRS ) * ( Min( Min( CRS ,Max( ACS,MDR ) ) ,( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( MRS ,ACS ) ) ) / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( CS * Max( ( ( MLU + CS ) + ( DS + RMSe ) ),Max( ( DS / DS ),RCSe ) ) ),( MUM / ( Max( ( MUM / MUM ),Max( DS,( Min( RMSe ,RCSe ) + CS ) ) ) / ( MLU / MUC ) ) ) ) * ( ( RCSe * DS ) - Max( MLU,( ( MUR - ( Max( RCSe,MUM ) + RCSe ) ) - ( MUM / ( Min( RCSe ,Min( RRSe ,MLU ) ) / ( RRSe - ( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.5393700787401575, "obj2": 0.2693901161804807}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5602422987887881}, {"determining": "( Max( ( Max( AMS,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MLU ) ,Max( RRSe,DS ) ) ) ) ) ) / ( Max( RRSe,RCSe ) + MUC ) ) - ( ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) / ( ( ( ( MUM + Min( Max( RCSe,MLU ) ,MUM ) ) + RCSe ) / RMSe ) - ( DS * MUC ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.517274254170924}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( Max( ACS,Max( CRS,PN ) ) / PN ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU * ( ACS * ACS ) ) ) ) ) ) / ( Min( Min( ACS ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RRSe ,MUM ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * RMSe ) ) - Min( Min( ( CS + ( MUM / ( ( CS / DS ) / ( RCSe + RMSe ) ) ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.5610236220472441, "obj2": 0.24606757794461628}, {"determining": "Min( ( Min( ( Min( ( ( PN - MDR ) * ( BR + ( PN * ACS ) ) ) ,Max( MRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ACS ) ) ) / Min( MRS ,ACS ) ) ,AMS ) - FirstVNF_RAM_Server ) ,ACS )", "choosing": "( ( DS / Max( ( ( RRSe + CS ) / CS ),( ( RMSe / ( RCSe + RCSe ) ) + ( ( ( DS + MLU ) + ( DS + RCSe ) ) - Max( ( DS / DS ),RCSe ) ) ) ) ) - Min( MUM ,( ( RMSe * ( Max( ( ( MUM - DS ) - RCSe ),Min( Max( CS,DS ) ,CS ) ) * RRSe ) ) - Max( Min( CS ,( RRSe - MUC ) ),RMSe ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.0570635766185069}, {"determining": "( ( FirstVNF_RAM_Server * ( Min( BR ,FirstVNF_CPU ) - FirstVNF_CPU ) ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RRSe - RCSe ) + ( RMSe / MUM ) ) + DS ) - ( DS + ( CS * Max( RRSe,Min( ( RCSe + MUC ) ,Max( RMSe,RMSe ) ) ) ) ) ) / ( DS + MUC ) ) - ( ( ( ( ( Min( Max( MUM,MLU ) ,MUM ) + MUM ) + MUR ) / Max( RRSe,DS ) ) - ( MUM / MLU ) ) / ( ( MUR / ( MUR + CS ) ) + ( Min( Min( Min( Min( RRSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MUR / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49315041313457}, {"determining": "( Max( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + BR ) ) ),ACS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - ( DS + ( CS * Max( RRSe,Min( Max( RCSe,( RRSe - RMSe ) ) ,Min( RRSe ,DS ) ) ) ) ) ) / Max( ( MUM + RCSe ),( Min( Min( Min( Min( RRSe ,( DS + MUC ) ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.41976442837629385}, {"determining": "( ( ACS * PN ) - ( Min( Min( PN ,MDR ) ,( ( ( FirstVNF_CPU / ( ( BR / FirstVNF_RAM ) / FirstVNF_CPU ) ) * Max( ACS,FirstVNF_Mem ) ) + ( MDR * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( Const / MRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( RCSe ,RMSe ) ,MUC ) ,MUM ) ,RCSe ) / Max( ( MLU / Max( MLU,MUM ) ),Max( RCSe,RRSe ) ) ) / MUM ) / ( ( Min( ( CS * MUC ) ,( RCSe + RMSe ) ) * ( DS * DS ) ) - Min( Min( ( CS + ( MUM / MUM ) ) ,( RCSe / ( MUR + CS ) ) ) ,Min( Max( RCSe,RRSe ) ,MUM ) ) ) )", "obj1": 0.6358267716535433, "obj2": 0.19264125937726362}]}