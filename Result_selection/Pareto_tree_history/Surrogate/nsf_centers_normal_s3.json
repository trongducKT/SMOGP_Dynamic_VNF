{"1": [{"determining": "( ( Const - FirstVNF_Mem ) * ( BR * RRS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 0.45985401459854014, "obj2": 0.602526054691183}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) - ( Const - Const ) )", "choosing": "Min( ( MUM + MUR ) ,( ( MLU - Min( CS ,MUR ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server / RRS ) )", "choosing": "Min( Max( DS,Max( CS,RRSe ) ) ,Max( RRSe,CS ) )", "obj1": 0.4197080291970803, "obj2": 0.6357407286285022}, {"determining": "( ( DDR + FirstVNF_RAM ) - ( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( ( RMSe + RMSe ) + ( ( MLU - CS ) - ( RRSe * MLU ) ) )", "obj1": 0.5821167883211679, "obj2": 0.4498533338750947}, {"determining": "( ( FirstVNF_RAM / ( ( FirstVNF_Mem_Server / ARS ) / DDR ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( ( MLU + RCSe ) - Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) )", "obj1": 0.6131386861313869, "obj2": 0.4040167562959897}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,( Const / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "Min( Min( MUC ,MUR ) ,Max( RMSe,( RRSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( RRS ,ARS ),Min( Min( Min( ( BR - RRS ) ,FirstVNF_CPU ) ,AMS ) ,CRS ) )", "choosing": "( ( RMSe / MUM ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46795882204171046}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( ( Min( Max( ( Min( Const ,FirstVNF_CPU_Server ) + MDR ),Min( Max( ARS,MRS ) ,FirstVNF_Mem ) ) ,Min( FirstVNF_Mem ,ACS ) ) * CRS ) + AMS ),AMS ) )", "choosing": "Max( Min( DS ,Max( Max( MUM,( MUM + MUR ) ),RRSe ) ),Min( MUC ,MUC ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "Min( ( BR * ( Min( MRS ,FirstVNF_RAM_Server ) + DDR ) ) ,( ( MRS - FirstVNF_CPU_Server ) - Const ) )", "choosing": "( Min( Min( ( RRSe * MUC ) ,DS ) ,MUC ) - Min( ( MUR - DS ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS + CRS ),( Min( ARS ,Max( ( FirstVNF_Mem + PN ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) )", "choosing": "( Max( ( Min( MUM ,Max( RMSe,Min( MUR ,MUC ) ) ) / ( Max( MUM,MUM ) * ( ( ( RCSe + DS ) / MUC ) - DS ) ) ),DS ) / ( RMSe + RCSe ) )", "obj1": 0.5018248175182481, "obj2": 0.49055883077180523}, {"determining": "( Min( Max( DDR,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server * MRS ) ) + ( Min( ACS ,DDR ) + Max( AMS,ARS ) ) )", "choosing": "( ( DS * RCSe ) * ( CS - MUR ) )", "obj1": 0.5802919708029197, "obj2": 0.4583142965532725}, {"determining": "Min( ( ACS / FirstVNF_CPU_Server ) ,( Min( PN ,BR ) / Max( ACS,RRS ) ) )", "choosing": "( Max( ( MLU * CS ),Max( RMSe,CS ) ) + ( Min( RCSe ,RRSe ) / ( DS + MUR ) ) )", "obj1": 0.45985401459854014, "obj2": 0.602526054691183}, {"determining": "Min( ( ( Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - Const ) * ( BR - FirstVNF_RAM ) ) ) * ( CRS + ACS ) ) - ACS ) ,Min( Min( FirstVNF_CPU ,Max( FirstVNF_Mem_Server,MRS ) ) ,( ( ARS + FirstVNF_Mem ) - FirstVNF_Mem ) ) )", "choosing": "( ( DS - RMSe ) + ( Max( ( MUM + ( RMSe / ( RMSe * ( Min( RCSe ,MUC ) * MLU ) ) ) ),( RCSe * RCSe ) ) + ( RCSe - MUM ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498878}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( AMS * PN ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - ( ARS + MDR ) ) ) )", "choosing": "( ( RCSe + MUM ) / ( Max( MUM,MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.5091240875912408, "obj2": 0.45963416357760417}, {"determining": "( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MLU - MUM ) + DS ),( MLU * MUM ) )", "obj1": 0.5967153284671532, "obj2": 0.43692825451842027}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) / ( ( FirstVNF_Mem + PN ) * ( FirstVNF_CPU - ARS ) ) )", "choosing": "( ( DS / RCSe ) + ( ( MUM - MLU ) * ( RCSe / MLU ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6331365717046505}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) )", "obj1": 0.708029197080292, "obj2": 0.3044799304508335}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) / ( MRS / ACS ) )", "choosing": "( ( ( MUC - Max( ( RMSe - ( RMSe / MUC ) ),( Max( DS,Min( Max( MUM,DS ) ,MLU ) ) - ( RRSe / ( Max( RCSe,RRSe ) + MUM ) ) ) ) ) * MLU ) + ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( RRS * ACS ) ) ,( ( ARS + ARS ) * ( RRS - FirstVNF_Mem ) ) ) / ( Max( ( MDR * MDR ),( FirstVNF_CPU_Server + MDR ) ) / ( ( Const - FirstVNF_RAM ) + ( CRS + MRS ) ) ) )", "choosing": "( ( MLU * RMSe ) - Max( MUR,RMSe ) )", "obj1": 0.9379562043795621, "obj2": 0.07736342110382566}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - RRS ) / ( AMS * Min( ( RRS / FirstVNF_Mem ) ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( MUM + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( RRS * PN ) ,Max( MRS,DDR ) ) * ( ( AMS - MDR ) - Max( CRS,Const ) ) ) ,Min( ( ( FirstVNF_CPU_Server - DDR ) / ( AMS / FirstVNF_RAM_Server ) ) ,( ( PN / FirstVNF_CPU ) + Max( FirstVNF_CPU_Server,Max( ACS,PN ) ) ) ) )", "choosing": "( ( ( MUC * DS ) / ( Min( RRSe ,Max( DS,( MUC / MUM ) ) ) * Max( MLU,RMSe ) ) ) - ( ( ( DS + MUM ) - ( MLU - MUC ) ) - ( ( MLU / MUC ) + Min( DS ,CS ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.602526054691183}, {"determining": "( ( Const * Const ) / Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ),FirstVNF_RAM ) )", "choosing": "Max( ( ( Max( MUM,Min( MLU ,( MUR / ( MUR - Max( MLU,MLU ) ) ) ) ) - MLU ) / MLU ),Max( Min( Max( MUC,MUM ) ,( MLU * RRSe ) ),( ( CS * MUM ) * ( MLU * CS ) ) ) )", "obj1": 0.5, "obj2": 0.5022912809308907}, {"determining": "Min( ( Max( Max( FirstVNF_CPU_Server,AMS ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ( AMS * RRS ) / Min( MDR ,AMS ) ) ) ,Max( ( ( ARS - ARS ) * ( FirstVNF_CPU + ACS ) ),( Min( FirstVNF_CPU_Server ,ARS ) + Max( FirstVNF_CPU_Server,PN ) ) ) )", "choosing": "( ( MUR - ( ( RCSe / RRSe ) - DS ) ) - Max( ( Min( MUR ,MUR ) + DS ),( ( CS + MUC ) - RCSe ) ) )", "obj1": 0.49452554744525545, "obj2": 0.5114704390509823}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + FirstVNF_Mem ) ,( AMS - MRS ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / MLU ) ) - Max( Max( CS,( ( MUR / ( RMSe / MLU ) ) / MUR ) ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5875912408759124, "obj2": 0.44112305270284574}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,RRS ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU ) / Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RRSe ) * ( CS * ( ( RCSe + MUC ) * RMSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}], "2": [{"determining": "( Min( FirstVNF_Mem_Server ,ACS ) - ( Const - Const ) )", "choosing": "Min( ( MUM + MUR ) ,( ( MLU - Min( CS ,MUR ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( ( FirstVNF_Mem_Server / ARS ) / DDR ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( ( MLU + RCSe ) - Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) )", "obj1": 0.6131386861313869, "obj2": 0.4040167562959897}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,( Const / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "Min( Min( MUC ,MUR ) ,Max( RMSe,( RRSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( RRS ,ARS ),Min( Min( Min( ( BR - RRS ) ,FirstVNF_CPU ) ,AMS ) ,CRS ) )", "choosing": "( ( RMSe / MUM ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46795882204171046}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( ( Min( Max( ( Min( Const ,FirstVNF_CPU_Server ) + MDR ),Min( Max( ARS,MRS ) ,FirstVNF_Mem ) ) ,Min( FirstVNF_Mem ,ACS ) ) * CRS ) + AMS ),AMS ) )", "choosing": "Max( Min( DS ,Max( Max( MUM,( MUM + MUR ) ),RRSe ) ),Min( MUC ,MUC ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "Min( ( BR * ( Min( MRS ,FirstVNF_RAM_Server ) + DDR ) ) ,( ( MRS - FirstVNF_CPU_Server ) - Const ) )", "choosing": "( Min( Min( ( RRSe * MUC ) ,DS ) ,MUC ) - Min( ( MUR - DS ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - Const ) * ( BR - FirstVNF_RAM ) ) ) * ( CRS + ACS ) ) - ACS ) ,Min( Min( FirstVNF_CPU ,Max( FirstVNF_Mem_Server,MRS ) ) ,( ( ARS + FirstVNF_Mem ) - FirstVNF_Mem ) ) )", "choosing": "( ( DS - RMSe ) + ( Max( ( MUM + ( RMSe / ( RMSe * ( Min( RCSe ,MUC ) * MLU ) ) ) ),( RCSe * RCSe ) ) + ( RCSe - MUM ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498878}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( AMS * PN ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - ( ARS + MDR ) ) ) )", "choosing": "( ( RCSe + MUM ) / ( Max( MUM,MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.5091240875912408, "obj2": 0.45963416357760417}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) )", "obj1": 0.708029197080292, "obj2": 0.3044799304508335}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) / ( MRS / ACS ) )", "choosing": "( ( ( MUC - Max( ( RMSe - ( RMSe / MUC ) ),( Max( DS,Min( Max( MUM,DS ) ,MLU ) ) - ( RRSe / ( Max( RCSe,RRSe ) + MUM ) ) ) ) ) * MLU ) + ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - RRS ) / ( AMS * Min( ( RRS / FirstVNF_Mem ) ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( MUM + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + FirstVNF_Mem ) ,( AMS - MRS ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / MLU ) ) - Max( Max( CS,( ( MUR / ( RMSe / MLU ) ) / MUR ) ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5875912408759124, "obj2": 0.44112305270284574}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,RRS ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU ) / Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RRSe ) * ( CS * ( ( RCSe + MUC ) * RMSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( FirstVNF_CPU - BR ) - Max( Min( CRS ,CRS ),FirstVNF_CPU ) )", "choosing": "( ( MUC / Min( DS ,RCSe ) ) * Max( Max( MUC,MLU ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * Const ) ) )", "choosing": "( MUC - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.458029197080292, "obj2": 0.558250195616805}, {"determining": "( FirstVNF_RAM_Server * Min( Const ,DDR ) )", "choosing": "( ( RRSe - RMSe ) * ( ( MLU + CS ) / Min( MUR ,MUC ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "Min( ( Const - ( Max( Max( ( FirstVNF_RAM_Server / ARS ),FirstVNF_Mem ),( ARS * ( FirstVNF_Mem_Server * CRS ) ) ) - FirstVNF_CPU_Server ) ) ,( FirstVNF_Mem * ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS / DS ) - ( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * Const ) ),PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( Min( Min( DS ,DS ) ,MUC ) - ( RCSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Max( FirstVNF_RAM_Server,ACS ),Min( PN ,RRS ) ) - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * Const ) )", "choosing": "( DS - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MUC ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,RRS ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU ) / Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RRSe ) * ( CS * ( ( RCSe + MUC ) * RMSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( Max( ACS,RRS ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU ) / Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RRSe ) * ( CS * ( ( RCSe + MUC ) * RMSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( Max( ACS,RRS ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU ) / Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RRSe ) * ( CS * ( ( RCSe + MUC ) * RMSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "Min( ( Const + ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Max( DDR,FirstVNF_Mem ) ) ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( ( ( CS * RCSe ) / ( CS - RMSe ) ) + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) ) / Max( DDR,FirstVNF_Mem ) )", "choosing": "( CS / ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( RRS * PN ) ,Max( MRS,DDR ) ) * AMS ) ,Min( ( ( FirstVNF_CPU_Server - DDR ) / ( AMS / FirstVNF_RAM_Server ) ) ,( ( PN / FirstVNF_CPU ) + Max( FirstVNF_CPU_Server,Max( ACS,PN ) ) ) ) )", "choosing": "( ( ( MUC * DS ) / ( Min( RRSe ,Max( DS,( CS * MUM ) ) ) * Max( MLU,RMSe ) ) ) - ( ( ( DS + MUM ) - ( MLU - MUC ) ) - ( ( MLU / MUC ) + Min( DS ,CS ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS / MUC ) + Min( RCSe ,MLU ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498878}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( ( Min( ( FirstVNF_Mem_Server + CRS ) ,( FirstVNF_CPU - AMS ) ) - ( ( FirstVNF_RAM_Server * AMS ) / ( DDR - Const ) ) ) * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.531021897810219, "obj2": 0.44318087947060775}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.531021897810219, "obj2": 0.44318087947060775}, {"determining": "( AMS - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( Min( MUC ,Max( RMSe,RRSe ) ) ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 0.46897810218978103, "obj2": 0.523241983042486}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "( Min( MUC ,Max( RMSe,RRSe ) ) - Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Const ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - ( CRS - DDR ) ) - Const ) ,( FirstVNF_Mem * Const ) )", "choosing": "( ( Max( MLU,MUC ) / Max( RCSe,MUC ) ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( MDR - FirstVNF_RAM_Server ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( MDR / FirstVNF_Mem ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( Min( ( MUM + MUM ) ,Max( MUM,RCSe ) ) - Max( DS,DS ) ) * MLU ) + ( RMSe / MUM ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "Max( Max( ( FirstVNF_CPU + MDR ),Min( FirstVNF_RAM ,AMS ) ),Min( ARS ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( CS + ( CS - Max( MUM,RMSe ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( ( Min( Max( ( Min( Const ,FirstVNF_CPU_Server ) + MDR ),Min( Max( ARS,MRS ) ,FirstVNF_Mem ) ) ,Min( FirstVNF_Mem ,ACS ) ) * CRS ) + AMS ),AMS ) )", "choosing": "Max( Min( DS ,Max( Max( MUM,( MUM + MUR ) ),RRSe ) ),Min( MUC ,MUC ) )", "obj1": 0.41058394160583944, "obj2": 0.6800450654393029}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( ( Min( Max( ( Min( Const ,FirstVNF_CPU_Server ) + MDR ),Min( Max( ARS,MRS ) ,FirstVNF_Mem ) ) ,Min( FirstVNF_Mem ,ACS ) ) * CRS ) + AMS ),AMS ) )", "choosing": "Max( Min( DS ,Max( Max( MUM,( MUM + MUR ) ),RRSe ) ),Min( MUC ,MUC ) )", "obj1": 0.41058394160583944, "obj2": 0.6800450654393029}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( ( Min( Max( ( Min( Const ,FirstVNF_CPU_Server ) + MDR ),Min( Max( ARS,MRS ) ,FirstVNF_Mem ) ) ,Min( FirstVNF_Mem ,ACS ) ) * CRS ) + AMS ),AMS ) )", "choosing": "Max( Min( DS ,Max( Max( MUM,( MUM + MUR ) ),RRSe ) ),Min( MUC ,MUC ) )", "obj1": 0.41058394160583944, "obj2": 0.6800450654393029}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( ( BR + FirstVNF_RAM ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( MLU - MLU ) ) ) + ( RRSe - MUR ) ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498878}, {"determining": "Min( ( BR / RRS ) ,Max( ( MRS * FirstVNF_Mem_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe + MLU ) + MLU ) + DS ) / Min( MLU ,( MLU - MLU ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498878}, {"determining": "Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_RAM ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * MRS ) ) )", "choosing": "( MUC - ( RMSe - RCSe ) )", "obj1": 0.531021897810219, "obj2": 0.44318087947060775}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - MUR ) + ( MUC + DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6290704544587624}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( CS - MUR ) + ( MUC + DS ) )", "obj1": 0.5912408759124088, "obj2": 0.42813538481637115}, {"determining": "( ( FirstVNF_CPU - BR ) - Max( Min( CRS ,( Max( Max( FirstVNF_RAM,MDR ),Max( ARS,FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_RAM_Server - BR ),Min( MDR ,FirstVNF_Mem ) ) ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC / Min( DS ,RCSe ) ) * Max( Max( MUC,( Max( ( ( DS * DS ) * ( MUM + RRSe ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( ( ( RRSe / RRSe ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) * ( ARS / MDR ) ) - ( Min( BR ,FirstVNF_Mem ) * ( Const - AMS ) ) ) / ( ( FirstVNF_CPU - BR ) - Max( Min( CRS ,CRS ),FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS * DS ) * ( RRSe + RRSe ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - ( MLU * Max( MUC,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - BR ) - Max( Min( CRS ,CRS ),FirstVNF_CPU ) )", "choosing": "( ( MUC / Min( DS ,RCSe ) ) * Max( Max( MUC,MLU ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Max( FirstVNF_CPU,MDR ),( MRS - ACS ) ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ,( Max( Min( MDR ,DDR ),( ACS / ACS ) ) - ( ( FirstVNF_CPU * MRS ) * Max( Max( ( Max( FirstVNF_Mem_Server,( ARS * CRS ) ) - FirstVNF_RAM_Server ),RRS ),AMS ) ) ) )", "choosing": "( ( ( MUC * Max( RRSe,MUR ) ) + RMSe ) + Max( CS,( MUM * ( Max( MUM,Min( RRSe ,( RCSe + Min( DS ,RMSe ) ) ) ) * Min( RMSe ,RCSe ) ) ) ) )", "obj1": 0.9306569343065694, "obj2": 0.04774531790173242}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / Max( DDR,FirstVNF_CPU ) ) ) ) ,Min( ( RRS - FirstVNF_Mem_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( ( ( RMSe + RMSe ) - Min( RMSe ,MUM ) ) + DS ) ) ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_CPU + MRS ) ,( ( FirstVNF_Mem_Server - Max( Const,Const ) ) * FirstVNF_CPU_Server ) ) ,Min( Min( CRS ,DDR ) ,( RRS - FirstVNF_RAM_Server ) ) ) / ( ACS / AMS ) )", "choosing": "( ( ( DS + MUC ) / Max( RMSe,MUC ) ) / ( RCSe * ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) + Min( Min( ( RRS - FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM ,DDR ) ) ,( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( ( DS + MUC ) / ( DS * CS ) ) / ( ( MLU - RMSe ) - ( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( RRS * ACS ) ) ,( ( ARS + ARS ) * ( RRS - FirstVNF_Mem ) ) ) / MRS )", "choosing": "( ( ( MUM / RMSe ) / ( MUC - MUR ) ) - Max( MUR,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / Const ) / ( CRS * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) * Max( ( ( BR * FirstVNF_RAM ) * ( ACS + FirstVNF_Mem ) ),Min( Min( ARS ,MRS ) ,( MRS + ARS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) * ( DS - MLU ) ) * MUM ) - ( Max( MLU,MLU ) / DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6800450654393029}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( Min( MRS ,Max( ( FirstVNF_Mem / Max( Min( PN ,BR ),MRS ) ),ACS ) ) - AMS ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,( CS - CS ) ) - ( ( DS + DS ) + Min( RRSe ,MUC ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MUM ) ) / ( ( DS / MUC ) + ( MUM - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - RRS ) / ( AMS * Min( ( RRS / FirstVNF_Mem ) ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( MUM + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - RRS ) / ( AMS * Min( ( RRS / FirstVNF_Mem ) ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( MUM + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( Min( BR ,FirstVNF_Mem ) * ( ACS - AMS ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( RRSe - MUR ) ) + ( Max( ( ( RRSe / RRSe ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) * ( RCSe - MUM ) ) )", "obj1": 0.8321167883211679, "obj2": 0.1252963978336079}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( DS * DS ) * ( MUM + RRSe ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( ( ( RRSe / RRSe ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498878}, {"determining": "( ( Max( Max( FirstVNF_RAM,FirstVNF_RAM ),( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ),FirstVNF_RAM ) )", "choosing": "Max( ( ( Max( MUM,Min( MLU ,( MUR / ( MUR - Max( CS,MLU ) ) ) ) ) - MLU ) / MLU ),Max( Min( Max( MUC,MUM ) ,( MLU * RRSe ) ),( ( CS * MUM ) * ( MLU * CS ) ) ) )", "obj1": 0.9781021897810219, "obj2": 0.02424838733808471}, {"determining": "( ( Max( Max( FirstVNF_RAM_Server,ACS ),Min( PN ,RRS ) ) / ( FirstVNF_Mem / Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * FirstVNF_Mem_Server ) ) ) ) ) + Min( Const ,ARS ) )", "choosing": "Min( ( RCSe - RMSe ) ,( Min( RCSe ,RRSe ) * DS ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * Max( Max( FirstVNF_RAM_Server,ACS ),Min( PN ,RRS ) ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.7846715328467153, "obj2": 0.16233098434928311}, {"determining": "( MDR - ( Max( CRS,( ACS / ACS ) ) / Max( RRS,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MUC ) + ( CS - ( MLU + Min( MUM ,( Max( MLU,MUM ) - Min( MLU ,Min( ( RMSe - CS ) ,RCSe ) ) ) ) ) ) )", "obj1": 0.9616788321167883, "obj2": 0.04590256558358995}, {"determining": "Max( ( Max( CRS,CRS ) * BR ),Min( RRS ,ARS ) )", "choosing": "( ( CS - MUR ) + ( Min( DS ,( MUM / MLU ) ) - RMSe ) )", "obj1": 0.5054744525547445, "obj2": 0.46795882204171046}, {"determining": "( ( DDR - FirstVNF_CPU ) / ( RRS + MRS ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( ( CS / CS ) ,Min( DS ,RRSe ) ) ) * ( MLU * ( RMSe - ( DS + ( Min( ( Min( MLU ,RCSe ) / MUR ) ,Min( MUC ,Max( MLU,CS ) ) ) - ( Max( RCSe,CS ) * Min( RCSe ,DS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * ( ( RRS / FirstVNF_Mem ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "Max( Max( ( Min( ( DS + ( ( RRSe * MLU ) - ( Max( RCSe,CS ) * Min( RCSe ,DS ) ) ) ) ,MUC ) / MUR ),( DS + MUM ) ),( Max( RMSe,DS ) + ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( MDR ,CRS ),Min( CRS ,RRS ) ) / ( ( Max( CRS,Const ) + PN ) * Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "( Min( ( RRSe - RCSe ) ,( RMSe + RMSe ) ) / Max( Max( MUC,RRSe ),( Min( RRSe ,Max( DS,( MUC / MUM ) ) ) * Max( MLU,RMSe ) ) ) )", "obj1": 0.49635036496350365, "obj2": 0.48755021140872784}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * FirstVNF_RAM_Server ) )", "choosing": "( RRSe * ( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - ( AMS * PN ) ) ,( ( FirstVNF_CPU_Server + MRS ) * Const ) )", "choosing": "( Min( Min( DS ,DS ) ,( Max( Max( RMSe,Max( RMSe,RCSe ) ),MUR ) / ( Max( RMSe,MUR ) - Max( MUM,MLU ) ) ) ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * PN ) + Max( FirstVNF_RAM_Server,PN ) ) + ( DDR * FirstVNF_CPU ) )", "choosing": "( ( ( MLU + ( ( MUC + DS ) + Max( ( MUM + MUM ),RMSe ) ) ) + MUC ) / ( Max( RMSe,MUR ) - Max( MLU,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * Const ) ,( ( MRS - FirstVNF_CPU_Server ) - ( Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) + ( ( MDR * ARS ) / AMS ) ) ) )", "choosing": "( Min( ( DS - DS ) ,MUC ) - ( RCSe / Max( Max( DS,MLU ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * ( Min( MRS ,FirstVNF_RAM_Server ) + DDR ) ) ,( ( MRS - FirstVNF_CPU_Server ) - Const ) )", "choosing": "( Min( Min( ( RRSe * MUC ) ,DS ) ,MUC ) - Min( ( MUR - DS ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * ( Min( MRS ,FirstVNF_RAM_Server ) + DDR ) ) ,( ( MRS - FirstVNF_CPU_Server ) - Const ) )", "choosing": "( Min( Min( ( RRSe * MUC ) ,DS ) ,MUC ) - Min( ( MUR - DS ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( DDR + ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / ( RRS * ( Min( ( MDR + ARS ) ,BR ) - FirstVNF_CPU_Server ) ) ) ) ) - ( RRS * MDR ) )", "choosing": "( ( ( ( CS - RMSe ) + ( DS + RMSe ) ) + Min( MUR ,RRSe ) ) * Min( MUC ,RRSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( BR + FirstVNF_RAM_Server ) - ( DDR + ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS - ( ( MLU + Min( MUR ,RRSe ) ) * Min( MUC ,RRSe ) ) ) + ( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( MDR - Max( ( ( ( Max( FirstVNF_CPU_Server,AMS ) - FirstVNF_Mem_Server ) * ( MDR * AMS ) ) - ( FirstVNF_RAM_Server / ( FirstVNF_Mem * DDR ) ) ),( FirstVNF_Mem / PN ) ) ) ) - ( RRS * MDR ) )", "choosing": "( ( RRSe - Min( RCSe ,Min( MLU ,MLU ) ) ) + ( MUC + DS ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( Max( ACS,RRS ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU ) / Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RRSe ) * ( CS * ( ( RCSe + MUC ) * RMSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( Max( ACS,RRS ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU ) / Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RRSe ) * ( CS * ( ( RCSe + MUC ) * RMSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( Min( MDR ,MRS ) / FirstVNF_Mem ) * ( CRS - AMS ) )", "choosing": "( Min( ( Max( ( RRSe * RMSe ),RRSe ) - RMSe ) ,( ( ( RMSe + MUM ) / MUM ) - MUC ) ) + ( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( CRS + BR ) ) - ( RRS * MDR ) )", "choosing": "Min( ( MUC * DS ) ,( DS * RMSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( ( ( ( RRS / BR ) * RRS ) * DDR ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( ( Max( ( MUR + DS ),Max( CS,DS ) ) / ( ( RRSe / RCSe ) + Max( MUM,MUM ) ) ) + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MDR - FirstVNF_RAM ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( DDR ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS / MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - ( ( ( RRSe + RCSe ) + DS ) - ( MUM / MUC ) ) ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( Max( MUR,RCSe ) * ( MLU + RRSe ) ) ) )", "obj1": 0.75, "obj2": 0.29538002646204725}, {"determining": "( ( FirstVNF_RAM_Server * ( BR / FirstVNF_Mem_Server ) ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,DS ) - Min( Max( MUC,Min( ( Max( ( RRSe - RMSe ),MUM ) / Max( ( ( MUC + MUM ) * CS ),MLU ) ) ,Min( DS ,RCSe ) ) ) ,Max( RMSe,RRSe ) ) )", "obj1": 0.7518248175182481, "obj2": 0.27908983732377096}, {"determining": "( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,Max( CS,RRSe ) ) - Min( RCSe ,( MLU + ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,Max( CS,RRSe ) ) - Min( RCSe ,( MLU + ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "Min( ( MUM / MUR ) ,( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) - ( Const - Const ) )", "choosing": "Min( ( MUM + MUR ) ,( ( MLU - Min( CS ,MUR ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( AMS + ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ),AMS ) )", "choosing": "Max( Min( DS ,RMSe ),( Min( MUM ,MUM ) + ( ( ( RRSe * MUC ) - ( ( ( CS - MUC ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) ) / MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6825966138664078}, {"determining": "Min( ( FirstVNF_Mem_Server - Const ) ,Max( AMS,BR ) )", "choosing": "( Min( Min( RRSe ,Min( CS ,RMSe ) ) ,MUC ) - ( RRSe / MUM ) )", "obj1": 0.656934306569343, "obj2": 0.31432581147812044}, {"determining": "( ( FirstVNF_RAM / ( ( FirstVNF_Mem_Server / ARS ) / DDR ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( ( MLU + RCSe ) - Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) )", "obj1": 0.6131386861313869, "obj2": 0.4040167562959897}, {"determining": "( ( DDR - ( ( ( PN / FirstVNF_RAM ) * ( ARS / MDR ) ) - ( Min( BR ,FirstVNF_Mem ) * ( ACS - AMS ) ) ) ) / ( AMS * ( ( RRS / FirstVNF_Mem ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,Max( Max( MUC,MLU ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) ) ,( CS / CS ) ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.9288321167883211, "obj2": 0.11104911215571416}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) )", "obj1": 0.7664233576642335, "obj2": 0.2399621774301859}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS / MUC ) + Min( RCSe ,MLU ) )", "obj1": 0.8485401459854015, "obj2": 0.11359840298540447}, {"determining": "( BR - ( ( BR / BR ) * ( FirstVNF_Mem - ( FirstVNF_Mem * Const ) ) ) )", "choosing": "( Min( Max( MUM,( Min( RMSe ,MUR ) - Min( ( RCSe + ( Max( CS,RRSe ) + CS ) ) ,Max( ( ( DS / RCSe ) + MUR ),RRSe ) ) ) ) ,Max( RMSe,RRSe ) ) - Min( RCSe ,DS ) )", "obj1": 0.4562043795620438, "obj2": 0.5402582739804751}, {"determining": "Min( ( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Max( Max( PN,RRS ),AMS ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe + ( MUC * Max( RRSe,MUR ) ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.04774531790173242}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5875912408759124, "obj2": 0.44112305270284574}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.531021897810219, "obj2": 0.44318087947060775}, {"determining": "( ( ACS + AMS ) + Max( ( AMS + ( BR * ( Min( ( FirstVNF_Mem + ( FirstVNF_RAM / DDR ) ) ,BR ) * ( BR + FirstVNF_RAM ) ) ) ),AMS ) )", "choosing": "Max( Min( RCSe ,DS ),( MUR / Max( ( Max( ( ( MUC + MLU ) * ( ( RCSe / MUC ) + RMSe ) ),( ( ( MLU - MUM ) + MUM ) - CS ) ) + ( DS + RRSe ) ),RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Min( ( ACS - ACS ) ,Max( RRS,( ( BR * FirstVNF_RAM_Server ) * Max( Max( FirstVNF_RAM_Server,ACS ),Min( PN ,RRS ) ) ) ) )", "choosing": "( Max( MUR,MLU ) / ( MLU * ( MLU - MLU ) ) )", "obj1": 0.7846715328467153, "obj2": 0.16233098434928311}, {"determining": "( ( ( ( PN / FirstVNF_RAM ) * ( ARS / MDR ) ) - ( Min( BR ,FirstVNF_Mem ) * ( ACS - AMS ) ) ) / ( FirstVNF_RAM - Max( Min( CRS ,CRS ),FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS * DS ) * ( MUM + RRSe ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( Max( MUC,DS ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.7116788321167883, "obj2": 0.2951296451048488}, {"determining": "( ( FirstVNF_RAM_Server * ( BR / FirstVNF_Mem_Server ) ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,DS ) - Min( Max( MUC,Min( ( Max( ( RRSe - RMSe ),MUM ) / Max( ( ( MUC + MUM ) * CS ),MLU ) ) ,Min( DS ,RCSe ) ) ) ,Max( RMSe,RRSe ) ) )", "obj1": 0.7518248175182481, "obj2": 0.27908983732377096}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) )", "obj1": 0.708029197080292, "obj2": 0.3044799304508335}, {"determining": "Min( ( ( RRS + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.1601773588553094}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( MDR - FirstVNF_RAM_Server ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( MDR / FirstVNF_Mem ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( Min( ( MUM + MUM ) ,Max( MUM,RCSe ) ) - Max( DS,DS ) ) * MLU ) + ( RMSe / MUM ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( CS - MUR ) + ( MUC + DS ) )", "obj1": 0.5912408759124088, "obj2": 0.42813538481637115}, {"determining": "Max( Min( RRS ,ARS ),Min( Min( Min( ( BR - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( ARS - FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) ,AMS ) ,CRS ) )", "choosing": "( ( RMSe / MUM ) * ( Max( MUC,RRSe ) / ( MUC + DS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6290704544587624}, {"determining": "Max( Max( ( FirstVNF_CPU + MDR ),Min( FirstVNF_RAM ,AMS ) ),Min( ARS ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( CS + ( CS - Max( MUM,RMSe ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( MDR - ( Max( CRS,( ACS / ACS ) ) / Max( RRS,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MUC ) + ( CS - ( MLU + Min( MUM ,( Max( MLU,MUM ) - Min( MLU ,Min( ( RMSe - CS ) ,RCSe ) ) ) ) ) ) )", "obj1": 0.9616788321167883, "obj2": 0.04590256558358995}, {"determining": "( AMS - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( Min( MUC ,Max( RMSe,RRSe ) ) ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 0.46897810218978103, "obj2": 0.523241983042486}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( ( Min( Max( ( Min( Const ,FirstVNF_CPU_Server ) + MDR ),Min( Max( ARS,MRS ) ,FirstVNF_Mem ) ) ,Min( FirstVNF_Mem ,ACS ) ) * CRS ) + AMS ),AMS ) )", "choosing": "Max( Min( DS ,Max( Max( MUM,( MUM + MUR ) ),RRSe ) ),Min( MUC ,MUC ) )", "obj1": 0.41058394160583944, "obj2": 0.6800450654393029}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( AMS * PN ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - ( ARS + MDR ) ) ) )", "choosing": "( ( RCSe + MUM ) / ( Max( MUM,MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.5091240875912408, "obj2": 0.45963416357760417}, {"determining": "( Max( Min( MDR ,CRS ),Min( CRS ,RRS ) ) / ( ( Max( CRS,Const ) + PN ) * Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "( Min( ( RRSe - RCSe ) ,( RMSe + RMSe ) ) / Max( Max( MUC,RRSe ),( Min( RRSe ,Max( DS,( MUC / MUM ) ) ) * Max( MLU,RMSe ) ) ) )", "obj1": 0.49635036496350365, "obj2": 0.48755021140872784}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) )", "obj1": 0.7554744525547445, "obj2": 0.2545428452808627}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - MUR ) + ( MUC + DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6290704544587624}, {"determining": "( ( Max( Max( FirstVNF_RAM,FirstVNF_RAM ),( ( ( DDR + PN ) * ACS ) - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,PN ) ) ) / Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ),FirstVNF_RAM ) )", "choosing": "Max( ( ( Max( MUM,Min( ( MUR / ( MUR - ( RRSe + MUR ) ) ) ,MLU ) ) - MLU ) / MLU ),Max( Min( Max( MUC,MUM ) ,( MLU * RRSe ) ),( ( MUM * MUM ) * ( MLU * CS ) ) ) )", "obj1": 0.9781021897810219, "obj2": 0.024248387338084706}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( ( ( FirstVNF_CPU + MDR ) * Min( FirstVNF_RAM ,AMS ) ),( FirstVNF_CPU_Server / Const ) ) )", "choosing": "( Max( ( ( DS * DS ) * ( MUM + RRSe ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( ( ( RRSe / RRSe ) - ( CS + ( CS - ( MUC - RRSe ) ) ) ),( ( RCSe - DS ) / Max( RMSe,RMSe ) ) ) )", "obj1": 0.8193430656934306, "obj2": 0.1349814972057488}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( DS * DS ) * ( MUM + RRSe ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( ( ( RRSe / RRSe ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.8394160583941606, "obj2": 0.11475396011386094}, {"determining": "Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( DDR - RRS ) ) ) ,Max( RRS,( ( Max( BR,( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MUM / ( MLU - Max( Max( ( MUR / MUM ),DS ),MUC ) ) ) ) + ( RRSe - MUR ) ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.8193430656934306, "obj2": 0.1349814972057488}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.531021897810219, "obj2": 0.44318087947060775}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) )", "obj1": 0.7627737226277372, "obj2": 0.24391853779806472}, {"determining": "Max( Max( ( FirstVNF_CPU + MDR ),Min( FirstVNF_RAM ,AMS ) ),Min( ARS ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( CS + ( CS - Max( MUM,RMSe ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46795882204171046}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( Min( BR ,FirstVNF_Mem ) * ( ACS - AMS ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( RRSe - MUR ) ) + ( Max( ( ( RRSe / RRSe ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) * ( RCSe - MUM ) ) )", "obj1": 0.8321167883211679, "obj2": 0.1252963978336079}, {"determining": "( ( RRS * MDR ) - ( CRS + RRS ) )", "choosing": "Min( ( ( Min( RMSe ,Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( MLU ,( Max( MUM,RRSe ) / ( MLU * RMSe ) ) ) ) ) * MUR ) + RRSe ) ,Max( CS,RRSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * Max( Max( FirstVNF_RAM_Server,ACS ),Min( PN ,RRS ) ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.7846715328467153, "obj2": 0.16233098434928311}, {"determining": "( Min( AMS ,ACS ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( ( Max( MUC,RMSe ) + DS ) - Min( MLU ,RCSe ) )", "obj1": 0.9908759124087592, "obj2": 0.01216816460126676}, {"determining": "( MDR - ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( CS - MUR ) + ( RMSe / MUM ) )", "obj1": 0.9616788321167883, "obj2": 0.04590256558358995}, {"determining": "( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - ( ( FirstVNF_RAM_Server + ( ACS * RRS ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( MLU,( RCSe * MUC ) ) )", "obj1": 0.7518248175182481, "obj2": 0.27908983732377096}, {"determining": "( ( BR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU + ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + ( DS + RMSe ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "Max( Min( RRS ,ARS ),Min( Min( Min( ( BR - RRS ) ,FirstVNF_CPU ) ,AMS ) ,CRS ) )", "choosing": "( ( RMSe / MUM ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46795882204171046}, {"determining": "( Max( FirstVNF_RAM_Server,( ( RRS * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( Min( DS ,DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( RRSe ,( MUR / ( MUC + RMSe ) ) ) - ( RMSe + MLU ) ) )", "obj1": 0.9799270072992701, "obj2": 0.021087978051892914}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MLU,MUC ) / Max( RCSe,MUC ) ) - ( RCSe / MUM ) )", "obj1": 0.708029197080292, "obj2": 0.3044799304508335}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS / MUC ) + Min( RCSe ,MLU ) )", "obj1": 0.822992700729927, "obj2": 0.1308241836458313}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( DS * DS ) * ( MUM + RRSe ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( ( ( RRSe / RRSe ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.8284671532846716, "obj2": 0.12564702499566818}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) + Min( ( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( ( DS + MUC ) / ( DS * CS ) ) / ( ( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) ) - ( MLU + MLU ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( ( Min( Max( ( Min( Const ,FirstVNF_CPU_Server ) + MDR ),Min( Max( ARS,MRS ) ,FirstVNF_Mem ) ) ,Min( FirstVNF_Mem ,ACS ) ) * CRS ) + AMS ),AMS ) )", "choosing": "Max( Min( DS ,Max( Max( MUM,( MUM + MUR ) ),RRSe ) ),Min( MUC ,MUC ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( Max( ( MDR - FirstVNF_RAM ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( DDR ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS / MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - ( ( ( RRSe + RCSe ) + DS ) - ( MUM / MUC ) ) ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( Max( MUR,RCSe ) * ( MLU + RRSe ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "Min( ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,( ( Max( ARS,RRS ) + MDR ) + BR ) ) ) ,Max( ( ( MDR / Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - DS ) + DS ) / ( ( RRSe - ( ( MLU - MUR ) + Max( Max( ( ( DS + MLU ) - DS ),DS ),RCSe ) ) ) / ( MLU - MLU ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498878}, {"determining": "Min( ( ( Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - Const ) * ( BR - FirstVNF_RAM ) ) ) * ( CRS + ACS ) ) - ACS ) ,Min( Min( FirstVNF_CPU ,Max( FirstVNF_Mem_Server,MRS ) ) ,( ( ARS + FirstVNF_Mem ) - FirstVNF_Mem ) ) )", "choosing": "( ( DS - RMSe ) + ( Max( ( MUM + ( RMSe / ( RMSe * ( Min( RCSe ,MUC ) * MLU ) ) ) ),( RCSe * RCSe ) ) + ( RCSe - MUM ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498878}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( AMS + ( Min( Max( PN,BR ) ,RRS ) * DDR ) ),AMS ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( ( MLU + RRSe ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6800450654393029}, {"determining": "Min( Max( Max( Max( FirstVNF_CPU,MDR ),( MRS - ACS ) ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ,( Max( Min( MDR ,DDR ),( ACS / ACS ) ) - ( ( FirstVNF_CPU * MRS ) * Max( Max( ( Max( FirstVNF_Mem_Server,( ARS * CRS ) ) - FirstVNF_RAM_Server ),RRS ),AMS ) ) ) )", "choosing": "( ( ( MUC * Max( RRSe,MUR ) ) + RMSe ) + Max( CS,( MUM * ( Max( MUM,Min( RRSe ,( RCSe + Min( DS ,RMSe ) ) ) ) * Min( RMSe ,RCSe ) ) ) ) )", "obj1": 0.9306569343065694, "obj2": 0.04774531790173242}, {"determining": "( Max( ( Max( Max( FirstVNF_RAM,MDR ),Max( ARS,FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_RAM_Server - BR ),Min( MDR ,FirstVNF_Mem ) ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( DDR ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( ( MLU + RRSe ) * Min( DS ,RCSe ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,( Const / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "Min( Min( MUC ,MUR ) ,Max( RMSe,( RRSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * ( Min( MRS ,FirstVNF_RAM_Server ) + DDR ) ) ,( ( MRS - FirstVNF_CPU_Server ) - Const ) )", "choosing": "( Min( Min( ( RRSe * MUC ) ,DS ) ,MUC ) - Min( ( MUR - DS ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) / ( MRS / ACS ) )", "choosing": "( ( ( MUC - Max( ( RMSe - ( RMSe / MUC ) ),( Max( DS,Min( Max( MUM,DS ) ,MLU ) ) - ( RRSe / ( Max( RCSe,RRSe ) + MUM ) ) ) ) ) * MLU ) + ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - RRS ) / ( AMS * Min( ( RRS / FirstVNF_Mem ) ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( MUM + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + FirstVNF_Mem ) ,( AMS - MRS ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / MLU ) ) - Max( Max( CS,( ( MUR / ( RMSe / MLU ) ) / MUR ) ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - BR ) - Max( Min( CRS ,CRS ),FirstVNF_CPU ) )", "choosing": "( ( MUC / Min( DS ,RCSe ) ) * Max( Max( MUC,MLU ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( Max( Max( ( FirstVNF_RAM_Server / ARS ),FirstVNF_Mem ),( ARS * ( FirstVNF_Mem_Server * CRS ) ) ) - FirstVNF_CPU_Server ) ) ,( FirstVNF_Mem * ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS / DS ) - ( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * Const ) ),PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( Min( Min( DS ,DS ) ,MUC ) - ( RCSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Max( FirstVNF_RAM_Server,ACS ),Min( PN ,RRS ) ) - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * Const ) )", "choosing": "( DS - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MUC ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Max( DDR,FirstVNF_Mem ) ) ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( ( ( CS * RCSe ) / ( CS - RMSe ) ) + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) ) / Max( DDR,FirstVNF_Mem ) )", "choosing": "( CS / ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( ( Min( ( FirstVNF_Mem_Server + CRS ) ,( FirstVNF_CPU - AMS ) ) - ( ( FirstVNF_RAM_Server * AMS ) / ( DDR - Const ) ) ) * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "( Min( MUC ,Max( RMSe,RRSe ) ) - Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Const ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - ( CRS - DDR ) ) - Const ) ,( FirstVNF_Mem * Const ) )", "choosing": "( ( Max( MLU,MUC ) / Max( RCSe,MUC ) ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - BR ) - Max( Min( CRS ,( Max( Max( FirstVNF_RAM,MDR ),Max( ARS,FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_RAM_Server - BR ),Min( MDR ,FirstVNF_Mem ) ) ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC / Min( DS ,RCSe ) ) * Max( Max( MUC,( Max( ( ( DS * DS ) * ( MUM + RRSe ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( ( ( RRSe / RRSe ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) * ( ARS / MDR ) ) - ( Min( BR ,FirstVNF_Mem ) * ( Const - AMS ) ) ) / ( ( FirstVNF_CPU - BR ) - Max( Min( CRS ,CRS ),FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS * DS ) * ( RRSe + RRSe ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - ( MLU * Max( MUC,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - BR ) - Max( Min( CRS ,CRS ),FirstVNF_CPU ) )", "choosing": "( ( MUC / Min( DS ,RCSe ) ) * Max( Max( MUC,MLU ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / Max( DDR,FirstVNF_CPU ) ) ) ) ,Min( ( RRS - FirstVNF_Mem_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( ( ( RMSe + RMSe ) - Min( RMSe ,MUM ) ) + DS ) ) ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_CPU + MRS ) ,( ( FirstVNF_Mem_Server - Max( Const,Const ) ) * FirstVNF_CPU_Server ) ) ,Min( Min( CRS ,DDR ) ,( RRS - FirstVNF_RAM_Server ) ) ) / ( ACS / AMS ) )", "choosing": "( ( ( DS + MUC ) / Max( RMSe,MUC ) ) / ( RCSe * ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) + Min( Min( ( RRS - FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM ,DDR ) ) ,( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( ( DS + MUC ) / ( DS * CS ) ) / ( ( MLU - RMSe ) - ( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( RRS * ACS ) ) ,( ( ARS + ARS ) * ( RRS - FirstVNF_Mem ) ) ) / MRS )", "choosing": "( ( ( MUM / RMSe ) / ( MUC - MUR ) ) - Max( MUR,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( Min( MRS ,Max( ( FirstVNF_Mem / Max( Min( PN ,BR ),MRS ) ),ACS ) ) - AMS ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,( CS - CS ) ) - ( ( DS + DS ) + Min( RRSe ,MUC ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MUM ) ) / ( ( DS / MUC ) + ( MUM - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - RRS ) / ( AMS * Min( ( RRS / FirstVNF_Mem ) ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( MUM + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - RRS ) / ( AMS * Min( ( RRS / FirstVNF_Mem ) ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( MUM + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU ) / ( RRS + MRS ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( ( CS / CS ) ,Min( DS ,RRSe ) ) ) * ( MLU * ( RMSe - ( DS + ( Min( ( Min( MLU ,RCSe ) / MUR ) ,Min( MUC ,Max( MLU,CS ) ) ) - ( Max( RCSe,CS ) * Min( RCSe ,DS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * ( ( RRS / FirstVNF_Mem ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "Max( Max( ( Min( ( DS + ( ( RRSe * MLU ) - ( Max( RCSe,CS ) * Min( RCSe ,DS ) ) ) ) ,MUC ) / MUR ),( DS + MUM ) ),( Max( RMSe,DS ) + ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * FirstVNF_RAM_Server ) )", "choosing": "( RRSe * ( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - ( AMS * PN ) ) ,( ( FirstVNF_CPU_Server + MRS ) * Const ) )", "choosing": "( Min( Min( DS ,DS ) ,( Max( Max( RMSe,Max( RMSe,RCSe ) ),MUR ) / ( Max( RMSe,MUR ) - Max( MUM,MLU ) ) ) ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * PN ) + Max( FirstVNF_RAM_Server,PN ) ) + ( DDR * FirstVNF_CPU ) )", "choosing": "( ( ( MLU + ( ( MUC + DS ) + Max( ( MUM + MUM ),RMSe ) ) ) + MUC ) / ( Max( RMSe,MUR ) - Max( MLU,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * Const ) ,( ( MRS - FirstVNF_CPU_Server ) - ( Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) + ( ( MDR * ARS ) / AMS ) ) ) )", "choosing": "( Min( ( DS - DS ) ,MUC ) - ( RCSe / Max( Max( DS,MLU ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * ( Min( MRS ,FirstVNF_RAM_Server ) + DDR ) ) ,( ( MRS - FirstVNF_CPU_Server ) - Const ) )", "choosing": "( Min( Min( ( RRSe * MUC ) ,DS ) ,MUC ) - Min( ( MUR - DS ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( AMS + ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ),AMS ) )", "choosing": "Max( Min( DS ,RMSe ),( Min( MUM ,MUM ) + ( ( ( RRSe * MUC ) - ( ( ( CS - MUC ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) ) / MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6825966138664078}, {"determining": "( MDR - ( Max( CRS,( ACS / ACS ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,( MUM / ( MLU - Max( Max( ( MUR / MUM ),DS ),MUC ) ) ) ) + ( RRSe - MUR ) ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "Min( ( MUM / MUR ) ,( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,PN ) + Max( ( AMS + ( Min( Max( PN,BR ) ,( ( Max( FirstVNF_Mem,BR ) * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ),AMS ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( MUC + MUR ) / ( MUC * ( ( RRSe + MUC ) - RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6825966138664078}, {"determining": "( ( FirstVNF_RAM / ( ( FirstVNF_Mem_Server / ARS ) / DDR ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( ( MLU + RCSe ) - Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) )", "obj1": 0.6131386861313869, "obj2": 0.4040167562959897}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( BR / Min( ( Min( ACS ,DDR ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * ( MUR - Max( DS,DS ) ) ) + ( Min( Min( DS ,( MUR + RMSe ) ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6551094890510949, "obj2": 0.32392394230469007}, {"determining": "( ( ( AMS / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM_Server ) - BR )", "choosing": "( Min( Max( MUM,Min( Min( RMSe ,MUR ) ,( Max( ( DS - MUC ),RRSe ) - Min( MUR ,CS ) ) ) ) ,Max( RMSe,RRSe ) ) - ( RCSe + ( DS - RMSe ) ) )", "obj1": 0.5766423357664233, "obj2": 0.4327476169319659}, {"determining": "( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - ( FirstVNF_RAM_Server - AMS ) )", "choosing": "( Min( Max( MUM,MUC ) ,Max( RMSe,RRSe ) ) - Min( RCSe ,DS ) )", "obj1": 0.7226277372262774, "obj2": 0.2661910269750265}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( Max( Const,FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe + RRSe ) * ( DS * DS ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) ) * ( ( RRSe + ( MUM / MUR ) ) / MUC ) )", "obj1": 0.5912408759124088, "obj2": 0.41112268529464463}, {"determining": "Min( ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,( ( Max( ARS,RRS ) + MDR ) + BR ) ) ) ,Max( ( ( MDR / Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - DS ) + DS ) / ( ( RRSe - ( ( MLU - MUR ) + Max( Max( ( ( DS + MLU ) - DS ),DS ),RCSe ) ) ) / ( MLU - MLU ) ) )", "obj1": 0.7682481751824818, "obj2": 0.22986624703787994}, {"determining": "Min( ( ( ARS + ARS ) + FirstVNF_RAM ) ,Max( ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + Min( DDR ,( ( ACS + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) ) + FirstVNF_RAM ) ),ARS ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) - Min( ( ( MUM + CS ) + ( DS / ( RRSe / MLU ) ) ) ,Max( MUC,( RRSe - MUM ) ) ) )", "obj1": 0.7846715328467153, "obj2": 0.16233098434928311}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.531021897810219, "obj2": 0.44318087947060775}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) )", "obj1": 0.7554744525547445, "obj2": 0.2545428452808627}, {"determining": "Min( ( FirstVNF_Mem * ( CRS - MDR ) ) ,( AMS * ( MRS / Max( FirstVNF_RAM,( PN - RRS ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( DS ,RRSe ) ,( CS - CS ) ) - ( ( DS + MUR ) + ( ( ( RRSe * MUC ) - MLU ) - MUC ) ) ) ,DS ) + MUC ) - ( RRSe / MUM ) )", "obj1": 0.656934306569343, "obj2": 0.31432581147812044}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) )", "obj1": 0.708029197080292, "obj2": 0.3044799304508335}, {"determining": "Max( Max( Min( ( FirstVNF_RAM + RRS ) ,( ACS * Max( ( ( RRS * FirstVNF_Mem ) + RRS ),RRS ) ) ),Min( FirstVNF_RAM ,AMS ) ),Min( ARS ,MDR ) )", "choosing": "Max( ( ( MUR + MUM ) - ( Max( CS,MUM ) / ( MUC / MUM ) ) ),( CS + ( CS - Max( MUM,RMSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6290704544587624}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( MUC + ( ( RRSe * MUC ) - ( ( ( CS - MUC ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) ) ) / ( RRSe * MUC ) ) )", "obj1": 0.4543795620437956, "obj2": 0.578850884394693}, {"determining": "Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( DDR - RRS ) ) ) ,Max( RRS,( ( Max( BR,( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MUM / ( MLU - Max( Max( ( MUR / MUM ),DS ),MUC ) ) ) ) + ( RRSe - MUR ) ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.9197080291970803, "obj2": 0.09727059845662642}, {"determining": "( MDR - ( Max( CRS,( ACS / ACS ) ) / Max( RRS,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MUC ) + ( CS - ( MLU + Min( MUM ,( Max( MLU,MUM ) - Min( MLU ,Min( ( RMSe - CS ) ,RCSe ) ) ) ) ) ) )", "obj1": 0.9616788321167883, "obj2": 0.04590256558358995}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / Max( ( Const + FirstVNF_Mem ),BR ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,DS ),( MUR - Max( ( RRSe * RRSe ),RMSe ) ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.7937956204379562, "obj2": 0.15282255955120136}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( ( ARS * DDR ) / ARS ) )", "choosing": "( ( ( Max( Max( RRSe,MUR ),RCSe ) / ( MUC + DS ) ) - MUR ) + ( MUC + DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( ( Min( Max( ( Min( Const ,FirstVNF_CPU_Server ) + MDR ),Min( Max( ARS,MRS ) ,FirstVNF_Mem ) ) ,Min( FirstVNF_Mem ,ACS ) ) * CRS ) + AMS ),AMS ) )", "choosing": "Max( Min( DS ,Max( Max( MUM,( MUM + MUR ) ),RRSe ) ),Min( MUC ,MUC ) )", "obj1": 0.41058394160583944, "obj2": 0.6800450654393029}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - RMSe ) )", "obj1": 0.9215328467153284, "obj2": 0.08430878421680844}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( AMS * PN ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - ( ARS + MDR ) ) ) )", "choosing": "( ( RCSe + MUM ) / ( Max( MUM,MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.5091240875912408, "obj2": 0.45963416357760417}, {"determining": "( ( DDR - FirstVNF_CPU ) / ( RRS + MRS ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( ( CS / CS ) ,Min( DS ,RRSe ) ) ) * ( MLU * ( RMSe - ( DS + ( Min( ( Min( MLU ,RCSe ) / MUR ) ,Min( MUC ,Max( MLU,CS ) ) ) - ( Max( RCSe,CS ) * Min( RCSe ,DS ) ) ) ) ) ) )", "obj1": 0.8777372262773723, "obj2": 0.1066948732386154}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( DDR - FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe * ( MLU * ( RMSe - MUM ) ) ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.8540145985401459, "obj2": 0.1083839535580458}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,Max( ( CRS + FirstVNF_CPU_Server ),( ( FirstVNF_Mem + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( ( DS - RMSe ) + ( ( MUR * MLU ) + ( MLU * MUM ) ) )", "obj1": 0.8175182481751825, "obj2": 0.1360222179485002}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( MUM + ( ( MUR * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.9288321167883211, "obj2": 0.052725553340230824}, {"determining": "Max( Min( RRS ,ARS ),Min( Min( Min( ( BR - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( ARS - FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) ,AMS ) ,CRS ) )", "choosing": "( ( RMSe / MUM ) * ( Max( MUC,RRSe ) / ( MUC + DS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6290704544587624}, {"determining": "( ( Max( Max( FirstVNF_RAM,FirstVNF_RAM ),( ( ( DDR + PN ) * ACS ) - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,PN ) ) ) / Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ),FirstVNF_RAM ) )", "choosing": "Max( ( ( Max( MUM,Min( ( MUR / ( MUR - ( RRSe + MUR ) ) ) ,MLU ) ) - MLU ) / MLU ),Max( Min( Max( MUC,MUM ) ,( MLU * RRSe ) ),( ( MUM * MUM ) * ( MLU * CS ) ) ) )", "obj1": 0.9781021897810219, "obj2": 0.024248387338084706}, {"determining": "( BR - ( ( BR / BR ) * ( FirstVNF_Mem - ( FirstVNF_Mem * Const ) ) ) )", "choosing": "( Min( Max( MUM,( Min( RMSe ,MUR ) - Min( ( RCSe + ( Max( CS,RRSe ) + CS ) ) ,Max( ( ( DS / RCSe ) + MUR ),RRSe ) ) ) ) ,Max( RMSe,RRSe ) ) - Min( RCSe ,DS ) )", "obj1": 0.4562043795620438, "obj2": 0.5402582739804751}, {"determining": "( ( MRS - FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + Min( Min( DS ,DS ) ,MUC ) )", "obj1": 0.4927007299270073, "obj2": 0.47535072357693003}, {"determining": "( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU * MUR ) - ( RCSe / RRSe ) )", "obj1": 0.718978102189781, "obj2": 0.2910535874639446}, {"determining": "Min( ( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Max( Max( PN,RRS ),AMS ) ) ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MUM ) - ( MUC * Max( RRSe,MUR ) ) )", "obj1": 0.9306569343065694, "obj2": 0.04774531790173242}, {"determining": "( ( DDR - FirstVNF_CPU ) / ( AMS * FirstVNF_RAM_Server ) )", "choosing": "( RRSe * ( MLU * ( ( DS + ( Min( ( Min( MLU ,RCSe ) / MUR ) ,Min( MUC ,Max( MLU,CS ) ) ) - ( Max( RCSe,CS ) * Min( RCSe ,DS ) ) ) ) - MUM ) ) )", "obj1": 0.8777372262773723, "obj2": 0.1066948732386154}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.531021897810219, "obj2": 0.44318087947060775}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR - RRS ) ,MRS ) ) ) - Min( ARS ,BR ) ) )", "choosing": "( ( Min( MUC ,Max( Max( Min( ( MUC / DS ) ,Max( ( MLU / MLU ),MUR ) ),RRSe ),DS ) ) * MLU ) + ( MUC - MUR ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( ( MUM + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( Max( FirstVNF_Mem,MDR ) * ACS ) ) )", "choosing": "( ( Max( RCSe,RRSe ) + ( RRSe - MUR ) ) + CS )", "obj1": 0.8284671532846716, "obj2": 0.12518615417910112}, {"determining": "Min( Max( CRS,FirstVNF_CPU_Server ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,Max( DS,DS ) ) ,MUM ) - ( RCSe / MUM ) )", "obj1": 0.4726277372262774, "obj2": 0.5029821328881423}, {"determining": "Min( ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,( ( Max( ARS,RRS ) + MDR ) + BR ) ) ) ,Max( ( ( MDR / Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - DS ) + DS ) / ( ( RRSe - ( ( MLU - MUR ) + Max( Max( ( ( DS + MLU ) - DS ),DS ),RCSe ) ) ) / ( MLU - MLU ) ) )", "obj1": 0.7682481751824818, "obj2": 0.22986624703787994}, {"determining": "( ( BR * FirstVNF_CPU ) - ( CRS * Max( CRS,BR ) ) )", "choosing": "Min( Min( RMSe ,Min( Min( RCSe ,Min( ( RRSe * Max( ( RCSe * CS ),CS ) ) ,MUM ) ) ,Max( MLU,MUR ) ) ) ,Max( MUC,RRSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5790951503699697}, {"determining": "( ( ( ( PN / FirstVNF_RAM ) * ( ARS / MDR ) ) - ( Min( BR ,FirstVNF_Mem ) * ( ACS - AMS ) ) ) / ( FirstVNF_RAM - Max( Min( CRS ,CRS ),FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS * DS ) * ( MUM + RRSe ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( Max( MUC,DS ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.7116788321167883, "obj2": 0.2951296451048488}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( ( MRS - ( CRS - DDR ) ) * ( ACS - AMS ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( RRSe - MUR ) ) + ( Max( ( ( ( ( Max( MLU,MUC ) / Max( RCSe,MUC ) ) - ( RCSe / MUM ) ) / RRSe ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) * ( RCSe - MUM ) ) )", "obj1": 0.8412408759124088, "obj2": 0.11275789670857066}, {"determining": "( ( FirstVNF_RAM - RRS ) / ( AMS * Min( ( RRS / FirstVNF_Mem ) ,Max( FirstVNF_RAM,( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( ( ( ( MUM + ( ( MUC - Max( DS,DS ) ) * MLU ) ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5018248175182481, "obj2": 0.473151214876786}, {"determining": "( ( RRS * MDR ) - ( CRS + RRS ) )", "choosing": "Min( ( ( Min( RMSe ,Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( MLU ,( Max( MUM,RRSe ) / ( MLU * RMSe ) ) ) ) ) * MUR ) + RRSe ) ,Max( CS,RRSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) + Max( ( AMS + ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ),AMS ) )", "choosing": "Max( Min( DS ,RMSe ),( Min( MUM ,MUM ) + ( ( ( RRSe * MUC ) - ( ( ( CS - MUC ) + Min( ( MUC + MLU ) ,( RCSe - DS ) ) ) + RMSe ) ) / MLU ) ) )", "obj1": 0.458029197080292, "obj2": 0.5385702838416839}, {"determining": "Min( ( ACS - ACS ) ,Max( RRS,( ( BR * FirstVNF_RAM_Server ) * Max( Max( FirstVNF_RAM_Server,ACS ),Min( PN ,RRS ) ) ) ) )", "choosing": "( Max( MUR,MLU ) / ( MLU * ( MLU - MLU ) ) )", "obj1": 0.7846715328467153, "obj2": 0.16233098434928311}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( ( MUC + MLU ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.009272676464718405}, {"determining": "( MDR - ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( CS - MUR ) + ( RMSe / MUM ) )", "obj1": 0.9616788321167883, "obj2": 0.04590256558358995}, {"determining": "( ( RRS * MDR ) - ( CRS + RRS ) )", "choosing": "Min( ( ( Min( RMSe ,Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( MLU ,( Max( MUM,RRSe ) / ( MLU * RMSe ) ) ) ) ) * MUR ) + RRSe ) ,Max( CS,RRSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) )", "obj1": 0.7664233576642335, "obj2": 0.2399621774301859}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( MDR - FirstVNF_RAM_Server ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( MDR / FirstVNF_Mem ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( Min( ( MUM + MUM ) ,Max( MUM,RCSe ) ) - Max( DS,DS ) ) * MLU ) + ( RMSe / MUM ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( AMS * PN ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( DS - DS ) / ( Max( MUM,MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5826215610325954}, {"determining": "( ( ACS + AMS ) + Max( ( AMS + ( BR * ( Min( ( FirstVNF_Mem + ( FirstVNF_RAM / DDR ) ) ,BR ) * ( BR + FirstVNF_RAM ) ) ) ),AMS ) )", "choosing": "Max( Min( RCSe ,DS ),( MUR / Max( ( Max( ( ( MUC + MLU ) * ( ( RCSe / MUC ) + RMSe ) ),( ( ( MLU - MUM ) + MUM ) - CS ) ) + ( DS + RRSe ) ),RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( DS ,RMSe ),( Min( MUM ,MUM ) + ( ( ( RRSe * MUC ) - ( ( ( CS - MUC ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) ) / MLU ) ) )", "obj1": 0.7627737226277372, "obj2": 0.24391853779806472}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( ( ( MDR - Const ) * ( FirstVNF_RAM_Server - BR ) ),Max( ( AMS / ARS ),FirstVNF_Mem ) ) )", "choosing": "( ( RMSe / ( RRSe + Max( Min( MUR ,( Min( RRSe ,Min( RCSe ,MUC ) ) - ( CS / ( RRSe * DS ) ) ) ),( ( ( ( MUC + MUR ) / Min( RRSe ,MUM ) ) * ( MUC + ( RMSe - RMSe ) ) ) * RMSe ) ) ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.8394160583941606, "obj2": 0.11459897734962553}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MLU,MUC ) / Max( RCSe,MUC ) ) - ( RCSe / MUM ) )", "obj1": 0.708029197080292, "obj2": 0.3044799304508335}, {"determining": "( ( BR + FirstVNF_RAM_Server ) - ( PN * MRS ) )", "choosing": "( Max( RMSe,( DS / RRSe ) ) + Max( MLU,MUC ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( ( ( ACS / BR ) / ( ( ( ACS * ( ARS - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ),( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( MUM / MUM ) / ( ( MLU + RRSe ) / ( Min( Max( MUM,RCSe ) ,( DS - ( CS + ( MUC - RCSe ) ) ) ) - MLU ) ) )", "obj1": 0.8394160583941606, "obj2": 0.11459897734962553}, {"determining": "( MDR - ( MDR - ( Max( CRS,BR ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - MUR ) + ( RMSe / ( ( CS - RCSe ) + ( MUM / CS ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.46701038042103205}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) )", "obj1": 0.7627737226277372, "obj2": 0.24391853779806472}, {"determining": "Min( ( FirstVNF_Mem_Server - Const ) ,Max( AMS,BR ) )", "choosing": "( Min( Min( RRSe ,Min( CS ,RMSe ) ) ,MUC ) - ( RRSe / MUM ) )", "obj1": 0.656934306569343, "obj2": 0.31432581147812044}, {"determining": "( ( ( PN / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) ) ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * Min( MUC ,Max( RMSe,RRSe ) ) )", "obj1": 0.9799270072992701, "obj2": 0.021087978051892914}, {"determining": "Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( DDR - RRS ) ) ) ,Max( RRS,( ( Max( BR,( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS - RCSe ) + Max( MLU,MUC ) )", "obj1": 0.9197080291970803, "obj2": 0.09727059845662642}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) + Min( ( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,Max( FirstVNF_RAM_Server,ACS ) ) ,( CRS * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( ( DS + MUC ) / ( DS * ( DS - ( RCSe / MUM ) ) ) ) / ( ( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) ) - ( MLU + MLU ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( ( ( RRSe / RRSe ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.13293429082593128}, {"determining": "Min( ( ( Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - Const ) * ( BR - FirstVNF_RAM ) ) ) * ( CRS + ACS ) ) - ACS ) ,Min( Min( FirstVNF_CPU ,Max( FirstVNF_Mem_Server,MRS ) ) ,( ( ARS + FirstVNF_Mem ) - FirstVNF_Mem ) ) )", "choosing": "( ( DS - RMSe ) + ( Max( ( MUM + ( RMSe / ( RMSe * ( Min( RCSe ,MUC ) * MLU ) ) ) ),( RCSe * RCSe ) ) + ( RCSe - MUM ) ) )", "obj1": 0.7883211678832117, "obj2": 0.158387662471853}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,( RRS - ( Const - RRS ) ) )", "choosing": "( ( Max( Min( Max( ( MLU - Max( RRSe,MUM ) ),RCSe ) ,MUM ),( MLU / ( RRSe - MLU ) ) ) + ( RRSe - MUR ) ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.822992700729927, "obj2": 0.13082418364583126}, {"determining": "Min( ( ( Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - Const ) * ( BR - FirstVNF_RAM ) ) ) * ( CRS + ACS ) ) - ACS ) ,Min( Min( FirstVNF_CPU ,Max( FirstVNF_Mem_Server,MRS ) ) ,( ( ARS + FirstVNF_Mem ) - FirstVNF_Mem ) ) )", "choosing": "( ( DS - RMSe ) + ( Max( ( MUM + ( RMSe / ( RMSe * ( Min( RCSe ,MUC ) * MLU ) ) ) ),( RCSe * RCSe ) ) + ( RCSe - MUM ) ) )", "obj1": 0.7883211678832117, "obj2": 0.158387662471853}, {"determining": "Max( Min( RRS ,ARS ),Min( Min( Min( ( BR - RRS ) ,FirstVNF_CPU ) ,AMS ) ,CRS ) )", "choosing": "( ( RMSe / MUM ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46795882204171046}, {"determining": "( Max( ( MDR - FirstVNF_RAM ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( DDR ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS / MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - ( ( ( RRSe + RCSe ) + DS ) - ( MUM / MUC ) ) ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( Max( MUR,RCSe ) * ( MLU + RRSe ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( Max( FirstVNF_RAM_Server,( ( RRS * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( Min( DS ,DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( RRSe ,( MUR / ( MUC + RMSe ) ) ) - ( RMSe + MLU ) ) )", "obj1": 0.9799270072992701, "obj2": 0.021087978051892914}, {"determining": "Min( ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,( ( Max( ARS,RRS ) + MDR ) + BR ) ) ) ,Max( ( ( MDR / Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - DS ) + DS ) / ( ( RRSe - ( ( MLU - MUR ) + Max( Max( ( ( DS + MLU ) - DS ),DS ),RCSe ) ) ) / ( MLU - MLU ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498878}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( ( FirstVNF_CPU - BR ) - Max( Min( CRS ,CRS ),FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUC / Min( DS ,RCSe ) ) * Max( Max( MUC,MLU ),MUR ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( ( ( RRSe / RRSe ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498878}, {"determining": "Max( Max( ( FirstVNF_CPU + MDR ),Min( FirstVNF_RAM ,AMS ) ),Min( ARS ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( CS + ( CS - Max( MUM,RMSe ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46795882204171046}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( AMS + ( Min( Max( ARS,BR ) ,RRS ) * DDR ) ),AMS ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( ( ( MUC - Max( DS,DS ) ) * MLU ) + ( RMSe / MUM ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6800450654393029}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * ( ( ( MRS - DDR ) / FirstVNF_CPU ) - Const ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( Min( DS ,DS ) - ( ( Min( RCSe ,Max( ( DS + MLU ),( MUR + DS ) ) ) / RCSe ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.1601773588553094}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( ( ( FirstVNF_CPU + MDR ) * Min( FirstVNF_RAM ,AMS ) ),( FirstVNF_CPU_Server / Const ) ) )", "choosing": "( Max( ( ( DS * DS ) * ( MUM + RRSe ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( ( ( RRSe / RRSe ) - ( CS + ( CS - ( MUC - RRSe ) ) ) ),( ( RCSe - DS ) / Max( RMSe,RMSe ) ) ) )", "obj1": 0.8193430656934306, "obj2": 0.1349814972057488}, {"determining": "Min( ( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Max( Max( PN,RRS ),AMS ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe + ( MUC * Max( RRSe,MUR ) ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.04774531790173242}, {"determining": "Min( ( ( RRS + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.1601773588553094}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( ( BR + ( Max( MRS,ACS ) - ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) * MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * ( ( MUM - RRSe ) - RCSe ) ) + ( ( MUR * MLU ) * Max( RCSe,MUM ) ) )", "obj1": 0.8193430656934306, "obj2": 0.1349814972057488}, {"determining": "( ( Min( ( ( ACS - ( ( ( MDR - ACS ) / Const ) / FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ,RRS ) - AMS ) * ( ( Min( DDR ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( Min( MLU ,Min( ( MUC / RCSe ) ,Max( MUR,RMSe ) ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( BR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU + ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + ( DS + RMSe ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) - ( Const - Const ) )", "choosing": "Min( ( MUM + MUR ) ,( ( MLU - Min( CS ,MUR ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,( Const / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "Min( Min( MUC ,MUR ) ,Max( RMSe,( RRSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * ( Min( MRS ,FirstVNF_RAM_Server ) + DDR ) ) ,( ( MRS - FirstVNF_CPU_Server ) - Const ) )", "choosing": "( Min( Min( ( RRSe * MUC ) ,DS ) ,MUC ) - Min( ( MUR - DS ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) / ( MRS / ACS ) )", "choosing": "( ( ( MUC - Max( ( RMSe - ( RMSe / MUC ) ),( Max( DS,Min( Max( MUM,DS ) ,MLU ) ) - ( RRSe / ( Max( RCSe,RRSe ) + MUM ) ) ) ) ) * MLU ) + ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - RRS ) / ( AMS * Min( ( RRS / FirstVNF_Mem ) ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( MUM + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) + FirstVNF_Mem ) ,( AMS - MRS ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / MLU ) ) - Max( Max( CS,( ( MUR / ( RMSe / MLU ) ) / MUR ) ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - BR ) - Max( Min( CRS ,CRS ),FirstVNF_CPU ) )", "choosing": "( ( MUC / Min( DS ,RCSe ) ) * Max( Max( MUC,MLU ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( Max( Max( ( FirstVNF_RAM_Server / ARS ),FirstVNF_Mem ),( ARS * ( FirstVNF_Mem_Server * CRS ) ) ) - FirstVNF_CPU_Server ) ) ,( FirstVNF_Mem * ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS / DS ) - ( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * Const ) ),PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( Min( Min( DS ,DS ) ,MUC ) - ( RCSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( AMS + ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ),AMS ) )", "choosing": "Max( Min( DS ,RMSe ),( Min( MUM ,MUM ) + ( ( ( RRSe * MUC ) - ( ( ( CS - MUC ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) ) / MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6825966138664078}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR - ( Max( CRS,( ACS / ACS ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,( MUM / ( MLU - Max( Max( ( MUR / MUM ),DS ),MUC ) ) ) ) + ( RRSe - MUR ) ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( AMS + ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ),AMS ) )", "choosing": "Min( ( MUM / MUR ) ,( RMSe * RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6825966138664078}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6368613138686131, "obj2": 0.349156185105555}, {"determining": "Min( ( ( RRS + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.3859440375351636}, {"determining": "( ( FirstVNF_RAM - RRS ) / ( AMS * Min( ( RRS / FirstVNF_Mem ) ,Max( FirstVNF_RAM,( Max( CRS,( ACS / ACS ) ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUM + ( ( MUC - Max( DS,DS ) ) * MLU ) ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * ( Max( Max( ( MUR / MUM ),DS ),MUC ) * ( RMSe - MUM ) ) )", "obj1": 0.5656934306569343, "obj2": 0.4153217172176912}, {"determining": "Min( ( ACS - ARS ) ,Max( RRS,( ( ( MRS - ( CRS - DDR ) ) * ( ACS - AMS ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( ( RMSe - MUM ) - MUR ) ) + ( Max( ( ( ( ( Max( MLU,MUC ) / Max( RCSe,MUC ) ) - ( RCSe / MUM ) ) / RRSe ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) * ( RCSe - MUM ) ) )", "obj1": 0.7718978102189781, "obj2": 0.2244852378401741}, {"determining": "( ( MRS - ( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - ( FirstVNF_RAM_Server - AMS ) ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + Min( Max( MUM,MUC ) ,Max( RMSe,RRSe ) ) )", "obj1": 0.7390510948905109, "obj2": 0.2350741753402244}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - Max( DS,DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6678832116788321, "obj2": 0.30971618048339705}, {"determining": "( MDR - ( Max( CRS,( ACS / ACS ) ) / Max( RRS,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MUC ) + ( CS - ( MLU + Min( MUM ,( Max( MLU,MUM ) - Min( MLU ,Min( ( RMSe - CS ) ,RCSe ) ) ) ) ) ) )", "obj1": 0.9616788321167883, "obj2": 0.04590256558358995}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( Max( ARS,BR ) - ( ARS * ( Const / Min( ( ARS * ( BR / DDR ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) )", "choosing": "( ( ( MUC - ( ( CS + Min( ( ( MUC + CS ) - RCSe ) ,MUC ) ) + ( MUM / RCSe ) ) ) * MLU ) + ( DS / MUR ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "Min( ( ACS - ACS ) ,Max( RRS,( ( BR * FirstVNF_RAM_Server ) * Max( Max( FirstVNF_RAM_Server,ACS ),Min( PN ,RRS ) ) ) ) )", "choosing": "( Max( MUR,MLU ) / ( MLU * ( MLU - MLU ) ) )", "obj1": 0.7846715328467153, "obj2": 0.16233098434928311}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( AMS,( AMS + ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) ) ) )", "choosing": "Max( Min( DS ,Max( ( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) ),CS ) ),( Min( MUM ,MUM ) + ( ( CS - ( ( ( CS - MUC ) + ( DS + Max( MUM,MUR ) ) ) + RMSe ) ) / MLU ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5632639560601842}, {"determining": "( ( ( ( PN / FirstVNF_RAM ) * ( ARS / MDR ) ) - ( Min( BR ,FirstVNF_Mem ) * ( ACS - AMS ) ) ) / ( FirstVNF_RAM - Max( Min( CRS ,CRS ),FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS * DS ) * ( MUM + RRSe ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( Max( MUC,DS ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2987117577333253}, {"determining": "Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( DDR - RRS ) ) ) ,Max( RRS,( ( Max( BR,( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MUM / ( MLU - Max( Max( ( MUR / MUM ),DS ),MUC ) ) ) ) + ( RRSe - MUR ) ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.9197080291970803, "obj2": 0.09727059845662642}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( RRS,AMS ) - DDR ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( MUR + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.619833627135431}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( BR / Min( ( Min( ACS ,DDR ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * ( MUR - Max( DS,DS ) ) ) + ( Min( Min( DS ,( MUR + RMSe ) ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6551094890510949, "obj2": 0.32392394230469007}, {"determining": "Max( ( Min( FirstVNF_CPU_Server ,MRS ) / RRS ),Min( ARS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RCSe / Max( ( Max( ( ( MUC + MLU ) * ( ( RCSe / MUR ) + RMSe ) ),( Max( MLU,RRSe ) - CS ) ) + ( DS + RRSe ) ),MUM ) ),Min( RCSe ,DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6290704544587624}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( ( Min( Max( ( Min( Const ,FirstVNF_CPU_Server ) + MDR ),Min( Max( ARS,MRS ) ,FirstVNF_Mem ) ) ,Min( FirstVNF_Mem ,ACS ) ) * CRS ) + AMS ),AMS ) )", "choosing": "Max( Min( DS ,Max( Max( MUM,( MUM + MUR ) ),RRSe ) ),Min( MUC ,MUC ) )", "obj1": 0.41058394160583944, "obj2": 0.6800450654393029}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - RMSe ) )", "obj1": 0.9215328467153284, "obj2": 0.08430878421680844}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( RMSe ,MUR ) - ( RRSe / MUM ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( BR - ( ( BR / BR ) * ( FirstVNF_Mem - ( FirstVNF_Mem * Const ) ) ) )", "choosing": "( Min( Max( MUM,( Min( RMSe ,MUR ) - Min( ( RCSe + ( Max( CS,RRSe ) + CS ) ) ,Max( ( ( DS / RCSe ) + MUR ),RRSe ) ) ) ) ,Max( RMSe,RRSe ) ) - Min( RCSe ,DS ) )", "obj1": 0.4562043795620438, "obj2": 0.5402582739804751}, {"determining": "( ( DDR - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( ( CS / CS ) ,Min( DS ,RRSe ) ) ) * ( MLU * ( RMSe - ( DS + ( Min( ( Min( MLU ,RCSe ) / MUR ) ,Min( MUC ,Max( MLU,CS ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8777372262773723, "obj2": 0.1066948732386154}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( DDR - FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe * ( MLU * ( RMSe - MUM ) ) ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.8540145985401459, "obj2": 0.1083839535580458}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( MUM + ( ( MUR * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.9288321167883211, "obj2": 0.052725553340230824}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - MUR ) + ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( AMS * PN ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS - RCSe ) + Max( MLU,MUC ) ) / ( Max( MUM,MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.458029197080292, "obj2": 0.5236459084677885}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.531021897810219, "obj2": 0.44318087947060775}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / Max( ( Const + FirstVNF_Mem_Server ),BR ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,DS ),( MUR - Max( ( RRSe * RRSe ),( MUR * MLU ) ) ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.7937956204379562, "obj2": 0.1526445694971716}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( Max( ( FirstVNF_Mem * ( DDR / RRS ) ),AMS ) * ( ACS - AMS ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe - ( RCSe * ( MUR / MUC ) ) ),RRSe ) + ( ( RCSe + CS ) + ( RRSe - MUR ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - ( FirstVNF_RAM_Server - AMS ) )", "choosing": "( ( MLU + RCSe ) - Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) )", "obj1": 0.7226277372262774, "obj2": 0.2661910269750265}, {"determining": "Min( ( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Max( Max( PN,RRS ),AMS ) ) ) ,Max( Max( Min( MRS ,ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( ( Max( ( AMS * DDR ),MDR ) * Const ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) ,DS ) ,MUC ) - ( ( ( MUC + MUC ) + RMSe ) / MUM ) )", "obj1": 0.9306569343065694, "obj2": 0.04774531790173242}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( Max( Const,FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe + RRSe ) * ( DS * DS ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) ) * ( ( RRSe + ( MUM / MUR ) ) / MUC ) )", "obj1": 0.5912408759124088, "obj2": 0.41112268529464463}, {"determining": "( ( FirstVNF_CPU_Server * ( BR + ( FirstVNF_CPU - Max( FirstVNF_CPU,DDR ) ) ) ) - Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / ( RRSe * ( Min( RCSe ,RMSe ) * MLU ) ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) )", "obj1": 0.7664233576642335, "obj2": 0.2339305134300253}, {"determining": "( ( DDR - FirstVNF_CPU ) / ( RRS + MRS ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( ( CS / CS ) ,Min( DS ,RRSe ) ) ) * ( MLU * ( RMSe - ( DS + ( Min( ( Min( MLU ,RCSe ) / MUR ) ,Min( MUC ,Max( MLU,CS ) ) ) - ( Max( RCSe,CS ) * Min( RCSe ,DS ) ) ) ) ) ) )", "obj1": 0.8777372262773723, "obj2": 0.1066948732386154}, {"determining": "( ( BR * FirstVNF_CPU ) - ( CRS * Max( CRS,BR ) ) )", "choosing": "Min( Min( RMSe ,Min( Min( RCSe ,Min( ( RRSe * Max( ( RCSe * CS ),CS ) ) ,MUM ) ) ,Max( MLU,MUR ) ) ) ,Max( MUC,RRSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5790951503699697}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - BR ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.5948905109489051, "obj2": 0.4097310065556673}, {"determining": "( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - ( FirstVNF_RAM_Server - AMS ) )", "choosing": "( Min( Max( MUM,MUC ) ,Max( RMSe,RRSe ) ) - Min( RCSe ,DS ) )", "obj1": 0.7226277372262774, "obj2": 0.2661910269750265}, {"determining": "Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_RAM ,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + Max( RRSe,( MLU + MLU ) ) ) / ( MUC + DS ) ),( ( ( ( CS - MUC ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5255474452554745, "obj2": 0.4480796146550668}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.531021897810219, "obj2": 0.44318087947060775}, {"determining": "( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU * MUR ) - ( RCSe / RRSe ) )", "obj1": 0.718978102189781, "obj2": 0.2910535874639446}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( MDR - FirstVNF_RAM_Server ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( MDR / FirstVNF_Mem ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( Min( ( MUM + MUM ) ,Max( MUM,RCSe ) ) - Max( DS,DS ) ) * MLU ) + ( RMSe / MUM ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Min( MRS ,CRS ) ) ) ) - Max( ARS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,( RMSe - MUM ) ) )", "obj1": 0.5109489051094891, "obj2": 0.4544155197323172}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( ( MUM + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( RRSe + ( MUC * Max( RRSe,MUR ) ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.656934306569343, "obj2": 0.31432581147812044}, {"determining": "( ( ( ARS / FirstVNF_Mem_Server ) / ( AMS * FirstVNF_RAM_Server ) ) - ( ARS - ARS ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - MUR ) + Min( ( Min( MLU ,RCSe ) - MUR ) ,Min( MUC ,( CS - ( ( MLU * Max( Min( MUC ,MUR ),MLU ) ) + MUM ) ) ) ) )", "obj1": 0.9890510948905109, "obj2": 0.011376240161121194}, {"determining": "Min( Max( CRS,FirstVNF_CPU_Server ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,Max( DS,DS ) ) ,MUM ) - ( RCSe / MUM ) )", "obj1": 0.4726277372262774, "obj2": 0.5029821328881423}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MRS ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( CS - RCSe ) + Max( MLU,MUC ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( MDR - ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( CS - MUR ) + ( RMSe / MUM ) )", "obj1": 0.9616788321167883, "obj2": 0.04590256558358995}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR - RRS ) ,MRS ) ) ) - Min( ARS ,BR ) ) )", "choosing": "( ( Min( MUC ,Max( Max( Min( ( MUC / DS ) ,Max( ( MLU / MLU ),MUR ) ),RRSe ),DS ) ) * MLU ) + ( MUC - MUR ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( AMS * PN ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( DS - DS ) / ( Max( MUM,MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5826215610325954}, {"determining": "Min( ( ( ARS + ARS ) + FirstVNF_RAM ) ,Max( ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + Min( DDR ,( ( ACS + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) ) + FirstVNF_RAM ) ),ARS ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) - Min( ( ( MUM + CS ) + ( DS / ( RRSe / MLU ) ) ) ,Max( MUC,( RRSe - MUM ) ) ) )", "obj1": 0.7846715328467153, "obj2": 0.16233098434928311}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( AMS * PN ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - ( ARS + MDR ) ) ) )", "choosing": "( ( RCSe + MUM ) / ( Max( MUM,MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.5091240875912408, "obj2": 0.45963416357760417}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,( PN * RRS ) )", "choosing": "( ( ( MUC - MUC ) * ( ( DS - Min( ( RCSe * RMSe ) ,MUM ) ) * ( MLU - MUR ) ) ) + Min( Min( DS ,DS ) ,MUC ) )", "obj1": 0.8412408759124088, "obj2": 0.11275789670857066}, {"determining": "( ( ( ( PN / FirstVNF_RAM ) * ( ARS / MDR ) ) - ( Min( BR ,FirstVNF_Mem ) * ( ACS - AMS ) ) ) / ( FirstVNF_RAM - Max( Min( CRS ,CRS ),FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS * DS ) * ( MUM + RRSe ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( Max( MUC,DS ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.7116788321167883, "obj2": 0.2951296451048488}, {"determining": "Max( Min( RRS ,ARS ),Min( Min( Min( ( BR - RRS ) ,FirstVNF_CPU ) ,AMS ) ,CRS ) )", "choosing": "( ( RMSe / MUM ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46795882204171046}, {"determining": "( ( BR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU + ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + ( DS + RMSe ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( MDR - ( MDR - ( Max( CRS,BR ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - MUR ) + ( RMSe / ( ( CS - RCSe ) + ( MUM / CS ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.46701038042103205}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( ( MUC / ( RRSe * MUC ) ) ,Max( DS,DS ) ) ,MUM ) - ( RCSe / MUM ) )", "obj1": 0.4726277372262774, "obj2": 0.5029821328881423}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( ( BR + ( Max( MRS,ACS ) - ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) * MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * ( ( MUM - RRSe ) - RCSe ) ) + ( ( MUR * MLU ) * Max( RCSe,MUM ) ) )", "obj1": 0.791970802919708, "obj2": 0.15492480078757656}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( RMSe / MUM ) * Max( MLU,Min( RRSe ,( ( ( MUC - Max( DS,DS ) ) * MLU ) + ( RMSe / MUM ) ) ) ) )", "obj1": 0.8357664233576643, "obj2": 0.1215080587204132}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12862933043563868}, {"determining": "Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( DDR - RRS ) ) ) ,Max( RRS,( ( Max( BR,( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MUM / ( MLU - Max( Max( ( MUR / MUM ),DS ),MUC ) ) ) ) + ( RRSe - MUR ) ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.9197080291970803, "obj2": 0.09727059845662642}, {"determining": "Max( Max( Min( ( FirstVNF_RAM + RRS ) ,( ACS * Max( ( ( RRS * FirstVNF_Mem ) + RRS ),RRS ) ) ),Min( FirstVNF_RAM ,AMS ) ),Min( ARS ,MDR ) )", "choosing": "Max( ( ( MUR + MUM ) - ( Max( CS,MUM ) / ( MUC / MUM ) ) ),( CS + ( CS - Max( MUM,RMSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6290704544587624}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * Max( Max( FirstVNF_RAM_Server,Max( ( ( FirstVNF_Mem_Server / ARS ) / DDR ),BR ) ),Min( PN ,Const ) ) ) ) )", "choosing": "( Min( Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) ,CS ) - ( RCSe / ( CS / RRSe ) ) )", "obj1": 0.8375912408759124, "obj2": 0.11659504075491585}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( Max( FirstVNF_Mem,MDR ) * ACS ) ) )", "choosing": "( ( Max( RCSe,RRSe ) + ( RRSe - MUR ) ) + CS )", "obj1": 0.8284671532846716, "obj2": 0.12518615417910112}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( ( ARS * DDR ) / ARS ) )", "choosing": "( ( ( Max( Max( RRSe,MUR ),RCSe ) / ( MUC + DS ) ) - MUR ) + ( MUC + DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( ( MUC + MLU ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.009272676464718405}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( FirstVNF_RAM_Server,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) * MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MUC ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.8211678832116789, "obj2": 0.13292666616527773}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( ( MLU + RRSe ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.718978102189781, "obj2": 0.2910535874639446}, {"determining": "Min( ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,( ( Max( ARS,RRS ) + MDR ) + BR ) ) ) ,Max( ( ( MDR / Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - DS ) + DS ) / ( ( RRSe - ( ( MLU - MUR ) + Max( Max( ( ( DS + MLU ) - DS ),DS ),RCSe ) ) ) / ( MLU - MLU ) ) )", "obj1": 0.7682481751824818, "obj2": 0.22986624703787994}, {"determining": "( ( ( ( PN / BR ) * ( ARS / MDR ) ) - ( Min( BR ,FirstVNF_Mem ) * ( ACS - AMS ) ) ) / ( FirstVNF_RAM - Max( Min( CRS ,CRS ),FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS * DS ) * ( MUM + RRSe ) ),RMSe ) - Max( Max( MUC,DS ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.7098540145985401, "obj2": 0.2965169045231329}, {"determining": "Min( ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,( ( Max( ARS,RRS ) + MDR ) + BR ) ) ) ,Max( ( ( MDR / Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - DS ) + DS ) / ( ( RRSe - ( ( MLU - MUR ) + Max( Max( ( ( DS + MLU ) - DS ),DS ),RCSe ) ) ) / ( MLU - MLU ) ) )", "obj1": 0.7682481751824818, "obj2": 0.22986624703787994}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( FirstVNF_RAM_Server + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( ( DS - RMSe ) + ( ( ( ( MUC / ( RRSe * MUC ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) ) * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.8193430656934306, "obj2": 0.13498149720574878}, {"determining": "Min( ( ( Min( Const ,MRS ) - FirstVNF_RAM ) - ACS ) ,Max( RRS,( ( ( ( FirstVNF_Mem_Server - ACS ) - ( CRS - DDR ) ) * ( ACS - AMS ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( MUM - ( ( RCSe + DS ) - RCSe ) ) ) + ( Max( ( ( RCSe - MUM ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) * ( RCSe - MUM ) ) )", "obj1": 0.8302919708029197, "obj2": 0.1242516112674347}, {"determining": "( Max( ( MDR - FirstVNF_RAM ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( DDR ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS / MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - ( ( ( RRSe + RCSe ) + DS ) - ( MUM / MUC ) ) ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( Max( MUR,RCSe ) * ( MLU + RRSe ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "Min( ( FirstVNF_Mem * ( CRS - MDR ) ) ,( AMS * ( MRS / Max( FirstVNF_RAM,( PN - RRS ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( DS ,RRSe ) ,( CS - CS ) ) - ( ( DS + MUR ) + ( ( ( RRSe * MUC ) - MLU ) - MUC ) ) ) ,DS ) + MUC ) - ( RRSe / MUM ) )", "obj1": 0.656934306569343, "obj2": 0.31432581147812044}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( ( MRS - ( CRS - DDR ) ) * ( ACS - AMS ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( RRSe - MUR ) ) + ( Max( ( ( ( ( Max( MLU,MUC ) / Max( RCSe,MUC ) ) - ( RCSe / MUM ) ) / RRSe ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) * ( RCSe - MUM ) ) )", "obj1": 0.8412408759124088, "obj2": 0.11275789670857066}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * ( ( ( MRS - DDR ) / FirstVNF_CPU ) - Const ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( Min( DS ,DS ) - ( ( Min( RCSe ,Max( ( DS + MLU ),( MUR + DS ) ) ) / RCSe ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.12221980295446878}, {"determining": "Min( ( ( Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - Const ) * ( BR - FirstVNF_RAM ) ) ) * ( CRS + ACS ) ) - ACS ) ,Min( Min( FirstVNF_CPU ,Max( FirstVNF_Mem_Server,MRS ) ) ,( ( ARS + FirstVNF_Mem ) - FirstVNF_Mem ) ) )", "choosing": "( ( DS - RMSe ) + ( Max( ( MUM + ( RMSe / ( RMSe * ( Min( RCSe ,MUC ) * MLU ) ) ) ),( RCSe * RCSe ) ) + ( RCSe - MUM ) ) )", "obj1": 0.7883211678832117, "obj2": 0.158387662471853}, {"determining": "Min( ( ( Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - Const ) * ( BR - FirstVNF_RAM ) ) ) * ( CRS + ACS ) ) - ACS ) ,Min( Min( FirstVNF_CPU ,Max( FirstVNF_Mem_Server,MRS ) ) ,( ( ARS + FirstVNF_Mem ) - FirstVNF_Mem ) ) )", "choosing": "( ( DS - RMSe ) + ( Max( ( MUM + ( RMSe / ( RMSe * ( Min( RCSe ,MUC ) * MLU ) ) ) ),( RCSe * RCSe ) ) + ( RCSe - MUM ) ) )", "obj1": 0.7883211678832117, "obj2": 0.158387662471853}, {"determining": "Max( Max( ( FirstVNF_CPU + MDR ),Min( FirstVNF_RAM ,AMS ) ),Min( ARS ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( CS + ( CS - Max( MUM,RMSe ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46795882204171046}, {"determining": "( ( FirstVNF_CPU_Server * ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( RRSe - RCSe ) / MUR ) )", "obj1": 0.41058394160583944, "obj2": 0.6800450654393029}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( RCSe + ( ( ( CS - RMSe ) - MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( MUR + DS ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.1601773588553094}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( Max( Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,Max( PN,Const ) ),PN ) * ( FirstVNF_Mem_Server - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( MUM - CS ) ) ) / ( ( ( CS + MLU ) - ( RRSe / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) ),( Min( RRSe ,MUC ) - ( CS + MLU ) ) ) - Max( ( ( CS + CS ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.822992700729927, "obj2": 0.13078295592961242}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( ( ( RRSe / RRSe ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.822992700729927, "obj2": 0.13078295592961242}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( FirstVNF_CPU_Server / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) + DS ) ,( Max( ( ( MUC + DS ) - MUR ),( MUM - CS ) ) * ( ( MUC + MLU ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.009272676464718405}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( ( ( ACS / BR ) / ( ( ( ACS * ( ARS - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ),( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( MUM / MUM ) / ( ( MLU + RRSe ) / ( Min( Max( MUM,RCSe ) ,( DS - ( CS + ( MUC - RCSe ) ) ) ) - MLU ) ) )", "obj1": 0.8394160583941606, "obj2": 0.11459897734962553}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( FirstVNF_Mem + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) + ( ( MUR * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.8175182481751825, "obj2": 0.1360222179485002}, {"determining": "Min( ( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Max( Max( PN,RRS ),AMS ) ) ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MUM ) - ( MUC * Max( RRSe,MUR ) ) )", "obj1": 0.9306569343065694, "obj2": 0.04774531790173242}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( ( ( MDR - Const ) * ( FirstVNF_RAM_Server - BR ) ),Max( ( AMS / ARS ),FirstVNF_Mem ) ) )", "choosing": "( ( RMSe / ( RRSe + Max( Min( MUR ,( Min( RRSe ,Min( RCSe ,MUC ) ) - ( CS / ( RRSe * DS ) ) ) ),( ( ( ( MUC + MUR ) / Min( RRSe ,MUM ) ) * ( MUC + ( RMSe - RMSe ) ) ) * RMSe ) ) ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.8394160583941606, "obj2": 0.11459897734962553}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * ( ( ( MRS - DDR ) / FirstVNF_CPU ) - Const ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( Min( DS ,DS ) - ( ( Min( RCSe ,Max( ( DS + MLU ),( MUR + DS ) ) ) / RCSe ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.1601773588553094}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,Max( ( CRS + FirstVNF_CPU_Server ),( ( FirstVNF_Mem + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( ( DS - RMSe ) + ( ( MUR * MLU ) + ( MLU * MUM ) ) )", "obj1": 0.8175182481751825, "obj2": 0.1360222179485002}, {"determining": "( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( ( RRS / BR ) * ( Min( MRS ,RRS ) / ACS ) ) ) * ( ( Min( DDR ,Const ) / ( AMS + ( FirstVNF_Mem / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( Min( CS ,Max( MLU,MLU ) ) / MUM ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( ( RMSe + RRSe ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( BR + FirstVNF_RAM_Server ) - ( PN * MRS ) )", "choosing": "( Max( RMSe,( DS / RRSe ) ) + Max( MLU,MUC ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * ( ( ( MRS - DDR ) / FirstVNF_CPU ) - Const ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( Min( DS ,DS ) - ( ( Min( RCSe ,Max( ( DS + MLU ),( MUR + DS ) ) ) / RCSe ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.12221980295446878}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "Min( ( MUM / MUR ) ,( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) - ( Const - Const ) )", "choosing": "Min( ( MUM + MUR ) ,( ( MLU - Min( CS ,MUR ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( AMS + ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ),AMS ) )", "choosing": "Max( Min( DS ,RMSe ),( Min( MUM ,MUM ) + ( ( ( RRSe * MUC ) - ( ( ( CS - MUC ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) ) / MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6825966138664078}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( Max( MUM,Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) ) ) / CS ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( AMS + ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ),AMS ) )", "choosing": "Min( ( Min( RCSe ,MUC ) / MUR ) ,( RMSe * RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6825966138664078}, {"determining": "( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( Const,BR ) / ( RRS / RRS ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( Min( ACS ,MRS ) / PN ) ) ) + ( ( AMS + MRS ) + ( ACS * ARS ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / RRSe ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949962}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( MUM + ( ( MUR * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.9288321167883211, "obj2": 0.052725553340230824}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( ( ( FirstVNF_RAM_Server - BR ) * ( MDR - Const ) ),( Const / ( ( ( FirstVNF_RAM_Server / ( CRS - AMS ) ) / ( ( MDR + Max( AMS,FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe * ( RRSe + ( Min( MUR ,( ( MLU + MUR ) - ( CS / ( RRSe * DS ) ) ) ) - ( ( ( ( RRSe / MLU ) / ( MUM * CS ) ) * ( MUC + ( RMSe - RMSe ) ) ) * RMSe ) ) ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.7518248175182481, "obj2": 0.20744103201183461}, {"determining": "( ( MRS - ( ( ( ( RRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) * ARS ) - ( FirstVNF_RAM_Server - AMS ) ) ) / ( Max( ( Const / FirstVNF_RAM_Server ),( FirstVNF_RAM_Server - MDR ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( RCSe - MUM ) + ( MUR * MLU ) ) + Min( Max( MUM,MUC ) ,Max( RMSe,( MUM * RMSe ) ) ) )", "obj1": 0.698905109489051, "obj2": 0.283576078875373}, {"determining": "( ( MRS - ( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - ( FirstVNF_RAM_Server - AMS ) ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + Min( Max( MUM,MUC ) ,Max( RMSe,RRSe ) ) )", "obj1": 0.7390510948905109, "obj2": 0.2350741753402244}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6368613138686131, "obj2": 0.349156185105555}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - Max( DS,DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6678832116788321, "obj2": 0.30971618048339705}, {"determining": "Min( ( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Max( Max( ( ( FirstVNF_Mem_Server / ARS ) / DDR ),RRS ),AMS ) ) ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( Min( Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) ,CS ) ,DS ) ,MUM ) - ( MUC * Max( RRSe,MUR ) ) )", "obj1": 0.9616788321167883, "obj2": 0.03197588156458789}, {"determining": "Min( ( ( RRS + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( RCSe + ( ( ( CS - RMSe ) - MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( MUR + DS ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.3859440375351636}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) ) - ( FirstVNF_RAM_Server + ( FirstVNF_CPU - Min( CRS ,CRS ) ) ) )", "choosing": "( ( MUC / Max( ( ( Min( MUR ,MUC ) / ( Max( DS,RRSe ) * MUR ) ) * ( RRSe + RRSe ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) )", "obj1": 0.9306569343065694, "obj2": 0.0461323878540627}, {"determining": "( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - ( FirstVNF_RAM_Server - AMS ) )", "choosing": "( ( MLU + RCSe ) - Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) )", "obj1": 0.7226277372262774, "obj2": 0.2661910269750265}, {"determining": "Max( Max( Min( ( FirstVNF_RAM + RRS ) ,( ACS * Max( ( ( RRS * FirstVNF_Mem ) + RRS ),RRS ) ) ),Min( FirstVNF_RAM ,AMS ) ),Min( ARS ,MDR ) )", "choosing": "Max( ( ( MUR + MUM ) - ( Max( CS,MUM ) / ( MUC / MUM ) ) ),( CS + ( CS - Max( MUM,RMSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6290704544587624}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( ( Min( Max( ( Min( Const ,FirstVNF_CPU_Server ) + MDR ),Min( Max( ARS,MRS ) ,FirstVNF_Mem ) ) ,Min( FirstVNF_Mem ,ACS ) ) * CRS ) + AMS ),AMS ) )", "choosing": "Max( Min( DS ,Max( Max( MUM,( MUM + MUR ) ),RRSe ) ),Min( MUC ,MUC ) )", "obj1": 0.41058394160583944, "obj2": 0.6800450654393029}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( BR / Min( ( Min( ACS ,DDR ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * ( MUR - Max( DS,DS ) ) ) + ( Min( Min( DS ,( MUR + RMSe ) ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6551094890510949, "obj2": 0.32392394230469007}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( RMSe ,MUR ) - ( RRSe / MUM ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Min( ( ( DDR / Const ) - ACS ) ,Max( RRS,( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( ( MLU / RCSe ) - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( MUR / ( ( MUM + RCSe ) + MLU ) ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5539226202763968}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5474452554744526, "obj2": 0.42034098942979026}, {"determining": "Min( ( ( ARS + ARS ) + FirstVNF_RAM ) ,Max( ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + Min( DDR ,( ( ACS + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) ) + FirstVNF_RAM ) ),ARS ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) - Min( ( ( MUM + CS ) + ( DS / ( RRSe / MLU ) ) ) ,Max( MUC,( RRSe - MUM ) ) ) )", "obj1": 0.7846715328467153, "obj2": 0.16233098434928311}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6386861313868614, "obj2": 0.3474195941037767}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( ACS / Const ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) + DS ) ,( RRSe - MUR ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Min( ( ( RRS + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.3859440375351636}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( RRS,AMS ) - DDR ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( MUR + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.619833627135431}, {"determining": "Min( ( ACS - ACS ) ,Max( RRS,( ( BR * FirstVNF_RAM_Server ) * Max( Max( FirstVNF_RAM_Server,ACS ),Min( PN ,RRS ) ) ) ) )", "choosing": "( Max( MUR,MLU ) / ( MLU * ( MLU - MLU ) ) )", "obj1": 0.7846715328467153, "obj2": 0.16233098434928311}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,ACS ) ) ,Max( ( ( MDR / Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe - ( Min( MLU ,MUR ) + Max( Max( RMSe,DS ),RCSe ) ) ) - RMSe ) + ( ( MUR * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.7974452554744526, "obj2": 0.14683857965955335}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( Max( Const,FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe + RRSe ) * ( DS * DS ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) ) * ( ( RRSe + ( MUM / MUR ) ) / MUC ) )", "obj1": 0.5912408759124088, "obj2": 0.41112268529464463}, {"determining": "( ( BR * FirstVNF_CPU ) - ( CRS * Max( CRS,BR ) ) )", "choosing": "Min( Min( RMSe ,Min( Min( RCSe ,Min( ( RRSe * Max( ( RCSe * CS ),CS ) ) ,MUM ) ) ,Max( MLU,MUR ) ) ) ,Max( MUC,RRSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5790951503699697}, {"determining": "( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - ( FirstVNF_RAM_Server - AMS ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( MUR + ( CS - Max( MUM,RMSe ) ) ) )", "obj1": 0.7226277372262774, "obj2": 0.2661910269750265}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - BR ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.5948905109489051, "obj2": 0.4097310065556673}, {"determining": "( ( FirstVNF_RAM - RRS ) / ( AMS * Min( ( FirstVNF_Mem / RRS ) ,( FirstVNF_RAM * ( Max( CRS,( ( ACS / CRS ) / ACS ) ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Max( ( MUC - MUR ),CS ) ,( MUM / MUR ) )", "obj1": 0.5656934306569343, "obj2": 0.4153217172176912}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( ( ( ACS / BR ) / ( ( ( ACS * ( ARS - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ),( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( MUM / MUM ) / ( ( MLU + RRSe ) / ( Min( Max( MUM,RCSe ) ,( DS - ( CS + ( MUC - RCSe ) ) ) ) - MLU ) ) )", "obj1": 0.8394160583941606, "obj2": 0.11459897734962553}, {"determining": "Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_RAM ,( ( FirstVNF_RAM * FirstVNF_Mem ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + Max( RRSe,( MLU + MLU ) ) ) / ( MUC + DS ) ),( ( CS + MUC ) + ( CS * MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5456204379562044, "obj2": 0.44087646641618117}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "Max( ( RCSe / Max( ( Max( ( ( MUC + MLU ) * ( ( RCSe / MUC ) + RMSe ) ),( ( ( MUR - MUM ) + MUM ) - CS ) ) + ( DS + RRSe ) ),RMSe ) ),Min( RCSe ,DS ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "( ( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) * ARS ) - BR )", "choosing": "( Max( MLU,Min( RRSe ,( ( ( MUC - Max( DS,DS ) ) * MLU ) + ( RMSe / MUM ) ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.4543795620437956, "obj2": 0.548422594558868}, {"determining": "( MDR - ( ( Const + AMS ) - Max( RRS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( Max( Min( Min( MUC ,( Min( MLU ,DS ) + Max( RRSe,CS ) ) ) ,( Min( MLU ,( MUR - DS ) ) - ( ( RRSe - RMSe ) * ( CS / MUC ) ) ) ),MUC ) ,DS ) - RCSe ) + ( CS - ( MLU + Min( MUM ,( Max( MLU,MUM ) - Min( MLU ,Min( ( RMSe - CS ) ,( MUC + MLU ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46721314469668435}, {"determining": "( BR - ( ( BR / BR ) * ( FirstVNF_Mem - ( FirstVNF_Mem * Const ) ) ) )", "choosing": "( Min( Max( MUM,( Min( RMSe ,MUR ) - Min( ( RCSe + ( Max( CS,RRSe ) + CS ) ) ,Max( ( ( DS / RCSe ) + MUR ),RRSe ) ) ) ) ,Max( RMSe,RRSe ) ) - Min( RCSe ,DS ) )", "obj1": 0.4562043795620438, "obj2": 0.5402582739804751}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( Max( ARS,BR ) - ( ARS * ( Const / Min( ( ARS * ( BR / DDR ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) )", "choosing": "( ( ( MUC - ( ( CS + Min( ( ( MUC + CS ) - RCSe ) ,MUC ) ) + ( MUM / RCSe ) ) ) * MLU ) + ( DS / MUR ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) )", "choosing": "( ( ( ( ( ( MUR - MUM ) + MUM ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5151598088354831}, {"determining": "( ( FirstVNF_RAM - RRS ) / ( AMS * Min( ( RRS / FirstVNF_Mem ) ,Max( FirstVNF_RAM,( Max( CRS,( ACS / ACS ) ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUM + ( ( MUC - Max( DS,DS ) ) * MLU ) ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * ( Max( Max( ( MUR / MUM ),DS ),MUC ) * ( RMSe - MUM ) ) )", "obj1": 0.5656934306569343, "obj2": 0.4153217172176912}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.458029197080292, "obj2": 0.5236459084677885}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - BR ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.968978102189781, "obj2": 0.01672564486057951}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( MDR - FirstVNF_RAM_Server ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( MDR / FirstVNF_Mem ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( Min( ( MUM + MUM ) ,Max( MUM,RCSe ) ) - Max( DS,DS ) ) * MLU ) + ( RMSe / MUM ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( Max( ( FirstVNF_Mem * ( DDR / RRS ) ),AMS ) * ( ACS - AMS ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe - ( RCSe * ( MUR / MUC ) ) ),RRSe ) + ( ( RCSe + CS ) + ( RRSe - MUR ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( Max( ( ( RRSe + Max( RRSe,( MLU + MLU ) ) ) / ( MUC + DS ) ),( ( ( ( CS - MUC ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.656934306569343, "obj2": 0.31432581147812044}, {"determining": "Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_RAM ,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + Max( RRSe,( MLU + MLU ) ) ) / ( MUC + DS ) ),( ( ( ( CS - MUC ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5255474452554745, "obj2": 0.4480796146550668}, {"determining": "( ( ( ARS / FirstVNF_Mem_Server ) / ( AMS * FirstVNF_RAM_Server ) ) - ( ARS - ARS ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - MUR ) + Min( ( Min( MLU ,RCSe ) - MUR ) ,Min( MUC ,( CS - ( ( MLU * Max( Min( MUC ,MUR ),MLU ) ) + MUM ) ) ) ) )", "obj1": 0.9890510948905109, "obj2": 0.011376240161121194}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( FirstVNF_CPU_Server / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( FirstVNF_Mem / DDR ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) + DS ) ,( Max( ( ( MUC + RCSe ) - MUR ),( MUM - CS ) ) * ( ( MUC + MLU ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.4419476943932074}, {"determining": "Min( Max( CRS,FirstVNF_CPU_Server ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,Max( DS,DS ) ) ,MUM ) - ( RCSe / MUM ) )", "obj1": 0.4726277372262774, "obj2": 0.5029821328881423}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( AMS * PN ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( DS - DS ) / ( Max( MUM,MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5826215610325954}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.619833627135431}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,( ARS - FirstVNF_RAM ) ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( DS - RMSe ) + ( Max( DS,( RCSe * RCSe ) ) + ( RCSe - MUM ) ) )", "obj1": 0.5109489051094891, "obj2": 0.4544155197323172}, {"determining": "Min( ( ACS - AMS ) ,Max( RRS,( MRS + ( ( FirstVNF_RAM_Server - AMS ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( RCSe + ( ( MUR * ( MUR / Max( RRSe,MLU ) ) ) * ( ( MUR - DS ) - ( ( Min( Max( ( DS + MLU ),RCSe ) ,RCSe ) / RCSe ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.12099523756361824}, {"determining": "Min( ( PN - ACS ) ,Max( ( Max( CRS,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / Max( ( Const + ( DDR - ARS ) ),BR ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( MUR - Max( ( RRSe * RRSe ),Max( MLU,MUC ) ) ) ) ) / ( ( MLU + RRSe ) / ( MLU - MUM ) ) )", "obj1": 0.7937956204379562, "obj2": 0.1524457796922693}, {"determining": "( ( BR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU + ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + ( DS + RMSe ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_RAM ,( ( ( FirstVNF_RAM - RRS ) * FirstVNF_Mem ) * MRS ) ) )", "choosing": "( ( MUM + ( ( MUC - Max( DS,DS ) ) * MLU ) ) - ( RMSe - RCSe ) )", "obj1": 0.531021897810219, "obj2": 0.44318087947060775}, {"determining": "Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_RAM ,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * MRS ) ) )", "choosing": "( Max( RMSe,( DS / RRSe ) ) + Max( MLU,MUC ) )", "obj1": 0.5255474452554745, "obj2": 0.4480796146550668}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - BR ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.968978102189781, "obj2": 0.01672564486057951}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( ( MUC / ( RRSe * MUC ) ) ,Max( DS,DS ) ) ,MUM ) - ( RCSe / MUM ) )", "obj1": 0.4726277372262774, "obj2": 0.5029821328881423}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12862933043563868}, {"determining": "Max( ( Min( FirstVNF_CPU_Server ,MRS ) / RRS ),Min( ARS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RCSe / Max( ( Max( ( ( MUC + MLU ) * ( ( RCSe / MUR ) + RMSe ) ),( Max( MLU,RRSe ) - CS ) ) + ( DS + RRSe ) ),MUM ) ),Min( RCSe ,DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6290704544587624}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,FirstVNF_RAM )", "choosing": "( Max( ( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( ( ( RRSe / RRSe ) - ( RMSe + RMSe ) ),( ( DS + MUR ) + Min( RRSe ,Min( ( MLU - RRSe ) ,( MUM - RRSe ) ) ) ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "Min( ( ( ARS * DDR ) / ARS ) ,Max( CRS,MDR ) )", "choosing": "( Max( Max( RRSe,MUR ),MUC ) / Max( RCSe,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.45846959277850124}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( AMS * PN ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS - RCSe ) + Max( MLU,MUC ) ) / ( Max( MUM,MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.458029197080292, "obj2": 0.5236459084677885}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MRS ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( Min( MUC ,Max( Max( Min( ( MUC / DS ) ,Max( ( MLU / MLU ),MUR ) ),RRSe ),DS ) ) * MLU ) + ( MUC - MUR ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MRS ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( CS - RCSe ) + Max( MLU,MUC ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - MUR ) + ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( ( MUC + MLU ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.009272676464718405}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Min( MRS ,CRS ) ) ) ) - Max( ARS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,( RMSe - MUM ) ) )", "obj1": 0.5109489051094891, "obj2": 0.4544155197323172}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / BR ) / ( FirstVNF_RAM_Server - Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) ) )", "choosing": "( ( RMSe / MUM ) * Max( MLU,Min( RRSe ,Min( RCSe ,Max( ( MLU + MLU ),( MUR + DS ) ) ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.13238001060398896}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * Max( Max( FirstVNF_RAM_Server,Max( ( ( FirstVNF_Mem_Server / ARS ) / DDR ),BR ) ),Min( PN ,Const ) ) ) ) )", "choosing": "( Min( Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) ,CS ) - ( RCSe / ( CS / RRSe ) ) )", "obj1": 0.8375912408759124, "obj2": 0.11659504075491585}, {"determining": "Min( ( ARS - BR ) ,Min( FirstVNF_RAM ,( ( FirstVNF_RAM * FirstVNF_Mem ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + Max( RRSe,( MLU + ( DS * MUC ) ) ) ) / ( MUC + DS ) ),( ( CS + MUC ) + ( CS * MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5091240875912408, "obj2": 0.4551944246480221}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.531021897810219, "obj2": 0.44318087947060775}, {"determining": "( Max( ( MDR - FirstVNF_RAM ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( DDR ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS / MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - ( ( ( RRSe + RCSe ) + DS ) - ( MUM / MUC ) ) ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( Max( MUR,RCSe ) * ( MLU + RRSe ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( RRSe + ( MUC * Max( RRSe,MUR ) ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.656934306569343, "obj2": 0.31432581147812044}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( ( BR + ( Max( MRS,ACS ) - ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) * MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * ( ( MUM - RRSe ) - RCSe ) ) + ( ( MUR * MLU ) * Max( RCSe,MUM ) ) )", "obj1": 0.791970802919708, "obj2": 0.15492480078757656}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * Max( Max( FirstVNF_RAM_Server,Max( ( ( FirstVNF_Mem_Server / ARS ) / DDR ),BR ) ),Min( PN ,Const ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MUM ) - ( MUC * Max( RRSe,MUR ) ) )", "obj1": 0.8375912408759124, "obj2": 0.11659504075491585}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( FirstVNF_Mem + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe - DS ) + DS ) / ( ( RRSe - ( Min( MLU ,MUR ) + Max( Max( RMSe,DS ),RCSe ) ) ) / ( MLU - MLU ) ) )", "obj1": 0.7883211678832117, "obj2": 0.158387662471853}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,( FirstVNF_CPU_Server / PN ) )", "choosing": "( ( Max( ( CS * MUC ),CS ) + ( RRSe - MUR ) ) + CS )", "obj1": 0.8284671532846716, "obj2": 0.12498736437419881}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( Max( FirstVNF_Mem,MDR ) * ACS ) ) )", "choosing": "( ( Max( RCSe,RRSe ) + ( RRSe - MUR ) ) + CS )", "obj1": 0.8284671532846716, "obj2": 0.12498736437419881}, {"determining": "Min( ( ( Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - Const ) * ( BR - FirstVNF_RAM ) ) ) * ( CRS + ACS ) ) - ACS ) ,Min( Min( FirstVNF_CPU ,Max( FirstVNF_Mem_Server,MRS ) ) ,( ( ARS + FirstVNF_Mem ) - FirstVNF_Mem ) ) )", "choosing": "( ( DS - RMSe ) + ( Max( ( MUM + ( RMSe / ( RMSe * ( Min( RCSe ,MUC ) * MLU ) ) ) ),( RCSe * RCSe ) ) + ( RCSe - MUM ) ) )", "obj1": 0.7883211678832117, "obj2": 0.158387662471853}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) * ( ( ( MRS - DDR ) / FirstVNF_CPU ) - Const ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( Min( DS ,( MUM - CS ) ) - ( ( Min( RCSe ,Max( ( DS + MLU ),( MUR + DS ) ) ) / RCSe ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.15492480078757656}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( ( ARS * DDR ) / ARS ) )", "choosing": "( ( ( Max( Max( RRSe,MUR ),RCSe ) / ( MUC + DS ) ) - MUR ) + ( MUC + DS ) )", "obj1": 0.5072992700729927, "obj2": 0.45846959277850124}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * Max( Max( FirstVNF_RAM_Server,Max( DDR,BR ) ),Min( PN ,Const ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,CS ) - ( RCSe / ( CS / RRSe ) ) )", "obj1": 0.8302919708029197, "obj2": 0.12359981861585062}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( FirstVNF_RAM_Server + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( ( DS - RMSe ) + ( ( ( ( MUC / ( RRSe * MUC ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) ) * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.8193430656934306, "obj2": 0.13498149720574878}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( AMS,( AMS + ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) ) ) )", "choosing": "Max( Min( DS ,Max( ( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) ),CS ) ),( Min( MUM ,MUM ) + ( ( CS - ( ( ( CS - MUC ) + ( DS + Max( MUM,MUR ) ) ) + RMSe ) ) / MLU ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6800450654393029}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.1601773588553094}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( Max( Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,Max( PN,Const ) ),PN ) * ( FirstVNF_Mem_Server - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( MUM - CS ) ) ) / ( ( ( CS + MLU ) - ( RRSe / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) ),( Min( RRSe ,MUC ) - ( CS + MLU ) ) ) - Max( ( ( CS + CS ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.822992700729927, "obj2": 0.13078295592961242}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( FirstVNF_RAM_Server,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) * MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MUC ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.8175182481751825, "obj2": 0.1358646558598167}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe + RRSe ) * ( DS * DS ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) ) * ( ( RRSe + ( MUM / MUR ) ) / MUC ) )", "obj1": 0.9908759124087592, "obj2": 0.009272676464718405}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( Max( Min( ( FirstVNF_CPU_Server / MDR ) ,Min( ( MDR + DDR ) ,( PN - ( FirstVNF_Mem_Server + MRS ) ) ) ),PN ) * ( RRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( RRSe / CS ) ) - Max( Max( ( RCSe + Max( RRSe,RCSe ) ),MUC ),Min( DS ,RRSe ) ) ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( ( ( RRSe / RRSe ) - ( RMSe * RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.8394160583941606, "obj2": 0.11459897734962553}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( RCSe + ( ( ( CS - RMSe ) - MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( MUR + DS ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.1601773588553094}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - DS ) + DS ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.822992700729927, "obj2": 0.13078295592961242}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( RMSe / MUM ) * Max( MLU,Min( RRSe ,( ( ( MUC - Max( DS,DS ) ) * MLU ) + ( RMSe / MUM ) ) ) ) )", "obj1": 0.8302919708029197, "obj2": 0.12359981861585062}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( DDR ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - MUR ) + ( MUC + DS ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( BR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU + ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + ( DS + RMSe ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( FirstVNF_RAM_Server + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,MUC ) + ( CS - ( MLU + Min( MUM ,( Max( MLU,MUM ) - Min( MLU ,Min( ( RMSe - CS ) ,RCSe ) ) ) ) ) ) )", "obj1": 0.8193430656934306, "obj2": 0.13498149720574878}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * ( ( ( MRS - DDR ) / FirstVNF_CPU ) - Const ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( Min( DS ,DS ) - ( ( Min( RCSe ,Max( ( DS + MLU ),( MUR + DS ) ) ) / RCSe ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.8175182481751825, "obj2": 0.1358646558598167}], "7": [{"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( AMS + ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ),AMS ) )", "choosing": "Max( Min( DS ,RMSe ),( Min( MUM ,MUM ) + ( ( ( RRSe * MUC ) - ( ( ( CS - MUC ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) ) / MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6825966138664078}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( Max( MUM,Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) ) ) / CS ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( Max( ( FirstVNF_Mem_Server - ACS ),( PN / FirstVNF_CPU ) ) - MRS ),AMS ) )", "choosing": "Max( Min( RCSe ,( RRSe + ( ( MLU + RCSe ) * RRSe ) ) ),( RCSe / Max( ( Max( ( ( MUC + MLU ) + ( ( RCSe / MUC ) + RMSe ) ),( ( ( MUR - MUM ) + MUM ) - CS ) ) + ( DS + RRSe ) ),RMSe ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6825966138664078}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( DS - DS ) / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16289575186331304}, {"determining": "( ( ( ( ( BR / ( ( RRS * Const ) * MDR ) ) * ARS ) - ( FirstVNF_RAM_Server - AMS ) ) - MRS ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Max( Max( FirstVNF_RAM_Server,Max( DDR,BR ) ),Min( PN ,Const ) ) / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUR * MLU ) + Min( MUC ,RRSe ) ) + Min( Max( MUM,MUC ) ,Max( ( RCSe / ( CS / RRSe ) ),RRSe ) ) )", "obj1": 0.7153284671532847, "obj2": 0.2533364925579013}, {"determining": "( Max( ( ( MRS + ACS ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) - ( ( ACS - ARS ) + ( AMS + MRS ) ) ) )", "choosing": "( ( ( ( ( MUC / ( Max( MUR,DS ) + MUM ) ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,( RMSe - CS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949962}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( MUM + ( ( MUR * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.9288321167883211, "obj2": 0.052725553340230824}, {"determining": "Min( ( ( ACS / Min( PN ,( Const + ( FirstVNF_RAM_Server + CRS ) ) ) ) - ACS ) ,( AMS * ( Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,FirstVNF_Mem ),ARS ) - ( DDR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( MUM,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( Max( DS,CS ) + Min( DS ,CS ) ) + MLU ) / MUR ),Min( RCSe ,Max( CS,( ( MUC - RRSe ) - ( RMSe - MUR ) ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4238797711153094}, {"determining": "Min( Max( FirstVNF_Mem_Server,ACS ) ,( AMS * Min( MRS ,Max( CRS,ACS ) ) ) )", "choosing": "( ( ( MUM / RCSe ) + ( MUR * RCSe ) ) + Max( ( ( ( DS * CS ) / ( DS + MUC ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( ( RRSe / CS ),CS ) ) )", "obj1": 0.6824817518248175, "obj2": 0.2822142933833151}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( ( ( ACS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5802919708029197, "obj2": 0.40749894819511656}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( MRS - ( ( ( BR / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) * ARS ) - ( FirstVNF_RAM_Server - AMS ) ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) ) )", "choosing": "( ( ( MUC - Max( DS,DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,( MUR * MLU ) ) - ( RCSe / MUM ) ) )", "obj1": 0.7043795620437956, "obj2": 0.2719689448873752}, {"determining": "Min( ( ( ARS + ARS ) + FirstVNF_RAM ) ,Max( ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + Min( DDR ,( ( ACS + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) ) + FirstVNF_RAM ) ),ARS ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) - Min( ( ( MUM + CS ) + ( DS / ( RRSe / MLU ) ) ) ,Max( MUC,( RRSe - MUM ) ) ) )", "obj1": 0.7846715328467153, "obj2": 0.16233098434928311}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),( ( Const * BR ) * MDR ) ) ) )", "choosing": "( ( DS - ( DS * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45317346513960133}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( ( Min( Max( ( Min( Const ,FirstVNF_CPU_Server ) + MDR ),Min( Max( ARS,MRS ) ,FirstVNF_Mem ) ) ,Min( FirstVNF_Mem ,ACS ) ) * CRS ) + AMS ),AMS ) )", "choosing": "Max( Min( DS ,Max( Max( MUM,( MUM + MUR ) ),RRSe ) ),Min( MUC ,MUC ) )", "obj1": 0.41058394160583944, "obj2": 0.6800450654393029}, {"determining": "Max( ( Min( FirstVNF_CPU_Server ,MRS ) / RRS ),Min( ARS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RCSe / Max( ( Max( ( ( MUC + MLU ) * ( ( RCSe / MUR ) + RMSe ) ),( Max( MLU,RRSe ) - CS ) ) + ( DS + RRSe ) ),MUM ) ),Min( RCSe ,DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6290704544587624}, {"determining": "Min( ( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Max( Max( ( ( FirstVNF_Mem_Server / ARS ) / DDR ),RRS ),AMS ) ) ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( Min( Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) ,CS ) ,DS ) ,MUM ) - ( MUC * Max( RRSe,MUR ) ) )", "obj1": 0.9616788321167883, "obj2": 0.03197588156458789}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( CRS,( DDR / AMS ) ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + RCSe )", "obj1": 0.4343065693430657, "obj2": 0.5742254118550716}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server * ARS ) / CRS ) ) ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) )", "choosing": "( ( RMSe / ( RRSe + ( Min( MUR ,( Min( RRSe ,Min( MUM ,MUC ) ) - ( CS / ( RRSe * DS ) ) ) ) - ( ( ( ( RRSe / MUC ) / ( MUM * CS ) ) * ( MUC + ( RMSe - RMSe ) ) ) * RMSe ) ) ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.9306569343065694, "obj2": 0.0461323878540627}, {"determining": "Min( ( ( RRS + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( RCSe + ( ( ( CS - RMSe ) - MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( MUR + DS ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.3859440375351636}, {"determining": "( Min( ACS ,( ( FirstVNF_RAM_Server + ARS ) - FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) * ( RRSe * MUC ) ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.635036496350365, "obj2": 0.3536252940534571}, {"determining": "Min( ( ( RRS + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.3859440375351636}, {"determining": "Min( ( ( ARS + ARS ) + FirstVNF_RAM ) ,Max( ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + Min( DDR ,( ( ACS + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) ) + FirstVNF_RAM ) ),ARS ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) - Min( ( ( MUM + CS ) + ( DS / ( RRSe / MLU ) ) ) ,Max( MUC,( RRSe - MUM ) ) ) )", "obj1": 0.6167883211678832, "obj2": 0.3670620790147869}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( MDR + ( ( ( ACS - Const ) - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( Min( DS ,DS ) - ( Max( DS,CS ) - Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5539226202763968}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( ( ( ACS / BR ) / ( ( ( ACS * ( ARS - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ),( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( MUM / MUM ) / ( ( MLU + RRSe ) / ( Min( Max( MUM,RCSe ) ,( DS - ( CS + ( MUC - RCSe ) ) ) ) - MLU ) ) )", "obj1": 0.8394160583941606, "obj2": 0.11459897734962553}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) ,CS ) ,DS ) ,MUM ) - ( MUC * Max( RRSe,MUR ) ) )", "obj1": 0.9288321167883211, "obj2": 0.052725553340230824}, {"determining": "( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( Const,BR ) / ( RRS / RRS ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( Min( ACS ,MRS ) / PN ) ) ) + ( ( AMS + MRS ) + ( ACS * ARS ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / RRSe ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949962}, {"determining": "Max( Max( ACS,( ACS / FirstVNF_CPU_Server ) ),( ( ACS - ( ( Const - ( Const + FirstVNF_Mem_Server ) ) + MRS ) ) + BR ) )", "choosing": "Max( MUR,Min( RMSe ,( Min( Min( ( ( MLU + MUM ) - ( ( RCSe * MUR ) / ( RCSe * RMSe ) ) ) ,RRSe ) ,DS ) / ( Max( MUR,RCSe ) / DS ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Min( ( ( ARS + ARS ) + FirstVNF_RAM ) ,Max( ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + Min( DDR ,( ( ACS + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) ) + FirstVNF_RAM ) ),ARS ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) - Min( ( ( MUM + CS ) + ( DS / ( RRSe / MLU ) ) ) ,Max( MUC,( RRSe - MUM ) ) ) )", "obj1": 0.6167883211678832, "obj2": 0.3670620790147869}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5474452554744526, "obj2": 0.42034098942979026}, {"determining": "( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * Min( Const ,Min( ( MDR / Max( FirstVNF_CPU_Server,PN ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( CS - ( ( ( CS * Max( RRSe,DS ) ) + MUR ) * Min( DS ,( MUC * ( DS / CS ) ) ) ) ) ) ) - Min( ( MUC - Max( DS,DS ) ) ,( MUM * MUC ) ) )", "obj1": 0.6496350364963503, "obj2": 0.33341004903937166}, {"determining": "( ( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) * ARS ) - BR )", "choosing": "( Max( MLU,Min( RRSe ,( ( ( MUC - Max( DS,DS ) ) * MLU ) + ( RMSe / MUM ) ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.4543795620437956, "obj2": 0.548422594558868}, {"determining": "( MDR - ( ( Const + AMS ) - Max( RRS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( Max( Min( Min( MUC ,( Min( MLU ,DS ) + Max( RRSe,CS ) ) ) ,( Min( MLU ,( MUR - DS ) ) - ( ( RRSe - RMSe ) * ( CS / MUC ) ) ) ),MUC ) ,DS ) - RCSe ) + ( CS - ( MLU + Min( MUM ,( Max( MLU,MUM ) - Min( MLU ,Min( ( RMSe - CS ) ,( MUC + MLU ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46721314469668435}, {"determining": "Min( ( ARS - MDR ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + Max( ( MUM * RCSe ),( DS - MUR ) ) ) ) ) / ( MUM / RRSe ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - CS ) )", "obj1": 0.4908759124087591, "obj2": 0.47991760977055486}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * ( MUR - Max( DS,DS ) ) ) + ( Min( Min( DS ,( MUR + Min( DS ,DS ) ) ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6697080291970803, "obj2": 0.30826177153239315}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( BR / Min( ( Min( ACS ,DDR ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * ( MUR - Max( DS,DS ) ) ) + ( Min( Min( DS ,( MUR + RMSe ) ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6551094890510949, "obj2": 0.32392394230469007}, {"determining": "Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( RRSe + ( MUC * Max( RRSe,MUR ) ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6478102189781022, "obj2": 0.3469792904456927}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,ACS ) ) ,Max( ( ( MDR / Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( DS - RMSe ) + ( Max( DS,( RCSe * RCSe ) ) + ( RCSe - MUM ) ) )", "obj1": 0.7974452554744526, "obj2": 0.14683857965955335}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6062301222707472}, {"determining": "( ( FirstVNF_RAM - RRS ) / ( AMS * Min( ( RRS / FirstVNF_Mem ) ,Max( FirstVNF_RAM,( ( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) * ARS ) - BR ) ) ) ) )", "choosing": "Min( ( MUM / MUR ) ,( Max( MLU,Min( RRSe ,( ( ( MUC - Max( DS,DS ) ) * MLU ) + ( RMSe / MUM ) ) ) ) - Min( RCSe ,DS ) ) )", "obj1": 0.5638686131386861, "obj2": 0.42027923571278947}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( AMS * PN ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS - RCSe ) + Max( MLU,MUC ) ) / ( Max( MUM,MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.458029197080292, "obj2": 0.5236459084677885}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - BR ) ) )", "choosing": "( Max( MLU,MUC ) + ( CS - ( MLU + Min( MUM ,( Max( MLU,MUM ) - Min( MLU ,Min( ( RMSe - CS ) ,RCSe ) ) ) ) ) ) )", "obj1": 0.968978102189781, "obj2": 0.01672564486057951}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( ( MUC / ( RRSe * MUC ) ) ,Max( DS,DS ) ) ,MUM ) - ( RCSe / MUM ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( Max( ( FirstVNF_Mem * ( DDR / RRS ) ),AMS ) * ( ACS - AMS ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe - ( RCSe * ( MUR / MUC ) ) ),RRSe ) + ( ( RCSe + CS ) + ( RRSe - MUR ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_Mem_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MRS ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( Max( MUM,MUC ) * MLU ) + ( MUC - MUR ) )", "obj1": 0.48175182481751827, "obj2": 0.48721730846953276}, {"determining": "Min( ( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Max( Max( ( ( FirstVNF_Mem_Server / ARS ) / DDR ),RRS ),AMS ) ) ) ,( FirstVNF_Mem * Const ) )", "choosing": "( MUM + ( ( MUR * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.9616788321167883, "obj2": 0.03197588156458789}, {"determining": "Min( ( ARS - PN ) ,( FirstVNF_RAM / ( Min( FirstVNF_Mem ,Min( ( ( DDR / ACS ) / ( ( FirstVNF_CPU_Server / ACS ) + FirstVNF_Mem_Server ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( CS - ( CS + Max( MUC,MUM ) ) ),Max( MLU,RCSe ) ) - Min( Max( MUM,( RMSe - MUM ) ) ,( RCSe * MUC ) ) )", "obj1": 0.5474452554744526, "obj2": 0.42034098942979026}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) ) ) )", "choosing": "( Min( Min( ( MUC / ( ( DS + MUC ) / ( DS * CS ) ) ) ,Max( DS,DS ) ) ,MUM ) - ( RCSe / MUM ) )", "obj1": 0.656934306569343, "obj2": 0.31432581147812044}, {"determining": "( ( FirstVNF_RAM - RRS ) / ( AMS * Min( ( RRS / FirstVNF_Mem ) ,Max( FirstVNF_RAM,( Max( CRS,( ACS / ACS ) ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( MUR - MUM ) + MUM ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5656934306569343, "obj2": 0.4153217172176912}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / Min( ( FirstVNF_RAM - BR ) ,BR ) ) ) + Min( ( ( Const * BR ) - MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU + ( MLU - MUR ) ) - Min( MUR ,MUM ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5053581732840018}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( MDR - FirstVNF_RAM_Server ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( MDR / FirstVNF_Mem ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( Min( ( MUM + MUM ) ,Max( MUM,RCSe ) ) - Max( DS,DS ) ) * MLU ) + ( RMSe / MUM ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "Min( Max( CRS,FirstVNF_CPU_Server ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,Max( DS,DS ) ) ,MUM ) - ( RCSe / MUM ) )", "obj1": 0.4726277372262774, "obj2": 0.5029821328881423}, {"determining": "( ( ARS + AMS ) / ( ( BR * ( Const / Min( ( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) * ARS ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * ( MLU / MUR ) ) + MLU )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( BR - ( ( BR / BR ) * ( FirstVNF_Mem - ( FirstVNF_Mem * Const ) ) ) )", "choosing": "( Min( Max( MUM,( Min( RMSe ,MUR ) - Min( ( RCSe + ( Max( CS,RRSe ) + CS ) ) ,Max( ( ( DS / RCSe ) + MUR ),RRSe ) ) ) ) ,Max( RMSe,RRSe ) ) - Min( RCSe ,DS ) )", "obj1": 0.4562043795620438, "obj2": 0.5402582739804751}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) )", "choosing": "( ( ( ( ( ( MUR - MUM ) + MUM ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5151598088354831}, {"determining": "( ( ( ARS / FirstVNF_Mem_Server ) / ( AMS * FirstVNF_RAM_Server ) ) - ( ARS - ARS ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - MUR ) + Min( ( Min( MLU ,RCSe ) - MUR ) ,Min( MUC ,( CS - ( ( MLU * Max( Min( MUC ,MUR ),MLU ) ) + MUM ) ) ) ) )", "obj1": 0.9890510948905109, "obj2": 0.011376240161121194}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) ) - ( FirstVNF_RAM_Server + ( FirstVNF_CPU - Min( CRS ,CRS ) ) ) )", "choosing": "( ( MUC / Max( ( ( Min( MUR ,MUC ) / ( Max( DS,RRSe ) * MUR ) ) * ( RRSe + RRSe ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) )", "obj1": 0.9306569343065694, "obj2": 0.0461323878540627}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - Max( DS,DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6697080291970803, "obj2": 0.30826177153239315}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) + ( AMS * PN ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) ) - Min( FirstVNF_RAM_Server ,( DDR - BR ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + ( ( DS - DS ) / ( Max( MUM,MLU ) - ( RMSe - MUR ) ) ) ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.8193430656934306, "obj2": 0.1288050896941242}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6386861313868614, "obj2": 0.3474195941037767}, {"determining": "Min( ( PN - ACS ) ,Max( ( Max( CRS,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / Max( ( Const + ( DDR - ARS ) ),BR ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( MUR - Max( ( RRSe * RRSe ),Max( MLU,MUC ) ) ) ) ) / ( ( MLU + RRSe ) / ( MLU - MUM ) ) )", "obj1": 0.7937956204379562, "obj2": 0.1524457796922693}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - Max( DS,DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6678832116788321, "obj2": 0.30971618048339705}, {"determining": "Min( ( ( DDR / Const ) - ACS ) ,Max( RRS,( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( ( MLU / RCSe ) - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( MUR / ( ( MUM + RCSe ) + MLU ) ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5539226202763968}, {"determining": "( ( BR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU + ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUC - Max( DS,DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,ACS ) ) ,Max( ( ( MDR / Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe - ( Min( MLU ,MUR ) + Max( Max( RMSe,DS ),RCSe ) ) ) - RMSe ) + ( ( MUR * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.7974452554744526, "obj2": 0.14683857965955335}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) )", "choosing": "Min( Max( MUM,MUR ) ,( RMSe * ( RMSe + MUM ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5151598088354831}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - BR ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.968978102189781, "obj2": 0.01672564486057951}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( ACS / Const ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) + DS ) ,( RRSe - MUR ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( AMS + Max( ( FirstVNF_CPU / MDR ),( Const / ( CRS * Max( Const,FirstVNF_Mem ) ) ) ) ) - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,MUC ) + ( Max( MUM,( MUC + CS ) ) - CS ) )", "obj1": 0.791970802919708, "obj2": 0.15464063290246188}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - ( RCSe - ( RMSe - MUC ) ) ) ) )", "obj1": 0.7883211678832117, "obj2": 0.15813015247549184}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( RRS,AMS ) - DDR ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( MUR + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6214800965607195}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( FirstVNF_RAM_Server + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( ( DS - RMSe ) + ( ( ( ( MUC / ( RRSe * MUC ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) ) * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.8156934306569343, "obj2": 0.13801828135379043}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.458029197080292, "obj2": 0.5236459084677885}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6368613138686131, "obj2": 0.349156185105555}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12862933043563868}, {"determining": "( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - BR )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5402582739804751}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6062301222707472}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( ( Min( Max( ( Min( Const ,FirstVNF_CPU_Server ) + MDR ),Min( Max( ARS,MRS ) ,FirstVNF_Mem ) ) ,Min( FirstVNF_Mem ,ACS ) ) * CRS ) + AMS ),AMS ) )", "choosing": "Max( Min( DS ,Max( Max( MUM,( MUM + MUR ) ),RRSe ) ),Min( MUC ,MUC ) )", "obj1": 0.4197080291970803, "obj2": 0.6142618900200296}, {"determining": "( ( FirstVNF_RAM - RRS ) / ( AMS * Min( ( FirstVNF_Mem / RRS ) ,( FirstVNF_RAM * ( Max( CRS,( ( ACS / CRS ) / ACS ) ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Max( ( MUC - MUR ),CS ) ,( MUM / MUR ) )", "obj1": 0.5656934306569343, "obj2": 0.4153217172176912}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( ( Min( Max( ( Min( Const ,FirstVNF_CPU_Server ) + MDR ),Min( Max( ARS,MRS ) ,FirstVNF_Mem ) ) ,Min( FirstVNF_Mem ,ACS ) ) * CRS ) + AMS ),AMS ) )", "choosing": "Max( Min( DS ,Max( Max( MUM,( MUM + MUR ) ),RRSe ) ),Min( MUC ,MUC ) )", "obj1": 0.4197080291970803, "obj2": 0.6142618900200296}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( RRS,AMS ) - DDR ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( MUR + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.619833627135431}, {"determining": "Max( Max( Min( ( FirstVNF_RAM + RRS ) ,( ACS * Max( ( ( RRS * FirstVNF_Mem ) + RRS ),RRS ) ) ),Min( FirstVNF_RAM ,AMS ) ),Min( ARS ,MDR ) )", "choosing": "Max( ( ( MUR + MUM ) - ( Max( CS,MUM ) / ( MUC / MUM ) ) ),( CS + ( CS - Max( MUM,RMSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6290704544587624}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( ( MUC + MLU ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.009272676464718405}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( Max( ARS,BR ) - ( ARS * ( Const / Min( ( ARS * ( BR / DDR ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) )", "choosing": "( ( ( MUC - ( ( CS + Min( ( ( MUC + CS ) - RCSe ) ,MUC ) ) + ( MUM / RCSe ) ) ) * MLU ) + ( DS / MUR ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( FirstVNF_RAM_Server,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) * MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MUC ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.8175182481751825, "obj2": 0.1358646558598167}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * ( ( ( ( FirstVNF_RAM / ( DDR - RRS ) ) - DDR ) / FirstVNF_CPU ) - Const ) ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.8321167883211679, "obj2": 0.12099523756361824}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * Const ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 0.4726277372262774, "obj2": 0.5029821328881423}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * Max( Max( FirstVNF_RAM_Server,Max( ( ( FirstVNF_Mem_Server / ARS ) / DDR ),BR ) ),Min( PN ,Const ) ) ) ) )", "choosing": "( Min( Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) ,CS ) - ( RCSe / ( CS / RRSe ) ) )", "obj1": 0.8375912408759124, "obj2": 0.11659504075491585}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,( ( BR / FirstVNF_Mem_Server ) * ARS ) )", "choosing": "( Min( Min( Min( CS ,RCSe ) ,( RCSe * ( MUR + ( CS - Max( MUM,RMSe ) ) ) ) ) ,CS ) - ( RCSe / ( CS / RRSe ) ) )", "obj1": 0.8302919708029197, "obj2": 0.12345940567908058}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ),( MRS * ( ( ( ( FirstVNF_RAM / ( DDR - RRS ) ) - DDR ) / FirstVNF_CPU ) - Const ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( Min( DS ,DS ) - ( ( Min( RCSe ,Max( ( RCSe + MLU ),RCSe ) ) / RCSe ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.8266423357664233, "obj2": 0.12692866273135384}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "Max( ( RCSe / Max( ( Max( ( ( MUC + MLU ) * ( ( RCSe / MUC ) + RMSe ) ),( ( ( MUR - MUM ) + MUM ) - CS ) ) + ( DS + RRSe ) ),RMSe ) ),Min( RCSe ,DS ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "( Max( ( MDR - FirstVNF_RAM ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( DDR ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS / MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - ( ( ( RRSe + RCSe ) + DS ) - ( MUM / MUC ) ) ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( Max( MUR,RCSe ) * ( MLU + RRSe ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Max( RRSe,DS ) + ( DS + RMSe ) )", "obj1": 0.6678832116788321, "obj2": 0.30971618048339705}, {"determining": "Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( Max( ( ( RRSe + Max( RRSe,( MLU + MLU ) ) ) / ( MUC + DS ) ),( ( ( ( CS - MUC ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.656934306569343, "obj2": 0.31432581147812044}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * Max( Max( FirstVNF_RAM_Server,Max( ( ( FirstVNF_Mem_Server / ARS ) / DDR ),ARS ) ),Min( PN ,Const ) ) ) ) )", "choosing": "( Min( Min( Max( RRSe,( MLU + ( DS * MUC ) ) ) ,DS ) ,MUM ) - ( MUC * Max( RRSe,MUR ) ) )", "obj1": 0.8375912408759124, "obj2": 0.11659504075491585}, {"determining": "Min( ( ACS - AMS ) ,Max( RRS,( MRS + ( ( FirstVNF_RAM_Server - AMS ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( RCSe + ( ( MUR * ( MUR / Max( RRSe,MLU ) ) ) * ( ( MUR - DS ) - ( ( Min( Max( ( DS + MLU ),RCSe ) ,RCSe ) / RCSe ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.12099523756361824}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( RMSe ,MUR ) - ( RRSe / MUM ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( MDR - ( Max( CRS,( Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( FirstVNF_RAM_Server + ARS ) - FirstVNF_Mem ) ) ) / ACS ) ) / Max( RRS,FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR * MLU ) + ( RCSe - MUM ) ) + Min( Max( MUM,MUC ) ,Max( RMSe,RRSe ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46721314469668435}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( AMS,( AMS + ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) ) ) )", "choosing": "Max( Min( DS ,Max( ( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) ),CS ) ),( Min( MUM ,MUM ) + ( ( CS - ( ( ( CS - MUC ) + ( DS + Max( MUM,MUR ) ) ) + RMSe ) ) / MLU ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6800450654393029}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( ( DDR - BR ),( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),RMSe ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.1601773588553094}], "8": [{"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( AMS + ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ),AMS ) )", "choosing": "Max( Min( DS ,RMSe ),( Min( MUM ,MUM ) + ( ( ( RRSe * MUC ) - ( ( ( CS - MUC ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) ) / MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6825966138664078}, {"determining": "Min( ( ( ACS / Min( PN ,( Const + ( FirstVNF_RAM_Server + CRS ) ) ) ) - ACS ) ,( AMS * ( Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,FirstVNF_Mem ),ARS ) - ( DDR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( MUM,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( Max( DS,CS ) + Min( DS ,CS ) ) + MLU ) / MUR ),Min( RCSe ,Max( CS,( ( MUC - RRSe ) - ( RMSe - MUR ) ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( AMS + ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ),AMS ) )", "choosing": "( Min( Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) ,CS ) - ( RCSe / ( CS / RRSe ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6825966138664078}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( BR - MDR ) ) + Min( ( ( Min( ARS ,FirstVNF_Mem ) * BR ) * MDR ) ,( MRS / MDR ) ) )", "choosing": "( ( RMSe - RCSe ) - Max( ( ( RRSe * ( MLU + ( MLU + MLU ) ) ) / ( ( ( ( CS / MUM ) * MUR ) / DS ) / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16289575186331304}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + DDR ) ) / Const ) ) - Max( ( ( FirstVNF_RAM_Server + Min( ( ( DDR - FirstVNF_Mem ) * FirstVNF_RAM ) ,FirstVNF_CPU ) ) / FirstVNF_CPU_Server ),( ( Const * BR ) * MDR ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( ( RRSe / DS ) - MLU ) ) * MUC ) ) * ( CS * ( RMSe - MUM ) ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - ( ACS / Max( ( ( DDR - ARS ) + Const ),( AMS / Max( BR,( PN - MRS ) ) ) ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.885036496350365, "obj2": 0.07485736993302836}, {"determining": "( ( ( ( ( BR / ( ( RRS * Const ) * MDR ) ) * ARS ) - ( FirstVNF_RAM_Server - AMS ) ) - MRS ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Max( Max( FirstVNF_RAM_Server,Max( DDR,BR ) ),Min( PN ,Const ) ) / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUR * MLU ) + Min( MUC ,RRSe ) ) + Min( Max( MUM,MUC ) ,Max( ( RCSe / ( CS / RRSe ) ),RRSe ) ) )", "obj1": 0.7153284671532847, "obj2": 0.2533364925579013}, {"determining": "Min( ( ( ARS + ARS ) + FirstVNF_RAM ) ,Max( ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + Min( DDR ,( ( ACS + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) ) + FirstVNF_RAM ) ),ARS ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) - Min( ( ( MUM + CS ) + ( DS / ( RRSe / MLU ) ) ) ,Max( MUC,( RRSe - MUM ) ) ) )", "obj1": 0.7846715328467153, "obj2": 0.16233098434928311}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5474452554744526, "obj2": 0.42034098942979026}, {"determining": "( ( MRS - ( ( ( BR / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) * ARS ) - ( FirstVNF_RAM_Server - AMS ) ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Max( Max( FirstVNF_RAM_Server,Max( CRS,BR ) ),Min( PN ,Const ) ) / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUR * MLU ) + ( DS / RRSe ) ) + Min( Max( MUM,MUC ) ,Max( ( RCSe / ( CS / RRSe ) ),RRSe ) ) )", "obj1": 0.7043795620437956, "obj2": 0.2624515989103508}, {"determining": "Min( ( ( ARS + ARS ) + FirstVNF_RAM ) ,Max( ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + Min( DDR ,( ( ACS + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) ) + FirstVNF_RAM ) ),ARS ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) - Min( ( ( MUM + CS ) + ( DS / ( RRSe / MLU ) ) ) ,Max( MUC,( RRSe - MUM ) ) ) )", "obj1": 0.6167883211678832, "obj2": 0.3670620790147869}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,( RMSe - MUM ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) )", "choosing": "Min( Max( MUM,MUR ) ,( RMSe * ( RMSe + MUM ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10566974413783048}, {"determining": "( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( Const,BR ) / ( RRS / RRS ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( Min( ACS ,MRS ) / PN ) ) ) + ( ( AMS + MRS ) + ( ACS * ARS ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / RRSe ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) )", "choosing": "Min( Max( MUM,MUR ) ,( RMSe * ( RMSe + MUM ) ) )", "obj1": 0.7883211678832117, "obj2": 0.10443023359017685}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( MUM + ( ( MUR * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.9288321167883211, "obj2": 0.052725553340230824}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( ( ( Min( Max( ( Min( Const ,FirstVNF_CPU_Server ) + MDR ),Min( Max( ARS,MRS ) ,FirstVNF_Mem ) ) ,Min( FirstVNF_Mem ,ACS ) ) * CRS ) + AMS ),AMS ) )", "choosing": "Max( Min( DS ,Max( Max( MUM,( MUM + MUR ) ),RRSe ) ),Min( MUC ,MUC ) )", "obj1": 0.41058394160583944, "obj2": 0.6800450654393029}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / MRS ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4238797711153094}, {"determining": "Max( Max( Min( ( FirstVNF_RAM + RRS ) ,( ACS * Max( ( ( RRS * FirstVNF_Mem ) + RRS ),RRS ) ) ),Min( FirstVNF_RAM ,AMS ) ),Min( ARS ,MDR ) )", "choosing": "Max( ( ( MUR + MUM ) - ( Max( CS,MUM ) / ( MUC / MUM ) ) ),( CS + ( CS - Max( MUM,RMSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6290704544587624}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( CRS,( DDR / AMS ) ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + RCSe )", "obj1": 0.4343065693430657, "obj2": 0.5742254118550716}, {"determining": "Min( ( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Max( Max( ( ( FirstVNF_Mem_Server / ARS ) / DDR ),RRS ),AMS ) ) ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( Min( Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) ,CS ) ,DS ) ,MUM ) - ( MUC * Max( RRSe,MUR ) ) )", "obj1": 0.9616788321167883, "obj2": 0.03197588156458789}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "Min( ( AMS * Min( MRS ,Max( Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,( ( CRS / FirstVNF_Mem_Server ) * ARS ) ) ),ACS ) ) ) ,( FirstVNF_Mem_Server - CRS ) )", "choosing": "( Max( ( ( RRSe + ( Min( RCSe ,MUM ) + MUR ) ) / ( MUC + DS ) ),( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6715328467153284, "obj2": 0.29447691690448613}, {"determining": "Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "( ( MLU * ( MUR - Max( DS,DS ) ) ) + ( Min( Min( DS ,( MUR + ( ( RMSe / ( CS + RRSe ) ) / MUC ) ) ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6824817518248175, "obj2": 0.2822142933833151}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server * ARS ) / CRS ) ) ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) )", "choosing": "( ( RMSe / ( RRSe + ( Min( MUR ,( Min( RRSe ,Min( MUM ,MUC ) ) - ( CS / ( RRSe * DS ) ) ) ) - ( ( ( ( RRSe / MUC ) / ( MUM * CS ) ) * ( MUC + ( RMSe - RMSe ) ) ) * RMSe ) ) ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182884}, {"determining": "( Min( PN ,FirstVNF_CPU ) + ( FirstVNF_Mem / ( RRS / Const ) ) )", "choosing": "Max( Min( DS ,Max( CS,RRSe ) ),( ( MLU + CS ) + ( MUR / RRSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Min( Max( FirstVNF_Mem_Server,ACS ) ,( AMS * Min( MRS ,Max( CRS,ACS ) ) ) )", "choosing": "( ( ( MUM / RCSe ) + ( MUR * RCSe ) ) + Max( ( ( ( DS * CS ) / ( DS + MUC ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( ( RRSe / CS ),CS ) ) )", "obj1": 0.6824817518248175, "obj2": 0.2822142933833151}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Const ) ,( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) * MLU ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6295620437956204, "obj2": 0.36403164491191037}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / Const ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS - RCSe ) + Max( MLU,MUC ) ) / ( Min( Min( DS ,DS ) ,( CS / MUC ) ) - ( RCSe / ( CS / CS ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.5002644904967156}, {"determining": "( BR - ( ( BR / BR ) * ( FirstVNF_Mem - ( FirstVNF_Mem * Const ) ) ) )", "choosing": "( Min( Max( MUM,( Min( RMSe ,MUR ) - Min( ( RCSe + ( Max( CS,RRSe ) + CS ) ) ,Max( ( ( DS / RCSe ) + MUR ),RRSe ) ) ) ) ,Max( RMSe,RRSe ) ) - Min( RCSe ,DS ) )", "obj1": 0.4562043795620438, "obj2": 0.5402582739804751}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6062301222707472}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.458029197080292, "obj2": 0.5236459084677885}, {"determining": "Min( ( ACS - Const ) ,Max( Const,BR ) )", "choosing": "( RCSe + ( ( MUR * ( MUR / Max( RRSe,MLU ) ) ) * ( Min( MUR ,DS ) - ( ( Min( RCSe ,Max( ( DS + MLU ),RCSe ) ) / RCSe ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.6167883211678832, "obj2": 0.3670620790147869}, {"determining": "( MDR - ( ( Const + AMS ) - Max( RRS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( Max( Min( Min( MUC ,( Min( MLU ,DS ) + Max( RRSe,CS ) ) ) ,( Min( MLU ,( MUR - DS ) ) - ( ( RRSe - RMSe ) * ( CS / MUC ) ) ) ),MUC ) ,DS ) - RCSe ) + ( CS - ( MLU + Min( MUM ,( Max( MLU,MUM ) - Min( MLU ,Min( ( RMSe - CS ) ,( MUC + MLU ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46721314469668435}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) ,CS ) ,DS ) ,MUM ) - ( MUC * Max( RRSe,MUR ) ) )", "obj1": 0.9288321167883211, "obj2": 0.052725553340230824}, {"determining": "Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( RRSe + ( MUC * Max( RRSe,MUR ) ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6478102189781022, "obj2": 0.3469792904456927}, {"determining": "( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( Const,BR ) / ( RRS / RRS ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( Min( ACS ,MRS ) / PN ) ) ) + ( ( AMS + MRS ) + ( ACS * ARS ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / RRSe ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "Min( ( ( DDR / Const ) - ACS ) ,Max( RRS,( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( ( MLU / RCSe ) - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( MUR / ( ( MUM + RCSe ) + MLU ) ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5539226202763968}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( BR / Min( ( Min( ACS ,DDR ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * ( MUR - Max( DS,DS ) ) ) + ( Min( Min( DS ,( MUR + RMSe ) ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6551094890510949, "obj2": 0.32392394230469007}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) )", "choosing": "Min( Max( MUM,MUR ) ,( RMSe * ( RMSe + MUM ) ) )", "obj1": 0.7883211678832117, "obj2": 0.10443023359017685}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - ( AMS + Max( ( FirstVNF_RAM_Server + ( Max( FirstVNF_RAM,FirstVNF_RAM ) / ( FirstVNF_CPU + Max( ( FirstVNF_CPU - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) ) ),( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) + DDR ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe * MUM ) * ( DS * DS ) ),( Min( ( MLU - RMSe ) ,( MUC / MUR ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.019126724555490204}, {"determining": "Min( ( ARS - PN ) ,( FirstVNF_RAM / ( Min( FirstVNF_Mem ,Min( ( ( DDR / ACS ) / ( ( FirstVNF_CPU_Server / ACS ) + FirstVNF_Mem_Server ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( CS - ( CS + Max( MUC,MUM ) ) ),Max( MLU,RCSe ) ) - Min( Max( MUM,( RMSe - MUM ) ) ,( RCSe * MUC ) ) )", "obj1": 0.5474452554744526, "obj2": 0.42034098942979026}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) ) ) )", "choosing": "( ( ( RRSe - ( Min( MLU ,MUR ) + Max( Max( RMSe,DS ),RCSe ) ) ) - RMSe ) + ( ( MUR * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.656934306569343, "obj2": 0.31432581147812044}, {"determining": "( ( ( ARS / FirstVNF_Mem_Server ) / ( AMS * FirstVNF_RAM_Server ) ) - ( ARS - ARS ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - MUR ) + Min( ( Min( MLU ,RCSe ) - MUR ) ,Min( MUC ,( CS - ( ( MLU * Max( Min( MUC ,MUR ),MLU ) ) + MUM ) ) ) ) )", "obj1": 0.9890510948905109, "obj2": 0.011376240161121194}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( MRS + FirstVNF_CPU ) * ( MDR + ( ACS / AMS ) ) ),Min( RRS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe + ( Max( ( ( MUM * MLU ) + ( ( CS + RRSe ) - Min( DS ,Max( ( RCSe / RMSe ),Min( CS ,DS ) ) ) ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,MUM ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RMSe + RRSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.61095441538136}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( DS - DS ) / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16289575186331304}, {"determining": "Min( ( ARS - MDR ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + Max( ( MUM * RCSe ),( DS - MUR ) ) ) ) ) / ( MUM / RRSe ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - CS ) )", "obj1": 0.4908759124087591, "obj2": 0.47991760977055486}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4682178853141998}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),( ( Const * BR ) * MDR ) ) ) )", "choosing": "( Max( MLU,MUC ) + ( CS - ( MLU + Min( MUM ,( Max( MLU,MUM ) - Min( MLU ,Min( ( RMSe - CS ) ,( MUC + MLU ) ) ) ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45317346513960133}, {"determining": "( ( FirstVNF_CPU_Server / BR ) / ( ( BR * ( Const / Min( ( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) * ARS ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( MLU,MUC ) + MUC ),MUR ) ) ,( ( Max( RCSe,CS ) - DS ) + DS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( Min( MRS ,Max( FirstVNF_RAM,ACS ) ),DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * ( MUR - Max( DS,DS ) ) ) + ( MLU + MLU ) )", "obj1": 0.666058394160584, "obj2": 0.31402177701225975}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( RRS,AMS ) - DDR ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( MUR + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.619833627135431}, {"determining": "( Min( ACS ,( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM / ( DDR - DDR ) ) - DDR ) ) - FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Min( ( ( ACS * FirstVNF_Mem_Server ) / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) / Const ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( ( ( MUC * MUM ) + DS ) ,RCSe ) ) + ( RMSe - MUC ) ) ) * ( RRSe * MUC ) ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6332116788321168, "obj2": 0.3578112436636987}, {"determining": "( Max( ( Min( ACS ,Const ) / ARS ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( BR,BR ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( ( ( CS + DS ) * ( CS + DS ) ) ,Max( ( MLU + MLU ),MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * ( MUR - Max( DS,DS ) ) ) + ( Min( Min( DS ,( MUR + Min( DS ,DS ) ) ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6697080291970803, "obj2": 0.30826177153239315}, {"determining": "( ( ( ARS / FirstVNF_Mem_Server ) * ARS ) - ( ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) - Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server + ( MRS + FirstVNF_CPU_Server ) ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) )", "choosing": "( ( RCSe - MLU ) - ( ( MUM * MLU ) / ( CS - ( RRSe * MUR ) ) ) )", "obj1": 0.6514598540145985, "obj2": 0.3299829191751304}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5127140475254383}, {"determining": "( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) )", "choosing": "( Max( MLU,MUC ) + ( CS - Max( MUM,MUR ) ) )", "obj1": 0.6496350364963503, "obj2": 0.33341004903937166}, {"determining": "Min( ( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Max( Max( ( ( FirstVNF_Mem_Server / ARS ) / DDR ),RRS ),AMS ) ) ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( Min( Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) ,CS ) ,DS ) ,MUM ) - ( MUC * Max( RRSe,MUR ) ) )", "obj1": 0.9616788321167883, "obj2": 0.03197588156458789}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server * ARS ) / CRS ) ) ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) )", "choosing": "( ( RMSe / ( RRSe + ( Min( MUR ,( Min( RRSe ,Min( MUM ,MUC ) ) - ( CS / ( RRSe * DS ) ) ) ) - ( ( ( ( RRSe / MUC ) / ( MUM * CS ) ) * ( MUC + ( RMSe - RMSe ) ) ) * RMSe ) ) ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182884}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( RRS,AMS ) - DDR ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( MUR + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6214800965607195}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5127140475254383}, {"determining": "Min( ( ( ACS / Min( PN ,( Const + ( FirstVNF_RAM_Server + CRS ) ) ) ) - ACS ) ,( AMS * ( Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,FirstVNF_Mem ),ARS ) - ( DDR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( MUM,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( Max( DS,CS ) + Min( DS ,CS ) ) + MLU ) / MUR ),Min( RCSe ,Max( CS,( ( MUC - RRSe ) - ( RMSe - MUR ) ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4238797711153094}, {"determining": "( ( BR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU + ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + RCSe ) - Min( ( MUC - Max( DS,DS ) ) ,( RCSe * MUC ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( AMS * PN ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS - RCSe ) + Max( MLU,MUC ) ) / ( Max( MUM,MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.458029197080292, "obj2": 0.5236459084677885}, {"determining": "( Min( FirstVNF_Mem ,PN ) + Max( ( AMS + ( Min( Max( PN,BR ) ,( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) - Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM_Server ) ) ) * DDR ) ),AMS ) )", "choosing": "Max( ( RCSe / Max( ( Max( ( ( MUC + MUC ) * ( ( RCSe / MUC ) + RMSe ) ),( ( ( MUR - MUM ) + MUM ) - CS ) ) + ( RMSe / Max( MUR,DS ) ) ),RMSe ) ),Min( RCSe ,DS ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( MDR + ( ( ( ACS - Const ) - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( Min( DS ,DS ) - ( Max( DS,CS ) - Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5539226202763968}, {"determining": "( ( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - BR ) ) ) - Min( FirstVNF_RAM_Server ,( DDR - BR ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( ( MUC / CS ) / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.9708029197080292, "obj2": 0.015612740109357096}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( CRS,( DDR / AMS ) ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + RCSe )", "obj1": 0.4470802919708029, "obj2": 0.5461634059793676}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( RRSe + ( MUC * Max( RRSe,MUR ) ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6386861313868614, "obj2": 0.3474195941037767}, {"determining": "Max( Max( ACS,( ACS / FirstVNF_CPU_Server ) ),( ( ACS - ( ( Const - ( Const + FirstVNF_Mem_Server ) ) + MRS ) ) + BR ) )", "choosing": "Max( MUR,Min( RMSe ,( Min( Min( ( ( MLU + MUM ) - ( ( RCSe * MUR ) / ( RCSe * RMSe ) ) ) ,RRSe ) ,DS ) / ( Max( MUR,RCSe ) / DS ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_Mem_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MRS ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.48175182481751827, "obj2": 0.48721730846953276}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( AMS,( AMS + ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "Max( Min( DS ,Max( CS,RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( ( ( CS - MUC ) + ( DS + Max( MUM,MUR ) ) ) + RMSe ) ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5053581732840018}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_Mem_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MRS ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( Max( MUM,MUC ) * MLU ) + ( MUC - MUR ) )", "obj1": 0.48175182481751827, "obj2": 0.48721730846953276}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6368613138686131, "obj2": 0.349156185105555}, {"determining": "( Max( ( MDR - FirstVNF_RAM ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( DDR ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS / MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - ( ( ( RRSe + RCSe ) + DS ) - ( MUM / MUC ) ) ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( Max( MUR,RCSe ) * ( MLU + RRSe ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( Max( FirstVNF_CPU_Server,( ( ACS - CRS ) - ( ARS + Max( DDR,Const ) ) ) ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( MUR - Max( ( ( DS * MUC ) + DS ),( DS + MUC ) ) ) + RCSe )", "obj1": 0.44343065693430656, "obj2": 0.5497097484471484}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),( ( Const * BR ) * MDR ) ) ) )", "choosing": "( ( DS - ( DS * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45317346513960133}, {"determining": "Max( ( Min( FirstVNF_CPU_Server ,MRS ) / RRS ),Min( ARS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RCSe / Max( ( Max( ( ( MUC + MLU ) * ( ( RCSe / MUR ) + RMSe ) ),( Max( MLU,RRSe ) - CS ) ) + ( DS + RRSe ) ),MUM ) ),Min( RCSe ,DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6290704544587624}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( ( MUC + MLU ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.009272676464718405}, {"determining": "Min( ( ARS - MDR ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + ( ( DS - DS ) / ( Max( MUM,MLU ) - ( RMSe - MUR ) ) ) ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.4908759124087591, "obj2": 0.47991760977055486}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / Min( ( FirstVNF_RAM - BR ) ,BR ) ) ) + Min( ( ( Const * BR ) - MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU + ( MLU - MUR ) ) - Min( MUR ,MUM ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5053581732840018}, {"determining": "Min( ( ( BR - MDR ) / FirstVNF_CPU_Server ) ,Max( Const,BR ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) - Min( MLU ,Min( ( RMSe - CS ) ,RCSe ) ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883076}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - Min( Max( ( FirstVNF_RAM - DDR ),CRS ) ,Const ) ) ) ) - Min( FirstVNF_RAM_Server ,( PN - BR ) ) )", "choosing": "Max( ( RCSe / Max( ( Max( ( ( ( RMSe / RRSe ) * ( RRSe + CS ) ) * ( ( RCSe / MUC ) + RMSe ) ),( ( ( MUR - MUM ) + MUM ) - CS ) ) + ( DS + RRSe ) ),RMSe ) ),Min( RCSe ,DS ) )", "obj1": 0.9306569343065694, "obj2": 0.0461323878540627}, {"determining": "( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - BR )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5402582739804751}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( CRS,( DDR / AMS ) ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + RCSe )", "obj1": 0.4470802919708029, "obj2": 0.5461634059793676}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / Min( ( FirstVNF_RAM_Server - Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,ACS ) ) ,BR ) ) ) + Min( ( ( Const * BR ) - MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU + ( MLU - MUR ) ) - Min( MUR ,MUM ) ) / ( ( ( DS - RMSe ) + RCSe ) + ( RMSe - MUR ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5480723728462974}, {"determining": "( ( ARS + AMS ) / ( ( BR * ( Const / Min( ( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) * ARS ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * ( MLU / MUR ) ) + MLU )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( MDR - FirstVNF_RAM_Server ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( MDR / FirstVNF_Mem ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( Min( ( MUM + MUM ) ,Max( MUM,RCSe ) ) - Max( DS,DS ) ) * MLU ) + ( RMSe / MUM ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6062301222707472}, {"determining": "( Min( ACS ,( ( FirstVNF_RAM_Server + ARS ) - FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) * ( RRSe * MUC ) ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.635036496350365, "obj2": 0.3536252940534571}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Max( RRSe,DS ) + Max( MUM,MUR ) )", "obj1": 0.6678832116788321, "obj2": 0.30971618048339705}, {"determining": "( Min( ACS ,( ( FirstVNF_RAM_Server + ARS ) - FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.635036496350365, "obj2": 0.3536252940534571}, {"determining": "( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * Min( Const ,Min( ( MDR / Max( FirstVNF_CPU_Server,PN ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( CS - ( ( ( CS * Max( RRSe,DS ) ) + MUR ) * Min( DS ,( MUC * ( DS / CS ) ) ) ) ) ) ) - Min( ( MUC - Max( DS,DS ) ) ,( MUM * MUC ) ) )", "obj1": 0.6496350364963503, "obj2": 0.33341004903937166}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( ( MUC / ( RRSe * MUC ) ) ,Max( DS,DS ) ) ,MUM ) - ( RCSe / MUM ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( AMS,( AMS + ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) ) ) )", "choosing": "Max( Min( DS ,Max( ( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) ),CS ) ),( Min( MUM ,MUM ) + ( ( CS - ( ( ( CS - MUC ) + ( DS + Max( MUM,MUR ) ) ) + RMSe ) ) / MLU ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6800450654393029}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,Const ),Min( AMS ,( FirstVNF_Mem / PN ) ) ) - Min( DDR ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MLU + MUM ) - ( ( MUM - RRSe ) * ( RMSe / MUM ) ) )", "obj1": 0.9908759124087592, "obj2": 0.009272676464718405}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( RRSe + ( MUC * Max( RRSe,MUR ) ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6697080291970803, "obj2": 0.30826177153239315}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - Max( DS,DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6678832116788321, "obj2": 0.30971618048339705}], "9": [{"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( MDR - FirstVNF_RAM_Server ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( MDR / FirstVNF_Mem ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( Min( ( MUM + MUM ) ,Max( MUM,RCSe ) ) - Max( DS,DS ) ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / Min( PN ,( Const + ( FirstVNF_RAM_Server + CRS ) ) ) ) - ACS ) ,( AMS * ( Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,FirstVNF_Mem ),ARS ) - ( DDR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( MUM,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( Max( DS,CS ) + Min( DS ,CS ) ) + MLU ) / MUR ),Min( RCSe ,Max( CS,( ( MUC - RRSe ) - ( RMSe - MUR ) ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + ( Max( MLU,MUC ) + ( CS - Max( MUM,MUR ) ) ) ) )", "obj1": 0.40145985401459855, "obj2": 0.6740710532886263}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( RRS - ARS ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) * PN ) + Max( BR,MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( Const * BR ) * MDR ) ) )", "choosing": "( ( Min( Min( DS ,( MUR * Min( DS ,( RCSe * MUC ) ) ) ) ,MUM ) - ( RCSe / MUM ) ) / ( DS - DS ) )", "obj1": 0.6934306569343066, "obj2": 0.24181272983971663}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( DDR * Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) - ( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( Min( BR ,FirstVNF_Mem ) ,MDR ) ) ) )", "choosing": "( ( MUR + ( RMSe / ( ( RCSe - ( Min( RMSe ,RRSe ) - MUR ) ) * MLU ) ) ) * ( Min( ( RRSe - ( RRSe - DS ) ) ,CS ) / RMSe ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16289575186331304}, {"determining": "Min( ( ARS * MDR ) ,Min( FirstVNF_RAM ,( MRS * ( Min( DDR ,AMS ) + ( BR - MDR ) ) ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( ( RRSe + ( MLU + ( ( CS + DS ) + MLU ) ) ) / ( RRSe / RMSe ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7554744525547445, "obj2": 0.1391476352445787}, {"determining": "Min( ( ARS - PN ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5474452554744526, "obj2": 0.42034098942979026}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10566974413783047}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - ( ACS / Max( ( ( DDR - ARS ) + Const ),( AMS / Max( BR,( PN - MRS ) ) ) ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.885036496350365, "obj2": 0.07485736993302836}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( RRS,( FirstVNF_Mem_Server * ACS ) ) - FirstVNF_Mem_Server ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) / Max( MLU,MUM ) ),( ( CS / ( RRSe / RMSe ) ) + ( RCSe / MUC ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6261428132880061}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( BR - MDR ) ) + Min( ( ( Min( ARS ,FirstVNF_Mem ) * BR ) * MDR ) ,( MRS / MDR ) ) )", "choosing": "( ( RMSe - RCSe ) - Max( ( ( RRSe * ( MLU + ( MLU + MLU ) ) ) / ( ( ( ( CS / MUM ) * MUR ) / DS ) / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16289575186331304}, {"determining": "Min( ( ( ARS + ARS ) + FirstVNF_RAM ) ,Max( ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + Min( DDR ,( ( ACS + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) ) + FirstVNF_RAM ) ),ARS ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) - Min( ( ( MUM + CS ) + ( DS / ( RRSe / MLU ) ) ) ,Max( MUC,( RRSe - MUM ) ) ) )", "obj1": 0.6167883211678832, "obj2": 0.3670620790147869}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,( RMSe - MUM ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "( ( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - BR ) ) ) - Min( ( ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ,( DDR - BR ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( RCSe / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.9525547445255474, "obj2": 0.025498373636745772}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - ( ACS / Max( ( Const + ( DDR - ARS ) ),BR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.885036496350365, "obj2": 0.07485736993302836}, {"determining": "( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( Const,BR ) / ( RRS / RRS ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( Min( ACS ,MRS ) / PN ) ) ) + ( ( AMS + MRS ) + ( ACS * ARS ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / RRSe ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) )", "choosing": "Min( Max( MUM,MUR ) ,( RMSe * ( RMSe + MUM ) ) )", "obj1": 0.7883211678832117, "obj2": 0.10443023359017684}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( MUM + ( ( MUR * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.9288321167883211, "obj2": 0.052725553340230824}, {"determining": "Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "( ( MLU * ( MUR - Max( DS,DS ) ) ) + ( Min( Min( DS ,( MUR + ( ( RMSe / ( CS + RRSe ) ) / MUC ) ) ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6824817518248175, "obj2": 0.2822142933833151}, {"determining": "Min( ( ( ACS / Min( PN ,( Const + ( FirstVNF_RAM_Server + CRS ) ) ) ) - ACS ) ,( AMS * ( Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,FirstVNF_Mem ),ARS ) - ( DDR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( MUM,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( Max( DS,CS ) + Min( DS ,CS ) ) + MLU ) / MUR ),Min( RCSe ,Max( CS,( ( MUC - RRSe ) - ( RMSe - MUR ) ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4238797711153094}, {"determining": "( FirstVNF_CPU_Server + Max( AMS,( AMS + ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( ( ( CS - MUC ) + ( DS + Max( MUM,MUR ) ) ) + RMSe ) ) ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( DS - DS ) / Max( ( ( RRSe * MUC ) - ( ( ( CS - MUC ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.7481751824817519, "obj2": 0.14133249796582245}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( CRS,( DDR / AMS ) ) ) ) - ( ARS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + ( RMSe + MUM ) )", "obj1": 0.4489051094890511, "obj2": 0.5453459864532385}, {"determining": "( ( ( ARS / FirstVNF_Mem_Server ) / ( AMS * FirstVNF_RAM ) ) - ( ( BR / MRS ) - PN ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - MUR ) + Min( ( Min( MLU ,DS ) - MUR ) ,Min( MUC ,( CS - ( ( MLU * Max( Min( MUM ,MUR ),MLU ) ) + MUM ) ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,ACS ) ) ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) / ( RRS * ( ( ACS / ARS ) * BR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MUR / MUM ) + Max( MUC,CS ) )", "obj1": 0.9781021897810219, "obj2": 0.008258663426806354}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Const ) ,( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) * MLU ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6295620437956204, "obj2": 0.36403164491191037}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + DDR ) ) / Const ) ) - Max( ( ( FirstVNF_RAM_Server + Min( ( ( DDR - FirstVNF_Mem ) * FirstVNF_RAM ) ,FirstVNF_CPU ) ) / FirstVNF_CPU_Server ),( ( Const * BR ) * MDR ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( ( RRSe / DS ) - MLU ) ) * MUC ) ) * ( CS * ( RMSe - MUM ) ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6062301222707472}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "Min( ( ACS + FirstVNF_RAM_Server ) ,( AMS * ( BR * Const ) ) )", "choosing": "( ( RCSe - DS ) - ( RCSe - RMSe ) )", "obj1": 0.6715328467153284, "obj2": 0.29447691690448613}, {"determining": "Min( ( ACS - Const ) ,Max( Const,BR ) )", "choosing": "( RCSe + ( ( MUR * ( MUR / Max( RRSe,MLU ) ) ) * ( Min( MUR ,DS ) - ( ( Min( RCSe ,Max( ( DS + MLU ),RCSe ) ) / RCSe ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.6167883211678832, "obj2": 0.3670620790147869}, {"determining": "Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + RCSe )", "obj1": 0.6824817518248175, "obj2": 0.2822142933833151}, {"determining": "( ( Max( FirstVNF_Mem,CRS ) / MDR ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Min( MLU ,MUC ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( ( RRSe - CS ),CS ) ) )", "obj1": 0.6678832116788321, "obj2": 0.3075504592316319}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - ( AMS + Max( ( FirstVNF_RAM_Server + ( Max( FirstVNF_RAM,FirstVNF_RAM ) / ( FirstVNF_CPU + Max( ( FirstVNF_CPU - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) ) ),( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) + DDR ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe * MUM ) * ( DS * DS ) ),( Min( ( MLU - RMSe ) ,( MUC / MUR ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.019126724555490204}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) ,CS ) ,DS ) ,MUM ) - ( MUC * Max( RRSe,MUR ) ) )", "obj1": 0.9288321167883211, "obj2": 0.052725553340230824}, {"determining": "( ( FirstVNF_CPU + DDR ) / Max( ARS,( BR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS - ( RMSe + DS ) ) + MLU ) / ( RRSe * ( MUC - RMSe ) ) ) + Max( MUC,( DS / RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5666069369344552}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server * ARS ) / CRS ) ) ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) )", "choosing": "( ( RMSe / ( RRSe + ( Min( MUR ,( Min( RRSe ,Min( MUM ,MUC ) ) - ( CS / ( RRSe * DS ) ) ) ) - ( ( ( ( RRSe / MUC ) / ( MUM * CS ) ) * ( MUC + ( RMSe - RMSe ) ) ) * RMSe ) ) ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182884}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( Max( Const,BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) - ( Max( FirstVNF_CPU_Server,( ( ACS - CRS ) - ( ARS + Max( DDR,Const ) ) ) ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - ( ( DS * MUC ) + DS ) ) - DS ) ,( ( MUM / Min( RCSe ,RRSe ) ) - MLU ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server * ARS ) / CRS ) ) ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) )", "choosing": "( ( RMSe / ( RRSe + ( Min( MUR ,( Min( RRSe ,Min( MUM ,MUC ) ) - ( CS / ( RRSe * DS ) ) ) ) - ( ( ( ( RRSe / MUC ) / ( MUM * CS ) ) * ( MUC + ( RMSe - RMSe ) ) ) * RMSe ) ) ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182884}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( BR / Min( ( Min( ACS ,DDR ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * ( MUR - Max( DS,DS ) ) ) + ( Min( Min( DS ,( MUR + RMSe ) ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6551094890510949, "obj2": 0.32392394230469007}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( CS - ( ( ( CS * Max( RRSe,RMSe ) ) + MUR ) * Min( DS ,( MUC * ( DS / CS ) ) ) ) ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( MUM * MUC ) ) )", "obj1": 0.7883211678832117, "obj2": 0.10443023359017684}, {"determining": "( Max( FirstVNF_RAM,CRS ) / ( ( CRS - ARS ) + FirstVNF_CPU_Server ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS - RMSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5693262046144868}, {"determining": "Min( ( PN - ARS ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * ( ( FirstVNF_CPU * Const ) + ( Const / ( FirstVNF_Mem_Server / ( RRS * ACS ) ) ) ) ) * MRS ) ) )", "choosing": "( ( Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Min( CS ,CS ) - MUR ) ) ) - MUR ) ) + ( RRSe + DS ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.5474452554744526, "obj2": 0.42034098942979026}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5127140475254383}, {"determining": "Min( ( ARS - MDR ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + Max( ( MUM * RCSe ),( DS - MUR ) ) ) ) ) / ( MUM / RRSe ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - CS ) )", "obj1": 0.4908759124087591, "obj2": 0.47991760977055486}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( BR / Min( ( Min( ACS ,DDR ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( ( MUR - Max( DS,DS ) ) * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.5, "obj2": 0.4608545816327359}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,Const ),Min( AMS ,( FirstVNF_Mem / PN ) ) ) - Min( DDR ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MLU + MUM ) - ( ( MUM - RRSe ) * ( RMSe / MUM ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5792331432735659}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.656934306569343, "obj2": 0.31432581147812044}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6441605839416058, "obj2": 0.340337594570935}, {"determining": "( ( BR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU + ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + RCSe ) - Min( ( MUC - Max( DS,DS ) ) ,( RCSe * MUC ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( RRSe + ( RRSe + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( RRS,AMS ) - DDR ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( MUR + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.619833627135431}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4682178853141998}, {"determining": "Min( ( AMS * Min( MRS ,Max( Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,( ( CRS / FirstVNF_Mem_Server ) * ARS ) ) ),ACS ) ) ) ,( FirstVNF_Mem_Server - CRS ) )", "choosing": "( Max( ( ( RRSe + ( Min( RCSe ,MUM ) + MUR ) ) / ( MUC + DS ) ),( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6715328467153284, "obj2": 0.29447691690448613}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( MDR - FirstVNF_RAM_Server ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( MDR / FirstVNF_Mem ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( Min( ( MUM + MUM ) ,Max( MUM,RCSe ) ) - Max( DS,DS ) ) * MLU ) + ( RMSe / MUM ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( MRS - Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,RRS ) ) ) + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,( ( ( DDR * ARS ) * Const ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe / RRSe ),( CS * ( Max( RMSe,MUM ) - Min( RMSe ,MUC ) ) ) ) - ( ( CS - RCSe ) + ( ( CS / MUM ) * DS ) ) ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RCSe ) - Min( ( MUC - Max( ( ( ( MUC - Max( DS,DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) ),DS ) ) ,( RCSe * MUC ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5539226202763968}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / Const ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS - RCSe ) + Max( MLU,MUC ) ) / ( Min( Min( DS ,DS ) ,( CS / MUC ) ) - ( RCSe / ( CS / CS ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.5002644904967156}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / MRS ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4238797711153094}, {"determining": "( Min( ACS ,( Const - Max( Max( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / Max( RRS,FirstVNF_RAM ) ) * BR ),( MDR - FirstVNF_RAM ) ),RRS ) ) ) / ( Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),( Const / Min( ( MDR / ( ACS / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + ( ( CS + MLU ) - RMSe ) ) + ( ( ( MUR - Min( RMSe ,Max( Max( CS,MUM ),MUM ) ) ) + MUM ) - CS ) )", "obj1": 0.6423357664233577, "obj2": 0.34280095084410117}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( MUR + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.61095441538136}, {"determining": "Min( FirstVNF_RAM_Server ,( Const * Const ) )", "choosing": "( Min( Min( ( MUC / ( RCSe - MUC ) ) ,Max( DS,DS ) ) ,MUM ) - ( RCSe / MUM ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( ( BR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU + ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + RCSe ) - Min( ( MUC - Max( DS,DS ) ) ,( RCSe * MUC ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( RRSe + ( MUC * Max( RRSe,MUR ) ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6386861313868614, "obj2": 0.3474195941037767}, {"determining": "( Max( MRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( FirstVNF_CPU_Server / MDR ) ,Max( Min( MRS ,Max( FirstVNF_RAM,ACS ) ),( DDR - CRS ) ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * ( MUR / Max( DS,DS ) ) ) + ( Min( ( MUR / RCSe ) ,( ( ( ( DS + MUC ) / DS ) - DS ) / MLU ) ) + MLU ) )", "obj1": 0.6642335766423357, "obj2": 0.3140203316158256}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( RRS + FirstVNF_Mem_Server ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),( ( Const * BR ) * MDR ) ) ) )", "choosing": "( ( DS - ( DS * MUC ) ) * ( MLU * ( RMSe - RMSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.4609795830014951}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / Min( ( FirstVNF_RAM - BR ) ,BR ) ) ) + Min( ( ( Const * Max( ARS,BR ) ) - MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU + ( MLU - MUR ) ) - Min( MUR ,MUM ) ) / ( Max( Max( Max( RRSe,MUR ),( MUR * MLU ) ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5060903563812622}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_Mem_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MRS ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.48175182481751827, "obj2": 0.48721730846953276}, {"determining": "Min( ( CRS * FirstVNF_CPU_Server ) ,( Const * DDR ) )", "choosing": "( Min( Min( ( RRSe / ( RRSe * MUC ) ) ,Max( DS,DS ) ) ,MUM ) - ( Max( MUC,( CS / MUR ) ) + RMSe ) )", "obj1": 0.48175182481751827, "obj2": 0.48721730846953276}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( Max( FirstVNF_RAM_Server,Const ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( MLU * ( MUC - Max( DS,DS ) ) ) + ( Min( ( DS * ( RRSe / DS ) ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.666058394160584, "obj2": 0.31283457741834053}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6368613138686131, "obj2": 0.349156185105555}, {"determining": "( Max( ( MDR - FirstVNF_RAM ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( DDR ,Const ) / Min( AMS ,( FirstVNF_Mem / PN ) ) ) - ( ( AMS / MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - ( ( ( RRSe + RCSe ) + DS ) - ( MUM / MUC ) ) ) + DS ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( Max( MUR,RCSe ) * ( MLU + RRSe ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) )", "choosing": "( Max( MLU,MUC ) + ( CS - Max( MUM,MUR ) ) )", "obj1": 0.6496350364963503, "obj2": 0.33341004903937166}, {"determining": "Min( ( ARS - MDR ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( RCSe ,RRSe ) ) - ( RMSe - MUC ) ) ) * ( RRSe * MUC ) ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.4908759124087591, "obj2": 0.47991760977055486}, {"determining": "( ( ARS + AMS ) / ( ( BR * ( Const / Min( ( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) * ARS ) ,PN ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUR * ( Max( MUM,RMSe ) - MUR ) ) * ( MLU / MUR ) ) + MLU )", "obj1": 0.9744525547445255, "obj2": 0.015540454060630681}, {"determining": "( Min( Max( CRS,( DDR / AMS ) ) ,( AMS / PN ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.4708029197080292, "obj2": 0.5027745132563355}, {"determining": "( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * Min( Const ,Min( ( MDR / Max( FirstVNF_CPU_Server,PN ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( CS - ( ( ( CS * Max( RRSe,DS ) ) + MUR ) * Min( DS ,( MUC * ( DS / CS ) ) ) ) ) ) ) - Min( ( MUC - Max( DS,DS ) ) ,( MUM * MUC ) ) )", "obj1": 0.6496350364963503, "obj2": 0.33341004903937166}, {"determining": "Max( ( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ),Min( ( ( Max( RRS,AMS ) - DDR ) + ARS ) ,MRS ) )", "choosing": "( ( ( CS - Min( MUC ,MUM ) ) + Max( RMSe,( Min( ( MUM * ( MUM / DS ) ) ,MUM ) / RMSe ) ) ) + ( Max( ( RMSe / ( MUC * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS + Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - ( ( ( MUC - MUR ) / MLU ) - MLU ) ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6214800965607195}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / Const ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "Max( MUR,Min( RMSe ,( Min( Min( ( ( MLU + MUM ) - ( ( RCSe * MUR ) / ( RCSe * RMSe ) ) ) ,RRSe ) ,DS ) / ( Max( MUR,RCSe ) / DS ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.5002644904967156}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MUR - Max( ( ( ( CS + ( DS * DS ) ) - DS ) + DS ),( MUC + DS ) ) ) + RCSe )", "obj1": 0.9306569343065694, "obj2": 0.0461323878540627}, {"determining": "( Min( ACS ,( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM / ( DDR - DDR ) ) - DDR ) ) - FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Min( ( ( ACS * FirstVNF_Mem_Server ) / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) / Const ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( ( ( MUC * MUM ) + DS ) ,RCSe ) ) + ( RMSe - MUC ) ) ) * ( RRSe * MUC ) ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6332116788321168, "obj2": 0.3578112436636987}, {"determining": "( Min( ACS ,( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM / ( DDR - RRS ) ) - DDR ) ) - FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6332116788321168, "obj2": 0.3578112436636987}, {"determining": "( ( ( ARS / FirstVNF_Mem_Server ) * ARS ) - ( ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) - Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server + ( MRS + FirstVNF_CPU_Server ) ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) )", "choosing": "( ( RCSe - MLU ) - ( ( MUM * MLU ) / ( CS - ( RRSe * MUR ) ) ) )", "obj1": 0.6514598540145985, "obj2": 0.3299829191751304}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( CRS,( DDR / AMS ) ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + RCSe )", "obj1": 0.4653284671532847, "obj2": 0.5127140475254383}, {"determining": "( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - ( ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.6514598540145985, "obj2": 0.3299829191751304}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_Mem_Server ,Min( ( ( ( Const - FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) )", "choosing": "( ( MUC / ( ( ( RRSe - DS ) + ( RRSe - RRSe ) ) / ( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * ( MLU + RCSe ) )", "obj1": 0.9708029197080292, "obj2": 0.015612740109357095}, {"determining": "( Max( ( Min( ACS ,Const ) / ARS ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( BR,BR ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( ( ( CS + DS ) * ( CS + DS ) ) ,Max( ( MLU + MLU ),MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,Const ),Min( AMS ,( FirstVNF_Mem / PN ) ) ) - Min( DDR ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MLU + MUM ) - ( ( MUM - RRSe ) * ( RMSe / MUM ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5792331432735659}, {"determining": "( Min( PN ,FirstVNF_CPU ) + ( FirstVNF_Mem / ( RRS / Const ) ) )", "choosing": "Max( Min( DS ,Max( CS,RRSe ) ),( ( MLU + CS ) + ( MUR / RRSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6062301222707472}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( MRS + FirstVNF_CPU ) * ( MDR + ( ACS / AMS ) ) ),Min( RRS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe + ( Max( ( ( MUM * MLU ) + ( ( CS + RRSe ) - Min( DS ,Max( ( RCSe / RMSe ),Min( CS ,DS ) ) ) ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,MUM ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RMSe + RRSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.61095441538136}, {"determining": "( Min( ACS ,( ( FirstVNF_RAM_Server + ARS ) - FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) * ( RRSe * MUC ) ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.635036496350365, "obj2": 0.3536252940534571}, {"determining": "( ( FirstVNF_CPU_Server / BR ) / ( ( BR * ( Const / Min( ( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) * ARS ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( MLU,MUC ) + MUC ),MUR ) ) ,( ( Max( RCSe,CS ) - DS ) + DS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( Max( FirstVNF_CPU_Server,( ( ACS - ARS ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "Max( Min( DS ,Max( CS,RRSe ) ),Min( MUC ,MUC ) )", "obj1": 0.44343065693430656, "obj2": 0.5497097484471484}, {"determining": "Min( ( ( DDR / Const ) - ACS ) ,Max( RRS,( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( ( MLU / RCSe ) - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( MUR / ( ( MUM + RCSe ) + MLU ) ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5539226202763968}, {"determining": "( Min( ACS ,( ( FirstVNF_RAM_Server + ARS ) - FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / AMS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU + RCSe ) - Min( ( MUC - Max( DS,DS ) ) ,( RCSe * MUC ) ) )", "obj1": 0.635036496350365, "obj2": 0.3536252940534571}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( RRS,AMS ) - DDR ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( MUR + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6214800965607195}, {"determining": "( Min( FirstVNF_Mem ,PN ) + Max( ( AMS + ( Min( Max( PN,BR ) ,( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) - Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM_Server ) ) ) * DDR ) ),AMS ) )", "choosing": "Max( ( RCSe / Max( ( Max( ( ( MUC + MUC ) * ( ( RCSe / MUC ) + RMSe ) ),( ( ( MUR - MUM ) + MUM ) - CS ) ) + ( RMSe / Max( MUR,DS ) ) ),RMSe ) ),Min( RCSe ,DS ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}], "10": [{"determining": "( ( BR + Const ) - ( FirstVNF_CPU + ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + RCSe ) - Min( ( MUC - Max( DS,Min( RMSe ,( CS + MLU ) ) ) ) ,( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( MDR - FirstVNF_RAM_Server ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( MDR / FirstVNF_Mem ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( Min( ( MUM + MUM ) ,Max( MUM,RCSe ) ) - Max( DS,DS ) ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( FirstVNF_CPU + ARS ) ),Min( ( Max( ( ( ( PN * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + ( Max( MUC,Min( ( RCSe - Min( Min( MUR ,DS ) ,Min( RCSe ,MLU ) ) ) ,RRSe ) ) + ( MLU * RMSe ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.6563067858286639}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( RRS - ARS ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) * PN ) + Max( BR,MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( Const * BR ) * MDR ) ) )", "choosing": "( ( Min( Min( DS ,( MUR * Min( DS ,( RCSe * MUC ) ) ) ) ,MUM ) - ( RCSe / MUM ) ) / ( DS - DS ) )", "obj1": 0.6934306569343066, "obj2": 0.24181272983971663}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( CS - ( ( ( CS * Max( RRSe,RMSe ) ) + MUR ) * Min( DS ,( MUC * ( DS / CS ) ) ) ) ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),MLU ) - ( RMSe - MUR ) ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( BR - MDR ) ) + Min( ( ( Min( ARS ,FirstVNF_Mem ) * BR ) * MDR ) ,( MRS / MDR ) ) )", "choosing": "( ( RMSe - RCSe ) - Max( ( ( RRSe * ( MLU + ( MLU + MLU ) ) ) / ( ( ( ( CS / MUM ) * MUR ) / DS ) / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16289575186331304}, {"determining": "( Min( ACS ,( ( FirstVNF_RAM_Server + ARS ) - FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + ( ( ( MUR - MUM ) + MUM ) - CS ) ) ) ) + ( ( ( MUR - MUM ) + MUM ) - CS ) )", "obj1": 0.6423357664233577, "obj2": 0.3427025938629363}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( Min( RCSe ,Max( ( MLU + MLU ),RMSe ) ),MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.6788321167883211, "obj2": 0.24759806072479518}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) / ( ( ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) * ( FirstVNF_RAM_Server - MDR ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,Max( RRS,BR ) ) ) ) )", "choosing": "( ( DS - ( ( RCSe - Min( ( RCSe / DS ) ,RCSe ) ) + MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5383211678832117, "obj2": 0.40773516846942837}, {"determining": "( ( FirstVNF_RAM * ( ( MDR + CRS ) - ( ( FirstVNF_CPU - ACS ) / ( FirstVNF_CPU / ( MRS / ( ( MDR / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( FirstVNF_RAM,ACS ) ) * ( ( FirstVNF_CPU + PN ) / Min( Max( FirstVNF_CPU_Server,DDR ) ,( MDR / RRS ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * RCSe ) + ( Max( DS,CS ) / Min( RMSe ,MUM ) ) )", "obj1": 0.8065693430656934, "obj2": 0.10274973652045281}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),BR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8905109489051095, "obj2": 0.06879207834286155}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( ( ARS - MDR ) / ARS ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( CS - ( ( RRSe * MUC ) * Min( DS ,( MUC * ( DS / CS ) ) ) ) ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( MUM * MUC ) ) )", "obj1": 0.781021897810219, "obj2": 0.11153366659864693}, {"determining": "Min( ( ARS * MDR ) ,Min( FirstVNF_RAM ,( MRS * ( Min( DDR ,AMS ) + ( BR - MDR ) ) ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( ( RRSe + ( MLU + ( ( CS + DS ) + MLU ) ) ) / ( RRSe / RMSe ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7554744525547445, "obj2": 0.1391476352445787}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16289575186331304}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,( RMSe - MUM ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,Max( ( MLU + MLU ),RMSe ) ) - MUR ) ) * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "Min( ( ACS + FirstVNF_RAM_Server ) ,( AMS * ( BR * Const ) ) )", "choosing": "( ( RCSe - DS ) - ( RCSe - RMSe ) )", "obj1": 0.6715328467153284, "obj2": 0.29447691690448613}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - ( ACS / Max( ( ( DDR - ARS ) + Const ),( AMS / Max( BR,( PN - MRS ) ) ) ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.885036496350365, "obj2": 0.07485736993302836}, {"determining": "( ( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - BR ) ) ) - Min( ( ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ,( DDR - BR ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( RCSe / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.9525547445255474, "obj2": 0.025498373636745772}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( DS - DS ) / Max( ( ( RRSe * MUC ) - ( ( ( CS - MUC ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.7481751824817519, "obj2": 0.14133249796582245}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( MUM + ( ( MUR * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.9288321167883211, "obj2": 0.052725553340230824}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Max( FirstVNF_RAM_Server,PN ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( Max( DS,( MLU + DS ) ) + CS ) + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MUR + MLU ),RMSe ) ) ) - ( ( Min( MUM ,MUM ) - CS ) + Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5432908280057158}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( DDR * Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) - ( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( Min( BR ,FirstVNF_Mem ) ,MDR ) ) ) )", "choosing": "( ( MUR + ( RMSe / ( ( RCSe - ( Min( RMSe ,RRSe ) - MUR ) ) * MLU ) ) ) * ( Min( ( RRSe - ( RRSe - DS ) ) ,CS ) / RMSe ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( FirstVNF_CPU_Server + Max( AMS,( AMS + ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( RCSe + ( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * Min( ( Const / Min( ( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) * ARS ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( ( Max( RCSe,CS ) - DS ) + DS ) ) - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + RCSe )", "obj1": 0.6642335766423357, "obj2": 0.30539781458918364}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / MRS ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4238797711153094}, {"determining": "( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( Const,BR ) / ( RRS / RRS ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( Min( ACS ,MRS ) / PN ) ) ) + ( ( AMS + MRS ) + ( ACS * ARS ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / RRSe ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "Min( ( ( DDR - DDR ) - FirstVNF_Mem ) ,Max( RRS,( FirstVNF_Mem_Server * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - MRS ) ) * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( ( CS + ( RRSe / MLU ) ) ,DS ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Max( RMSe,RCSe ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4389373202963147}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( AMS,( ( Min( Max( ( Min( Const ,FirstVNF_CPU ) + MDR ),Min( Max( ARS,MRS ) ,FirstVNF_Mem ) ) ,RRS ) + DDR ) + AMS ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe - DS ) + Max( Min( DS ,( RCSe + MLU ) ),( Max( ( RRSe * RRSe ),Max( MLU,MUC ) ) - MUR ) ) ),( DS - RCSe ) ) ) * ( MLU + RCSe ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.656934306569343, "obj2": 0.31432581147812044}, {"determining": "Max( ( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ),Min( ( ( Max( RRS,AMS ) - DDR ) + ARS ) ,MRS ) )", "choosing": "( ( ( CS - Min( MUC ,MUM ) ) + Max( RMSe,( Min( ( MUM * ( MUM / DS ) ) ,MUM ) / RMSe ) ) ) + ( Max( ( RMSe / ( MUC * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS + Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - ( ( ( MUC - MUR ) / MLU ) - MLU ) ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6298995940829626}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),AMS ) - DDR ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6187468550429938}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( ( FirstVNF_Mem + ( ( MDR + DDR ) - FirstVNF_RAM ) ) ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( MUM,( ( RCSe - CS ) / ( ( DS - MLU ) / MUM ) ) ) ) ) ,( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6062301222707472}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server * ( MDR * ( FirstVNF_CPU * Max( CRS,FirstVNF_RAM_Server ) ) ) ) / CRS ) ) ) - Min( FirstVNF_RAM_Server ,( ARS - BR ) ) )", "choosing": "( ( RMSe - ( RRSe + ( Min( MUR ,( Min( RRSe ,Min( MUM ,MUC ) ) - ( CS / ( RRSe * DS ) ) ) ) - ( ( ( ( RRSe / MUC ) / ( MUM * CS ) ) * ( MUC + ( RMSe - RMSe ) ) ) * RMSe ) ) ) ) * Max( ( ( ( MUC - Min( CS ,RRSe ) ) - ( MUC * ( MLU * Min( CS ,RCSe ) ) ) ) * DS ),Min( RRSe ,RMSe ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182883}, {"determining": "( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - ( ( ARS + MRS ) * MRS ) ) ) - ( ( Max( ( ( ( RRS - BR ) * ( Min( Const ,RRS ) + DDR ) ) * MRS ),RRS ) + ARS ) - ACS ) )", "choosing": "( ( Max( ( Max( Min( Min( MUM ,Min( MLU ,MUR ) ) ,Max( ( RMSe / RCSe ),Min( CS ,DS ) ) ),DS ) + DS ),( MUC + DS ) ) - MUR ) + ( RMSe + MUC ) )", "obj1": 0.9908759124087592, "obj2": 0.0019579500526640636}, {"determining": "Min( ( ( ACS / Min( PN ,( Const + ( FirstVNF_RAM_Server + CRS ) ) ) ) - ACS ) ,( AMS * ( Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,FirstVNF_Mem ),ARS ) - ( DDR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( MUM,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( Max( DS,CS ) + Min( DS ,CS ) ) + MLU ) / MUR ),Min( RCSe ,Max( CS,( ( MUC - RRSe ) - ( RMSe - MUR ) ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4238797711153094}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server * ARS ) / CRS ) ) ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) )", "choosing": "( ( RMSe / ( RRSe + ( Min( MUR ,( Min( RRSe ,Min( MUM ,MUC ) ) - ( CS / ( RRSe * DS ) ) ) ) - ( ( ( ( RRSe / MUC ) / ( MUM * CS ) ) * ( MUC + ( RMSe - RMSe ) ) ) * RMSe ) ) ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182883}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( BR / Min( ( Min( ACS ,DDR ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * ( MUR - Max( DS,DS ) ) ) + ( Min( Min( DS ,( MUR + RMSe ) ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.6551094890510949, "obj2": 0.32392394230469007}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) )", "choosing": "( ( ( RRSe - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.7883211678832117, "obj2": 0.10443023359017684}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( Max( Const,BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( ( Max( MUM,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + Min( DS ,CS ) ) + MLU ) / MUR ),Min( DS ,Max( CS,( ( MUC - RRSe ) - ( RMSe - MUR ) ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * ( BR * Const ) ) )", "choosing": "( ( ( RRSe - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.6715328467153284, "obj2": 0.29447691690448613}, {"determining": "Min( ( ARS - MDR ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,DDR ) ) * MRS ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + Max( ( MUM * RCSe ),( DS - MUR ) ) ) ) ) / ( MUM / RRSe ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - CS ) )", "obj1": 0.4908759124087591, "obj2": 0.47991760977055486}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5127140475254383}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) * ( BR / Min( ( FirstVNF_CPU_Server / ( ( ACS + FirstVNF_CPU_Server ) + BR ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( ( CS + ( RMSe / DS ) ) ,RCSe ),( Max( ( ( Max( DS,DS ) - MUR ) * RRSe ),( MUR / ( Max( MUM,RMSe ) * MUR ) ) ) - MUR ) ) ) / ( ( RCSe * CS ) + DS ) )", "obj1": 0.5, "obj2": 0.46085458163273585}, {"determining": "( ( ( MRS / FirstVNF_Mem_Server ) * ARS ) - ( ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( ( ( FirstVNF_RAM_Server + CRS ) + MDR ),Min( BR ,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + ( DS * ( RCSe - CS ) ) ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU - RMSe ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.6496350364963503, "obj2": 0.3322043396057253}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - ( ( ( AMS * ( Max( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server / FirstVNF_Mem ) ),ARS ) - ( DDR + FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( MUC / ( MUC - RRSe ) ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.958029197080292, "obj2": 0.022214651678059073}, {"determining": "Min( ( ACS - Const ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Min( FirstVNF_CPU ,PN ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( RCSe + ( ( MUR * ( MUR / Max( RRSe,( Max( RRSe,DS ) + Max( MUC,MUR ) ) ) ) ) * ( Min( MUR ,DS ) - ( ( Min( RCSe ,Max( ( DS + MLU ),RCSe ) ) / RCSe ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.9781021897810219, "obj2": 0.008258663426806354}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.9288321167883211, "obj2": 0.052725553340230824}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( CRS,( DDR / Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + ( ( CS * Max( RRSe,DS ) ) + MUR ) )", "obj1": 0.4744525547445255, "obj2": 0.4994428761367534}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,Const ),Min( AMS ,( FirstVNF_Mem / PN ) ) ) - Min( DDR ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MLU + MUM ) - ( ( MUM - RRSe ) * ( RMSe / MUM ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5792331432735659}, {"determining": "Max( ( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ),Min( ( ( Max( RRS,AMS ) - DDR ) + ARS ) ,MRS ) )", "choosing": "( ( ( CS - Min( MUC ,MUM ) ) + Max( RMSe,( Min( ( MUM * ( MUM / DS ) ) ,MUM ) / RMSe ) ) ) + ( Max( ( RMSe / ( MUC * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS + Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - ( ( ( MUC - MUR ) / MLU ) - MLU ) ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6298995940829626}, {"determining": "( ( FirstVNF_CPU + DDR ) / Max( ARS,( BR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS - ( RMSe + DS ) ) + MLU ) / ( RRSe * ( MUC - RMSe ) ) ) + Max( MUC,( DS / RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5666069369344552}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( CS - ( ( ( CS * Max( RRSe,RMSe ) ) + MUR ) * Min( DS ,( MUC * ( DS / CS ) ) ) ) ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( MUM * MUC ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( MRS - Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,RRS ) ) ) + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,( ( ( DDR * ARS ) * Const ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe / RRSe ),( CS * ( Max( RMSe,MUM ) - Min( RMSe ,MUC ) ) ) ) - ( ( CS - RCSe ) + ( ( CS / MUM ) * DS ) ) ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "Min( ( ( DDR / Const ) - ACS ) ,Max( RRS,( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( ( MLU / RCSe ) - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( MUR / ( ( MUM + RCSe ) + MLU ) ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5539226202763968}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - ( ACS / Max( ( Const + ( DDR - ARS ) ),BR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.885036496350365, "obj2": 0.07485736993302836}, {"determining": "( Max( FirstVNF_RAM,CRS ) / ( ( CRS - ARS ) + FirstVNF_CPU_Server ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS - RMSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5693262046144868}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( CRS,( DDR / ( ( RRS * FirstVNF_RAM ) * ( FirstVNF_Mem + ( FirstVNF_Mem * ACS ) ) ) ) ) ) ) - ( ARS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( CS / Max( RRSe,MUM ) ) - Max( RMSe,( ( MUR * DS ) * MUR ) ) ) + ( RMSe + MUM ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( Const * Min( ( ACS - Const ) ,Max( Const,BR ) ) ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,Max( ( DS + MLU ),RCSe ) ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( FirstVNF_CPU_Server + Max( AMS,( AMS + ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( ( ( CS - MUC ) + ( DS + Max( MUM,MUR ) ) ) + RMSe ) ) ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - ( AMS + Max( ( FirstVNF_RAM_Server + ( Max( FirstVNF_RAM,FirstVNF_RAM ) / ( FirstVNF_CPU + Max( ( FirstVNF_CPU - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) ) ),( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) + DDR ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe * MUM ) * ( DS * DS ) ),( Min( ( MLU - RMSe ) ,( MUC / MUR ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.019126724555490204}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( RRS + FirstVNF_Mem_Server ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),( ( Const * BR ) * MDR ) ) ) )", "choosing": "( ( DS - ( DS * MUC ) ) * ( MLU * ( RMSe - RMSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.4609795830014951}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_Mem_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MRS ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.48175182481751827, "obj2": 0.48721730846953276}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4682178853141998}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_Mem_Server - MDR ) * ( Const / Min( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ,MRS ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / Max( RMSe,Max( ( MUR * DS ),MUR ) ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.48175182481751827, "obj2": 0.48721730846953276}, {"determining": "( ( Max( AMS,Max( ( BR + CRS ),ARS ) ) / BR ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( DS / Min( Min( MUR ,( MLU - MUM ) ) ,Min( ( DS * MUR ) ,MUM ) ) ) + MUR ) / CS ) ,( ( MUM / Min( RCSe ,RRSe ) ) - MLU ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / Min( ( FirstVNF_RAM - BR ) ,BR ) ) ) + Min( ( ( Const * Max( ARS,BR ) ) - MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5060903563812622}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "( Max( FirstVNF_CPU_Server,( ( ACS - ARS ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( ( RRSe / DS ) - MLU ) ) * MUC ) ) * ( CS * ( RMSe - MUM ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5497097484471484}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( MUR + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.61095441538136}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6441605839416058, "obj2": 0.340337594570935}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.4197080291970803, "obj2": 0.61095441538136}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( RRS,( FirstVNF_Mem_Server * ACS ) ) - FirstVNF_Mem_Server ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) / Max( MLU,MUM ) ),( ( CS / ( RRSe / RMSe ) ) + ( RCSe / MUC ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6261428132880061}, {"determining": "Min( ( ARS - MDR ) ,Min( FirstVNF_RAM ,( ( FirstVNF_Mem * Min( ( ( MRS + FirstVNF_Mem_Server ) / ( DDR / ACS ) ) ,Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) * MRS ) ) )", "choosing": "( ( ( MUC - ( ( RCSe / Min( RCSe ,RRSe ) ) - ( ( CS * Max( RRSe,RMSe ) ) + MUR ) ) ) * ( RRSe * MUC ) ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.4908759124087591, "obj2": 0.47991760977055486}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * Max( RRS,AMS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( RRSe ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6067683973161575}, {"determining": "( Max( FirstVNF_CPU_Server,( ( ACS - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) - Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "Max( Min( DS ,Max( CS,RRSe ) ),Min( ( Max( ( ( MUC + MUC ) * ( ( RCSe / MUC ) + RMSe ) ),( ( ( MUR - MUM ) + MUM ) - CS ) ) + ( RMSe / Max( MUR,DS ) ) ) ,MUC ) )", "obj1": 0.43613138686131386, "obj2": 0.5688560738124885}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) ) - ( MRS * DDR ) )", "choosing": "( Max( ( DS * DS ),RRSe ) + ( Max( ( ( MUM * MLU ) + ( ( CS + RRSe ) - Min( CS ,Max( ( RCSe / RMSe ),Min( CS ,DS ) ) ) ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,MUM ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RMSe + RRSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.9306569343065694, "obj2": 0.0461323878540627}, {"determining": "( Max( FirstVNF_CPU_Server,( ( ACS - ARS ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "Max( Min( DS ,Max( CS,RRSe ) ),Min( MUC ,MUC ) )", "obj1": 0.44343065693430656, "obj2": 0.5497097484471484}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6441605839416058, "obj2": 0.340337594570935}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,ACS ) ) ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) / ( RRS * ( ( ACS / ARS ) * BR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MUR / MUM ) + Max( MUC,CS ) )", "obj1": 0.9781021897810219, "obj2": 0.008258663426806354}, {"determining": "( ( ( ARS / FirstVNF_Mem_Server ) * ARS ) - ( ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) - Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server + ( MRS + FirstVNF_CPU_Server ) ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) )", "choosing": "( ( RCSe - MLU ) - ( ( MUM * MLU ) / ( CS - ( RRSe * MUR ) ) ) )", "obj1": 0.6514598540145985, "obj2": 0.3299829191751304}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( CRS,( DDR / AMS ) ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( ( ( MUR * ( Max( MUM,RMSe ) - MUR ) ) * ( MLU / MUR ) ) + MLU )", "obj1": 0.4653284671532847, "obj2": 0.5127140475254383}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( Min( Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) ,CS ) ,DS ) ,MUM ) - ( MUC * Max( RRSe,MUR ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10566974413783047}, {"determining": "( Min( FirstVNF_Mem ,PN ) + Max( ( FirstVNF_CPU_Server + ( Min( Max( PN,BR ) ,( ( ACS - ( Const + PN ) ) * ( MRS + MRS ) ) ) * DDR ) ),AMS ) )", "choosing": "Max( ( RCSe / Max( ( Max( Min( ( MUC + MUC ) ,( ( RCSe / MUC ) + RMSe ) ),( MUC + ( ( MLU - MUR ) - ( DS / MUC ) ) ) ) + ( RMSe / Max( MUR,DS ) ) ),RMSe ) ),Min( RCSe ,DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6261428132880061}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10566974413783047}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,Const ),Min( AMS ,( FirstVNF_Mem / PN ) ) ) - Min( DDR ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MLU + MUM ) - ( ( MUM - RRSe ) * ( RMSe / MUM ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5792331432735659}, {"determining": "( ( ( ARS / FirstVNF_Mem_Server ) / ( AMS * FirstVNF_RAM ) ) - ( ( BR / MRS ) - PN ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - MUR ) + Min( ( Min( MLU ,DS ) - MUR ) ,Min( MUC ,( CS - ( ( MLU * Max( Min( MUM ,MUR ),MLU ) ) + MUM ) ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( ( ACS / AMS ) ,( ( FirstVNF_RAM_Server * ARS ) / CRS ) ) ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( ( ARS + AMS ) / ( ( BR * ( Const / Min( ( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) * ARS ) ,PN ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUR * ( Max( MUM,RMSe ) - MUR ) ) * ( MLU / MUR ) ) + MLU )", "obj1": 0.9744525547445255, "obj2": 0.015540454060630681}, {"determining": "( Min( Max( CRS,( DDR / AMS ) ) ,( AMS / PN ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.4708029197080292, "obj2": 0.5027745132563355}, {"determining": "( ( FirstVNF_CPU_Server / BR ) / ( ( BR * ( Const / Min( ( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) * ARS ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( MLU,MUC ) + MUC ),MUR ) ) ,( ( Max( RCSe,CS ) - DS ) + DS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( Max( Const,BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / Min( RCSe ,RRSe ) ) - MLU ) )", "obj1": 0.8394160583941606, "obj2": 0.08456197505715327}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RCSe ) - Min( ( MUC - Max( ( ( ( MUC - Max( DS,DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) ),DS ) ) ,( RCSe * MUC ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5539226202763968}, {"determining": "( ( ( BR / FirstVNF_Mem_Server ) * ARS ) - ( ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - MUR ) + Min( ( Min( MLU ,RCSe ) - MUR ) ,Min( MUC ,( CS - ( ( MLU * Max( Min( MUC ,MUR ),MLU ) ) + MUM ) ) ) ) )", "obj1": 0.6514598540145985, "obj2": 0.3299829191751304}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - ( ACS / Max( ( ( DDR - ARS ) + Const ),( AMS / Max( BR,( FirstVNF_Mem - MRS ) ) ) ) ) ) ) )", "choosing": "( ( MUC / Max( Min( RMSe ,Max( Max( CS,MUM ),MUM ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.9653284671532847, "obj2": 0.018326364657186636}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( ( CRS * FirstVNF_CPU_Server ) ,( Const * DDR ) ) )", "choosing": "( ( Min( Min( ( RRSe / ( RRSe * MUC ) ) ,Max( DS,DS ) ) ,MUM ) - ( Max( MUC,( CS / MUR ) ) + RMSe ) ) * Max( CS,MUR ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883072}, {"determining": "( Min( Max( CRS,( DDR / AMS ) ) ,( AMS / PN ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( RRSe + ( RMSe - MUC ) ) / ( MUC + DS ) ),( ( ( ( MUC - MUC ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.4708029197080292, "obj2": 0.5027745132563355}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / Min( ( FirstVNF_RAM - BR ) ,BR ) ) ) + Min( ( ( Const * Max( ARS,BR ) ) - MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU + ( MLU - MUR ) ) - Min( MUR ,MUM ) ) / ( Max( Max( Max( RRSe,MUR ),( MUR * MLU ) ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5060903563812622}], "11": [{"determining": "Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( FirstVNF_CPU + ARS ) ),Min( ( Max( ( ( ( PN * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + ( Max( MUC,Min( ( RCSe - Min( Min( MUR ,DS ) ,Min( RCSe ,MLU ) ) ) ,RRSe ) ) + ( MLU * RMSe ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.6563067858286639}, {"determining": "Min( ( ( DDR - DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - MRS ) ) * ( FirstVNF_Mem * ACS ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Const ) - ( FirstVNF_CPU + ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + RCSe ) - Min( ( MUC - Max( DS,Min( RMSe ,( CS + MLU ) ) ) ) ,( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Min( ( RRSe - Max( ( Max( MLU,MUC ) + MUC ),MUR ) ) ,( ( Max( RCSe,CS ) - DS ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.6563067858286639}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( RRS - ARS ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) * PN ) + Max( BR,MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( Const * BR ) * MDR ) ) )", "choosing": "( ( Min( Min( DS ,( MUR * Min( DS ,( RCSe * MUC ) ) ) ) ,MUM ) - ( RCSe / MUM ) ) / ( DS - DS ) )", "obj1": 0.6934306569343066, "obj2": 0.24181272983971663}, {"determining": "( ( FirstVNF_CPU + DDR ) / Max( ARS,( BR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS - ( RMSe + DS ) ) + MLU ) / ( RRSe * ( MUC - RMSe ) ) ) + Max( MUC,( DS / RCSe ) ) )", "obj1": 0.6277372262773723, "obj2": 0.30843490431451515}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( MLU + RCSe ) - Min( ( MUC - Max( ( ( ( MUC - Max( DS,DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) ),DS ) ) ,( RCSe * MUC ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16289575186331304}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( ( FirstVNF_RAM * ( ( MDR + CRS ) - ( ( FirstVNF_CPU - ACS ) / ( FirstVNF_CPU / ( MRS / ( ( MDR / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( FirstVNF_RAM,ACS ) ) * ( ( FirstVNF_CPU + PN ) / Min( Max( FirstVNF_CPU_Server,DDR ) ,( MDR / RRS ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * RCSe ) + ( Max( DS,CS ) / Min( RMSe ,MUM ) ) )", "obj1": 0.8065693430656934, "obj2": 0.10274973652045281}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( ( ARS - MDR ) / ARS ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( CS - ( ( RRSe * MUC ) * Min( DS ,( MUC * ( DS / CS ) ) ) ) ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( MUM * MUC ) ) )", "obj1": 0.781021897810219, "obj2": 0.11153366659864693}, {"determining": "Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * Min( ( Const / Min( ( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) * ARS ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( ( Max( RCSe,CS ) - DS ) + DS ) ) - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + RCSe )", "obj1": 0.6642335766423357, "obj2": 0.30539781458918364}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,( RMSe - MUM ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( Min( DS ,Max( ( MLU + MLU ),RMSe ) ),MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.6751824817518248, "obj2": 0.2628868009392979}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( BR - MDR ) ) + Min( ( ( Min( ARS ,FirstVNF_Mem ) * BR ) * MDR ) ,( MRS / MDR ) ) )", "choosing": "( ( RMSe - RCSe ) - Max( ( ( RRSe * ( MLU + ( MLU + MLU ) ) ) / ( ( ( ( CS / MUM ) * MUR ) / DS ) / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16289575186331304}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - ( ACS / Max( ( ( DDR - ARS ) + Const ),( AMS / Max( BR,( PN - MRS ) ) ) ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.885036496350365, "obj2": 0.07485736993302836}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - ( FirstVNF_Mem / Max( ( Const + ( DDR - ARS ) ),BR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,Max( Max( RRSe,MUM ),MUC ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9087591240875912, "obj2": 0.059490709500032504}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) / ( ( ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) * ( FirstVNF_RAM_Server - MDR ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,Max( RRS,BR ) ) ) ) )", "choosing": "( ( DS - ( ( RCSe - Min( ( RCSe / DS ) ,RCSe ) ) + MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5383211678832117, "obj2": 0.40773516846942837}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( CS - ( ( ( CS * Max( RRSe,RMSe ) ) + MUR ) * Min( DS ,( MUC * ( DS / CS ) ) ) ) ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),MLU ) - ( RMSe - MUR ) ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( DDR * Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) - ( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( Min( BR ,FirstVNF_Mem ) ,MDR ) ) ) )", "choosing": "( ( MUR + ( RMSe / ( ( RCSe - ( Min( RMSe ,RRSe ) - MUR ) ) * MLU ) ) ) * ( Min( ( RRSe - ( RRSe - DS ) ) ,CS ) / RMSe ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "Min( ( ACS + FirstVNF_RAM_Server ) ,( AMS * ( BR * Const ) ) )", "choosing": "( ( RCSe - DS ) - ( RCSe - RMSe ) )", "obj1": 0.6715328467153284, "obj2": 0.29447691690448613}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7445255474452555, "obj2": 0.15034604779264554}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - PN ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( Min( CRS ,AMS ) - RRS ) ) ) ) ) - ( Max( CRS,( DDR / AMS ) ) / ARS ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( ( Min( ( CS * Max( RRSe,RMSe ) ) ,MUR ) * Min( DS ,( MUC * Max( RCSe,MUM ) ) ) ) - CS ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),( RRSe + ( RMSe - MUC ) ) ) - ( RMSe - MUR ) ) ) ) )", "obj1": 0.5346715328467153, "obj2": 0.41836055053911697}, {"determining": "Min( ( ARS * MDR ) ,Min( FirstVNF_RAM ,( MRS * ( Min( DDR ,AMS ) + ( BR - MDR ) ) ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( ( RRSe + ( MLU + ( ( CS + DS ) + MLU ) ) ) / ( RRSe / RMSe ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7554744525547445, "obj2": 0.1391476352445787}, {"determining": "( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( Const,BR ) / ( RRS / RRS ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( Min( ACS ,MRS ) / PN ) ) ) + ( ( AMS + MRS ) + ( ACS * ARS ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / RRSe ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * ( Min( FirstVNF_CPU ,PN ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Max( RRSe,DS ) + ( Max( ( ( RRSe + ( MLU + ( Max( RRSe,DS ) + Max( MUC,MUR ) ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) ) )", "obj1": 0.9361313868613139, "obj2": 0.03565217523666989}, {"determining": "Min( ( ( DDR - DDR ) - FirstVNF_Mem ) ,Max( RRS,( FirstVNF_Mem_Server * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - MRS ) ) * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( ( CS + ( RRSe / MLU ) ) ,DS ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Max( RMSe,RCSe ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4389373202963147}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6788321167883211, "obj2": 0.24759806072479518}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4238797711153094}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Max( FirstVNF_RAM_Server,PN ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( Max( DS,( MLU + DS ) ) + CS ) + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MUR + MLU ),RMSe ) ) ) - ( ( Min( MUM ,MUM ) - CS ) + Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5432908280057158}, {"determining": "( ( AMS + AMS ) + ( ( ( Const * Max( ARS,BR ) ) - MDR ) / ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( RCSe * ( Max( MUM,RMSe ) - Min( MUR ,MUR ) ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Min( ( ARS - MDR ) ,Min( FirstVNF_RAM ,( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) * MRS ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( ( RMSe / MUM ) ,RCSe ),( Max( ( ( MUR - Max( DS,DS ) ) * RRSe ),( MUR * ( Max( MUM,RMSe ) * MUR ) ) ) - MUR ) ) ) / ( ( RCSe * CS ) + DS ) )", "obj1": 0.7554744525547445, "obj2": 0.1391476352445787}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),BR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8923357664233577, "obj2": 0.06555750517243082}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,Max( ( MLU + MLU ),RMSe ) ) - MUR ) ) * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "( FirstVNF_CPU_Server + Max( AMS,( AMS + ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( MUM + ( ( MUR * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.9288321167883211, "obj2": 0.052725553340230824}, {"determining": "Max( ( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ),Min( ( ( Max( RRS,AMS ) - DDR ) + ARS ) ,MRS ) )", "choosing": "( ( ( CS - Min( MUC ,MUM ) ) + Max( RMSe,( Min( ( MUM * ( MUM / DS ) ) ,MUM ) / RMSe ) ) ) + ( Max( ( RMSe / ( MUC * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS + Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - ( ( ( MUC - MUR ) / MLU ) - MLU ) ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6298995940829626}, {"determining": "( ( MRS / ( ( FirstVNF_RAM * PN ) / FirstVNF_CPU_Server ) ) - Max( MRS,FirstVNF_RAM ) )", "choosing": "( ( DS / CS ) * Max( MLU,MUR ) )", "obj1": 0.948905109489051, "obj2": 0.028650197590884177}, {"determining": "( FirstVNF_CPU_Server / ( ACS * DDR ) )", "choosing": "( ( MUC / ( MUC * Max( MLU,( MLU - ( RRSe * MLU ) ) ) ) ) + ( MUC - MUR ) )", "obj1": 0.48722627737226276, "obj2": 0.4776749175843942}, {"determining": "( ( ( ( MDR * FirstVNF_RAM_Server ) * ( Const / Min( ( MDR / Max( CRS,FirstVNF_CPU_Server ) ) ,Max( Min( FirstVNF_RAM ,AMS ),DDR ) ) ) ) - ( FirstVNF_Mem_Server * BR ) ) / ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( CS - DS ) * ( MLU * ( Min( MUC ,MUM ) - MUC ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - ( ( ARS + MRS ) * MRS ) ) ) - ( ( Max( ( ( ( RRS - BR ) * ( Min( Const ,RRS ) + DDR ) ) * MRS ),RRS ) + ARS ) - ACS ) )", "choosing": "( ( Max( ( Max( Min( Min( MUM ,Min( MLU ,MUR ) ) ,Max( ( RMSe / RCSe ),Min( CS ,DS ) ) ),DS ) + DS ),( MUC + DS ) ) - MUR ) + ( RMSe + MUC ) )", "obj1": 0.9908759124087592, "obj2": 0.0019579500526640636}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6062301222707472}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),AMS ) - DDR ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6187468550429938}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( ( FirstVNF_Mem + ( ( MDR + DDR ) - FirstVNF_RAM ) ) ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( MUM,( ( RCSe - CS ) / ( ( DS - MLU ) / MUM ) ) ) ) ) ,( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.7883211678832117, "obj2": 0.10443023359017682}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "( Max( ( Max( MDR,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server - BR ) ),( Max( Const,BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( ( ( ( MUC - RRSe ) - ( RMSe - MUR ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + Min( DS ,CS ) ) + MLU ) / MUR ),Min( DS ,Max( CS,( ( MUC - RRSe ) - ( RMSe - MUR ) ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( DDR / MDR ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Min( FirstVNF_CPU ,PN ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( ( MDR * RRS ),DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MUC / Max( ( ( Min( MUC ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.9781021897810219, "obj2": 0.008258663426806354}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,Const ),Min( AMS ,( FirstVNF_Mem / PN ) ) ) - Min( DDR ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MLU + MUM ) - ( ( MUM - RRSe ) * ( RMSe / MUM ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5792331432735659}, {"determining": "( FirstVNF_CPU_Server + ( Min( ( FirstVNF_RAM_Server * PN ) ,ARS ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( ( ( CS - MUC ) + ( DS + Max( MUM,MUR ) ) ) + RMSe ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.5153060931254188}, {"determining": "Max( ( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ),Min( ( ( Max( RRS,AMS ) - DDR ) + ARS ) ,MRS ) )", "choosing": "( ( ( CS - Min( MUC ,MUM ) ) + Max( RMSe,( Min( ( MUM * ( MUM / DS ) ) ,MUM ) / RMSe ) ) ) + ( Max( ( RMSe / ( MUC * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS + Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - ( ( ( MUC - MUR ) / MLU ) - MLU ) ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6298995940829626}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.7481751824817519, "obj2": 0.14133249796582245}, {"determining": "( ( FirstVNF_CPU + DDR ) / Max( ARS,( BR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS - ( RMSe + DS ) ) + MLU ) / ( RRSe * ( MUC - RMSe ) ) ) + Max( MUC,( DS / RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5666069369344552}, {"determining": "( ( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - BR ) ) ) - Min( ( ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ,( DDR - BR ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( RCSe / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.9525547445255474, "obj2": 0.025498373636745772}, {"determining": "Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * ( BR * Min( ( FirstVNF_Mem_Server - Const ) ,( AMS * ( BR * Const ) ) ) ) ) )", "choosing": "( Max( ( ( RRSe + ( RMSe - MUC ) ) / ( MUC + DS ) ),( ( ( ( MUC - MUC ) + Min( RRSe ,( ( MUR * DS ) - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6715328467153284, "obj2": 0.29447691690448613}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( MRS - Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,RRS ) ) ) + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,( ( ( DDR * ARS ) * Const ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe / RRSe ),( CS * ( Max( RMSe,MUM ) - Min( RMSe ,MUC ) ) ) ) - ( ( CS - RCSe ) + ( ( CS / MUM ) * DS ) ) ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5539226202763968}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5127140475254383}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - ( ACS / Max( ( Const + ( DDR - ARS ) ),BR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.885036496350365, "obj2": 0.07485736993302836}, {"determining": "( Max( FirstVNF_RAM,CRS ) / ( ( CRS - ARS ) + FirstVNF_CPU_Server ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS - RMSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5693262046144868}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_Mem_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MRS ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.48175182481751827, "obj2": 0.48721730846953276}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( CRS,( DDR / Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + ( ( CS * Max( RRSe,DS ) ) + MUR ) )", "obj1": 0.4744525547445255, "obj2": 0.4994428761367534}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,ARS ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( ( MLU / RCSe ) - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( MUR / ( ( MUM + RCSe ) + MLU ) ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,Max( ( DS + MLU ),RCSe ) ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5432908280057158}, {"determining": "( FirstVNF_CPU_Server + Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( RCSe + ( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + ( ( Min( ( MUM + MUM ) ,Max( MUM,RCSe ) ) - Max( DS,DS ) ) * MLU ) ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.5017835659209268}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server * ( MDR * ( FirstVNF_CPU * Max( CRS,FirstVNF_RAM_Server ) ) ) ) / CRS ) ) ) - Min( FirstVNF_RAM_Server ,( ARS - BR ) ) )", "choosing": "( ( RMSe - ( RRSe + ( Min( MUR ,( Min( RRSe ,Min( MUM ,MUC ) ) - ( CS / ( RRSe * DS ) ) ) ) - ( ( ( ( RRSe / MUC ) / ( MUM * CS ) ) * ( MUC + ( RMSe - RMSe ) ) ) * RMSe ) ) ) ) * Max( ( ( ( MUC - Min( CS ,RRSe ) ) - ( MUC * ( MLU * Min( CS ,RCSe ) ) ) ) * DS ),Min( RRSe ,RMSe ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182883}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / MRS ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4238797711153094}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( RRS + FirstVNF_Mem_Server ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),( ( Const * BR ) * MDR ) ) ) )", "choosing": "( ( DS - ( DS * MUC ) ) * ( MLU * ( RMSe - RMSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.4609795830014951}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) ) - ( MRS * DDR ) )", "choosing": "( Max( ( DS * DS ),RRSe ) + ( Max( ( ( MUM * MLU ) + ( ( CS + RRSe ) - Min( CS ,Max( ( RCSe / RMSe ),Min( CS ,DS ) ) ) ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,MUM ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RMSe + RRSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.9306569343065694, "obj2": 0.0461323878540627}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4682178853141998}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server + Min( ACS ,ARS ) ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( RRSe,Max( CS,RRSe ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) - MDR ) ,( FirstVNF_RAM_Server * Max( ( FirstVNF_CPU_Server - Max( ( Const + AMS ),Min( ( ARS / PN ) ,FirstVNF_CPU_Server ) ) ),Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( ( RCSe - MUM ) - MUR ) ) ) - CS ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5060903563812622}, {"determining": "( ( Max( AMS,Max( ( BR + CRS ),ARS ) ) / BR ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( DS / Min( Min( MUR ,( MLU - MUM ) ) ,Min( ( DS * MUR ) ,MUM ) ) ) + MUR ) / CS ) ,( ( MUM / Min( RCSe ,RRSe ) ) - MLU ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) * ( BR / Min( ( FirstVNF_CPU_Server / ( ( ACS + FirstVNF_CPU_Server ) + BR ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( ( CS + ( RMSe / DS ) ) ,RCSe ),( Max( ( ( Max( DS,DS ) - MUR ) * RRSe ),( MUR / ( Max( MUM,RMSe ) * MUR ) ) ) - MUR ) ) ) / ( ( RCSe * CS ) + DS ) )", "obj1": 0.5, "obj2": 0.46085458163273585}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( ( FirstVNF_RAM_Server + ARS ),( DDR / AMS ) ) ) ) - ( ARS - FirstVNF_Mem_Server ) )", "choosing": "( RMSe + ( RMSe + MUM ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( Max( FirstVNF_CPU_Server,( ( ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - ARS ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "Max( Min( DS ,Max( CS,RRSe ) ),( RRSe - MLU ) )", "obj1": 0.44343065693430656, "obj2": 0.5497097484471484}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( MUR + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.61095441538136}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + ( Min( DS ,CS ) / Min( RMSe ,MUM ) ) )", "obj1": 0.4197080291970803, "obj2": 0.61095441538136}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( Min( RCSe ,Max( ( MLU + MLU ),RMSe ) ),MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.6788321167883211, "obj2": 0.24759806072479518}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( RRS,( FirstVNF_Mem_Server * ACS ) ) - FirstVNF_Mem_Server ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) / Max( MLU,MUM ) ),( ( CS / ( RRSe / RMSe ) ) + ( RCSe / MUC ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6261428132880061}, {"determining": "( FirstVNF_CPU_Server + Max( AMS,( AMS + ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( RCSe + ( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),BR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8905109489051095, "obj2": 0.06879207834286155}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) + ( ( RRS * ( ( ACS / ARS ) * BR ) ) * PN ) ) + ( ( ( Const * BR ) * MDR ) / ( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( Max( RRSe,( Max( ( RCSe - ( MLU / MUR ) ),( MUC * RRSe ) ) + ( ( MUR / MUM ) + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + Min( ( MUR - MUC ) ,RRSe ) ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.9598540145985401, "obj2": 0.021406955845895158}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - ( AMS + Max( ( FirstVNF_RAM_Server + ( Max( FirstVNF_RAM,FirstVNF_RAM ) / ( FirstVNF_CPU + Max( ( FirstVNF_CPU - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) ) ),( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) + DDR ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe * MUM ) * ( DS * DS ) ),( Min( ( MLU - RMSe ) ,( MUC / MUR ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.019126724555490204}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Max( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server / FirstVNF_Mem ) ),ARS ) )", "choosing": "( ( ( MUC / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( MUC / ( MUC - RRSe ) ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9744525547445255, "obj2": 0.013692139525970771}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( CRS,( DDR / ( ( RRS * FirstVNF_RAM ) * ( FirstVNF_Mem + ( FirstVNF_Mem * ACS ) ) ) ) ) ) ) - ( ARS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( CS / Max( RRSe,MUM ) ) - Max( RMSe,( ( MUR * DS ) * MUR ) ) ) + ( RMSe + MUM ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( ( ( FirstVNF_CPU * ARS ) / PN ) - ( ( ( ( BR - MDR ) - FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - BR ) ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * ( RCSe * MUC ) ) ),( Min( RRSe ,( ( ( MLU - CS ) * Max( RMSe,DS ) ) * Max( ( MUC * RMSe ),MUM ) ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.9708029197080292, "obj2": 0.015612740109357096}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,Min( ACS ,( ( ( AMS - DDR ) + ARS ) - ( MDR - ( FirstVNF_Mem_Server / PN ) ) ) ) )", "choosing": "Max( Min( Min( CS ,MUC ) ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( RRSe - ( ( ( CS - MUC ) + ( DS + Max( MUM,MUR ) ) ) + RMSe ) ) ) ) )", "obj1": 0.9288321167883211, "obj2": 0.052725553340230824}, {"determining": "( Max( FirstVNF_CPU_Server,( ( ACS - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) - Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "Max( Min( DS ,Max( CS,RRSe ) ),Min( ( Max( ( ( MUC + MUC ) * ( ( RCSe / MUC ) + RMSe ) ),( ( ( MUR - MUM ) + MUM ) - CS ) ) + ( RMSe / Max( MUR,DS ) ) ) ,MUC ) )", "obj1": 0.43613138686131386, "obj2": 0.5688560738124885}, {"determining": "( Max( FirstVNF_CPU_Server,( ( ACS - ARS ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( ( RRSe / DS ) - MLU ) ) * MUC ) ) * ( CS * ( RMSe - MUM ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5497097484471484}, {"determining": "Min( ( ACS - Const ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Min( FirstVNF_CPU ,PN ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( RCSe + ( ( MUR * ( MUR / Max( RRSe,( Max( RRSe,DS ) + Max( MUC,MUR ) ) ) ) ) * ( Min( MUR ,DS ) - ( ( Min( RCSe ,Max( ( DS + MLU ),RCSe ) ) / RCSe ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.9781021897810219, "obj2": 0.008258663426806354}, {"determining": "( Min( ( FirstVNF_RAM_Server * Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ,( BR / Min( ( Min( ACS ,( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ) ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS + Max( Min( ( RMSe / MUM ) ,RCSe ),( Max( ( ( MUR - Max( DS,DS ) ) * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.5, "obj2": 0.46085458163273585}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),BR ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( MUC / ( MUC - RRSe ) ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.8905109489051095, "obj2": 0.06879207834286155}, {"determining": "( ( ( Max( Max( ACS,ACS ),DDR ) * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( Max( MDR,Const ) ,( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( Min( Min( Min( CS ,MUC ) ,( RCSe * MUC ) ) ,( RCSe - MUM ) ) ,DS ) ,MUM ) - ( ( MUM + MLU ) * Max( RRSe,MUR ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10566974413783047}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ARS ) ) ,RRS ) * DDR ) ) ,( FirstVNF_RAM_Server * ( CRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + ( ( ( ( ( ( MUM + RMSe ) * RMSe ) + Min( MUR ,MUM ) ) * Max( CS,( ( CS * MUC ) / Min( RRSe ,MUC ) ) ) ) + MLU ) / MUM ) ) / ( Max( Max( Max( RRSe,RRSe ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6261428132880061}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( Min( Min( Min( CS ,RCSe ) ,( RCSe * MUC ) ) ,CS ) ,DS ) ,MUM ) - ( MUC * Max( RRSe,MUR ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10566974413783047}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( ( ACS / AMS ) ,( ( FirstVNF_RAM_Server * ARS ) / CRS ) ) ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( ( ARS - ( AMS * MDR ) ) - Max( FirstVNF_CPU,( BR * Max( CRS,( DDR / AMS ) ) ) ) )", "choosing": "( ( ( Max( Min( ( DS - ( ( MLU + RCSe ) - MUR ) ) ,DS ),MUM ) - ( CS - ( ( Max( ( MLU - RCSe ),( RRSe + DS ) ) / RCSe ) + Max( ( ( DS * RRSe ) * MUC ),( MUM + Min( MLU ,MUM ) ) ) ) ) ) - Max( RMSe,Max( ( MUR * DS ),RRSe ) ) ) + ( RMSe + MUM ) )", "obj1": 0.48175182481751827, "obj2": 0.48721730846953276}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,Const ),Min( AMS ,( FirstVNF_Mem / PN ) ) ) - Min( DDR ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MLU + MUM ) - ( ( MUM - RRSe ) * ( RMSe / MUM ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5792331432735659}, {"determining": "( Min( FirstVNF_CPU ,PN ) + Max( AMS,( ( Min( Max( ( Min( Const ,FirstVNF_CPU ) + MDR ),Min( Max( ARS,MRS ) ,FirstVNF_Mem ) ) ,RRS ) + DDR ) + AMS ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe - DS ) + Max( Min( DS ,( RCSe + MLU ) ),( Max( ( RRSe * RRSe ),Max( MLU,MUC ) ) - MUR ) ) ),( DS - RCSe ) ) ) * ( MLU + RCSe ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - ( ( ( AMS * ( Max( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server / FirstVNF_Mem ) ),ARS ) - ( DDR + FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( MUC / ( MUC - RRSe ) ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.958029197080292, "obj2": 0.022214651678059073}], "12": [{"determining": "Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( FirstVNF_CPU + ARS ) ),Min( ( Max( ( ( ( PN * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + ( Max( MUC,Min( ( RCSe - Min( Min( MUR ,DS ) ,Min( RCSe ,MLU ) ) ) ,RRSe ) ) + ( MLU * RMSe ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.6563067858286639}, {"determining": "Min( ( Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - MRS ) ) * ( FirstVNF_Mem * ACS ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - Max( CRS,DDR ) ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,( FirstVNF_CPU_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUR / MUM ) - ( Max( ( ( DS / MUR ) * MUR ),( Max( RRSe,Min( RCSe ,Min( MUR ,CS ) ) ) - RCSe ) ) - ( DS + Min( MUM ,( ( ( RMSe - MUR ) / DS ) * CS ) ) ) ) ),( ( ( RMSe / ( MLU * RRSe ) ) * ( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.6563067858286639}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( RRS - ARS ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) * PN ) + Max( BR,MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( Const * BR ) * MDR ) ) )", "choosing": "( ( Min( Min( DS ,( MUR * Min( DS ,( RCSe * MUC ) ) ) ) ,MUM ) - ( RCSe / MUM ) ) / ( DS - DS ) )", "obj1": 0.6934306569343066, "obj2": 0.24181272983971663}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * BR ) * MDR ) ,( DDR - ( ACS / Max( ( ( DDR - ARS ) + Const ),( AMS / Max( BR,( PN - MRS ) ) ) ) ) ) ) )", "choosing": "( Max( ( Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7281021897810219, "obj2": 0.16716388238576171}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( CS - ( ( ( CS * Max( RRSe,RMSe ) ) + MUR ) * Min( DS ,( MUC * ( DS / CS ) ) ) ) ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),MLU ) - ( RMSe - MUR ) ) ) ) )", "obj1": 0.6186131386861314, "obj2": 0.2857385917260967}, {"determining": "( Max( MRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_Mem_Server - MDR ) * ( Const / Min( Const ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / ( RRSe * ( ( RMSe + MUM ) - MUR ) ) ) + Max( MUC,MUR ) )", "obj1": 0.614963503649635, "obj2": 0.32345107099180614}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,Max( ( BR + CRS ),ARS ) ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( Min( MLU ,Max( ( MLU + MLU ),RMSe ) ),MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.6624087591240876, "obj2": 0.26365608143353314}, {"determining": "( ( FirstVNF_RAM * ( ( MDR + CRS ) - ( ( FirstVNF_CPU - ACS ) / ( FirstVNF_CPU / ( MRS / ( ( MDR / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( FirstVNF_RAM,ACS ) ) * ( ( FirstVNF_CPU + PN ) / Min( Max( FirstVNF_CPU_Server,DDR ) ,( MDR / RRS ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * RCSe ) + ( Max( DS,CS ) / Min( RMSe ,MUM ) ) )", "obj1": 0.8065693430656934, "obj2": 0.10274973652045281}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5857664233576643, "obj2": 0.3362362317123175}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - ( ACS / Max( ( ( DDR - ARS ) + Const ),( AMS / Max( BR,( PN - MRS ) ) ) ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.885036496350365, "obj2": 0.07485736993302836}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) / ( ( ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) * ( FirstVNF_RAM_Server - MDR ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,Max( RRS,BR ) ) ) ) )", "choosing": "( ( DS - ( ( RCSe - Min( ( RCSe / DS ) ,RCSe ) ) + MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5383211678832117, "obj2": 0.40773516846942837}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( Max( Const,( Min( Max( ARS,FirstVNF_Mem_Server ) ,AMS ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( DS + RMSe ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( ( ( RMSe - MUR ) + ( Min( ( MUM / CS ) ,CS ) - RMSe ) ) ,RMSe ),CS ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.7572992700729927, "obj2": 0.13340695822127752}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / Min( AMS ,( ( Min( FirstVNF_CPU ,ACS ) / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( Max( ( ( RRSe * MUM ) / ( RRSe + ( MLU + ( MLU + MLU ) ) ) ),( DS - RCSe ) ) - ( RMSe - RCSe ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - ( FirstVNF_Mem / Max( ( Const + ( DDR - ARS ) ),BR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,Max( Max( RRSe,MUM ),MUC ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9087591240875912, "obj2": 0.059490709500032504}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( DDR * Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) - ( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( Min( BR ,FirstVNF_Mem ) ,MDR ) ) ) )", "choosing": "( ( MUR + ( RMSe / ( ( RCSe - ( Min( RMSe ,RRSe ) - MUR ) ) * MLU ) ) ) * ( Min( ( RRSe - ( RRSe - DS ) ) ,CS ) / RMSe ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * FirstVNF_RAM_Server ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + ( MUC - MUR ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6433070927125317}, {"determining": "( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( Const,BR ) / ( RRS / RRS ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( Min( ACS ,MRS ) / PN ) ) ) + ( ( AMS + MRS ) + ( ACS * ARS ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / RRSe ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6062301222707472}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / MRS ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4238797711153094}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Max( FirstVNF_RAM_Server,PN ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( Max( DS,( MLU + DS ) ) + CS ) + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MUR + MLU ),RMSe ) ) ) - ( ( Min( MUM ,MUM ) - CS ) + Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5432908280057158}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,Max( ( MLU + MLU ),RMSe ) ) - MUR ) ) * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,Max( ( DS + MLU ),RCSe ) ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( MUM + ( ( MUR * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.9288321167883211, "obj2": 0.052725553340230824}, {"determining": "( ( MRS / ( ( FirstVNF_RAM * PN ) / FirstVNF_CPU_Server ) ) - Max( MRS,FirstVNF_RAM ) )", "choosing": "( ( DS / CS ) * Max( MLU,MUR ) )", "obj1": 0.948905109489051, "obj2": 0.028650197590884177}, {"determining": "( FirstVNF_CPU_Server / ( ACS * DDR ) )", "choosing": "( ( MUC / ( MUC * Max( MLU,( MLU - ( RRSe * MLU ) ) ) ) ) + ( MUC - MUR ) )", "obj1": 0.48722627737226276, "obj2": 0.4776749175843942}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) ) )", "choosing": "( Max( RRSe,DS ) + ( Max( ( ( RRSe + ( MLU + ( Max( RRSe,DS ) + Max( MUC,MUR ) ) ) ) / ( RRSe / MUM ) ),( ( ( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) ) )", "obj1": 0.7408759124087592, "obj2": 0.1584884113118033}, {"determining": "( ( ( ( MDR * FirstVNF_RAM_Server ) * ( Const / Min( ( MDR / Max( CRS,FirstVNF_CPU_Server ) ) ,Max( Min( FirstVNF_RAM ,AMS ),DDR ) ) ) ) - ( FirstVNF_Mem_Server * BR ) ) / ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( CS - DS ) * ( MLU * ( Min( MUC ,MUM ) - MUC ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "Max( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ),Min( ( ( Max( RRS,FirstVNF_RAM ) - DDR ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / ( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) ) ) - Max( MLU,MUM ) ),( ( RCSe / MUC ) + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6287686080726834}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - PN ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( Min( CRS ,AMS ) - RRS ) ) ) ) ) - ( Max( CRS,( DDR / AMS ) ) / ARS ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( ( Min( ( CS * Max( RRSe,RMSe ) ) ,MUR ) * Min( DS ,( MUC * Max( RCSe,MUM ) ) ) ) - CS ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),( RRSe + ( RMSe - MUC ) ) ) - ( RMSe - MUR ) ) ) ) )", "obj1": 0.5346715328467153, "obj2": 0.41836055053911697}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( ( ARS - MDR ) / ARS ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( CS - ( ( RRSe * MUC ) * Min( DS ,( MUC * ( DS / CS ) ) ) ) ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( MUM * MUC ) ) )", "obj1": 0.781021897810219, "obj2": 0.11153366659864693}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / Min( ( FirstVNF_RAM - BR ) ,BR ) ) ) + Min( ( ( Const * Max( ARS,BR ) ) - MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + ( RMSe + MUM ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( ( FirstVNF_Mem + ( ( MDR + DDR ) - FirstVNF_RAM ) ) ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( MUM,( ( RCSe - CS ) / ( ( DS - MLU ) / MUM ) ) ) ) ) ,( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.7883211678832117, "obj2": 0.10443023359017682}, {"determining": "( ( ( ( MDR - BR ) / FirstVNF_CPU_Server ) / MRS ) - Min( ( Min( ACS ,RRS ) + CRS ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( ( RCSe / RCSe ) + MUC ) / RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) / ( CS / ( Max( DS,RRSe ) / ( MUM * MUR ) ) ) ) + RCSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06320005997506008}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( ( ARS - MDR ) / ARS ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( CS - ( ( RRSe * MUC ) * Min( DS ,( MUC * ( DS / CS ) ) ) ) ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( MUM * MUC ) ) )", "obj1": 0.781021897810219, "obj2": 0.11153366659864693}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * ( Min( FirstVNF_CPU ,PN ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.9361313868613139, "obj2": 0.03565217523666989}, {"determining": "( ( FirstVNF_CPU + DDR ) / Max( ARS,( BR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS - ( RMSe + DS ) ) + MLU ) / ( RRSe * ( MUC - RMSe ) ) ) + Max( MUC,( DS / RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5666069369344552}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),( FirstVNF_Mem_Server - MDR ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( ( RRSe * ( MUC - MUR ) ),MUC ) ) / ( Max( Max( Max( Min( RCSe ,Max( ( MLU + MLU ),RMSe ) ),MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.6806569343065694, "obj2": 0.24577404769017058}, {"determining": "( Max( ( Max( MDR,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server - BR ) ),( Max( Const,BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( ( ( ( MUC - RRSe ) - ( RMSe - MUR ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + Min( DS ,CS ) ) + MLU ) / MUR ),Min( DS ,Max( CS,( ( MUC - RRSe ) - ( RMSe - MUR ) ) ) ) ) * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( ( ( ( ( ( MUR - MUM ) + MUM ) - CS ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.4416058394160584, "obj2": 0.552597914269409}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "Min( ( ACS - Const ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Min( FirstVNF_CPU ,PN ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( RCSe + ( ( MUR * ( MUR / Max( RRSe,( Max( RRSe,DS ) + Max( MUC,MUR ) ) ) ) ) * ( Min( MUR ,DS ) - ( ( Min( RCSe ,Max( ( DS + MLU ),RCSe ) ) / RCSe ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.9781021897810219, "obj2": 0.008258663426806354}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5127140475254383}, {"determining": "Min( ( ( DDR - DDR ) - FirstVNF_Mem ) ,Max( RRS,( FirstVNF_Mem_Server * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - MRS ) ) * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( ( CS + ( RRSe / MLU ) ) ,DS ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Max( RMSe,RCSe ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4389373202963147}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( FirstVNF_Mem + Min( MRS ,( DDR * ( DDR + RRS ) ) ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,DS ) ) + Max( MLU,MUC ) ) / ( Max( Max( MUC,Max( Min( DS ,Max( ( MLU + MLU ),RMSe ) ),Max( MUC,MUC ) ) ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.6697080291970803, "obj2": 0.25605248855041707}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( Min( DS ,Max( ( MLU + MLU ),RMSe ) ),MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.6715328467153284, "obj2": 0.2548129780027634}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7445255474452555, "obj2": 0.14891691762856293}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server * ( MDR * ( FirstVNF_CPU * Max( CRS,FirstVNF_RAM_Server ) ) ) ) / CRS ) ) ) - Min( FirstVNF_RAM_Server ,( ARS - BR ) ) )", "choosing": "( ( RMSe - ( RRSe + ( Min( MUR ,( Min( RRSe ,Min( MUM ,MUC ) ) - ( CS / ( RRSe * DS ) ) ) ) - ( ( ( ( RRSe / MUC ) / ( MUM * CS ) ) * ( MUC + ( RMSe - RMSe ) ) ) * RMSe ) ) ) ) * Max( ( ( ( MUC - Min( CS ,RRSe ) ) - ( MUC * ( MLU * Min( CS ,RCSe ) ) ) ) * DS ),Min( RRSe ,RMSe ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182883}, {"determining": "( ( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - BR ) ) ) - Min( ( ( Max( ( FirstVNF_RAM + CRS ),FirstVNF_RAM_Server ) + ( RRS * ( Min( ( MDR + ARS ) ,( MRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ,( DDR - BR ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * RRSe ) ),( Min( RRSe ,( RCSe / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.9525547445255474, "obj2": 0.025498373636745772}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( CRS,( DDR / Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + ( ( CS * Max( RRSe,DS ) ) + MUR ) )", "obj1": 0.4744525547445255, "obj2": 0.4994428761367534}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.7481751824817519, "obj2": 0.14133249796582245}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( MRS - Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,RRS ) ) ) + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,( ( ( DDR * ARS ) * Const ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe / RRSe ),( CS * ( Max( RMSe,MUM ) - Min( RMSe ,MUC ) ) ) ) - ( ( CS - RCSe ) + ( ( CS / MUM ) * DS ) ) ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - ( ( ARS + MRS ) * MRS ) ) ) - ( ( Max( ( ( ( RRS - BR ) * ( Min( Const ,RRS ) + DDR ) ) * MRS ),RRS ) + ARS ) - ACS ) )", "choosing": "( ( Max( ( Max( Min( Min( MUM ,Min( MLU ,MUR ) ) ,Max( ( RMSe / RCSe ),Min( CS ,DS ) ) ),DS ) + DS ),( MUC + DS ) ) - MUR ) + ( RMSe + MUC ) )", "obj1": 0.9908759124087592, "obj2": 0.0019579500526640636}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - ( ACS / Max( ( Const + ( DDR - ARS ) ),BR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.885036496350365, "obj2": 0.07485736993302836}, {"determining": "( Max( FirstVNF_RAM,CRS ) / ( ( CRS - ARS ) + FirstVNF_CPU_Server ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS - RMSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5693262046144868}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( BR - MDR ) ) + Min( ( ( Min( ARS ,FirstVNF_Mem ) * BR ) * MDR ) ,( MRS / MDR ) ) )", "choosing": "( ( RMSe - RCSe ) - Max( ( ( RRSe * ( MLU + ( MLU + MLU ) ) ) / ( ( ( ( CS / MUM ) * MUR ) / DS ) / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16289575186331304}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ARS ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( RRSe * ( RCSe - MUC ) ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.7518248175182481, "obj2": 0.1385892036900463}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,Const ),Min( AMS ,( FirstVNF_Mem / PN ) ) ) - Min( DDR ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MLU + MUM ) - ( ( MUM - RRSe ) * ( RMSe / MUM ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5792331432735659}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( ( FirstVNF_RAM_Server + ARS ),( DDR / AMS ) ) ) ) - ( ARS - FirstVNF_Mem_Server ) )", "choosing": "( RMSe + ( RMSe + MUM ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),DDR ) - DDR ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( CS ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6166150994565309}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_Mem_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MRS ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.48175182481751827, "obj2": 0.48721730846953276}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4389373202963147}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,( RMSe - MUM ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,ARS ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( ( AMS + ( ( CRS / DDR ) * CRS ) ) - ( Max( PN,DDR ) * Max( ACS,PN ) ) ) / PN ) - ( ( Const * BR ) * ( ( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) + RRS ) * DDR ) ) ) )", "choosing": "Max( Min( DS ,Max( CS,RRSe ) ),Min( ( Max( ( ( MUC + MUC ) * ( ( RCSe / MUC ) + RMSe ) ),( ( ( MUR - MUM ) + MUM ) - CS ) ) + Max( ( RMSe + Max( ( Min( RMSe ,MLU ) + MUR ),RMSe ) ),Max( MUR,CS ) ) ) ,MUR ) )", "obj1": 0.4489051094890511, "obj2": 0.5432908280057158}, {"determining": "( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( MUM ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Max( RMSe,RCSe ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.9908759124087592, "obj2": 0.0019579500526640636}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - ( ( ( AMS * ( Max( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server / MRS ) ),ARS ) - ( DDR + FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * Max( MUR,( DS / MUR ) ) ),( Min( RRSe ,( MUC / ( MUC - RRSe ) ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.958029197080292, "obj2": 0.02221465167805907}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( ( ACS / AMS ) ,( ( FirstVNF_RAM_Server * ARS ) / CRS ) ) ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( ( ARS - MDR ) / ARS ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),RMSe ) ) ) - ( ( CS - Min( MUM ,MUM ) ) + ( MUM * MUC ) ) ) ) ) )", "obj1": 0.7828467153284672, "obj2": 0.11127972097856091}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - ( AMS + Max( ( FirstVNF_RAM_Server + ( Max( FirstVNF_RAM,FirstVNF_RAM ) / ( FirstVNF_CPU + Max( ( FirstVNF_CPU - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) ) ),( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) + DDR ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe * MUM ) * ( DS * DS ) ),( Min( ( MLU - RMSe ) ,( MUC / MUR ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.019126724555490204}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) )", "choosing": "( Max( ( ( RRSe + Max( MLU,MUC ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7463503649635036, "obj2": 0.1474565739354771}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),BR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8923357664233577, "obj2": 0.06555750517243082}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4238797711153094}, {"determining": "( FirstVNF_CPU_Server + ( Min( ( FirstVNF_RAM_Server * PN ) ,ARS ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + ( Min( DS ,CS ) / Min( RMSe ,MUM ) ) )", "obj1": 0.458029197080292, "obj2": 0.5153060931254188}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) ) - ( MRS * DDR ) )", "choosing": "( Max( ( DS * DS ),RRSe ) + ( Max( ( ( MUM * MLU ) + ( ( CS + RRSe ) - Min( CS ,Max( ( RCSe / RMSe ),Min( CS ,DS ) ) ) ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,MUM ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RMSe + RRSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.9306569343065694, "obj2": 0.0461323878540627}, {"determining": "( ( MDR + ( RRS / ( ( ( ( Max( AMS,FirstVNF_RAM ) - ( FirstVNF_CPU_Server / MRS ) ) - ( Max( MDR,PN ) - Const ) ) * ( ( BR / FirstVNF_Mem ) / DDR ) ) - ( ( PN - AMS ) + FirstVNF_CPU_Server ) ) ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ARS ) ) ) * AMS ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Max( DS,MUC ) * ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( RRSe,Min( RRSe ,CS ) ) ) * ( MLU + RCSe ) )", "obj1": 0.7554744525547445, "obj2": 0.1352764158301366}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * ( Min( FirstVNF_CPU ,PN ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Max( RRSe,DS ) + ( Max( ( ( RRSe + ( MLU + ( Max( RRSe,DS ) + Max( MUC,MUR ) ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) ) )", "obj1": 0.9361313868613139, "obj2": 0.03565217523666989}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * ( RCSe * MUC ) ) ),( Min( RRSe ,( RCSe / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "Max( Min( ( ( Const - FirstVNF_RAM ) + ARS ) ,MDR ),Max( ( FirstVNF_CPU * ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( MLU,MUC ) + MUC ),MUR ) ) ,( Min( DS ,MLU ) - DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6225382552063546}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server + Min( ACS ,ARS ) ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( RRSe,Max( CS,RRSe ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) * ( BR / Min( ( FirstVNF_CPU_Server / ( ( ACS + FirstVNF_CPU_Server ) + BR ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( ( CS + ( RMSe / DS ) ) ,RCSe ),( Max( ( ( Max( DS,DS ) - MUR ) * RRSe ),( MUR / ( Max( MUM,RMSe ) * MUR ) ) ) - MUR ) ) ) / ( ( RCSe * CS ) + DS ) )", "obj1": 0.5, "obj2": 0.46085458163273585}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( Min( ACS ,PN ) ,AMS ) ),Min( ( ( Max( RRS,AMS ) - DDR ) + ARS ) ,MRS ) )", "choosing": "( RCSe + ( Max( ( RMSe / ( MUC * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - ( ( ( MUC - MUR ) / MLU ) - MLU ) ) ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( DDR / MDR ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Min( FirstVNF_CPU ,PN ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( ( MDR * RRS ),DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MUC / Max( ( ( Min( MUC ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.9781021897810219, "obj2": 0.008258663426806354}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - PN ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( Min( CRS ,AMS ) - RRS ) ) ) ) ) - ( Max( CRS,( DDR / AMS ) ) / ARS ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( ( Min( ( CS * Max( RRSe,RMSe ) ) ,MUR ) * Min( DS ,( MUC * Max( RCSe,MUM ) ) ) ) - CS ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),( RRSe + ( RMSe - MUC ) ) ) - ( RMSe - MUR ) ) ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4634590149582614}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6788321167883211, "obj2": 0.24759806072479518}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * ( FirstVNF_Mem_Server / MRS ) ) * FirstVNF_RAM ),RRS ) + ARS ) ,MDR ) )", "choosing": "Min( ( RRSe - Max( ( Max( MLU,MUC ) + MUC ),MUR ) ) ,( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6221620954758615}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + ( Min( DS ,CS ) / Min( RMSe ,MUM ) ) )", "obj1": 0.4197080291970803, "obj2": 0.61095441538136}, {"determining": "( Max( Min( FirstVNF_RAM ,AMS ),Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) / ( ( RRS + AMS ) - Max( Max( CRS,( DDR / AMS ) ),ARS ) ) )", "choosing": "( ( Max( MLU,( ( MUR / MUM ) - Max( ( RMSe * ( MLU / RRSe ) ),MLU ) ) ) * Max( RRSe,( CS - ( ( ( CS * Max( RRSe,RMSe ) ) + MUR ) * Min( DS ,( MUC * Min( DS ,CS ) ) ) ) ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),( RRSe + ( RMSe - MUC ) ) ) - ( RMSe - MUR ) ) ) ) )", "obj1": 0.5346715328467153, "obj2": 0.41836055053911697}, {"determining": "( FirstVNF_CPU_Server + Max( AMS,( AMS + ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( MUC,MUR ) )", "obj1": 0.6788321167883211, "obj2": 0.24759806072479518}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),BR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8905109489051095, "obj2": 0.06879207834286155}, {"determining": "( Max( FirstVNF_CPU_Server,( AMS * PN ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "Max( Min( DS ,Max( CS,RRSe ) ),( ( DS * DS ) * Max( CS,Max( ( MUC / MUR ),MUM ) ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5497097484471484}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.9288321167883211, "obj2": 0.052725553340230824}, {"determining": "( FirstVNF_CPU_Server + Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( RCSe + ( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + ( ( Min( ( MUM + MUM ) ,Max( MUM,RCSe ) ) - Max( DS,DS ) ) * MLU ) ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.5017835659209268}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( MUR + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.61095441538136}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( ( ( CS - MUC ) + ( DS + Max( MUM,MUR ) ) ) + RMSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5060903563812622}], "13": [{"determining": "Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( FirstVNF_CPU + ARS ) ),Min( ( Max( ( ( ( PN * FirstVNF_Mem ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + ( Max( MUC,Min( ( RCSe - Min( Min( MUR ,DS ) ,Min( RCSe ,MLU ) ) ) ,RRSe ) ) + ( MLU * RMSe ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.6563067858286639}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( Max( BR,RRS ) * ( Min( ( MDR / ARS ) ,Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) ) / Const ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MUR + DS ),( MLU + MLU ) ) ),Max( CS,Min( RRSe ,CS ) ) ) * ( MUC - MUR ) ) ) + Max( ( ( Min( MUR ,( MLU + ( MUR + MUM ) ) ) / MUM ) / RCSe ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Max( ( FirstVNF_CPU / CRS ),Const ) ),Min( ( Max( ( ( ( Max( FirstVNF_CPU_Server,AMS ) - FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "( Min( DS ,MUC ) * ( MLU + ( RMSe - ( RRSe * ( RCSe - MUC ) ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.6563067858286639}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( RRS - ARS ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) * PN ) + Max( BR,MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( Const * BR ) * MDR ) ) )", "choosing": "( ( Min( Min( DS ,( MUR * Min( DS ,( RCSe * MUC ) ) ) ) ,MUM ) - ( RCSe / MUM ) ) / ( DS - DS ) )", "obj1": 0.6934306569343066, "obj2": 0.24181272983971663}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * BR ) * MDR ) ,( DDR - ( ACS / Max( ( ( DDR - ARS ) + Const ),( AMS / Max( BR,( PN - MRS ) ) ) ) ) ) ) )", "choosing": "( Max( ( Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7281021897810219, "obj2": 0.16716388238576171}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( CS - ( ( ( CS * Max( RRSe,RMSe ) ) + MUR ) * Min( DS ,( MUC * ( DS / CS ) ) ) ) ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),MLU ) - ( RMSe - MUR ) ) ) ) )", "obj1": 0.6076642335766423, "obj2": 0.30808981542473196}, {"determining": "( ( FirstVNF_RAM * ( ( MDR + CRS ) - ( ( FirstVNF_CPU - ACS ) / ( FirstVNF_CPU / ( MRS / ( ( MDR / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( FirstVNF_RAM,ACS ) ) * ( ( FirstVNF_CPU + PN ) / Min( Max( FirstVNF_CPU_Server,DDR ) ,( MDR / RRS ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MLU * RCSe ) + ( Max( DS,CS ) / Min( RMSe ,MUM ) ) )", "obj1": 0.8065693430656934, "obj2": 0.10274973652045281}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5857664233576643, "obj2": 0.3362362317123175}, {"determining": "( ( ( Min( ARS ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( ( ACS / Max( ( Const + ( AMS / ARS ) ),BR ) ) - ( AMS + Min( ( MRS / MDR ) ,Min( Max( ( PN + RRS ),BR ) ,( ( MRS / ACS ) * PN ) ) ) ) ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,( MLU + ( DS / Min( MLU ,CS ) ) ) ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.8813868613138686, "obj2": 0.07777955451834215}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( BR / Min( ( FirstVNF_CPU_Server / ( ( ACS + FirstVNF_CPU_Server ) + BR ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( DS + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.6441605839416058, "obj2": 0.27041157621966283}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) / ( ( ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) * ( FirstVNF_RAM_Server - MDR ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,Max( RRS,BR ) ) ) ) )", "choosing": "( ( DS - ( ( RCSe - Min( ( RCSe / DS ) ,RCSe ) ) + MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5383211678832117, "obj2": 0.40773516846942837}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.9014598540145985, "obj2": 0.053545790737646606}, {"determining": "( Max( Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( DDR * Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) - ( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( Min( BR ,FirstVNF_Mem ) ,MDR ) ) ) )", "choosing": "( ( MUR + ( RMSe / ( ( RCSe - ( Min( RMSe ,RRSe ) - MUR ) ) * MLU ) ) ) * ( Min( ( RRSe - ( RRSe - DS ) ) ,CS ) / RMSe ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ARS * ( Min( ( AMS / BR ) ,CRS ) - ( ACS + AMS ) ) ) * BR ) * MDR ) ) )", "choosing": "( Max( ( ( Min( ( ( Min( RRSe ,CS ) - ( MLU / MUM ) ) - RRSe ) ,CS ) * ( ( CS + MUR ) + ( MLU - MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6222627737226277, "obj2": 0.27260364009129373}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - DDR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.7718978102189781, "obj2": 0.12279255408280017}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Min( ACS ,( ( ( CRS - DDR ) + ARS ) - FirstVNF_Mem ) ) )", "choosing": "( MUM + ( ( MUR * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.9288321167883211, "obj2": 0.052725553340230824}, {"determining": "( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( Const,BR ) / ( RRS / RRS ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( Min( ACS ,MRS ) / PN ) ) ) + ( ( AMS + MRS ) + ( ACS * ARS ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / RRSe ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * ( ( FirstVNF_CPU - PN ) / Min( ( ( ARS * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / Min( MUM ,Max( RRSe,DS ) ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( ( ( MUR - MLU ) + ( ( MUM * MUM ) * ( MUC - MUM ) ) ) - RCSe ) )", "obj1": 0.9361313868613139, "obj2": 0.035453385431767584}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( Const + ( DDR - ARS ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6094890510948905, "obj2": 0.28344833089235605}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6062301222707472}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Max( FirstVNF_RAM_Server,PN ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( Max( DS,( MLU + DS ) ) + CS ) + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MUR + MLU ),RMSe ) ) ) - ( ( Min( MUM ,MUM ) - CS ) + Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5432908280057158}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( Max( Const,( Min( Max( ARS,FirstVNF_Mem_Server ) ,AMS ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( DS + RMSe ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( ( ( RMSe - MUR ) + ( Min( ( MUM / CS ) ,CS ) - RMSe ) ) ,RMSe ),CS ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.7572992700729927, "obj2": 0.13340695822127752}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( ( ( FirstVNF_Mem_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MRS ) ) ) - ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) + PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) ) )", "choosing": "( ( Max( MLU,DS ) - MUR ) - ( RMSe - RCSe ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,Max( ( MLU + MLU ),RMSe ) ) - MUR ) ) * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "( ( ARS * ( Max( BR,AMS ) - FirstVNF_CPU_Server ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const - Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) ) * DDR ) ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,Max( ( DS + MUC ),RCSe ) ) / RCSe ) - ( CS * RCSe ) ) - ( DS * CS ) ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( ( MLU + MLU ) - Max( MUM,RMSe ) ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MUM + RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) ) )", "choosing": "( Max( RRSe,DS ) + ( Max( ( ( RRSe + ( MLU + ( Max( RRSe,DS ) + Max( MUC,MUR ) ) ) ) / ( RRSe / MUM ) ),( ( ( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) ) )", "obj1": 0.7408759124087592, "obj2": 0.1584884113118033}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4238797711153094}, {"determining": "( FirstVNF_CPU_Server / ( ACS * DDR ) )", "choosing": "( ( MUC / ( MUC * Max( MLU,( MLU - ( RRSe * MLU ) ) ) ) ) + ( MUC - MUR ) )", "obj1": 0.48722627737226276, "obj2": 0.4776749175843942}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,Max( ( BR + CRS ),ARS ) ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( Min( MLU ,Max( ( MLU + MLU ),RMSe ) ),MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.6624087591240876, "obj2": 0.26365608143353314}, {"determining": "( ( ( ( MDR * FirstVNF_RAM_Server ) * ( Const / Min( ( MDR / Max( CRS,FirstVNF_CPU_Server ) ) ,Max( Min( FirstVNF_RAM ,AMS ),DDR ) ) ) ) - ( FirstVNF_Mem_Server * BR ) ) / ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( CS - DS ) * ( MLU * ( Min( MUC ,MUM ) - MUC ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / ( ARS / FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM ),RRS ) + ARS ) ,MDR ) )", "choosing": "Min( ( Max( RCSe,( MLU / ( RRSe * MLU ) ) ) + Min( ( CS + ( RRSe / MLU ) ) ,DS ) ) ,Min( DS ,( MUR - MUM ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6246231732971471}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - PN ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( Min( CRS ,AMS ) - RRS ) ) ) ) ) - ( Max( CRS,( DDR / AMS ) ) / ARS ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( ( Min( ( CS * Max( RRSe,RMSe ) ) ,MUR ) * Min( DS ,( MUC * Max( RCSe,MUM ) ) ) ) - CS ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),( RRSe + ( RMSe - MUC ) ) ) - ( RMSe - MUR ) ) ) ) )", "obj1": 0.5346715328467153, "obj2": 0.41836055053911697}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( ( FirstVNF_Mem + ( ( MDR + DDR ) - FirstVNF_RAM ) ) ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( MUM,( ( RCSe - CS ) / ( ( DS - MLU ) / MUM ) ) ) ) ) ,( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6186131386861314, "obj2": 0.2813398513503766}, {"determining": "( ( MRS / ( ( FirstVNF_RAM * PN ) / FirstVNF_CPU_Server ) ) - Max( MRS,FirstVNF_RAM ) )", "choosing": "( ( DS / CS ) * Max( MLU,MUR ) )", "obj1": 0.948905109489051, "obj2": 0.028650197590884177}, {"determining": "( ( FirstVNF_CPU + DDR ) / Max( ARS,( BR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS - ( RMSe + DS ) ) + MLU ) / ( RRSe * ( MUC - RMSe ) ) ) + Max( MUC,( DS / RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5666069369344552}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * FirstVNF_RAM_Server ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( MUR + ( MUC - MUR ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6433070927125317}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( BR - MDR ) ) + Min( ( ( Min( ARS ,FirstVNF_Mem ) * BR ) * MDR ) ,( MRS / MDR ) ) )", "choosing": "( ( RMSe - RCSe ) - Max( ( ( RRSe * ( MLU + ( MLU + MLU ) ) ) / ( ( ( ( CS / MUM ) * MUR ) / DS ) / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.16289575186331304}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),( FirstVNF_Mem_Server - MDR ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( ( RRSe * ( MUC - MUR ) ),MUC ) ) / ( Max( Max( Max( Min( RCSe ,Max( ( MLU + MLU ),RMSe ) ),MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.6806569343065694, "obj2": 0.24577404769017058}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( CRS,( DDR / Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) - Max( RMSe,Max( ( MUR * DS ),MUR ) ) ) + ( ( CS * Max( RRSe,DS ) ) + MUR ) )", "obj1": 0.4744525547445255, "obj2": 0.4994428761367534}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "( Max( ( Max( MDR,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server - BR ) ),( Max( Const,BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( MLU,MUC ) + MUC ),MUR ) ) ,( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( ( FirstVNF_CPU_Server - RRS ) - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( ACS,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( RCSe + ( RCSe / CS ) )", "obj1": 0.7883211678832117, "obj2": 0.10443023359017682}, {"determining": "Min( ( FirstVNF_Mem_Server - BR ) ,Max( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ),( Max( ( BR + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ACS / Min( Const ,RRS ) ) ) ),Min( BR ,AMS ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( ( ( MUM / Min( RCSe ,RRSe ) ) / CS ) / ( RRSe - MLU ) ) ) + Min( MUR ,( MLU + MLU ) ) ) + ( Max( ( MUC + Max( MUR,CS ) ),MUM ) * ( RMSe / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4357587714925196}, {"determining": "Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server + BR ) ) * ( MRS * MRS ) ),Max( RRS,( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,MUC ) + MUC ) - MUR ) ) ,( Min( ( ( ( MUR * DS ) + ( RCSe * RRSe ) ) + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.3978102189781022, "obj2": 0.6502818688940973}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( ( ( ( ( ( MUR - MUM ) + MUM ) - CS ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.4416058394160584, "obj2": 0.552597914269409}, {"determining": "( Max( FirstVNF_RAM,CRS ) / ( ( CRS - ARS ) + FirstVNF_CPU_Server ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS - RMSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5693262046144868}, {"determining": "( FirstVNF_CPU_Server + ( Min( ( FirstVNF_RAM_Server * PN ) ,ARS ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server + Max( CRS,Min( ( ( FirstVNF_Mem * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + Max( MLU,MUC ) )", "obj1": 0.47992700729927007, "obj2": 0.4849007296255108}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7445255474452555, "obj2": 0.14891691762856293}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5127140475254383}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ARS + Min( MDR ,ACS ) ),BR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( ( DS + RRSe ) + Min( MUR ,RMSe ) ) ,DS ) - DS ) ) )", "obj1": 0.885036496350365, "obj2": 0.07404979505949054}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( FirstVNF_Mem + Min( MRS ,( DDR * ( DDR + RRS ) ) ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,DS ) ) + Max( MLU,MUC ) ) / ( Max( Max( MUC,Max( Min( DS ,Max( ( MLU + MLU ),RMSe ) ),Max( MUC,MUC ) ) ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.6697080291970803, "obj2": 0.25605248855041707}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( DDR / MDR ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Min( FirstVNF_CPU ,PN ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( ( MDR * RRS ),DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MUC / Max( ( ( Min( MUC ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.9781021897810219, "obj2": 0.008258663426806354}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,Const ),Min( AMS ,( FirstVNF_Mem / PN ) ) ) - Min( DDR ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MLU + MUM ) - ( ( MUM - RRSe ) * ( RMSe / MUM ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5792331432735659}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( ( ( CS - MUC ) + ( DS + Max( MUM,MUR ) ) ) + RMSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5060903563812622}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server * ( MDR * ( FirstVNF_CPU * Max( CRS,FirstVNF_RAM_Server ) ) ) ) / CRS ) ) ) - Min( FirstVNF_RAM_Server ,( ARS - BR ) ) )", "choosing": "( ( RMSe - ( RRSe + ( Min( MUR ,( Min( RRSe ,Min( MUM ,MUC ) ) - ( CS / ( RRSe * DS ) ) ) ) - ( ( ( ( RRSe / MUC ) / ( MUM * CS ) ) * ( MUC + ( RMSe - RMSe ) ) ) * RMSe ) ) ) ) * Max( ( ( ( MUC - Min( CS ,RRSe ) ) - ( MUC * ( MLU * Min( CS ,RCSe ) ) ) ) * DS ),Min( RRSe ,RMSe ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182883}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),BR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8905109489051095, "obj2": 0.06879207834286155}, {"determining": "Max( Max( Max( FirstVNF_Mem,( BR * PN ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( ( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * ( FirstVNF_Mem_Server - MRS ) ) * FirstVNF_RAM ),RRS ) )", "choosing": "( ( MUC / Max( ( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) * ( RRSe * ( RCSe * MUC ) ) ),( Min( RRSe ,( RCSe / CS ) ) - ( DS + MLU ) ) ) ) * Max( CS,Max( MUC,( MUR * MUC ) ) ) )", "obj1": 0.5018248175182481, "obj2": 0.45825315189687443}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),DDR ) - DDR ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( CS ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6166150994565309}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,Max( ( BR + CRS ),ARS ) ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "Max( MUR,( MUR + Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) ) )", "obj1": 0.6624087591240876, "obj2": 0.26365608143353314}, {"determining": "( FirstVNF_CPU_Server + Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( RCSe + ( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + ( ( Min( ( MUM + MUM ) ,Max( MUM,RCSe ) ) - Max( DS,DS ) ) * MLU ) ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.5017835659209268}, {"determining": "( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - ( ( ARS + MRS ) * MRS ) ) ) - ( ( Max( ( ( ( RRS - BR ) * ( Min( Const ,RRS ) + DDR ) ) * MRS ),RRS ) + ARS ) - ACS ) )", "choosing": "( ( Max( ( Max( Min( Min( MUM ,Min( MLU ,MUR ) ) ,Max( ( RMSe / RCSe ),Min( CS ,DS ) ) ),DS ) + DS ),( MUC + DS ) ) - MUR ) + ( RMSe + MUC ) )", "obj1": 0.9908759124087592, "obj2": 0.0019579500526640636}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( ( FirstVNF_RAM_Server + ARS ),( DDR / AMS ) ) ) ) - ( ARS - FirstVNF_Mem_Server ) )", "choosing": "( RMSe + ( RMSe + MUM ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( ( ( ( MDR - BR ) / FirstVNF_CPU_Server ) / MRS ) - Min( ( Min( ACS ,RRS ) + CRS ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( ( RCSe / RCSe ) + MUC ) / RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) / ( CS / ( Max( DS,RRSe ) / ( MUM * MUR ) ) ) ) + RCSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06320005997506008}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Max( RRSe,DS ) + ( Min( DS ,CS ) / Min( RMSe ,MUM ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( MRS - Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,RRS ) ) ) + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,( ( ( DDR * ARS ) * Const ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe / RRSe ),( CS * ( Max( RMSe,MUM ) - Min( RMSe ,MUC ) ) ) ) - ( ( CS - RCSe ) + ( ( CS / MUM ) * DS ) ) ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),( Min( CRS ,ARS ) + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUM ),MLU ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10566974413783047}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( ( AMS + ( ( CRS / DDR ) * CRS ) ) - ( Max( PN,DDR ) * Max( ACS,PN ) ) ) / PN ) - ( ( Const * BR ) * ( ( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) + RRS ) * DDR ) ) ) )", "choosing": "Max( Min( DS ,Max( CS,RRSe ) ),Min( ( Max( ( ( MUC + MUC ) * ( ( RCSe / MUC ) + RMSe ) ),( ( ( MUR - MUM ) + MUM ) - CS ) ) + Max( ( RMSe + Max( ( Min( RMSe ,MLU ) + MUR ),RMSe ) ),Max( MUR,CS ) ) ) ,MUR ) )", "obj1": 0.4489051094890511, "obj2": 0.5432908280057158}, {"determining": "( ( Max( Max( Min( BR ,MDR ),ARS ),ARS ) / MRS ) - Min( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / MRS ) ) ) ) * ( AMS + BR ) ) ,( DDR - ( ACS / Max( ( ( DDR - ARS ) + Const ),( AMS / Max( BR,( PN - MRS ) ) ) ) ) ) ) )", "choosing": "( ( DS - Min( ( CS / RMSe ) ,MUC ) ) * Max( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + RCSe ) ) ),MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.0191267245554902}, {"determining": "( ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( ( ARS - MDR ) / ARS ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),RMSe ) ) ) - ( ( CS - Min( MUM ,MUM ) ) + ( MUM * MUC ) ) ) ) ) )", "obj1": 0.7828467153284672, "obj2": 0.11127972097856091}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) / ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( ( Min( ( CS * Max( RRSe,RMSe ) ) ,MUR ) * Min( DS ,( MUC * Max( RCSe,MUM ) ) ) ) - CS ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUR ),( RRSe + ( RMSe - MUC ) ) ) - ( RMSe - MUR ) ) ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4634590149582614}, {"determining": "( ( FirstVNF_CPU / ( MDR + ( Max( FirstVNF_RAM,Const ) * MDR ) ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * DDR ) ) * RRS ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( DS - MUM ),( ( MUC / Max( ( ( DS * DS ) * ( RRSe * ( RMSe * MUC ) ) ),( ( RMSe + MLU ) - Min( RRSe ,( RCSe / CS ) ) ) ) ) * Max( CS,MUR ) ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.7463503649635036, "obj2": 0.14492442381235215}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),BR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8923357664233577, "obj2": 0.06555750517243082}, {"determining": "( FirstVNF_CPU_Server + Max( AMS,Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) ) / ( Max( Max( Max( RRSe,MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.458029197080292, "obj2": 0.5153060931254188}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) ) - ( MRS * DDR ) )", "choosing": "( Max( ( DS * DS ),RRSe ) + ( Max( ( ( MUM * MLU ) + ( ( CS + RRSe ) - Min( CS ,Max( ( RCSe / RMSe ),Min( CS ,DS ) ) ) ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,MUM ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RMSe + RRSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.9306569343065694, "obj2": 0.0461323878540627}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) * ( BR / Min( ( FirstVNF_CPU_Server / ( ( ACS + FirstVNF_CPU_Server ) + BR ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( ( CS + ( RMSe / DS ) ) ,RCSe ),( Max( ( ( Max( DS,DS ) - MUR ) * RRSe ),( MUR / ( Max( MUM,RMSe ) * MUR ) ) ) - MUR ) ) ) / ( ( RCSe * CS ) + DS ) )", "obj1": 0.5, "obj2": 0.46085458163273585}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( Max( MDR,Min( FirstVNF_RAM ,BR ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( Min( Max( RRSe,MLU ) ,( RRSe + RRSe ) ) + ( MUC - MUR ) ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * ( RCSe * MUC ) ) ),( Min( RRSe ,( RCSe / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( ( FirstVNF_RAM_Server + ARS ),( BR / ( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) ) ) ) - ( ARS - FirstVNF_Mem_Server ) )", "choosing": "( RMSe + ( Min( DS ,( MUR / MUC ) ) - ( RMSe + MLU ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,Const ),Min( AMS ,( FirstVNF_Mem / PN ) ) ) - Min( DDR ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MLU + MUM ) - ( ( MUM - RRSe ) * ( RMSe / MUM ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6788321167883211, "obj2": 0.24759806072479518}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.4197080291970803, "obj2": 0.61095441538136}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / Min( AMS ,( ( Min( FirstVNF_CPU ,ACS ) / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( Max( ( ( RRSe * MUM ) / ( RRSe + ( MLU + ( MLU + MLU ) ) ) ),( DS - RCSe ) ) - ( RMSe - RCSe ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "( Max( Min( FirstVNF_RAM ,AMS ),Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) / ( ( RRS + AMS ) - Max( Max( CRS,( DDR / AMS ) ),ARS ) ) )", "choosing": "( ( Max( MLU,( ( MUR / MUM ) - Max( ( RMSe * ( MLU / RRSe ) ),MLU ) ) ) * Max( RRSe,( CS - ( ( ( CS * Max( RRSe,RMSe ) ) + MUR ) * Min( DS ,( MUC * Min( DS ,CS ) ) ) ) ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),( RRSe + ( RMSe - MUC ) ) ) - ( RMSe - MUR ) ) ) ) )", "obj1": 0.5346715328467153, "obj2": 0.41836055053911697}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / MRS ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4238797711153094}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,Max( ( DS + MLU ),RCSe ) ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - ( ( ( AMS * ( Max( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server / RRS ) ),ARS ) - ( DDR + FirstVNF_RAM_Server ) ) ) / ( FirstVNF_RAM_Server + PN ) ) - FirstVNF_CPU_Server ) )", "choosing": "( RCSe + ( ( RMSe / MUC ) * ( ( MLU + ( MLU / MUR ) ) - ( ( DS / MUM ) / ( ( ( ( MLU + DS ) - RRSe ) / Max( RCSe,( MUM + MUC ) ) ) * Max( MUC,MUR ) ) ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.02221465167805907}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "Max( MUR,( MUR + ( MUC - MUR ) ) )", "obj1": 0.6788321167883211, "obj2": 0.24759806072479518}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( Min( DS ,Max( ( MLU + MLU ),RMSe ) ),MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.6715328467153284, "obj2": 0.2548129780027634}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,( FirstVNF_CPU + ARS ) ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) ) / ( Max( Max( Max( Min( DS ,Max( ( MLU + MLU ),RMSe ) ),MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.6715328467153284, "obj2": 0.2548129780027634}, {"determining": "( ( MDR + ( RRS / ( ( ( ( Max( AMS,FirstVNF_RAM ) - ( FirstVNF_CPU_Server / MRS ) ) - ( Max( MDR,PN ) - Const ) ) * ( ( BR / FirstVNF_Mem ) / DDR ) ) - ( ( PN - AMS ) + FirstVNF_CPU_Server ) ) ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ARS ) ) ) * AMS ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Max( DS,MUC ) * ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( RRSe,Min( RRSe ,CS ) ) ) * ( MLU + RCSe ) )", "obj1": 0.7554744525547445, "obj2": 0.1352764158301366}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - ( ( ( AMS * ( Max( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server / MRS ) ),ARS ) - ( DDR + FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * Max( MUR,( DS / MUR ) ) ),( Min( RRSe ,( MUC / ( MUC - RRSe ) ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.958029197080292, "obj2": 0.02221465167805907}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + ( ( RMSe + MUM ) - MUR ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9726277372262774, "obj2": 0.01449983535813468}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * FirstVNF_RAM_Server ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "( MUM + ( ( MUR * MLU ) + ( RCSe - MUM ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6433070927125317}, {"determining": "( Max( Min( ACS ,AMS ),FirstVNF_CPU_Server ) - ( ARS - FirstVNF_RAM ) )", "choosing": "Max( MUR,( MUR + Min( RCSe ,( ( Max( MLU,MUC ) - MUM ) + ( RCSe + Max( RMSe,( ( RMSe + MLU ) / DS ) ) ) ) ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5497097484471484}, {"determining": "( ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( ( ARS - MDR ) / ARS ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,Const ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - ( Min( ( CS * Max( RRSe,RMSe ) ) ,MUR ) - ( ( CS - Min( MUM ,MUM ) ) + ( MUM * MUC ) ) ) ) ) )", "obj1": 0.781021897810219, "obj2": 0.11153366659864693}], "14": [{"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Min( MRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( Max( MUM,RCSe ) ,( MUM / MUM ) ) - Max( DS,DS ) ) * ( ( ( DS / Min( CS ,( MUM - Max( MUR,CS ) ) ) ) / ( ( ( ( MLU * RMSe ) - MLU ) + MLU ) + ( ( DS - Max( RCSe,RCSe ) ) + MUC ) ) ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( Max( BR,RRS ) * ( Min( ( MDR / ARS ) ,Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) ) / Const ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MUR + DS ),( MLU + MLU ) ) ),Max( CS,Min( RRSe ,CS ) ) ) * ( MUC - MUR ) ) ) + Max( ( ( Min( MUR ,( MLU + ( MUR + MUM ) ) ) / MUM ) / RCSe ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - DDR ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "( ( CS - DS ) * Max( ( ( Min( MUC ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.6543790533287764}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( ( ( DDR + Const ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( RRSe - ( RMSe - RCSe ) )", "obj1": 0.7153284671532847, "obj2": 0.18515005060454254}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( RRS - ARS ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) * PN ) + Max( BR,MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( Const * BR ) * MDR ) ) )", "choosing": "( ( Min( Min( DS ,( MUR * Min( DS ,( RCSe * MUC ) ) ) ) ,MUM ) - ( RCSe / MUM ) ) / ( DS - DS ) )", "obj1": 0.6934306569343066, "obj2": 0.24181272983971663}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - ACS ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / ( Max( DS,RRSe ) / ( MLU * RMSe ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.1011873184919351}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( ( Const + RRS ) * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe * ( CS * ( MLU * MUR ) ) ) ) + ( CS + MUC ) ) ) - ( ( DS * Min( ( MLU / DS ) ,DS ) ) / RCSe ) )", "obj1": 0.6313868613138686, "obj2": 0.260238397217983}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ),DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6697080291970803, "obj2": 0.2539414759430682}, {"determining": "( ( ( Min( ARS ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( ( ACS / Max( ( Const + ( AMS / ARS ) ),BR ) ) - ( AMS + Min( ( MRS / MDR ) ,Min( Max( ( PN + RRS ),BR ) ,( ( MRS / ACS ) * PN ) ) ) ) ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,( MLU + ( DS / Min( MLU ,CS ) ) ) ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.8813868613138686, "obj2": 0.07777955451834215}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5875912408759124, "obj2": 0.32607683794285297}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) / ( ( ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) * ( FirstVNF_RAM_Server - MDR ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,Max( RRS,BR ) ) ) ) )", "choosing": "( ( DS - ( ( RCSe - Min( ( RCSe / DS ) ,RCSe ) ) + MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5383211678832117, "obj2": 0.40773516846942837}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( MUC,( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5967153284671532, "obj2": 0.296225597864728}, {"determining": "( Max( Min( ( ( Const / BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( Const ,FirstVNF_RAM_Server ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / ( ( DDR + ( FirstVNF_RAM + PN ) ) + FirstVNF_RAM ) ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( Max( RCSe,CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( ( ( MUR + Min( MUM ,MUM ) ) - MUC ) + MUM ) ,DS ) - CS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "( ( ARS - ( ( RRS - FirstVNF_Mem_Server ) / ARS ) ) / ( ( ( ( CRS - FirstVNF_Mem_Server ) + PN ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( DDR * Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) - ( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( Min( BR ,FirstVNF_Mem ) ,MDR ) ) ) )", "choosing": "( ( MUR + ( RMSe / ( ( RCSe - ( Min( RMSe ,RRSe ) - MUR ) ) * MLU ) ) ) * ( Min( ( RRSe - ( RRSe - DS ) ) ,CS ) / RMSe ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_Mem_Server - CRS ) - MDR ) ) + Min( ( ( Const * ( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( DS + MLU ),( MUR + DS ) ) ),( ( MUC / Max( ( ( DS * ( RMSe + MUC ) ) * ( RRSe * ( RCSe * MUC ) ) ),( Min( RRSe ,( RCSe / CS ) ) - ( RMSe + MLU ) ) ) ) * Min( CS ,MUR ) ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.7281021897810219, "obj2": 0.16541594697922474}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( Max( ACS,ARS ) ,( Max( Max( MDR,FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( ( CS / MUC ) ,( DS * DS ) ) + ( RCSe * RMSe ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) ) - ( MRS * DDR ) )", "choosing": "( Max( ( DS * DS ),RRSe ) + ( Max( ( ( MUM * MLU ) + ( ( CS + RRSe ) - Min( CS ,Max( ( RCSe / RMSe ),Min( CS ,DS ) ) ) ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,MUM ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RMSe + RRSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.9306569343065694, "obj2": 0.0461323878540627}, {"determining": "( ( MRS / ( ( FirstVNF_RAM * PN ) / FirstVNF_CPU_Server ) ) - Max( MRS,FirstVNF_RAM ) )", "choosing": "( ( DS / CS ) * Max( MLU,MUR ) )", "obj1": 0.948905109489051, "obj2": 0.028650197590884177}, {"determining": "( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( Const,BR ) / ( RRS / RRS ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( Min( ACS ,MRS ) / PN ) ) ) + ( ( AMS + MRS ) + ( ACS * ARS ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / RRSe ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "( ( MUC - MUR ) * ( MLU * ( RMSe - ( RRSe * ( RCSe - MUC ) ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.5867255925811677}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( Max( MLU,( ( MUR / MUM ) - Max( MLU,MUM ) ) ),MUR ) )", "obj1": 0.5821167883211679, "obj2": 0.3324540942016273}, {"determining": "Min( ( FirstVNF_Mem_Server - BR ) ,Max( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ),( Max( ( BR + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ACS / Min( Const ,RRS ) ) ) ),Min( BR ,AMS ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( ( ( MUM / Min( RCSe ,RRSe ) ) / CS ) / ( RRSe - MLU ) ) ) + Min( MUR ,( MLU + MLU ) ) ) + ( Max( ( MUC + Max( MUR,CS ) ),MUM ) * ( RMSe / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4357587714925196}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( Min( Max( ARS,ACS ) ,FirstVNF_Mem ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( RRSe * ( ( CS - Min( MUM ,MUM ) ) + ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.45255474452554745, "obj2": 0.5382319017999847}, {"determining": "( Max( FirstVNF_RAM,CRS ) / ( ( CRS - ARS ) + FirstVNF_CPU_Server ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS - RMSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5693262046144868}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,Max( ( MLU + MLU ),RMSe ) ) - MUR ) ) * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( Max( MUR,( MUR + ( MUC - MUR ) ) ),( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4238797711153094}, {"determining": "( FirstVNF_CPU_Server / ( ACS * DDR ) )", "choosing": "( ( MUC / ( MUC * Max( MLU,( MLU - ( RRSe * MLU ) ) ) ) ) + ( MUC - MUR ) )", "obj1": 0.48722627737226276, "obj2": 0.4776749175843942}, {"determining": "( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) / ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - Max( Max( ( MUM * MUR ),MLU ),MUR ) ) * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( FirstVNF_RAM,( CRS * ARS ) ) - MRS ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6003649635036497, "obj2": 0.2924659383715387}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - PN ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( Min( CRS ,AMS ) - RRS ) ) ) ) ) - ( Max( CRS,( DDR / AMS ) ) / ARS ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( ( Min( ( CS * Max( RRSe,RMSe ) ) ,MUR ) * Min( DS ,( MUC * Max( RCSe,MUM ) ) ) ) - CS ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),( RRSe + ( RMSe - MUC ) ) ) - ( RMSe - MUR ) ) ) ) )", "obj1": 0.5346715328467153, "obj2": 0.41836055053911697}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - DDR ) ,( DDR / MDR ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( DS * RRSe ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1263976550195489}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( ( FirstVNF_CPU_Server - RRS ) - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( ACS,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( RCSe + ( RCSe / CS ) )", "obj1": 0.7883211678832117, "obj2": 0.10443023359017682}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.4197080291970803, "obj2": 0.61095441538136}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( ( FirstVNF_Mem + ( ( MDR + DDR ) - FirstVNF_RAM ) ) ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( MUM,( ( RCSe - CS ) / ( ( DS - MLU ) / MUM ) ) ) ) ) ,( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( Max( Const,( Min( Max( ARS,FirstVNF_Mem_Server ) ,AMS ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( DS + RMSe ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( ( ( RMSe - MUR ) + ( Min( ( MUM / CS ) ,CS ) - RMSe ) ) ,RMSe ),CS ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.7572992700729927, "obj2": 0.13340695822127752}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( BR - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( ( ( Const - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( ( ( ( ( ( CS * DS ) * ( MUM - RRSe ) ) + MUC ) * MUC ) + RRSe ) - Max( MUR,( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5549597962705146}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( MDR * ( FirstVNF_CPU * Max( ( FirstVNF_Mem + BR ),DDR ) ) ) ) / CRS ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * ( Min( PN ,FirstVNF_CPU ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,Max( ARS,FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe - RCSe ) - ( Max( Min( MUR ,( ( RRSe / MUM ) / RMSe ) ),CS ) * MUR ) )", "obj1": 0.9361313868613139, "obj2": 0.035453385431767584}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,Max( ( DS + MLU ),RCSe ) ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( MDR + ( RRS / ( ( ( ( Max( AMS,FirstVNF_RAM ) - ( FirstVNF_CPU_Server / MRS ) ) - ( Max( MDR,PN ) - Const ) ) * ( ( BR / FirstVNF_Mem ) / DDR ) ) - ( ( PN - AMS ) + FirstVNF_CPU_Server ) ) ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ARS ) ) ) * AMS ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Max( DS,MUC ) * ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( RRSe,Min( RRSe ,CS ) ) ) * ( MLU + RCSe ) )", "obj1": 0.7554744525547445, "obj2": 0.1352764158301366}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),( FirstVNF_Mem_Server - MDR ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( ( RRSe * ( MUC - MUR ) ),MUC ) ) / ( Max( Max( Max( Min( RCSe ,Max( ( MLU + MLU ),RMSe ) ),MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.6806569343065694, "obj2": 0.24577404769017058}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( Const + ( DDR - ARS ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6094890510948905, "obj2": 0.28344833089235605}, {"determining": "Max( FirstVNF_CPU_Server,Min( ( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / MRS ) ) * FirstVNF_RAM ),RRS ) + ARS ) ,MDR ) )", "choosing": "Min( ( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / ( RRSe / MUM ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - Max( ( Max( MLU,MUC ) + MUC ),MUR ) ) ,( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( ( CS + ( RRSe / MLU ) ) ,DS ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6326190354774602}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ARS + FirstVNF_CPU_Server ),BR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( CS + ( RMSe - MUM ) ) ,DS ) - DS ) ) )", "obj1": 0.9890510948905109, "obj2": 0.0057884596389124665}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( ( ( CS - MUC ) + ( DS + Max( MUM,MUR ) ) ) + RMSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5060903563812622}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( ( ARS * CRS ) + MRS ) + ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( RRS ,PN ) ) ) ) )", "choosing": "( ( RMSe - ( ( MUM + ( Max( RCSe,MLU ) / RMSe ) ) / RCSe ) ) * Max( CS,MUR ) )", "obj1": 0.4051094890510949, "obj2": 0.6246231732971471}, {"determining": "( Max( ( Max( MDR,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server - BR ) ),( Max( Const,BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( MLU,MUC ) + MUC ),MUR ) ) ,( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7445255474452555, "obj2": 0.14891691762856293}, {"determining": "Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server + BR ) ) * ( MRS * MRS ) ),Max( RRS,( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,MUC ) + MUC ) - MUR ) ) ,( Min( ( ( ( MUR * DS ) + ( RCSe * RRSe ) ) + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.3978102189781022, "obj2": 0.6502818688940973}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( AMS / PN ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5127140475254383}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( Const + ( DDR - ARS ) ) ) )", "choosing": "( Max( RRSe,DS ) + Max( MLU,MUC ) )", "obj1": 0.6094890510948905, "obj2": 0.28344833089235605}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) ) )", "choosing": "( Max( RRSe,DS ) + ( Max( ( ( RRSe + ( MLU + ( Max( RRSe,DS ) + Max( MUC,MUR ) ) ) ) / ( RRSe / MUM ) ),( ( ( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) ) )", "obj1": 0.7408759124087592, "obj2": 0.1584884113118033}, {"determining": "( ( ARS * ( Const / Min( ( DDR / MDR ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Min( FirstVNF_CPU ,PN ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( ( MDR * RRS ),DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MUC / Max( ( ( Min( MUC ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),Max( RRSe,DS ) ) ) * Max( CS,MUR ) )", "obj1": 0.9781021897810219, "obj2": 0.008258663426806354}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( BR + ( FirstVNF_CPU_Server / AMS ) ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_RAM_Server + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + MUM ) - ( ( MUM - RMSe ) * Max( RMSe,MUC ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5484592255340607}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server * ( MDR * ( FirstVNF_CPU * Max( CRS,FirstVNF_RAM_Server ) ) ) ) / CRS ) ) ) - Min( FirstVNF_RAM_Server ,( ARS - BR ) ) )", "choosing": "( ( RMSe - ( RRSe + ( Min( MUR ,( Min( RRSe ,Min( MUM ,MUC ) ) - ( CS / ( RRSe * DS ) ) ) ) - ( ( ( ( RRSe / MUC ) / ( MUM * CS ) ) * ( MUC + ( RMSe - RMSe ) ) ) * RMSe ) ) ) ) * Max( ( ( ( MUC - Min( CS ,RRSe ) ) - ( MUC * ( MLU * Min( CS ,RCSe ) ) ) ) * DS ),Min( RRSe ,RMSe ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182883}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ARS * ( Min( ( AMS / BR ) ,CRS ) - ( ACS + AMS ) ) ) * BR ) * MDR ) ) )", "choosing": "( Max( ( ( Min( ( ( Min( RRSe ,CS ) - ( MLU / MUM ) ) - RRSe ) ,CS ) * ( ( CS + MUR ) + ( MLU - MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6222627737226277, "obj2": 0.27260364009129373}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - DDR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.7718978102189781, "obj2": 0.12279255408280017}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,Const ),Min( AMS ,( FirstVNF_Mem / PN ) ) ) - Min( DDR ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MLU + MUM ) - ( ( MUM - RRSe ) * ( RMSe / MUM ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5792331432735659}, {"determining": "( FirstVNF_CPU_Server + ( Min( ( FirstVNF_RAM_Server * PN ) ,ARS ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server + Max( CRS,Min( ( ( FirstVNF_Mem * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.4708029197080292, "obj2": 0.4985920114236908}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( Const + ( DDR - ARS ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6186131386861314, "obj2": 0.27261752751913315}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( MUC - RMSe ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.7372262773722628, "obj2": 0.15868494054318438}, {"determining": "( FirstVNF_CPU_Server + ( Min( ( FirstVNF_RAM_Server * PN ) ,ARS ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server + Max( CRS,Min( ( ( FirstVNF_Mem * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + Max( MLU,MUC ) )", "obj1": 0.4708029197080292, "obj2": 0.4985920114236908}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( Max( CRS,CRS ) - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( MUC / Max( ( MUC / CS ),( Min( DS ,( MUR / DS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.7463503649635036, "obj2": 0.14492442381235215}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( ( FirstVNF_RAM_Server + ARS ),( DDR / AMS ) ) ) ) - ( ARS - FirstVNF_Mem_Server ) )", "choosing": "( RMSe + ( RMSe + MUM ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( Max( MDR,Min( FirstVNF_RAM ,BR ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( Min( Max( RRSe,MLU ) ,( RRSe + RRSe ) ) + ( MUC - MUR ) ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "( ( ( ( MDR - BR ) / FirstVNF_CPU_Server ) / MRS ) - Min( ( Min( ACS ,RRS ) + CRS ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( ( RCSe / RCSe ) + MUC ) / RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) / ( CS / ( Max( DS,RRSe ) / ( MUM * MUR ) ) ) ) + RCSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06320005997506008}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - ( ( ( AMS * ( Max( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server / RRS ) ),ARS ) - ( DDR + FirstVNF_RAM_Server ) ) ) / ( FirstVNF_RAM_Server + PN ) ) - FirstVNF_CPU_Server ) )", "choosing": "( RCSe + ( ( RMSe / MUC ) * ( ( MLU + ( MLU / MUR ) ) - ( ( DS / MUM ) / ( ( ( ( MLU + DS ) - RRSe ) / Max( RCSe,( MUM + MUC ) ) ) * Max( MUC,MUR ) ) ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.02221465167805907}, {"determining": "( ( Max( Const,BR ) / ( RRS / RRS ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( ( ( ( ( ( MUR - MUM ) + MUM ) - CS ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,MUM ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5792484845985648}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * ( RRSe * ( RCSe * MUC ) ) ),( Min( RRSe ,( RCSe / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),( Min( CRS ,ARS ) + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUM ),MLU ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10566974413783047}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),DDR ) - DDR ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( CS ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6166150994565309}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - ( ( ( AMS * ( Max( Min( FirstVNF_Mem ,( FirstVNF_CPU / AMS ) ),ARS ) - ( FirstVNF_RAM_Server + DDR ) ) ) / FirstVNF_Mem_Server ) - ( BR * FirstVNF_RAM ) ) )", "choosing": "( RCSe + Max( ( MUR * MLU ),( ( ( MLU / Max( MUC,RCSe ) ) + MLU ) - ( ( DS / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.02221465167805907}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( RMSe + ( RMSe + MUM ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "( ( MDR - Const ) - ( FirstVNF_Mem_Server - ( ( Const * BR ) * ( Min( Max( Min( Max( ARS,ACS ) ,ARS ),( FirstVNF_Mem + MDR ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( MUC - Max( ( CS - Min( MUM ,MUM ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,CS ) - ( ( ( ( MUC - CS ) + ( ( Min( MUC ,MLU ) + MUM ) - MUR ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9744525547445255, "obj2": 0.013692139525970771}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,( BR * Max( CRS,( DDR / Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) - ( ARS - FirstVNF_RAM ) ) + ( BR - MDR ) ) + Min( ( ( Const * ( ( FirstVNF_RAM_Server - AMS ) + Min( RRS ,FirstVNF_CPU ) ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( MLU,Min( RRSe ,RMSe ) ) * Max( ( ( ( DS + MUC ) / ( Max( RMSe,Max( ( MUR * DS ),MUR ) ) * CS ) ) / Max( RMSe,CS ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.5036496350364964, "obj2": 0.457382245044064}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) / ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,( DDR - ARS ) ) ) ) ) )", "choosing": "( ( Max( MLU,( MUR + MUR ) ) * Max( RRSe,( ( Min( ( CS * Max( RRSe,RMSe ) ) ,MUR ) * Min( DS ,( MUC * Max( RCSe,MUM ) ) ) ) - CS ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUR ),( RRSe + ( RMSe - MUC ) ) ) - MLU ) ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4634590149582614}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6788321167883211, "obj2": 0.24759806072479518}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MUR ) ) ) ),( Min( RMSe ,( CS + MLU ) ) + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.9014598540145985, "obj2": 0.053545790737646606}, {"determining": "( ( FirstVNF_CPU / ( MDR + ( Max( FirstVNF_RAM,Const ) * MDR ) ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * DDR ) ) * RRS ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( DS - MUM ),( ( MUC / Max( ( ( DS * DS ) * ( RRSe * ( RMSe * MUC ) ) ),( ( RMSe + MLU ) - Min( RRSe ,( RCSe / CS ) ) ) ) ) * Max( CS,MUR ) ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.7463503649635036, "obj2": 0.14492442381235215}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ARS + Min( MDR ,ACS ) ),BR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( ( DS + RRSe ) + Min( MUR ,RMSe ) ) ,DS ) - DS ) ) )", "obj1": 0.885036496350365, "obj2": 0.07404979505949054}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),BR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8923357664233577, "obj2": 0.06555750517243082}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( Max( RRSe,DS ) + ( Min( DS ,CS ) / Min( RMSe ,MUM ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48829719507591235}, {"determining": "( FirstVNF_CPU_Server + ( Min( ( FirstVNF_RAM_Server * PN ) ,ARS ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,Min( ( FirstVNF_RAM_Server * Min( ACS ,ACS ) ) ,( ( DDR * BR ) * MDR ) ) ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( CS / MUC ) ) - Max( MUC,MUR ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.47992700729927007, "obj2": 0.4849007296255108}, {"determining": "( FirstVNF_CPU_Server + Max( AMS,Max( Min( DDR ,Max( ( ( ( PN / CRS ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ),( MDR + FirstVNF_CPU_Server ) ) ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS - ( ( RRSe + ( RCSe * Min( DS ,( RMSe / RCSe ) ) ) ) - RRSe ) ) + ( ( CS - Min( RCSe ,MUM ) ) + Max( MLU,MUC ) ) ) / ( MUR * MLU ) )", "obj1": 0.458029197080292, "obj2": 0.5153060931254188}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) * ( BR / Min( ( FirstVNF_CPU_Server / ( ( ACS + FirstVNF_CPU_Server ) + BR ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( ( CS + ( RMSe / DS ) ) ,RCSe ),( Max( ( ( Max( DS,DS ) - MUR ) * RRSe ),( MUR / ( Max( MUM,RMSe ) * MUR ) ) ) - MUR ) ) ) / ( ( RCSe * CS ) + DS ) )", "obj1": 0.5, "obj2": 0.46085458163273585}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Max( FirstVNF_RAM_Server,PN ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( Max( DS,( MLU + DS ) ) + CS ) + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MUR + MLU ),RMSe ) ) ) - ( ( Min( MUM ,MUM ) - CS ) + Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5432908280057158}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( MRS - Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,RRS ) ) ) + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,( ( ( DDR * ARS ) * Const ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe / RRSe ),( CS * ( Max( RMSe,MUM ) - Min( RMSe ,MUC ) ) ) ) - ( ( CS - RCSe ) + ( ( CS / MUM ) * DS ) ) ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * ( ( FirstVNF_CPU - PN ) / Min( ( ( ARS * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / Min( MUM ,Max( RRSe,DS ) ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( ( ( MUR - MLU ) + ( ( MUM * MUM ) * ( MUC - MUM ) ) ) - RCSe ) )", "obj1": 0.9361313868613139, "obj2": 0.035453385431767584}, {"determining": "( Max( FirstVNF_CPU_Server,( BR * Max( ( FirstVNF_RAM_Server + ARS ),( DDR / AMS ) ) ) ) - ( ARS - FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,DS ) + ( Min( DS ,CS ) / Min( RMSe ,MUM ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( ( ACS - ARS ) + ( Max( FirstVNF_Mem_Server,ACS ) * MDR ) ) ) - DDR ) + ARS ) ,MDR ) )", "choosing": "( Max( ( RRSe - Min( MUC ,MLU ) ),MUR ) + ( MUC / ( RRSe * ( MUC - MUR ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6166150994565309}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / ( ARS / FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM ),RRS ) + ARS ) ,MDR ) )", "choosing": "Min( ( Max( RCSe,( MLU / ( RRSe * MLU ) ) ) + Min( ( CS + ( RRSe / MLU ) ) ,DS ) ) ,Min( DS ,( MUR - MUM ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6246231732971471}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem + PN ) )", "choosing": "( ( ( ( Max( MLU,MUM ) - ( Max( ( RMSe + CS ),RMSe ) - MUR ) ) * MUC ) - DS ) * ( MLU * Min( RCSe ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) ) )", "obj1": 0.6186131386861314, "obj2": 0.27261752751913315}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( ( ( Max( MLU,MUM ) - ( Max( MUM,RMSe ) - MUR ) ) * MUC ) - DS ) * ( MLU * ( RMSe - Max( MLU,( ( RRSe + Max( MUC,MUC ) ) / RRSe ) ) ) ) )", "obj1": 0.6222627737226277, "obj2": 0.27260364009129373}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( Min( AMS ,( MRS * FirstVNF_Mem ) ),( FirstVNF_RAM * Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / Const ) ) * FirstVNF_RAM ),Min( PN ,RRS ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( ( RRSe + RCSe ) - ( RMSe + CS ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.41788321167883213, "obj2": 0.615949076628759}, {"determining": "( Max( Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "( Max( Min( FirstVNF_RAM ,AMS ),Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) / ( ( RRS + AMS ) - Max( Max( CRS,( DDR / AMS ) ),ARS ) ) )", "choosing": "( ( Max( MLU,( ( MUR / MUM ) - Max( ( RMSe * ( MLU / RRSe ) ),MLU ) ) ) * Max( RRSe,( CS - ( ( ( CS * Max( RRSe,RMSe ) ) + MUR ) * Min( DS ,( MUC * Min( DS ,CS ) ) ) ) ) ) ) - Min( ( MUC - Max( CS,DS ) ) ,( ( ( CS - Min( MUM ,MUM ) ) + Max( MLU,MUC ) ) / ( Max( Max( Max( RRSe,MUR ),MUC ),( RRSe + ( RMSe - MUC ) ) ) - ( RMSe - MUR ) ) ) ) )", "obj1": 0.5346715328467153, "obj2": 0.41836055053911697}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( MLU / ( RRSe - MLU ) ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4238797711153094}], "15": [{"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - DDR ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "( ( CS - DS ) * Max( ( ( Min( MUC ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.6543790533287764}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / ( Min( CRS ,ARS ) + FirstVNF_CPU_Server ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( Max( MLU,MLU ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Min( MRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( Max( MUM,RCSe ) ,( MUM / MUM ) ) - Max( DS,DS ) ) * ( ( ( DS / Min( CS ,( MUM - Max( MUR,CS ) ) ) ) / ( ( ( ( MLU * RMSe ) - MLU ) + MLU ) + ( ( DS - Max( RCSe,RCSe ) ) + MUC ) ) ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - DDR ) * ARS ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "( ( CS - DS ) * Max( ( ( Min( MUC ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + ( RMSe - ( RRSe * ( RCSe - MUC ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.6543790533287764}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Const / Min( ( RRS - ARS ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) * PN ) + Max( BR,MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( Const * BR ) * MDR ) ) )", "choosing": "( ( Min( Min( DS ,( MUR * Min( DS ,( RCSe * MUC ) ) ) ) ,MUM ) - ( RCSe / MUM ) ) / ( DS - DS ) )", "obj1": 0.6934306569343066, "obj2": 0.24181272983971663}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( ( Const + RRS ) * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe * ( CS * ( MLU * MUR ) ) ) ) + ( CS + MUC ) ) ) - ( ( DS * Min( ( MLU / DS ) ,DS ) ) / RCSe ) )", "obj1": 0.6313868613138686, "obj2": 0.260238397217983}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - ACS ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / ( Max( DS,RRSe ) / ( MLU * RMSe ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.1011873184919351}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( ( ( DDR + Const ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( RRSe,DS ) + ( Min( DS ,CS ) / Min( RMSe ,MUM ) ) )", "obj1": 0.7153284671532847, "obj2": 0.18515005060454254}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ),DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6697080291970803, "obj2": 0.2539414759430682}, {"determining": "( ( ( Min( ARS ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( ( ACS / Max( ( Const + ( AMS / ARS ) ),BR ) ) - ( AMS + Min( ( MRS / MDR ) ,Min( Max( ( PN + RRS ),BR ) ,( ( MRS / ACS ) * PN ) ) ) ) ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,( MLU + ( DS / Min( MLU ,CS ) ) ) ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.8813868613138686, "obj2": 0.07777955451834215}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,CRS ) ) ) )", "choosing": "( ( ( DS + ( MUC - Max( ( DS * MUM ),DS ) ) ) / MUC ) + Max( ( RCSe - MUM ),MUR ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( ( ( DDR + Const ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( RRSe - ( RMSe - RCSe ) )", "obj1": 0.7153284671532847, "obj2": 0.18515005060454254}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( CS ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.572992700729927, "obj2": 0.37428058329038083}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5875912408759124, "obj2": 0.32607683794285297}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) / ( ( ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) * ( FirstVNF_RAM_Server - MDR ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,Max( RRS,BR ) ) ) ) )", "choosing": "( ( DS - ( ( RCSe - Min( ( RCSe / DS ) ,RCSe ) ) + MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5383211678832117, "obj2": 0.40773516846942837}, {"determining": "( Max( Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( ( ( FirstVNF_CPU / ( CRS / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ,( ( RRS + FirstVNF_CPU ) - BR ) ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( MUM,Max( ( MUR - RMSe ),RRSe ) ) ) ) * ( ( ( MUC * RMSe ) / RRSe ) - MUC ) ) + ( RMSe * MUM ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( ( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42387977111530933}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - ( PN + MRS ) ) ) + Max( ( ( BR * Const ) * MDR ),( FirstVNF_RAM_Server * Max( RRS,Max( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ),DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( MUR,( Min( MUM ,Max( RRSe,DS ) ) * ( Max( MUM,RMSe ) - Min( DS ,MUR ) ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5948905109489051, "obj2": 0.2992655293120104}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) / ( ( RRS / ARS ) - ( ( ARS * FirstVNF_CPU_Server ) * ( Const / Min( ( FirstVNF_CPU * ACS ) ,( MDR * ACS ) ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + Min( Max( MLU,DS ) ,( CS - ( Min( MLU ,RRSe ) + MUR ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( ( MRS / ( ( FirstVNF_RAM * PN ) / FirstVNF_CPU_Server ) ) - Max( MRS,FirstVNF_RAM ) )", "choosing": "( ( DS / CS ) * Max( MLU,MUR ) )", "obj1": 0.948905109489051, "obj2": 0.028650197590884177}, {"determining": "( ( ( Min( BR ,MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( ( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_CPU - MDR ) ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC - Max( ( Max( MUM,DS ) + ( ( MUR + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,( ( ( ( CS + RCSe ) * ( MUC / MLU ) ) * ( MUR + RRSe ) ) / RRSe ) ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.04945592799312513}, {"determining": "( ( DDR * Const ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( MDR / Min( ( ARS / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( PN * MRS ) / ACS ),( ( BR + FirstVNF_CPU_Server ) * ( ( BR * FirstVNF_Mem_Server ) - MDR ) ) ) ) )", "choosing": "( Min( CS ,Max( MUM,( ( ( CS * ( Min( MLU ,DS ) + MUM ) ) / MUR ) - MLU ) ) ) * ( Max( ( MLU + DS ),RRSe ) - ( ( ( Max( MUM,MLU ) - MUR ) - Max( MLU,MUM ) ) * MUC ) ) )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( Const,BR ) / ( RRS / RRS ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( Min( ACS ,MRS ) / PN ) ) ) + ( ( AMS + MRS ) + ( ACS * ARS ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / RRSe ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.4197080291970803, "obj2": 0.61095441538136}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "( ( MUC - MUR ) * ( MLU * ( RMSe - ( RRSe * ( RCSe - MUC ) ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.5867255925811677}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( Max( MLU,( ( MUR / MUM ) - Max( MLU,MUM ) ) ),MUR ) )", "obj1": 0.5821167883211679, "obj2": 0.3324540942016273}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,Max( ( MLU + MLU ),RMSe ) ) - MUR ) ) * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( Max( ( DS * DS ),RRSe ) + ( Max( ( ( MUM * MLU ) + ( ( CS + RRSe ) - Min( CS ,Max( ( RCSe / RMSe ),Min( CS ,DS ) ) ) ) ),( Max( Min( Min( Min( MLU ,RMSe ) ,Min( MLU ,MUM ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MLU + MLU ),( RMSe + RRSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ARS + Min( MDR ,ACS ) ),BR ) ) ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,Max( ( DS + MLU ),RCSe ) ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.9233576642335767, "obj2": 0.03765127773405447}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( BR + ( FirstVNF_CPU_Server / AMS ) ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_RAM_Server + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + MUM ) - ( ( MUM - RMSe ) * Max( RMSe,MUC ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5484592255340607}, {"determining": "( ( MDR + ( RRS / ( ( ( ( Max( AMS,FirstVNF_RAM ) - ( FirstVNF_CPU_Server / MRS ) ) - ( Max( MDR,PN ) - Const ) ) * ( ( BR / FirstVNF_Mem ) / DDR ) ) - ( ( PN - AMS ) + FirstVNF_CPU_Server ) ) ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ARS ) ) ) * AMS ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Max( DS,MUC ) * ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( RRSe,Min( RRSe ,CS ) ) ) * ( MLU + RCSe ) )", "obj1": 0.7554744525547445, "obj2": 0.1352764158301366}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Max( FirstVNF_RAM_Server,PN ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( Max( DS,( MLU + DS ) ) + CS ) + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MUR + MLU ),RMSe ) ) ) - ( ( Min( MUM ,MUM ) - CS ) + Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5432908280057158}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( ( FirstVNF_Mem + ( ( MDR + DDR ) - FirstVNF_RAM ) ) ,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( MUM,( ( RCSe - CS ) / ( ( DS - MLU ) / MUM ) ) ) ) ) ,( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / RRS ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( ( MLU + ( MLU / MUR ) ) - ( ( DS / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.10392234235000475}, {"determining": "( Max( FirstVNF_RAM,CRS ) / ( ( CRS - ARS ) + FirstVNF_CPU_Server ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS - RMSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5693262046144868}, {"determining": "( Min( ( BR * MRS ) ,ARS ) + Min( ( ( ( ( FirstVNF_RAM_Server - AMS ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * Const ) * MDR ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RRSe - DS ) * Min( Min( DS ,( DS - CS ) ) ,( Max( ( MLU * RMSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / Max( MUM,MUR ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( CS + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.9835766423357665, "obj2": 0.00401445327575955}, {"determining": "( ( ( ( MDR - BR ) / FirstVNF_CPU_Server ) / MRS ) - Min( ( Min( ACS ,RRS ) + CRS ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( ( RCSe / RCSe ) + MUC ) / RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) / ( CS / ( Max( DS,RRSe ) / ( MUM * MUR ) ) ) ) + RCSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06320005997506008}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),( FirstVNF_Mem_Server - MDR ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( CS - Min( MUM ,MUM ) ) + Max( ( RRSe * ( MUC - MUR ) ),MUC ) ) / ( Max( Max( Max( Min( RCSe ,Max( ( MLU + MLU ),RMSe ) ),MUM ),MUC ),MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.6806569343065694, "obj2": 0.24577404769017058}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( BR - MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( RRSe * ( RCSe * MUC ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.614963503649635, "obj2": 0.28279852149067997}, {"determining": "( FirstVNF_CPU_Server + ( Min( ( FirstVNF_RAM_Server * PN ) ,ARS ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,Min( ( FirstVNF_RAM_Server * Min( ACS ,ACS ) ) ,( ( DDR * BR ) * MDR ) ) ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( CS / MUC ) ) - Max( MUC,MUR ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.47992700729927007, "obj2": 0.4849007296255108}, {"determining": "( ( Max( Const,BR ) / ( RRS / RRS ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( ( ( ( ( ( MUR - MUM ) + MUM ) - CS ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,MUM ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5792484845985648}, {"determining": "( FirstVNF_CPU_Server / ( ACS * DDR ) )", "choosing": "( ( MUC / ( MUC * Max( MLU,( MLU - ( RRSe * MLU ) ) ) ) ) + ( MUC - MUR ) )", "obj1": 0.48722627737226276, "obj2": 0.4776749175843942}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * FirstVNF_RAM_Server ) * MRS ),( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) + ARS ) ,MDR ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5549597962705146}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6788321167883211, "obj2": 0.24759806072479518}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / ( FirstVNF_RAM_Server / PN ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MUR + MLU ),RMSe ) ) ) - ( ( Min( MUM ,MUM ) - CS ) + Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6246231732971471}, {"determining": "( Max( Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ),( ( FirstVNF_RAM_Server - FirstVNF_CPU ) / ( CRS / FirstVNF_Mem_Server ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / ( DDR + FirstVNF_RAM ) ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( ( ( ( Min( MUM ,RRSe ) / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7445255474452555, "obj2": 0.14891691762856293}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( MUC - RMSe ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.7372262773722628, "obj2": 0.15868494054318438}, {"determining": "Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server + BR ) ) * ( MRS * MRS ) ),Max( RRS,( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,MUC ) + MUC ) - MUR ) ) ,( Min( ( ( ( MUR * DS ) + ( RCSe * RRSe ) ) + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.3978102189781022, "obj2": 0.6502818688940973}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,( AMS / FirstVNF_Mem_Server ) ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( RMSe - ( RRSe + ( Min( MUR ,( Min( RRSe ,Min( MUM ,MUC ) ) - ( CS / ( RRSe * MUC ) ) ) ) - ( Max( MLU,( CS + RMSe ) ) * RMSe ) ) ) ) * Max( ( ( ( MUC - Min( CS ,RRSe ) ) - ( MUC * ( MLU * Min( CS ,RCSe ) ) ) ) * DS ),Min( RRSe ,RMSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server + Max( CRS,Min( ( ( FirstVNF_Mem * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) ) ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( RRSe / MUM ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5716848369529831}, {"determining": "Min( ( FirstVNF_Mem_Server - BR ) ,Max( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ),( Max( ( BR + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ACS / Min( Const ,RRS ) ) ) ),Min( BR ,AMS ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( ( ( MUM / Min( RCSe ,RRSe ) ) / CS ) / ( RRSe - MLU ) ) ) + Min( MUR ,( MLU + MLU ) ) ) + ( Max( ( MUC + Max( MUR,CS ) ),MUM ) * ( RMSe / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4357587714925196}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) ) )", "choosing": "( Max( RRSe,DS ) + ( Max( ( ( RRSe + ( MLU + ( Max( RRSe,DS ) + Max( MUC,MUR ) ) ) ) / ( RRSe / MUM ) ),( ( ( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( RMSe - RCSe ) ) )", "obj1": 0.7408759124087592, "obj2": 0.1584884113118033}, {"determining": "( FirstVNF_CPU_Server + ( Min( ( PN * FirstVNF_RAM_Server ) ,ARS ) + Min( ( ( Const * BR ) * MDR ) ,( DDR / CRS ) ) ) )", "choosing": "( Max( RRSe,DS ) + ( Max( ( MLU + ( MUM * ( RCSe * MUC ) ) ),Min( DS ,( Max( RRSe,DS ) / ( MLU * DS ) ) ) ) * MLU ) )", "obj1": 0.46167883211678834, "obj2": 0.5114766865419151}, {"determining": "( ( ( FirstVNF_CPU * ( RRS / Min( DDR ,AMS ) ) ) + FirstVNF_Mem_Server ) + Min( ( ( Max( FirstVNF_RAM,( DDR - ( Max( FirstVNF_RAM_Server,ACS ) / FirstVNF_Mem ) ) ) * ( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * BR ) + FirstVNF_CPU ) * ARS ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Max( MUR,( ( MUC + ( CS + MUM ) ) - DS ) ) - DS ) - ( CS * MLU ) ),Max( Min( RRSe ,CS ),CS ) ) * ( ( DS * MUM ) / Max( MLU,( Min( MUM ,( ( MUR + MUC ) - RCSe ) ) + RRSe ) ) ) )", "obj1": 0.7682481751824818, "obj2": 0.12834058939702153}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( Const ,( MDR * Const ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( MUM,( ( RCSe - CS ) / ( MUM / Max( MUM,MUM ) ) ) ) ) ) * ( ( ( MUC * RMSe ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.4653284671532847, "obj2": 0.5055774824525581}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * DDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.7591240875912408, "obj2": 0.13204084187719267}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6058394160583942, "obj2": 0.2889364742767535}, {"determining": "( ( ( ( ( AMS + AMS ) + DDR ) / FirstVNF_Mem ) / MRS ) - Min( ( CRS - Min( Min( MDR ,MDR ) ,FirstVNF_Mem ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( CS + RMSe ),MLU ) + ( Min( Min( DS ,( RCSe + ( MUR / ( Max( MLU,MUC ) / ( RMSe - MLU ) ) ) ) ) ,MUM ) - ( CS / MUM ) ) )", "obj1": 0.8905109489051095, "obj2": 0.06734416402552557}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( BR - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( ( ( Const - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( ( ( ( ( ( CS * DS ) * ( MUM - RRSe ) ) + MUC ) * MUC ) + RRSe ) - Max( MUR,( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.533052987282459}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,( BR * Max( CRS,( DDR / Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) - ( ARS - FirstVNF_RAM ) ) + ( BR - MDR ) ) + Min( ( ( Const * ( ( FirstVNF_RAM_Server - AMS ) + Min( RRS ,FirstVNF_CPU ) ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( MLU,Min( RRSe ,RMSe ) ) * Max( ( ( ( DS + MUC ) / ( Max( RMSe,Max( ( MUR * DS ),MUR ) ) * CS ) ) / Max( RMSe,CS ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.5036496350364964, "obj2": 0.457382245044064}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ARS * ( Min( ( AMS / BR ) ,CRS ) - ( ACS + AMS ) ) ) * BR ) * MDR ) ) )", "choosing": "( Max( ( ( Min( ( ( Min( RRSe ,CS ) - ( MLU / MUM ) ) - RRSe ) ,CS ) * ( ( CS + MUR ) + ( MLU - MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6222627737226277, "obj2": 0.27260364009129373}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ARS + Min( MDR ,ACS ) ),BR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( ( DS + RRSe ) + Min( MUR ,RMSe ) ) ,DS ) - DS ) ) )", "obj1": 0.885036496350365, "obj2": 0.07404979505949054}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( MDR * ( FirstVNF_CPU * Max( ( FirstVNF_Mem + FirstVNF_RAM_Server ),DDR ) ) ) ) / CRS ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * ( Min( PN ,FirstVNF_CPU ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,Max( ARS,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR + ( MUC - MUR ) ) - ( Max( Min( MUR ,( ( RRSe / MUM ) / RMSe ) ),CS ) * MUR ) )", "obj1": 0.9343065693430657, "obj2": 0.03669289597942121}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * ( ( FirstVNF_CPU - PN ) / Min( ( ( ARS * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / Min( MUM ,Max( RRSe,DS ) ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( ( ( MUR - MLU ) + ( ( MUM * MUM ) * ( MUC - MUM ) ) ) - RCSe ) )", "obj1": 0.9361313868613139, "obj2": 0.035453385431767584}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( MUC,( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5967153284671532, "obj2": 0.296225597864728}, {"determining": "( FirstVNF_CPU_Server + ( Min( ( FirstVNF_RAM_Server * ( Const + ARS ) ) ,ARS ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server + Max( CRS,Min( Max( FirstVNF_CPU_Server,PN ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),Min( Max( ( ( RRSe * ( Max( CS,RCSe ) / MUR ) ) + ( DS + RMSe ) ),DS ) ,( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.4762773722627737, "obj2": 0.495986111050684}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( BR - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( ( ( Const - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( ( ( ( ( ( CS * DS ) * ( MUM - RRSe ) ) + MUC ) * MUC ) + RRSe ) - Max( MUR,( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.533052987282459}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem + PN ) )", "choosing": "( ( ( ( Max( MLU,MUM ) - ( Max( ( RMSe + CS ),RMSe ) - MUR ) ) * MUC ) - DS ) * ( MLU * Min( RCSe ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) ) )", "obj1": 0.6186131386861314, "obj2": 0.27261752751913315}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) * ( BR / Min( ( FirstVNF_CPU_Server / ( ( ACS + FirstVNF_CPU_Server ) + BR ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( ( CS + ( RMSe / DS ) ) ,RCSe ),( Max( ( ( Max( DS,DS ) - MUR ) * RRSe ),( MUR / ( Max( MUM,RMSe ) * MUR ) ) ) - MUR ) ) ) / ( ( RCSe * CS ) + DS ) )", "obj1": 0.5, "obj2": 0.46085458163273585}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * Max( CS,Max( ( MUR / MUR ),( RRSe + CS ) ) ) ),( ( ( Max( MLU,MUM ) - ( Max( MUM,RMSe ) - MUR ) ) * MUC ) - DS ) ) ) * Max( CS,MUR ) )", "obj1": 0.7463503649635036, "obj2": 0.14492442381235215}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ),( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( ACS / ( DDR / AMS ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( RMSe + MUM ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( RMSe / MUM ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4357587714925196}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( Max( MDR,Min( FirstVNF_RAM ,BR ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( Min( Max( RRSe,MLU ) ,( RRSe + RRSe ) ) + ( MUC - MUR ) ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "( ( ARS - ( ( RRS - FirstVNF_Mem_Server ) / ARS ) ) / ( ( ( ( CRS - FirstVNF_Mem_Server ) + PN ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( ( ( ( ( ( MUR - MUM ) + MUM ) - CS ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5021860317154019}, {"determining": "( ( ( FirstVNF_RAM_Server + PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ARS * ( Min( ( AMS / RRS ) ,CRS ) - ( ACS + AMS ) ) ) * BR ) * MDR ) ) )", "choosing": "( Max( ( ( Min( ( ( RRSe - ( MLU / MUM ) ) - RRSe ) ,CS ) * ( ( CS + RMSe ) + ( MLU - MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),DDR ) - DDR ) + ARS ) ,MDR ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( CS ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6166150994565309}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( ( Max( ( ( FirstVNF_CPU + Max( ( ARS - ( FirstVNF_Mem_Server - MRS ) ),FirstVNF_RAM ) ) + Min( MRS ,FirstVNF_Mem_Server ) ),PN ) + ( BR - MDR ) ) + Min( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( Max( Min( RRSe ,CS ),CS ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.4908759124087591, "obj2": 0.4764347353994382}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( FirstVNF_RAM,( CRS * ARS ) ) - MRS ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6003649635036497, "obj2": 0.2901792563331101}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - ( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( ( MLU + ( MLU / ( MUC - ( MUR + ( MUC - MUR ) ) ) ) ) - ( ( DS / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / RCSe ) * Max( MUC,MUR ) ) ) ) ) )", "obj1": 0.9635036496350365, "obj2": 0.019126724555490214}, {"determining": "( Max( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ),Min( Min( Min( RRS ,( ACS + FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) ,RRS ) ) / ( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - PN ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( Min( CRS ,AMS ) - RRS ) ) ) ) ) - ( Max( CRS,( DDR / AMS ) ) / ARS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MUM,( MUR * RMSe ) ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4634590149582614}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - ( ( ( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),CRS ) * ( Max( Min( FirstVNF_Mem ,( MRS / MRS ) ),ARS ) - ( DDR + ( ARS * DDR ) ) ) ) / FirstVNF_Mem_Server ) - ( BR * FirstVNF_RAM ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( ( ( MLU / MUR ) * MLU ) - ( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) ) )", "obj1": 0.968978102189781, "obj2": 0.016725644860579512}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU + Max( ( ARS - ( RRS - MRS ) ),FirstVNF_RAM ) ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( FirstVNF_CPU_Server / MDR ) ,Max( PN,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( DS + ( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( Max( ( CS * RCSe ),MUM ),( ( MUR * MLU ) + ( RCSe - MUM ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.9014598540145985, "obj2": 0.053545790737646606}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( Max( CRS,CRS ) - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( MUC / Max( ( MUC / CS ),( Min( DS ,( MUR / DS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.7463503649635036, "obj2": 0.14492442381235215}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,PN ) ) - Min( FirstVNF_RAM_Server ,( BR - ARS ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,Max( ( DS + MLU ),RCSe ) ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,RCSe ),Min( Max( ( RRSe * RRSe ),( MUR * Min( CS ,( DS * RMSe ) ) ) ) ,MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( Const + ( DDR - ARS ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,( MLU + ( DS / Min( MLU ,CS ) ) ) ) ,MUR ) - ( RCSe / MUM ) ) )", "obj1": 0.6094890510948905, "obj2": 0.28344833089235605}, {"determining": "( ( ARS * ( Const / Min( ( DDR / MDR ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * ( Min( FirstVNF_CPU ,PN ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( ( MDR * RRS ),DDR ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( MUC / Max( ( ( Min( MUC ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),Max( RRSe,DS ) ) ) * Max( CS,MUR ) )", "obj1": 0.9781021897810219, "obj2": 0.008258663426806354}, {"determining": "( ( MDR - Const ) - ( FirstVNF_Mem_Server - ( ( Const * BR ) * ( Min( Max( Min( Max( ARS,ACS ) ,ARS ),( FirstVNF_Mem + MDR ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( MUC - Max( ( CS - Min( MUM ,MUM ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,CS ) - ( ( ( ( MUC - CS ) + ( ( Min( MUC ,MLU ) + MUM ) - MUR ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9744525547445255, "obj2": 0.013692139525970771}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( ( ( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / MRS ) ) * FirstVNF_RAM ) + ( Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) )", "choosing": "Max( MUR,Max( ( MLU / RMSe ),CS ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( DDR * Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) - ( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( Min( BR ,FirstVNF_Mem ) ,MDR ) ) ) )", "choosing": "( ( MUR + ( RMSe / ( ( RCSe - ( Min( RMSe ,RRSe ) - MUR ) ) * MLU ) ) ) * ( Min( ( RRSe - ( RRSe - DS ) ) ,CS ) / RMSe ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( MRS - Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,RRS ) ) ) + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,( ( ( DDR * ARS ) * Const ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe / RRSe ),( CS * ( Max( RMSe,MUM ) - Min( RMSe ,MUC ) ) ) ) - ( ( CS - RCSe ) + ( ( CS / MUM ) * DS ) ) ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - ( ( ( AMS * ( Max( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server / RRS ) ),ARS ) - ( DDR + FirstVNF_RAM_Server ) ) ) / ( FirstVNF_RAM_Server + PN ) ) - FirstVNF_CPU_Server ) )", "choosing": "( RCSe + ( ( RMSe / MUC ) * ( ( MLU + ( MLU / MUR ) ) - ( ( DS / MUM ) / ( ( ( ( MLU + DS ) - RRSe ) / Max( RCSe,( MUM + MUC ) ) ) * Max( MUC,MUR ) ) ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.02221465167805907}, {"determining": "Max( FirstVNF_CPU_Server,Min( Min( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / MRS ) ) * FirstVNF_RAM ),RRS ) ,ARS ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( RRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( CS ,( ( ( MUR / MUR ) + MUR ) / MUR ) ) + RRSe ) ,( ( ( CS + ( RRSe / MLU ) ) + DS ) + Max( RCSe,( MLU / RCSe ) ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6326190354774602}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( BR - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( ( ( Const - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( ( ( ( ( ( CS * DS ) * ( MUM - RRSe ) ) + MUC ) * MUC ) + RRSe ) - Max( MUR,( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5549597962705146}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server * ( MDR * ( FirstVNF_CPU * Max( CRS,FirstVNF_RAM_Server ) ) ) ) / CRS ) ) ) - Min( FirstVNF_RAM_Server ,( ARS - BR ) ) )", "choosing": "( ( RMSe - ( RRSe + ( Min( MUR ,( Min( RRSe ,Min( MUM ,MUC ) ) - ( CS / ( RRSe * DS ) ) ) ) - ( ( ( ( RRSe / MUC ) / ( MUM * CS ) ) * ( MUC + ( RMSe - RMSe ) ) ) * RMSe ) ) ) ) * Max( ( ( ( MUC - Min( CS ,RRSe ) ) - ( MUC * ( MLU * Min( CS ,RCSe ) ) ) ) * DS ),Min( RRSe ,RMSe ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),Min( FirstVNF_RAM ,AMS ) ),Min( ( ( Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),DDR ) - DDR ) + ARS ) ,MDR ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,Max( MUM,( ( RCSe - CS ) / ( MUM / Max( MUM,MUM ) ) ) ) ) - Max( DS,DS ) ) * ( ( ( DS / Min( CS ,( MUM - Max( RCSe,CS ) ) ) ) / MUC ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.41605839416058393, "obj2": 0.6166150994565309}], "16": [{"determining": "( Max( FirstVNF_CPU_Server,( FirstVNF_RAM_Server / PN ) ) / ( ( ( CRS - FirstVNF_Mem_Server ) + ACS ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( ( CS / RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) ) + ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / ( Min( CRS ,ARS ) + FirstVNF_CPU_Server ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( Max( MLU,MLU ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ),DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( Max( MLU,DS ),( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6934306569343066, "obj2": 0.22696323059962664}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - Min( FirstVNF_CPU_Server ,( ( BR * Max( ( ARS / ACS ),( FirstVNF_CPU_Server / RRS ) ) ) / CRS ) ) ) ) + Min( ( Const + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( MUM - DS ) - ( Max( Min( RRSe ,MUC ),MLU ) * MUM ) )", "obj1": 0.7043795620437956, "obj2": 0.19938069108423428}, {"determining": "( ( ( Min( ARS ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( ( ACS / Max( ( Const + ( AMS / ARS ) ),BR ) ) - ( AMS + Min( ( MRS / MDR ) ,Min( Max( ( PN + RRS ),BR ) ,( ( MRS / ACS ) * PN ) ) ) ) ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,( MLU + ( DS / Min( MLU ,CS ) ) ) ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.8813868613138686, "obj2": 0.07777955451834215}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( ( MLU + MLU ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.635036496350365, "obj2": 0.25418897323616824}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( ( MUR / MUM ) - Max( MLU,MUM ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( Min( Min( CS ,RMSe ) ,Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.572992700729927, "obj2": 0.37428058329038083}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) / ( ( ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) * ( FirstVNF_RAM_Server - MDR ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,Max( RRS,BR ) ) ) ) )", "choosing": "( ( DS - ( ( RCSe - Min( ( RCSe / DS ) ,RCSe ) ) + MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5383211678832117, "obj2": 0.40773516846942837}, {"determining": "( Max( Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM * Max( CRS,FirstVNF_Mem ) ) ),( ( BR / RRS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_Mem + MRS ) + ( ( ( MRS * FirstVNF_CPU ) * BR ) - ARS ) ) - ( Min( AMS ,( ( ( AMS * ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) / PN ) ) / ( RRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( RCSe + ( ( Min( ( CS - MUC ) ,MLU ) - ( Max( MUM,MUM ) + ( MUC / ( RCSe + Max( DS,( MUC + DS ) ) ) ) ) ) * ( MLU * MUR ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ),DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6697080291970803, "obj2": 0.2539414759430682}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "( ( MUC - MUR ) * ( MLU * ( RMSe - ( RRSe * ( RCSe - MUC ) ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.5867255925811677}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "( ( ARS - ( ( RRS - FirstVNF_Mem_Server ) / ARS ) ) / ( ( ( ( CRS - FirstVNF_Mem_Server ) + PN ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.4197080291970803, "obj2": 0.61095441538136}, {"determining": "( ( ( Min( BR ,MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( ( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_CPU - MDR ) ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC - Max( ( Max( MUM,DS ) + ( ( MUR + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,( ( ( ( CS + RCSe ) * ( MUC / MLU ) ) * ( MUR + RRSe ) ) / RRSe ) ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.04945592799312513}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( CRS - ACS ) ,( MDR - ( CRS - FirstVNF_RAM ) ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ,( DS * ( RRSe * MLU ) ) ),( Max( MUM,( MUR * RMSe ) ) + DS ) ) + MLU ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR * ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.1011873184919351}, {"determining": "( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( Const,BR ) / ( RRS / RRS ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( Min( ACS ,MRS ) / PN ) ) ) + ( ( AMS + MRS ) + ( ACS * ARS ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / RRSe ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( ( ( DDR + Const ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( RRSe,DS ) + ( Min( DS ,CS ) / Min( RMSe ,MUM ) ) )", "obj1": 0.7153284671532847, "obj2": 0.18515005060454254}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - Min( Min( DS ,DS ) ,CS ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.7226277372262774, "obj2": 0.16169341207970192}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU_Server * BR ) - ( Max( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * RRS ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( BR,MRS ) ) ) )", "choosing": "( ( MUC * ( RMSe / MUM ) ) + ( RRSe * ( MUR + Min( ( RCSe / RRSe ) ,( MLU * ( ( MLU / RRSe ) - ( ( RCSe + CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3216874493304793}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - ( PN + MRS ) ) ) + Max( ( ( BR * Const ) * MDR ),( FirstVNF_RAM_Server * Max( RRS,Max( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ),DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( MUR,( Min( MUM ,Max( RRSe,DS ) ) * ( Max( MUM,RMSe ) - Min( DS ,MUR ) ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5948905109489051, "obj2": 0.2992655293120104}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( ( MUM * MUM ) ,Max( MUM,( ( RCSe - CS ) / ( MUM / Max( MUM,MUM ) ) ) ) ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6843065693430657, "obj2": 0.24393224406450362}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( MDR * Const ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( Max( MLU,( ( MUR / MUM ) - Max( MLU,MUM ) ) ),MUR ) )", "obj1": 0.5821167883211679, "obj2": 0.3324540942016273}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - ACS ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / ( Max( DS,RRSe ) / ( MLU * RMSe ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.1011873184919351}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,Max( ( MLU + MLU ),RMSe ) ) - MUR ) ) * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,PN ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) ) * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / RRS ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( ( MLU + ( MLU / MUR ) ) - ( ( DS / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.10392234235000475}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( CS + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5200729927007299, "obj2": 0.42387977111530933}, {"determining": "( ( ( ( MDR - BR ) / FirstVNF_CPU_Server ) / MRS ) - Min( ( Min( ACS ,RRS ) + CRS ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( ( RCSe / RCSe ) + MUC ) / RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) / ( CS / ( Max( DS,RRSe ) / ( MUM * MUR ) ) ) ) + RCSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06320005997506008}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),BR ),Min( ( ARS + Max( ( MDR + AMS ),( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( Max( MUR,( MUR + ( MUC - RCSe ) ) ) - ( MUC - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5348858240969473}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * ( ( FirstVNF_CPU - PN ) / Min( ( ( ARS * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / Min( MUM ,Max( RRSe,DS ) ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( ( ( MUR - MLU ) + ( ( MUM * MUM ) * ( MUC - MUM ) ) ) - RCSe ) )", "obj1": 0.9361313868613139, "obj2": 0.035453385431767584}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( DDR * Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) - ( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( Min( BR ,FirstVNF_Mem ) ,MDR ) ) ) )", "choosing": "( ( MUR + ( RMSe / ( ( RCSe - ( Min( RMSe ,RRSe ) - MUR ) ) * MLU ) ) ) * ( Min( ( RRSe - ( RRSe - DS ) ) ,CS ) / RMSe ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( FirstVNF_CPU_Server / ( ACS * DDR ) )", "choosing": "( ( MUC / ( MUC * Max( MLU,( MLU - ( RRSe * MLU ) ) ) ) ) + ( MUC - MUR ) )", "obj1": 0.48722627737226276, "obj2": 0.4776749175843942}, {"determining": "( ( ( ( ( AMS + AMS ) + DDR ) / FirstVNF_Mem ) / MRS ) - Min( ( CRS - Min( Min( MDR ,MDR ) ,FirstVNF_Mem ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( CS + RMSe ),MLU ) + ( Min( Min( DS ,( RCSe + ( MUR / ( Max( MLU,MUC ) / ( RMSe - MLU ) ) ) ) ) ,MUM ) - ( CS / MUM ) ) )", "obj1": 0.8905109489051095, "obj2": 0.06734416402552557}, {"determining": "( Min( ( BR * MRS ) ,ARS ) + Min( ( ( ( ( FirstVNF_RAM_Server - AMS ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * Const ) * MDR ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RRSe - DS ) * Min( Min( DS ,( DS - CS ) ) ,( Max( ( MLU * RMSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / Max( MUM,MUR ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( Max( FirstVNF_RAM,CRS ) / ( ( CRS - ARS ) + FirstVNF_CPU_Server ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS - RMSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5693262046144868}, {"determining": "( ( Min( ( CRS / AMS ) ,ACS ) * ( ( PN - MDR ) + ( FirstVNF_CPU * ( Const * Max( Min( FirstVNF_RAM_Server ,DDR ),BR ) ) ) ) ) / ( ARS - PN ) )", "choosing": "( ( Min( ( CS + MUM ) ,DS ) - DS ) * ( MLU * Min( CS ,( ( Max( ( Max( DS,RRSe ) / ( MUM / DS ) ),MUC ) * RRSe ) - RRSe ) ) ) )", "obj1": 0.6277372262773723, "obj2": 0.2635559481129658}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( ( ( DDR + Const ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( MUC - RMSe ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.7153284671532847, "obj2": 0.18515005060454254}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) + ( PN - ( FirstVNF_RAM_Server + RRS ) ) ) * FirstVNF_CPU_Server ) / ( ARS - PN ) )", "choosing": "( ( Min( ( Max( MLU,( Max( Min( MUR ,RCSe ),MUC ) * ( DS - MUC ) ) ) - ( Max( MUM,RMSe ) - MUR ) ) ,MUC ) - DS ) * ( MLU * Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.27756351919627326}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ARS * MDR ) * BR ) ) ,( ( ( ( BR + ( ( MRS - RRS ) - MDR ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / MDR ) ) )", "choosing": "( Max( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - Min( Max( RMSe,( MUC + Max( Min( MUM ,( CS + RRSe ) ),RMSe ) ) ) ,( Min( ( RMSe / RRSe ) ,CS ) - ( MLU + ( ( MUC - ( Min( MLU ,MLU ) * RMSe ) ) + ( ( ( CS / DS ) * ( DS / MUM ) ) * Min( ( CS - CS ) ,MUR ) ) ) ) ) ) )", "obj1": 0.9416058394160584, "obj2": 0.03101220531951425}, {"determining": "Max( FirstVNF_CPU_Server,Min( Min( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / MRS ) ) * FirstVNF_RAM ),RRS ) ,ARS ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( RRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( CS ,( ( ( MUR / MUR ) + MUR ) / MUR ) ) + RRSe ) ,( ( ( CS + ( RRSe / MLU ) ) + DS ) + Max( RCSe,( MLU / RCSe ) ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6326190354774602}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - ( ( ( FirstVNF_Mem_Server - DDR ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( ( MLU + ( MLU / MUR ) ) - ( ( DS / MUM ) / ( ( ( MLU + RRSe ) / RCSe ) * Max( MUC,MUR ) ) ) ) ) )", "obj1": 0.9726277372262774, "obj2": 0.01449983535813468}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( Max( MLU,MLU ),MUR ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ARS + Min( MDR ,ACS ) ),BR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( ( DS + RRSe ) + Min( MUR ,RMSe ) ) ,DS ) - DS ) ) )", "obj1": 0.885036496350365, "obj2": 0.07404979505949054}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * FirstVNF_RAM_Server ) * MRS ),Min( ARS ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ARS ) ,MDR ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( ( MLU + ( DS / Min( MLU ,CS ) ) ) - CS ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5549597962705146}, {"determining": "( ( ( FirstVNF_CPU * ( RRS / Min( DDR ,AMS ) ) ) + FirstVNF_Mem_Server ) + Min( ( ( Max( FirstVNF_RAM,( DDR - ( Max( FirstVNF_RAM_Server,ACS ) / FirstVNF_Mem ) ) ) * ( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * BR ) + FirstVNF_CPU ) * ARS ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Max( MUR,( ( MUC + ( CS + MUM ) ) - DS ) ) - DS ) - ( CS * MLU ) ),Max( Min( RRSe ,CS ),CS ) ) * ( ( DS * MUM ) / Max( MLU,( Min( MUM ,( ( MUR + MUC ) - RCSe ) ) + RRSe ) ) ) )", "obj1": 0.7682481751824818, "obj2": 0.12834058939702153}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / MDR )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( RCSe - ( ( RCSe / Min( RCSe ,Max( ( MUR + MLU ),RMSe ) ) ) - ( ( Min( MUM ,MUM ) - CS ) + Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6197710581757527}, {"determining": "( Max( Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,( ( ( FirstVNF_RAM_Server - AMS ) * ( CRS / MRS ) ) * FirstVNF_RAM ) ) ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( Const / ( ( Max( CRS,( RRS / Max( MDR,MRS ) ) ) * BR ) / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( CS - Min( ( ( CS - MUR ) + Max( CS,( Min( MLU ,MUR ) / MUM ) ) ) ,DS ) ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,( RRS + FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( MDR ,ARS ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * Max( CS,Max( ( MUR / MUM ),( RRSe + CS ) ) ) ),( ( ( ( MLU * MUM ) - ( Max( RMSe,RMSe ) - MUR ) ) * MUC ) - DS ) ) ) * Max( CS,MUR ) )", "obj1": 0.7536496350364964, "obj2": 0.13707754253359292}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( BR + ( FirstVNF_CPU_Server / AMS ) ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_RAM_Server + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + MUM ) - ( ( MUM - RMSe ) * Max( RMSe,MUC ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5484592255340607}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( MUC - RMSe ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.7372262773722628, "obj2": 0.15868494054318438}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( ( MRS / ( ( ( RRS + RRS ) - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ARS + Min( MDR ,MRS ) ),BR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( ( DS + RRSe ) + Min( RRSe ,( RCSe - RCSe ) ) ) ,DS ) - DS ) ) )", "obj1": 0.9233576642335767, "obj2": 0.03765127773405446}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ARS * ( Min( ( AMS / BR ) ,CRS ) - ( ACS + AMS ) ) ) * BR ) * MDR ) ) )", "choosing": "( Max( ( ( Min( ( ( Min( RRSe ,CS ) - ( MLU / MUM ) ) - RRSe ) ,CS ) * ( ( CS + MUR ) + ( MLU - MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6222627737226277, "obj2": 0.27260364009129373}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,CRS ) ) ) )", "choosing": "( ( ( DS + ( MUC - Max( ( DS * MUM ),DS ) ) ) / MUC ) + Max( ( RCSe - MUM ),MUR ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5875912408759124, "obj2": 0.32607683794285297}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU + Max( ( ARS - ( RRS - MRS ) ),FirstVNF_RAM ) ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( FirstVNF_CPU_Server / MDR ) ,Max( PN,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( DS + ( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( Max( ( CS * RCSe ),MUM ),( ( MUR * MLU ) + ( RCSe - MUM ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.9014598540145985, "obj2": 0.053545790737646606}, {"determining": "Max( ( ARS * DDR ),Max( RRS,( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.3978102189781022, "obj2": 0.6502224548777118}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( MRS - Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,RRS ) ) ) + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,( ( ( DDR * ARS ) * Const ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe / RRSe ),( CS * ( Max( RMSe,MUM ) - Min( RMSe ,MUC ) ) ) ) - ( ( CS - RCSe ) + ( ( CS / MUM ) * DS ) ) ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server + Max( CRS,Min( ( ( FirstVNF_Mem * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) ) ) ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( ( RRSe * RRSe ),( MUR * ( RRSe / MUM ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5716848369529831}, {"determining": "Min( ( FirstVNF_Mem_Server - BR ) ,Max( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ),( Max( ( BR + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ACS / Min( Const ,RRS ) ) ) ),Min( BR ,AMS ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( ( ( MUM / Min( RCSe ,RRSe ) ) / CS ) / ( RRSe - MLU ) ) ) + Min( MUR ,( MLU + MLU ) ) ) + ( Max( ( MUC + Max( MUR,CS ) ),MUM ) * ( RMSe / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4357587714925196}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( ( Const + RRS ) * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe * ( CS * ( MLU * MUR ) ) ) ) + ( CS + MUC ) ) ) - ( ( DS * Min( ( MLU / DS ) ,DS ) ) / RCSe ) )", "obj1": 0.6313868613138686, "obj2": 0.260238397217983}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( ( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42387977111530933}, {"determining": "( ( DDR * Const ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( MDR / Min( ( ARS / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( PN * MRS ) / ACS ),( ( BR + FirstVNF_CPU_Server ) * ( ( BR * FirstVNF_Mem_Server ) - MDR ) ) ) ) )", "choosing": "( Min( CS ,Max( MUM,( ( ( CS * ( Min( MLU ,DS ) + MUM ) ) / MUR ) - MLU ) ) ) * ( Max( ( MLU + DS ),RRSe ) - ( ( ( Max( MUM,MLU ) - MUR ) - Max( MLU,MUM ) ) * MUC ) ) )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6058394160583942, "obj2": 0.2889364742767535}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( BR - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( ( ( Const - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( ( ( ( ( ( CS * DS ) * ( MUM - RRSe ) ) + MUC ) * MUC ) + RRSe ) - Max( MUR,( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.533052987282459}, {"determining": "( ( ( FirstVNF_RAM_Server + PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ARS * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) * BR ) * MDR ) ) )", "choosing": "( Max( ( ( Min( ( ( RRSe - ( MUM / MUM ) ) - RRSe ) ,CS ) * ( ( CS + RMSe ) + ( MLU - MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5036496350364964, "obj2": 0.4556012255251603}, {"determining": "Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server + BR ) ) * ( MRS / MRS ) ),Max( RRS,( ( ( Max( ( FirstVNF_RAM_Server + AMS ),DDR ) - FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,DS ) + MUC ) - MUR ) ) ,( Min( ( ( ( MUR * DS ) + ( RCSe * RRSe ) ) + CS ) ,( Min( DS ,MUC ) + DS ) ) + DS ) )", "obj1": 0.4635036496350365, "obj2": 0.5039105438580718}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ARS + Min( MDR ,ACS ) ),BR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( ( DS + RRSe ) + Min( MUR ,RMSe ) ) ,DS ) - DS ) ) )", "obj1": 0.9251824817518248, "obj2": 0.03641176718640084}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / ( FirstVNF_RAM_Server / PN ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( MUM,( ( RCSe - CS ) / ( MUM / Max( MUM,MUM ) ) ) ) ) ) * ( ( ( MUC * RMSe ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.4051094890510949, "obj2": 0.6246231732971471}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) * ( BR / Min( ( FirstVNF_CPU_Server / ( ( ACS + FirstVNF_CPU_Server ) + BR ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( ( CS + ( RMSe / DS ) ) ,RCSe ),( Max( ( ( Max( DS,DS ) - MUR ) * RRSe ),( MUR / ( Max( MUM,RMSe ) * MUR ) ) ) - MUR ) ) ) / ( ( RCSe * CS ) + DS ) )", "obj1": 0.5, "obj2": 0.46085458163273585}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,MLU ) - MUR ) ) * MUC ) ) * ( MLU * ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) + ( CS + MUC ) ) ) - MUM ) ) )", "obj1": 0.45985401459854014, "obj2": 0.513971086710639}, {"determining": "( BR / ( ( BR - FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( ( MLU + ( MLU / MUR ) ) - ( ( DS / MUM ) / ( ( ( ( CS + RRSe ) - RRSe ) / RCSe ) * ( Min( ( CS / MLU ) ,DS ) + MUR ) ) ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.4835809922814695}, {"determining": "( ( MRS / ( ( FirstVNF_RAM * PN ) / FirstVNF_CPU_Server ) ) - Max( MRS,FirstVNF_RAM ) )", "choosing": "( ( DS / CS ) * Max( MLU,MUR ) )", "obj1": 0.948905109489051, "obj2": 0.028650197590884177}, {"determining": "( ( ( CRS * MDR ) / ( FirstVNF_RAM_Server * PN ) ) + Min( ( DDR - ( FirstVNF_Mem - AMS ) ) ,( ( ( ( BR + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / MDR ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( ( RRSe / ( MUR + RRSe ) ) / ( RMSe - RCSe ) ) ,Max( RRSe,( ( Max( RRSe,MUC ) + MUM ) / ( RCSe - CS ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.9835766423357665, "obj2": 0.00401445327575955}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * ( FirstVNF_Mem_Server / MRS ) ) * ( MRS - DDR ) ) * ( DDR * Min( Max( Min( FirstVNF_Mem ,MDR ),Min( Max( ARS,ACS ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ,RRS ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( MUR - MUM ) + MUM ) - CS ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( ( ( MLU - MUR ) + ( Max( MUM,Min( DS ,Max( RRSe,MLU ) ) ) * MLU ) ),( Max( ( ( RCSe * MUC ) * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5113391680703814}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ),( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( ACS / ( DDR / AMS ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( RMSe + MUM ) ) + Min( RMSe ,( CS + MLU ) ) ) + ( ( Max( ( ( RMSe / MUM ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4357587714925196}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( Max( MDR,Min( FirstVNF_RAM ,BR ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "Max( MUR,( Min( Max( RRSe,MLU ) ,( RRSe + RRSe ) ) + ( MUC - MUR ) ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) / ( ( RRS / ARS ) - ( ( ARS * FirstVNF_CPU_Server ) * ( Const / Min( ( FirstVNF_CPU * ACS ) ,( MDR * ACS ) ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + Min( Max( MLU,DS ) ,( CS - ( Min( MLU ,RRSe ) + MUR ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( FirstVNF_CPU_Server + ( Min( ( FirstVNF_RAM_Server * PN ) ,ARS ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,Min( ( FirstVNF_RAM_Server * Min( ACS ,ACS ) ) ,( ( DDR * BR ) * MDR ) ) ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( CS / MUC ) ) - Max( MUC,MUR ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.47992700729927007, "obj2": 0.4849007296255108}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - FirstVNF_Mem_Server ) ) + Min( Const ,FirstVNF_RAM ) )", "choosing": "( Max( ( ( Max( ( ( RRSe - ( MLU / MUM ) ) - MUC ),( RCSe - ( Min( MLU ,MLU ) - RRSe ) ) ) * ( ( CS + RMSe ) + ( MUM - MLU ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( Min( Max( ( DS - RMSe ),Max( RCSe,CS ) ) ,RMSe ) - MUC ) ) + ( CS + MUC ) ) ) - ( Min( RCSe ,RRSe ) - RCSe ) )", "obj1": 0.7682481751824818, "obj2": 0.12834058939702153}, {"determining": "( ( Const / ( RRS / RRS ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( ( ( ( ( ( MUR - MUM ) + MUM ) - CS ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,MUM ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) ) / ( MLU - MLU ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5792484845985648}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * DDR ) ,ARS ) )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.7591240875912408, "obj2": 0.13204084187719267}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( ( Min( Min( MLU ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) + ( ( Max( ( ( ( MUM + MUM ) + MLU ) / MUR ),Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) * MLU ) * Min( RMSe ,RRSe ) ) )", "obj1": 0.4908759124087591, "obj2": 0.46775824088952334}, {"determining": "( ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,CRS ) * DDR ) ) * MDR ) ,( Max( FirstVNF_Mem,BR ) / MDR ) ) )", "choosing": "( ( MUC / Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( DS * DS ) ),( Min( DS ,( Max( Min( MLU ,CS ),MUR ) / MUC ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.7390510948905109, "obj2": 0.15308084135567326}, {"determining": "( ( ARS / FirstVNF_RAM_Server ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( Max( ARS,( Min( ( AMS / RRS ) ,CRS ) - ( ACS + AMS ) ) ) * BR ) * MDR ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( ( MLU + ( MLU / ( MUC - ( MUR / ( MUC - MUR ) ) ) ) ) - ( ( DS / ( Min( Max( RMSe,MUC ) ,( MLU + MUC ) ) / ( MUC - DS ) ) ) / ( ( ( ( MLU + RRSe ) - RRSe ) / RCSe ) * Max( MUC,MUR ) ) ) ) ) )", "obj1": 0.5109489051094891, "obj2": 0.44552238909816744}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.44343065693430656, "obj2": 0.5484592255340607}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( Const ,( MDR * ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( MUM,( ( RCSe - CS ) / ( MUM / Max( MUM,MUM ) ) ) ) ) ) * ( ( ( MUC * RMSe ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.46715328467153283, "obj2": 0.5010781700418937}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( Const ,( MDR * Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Min( RCSe ,Max( ( MUR + MLU ),RMSe ) ) ) ) * ( ( ( MUC * RMSe ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.4708029197080292, "obj2": 0.4994754023921189}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( MUC,( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5967153284671532, "obj2": 0.296225597864728}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( ( Min( ( MUM / MUM ) ,Max( MUM,RCSe ) ) - Max( DS,DS ) ) * ( ( ( DS / Min( CS ,( MUM - Max( RCSe,CS ) ) ) ) / MUC ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.7463503649635036, "obj2": 0.14492442381235215}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6788321167883211, "obj2": 0.24759806072479518}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,PN ) ) - Min( FirstVNF_RAM_Server ,( BR - ARS ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,Max( ( DS + MLU ),RCSe ) ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,RCSe ),Min( Max( ( RRSe * RRSe ),( MUR * Min( CS ,( DS * RMSe ) ) ) ) ,MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( Max( Const,BR ) / ( RRS / RRS ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( ( ( ( ( ( MUR - MUM ) + MUM ) - CS ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,MUM ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( ( MLU + RRSe ) / ( MLU - MLU ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5792484845985648}, {"determining": "( ( ( ( BR - Max( Min( MDR ,ARS ),ACS ) ) / FirstVNF_CPU_Server ) / MRS ) - ( ( ( AMS * ( ( FirstVNF_RAM_Server * ACS ) - ( DDR + FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem_Server ) - ARS ) )", "choosing": "( RCSe + ( Min( CS ,( ( RRSe - ( MLU + ( RMSe * ( RCSe - MUR ) ) ) ) - RRSe ) ) * ( ( MUR + RMSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.9525547445255474, "obj2": 0.025395803843042866}], "17": [{"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( CRS - FirstVNF_Mem_Server ) + PN ) * ( Const / Min( Max( ARS,( Min( ( AMS / RRS ) ,CRS ) - ( ACS + AMS ) ) ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( FirstVNF_RAM_Server / PN ) ) / ( ( ( CRS - FirstVNF_Mem_Server ) + ACS ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( ( CS / RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) ) + ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( MRS,AMS ),Max( AMS,RRS ) )", "choosing": "( ( DS - ( Max( Max( MLU,MUM ),( MUR - Max( MUM,MLU ) ) ) * MUC ) ) * ( Min( CS ,CS ) * ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) + ( CS + MUC ) ) ) - MUM ) ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( Min( ARS ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( ( ACS / Max( ( Const + ( AMS / ARS ) ),BR ) ) - ( AMS + Min( ( MRS / MDR ) ,Min( Max( ( PN + RRS ),BR ) ,( ( MRS / ACS ) * PN ) ) ) ) ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,( MLU + ( DS / Min( MLU ,CS ) ) ) ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.8813868613138686, "obj2": 0.07777955451834215}, {"determining": "( Max( Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM * Max( CRS,FirstVNF_Mem ) ) ),( ( BR / RRS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_Mem + MRS ) + ( ( ( MRS * FirstVNF_CPU ) * BR ) - ARS ) ) - ( Min( AMS ,( ( ( AMS * ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) / PN ) ) / ( RRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( RCSe + ( ( Min( ( CS - MUC ) ,MLU ) - ( Max( MUM,MUM ) + ( MUC / ( RCSe + Max( DS,( MUC + DS ) ) ) ) ) ) * ( MLU * MUR ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - ACS ) ,( MDR - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,( MLU + ( DS / Min( MLU ,CS ) ) ) ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.8083941605839416, "obj2": 0.09823591242410588}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( ( MLU + MLU ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.635036496350365, "obj2": 0.25418897323616824}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_CPU_Server + CRS ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) * MDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe - RMSe ) + ( MLU / Max( CS,Min( MLU ,MLU ) ) ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.572992700729927, "obj2": 0.3621670075779191}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( DDR * Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) - ( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( Min( BR ,FirstVNF_Mem ) ,MDR ) ) ) )", "choosing": "( ( MUR + ( RMSe / ( ( RCSe - ( Min( RMSe ,RRSe ) - MUR ) ) * MLU ) ) ) * ( Min( ( RRSe - ( RRSe - DS ) ) ,CS ) / RMSe ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) / ( ( ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) * ( FirstVNF_RAM_Server - MDR ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,Max( RRS,BR ) ) ) ) )", "choosing": "( ( DS - ( ( RCSe - Min( ( RCSe / DS ) ,RCSe ) ) + MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5383211678832117, "obj2": 0.40773516846942837}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ),DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6952554744525548, "obj2": 0.22245250422849422}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ),DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6697080291970803, "obj2": 0.2539414759430682}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "( ( MUC - MUR ) * ( MLU * ( RMSe - ( RRSe * ( RCSe - MUC ) ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.5867255925811677}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU_Server * BR ) - ( Max( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * RRS ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( BR,MRS ) ) ) )", "choosing": "( ( MUC * ( RMSe / MUM ) ) + ( RRSe * ( MUR + Min( ( RCSe / RRSe ) ,( MLU * ( ( MLU / RRSe ) - ( ( RCSe + CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3216874493304793}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.4197080291970803, "obj2": 0.61095441538136}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) + ( PN - ( FirstVNF_RAM_Server + RRS ) ) ) * FirstVNF_CPU_Server ) / ( ARS - PN ) )", "choosing": "( ( Min( ( Max( MLU,( Max( Min( MUR ,RCSe ),MUC ) * ( DS - MUC ) ) ) - ( Max( MUM,RMSe ) - MUR ) ) ,MUC ) - DS ) * ( MLU * Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.27756351919627326}, {"determining": "( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( Const,BR ) / ( RRS / RRS ) ) ) * ( ( ( FirstVNF_RAM_Server * Const ) / Min( AMS ,( Min( ACS ,MRS ) / PN ) ) ) + ( ( AMS + MRS ) + ( ACS * ARS ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / RRSe ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "( ( ( Min( BR ,MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( ( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_CPU - MDR ) ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC - Max( ( Max( MUM,DS ) + ( ( MUR + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,( ( ( ( CS + RCSe ) * ( MUC / MLU ) ) * ( MUR + RRSe ) ) / RRSe ) ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.04945592799312513}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - ( PN + MRS ) ) ) + Max( ( ( BR * Const ) * MDR ),( FirstVNF_RAM_Server * Max( RRS,Max( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ),DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( MUR,( Min( MUM ,Max( RRSe,DS ) ) * ( Max( MUM,RMSe ) - Min( DS ,MUR ) ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5948905109489051, "obj2": 0.2992655293120104}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.6861313868613139, "obj2": 0.22458667081934455}, {"determining": "( ( MDR + ACS ) + Min( ( ( ( ( ACS + Const ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( CS + ( ( MLU * MUR ) * ( ( RCSe / ( CS + MUM ) ) * RMSe ) ) )", "obj1": 0.7043795620437956, "obj2": 0.19938069108423428}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( MDR * Const ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ( ( FirstVNF_RAM_Server - AMS ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) + ARS ) ,MDR ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUM ) ) * Min( DS ,Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( ( MLU + ( DS / Min( MLU ,CS ) ) ) - CS ) ) ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5433692989054215}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( Max( MLU,( ( MUR / MUM ) - Max( MLU,MUM ) ) ),MUR ) )", "obj1": 0.5821167883211679, "obj2": 0.3324540942016273}, {"determining": "( ( ( CRS * MDR ) / ( FirstVNF_RAM_Server * PN ) ) + Min( ( DDR - ( FirstVNF_Mem - AMS ) ) ,( ( ( ( BR + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / MDR ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( ( RRSe / ( MUR + RRSe ) ) / ( RMSe - RCSe ) ) ,Max( RRSe,( ( Max( RRSe,MUC ) + MUM ) / ( RCSe - CS ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.9835766423357665, "obj2": 0.00401445327575955}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.718978102189781, "obj2": 0.18018553395661344}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( ( MUM * MUM ) ,Max( MUM,( ( RCSe - CS ) / ( MUM / Max( MUM,MUM ) ) ) ) ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6843065693430657, "obj2": 0.24393224406450362}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ARS * ( Min( ( AMS / BR ) ,CRS ) - ( ACS + AMS ) ) ) * BR ) * MDR ) ) )", "choosing": "( Max( ( ( Min( ( ( Min( RRSe ,CS ) - ( MLU / MUM ) ) - RRSe ) ,CS ) * ( ( CS + MUR ) + ( MLU - MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6222627737226277, "obj2": 0.27260364009129373}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6058394160583942, "obj2": 0.2889364742767535}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,Max( ( MLU + MLU ),RMSe ) ) - MUR ) ) * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,PN ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) ) * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( CS + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5109489051094891, "obj2": 0.44342474106859886}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server + Const ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( RRSe - ( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( MUC - RMSe ) ) ) + Max( MUC,RCSe ) ) )", "obj1": 0.7135036496350365, "obj2": 0.19463836990861558}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) / ( ( RRS / ARS ) - ( ( ARS * FirstVNF_CPU_Server ) * ( Const / Min( ( FirstVNF_CPU * ACS ) ,( MDR * ACS ) ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + Min( Max( MLU,DS ) ,( CS - ( Min( MLU ,RRSe ) + MUR ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6788321167883211, "obj2": 0.24759806072479518}, {"determining": "Min( ( ( DDR + DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / ( ( AMS + ( MDR * FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) ) / PN ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / Min( Min( ( Max( ( CS / MLU ),DS ) / RMSe ) ,( RMSe / Max( RMSe,Min( Min( RMSe ,MUR ) ,( MLU * DS ) ) ) ) ) ,DS ) ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + CS ) ,DS ) - CS ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42387977111530933}, {"determining": "( ( ( ( MDR - BR ) / FirstVNF_CPU_Server ) / MRS ) - Min( ( Min( ACS ,RRS ) + CRS ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( ( RCSe / RCSe ) + MUC ) / RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) / ( CS / ( Max( DS,RRSe ) / ( MUM * MUR ) ) ) ) + RCSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8959854014598541, "obj2": 0.06320005997506008}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * DDR ) ,ARS ) )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.7591240875912408, "obj2": 0.13204084187719267}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / RRS ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( ( MLU + ( MLU / MUR ) ) - ( ( DS / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.10392234235000475}, {"determining": "( FirstVNF_CPU_Server / ( ACS * DDR ) )", "choosing": "( ( MUC / ( MUC * Max( MLU,( MLU - ( RRSe * MLU ) ) ) ) ) + ( MUC - MUR ) )", "obj1": 0.48722627737226276, "obj2": 0.4776749175843942}, {"determining": "( ( ( ( ( AMS + AMS ) + DDR ) / FirstVNF_Mem ) / MRS ) - Min( ( CRS - Min( Min( MDR ,MDR ) ,FirstVNF_Mem ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( CS + RMSe ),MLU ) + ( Min( Min( DS ,( RCSe + ( MUR / ( Max( MLU,MUC ) / ( RMSe - MLU ) ) ) ) ) ,MUM ) - ( CS / MUM ) ) )", "obj1": 0.8905109489051095, "obj2": 0.06734416402552557}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,( RRS + FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,Const ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * Max( CS,Max( ( MUR / MUM ),( RRSe + CS ) ) ) ),( ( ( Max( MLU,MUM ) - ( Max( MUM,RMSe ) - MUR ) ) * MUC ) - DS ) ) ) * DS )", "obj1": 0.7372262773722628, "obj2": 0.15781582901144736}, {"determining": "( ( ( ( BR - Max( Min( MDR ,ARS ),ACS ) ) / FirstVNF_CPU_Server ) / MRS ) - ( ( ( AMS * ( ( FirstVNF_RAM_Server * ACS ) - ( DDR + FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem_Server ) - ARS ) )", "choosing": "( RCSe + ( Min( CS ,( ( RRSe - ( MLU + ( RMSe * ( RCSe - MUR ) ) ) ) - RRSe ) ) * ( ( MUR + RMSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.9525547445255474, "obj2": 0.025395803843042866}, {"determining": "( Max( FirstVNF_RAM,CRS ) / ( ( CRS - ARS ) + FirstVNF_CPU_Server ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS - RMSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5693262046144868}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( MUR,( MUR + ( MUC - ( CS - Min( MUM ,MUM ) ) ) ) )", "obj1": 0.7226277372262774, "obj2": 0.16169341207970192}, {"determining": "Max( FirstVNF_CPU_Server,Min( Min( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / MRS ) ) * FirstVNF_RAM ),RRS ) ,ARS ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( RRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( CS ,( ( ( MUR / MUR ) + MUR ) / MUR ) ) + RRSe ) ,( ( ( CS + ( RRSe / MLU ) ) + DS ) + Max( RCSe,( MLU / RCSe ) ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6326190354774602}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( ( ( MUC - Max( ( Min( RRSe ,DS ) + ( RMSe + DS ) ),DS ) ) * MLU ) + ( Min( Min( DS ,( RCSe + Min( DS ,( Max( DS,RRSe ) / ( MLU * RMSe ) ) ) ) ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.9726277372262774, "obj2": 0.014499835358134679}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ARS + Min( MDR ,ACS ) ),BR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( ( DS + RRSe ) + Min( MUR ,RMSe ) ) ,DS ) - DS ) ) )", "obj1": 0.885036496350365, "obj2": 0.07404979505949054}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * FirstVNF_RAM_Server ) * MRS ),Min( ARS ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ARS ) ,MDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.43795620437956206, "obj2": 0.5549597962705146}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * ( ( FirstVNF_CPU - PN ) / Min( ( ( ARS * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / Min( MUM ,Max( RRSe,DS ) ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( ( ( MUR - MLU ) + ( ( MUM * MUM ) * ( MUC - MUM ) ) ) - RCSe ) )", "obj1": 0.9361313868613139, "obj2": 0.035453385431767584}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( MRS - Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,RRS ) ) ) + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,( ( ( DDR * ARS ) * Const ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe / RRSe ),( CS * ( Max( RMSe,MUM ) - Min( RMSe ,MUC ) ) ) ) - ( ( CS - RCSe ) + ( ( CS / MUM ) * DS ) ) ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( ( ( FirstVNF_CPU * ( RRS / Min( DDR ,AMS ) ) ) + FirstVNF_Mem_Server ) + Min( ( ( Max( FirstVNF_RAM,( DDR - ( Max( FirstVNF_RAM_Server,ACS ) / FirstVNF_Mem ) ) ) * ( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * BR ) + FirstVNF_CPU ) * ARS ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Max( MUR,( ( MUC + ( CS + MUM ) ) - DS ) ) - DS ) - ( CS * MLU ) ),Max( Min( RRSe ,CS ),CS ) ) * ( ( DS * MUM ) / Max( MLU,( Min( MUM ,( ( MUR + MUC ) - RCSe ) ) + RRSe ) ) ) )", "obj1": 0.7682481751824818, "obj2": 0.12834058939702153}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,CRS ) ) ) )", "choosing": "( ( ( DS + ( MUC - Max( ( DS * MUM ),DS ) ) ) / MUC ) + Max( ( RCSe - MUM ),MUR ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( ( DDR * Const ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( MDR / Min( ( ARS / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( PN * MRS ) / ACS ),( ( BR + FirstVNF_CPU_Server ) * ( ( BR * FirstVNF_Mem_Server ) - MDR ) ) ) ) )", "choosing": "( Min( CS ,Max( MUM,( ( ( CS * ( Min( MLU ,DS ) + MUM ) ) / MUR ) - MLU ) ) ) * ( Max( ( MLU + DS ),RRSe ) - ( ( ( Max( MUM,MLU ) - MUR ) - Max( MLU,MUM ) ) * MUC ) ) )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,( RRS + FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( MDR ,ARS ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( MUC / Max( ( ( DS * DS ) * Max( CS,Max( ( MUR / MUM ),( RRSe + CS ) ) ) ),( ( ( ( MLU * MUM ) - ( Max( RMSe,RMSe ) - MUR ) ) * MUC ) - DS ) ) ) * Max( CS,MUR ) )", "obj1": 0.7536496350364964, "obj2": 0.13707754253359292}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( CRS - ACS ) ,( MDR - ( CRS - FirstVNF_RAM ) ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ,( DS * ( RRSe * MLU ) ) ),( Max( MUM,( MUR * RMSe ) ) + DS ) ) + MLU ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR * ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.1011873184919351}, {"determining": "( ( ( ( PN - MDR ) + ( FirstVNF_CPU * PN ) ) * Min( ( CRS / AMS ) ,ACS ) ) - Min( FirstVNF_RAM_Server ,( DDR - ( ACS / Max( ( Const + ( DDR - ARS ) ),BR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Min( ( CS + MUM ) ,DS ) + ( DS + RMSe ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4634590149582614}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5875912408759124, "obj2": 0.32607683794285297}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.9014598540145985, "obj2": 0.0535457907376466}, {"determining": "Max( ( ARS * DDR ),Max( RRS,( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.3978102189781022, "obj2": 0.6502224548777118}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( MUC - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),BR ),Min( ( ARS + Max( ( MDR + AMS ),( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( Max( MUR,( MUR + ( MUC - RCSe ) ) ) - ( MUC - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5348858240969473}, {"determining": "( ( Const / ( RRS / RRS ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( ACS + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( ( ( DS / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,MUM ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) ) / ( MLU - MLU ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5700593189213956}, {"determining": "Min( ( FirstVNF_Mem_Server - BR ) ,Max( Max( ( ( FirstVNF_RAM_Server - BR ) * Max( MDR,Const ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ),( Max( ( BR + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ACS / Min( Const ,RRS ) ) ) ),Min( BR ,AMS ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,( ( ( MUM / Min( RCSe ,RRSe ) ) / CS ) / ( RRSe - MLU ) ) ) + Min( MUR ,( MLU + MLU ) ) ) + ( Max( ( MUC + Max( MUR,CS ) ),MUM ) * ( RMSe / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4357587714925196}, {"determining": "( ( MRS / ( ( FirstVNF_RAM * PN ) / FirstVNF_CPU_Server ) ) - Max( MRS,FirstVNF_RAM ) )", "choosing": "( ( DS / CS ) * Max( MLU,MUR ) )", "obj1": 0.948905109489051, "obj2": 0.028650197590884177}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / Min( ACS ,ACS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,MLU ) - MUR ) ) * MUC ) ) * ( MLU * ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( ( Max( RRSe,DS ) + ( MUC + RMSe ) ),DS ) + ( CS + MUC ) ) ) - MUM ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5101344779068717}, {"determining": "( FirstVNF_CPU_Server + ( Min( ( FirstVNF_RAM_Server * PN ) ,ARS ) + Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,Min( ( FirstVNF_RAM_Server * Min( ACS ,ACS ) ) ,( ( DDR * BR ) * Max( CRS,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),MUM ) ) * Max( CS,MUR ) )", "obj1": 0.4781021897810219, "obj2": 0.49084389985934296}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5985401459854015, "obj2": 0.291056352831938}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( CS + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5200729927007299, "obj2": 0.42387977111530933}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( Min( ( CRS - DDR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ),BR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,( ( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) - ( Min( ( ( DS + RRSe ) + Min( MUR ,RMSe ) ) ,DS ) - DS ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6154138952362512}, {"determining": "( Max( Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM_Server * Max( CRS,( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / MRS ) ) * FirstVNF_RAM ) ) ) ),( ( CRS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "( ( Min( ( CS + MUM ) ,DS ) - DS ) * ( MLU * Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) ) )", "obj1": 0.8375912408759124, "obj2": 0.08560269579990457}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( PN,DDR ) ) )", "choosing": "( ( MUC / ( RRSe * ( ( MUR + ( Max( MLU,DS ) + MUR ) ) - MUR ) ) ) + Max( Max( MLU,MLU ),MUR ) )", "obj1": 0.4744525547445255, "obj2": 0.49619737549146287}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( BR - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( ( ( Const - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( ( ( ( ( ( CS * DS ) * ( MUM - RRSe ) ) + MUC ) * MUC ) + RRSe ) - Max( MUR,( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.533052987282459}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ARS + Min( MDR ,ACS ) ),BR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( ( DS + RRSe ) + Min( MUR ,RMSe ) ) ,DS ) - DS ) ) )", "obj1": 0.9251824817518248, "obj2": 0.03641176718640084}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( ACS + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.5, "obj2": 0.4589355603538053}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( FirstVNF_CPU_Server + Min( MDR ,ACS ) ),BR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( MUM + Min( MUR ,RMSe ) ) ,DS ) - DS ) ) )", "obj1": 0.9215328467153284, "obj2": 0.03860662039659343}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * DDR ) ) * MDR ) ,AMS ) )", "choosing": "( ( ( Min( ( MUM / MUM ) ,Max( MUM,RCSe ) ) - Max( DS,DS ) ) * ( ( ( DS / Min( CS ,( MUM - Max( RCSe,CS ) ) ) ) / MUC ) - ( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( ( DS + RRSe ) + Min( MUR ,RMSe ) ) ,DS ) - DS ) ) ) ) + ( RMSe + MUM ) )", "obj1": 0.75, "obj2": 0.14112723370360558}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) * FirstVNF_RAM_Server ) * MRS ),Min( ARS ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ARS ) ,MDR ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( ( MLU + ( DS / Min( MLU ,CS ) ) ) - CS ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5549597962705146}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,ARS ) + Min( ( ( ( ( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - AMS ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * Const ) * MDR ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( MLU ,( DS - CS ) ),( Max( ( MLU * RMSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( BR / ( ( BR - FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( ( MLU + ( MLU / MUR ) ) - ( ( DS / MUM ) / ( ( ( ( CS + RRSe ) - RRSe ) / RCSe ) * ( Min( ( CS / MLU ) ,DS ) + MUR ) ) ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.4835809922814695}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - Min( FirstVNF_CPU_Server ,( ( BR * Max( ( ARS / ACS ),( FirstVNF_CPU_Server / RRS ) ) ) / CRS ) ) ) ) + Min( ( Const + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( MUM - DS ) - ( Max( Min( RRSe ,MUC ),MLU ) * MUM ) )", "obj1": 0.7043795620437956, "obj2": 0.19938069108423428}, {"determining": "( ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,CRS ) * DDR ) ) * MDR ) ,( Max( FirstVNF_Mem,BR ) / MDR ) ) )", "choosing": "( ( MUC / Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( DS * DS ) ),( Min( DS ,( Max( Min( MLU ,CS ),MUR ) / MUC ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.7390510948905109, "obj2": 0.15308084135567326}, {"determining": "( ( ( FirstVNF_RAM_Server + PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ARS * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) * BR ) * MDR ) ) )", "choosing": "( Max( ( ( Min( ( ( RRSe - ( MUM / MUM ) ) - RRSe ) ,CS ) * ( ( CS + RMSe ) + ( MLU - MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5036496350364964, "obj2": 0.4556012255251603}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "( ( ARS - ( ( RRS - FirstVNF_Mem_Server ) / ARS ) ) / ( ( ( ( CRS - FirstVNF_Mem_Server ) + PN ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - FirstVNF_Mem_Server ) ) + Min( Const ,FirstVNF_RAM ) )", "choosing": "( Max( ( ( Max( ( ( RRSe - ( MLU / MUM ) ) - MUC ),( RCSe - ( Min( MLU ,MLU ) - RRSe ) ) ) * ( ( CS + RMSe ) + ( MUM - MLU ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( Min( Max( ( DS - RMSe ),Max( RCSe,CS ) ) ,RMSe ) - MUC ) ) + ( CS + MUC ) ) ) - ( Min( RCSe ,RRSe ) - RCSe ) )", "obj1": 0.7682481751824818, "obj2": 0.12834058939702153}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( ( ( DDR + Const ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( MUC - RMSe ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.7153284671532847, "obj2": 0.18515005060454254}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( ( Const + RRS ) * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe * ( CS * ( MLU * MUR ) ) ) ) + ( CS + MUC ) ) ) - ( ( DS * Min( ( MLU / DS ) ,DS ) ) / RCSe ) )", "obj1": 0.6313868613138686, "obj2": 0.260238397217983}, {"determining": "( ( Max( Const,BR ) / ( RRS / RRS ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( Max( MLU,MLU ),MUR ) )", "obj1": 0.42700729927007297, "obj2": 0.5792484845985648}, {"determining": "( ( Const / ( RRS / RRS ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( ( ( ( ( ( MUR - MUM ) + MUM ) - CS ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,MUM ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) ) / ( MLU - MLU ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5792484845985648}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( MDR + AMS ),( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( ACS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) + ARS ) ,( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,( MRS * FirstVNF_RAM_Server ) ) ) ,RRS ) * DDR ) ) ) )", "choosing": "Max( MUR,( MUR - ( MUC - ( MUR + ( MUR - Min( RCSe ,RCSe ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6203491202566025}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( Max( ( FirstVNF_RAM_Server * PN ),( BR - MDR ) ) + Min( ( ( Max( CRS,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( RRSe - ( ( ( ( ( RMSe + ( Min( RMSe ,RCSe ) + MLU ) ) - CS ) + MLU ) / ( RRSe * ( RCSe - RMSe ) ) ) + Max( RCSe,MUC ) ) )", "obj1": 0.7427007299270073, "obj2": 0.14915914746850195}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( Const ,( MDR * ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( MUM,( ( RCSe - CS ) / ( MUM / Max( MUM,MUM ) ) ) ) ) ) * ( ( ( MUC * RMSe ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.46715328467153283, "obj2": 0.5010781700418937}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( BR * Const ) * MDR ) ,( FirstVNF_RAM_Server * Max( RRS,Max( MRS,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( MUC,( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5967153284671532, "obj2": 0.296225597864728}, {"determining": "( ( ( ( ( AMS + AMS ) + DDR ) / FirstVNF_Mem ) / MRS ) - Min( ( CRS - Min( Min( MDR ,MDR ) ,FirstVNF_Mem ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( CS + RMSe ),MLU ) + ( Min( Min( DS ,( RCSe + ( MUR / ( Max( MLU,MUC ) / ( RMSe - MLU ) ) ) ) ) ,MUM ) - ( CS / MUM ) ) )", "obj1": 0.9744525547445255, "obj2": 0.013692139525970768}], "18": [{"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - FirstVNF_Mem_Server ) ) + Min( Const ,FirstVNF_RAM ) )", "choosing": "( Max( ( ( Max( ( ( RRSe - ( MLU / MUM ) ) - MUC ),( RCSe - ( Min( MLU ,MLU ) - RRSe ) ) ) * ( ( CS + RMSe ) + ( MUM - MLU ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( Min( Max( ( DS - RMSe ),Max( RCSe,CS ) ) ,RMSe ) - MUC ) ) + ( CS + MUC ) ) ) - ( Min( RCSe ,RRSe ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( CRS - FirstVNF_Mem_Server ) + PN ) * ( Const / Min( Max( ARS,( Min( ( AMS / RRS ) ,CRS ) - ( ACS + AMS ) ) ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_CPU_Server,( FirstVNF_RAM + Min( ( Min( RRS ,FirstVNF_CPU_Server ) / ACS ) ,FirstVNF_CPU_Server ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( MUR * RRSe ) * ( MLU * ( Max( ( ( MUC - MUR ) / RMSe ),( Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) + ( CS + RCSe ) ) ) - MUM ) ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ),DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6697080291970803, "obj2": 0.2539414759430682}, {"determining": "( Max( Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM * Max( CRS,FirstVNF_Mem ) ) ),( ( BR / RRS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_Mem + MRS ) + ( ( ( MRS * FirstVNF_CPU ) * BR ) - ARS ) ) - ( Min( AMS ,( ( ( AMS * ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) / PN ) ) / ( RRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( RCSe + ( ( Min( ( CS - MUC ) ,MLU ) - ( Max( MUM,MUM ) + ( MUC / ( RCSe + Max( DS,( MUC + DS ) ) ) ) ) ) * ( MLU * MUR ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "( ( ( Min( ARS ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( ( ACS / Max( ( Const + ( AMS / ARS ) ),BR ) ) - ( AMS + Min( ( MRS / MDR ) ,Min( Max( ( PN + RRS ),BR ) ,( ( MRS / ACS ) * PN ) ) ) ) ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,( MLU + ( DS / Min( MLU ,CS ) ) ) ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.8813868613138686, "obj2": 0.07777955451834215}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),MUM ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ),DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + ( DDR + Const ) ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( CS - MUR ) ) / Max( MLU,( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6751824817518248, "obj2": 0.23518831946795482}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_CPU_Server + CRS ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) * MDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe - RMSe ) + ( MLU / Max( CS,Min( MLU ,MLU ) ) ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.572992700729927, "obj2": 0.3621670075779191}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( DDR * Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) - ( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( Min( BR ,FirstVNF_Mem ) ,MDR ) ) ) )", "choosing": "( ( MUR + ( RMSe / ( ( RCSe - ( Min( RMSe ,RRSe ) - MUR ) ) * MLU ) ) ) * ( Min( ( RRSe - ( RRSe - DS ) ) ,CS ) / RMSe ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - ACS ) ,( MDR - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,( MLU + ( DS / Min( MLU ,CS ) ) ) ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.8083941605839416, "obj2": 0.09823591242410588}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.635036496350365, "obj2": 0.25418897323616824}, {"determining": "( ( ( CRS * MDR ) / ( FirstVNF_RAM_Server * PN ) ) + Min( ( DDR - ( FirstVNF_Mem - AMS ) ) ,( ( ( ( BR + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / MDR ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( ( RRSe / ( MUR + RRSe ) ) / ( RMSe - RCSe ) ) ,Max( RRSe,( ( Max( RRSe,MUC ) + MUM ) / ( RCSe - CS ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.9835766423357665, "obj2": 0.00401445327575955}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( ( CS - Min( MUM ,MUM ) ) / MUM ) ),( ( RRSe * ( RCSe * ( CS * ( MLU * MUR ) ) ) ) + ( CS + MUC ) ) ) - ( ( DS * Min( ( MLU / DS ) ,DS ) ) / RCSe ) )", "obj1": 0.7062043795620438, "obj2": 0.18087560423631874}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) + ( PN - ( FirstVNF_RAM_Server + RRS ) ) ) * FirstVNF_CPU_Server ) / ( ARS - PN ) )", "choosing": "( ( Min( ( Max( MLU,( Max( Min( MUR ,RCSe ),MUC ) * ( DS - MUC ) ) ) - ( Max( MUM,RMSe ) - MUR ) ) ,MUC ) - DS ) * ( MLU * Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.27756351919627326}, {"determining": "( ( ( Min( BR ,MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( ( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_CPU - MDR ) ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC - Max( ( Max( MUM,DS ) + ( ( MUR + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,( ( ( ( CS + RCSe ) * ( MUC / MLU ) ) * ( MUR + RRSe ) ) / RRSe ) ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.04945592799312513}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * ( ( FirstVNF_CPU - PN ) / Min( ( ( ARS * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / Min( MUM ,Max( RRSe,DS ) ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( ( ( MUR - MLU ) + ( ( MUM * MUM ) * ( MUC - MUM ) ) ) - RCSe ) )", "obj1": 0.9361313868613139, "obj2": 0.035453385431767584}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ),DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6952554744525548, "obj2": 0.22245250422849422}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.718978102189781, "obj2": 0.18018553395661344}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( CS + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5109489051094891, "obj2": 0.44342474106859886}, {"determining": "Max( Max( BR,Max( FirstVNF_CPU,ARS ) ),Min( ( ARS + ( ( MDR + AMS ) * ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( BR * PN ) + ( BR - MDR ) ) / Max( ( AMS * RRS ),( FirstVNF_CPU_Server + ARS ) ) ) ) ) ) ,( DDR / ACS ) ) )", "choosing": "Max( MUR,( Max( Max( MUR,( MUC - RCSe ) ),MUR ) - ( RMSe - ( ( DS * ( ( MUR - ( CS * RMSe ) ) - RRSe ) ) + ( MUR + Max( MLU,DS ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5499850750928451}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( MDR * Const ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,FirstVNF_Mem )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / RRSe ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6058394160583942, "obj2": 0.2889364742767535}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,Max( ( MLU + MLU ),RMSe ) ) - MUR ) ) * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "( ( MDR + ACS ) + Min( ( ( ( ( ACS + Const ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( CS + ( ( MLU * MUR ) * ( ( RCSe / ( CS + MUM ) ) * RMSe ) ) )", "obj1": 0.7043795620437956, "obj2": 0.19938069108423428}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( Min( FirstVNF_Mem ,CRS ),FirstVNF_Mem ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUC - Min( MUM ,CS ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6000522053958659}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,PN ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) ) * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "( ( MUC - MUR ) * ( MLU * ( RMSe - ( RRSe * ( RCSe - MUC ) ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.5867255925811677}, {"determining": "( ( ARS - ( ( RRS - FirstVNF_Mem_Server ) / ARS ) ) / ( ( ( ( CRS - FirstVNF_Mem_Server ) + PN ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * DDR ) ,ARS ) )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.75, "obj2": 0.14029994139631774}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) / ( ( ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) * ( FirstVNF_RAM_Server - MDR ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,Max( RRS,BR ) ) ) ) )", "choosing": "( ( DS - ( ( RCSe - Min( ( RCSe / DS ) ,RCSe ) ) + MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5383211678832117, "obj2": 0.40773516846942837}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - Min( FirstVNF_CPU_Server ,( ( BR * Max( ( ARS / ACS ),( FirstVNF_CPU_Server / RRS ) ) ) / CRS ) ) ) ) + Min( ( Const + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( MUM - DS ) - ( Max( Min( RRSe ,MUC ),MLU ) * MUM ) )", "obj1": 0.7043795620437956, "obj2": 0.19938069108423428}, {"determining": "( ( MRS / ( ( FirstVNF_RAM * PN ) / FirstVNF_CPU_Server ) ) - Max( MRS,FirstVNF_RAM ) )", "choosing": "( ( DS / CS ) * Max( MLU,MUR ) )", "obj1": 0.948905109489051, "obj2": 0.028650197590884177}, {"determining": "( Max( ( FirstVNF_RAM_Server * PN ),( BR - MDR ) ) + Min( ( ( Max( CRS,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( RRSe - ( ( ( ( ( RMSe + ( Min( RMSe ,RCSe ) + MLU ) ) - CS ) + MLU ) / ( RRSe * ( RCSe - RMSe ) ) ) + Max( RCSe,MUC ) ) )", "obj1": 0.7427007299270073, "obj2": 0.14915914746850195}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ARS * ( Min( ( AMS / BR ) ,CRS ) - ( ACS + AMS ) ) ) * BR ) * MDR ) ) )", "choosing": "( Max( ( ( Min( ( ( Min( RRSe ,CS ) - ( MLU / MUM ) ) - RRSe ) ,CS ) * ( ( CS + MUR ) + ( MLU - MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6222627737226277, "obj2": 0.27260364009129373}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( BR * Const ) * MDR ) ,Max( ( BR + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ACS / Min( Const ,RRS ) ) ) ),Min( BR ,AMS ) ) ) )", "choosing": "( Min( RCSe ,RRSe ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5948905109489051, "obj2": 0.2992655293120104}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU_Server * BR ) - ( Max( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * RRS ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( BR,MRS ) ) ) )", "choosing": "( ( MUC * ( RMSe / MUM ) ) + ( RRSe * ( MUR + Min( ( RCSe / RRSe ) ,( MLU * ( ( MLU / RRSe ) - ( ( RCSe + CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3216874493304793}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ( ( FirstVNF_RAM_Server - AMS ) - ( ACS / ( FirstVNF_CPU_Server * Max( PN,DDR ) ) ) ) + ARS ) ,MDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) * Min( DS ,Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( ( MLU + ( DS / Min( MLU ,CS ) ) ) - CS ) ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5665582612111081}, {"determining": "( FirstVNF_CPU_Server / ( ACS * DDR ) )", "choosing": "( ( MUC / ( MUC * Max( MLU,( MLU - ( RRSe * MLU ) ) ) ) ) + ( MUC - MUR ) )", "obj1": 0.48722627737226276, "obj2": 0.4776749175843942}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,ARS ) + Min( ( ( ( ( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - AMS ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * Const ) * MDR ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( MLU ,( DS - CS ) ),( Max( ( MLU * RMSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( ( Const + RRS ) * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe * ( CS * ( MLU * MUR ) ) ) ) + ( CS + MUC ) ) ) - ( ( DS * Min( ( MLU / DS ) ,DS ) ) / RCSe ) )", "obj1": 0.6313868613138686, "obj2": 0.260238397217983}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( Const / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( Min( ( CRS - ACS ) ,( MDR - ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) * DDR ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( DDR,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / MUM ) ),( RMSe + MLU ) ) - ( RMSe - RCSe ) )", "obj1": 0.6259124087591241, "obj2": 0.2669179835902448}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS * ( ( MLU * Max( Max( MLU,CS ),( CS / ( MUM - MLU ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6203491202566025}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ( ( FirstVNF_RAM_Server - AMS ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) + ARS ) ,MDR ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUM ) ) * Min( DS ,Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( ( MLU + ( DS / Min( MLU ,CS ) ) ) - CS ) ) ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5433692989054215}, {"determining": "( ( MRS / ( ( BR - MDR ) / Min( ( ( ARS - MRS ) * FirstVNF_RAM ) ,DDR ) ) ) - ( Const / Min( Max( PN,DDR ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( DS * ( ( CS - ( ( MUR - ( MUM * MLU ) ) / ( RMSe + DS ) ) ) / CS ) ) - DS ) ,Max( ( DS * MUM ),DS ) )", "obj1": 0.9981751824817519, "obj2": 0.0008003598983035659}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) + ( BR - MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * AMS ) * MDR ) ) )", "choosing": "( ( ( RRSe * ( ( Min( MUM ,RCSe ) / MUM ) / ( ( RMSe / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) / ( ( ( RMSe + DS ) - CS ) + MLU ) ) + Max( MUC,RCSe ) )", "obj1": 0.8941605839416058, "obj2": 0.06301706868055468}, {"determining": "( ( ( ( ( AMS + AMS ) + DDR ) / FirstVNF_Mem ) / MRS ) - Min( ( CRS - Min( Min( MDR ,MDR ) ,FirstVNF_Mem ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( CS + RMSe ),MLU ) + ( Min( Min( DS ,( RCSe + ( MUR / ( Max( MLU,MUC ) / ( RMSe - MLU ) ) ) ) ) ,MUM ) - ( CS / MUM ) ) )", "obj1": 0.8905109489051095, "obj2": 0.06734416402552557}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( Max( CRS,FirstVNF_Mem ) * MDR ) ) ) )", "choosing": "Max( MUR,( MUR - ( MUC - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.40773516846942837}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Max( ( FirstVNF_RAM_Server * DDR ),PN ) )", "choosing": "( ( ( MUR * MLU ) * ( ( MLU + ( MLU / ( CS - DS ) ) ) - ( ( DS / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + RCSe )", "obj1": 0.6861313868613139, "obj2": 0.22458667081934455}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server + ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server - Const ) / FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe * ( CS * ( ( MUM * MLU ) * MUR ) ) ) ) + ( DS + MUC ) ) ) - ( ( DS * Min( ( MLU / DS ) ,DS ) ) / RCSe ) )", "obj1": 0.7226277372262774, "obj2": 0.16169341207970192}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ARS + Min( MDR ,ACS ) ),BR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( ( DS + RRSe ) + Min( MUR ,RMSe ) ) ,DS ) - DS ) ) )", "obj1": 0.885036496350365, "obj2": 0.07404979505949054}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( Const ,( MDR * ( ( FirstVNF_RAM_Server * PN ) + ( ( ARS * DDR ) / ARS ) ) ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( MUM,( ( RCSe - CS ) / ( MUM / Max( MUM,MUM ) ) ) ) ) ) * ( ( ( MUC * RMSe ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.46715328467153283, "obj2": 0.5010781700418937}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42387977111530933}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( MRS - Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,RRS ) ) ) + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,( ( ( DDR * ARS ) * Const ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe / RRSe ),( CS * ( Max( RMSe,MUM ) - Min( RMSe ,MUC ) ) ) ) - ( ( CS - RCSe ) + ( ( CS / MUM ) * DS ) ) ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( ( ( FirstVNF_Mem_Server * PN ) + ( BR - MDR ) ) + Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS - RCSe ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( ( RRSe / ( CS - ( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) ) + Min( MUM ,MUM ) ) ) )", "obj1": 0.7718978102189781, "obj2": 0.12279255408280017}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * MRS ),RRS ) + ARS ) - ACS ) ,Max( RRS,( FirstVNF_RAM * Max( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + ( ACS / AMS ) ) ),Min( PN ,RRS ) ) ) ) )", "choosing": "( ( MUC / Max( ( ( RRSe - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),( Min( RRSe ,( MUC / CS ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.4197080291970803, "obj2": 0.61095441538136}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe * RRSe ),( CS * ( Max( MUM,RMSe ) - Min( RMSe ,MUC ) ) ) ) - MUR ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( PN ,( MDR - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.7974452554744526, "obj2": 0.1032913297948944}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( ( ARS + Max( Max( ACS,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) ,MDR ) )", "choosing": "Max( Min( MUC ,CS ),( MUR - ( Max( DS,MLU ) + MUR ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_CPU - MDR ) ) + Min( ( ( Const * ( DDR * Min( Max( PN,BR ) ,( Max( ARS,RRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) * MDR ) ,AMS ) )", "choosing": "( ( ( Min( Max( MUM,RCSe ) ,( MUM / MUM ) ) - Max( DS,DS ) ) * ( ( ( DS / Min( CS ,( MUM - Max( RCSe,CS ) ) ) ) / MUC ) - ( ( ( ( MLU + ( RRSe - DS ) ) + MUR ) / ( MLU * ( MLU / MUR ) ) ) * MLU ) ) ) + ( DS + MUM ) )", "obj1": 0.7536496350364964, "obj2": 0.1355074546874336}, {"determining": "( Max( CRS,Max( ( MDR + AMS ),( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( ACS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( PN,DDR ) ) )", "choosing": "( ( MUC / ( RRSe * ( ( MUR + ( Max( MLU,DS ) + Min( RCSe ,RCSe ) ) ) - MUR ) ) ) + Max( Max( MLU,MLU ),MUR ) )", "obj1": 0.4726277372262774, "obj2": 0.49750014023648353}, {"determining": "( ( Const / ( RRS / RRS ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( ACS + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( ( ( DS / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,MUM ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) ) / ( MLU - MLU ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5700593189213956}, {"determining": "( ( ( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - ( ( BR - ARS ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUC - Max( Max( MUM,MUR ),DS ) ) * MLU ) + ( Min( Min( DS ,( RCSe + Min( RCSe ,RCSe ) ) ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.49635036496350365, "obj2": 0.46345901495826136}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Max( RRS,Min( AMS ,( ( MDR / ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ) ) / PN ) ) ) )", "choosing": "( ( ( MUC - Max( ( Min( RRSe ,DS ) + ( RMSe + DS ) ),DS ) ) * MLU ) + ( RRSe * ( RCSe - MUC ) ) )", "obj1": 0.9708029197080292, "obj2": 0.015605404175496747}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( ( BR * Const ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,( MLU * ( MLU / MUR ) ) ),CS ) ) )", "obj1": 0.8978102189781022, "obj2": 0.05415379752592033}, {"determining": "Min( ( ( DDR + DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / ( ( AMS + ( MDR * FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) ) / PN ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / Min( Min( ( Max( ( CS / MLU ),DS ) / RMSe ) ,( RMSe / Max( RMSe,Min( Min( RMSe ,MUR ) ,( MLU * DS ) ) ) ) ) ,DS ) ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + CS ) ,DS ) - CS ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42387977111530933}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( RRSe + ( ( RCSe + RRSe ) - Max( ( DS * MUM ),DS ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.4635036496350365, "obj2": 0.5078887462408918}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( CRS - ACS ) ,( MDR - ( CRS - FirstVNF_RAM ) ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ,( DS * ( RRSe * MLU ) ) ),( Max( MUM,( MUR * RMSe ) ) + DS ) ) + MLU ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR * ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.1011873184919351}, {"determining": "( ( DDR * Const ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( MDR / Min( ( ARS / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( PN * MRS ) / ACS ),( ( BR + FirstVNF_CPU_Server ) * ( ( BR * FirstVNF_Mem_Server ) - MDR ) ) ) ) )", "choosing": "( Min( CS ,Max( MUM,( ( ( CS * ( Min( MLU ,DS ) + MUM ) ) / MUR ) - MLU ) ) ) * ( Max( ( MLU + DS ),RRSe ) - ( ( ( Max( MUM,MLU ) - MUR ) - Max( MLU,MUM ) ) * MUC ) ) )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( Min( ( CRS - DDR ) ,( BR - ARS ) ),BR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,Min( DS ,( RCSe + Min( RCSe ,RCSe ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6158660028571998}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( BR - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( ( ( Const - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( ( ( ( ( ( CS * DS ) * ( MUM - RRSe ) ) + MUC ) * MUC ) + RRSe ) - Max( MUR,( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.533052987282459}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,CRS ) ) ) )", "choosing": "( ( ( DS + ( MUC - Max( ( DS * MUM ),DS ) ) ) / MUC ) + Max( ( RCSe - MUM ),MUR ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( Min( FirstVNF_RAM_Server ,Const ) + Min( ( ( Const * ( ( ACS * MRS ) * DDR ) ) * AMS ) ,( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / Max( ( ( DS * ( RMSe / Max( RRSe,MUM ) ) ) * Max( Min( Max( MLU,MLU ) ,Min( DS ,RRSe ) ),Max( ( MUR / RCSe ),( MUC - MLU ) ) ) ),( ( ( Max( MLU,MUM ) - ( Max( MUM,RRSe ) - MUR ) ) * MUC ) - DS ) ) ) * DS )", "obj1": 0.7354014598540146, "obj2": 0.1593196127395699}, {"determining": "( ( ( FirstVNF_CPU * ( RRS / Min( DDR ,AMS ) ) ) + FirstVNF_Mem_Server ) + Min( ( ( Max( FirstVNF_RAM,( DDR - ( Max( FirstVNF_RAM_Server,ACS ) / FirstVNF_Mem ) ) ) * ( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * BR ) + FirstVNF_CPU ) * ARS ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Max( MUR,( ( MUC + ( CS + MUM ) ) - DS ) ) - DS ) - ( CS * MLU ) ),Max( Min( RRSe ,CS ),CS ) ) * ( ( DS * MUM ) / Max( MLU,( Min( MUM ,( ( MUR + MUC ) - RCSe ) ) + RRSe ) ) ) )", "obj1": 0.7682481751824818, "obj2": 0.12834058939702153}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5875912408759124, "obj2": 0.32607683794285297}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( ( Max( DS,CS ) + MUR ) - ( MUC - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4908438998593429}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "( ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,CRS ) * DDR ) ) * MDR ) ,( Max( FirstVNF_Mem,BR ) / MDR ) ) )", "choosing": "( ( MUC / Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( DS * DS ) ),( Min( DS ,( Max( Min( MLU ,CS ),MUR ) / MUC ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.7390510948905109, "obj2": 0.15308084135567326}, {"determining": "( Max( ( FirstVNF_RAM_Server / MRS ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * Min( Min( ( MDR / Min( ACS ,ACS ) ) ,( RRS + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ,Const ) ) - Max( ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ),( ( RRS / ( RRS - FirstVNF_RAM ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,MLU ) - MUR ) ) * ( ( MUR - MUR ) + DS ) ) ) * ( MLU * ( Max( ( ( MUR - MUC ) / ( RRSe / MUM ) ),( Max( ( Max( RRSe,MUC ) + ( MUC + RMSe ) ),DS ) + ( MUC + MUC ) ) ) - MUM ) ) )", "obj1": 0.458029197080292, "obj2": 0.5153060931254188}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( MUC - ( ( ( Max( MLU,MUM ) - ( Max( MUM,RMSe ) - MUR ) ) * MUC ) + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5379921963881384}, {"determining": "Max( FirstVNF_CPU_Server,Min( Min( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / MRS ) ) * FirstVNF_RAM ),RRS ) ,ARS ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( RRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( CS ,( ( ( MUR / MUR ) + MUR ) / MUR ) ) + RRSe ) ,( ( ( CS + ( RRSe / MLU ) ) + DS ) + Max( RCSe,( MLU / RCSe ) ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6326190354774602}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.6861313868613139, "obj2": 0.22458667081934455}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5985401459854015, "obj2": 0.291056352831938}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Const ) )", "choosing": "Min( ( ( ( RCSe / CS ) * RMSe ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( MUM + Min( CS ,MUM ) ) ,DS ) - DS ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3324540942016273}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) / ( ( RRS / ARS ) - ( ( ARS * FirstVNF_CPU_Server ) * ( Const / Min( ( FirstVNF_CPU * ACS ) ,( MDR * ACS ) ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + Min( Max( MLU,DS ) ,( CS - ( Min( MLU ,RRSe ) + MUR ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( ( Const / ( RRS / RRS ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( ( ( ( ( ( MUR - MUM ) + MUM ) - CS ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,MUM ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) ) / ( MLU - MLU ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5792484845985648}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / Min( ACS ,ACS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,MLU ) - MUR ) ) * MUC ) ) * ( MLU * ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( ( Max( RRSe,DS ) + ( MUC + RMSe ) ),DS ) + ( CS + MUC ) ) ) - MUM ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5101344779068717}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * DDR ) ) * MDR ) ,AMS ) )", "choosing": "( ( ( Min( ( MUM / MUM ) ,Max( MUM,RCSe ) ) - Max( DS,DS ) ) * ( ( ( DS / Min( CS ,( MUM - Max( RCSe,CS ) ) ) ) / MUC ) - ( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( ( DS + RRSe ) + Min( MUR ,RMSe ) ) ,DS ) - DS ) ) ) ) + ( RMSe + MUM ) )", "obj1": 0.7591240875912408, "obj2": 0.13204084187719267}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "Max( MUR,( MUR - ( MUC - ( MUR + ( Max( Max( MLU,MLU ),MUR ) + MUR ) ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.4835809922814695}, {"determining": "( ( Max( Const,BR ) / ( RRS / RRS ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( Max( MLU,MLU ),MUR ) )", "obj1": 0.42700729927007297, "obj2": 0.5792484845985648}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + Min( ( ( Const * BR ) * ( ARS * DDR ) ) ,( Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) / ( ( ( ACS + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( Max( MLU,MLU ),( MUR + ( ( Min( RMSe ,MUC ) - MLU ) + MLU ) ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.46865445814976775}, {"determining": "( Min( MRS ,( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,Min( MDR ,MRS ) ) )", "choosing": "( Max( MUC,MUR ) + ( MUC / ( RRSe + ( MUC - Max( ( DS * MLU ),( MLU / RCSe ) ) ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.03641176718640084}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( FirstVNF_CPU_Server + Min( MDR ,ACS ) ),BR ) ) ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( Max( MLU,( ( MUR / MUM ) - Max( MLU,MUM ) ) ),MUR ) )", "obj1": 0.9215328467153284, "obj2": 0.03860662039659343}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - ( PN + MRS ) ) ) + Max( ( ( BR * Const ) * MDR ),( FirstVNF_RAM_Server * Max( RRS,Max( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ),DDR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) + Max( Min( DS ,RCSe ),( Max( MUR,( Min( MUM ,Max( RRSe,DS ) ) * ( Max( MUM,RMSe ) - Min( DS ,MUR ) ) ) ) - MUR ) ) ) / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5948905109489051, "obj2": 0.2992655293120104}, {"determining": "Max( Min( BR ,Const ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_RAM / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( Max( ( FirstVNF_RAM_Server / MRS ),( BR + RRS ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) - MRS ) ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Max( Max( ( RCSe * ( DS + RCSe ) ),RCSe ),DS ) ) * MLU ) * ( CS - RMSe ) ) + ( RRSe / RCSe ) )", "obj1": 0.4032846715328467, "obj2": 0.6326190354774602}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}], "19": [{"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( Min( ( ( DDR * ( ( CRS - DDR ) / Min( ( FirstVNF_CPU + PN ) ,FirstVNF_Mem_Server ) ) ) * Const ) ,( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,Min( CRS ,MRS ) ) )", "choosing": "( Max( MUC,MUR ) + ( ( ( MUR - Max( ( DS * MLU ),Max( ( MUR / MUR ),RCSe ) ) ) + Max( ( ( RRSe + ( Min( MLU ,RMSe ) + RCSe ) ) * ( ( MUR + Min( MLU ,MUC ) ) + MLU ) ),MUR ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - FirstVNF_Mem_Server ) ) + Min( Const ,FirstVNF_RAM ) )", "choosing": "( Max( ( ( Max( ( ( RRSe - ( MLU / MUM ) ) - MUC ),( RCSe - ( Min( MLU ,MLU ) - RRSe ) ) ) * ( ( CS + RMSe ) + ( MUM - MLU ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( Min( Max( ( DS - RMSe ),Max( RCSe,CS ) ) ,RMSe ) - MUC ) ) + ( CS + MUC ) ) ) - ( Min( RCSe ,RRSe ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( ARS - PN ) ),Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( ( ( ( ( ( ( MUR - MUM ) + MUM ) - CS ) / RCSe ) - ( CS * RCSe ) ) - DS ) + Max( Min( DS ,MUM ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) ) / ( MLU - MLU ) ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.656934306569343, "obj2": 0.23226629131162158}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Max( ( FirstVNF_CPU + ARS ),( ARS - PN ) ) * ( Min( ( CRS - DDR ) ,( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ARS ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( RRSe,DS ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( RMSe - ( MUR * ( Min( CS ,DS ) - MUR ) ) ) ) ) ) )", "obj1": 0.8594890510948905, "obj2": 0.07143759522108939}, {"determining": "( ( ( ( ( AMS + AMS ) + DDR ) / FirstVNF_Mem ) / MRS ) - Min( ( CRS - Min( Min( MDR ,MDR ) ,FirstVNF_Mem ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( CS + RMSe ),MLU ) + ( Min( Min( DS ,( RCSe + ( MUR / ( Max( MLU,MUC ) / ( RMSe - MLU ) ) ) ) ) ,MUM ) - ( CS / MUM ) ) )", "obj1": 0.8905109489051095, "obj2": 0.06734416402552557}, {"determining": "( ( MRS / ( ( FirstVNF_RAM * PN ) / FirstVNF_CPU_Server ) ) - Max( MRS,FirstVNF_RAM ) )", "choosing": "( ( DS / CS ) * Max( MLU,MUR ) )", "obj1": 0.948905109489051, "obj2": 0.028650197590884177}, {"determining": "( Max( Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM * Max( CRS,FirstVNF_Mem ) ) ),( ( BR / RRS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_Mem + MRS ) + ( ( ( MRS * FirstVNF_CPU ) * BR ) - ARS ) ) - ( Min( AMS ,( ( ( AMS * ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) / PN ) ) / ( RRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( RCSe + ( ( Min( ( CS - MUC ) ,MLU ) - ( Max( MUM,MUM ) + ( MUC / ( RCSe + Max( DS,( MUC + DS ) ) ) ) ) ) * ( MLU * MUR ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS * ( ( MLU * Max( Max( MLU,CS ),( CS / ( MUM - MLU ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6203491202566025}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_RAM_Server - MDR ) ) ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( ( MLU + ( MLU / MUR ) ) - ( ( DS / MUM ) / ( ( ( ( MLU + MUR ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.2265465707629922}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ),DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ,( Max( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.6952554744525548, "obj2": 0.22245250422849422}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( MDR * Const ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - ( BR * Const ) ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6062605743465039}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( DDR * Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) - ( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( Min( BR ,FirstVNF_Mem ) ,MDR ) ) ) )", "choosing": "( ( MUR + ( RMSe / ( ( RCSe - ( Min( RMSe ,RRSe ) - MUR ) ) * MLU ) ) ) * ( Min( ( RRSe - ( RRSe - DS ) ) ,CS ) / RMSe ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( ( CS - Min( MUM ,MUM ) ) / MUM ) ),( ( RRSe * ( RCSe * ( CS * ( MLU * MUR ) ) ) ) + ( CS + MUC ) ) ) - ( ( DS * Min( ( MLU / DS ) ,DS ) ) / RCSe ) )", "obj1": 0.7062043795620438, "obj2": 0.18087560423631874}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU_Server * BR ) - ( Max( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * RRS ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( BR,MRS ) ) ) )", "choosing": "( ( MUC * ( RMSe / MUM ) ) + ( RRSe * ( MUR + Min( ( RCSe / RRSe ) ,( MLU * ( ( MLU / RRSe ) - ( ( RCSe + CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3216874493304793}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.48175182481751827, "obj2": 0.47717799423494484}, {"determining": "( ( ( Min( BR ,MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( ( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_CPU - MDR ) ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC - Max( ( Max( MUM,DS ) + ( ( MUR + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,( ( ( ( CS + RCSe ) * ( MUC / MLU ) ) * ( MUR + RRSe ) ) / RRSe ) ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.04945592799312513}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * ( ( FirstVNF_CPU - PN ) / Min( ( ( ARS * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / Min( MUM ,Max( RRSe,DS ) ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( ( ( MUR - MLU ) + ( ( MUM * MUM ) * ( MUC - MUM ) ) ) - RCSe ) )", "obj1": 0.9361313868613139, "obj2": 0.035453385431767584}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Min( ( Min( Const ,FirstVNF_RAM ) * FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,Const ) ) ) * DDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.7007299270072993, "obj2": 0.2031512273004768}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.718978102189781, "obj2": 0.18018553395661344}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( CS + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5109489051094891, "obj2": 0.44342474106859886}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_CPU_Server + CRS ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) * MDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe - RMSe ) + ( MLU / Max( CS,Min( MLU ,MLU ) ) ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.572992700729927, "obj2": 0.3621670075779191}, {"determining": "( Max( ( PN * FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( Min( FirstVNF_RAM ,MDR ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Max( MUR,( MUR - ( MUC / Max( DS,DS ) ) ) )", "obj1": 0.635036496350365, "obj2": 0.25418897323616824}, {"determining": "( ( ( CRS * MDR ) / ( FirstVNF_RAM_Server * PN ) ) + Min( ( DDR - ( FirstVNF_Mem - AMS ) ) ,( ( ( ( BR + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / MDR ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( ( RRSe / ( MUR + RRSe ) ) / ( RMSe - RCSe ) ) ,Max( RRSe,( ( Max( RRSe,MUC ) + MUM ) / ( RCSe - CS ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.9835766423357665, "obj2": 0.00401445327575955}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - ACS ) ,( FirstVNF_RAM_Server - MDR ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,( MLU + ( ( CS + RCSe ) / Min( MLU ,CS ) ) ) ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.8083941605839416, "obj2": 0.09823591242410588}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Const ) )", "choosing": "Min( ( ( ( RCSe / CS ) * RMSe ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( MUM + Min( CS ,MUM ) ) ,DS ) - DS ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3324540942016273}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( Min( FirstVNF_Mem ,CRS ),FirstVNF_Mem ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUC - Min( MUM ,CS ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6000522053958659}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),MUM ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "( ( MUC - MUR ) * ( MLU * ( RMSe - ( RRSe * ( RCSe - MUC ) ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.5867255925811677}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server + ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server - Const ) / FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe * ( CS * ( ( MUM * MLU ) * MUR ) ) ) ) + ( DS + MUC ) ) ) - ( ( DS * Min( ( MLU / DS ) ,DS ) ) / RCSe ) )", "obj1": 0.7226277372262774, "obj2": 0.16169341207970192}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( PN ,( MDR - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.7974452554744526, "obj2": 0.1032913297948944}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) / ( ( RRS / ARS ) - ( ( ARS * FirstVNF_CPU_Server ) * ( Const / Min( ( FirstVNF_CPU * ACS ) ,( MDR * ACS ) ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + Min( Max( MLU,DS ) ,( CS - ( Min( MLU ,RRSe ) + MUR ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,Max( ( MLU + MLU ),RMSe ) ) - MUR ) ) * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.635036496350365, "obj2": 0.25418897323616824}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) / ( ( ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) * ( FirstVNF_RAM_Server - MDR ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,Max( RRS,BR ) ) ) ) )", "choosing": "( ( DS - ( ( RCSe - Min( ( RCSe / DS ) ,RCSe ) ) + MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5383211678832117, "obj2": 0.40773516846942837}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( BR * Const ) * MDR ) ,Max( ( BR + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ACS / Min( Const ,RRS ) ) ) ),Min( BR ,AMS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,Max( ( DS * MUM ),DS ) )", "obj1": 0.5948905109489051, "obj2": 0.2992655293120104}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),MUM ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ARS * ( Min( ( AMS / BR ) ,CRS ) - ( ACS + AMS ) ) ) * BR ) * MDR ) ) )", "choosing": "( Max( ( ( Min( ( ( Min( RRSe ,CS ) - ( MLU / MUM ) ) - RRSe ) ,CS ) * ( ( CS + MUR ) + ( MLU - MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6222627737226277, "obj2": 0.27260364009129373}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6021897810218978, "obj2": 0.2878721631365925}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,ARS ) + Min( ( ( ( ( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - AMS ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * Const ) * MDR ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( MLU ,( DS - CS ) ),( Max( ( MLU * RMSe ),( MUR * ( Max( MUM,RMSe ) - MUR ) ) ) - MUR ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( MDR + ACS ) + Min( ( ( ( ( ACS + Const ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( CS + ( ( MLU * MUR ) * ( ( RCSe / ( CS + MUM ) ) * RMSe ) ) )", "obj1": 0.7043795620437956, "obj2": 0.19938069108423428}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( BR * Const ) * MDR ) ,Max( ( BR + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ACS / Min( Const ,( BR - MDR ) ) ) ) ),Min( BR ,AMS ) ) ) )", "choosing": "( DS / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.6113138686131386, "obj2": 0.2821434511709245}, {"determining": "Max( Max( BR,Max( FirstVNF_CPU,ARS ) ),Min( ( ARS + ( ( MDR + AMS ) * ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( BR * PN ) + ( BR - MDR ) ) / Max( ( AMS * RRS ),( FirstVNF_CPU_Server + ARS ) ) ) ) ) ) ,( DDR / ACS ) ) )", "choosing": "Max( MUR,( Max( Max( MUR,( MUC - RCSe ) ),MUR ) - ( RMSe - ( ( DS * ( ( MUR - ( CS * RMSe ) ) - RRSe ) ) + ( MUR + Max( MLU,DS ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5499850750928451}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( ( Max( DS,CS ) + MUR ) - ( MUC - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4908438998593429}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,PN ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) ) * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5547445255474452, "obj2": 0.38853060499380465}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) + ( BR - MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * AMS ) * MDR ) ) )", "choosing": "( ( ( RRSe * ( ( Min( MUM ,RCSe ) / MUM ) / ( ( RMSe / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) / ( ( ( RMSe + DS ) - CS ) + MLU ) ) + Max( MUC,RCSe ) )", "obj1": 0.8941605839416058, "obj2": 0.06301706868055468}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( Max( CRS,FirstVNF_Mem ) * MDR ) ) ) )", "choosing": "Max( MUR,( MUR - ( MUC - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.40773516846942837}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( MRS - Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,RRS ) ) ) + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,( ( ( DDR * ARS ) * Const ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe / RRSe ),( CS * ( Max( RMSe,MUM ) - Min( RMSe ,MUC ) ) ) ) - ( ( CS - RCSe ) + ( ( CS / MUM ) * DS ) ) ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "Min( ( ( DDR + DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / ( ( AMS + ( MDR * FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) ) / PN ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / Min( Min( ( Max( ( CS / MLU ),DS ) / RMSe ) ,( RMSe / Max( RMSe,Min( Min( RMSe ,MUR ) ,( MLU * DS ) ) ) ) ) ,DS ) ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + CS ) ,DS ) - CS ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42387977111530933}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) * DDR ),DDR ) ) + Max( BR,AMS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( MUM + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + Max( MUC,MLU ) ) ) ),( DS / MUR ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1218599742751733}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM * ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) + Min( ( ( BR * Const ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * DDR ) ) ,( ( ( FirstVNF_CPU_Server / ( PN + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * CRS ) / ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( PN - FirstVNF_Mem ) ) ) ) - Max( ( ( FirstVNF_RAM + MRS ) - FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC / MUR ) ) + ( ( ( ( ( MUM * ( MUC * ( CS + CS ) ) ) - RCSe ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( MUR,Min( RRSe ,MUM ) ) + RMSe ) ) ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( ( ARS + Max( Max( ACS,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) ,MDR ) )", "choosing": "Max( Min( MUC ,CS ),( MUR - ( Max( DS,MLU ) + MUR ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( MUM + Min( MUR ,RMSe ) ) ,DS ) - DS ) ) )", "obj1": 0.5565693430656934, "obj2": 0.38043156256116867}, {"determining": "( ( DDR * Const ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( MDR / Min( ( ARS / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( PN * MRS ) / ACS ),( ( BR + FirstVNF_CPU_Server ) * ( ( BR * FirstVNF_Mem_Server ) - MDR ) ) ) ) )", "choosing": "( Min( CS ,Max( MUM,( ( ( CS * ( Min( MLU ,DS ) + MUM ) ) / MUR ) - MLU ) ) ) * ( Max( ( MLU + DS ),RRSe ) - ( ( ( Max( MUM,MLU ) - MUR ) - Max( MLU,MUM ) ) * MUC ) ) )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( RRSe,( ( RCSe - CS ) / ( Max( DS,CS ) + MUR ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.6240875912408759, "obj2": 0.2666585936739928}, {"determining": "( Max( ( FirstVNF_RAM_Server * PN ),( BR - MDR ) ) + Min( ( ( Max( CRS,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( RRSe - ( ( ( ( ( RMSe + ( Min( RMSe ,RCSe ) + MLU ) ) - CS ) + MLU ) / ( RRSe * ( RCSe - RMSe ) ) ) + Max( RCSe,MUC ) ) )", "obj1": 0.7427007299270073, "obj2": 0.14915914746850195}, {"determining": "Max( ARS,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,MLU ) - MUR ) ) * MUC ) ) * ( MLU * ( Max( ( ( ( ( MUR - MUM ) + MUM ) - CS ) / RCSe ),( Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) + ( CS + MUC ) ) ) - MUM ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6502224548777118}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5644064822676754}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "( Min( FirstVNF_RAM_Server ,Const ) + Min( ( ( Const * ( ( ACS * MRS ) * DDR ) ) * AMS ) ,( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / Max( ( ( DS * ( RMSe / Max( RRSe,MUM ) ) ) * Max( Min( Max( MLU,MLU ) ,Min( DS ,RRSe ) ),Max( ( MUR / RCSe ),( MUC - MLU ) ) ) ),( ( ( Max( MLU,MUM ) - ( Max( MUM,RRSe ) - MUR ) ) * MUC ) - DS ) ) ) * DS )", "obj1": 0.7354014598540146, "obj2": 0.1593196127395699}, {"determining": "( ( ( RRS * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + MLU ) ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "Min( ( ( DDR / DDR ) - ARS ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( MUM + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( ( ( MUM / CS ) + ( MUC - RCSe ) ),MUR ) ),( MUR + DS ) ) ),Max( Min( RRSe ,( MLU * ( MLU / MUR ) ) ),CS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.572992700729927, "obj2": 0.3621670075779191}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42387977111530933}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( CRS - ACS ) ,( MDR - ( CRS - FirstVNF_RAM ) ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ,( DS * ( RRSe * MLU ) ) ),( Max( MUM,( MUR * RMSe ) ) + DS ) ) + MLU ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR * ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.1011873184919351}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN + FirstVNF_CPU ) ) + Min( ARS ,( ( Const * ( Min( Max( PN,BR ) ,Min( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ) )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUC ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * ( RRSe / ( MUC - ( ( DS + ( Max( MLU,( MLU / RMSe ) ) / ( MUM + MUC ) ) ) - MUR ) ) ) )", "obj1": 0.7481751824817519, "obj2": 0.14417719294186626}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / Min( ACS ,ACS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,MLU ) - MUR ) ) * MUC ) ) * ( MLU * ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( ( Max( RRSe,DS ) + ( MUC + RMSe ) ),DS ) + ( CS + MUC ) ) ) - MUM ) ) )", "obj1": 0.5036496350364964, "obj2": 0.45591252271233856}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ( ( FirstVNF_RAM_Server - AMS ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) + ARS ) ,MDR ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUM ) ) * Min( DS ,Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( ( MLU + ( DS / Min( MLU ,CS ) ) ) - CS ) ) ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5433692989054215}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,CRS ) ) ) )", "choosing": "( ( ( DS + ( MUC - Max( ( DS * MUM ),DS ) ) ) / MUC ) + Max( ( RCSe - MUM ),MUR ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Max( RRS,Min( AMS ,( ( MDR / ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ) ) / PN ) ) ) )", "choosing": "( ( ( MUC - Max( ( Min( RRSe ,DS ) + ( RMSe + DS ) ),DS ) ) * MLU ) + ( RRSe * ( RCSe - MUC ) ) )", "obj1": 0.9708029197080292, "obj2": 0.015605404175496747}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - ACS ) ,( MDR - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,( MLU + ( DS / Min( MLU ,CS ) ) ) ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.8083941605839416, "obj2": 0.09823591242410588}, {"determining": "( ( Const / ( RRS / RRS ) ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - ( ( Const * BR ) * ( Min( Max( ( FirstVNF_RAM_Server + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ) ) ) )", "choosing": "( ( ( ( ( DS / RCSe ) - ( CS * RCSe ) ) - MUM ) + Max( Min( DS ,MUM ),( Max( ( RRSe * RRSe ),( MUR * ( Max( MUM,RMSe ) - ( MLU + MLU ) ) ) ) - MUR ) ) ) / ( Min( ( ( ( RCSe / CS ) - DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( CS + MUM ) ,DS ) - CS ) ) ) / ( MLU - MLU ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5754212173391621}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( ( BR * Const ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / RRSe ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.05415379752592033}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.27756351919627326}, {"determining": "( Max( ( FirstVNF_RAM_Server / MRS ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * Min( Min( ( MDR / Min( ACS ,ACS ) ) ,( RRS + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ,Const ) ) - Max( ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ),( ( RRS / ( RRS - FirstVNF_RAM ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,MLU ) - MUR ) ) * ( ( MUR - MUR ) + DS ) ) ) * ( MLU * ( Max( ( ( MUR - MUC ) / ( RRSe / MUM ) ),( Max( ( Max( RRSe,MUC ) + ( MUC + RMSe ) ),DS ) + ( MUC + MUC ) ) ) - MUM ) ) )", "obj1": 0.458029197080292, "obj2": 0.5153060931254188}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( MUC - ( ( ( Max( MLU,MUM ) - ( Max( MUM,RMSe ) - MUR ) ) * MUC ) + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5379921963881384}, {"determining": "( ( ( FirstVNF_CPU * ( RRS / Min( DDR ,AMS ) ) ) + FirstVNF_Mem_Server ) + Min( ( ( Max( FirstVNF_RAM,( DDR - ( Max( FirstVNF_RAM_Server,ACS ) / FirstVNF_Mem ) ) ) * ( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * BR ) + FirstVNF_CPU ) * ARS ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Max( MUR,( ( MUC + ( CS + MUM ) ) - DS ) ) - DS ) - ( CS * MLU ) ),Max( Min( RRSe ,CS ),CS ) ) * ( ( DS * MUM ) / Max( MLU,( Min( MUM ,( ( MUR + MUC ) - RCSe ) ) + RRSe ) ) ) )", "obj1": 0.7682481751824818, "obj2": 0.12834058939702153}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( PN + Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( MUR + ( Max( Max( MLU,MLU ),MUR ) + MUR ) ) / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.4708029197080292, "obj2": 0.4959243956899403}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * ARS ) * BR ) - ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ,( ( ( ( BR + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / MDR ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( RRSe,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) ) * ( Min( ( MUC * MUM ) ,RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.6295620437956204, "obj2": 0.26166657068525334}, {"determining": "Max( FirstVNF_CPU_Server,Min( Min( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / MRS ) ) * FirstVNF_RAM ),RRS ) ,ARS ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( RRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( CS ,( ( ( MUR / MUR ) + MUR ) / MUR ) ) + RRSe ) ,( ( ( CS + ( RRSe / MLU ) ) + DS ) + Max( RCSe,( MLU / RCSe ) ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6326190354774602}, {"determining": "( ( ARS - ( ( RRS - FirstVNF_Mem_Server ) / ARS ) ) / ( ( ( ( CRS - FirstVNF_Mem_Server ) + PN ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - ( ( BR - ARS ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUC - Max( ( Min( RRSe ,DS ) + ( RMSe + DS ) ),DS ) ) * MLU ) + ( Min( Min( DS ,( RCSe + Min( RCSe ,RCSe ) ) ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.9744525547445255, "obj2": 0.013692139525970768}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( ( Const + RRS ) * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe * ( CS * ( MLU * MUR ) ) ) ) + ( CS + MUC ) ) ) - ( ( DS * Min( ( MLU / DS ) ,DS ) ) / RCSe ) )", "obj1": 0.6313868613138686, "obj2": 0.260238397217983}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / Min( ACS ,ACS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,MLU ) - MUR ) ) * MUC ) ) * ( MLU * ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( ( Max( RRSe,DS ) + ( MUC + RMSe ) ),DS ) + ( CS + MUC ) ) ) - MUM ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5101344779068717}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + Min( ( ( Const * BR ) * ( ARS * DDR ) ) ,( Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) / ( ( ( ACS + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( Max( MLU,MLU ),( MUR + ( ( Min( RMSe ,MUC ) - MLU ) + MLU ) ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.46865445814976775}, {"determining": "( ( MRS / ( ( Min( AMS ,FirstVNF_RAM ) - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ARS + Min( MDR ,ACS ) ),BR ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe + RMSe ) + ( MUM / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / MUM ) ),( ( Min( CS ,MUC ) - MUM ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.9251824817518248, "obj2": 0.03641176718640084}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( MUR,( MUR - ( MUC - ( MUR + ( Max( Max( MLU,MLU ),MUR ) + MUR ) ) ) ) )", "obj1": 0.4744525547445255, "obj2": 0.49101248993646307}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,Min( ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ,( RCSe + Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.003833865232912307}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( FirstVNF_CPU_Server + Min( MDR ,ACS ) ),BR ) ) ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( Max( MLU,( ( MUR / MUM ) - Max( MLU,MUM ) ) ),MUR ) )", "obj1": 0.9215328467153284, "obj2": 0.03860662039659343}, {"determining": "( ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,CRS ) * DDR ) ) * MDR ) ,( Max( FirstVNF_Mem,BR ) / MDR ) ) )", "choosing": "( ( MUC / Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( DS * DS ) ),( Min( DS ,( Max( Min( MLU ,CS ),MUR ) / MUC ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.7390510948905109, "obj2": 0.15308084135567326}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( RRSe + ( ( RCSe + RRSe ) - Max( ( DS * MUM ),DS ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.4635036496350365, "obj2": 0.5078887462408918}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),BR ),Min( ( ARS + Max( ( ( ( ( Const + FirstVNF_RAM_Server ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) + AMS ),( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( Max( MUR,( MUR + ( ( RMSe + DS ) - MLU ) ) ) - ( RMSe - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5485626694210674}, {"determining": "Max( Min( BR ,Const ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_RAM / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( Max( ( FirstVNF_RAM_Server / MRS ),( BR + RRS ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) - MRS ) ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Max( Max( ( RCSe * ( DS + RCSe ) ),RCSe ),DS ) ) * MLU ) * ( CS - RMSe ) ) + ( RRSe / RCSe ) )", "obj1": 0.4032846715328467, "obj2": 0.6326190354774602}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,DDR ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ) / ( RRSe * ( MUC - MUR ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5857664233576643, "obj2": 0.32739893561929373}], "20": [{"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( Min( PN ,( MDR - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),( RMSe / MUR ) ) ) ) ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( Min( ( ( DDR * ( ( CRS - DDR ) / Min( ( FirstVNF_CPU + PN ) ,FirstVNF_Mem_Server ) ) ) * Const ) ,( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,Min( CRS ,MRS ) ) )", "choosing": "( Max( MUC,MUR ) + ( ( ( MUR - Max( ( DS * MLU ),Max( ( MUR / MUR ),RCSe ) ) ) + Max( ( ( RRSe + ( Min( MLU ,RMSe ) + RCSe ) ) * ( ( MUR + Min( MLU ,MUC ) ) + MLU ) ),MUR ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( ( ARS * ( PN / ( FirstVNF_CPU * RRS ) ) ),RRS ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ) ) ,( Min( Min( Max( ( ( DS * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( Max( ( DDR - FirstVNF_RAM ),Const ) - MDR ) ) + ( Min( ( Min( Const ,FirstVNF_RAM ) * FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( Const,MDR ) ) ) * DDR ) )", "choosing": "( Max( MUC,RCSe ) + ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / CS ) ) * ( MUC - MUR ) ) ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.21806546129561474}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.656934306569343, "obj2": 0.23226629131162158}, {"determining": "( ( ( ( ( AMS + AMS ) + DDR ) / FirstVNF_Mem ) / MRS ) - Min( ( CRS - Min( Min( MDR ,MDR ) ,FirstVNF_Mem ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( CS + RMSe ),MLU ) + ( Min( Min( DS ,( RCSe + ( MUR / ( Max( MLU,MUC ) / ( RMSe - MLU ) ) ) ) ) ,MUM ) - ( CS / MUM ) ) )", "obj1": 0.8905109489051095, "obj2": 0.06734416402552557}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Max( ( FirstVNF_CPU + ARS ),( ARS - PN ) ) * ( Min( ( CRS - DDR ) ,( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ARS ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( ( RRSe * ( MUC - MUR ) ) / MUC ) + Max( MUC,( Max( ( RMSe + ( RCSe - ( Min( CS ,MLU ) * DS ) ) ),RMSe ) / Max( MUC,( Max( RCSe,( MUM * Min( RMSe ,RMSe ) ) ) / ( ( Max( DS,CS ) + MUR ) - CS ) ) ) ) ) )", "obj1": 0.8594890510948905, "obj2": 0.07143759522108939}, {"determining": "( Max( Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM * Max( CRS,FirstVNF_Mem ) ) ),( ( BR / RRS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_Mem + MRS ) + ( ( ( MRS * FirstVNF_CPU ) * BR ) - ARS ) ) - ( Min( AMS ,( ( ( AMS * ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) / PN ) ) / ( RRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( RCSe + ( ( Min( ( CS - MUC ) ,MLU ) - ( Max( MUM,MUM ) + ( MUC / ( RCSe + Max( DS,( MUC + DS ) ) ) ) ) ) * ( MLU * MUR ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "( Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( DDR / DDR ) ) ) * MDR ) ,ARS ) + ( DDR - Min( PN ,PN ) ) )", "choosing": "( Max( ( Max( ( MLU + MLU ),( MUR + DS ) ) / ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR / RCSe ) + MLU ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( MUR * MUC ) ) ) * Min( ( Min( CS ,( ( RMSe * RMSe ) / Max( CS,MUR ) ) ) + ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ) ) ,( ( ( CS + ( RRSe / MLU ) ) + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) )", "obj1": 0.7481751824817519, "obj2": 0.14153128777072477}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Min( ( Min( Const ,FirstVNF_RAM ) * FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,Const ) ) ) * DDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.7007299270072993, "obj2": 0.2031512273004768}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS * ( ( MLU * Max( Max( MLU,CS ),( CS / ( MUM - MLU ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6203491202566025}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU_Server * BR ) - ( Max( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * RRS ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( BR,MRS ) ) ) )", "choosing": "( ( MUC * ( RMSe / MUM ) ) + ( RRSe * ( MUR + Min( ( RCSe / RRSe ) ,( MLU * ( ( MLU / RRSe ) - ( ( RCSe + CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3216874493304793}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - Min( Const ,Min( Max( MDR,Min( ACS ,ACS ) ) ,( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( MDR - ( Max( ( AMS * DDR ),( AMS + MDR ) ) + ACS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,MUM ) - Max( DS,DS ) ) * ( ( MUR * ( MUR / ( RRSe - DS ) ) ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.5529197080291971, "obj2": 0.3893500962469472}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) * ( Const / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "Max( MUR,( MUR + ( MUC - ( CS - CS ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6049150782824877}, {"determining": "( ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server * Max( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server + Max( BR,MDR ) ) ),FirstVNF_RAM_Server ) ) ) + ( PN - MDR ) ) + ( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( RRSe / RCSe ),( DS - ( MUC - ( MUR + ( RRSe + MUR ) ) ) ) )", "obj1": 0.7645985401459854, "obj2": 0.13027315921498406}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - DDR ) ) + Max( RRS,DDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( RRSe + RMSe ) - ( MLU + MUC ) ) - RRSe ) ) * ( ( MUR + RMSe ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5948905109489051, "obj2": 0.2986041134591613}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "Max( MUR,( MUR + ( MUC - ( CS - Min( MUM ,MUM ) ) ) ) )", "obj1": 0.7062043795620438, "obj2": 0.18087560423631874}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( DDR * Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) - ( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( Min( BR ,FirstVNF_Mem ) ,MDR ) ) ) )", "choosing": "( ( MUR + ( RMSe / ( ( RCSe - ( Min( RMSe ,RRSe ) - MUR ) ) * MLU ) ) ) * ( Min( ( RRSe - ( RRSe - DS ) ) ,CS ) / RMSe ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( CS + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5109489051094891, "obj2": 0.44342474106859886}, {"determining": "Max( ACS,Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( ( Min( Min( DS ,( MLU + ( DS / Min( MLU ,CS ) ) ) ) ,MUR ) - ( RCSe - MUM ) ) - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( ( Max( RRSe,DS ) + ( MUC + RMSe ) ),DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5720220377926738}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.718978102189781, "obj2": 0.18018553395661344}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * ( ( FirstVNF_CPU - PN ) / Min( ( ( ARS * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / Min( MUM ,Max( RRSe,DS ) ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( ( ( MUR - MLU ) + ( ( MUM * MUM ) * ( MUC - MUM ) ) ) - RCSe ) )", "obj1": 0.9361313868613139, "obj2": 0.035453385431767584}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6021897810218978, "obj2": 0.2878721631365925}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.48175182481751827, "obj2": 0.47717799423494484}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - ACS ) ,( MDR - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( ( MUC + RMSe ) / MUR ) + ( Min( Min( DS ,( MLU + ( DS / Min( MLU ,CS ) ) ) ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.8083941605839416, "obj2": 0.09823591242410588}, {"determining": "( ( ( Min( BR ,MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( ( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_CPU - MDR ) ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC - Max( ( Max( MUM,DS ) + ( ( MUR + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,( ( ( ( CS + RCSe ) * ( MUC / MLU ) ) * ( MUR + RRSe ) ) / RRSe ) ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.04945592799312513}, {"determining": "( ( MDR + ACS ) + Min( ( ( ( ( ACS + Const ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( CS + ( ( MLU * MUR ) * ( ( RCSe / ( CS + MUM ) ) * RMSe ) ) )", "obj1": 0.7043795620437956, "obj2": 0.19938069108423428}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM * ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) + Min( Min( ( ( RRS * FirstVNF_RAM ) * FirstVNF_CPU ) ,( FirstVNF_RAM * Max( CRS,FirstVNF_Mem ) ) ) ,( ( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) * CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( Max( ( MLU * Max( MUR,( Min( MUR ,CS ) + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) / ( ( DS + MUC ) / ( CS - MUR ) ) ),Max( Min( RRSe ,( DS + MUC ) ),CS ) ) )", "obj1": 0.9452554744525548, "obj2": 0.027466474130817587}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.5711678832116789, "obj2": 0.363920259564715}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),MUM ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( MUR * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.531021897810219, "obj2": 0.41906749170164936}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) - MRS ) ) ) ) ) )", "choosing": "( RCSe + ( ( Min( RRSe ,Max( Max( ( RCSe * ( DS * RCSe ) ),RCSe ),DS ) ) * MLU ) * DS ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "( ( ARS - ( ( RRS - FirstVNF_Mem_Server ) / ARS ) ) / ( ( ( ( CRS - FirstVNF_Mem_Server ) + PN ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_Mem_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - Max( ( RMSe + ( RCSe - ( Min( CS ,MLU ) * DS ) ) ),RMSe ) )", "obj1": 0.6459854014598541, "obj2": 0.24254326331612383}, {"determining": "( Max( BR,ARS ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,DS ) - ( ( MUM * MUM ) - Max( RRSe,( ( CS - MUM ) / ( CS / MUM ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.9507299270072993, "obj2": 0.02333845842643519}, {"determining": "( ( ( Max( ( ARS * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ),AMS ) * MDR ) / ( MRS * FirstVNF_RAM_Server ) ) + ( DDR / FirstVNF_CPU ) )", "choosing": "( ( RCSe + MUM ) + ( MLU + RMSe ) )", "obj1": 0.5, "obj2": 0.46329883504826924}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) / ( ( ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) * ( FirstVNF_RAM_Server - MDR ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,Max( RRS,BR ) ) ) ) )", "choosing": "( ( DS - ( ( RCSe - Min( ( RCSe / DS ) ,RCSe ) ) + MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5383211678832117, "obj2": 0.40773516846942837}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Max( ( FirstVNF_CPU + ARS ),( ARS - PN ) ) * ( Min( ( CRS - DDR ) ,( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ARS ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( RRSe,DS ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( RMSe - ( MUR * ( Min( CS ,DS ) - MUR ) ) ) ) ) ) )", "obj1": 0.8594890510948905, "obj2": 0.07143759522108939}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM * ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) + Min( ( ( BR * Const ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * DDR ) ) ,( ( ( FirstVNF_CPU_Server / ( PN + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * CRS ) / ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( PN - FirstVNF_Mem ) ) ) ) - Max( ( ( FirstVNF_RAM + MRS ) - FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC / MUR ) ) + ( ( ( ( ( MUM * ( MUC * ( CS + CS ) ) ) - RCSe ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( MUR,Min( RRSe ,MUM ) ) + RMSe ) ) ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),MUM ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6386861313868614, "obj2": 0.2530837823016477}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( AMS + ( MDR * FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6204379562043796, "obj2": 0.27119184189162154}, {"determining": "( Min( FirstVNF_RAM_Server ,Const ) + Min( ( ( Const * ( ( ACS * MRS ) * DDR ) ) * AMS ) ,( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / Max( ( ( DS * ( RMSe / Max( RRSe,MUM ) ) ) * Max( Min( Max( MLU,MLU ) ,Min( DS ,RRSe ) ),Max( ( MUR / RCSe ),( MUC - MLU ) ) ) ),( ( ( Max( MLU,MUM ) - ( Max( MUM,RRSe ) - MUR ) ) * MUC ) - DS ) ) ) * DS )", "obj1": 0.7354014598540146, "obj2": 0.1593196127395699}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( ( CS - Min( MUM ,MUM ) ) / MUM ) ),( ( RRSe * ( RCSe * ( CS * ( MLU * MUR ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( CS - Min( MUM ,MUM ) ) * Min( ( MLU / DS ) ,DS ) ) / RCSe ) )", "obj1": 0.7208029197080292, "obj2": 0.1652326798900129}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5644064822676754}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6496350364963503, "obj2": 0.23980703169190493}, {"determining": "Max( Max( BR,Max( FirstVNF_CPU,ARS ) ),Min( ( ARS + ( ( MDR + AMS ) * ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( BR * PN ) + ( BR - MDR ) ) / Max( ( AMS * RRS ),( FirstVNF_CPU_Server + ARS ) ) ) ) ) ) ,( DDR / ACS ) ) )", "choosing": "Max( MUR,( Max( Max( MUR,( MUC - RCSe ) ),MUR ) - ( RMSe - ( ( DS * ( ( MUR - ( CS * RMSe ) ) - RRSe ) ) + ( MUR + Max( MLU,DS ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5499850750928451}, {"determining": "( Max( ( FirstVNF_RAM_Server * PN ),( BR - MDR ) ) + Min( ( ( Max( CRS,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( RRSe - ( ( ( ( ( RMSe + ( Min( RMSe ,RCSe ) + MLU ) ) - CS ) + MLU ) / ( RRSe * ( RCSe - RMSe ) ) ) + Max( RCSe,MUC ) ) )", "obj1": 0.7427007299270073, "obj2": 0.14915914746850195}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( Min( FirstVNF_Mem ,CRS ),FirstVNF_Mem ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUC - Min( MUM ,CS ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6000522053958659}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * FirstVNF_RAM_Server ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ARS,FirstVNF_CPU ) + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( ARS - ARS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( Min( ( RCSe / MUM ) ,( MLU - CS ) ) ,RCSe ) / ( ( RCSe / CS ) - ( RMSe - MUC ) ) ) / RRSe ) + RRSe ) + ( Min( Min( DS ,CS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( DS - RCSe ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( MRS - Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,RRS ) ) ) + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,( ( ( DDR * ARS ) * Const ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe / RRSe ),( CS * ( Max( RMSe,MUM ) - Min( RMSe ,MUC ) ) ) ) - ( ( CS - RCSe ) + ( ( CS / MUM ) * DS ) ) ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Max( RRS,Min( AMS ,( ( MDR / ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ) ) / PN ) ) ) )", "choosing": "( ( ( MUC - Max( ( Min( RRSe ,DS ) + ( RMSe + DS ) ),DS ) ) * MLU ) + ( RRSe * ( RCSe - MUC ) ) )", "obj1": 0.9708029197080292, "obj2": 0.015605404175496747}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_CPU_Server + CRS ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) * MDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe - RMSe ) + ( MLU / Max( CS,Min( MLU ,MLU ) ) ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.572992700729927, "obj2": 0.3621670075779191}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) * DDR ),DDR ) ) + Max( BR,AMS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( MUM + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + Max( MUC,MLU ) ) ) ),( DS / MUR ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1218599742751733}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "( ( MUC - MUR ) * ( MLU * ( RMSe - ( RRSe * ( RCSe - MUC ) ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.5867255925811677}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( MUM + Min( MUR ,RMSe ) ) ,DS ) - DS ) ) )", "obj1": 0.5565693430656934, "obj2": 0.38043156256116867}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( Max( CRS,FirstVNF_Mem ) * MDR ) ) ) )", "choosing": "Max( MUR,( MUR - ( MUC - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.40773516846942837}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( BR * Const ) * MDR ) ,Max( ( BR + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ACS / Min( Const ,FirstVNF_CPU_Server ) ) ) ),Min( BR ,AMS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,Max( ( ( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) * MUM ),DS ) )", "obj1": 0.5967153284671532, "obj2": 0.2962255978647281}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( MUC - ( ( ( Max( MLU,MUM ) - ( Max( MUM,RMSe ) - MUR ) ) * MUC ) + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5379921963881384}, {"determining": "Max( ARS,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,MLU ) - MUR ) ) * MUC ) ) * ( MLU * ( Max( ( ( ( ( MUR - MUM ) + MUM ) - CS ) / RCSe ),( Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) + ( CS + MUC ) ) ) - MUM ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6502224548777118}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42387977111530933}, {"determining": "( ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) + Min( ( ( Const * ( Min( Max( PN,BR ) ,CRS ) * DDR ) ) * MDR ) ,( Max( FirstVNF_Mem,BR ) / MDR ) ) )", "choosing": "( ( MUC / Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( DS * DS ) ),( Min( DS ,( Max( Min( MLU ,CS ),MUR ) / MUC ) ) - ( RMSe + MLU ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.7390510948905109, "obj2": 0.15308084135567326}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.9835766423357665, "obj2": 0.00401445327575955}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + Min( ( ( Const * BR ) * ( ARS * DDR ) ) ,( Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) / ( ( ( ACS + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( Max( MLU,MLU ),( MUR + ( ( Min( RMSe ,MUC ) - MLU ) + MLU ) ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.46865445814976775}, {"determining": "Min( ( ( ( MRS - BR ) + Min( Min( RRS ,FirstVNF_RAM_Server ) ,ACS ) ) - ( AMS / Max( ACS,BR ) ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR * RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( ( ( ( MLU * MUM ) + RRSe ) - RRSe ) / ( Min( Min( MLU ,MUR ) ,RCSe ) + MLU ) ) * Max( MUR,MUC ) ) / ( MUM / ( Min( MLU ,( CS / RMSe ) ) / CS ) ) ) ) * ( Max( MUC,RRSe ) / ( RRSe / DS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,CRS ) ) ) )", "choosing": "( ( ( DS + ( MUC - Max( ( DS * MUM ),DS ) ) ) / MUC ) + Max( ( RCSe - MUM ),MUR ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( ( MRS / ( ( Min( AMS ,FirstVNF_RAM ) - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ARS + Min( MDR ,ACS ) ),BR ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe + RMSe ) + ( MUM / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / MUM ) ),( ( Min( CS ,MUC ) - MUM ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.9251824817518248, "obj2": 0.03641176718640084}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( DS / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.5821167883211679, "obj2": 0.3324540942016273}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - ACS ) ,( FirstVNF_RAM_Server - MDR ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,( MLU + ( ( CS + RCSe ) / Min( MLU ,CS ) ) ) ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.8083941605839416, "obj2": 0.09823591242410588}, {"determining": "( ( ACS / Max( ( Const + ( DDR - ARS ) ),( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( MUR + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ),( MUR - ( MUC - ( MUR + ( Max( Max( MLU,MLU ),MUR ) + MUR ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5032469758629415}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),Min( FirstVNF_RAM_Server ,( PN * Const ) ) ),Min( ( CRS + Max( ( MDR + AMS ),( Max( ( FirstVNF_RAM_Server - ( PN - Const ) ),MDR ) / Min( ( MDR / FirstVNF_CPU_Server ) ,( MRS - AMS ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MLU + ( MUM * RRSe ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5327524411286897}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( CRS - ACS ) ,( MDR - ( CRS - FirstVNF_RAM ) ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ,( DS * ( RRSe * MLU ) ) ),( Max( MUM,( MUR * RMSe ) ) + DS ) ) + MLU ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR * ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.1011873184919351}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( BR * Const ) * MDR ) ,Max( ( BR + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ACS / Min( Const ,( BR - MDR ) ) ) ) ),Min( BR ,AMS ) ) ) )", "choosing": "( DS / ( ( Max( MUR,( DS / MUR ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.6113138686131386, "obj2": 0.2821434511709245}, {"determining": "( ( ( FirstVNF_CPU * ( RRS / Min( DDR ,AMS ) ) ) + FirstVNF_Mem_Server ) + Min( ( ( Max( FirstVNF_RAM,( DDR - ( Max( FirstVNF_RAM_Server,ACS ) / FirstVNF_Mem ) ) ) * ( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * BR ) + FirstVNF_CPU ) * ARS ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Max( MUR,( ( MUC + ( CS + MUM ) ) - DS ) ) - DS ) - ( CS * MLU ) ),Max( Min( RRSe ,CS ),CS ) ) * ( ( DS * MUM ) / Max( MLU,( Min( MUM ,( ( MUR + MUC ) - RCSe ) ) + RRSe ) ) ) )", "obj1": 0.7682481751824818, "obj2": 0.12834058939702153}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * ARS ) * BR ) - ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ,( ( ( ( BR + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / MDR ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( RRSe,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) ) * ( Min( ( MUC * MUM ) ,RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.6295620437956204, "obj2": 0.26166657068525334}, {"determining": "( Max( FirstVNF_CPU_Server,Max( Min( ( Max( MDR,RRS ) + CRS ) ,FirstVNF_CPU_Server ),PN ) ) / Min( ( ( AMS / DDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( MUR,( ( CS - Max( MLU,Min( RMSe ,RMSe ) ) ) / DS ) ),MLU ) / Max( MLU,MLU ) ) / DS )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + PN ) + Max( RRS,RRS ) ) + ( ( FirstVNF_RAM_Server - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + Min( Max( MLU,MLU ) ,( ( Min( ( MUC / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( RCSe - CS ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( PN ,( MDR - Min( ARS ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,DS ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.7956204379562044, "obj2": 0.10453084034254803}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),FirstVNF_RAM_Server ) ) ,MDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( Max( ( RCSe - MUR ),MLU ) + ( MUR * ( MUR + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) / ( ( RRS / ARS ) - ( ( ARS * FirstVNF_CPU_Server ) * ( Const / Min( ( FirstVNF_CPU * ACS ) ,( MDR * ACS ) ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + Min( Max( MLU,DS ) ,( CS - ( Min( MLU ,RRSe ) + MUR ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - ( ( BR - ARS ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUC - Max( ( Min( RRSe ,DS ) + ( RMSe + DS ) ),DS ) ) * MLU ) + ( Min( Min( DS ,( RCSe + Min( RCSe ,RCSe ) ) ) ,MUM ) - ( RCSe / MUM ) ) )", "obj1": 0.9744525547445255, "obj2": 0.013692139525970768}, {"determining": "( Min( ( FirstVNF_RAM_Server * Min( AMS ,RRS ) ) ,ARS ) + Min( ( ( Const * ( ( Max( ( FirstVNF_CPU * ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - AMS ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) * MDR ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( ( ( ( MUM * Min( MUR ,RMSe ) ) + ( ( MLU * MUR ) + Min( MUR ,MUC ) ) ) + Max( RRSe,RRSe ) ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( DS * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / Min( ACS ,ACS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,MLU ) - MUR ) ) * MUC ) ) * ( MLU * ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( ( Max( RRSe,DS ) + ( MUC + RMSe ) ),DS ) + ( CS + MUC ) ) ) - MUM ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5101344779068717}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) + ( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * BR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) - ARS ) )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),( ( Min( MUM ,MUM ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * ( Max( ( RMSe / ( MLU * RRSe ) ),Min( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) ,MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.47992700729927007, "obj2": 0.48844788673355527}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Const ) )", "choosing": "Min( ( ( ( RCSe / CS ) * RMSe ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( MUM + Min( CS ,MUM ) ) ,DS ) - DS ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3324540942016273}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) / FirstVNF_CPU_Server ),( ( ARS * MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,Min( Const ,CRS ) ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - Min( ( ( MLU / MUM ) - ( MUC * Max( RCSe,RCSe ) ) ) ,CS ) ) * MUC ) ) * ( MLU * ( RMSe - MUM ) ) )", "obj1": 0.5547445255474452, "obj2": 0.3885306049938046}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( FirstVNF_CPU_Server + Min( MDR ,ACS ) ),BR ) ) ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( Max( MLU,( ( MUR / MUM ) - Max( MLU,MUM ) ) ),MUR ) )", "obj1": 0.9215328467153284, "obj2": 0.03860662039659343}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( ( BR * Const ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.05415379752592033}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) + ( BR - MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * AMS ) * MDR ) ) )", "choosing": "( ( ( RRSe * ( ( Min( MUM ,RCSe ) / MUM ) / ( ( RMSe / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) / ( ( ( RMSe + DS ) - CS ) + MLU ) ) + Max( MUC,RCSe ) )", "obj1": 0.8941605839416058, "obj2": 0.06301706868055468}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),BR ),Min( ( ARS + Max( ( ( ( ( Const + FirstVNF_RAM_Server ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) + AMS ),( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( Max( MUR,( MUR + ( ( RMSe + DS ) - MLU ) ) ) - ( RMSe - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5485626694210674}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / Min( Min( ( Max( ( CS / MLU ),DS ) / RMSe ) ,( RMSe / Max( RMSe,Min( Min( RMSe ,MUR ) ,( MLU * DS ) ) ) ) ) ,DS ) ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + CS ) ,DS ) - CS ) ) )", "obj1": 0.6131386861313869, "obj2": 0.27756351919627326}, {"determining": "Min( ( ( DDR / DDR ) - ARS ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( MUM + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( ( ( MUM / CS ) + ( MUC - RCSe ) ),MUR ) ),( MUR + DS ) ) ),Max( Min( RRSe ,( MLU * ( MLU / MUR ) ) ),CS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( ARS - ACS ) ,( MDR - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MUM,( MUR * RMSe ) ) + DS ) ) + MLU ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( MUR * ( Max( MUM,MUR ) - MUR ) ) ) ) ) ) )", "obj1": 0.7992700729927007, "obj2": 0.10303738417480836}, {"determining": "( ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) / MDR ) - Min( FirstVNF_RAM_Server ,Min( Const ,FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC - Max( ( Min( RRSe ,DS ) + ( RMSe + DS ) ),DS ) ) * MLU ) + ( Min( Min( DS ,( RCSe + Min( RCSe ,RCSe ) ) ) ,MUM ) - ( RMSe - RCSe ) ) )", "obj1": 0.9744525547445255, "obj2": 0.013692139525970768}, {"determining": "( Max( ( Max( ACS,FirstVNF_CPU_Server ) / ( ( ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) * ( FirstVNF_RAM_Server - MDR ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,Max( RRS,BR ) ) ) ) ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / Min( ACS ,ACS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,MLU ) - MUR ) ) * MUC ) ) * ( MLU * ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( ( RCSe - Min( ( RCSe / DS ) ,RCSe ) ) + MUC ) ) - MUM ) ) )", "obj1": 0.5036496350364964, "obj2": 0.45591252271233856}], "21": [{"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ARS - ( ( RRS - FirstVNF_Mem_Server ) / ARS ) ) / ( ( ( ( CRS - FirstVNF_Mem_Server ) + PN ) * ( Min( Max( MDR,FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - ( ARS * MRS ) ) ) ) / Const ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + ( ( RRSe + RCSe ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( Min( PN ,( MDR - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),( RMSe / MUR ) ) ) ) ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( ( ARS * ( PN / ( FirstVNF_CPU * RRS ) ) ),RRS ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ) ) ,( Min( Min( Max( ( ( DS * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ( CRS * MDR ) / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / ( RRSe / ( MUR + RRSe ) ) ) ),( ( RRSe * ( ( MLU + MLU ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( Max( ( DDR - FirstVNF_RAM ),Const ) - MDR ) ) + ( Min( ( Min( Const ,FirstVNF_RAM ) * FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( Const,MDR ) ) ) * DDR ) )", "choosing": "( Max( MUC,RCSe ) + ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / CS ) ) * ( MUC - MUR ) ) ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.21806546129561474}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.656934306569343, "obj2": 0.23226629131162158}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) + ( BR - MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * AMS ) * MDR ) ) )", "choosing": "( ( ( RRSe * ( ( Min( MUM ,RCSe ) / MUM ) / ( ( RMSe / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) / ( ( ( RMSe + DS ) - CS ) + MLU ) ) + Max( MUC,RCSe ) )", "obj1": 0.8941605839416058, "obj2": 0.06301706868055468}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU_Server * BR ) - ( Max( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * RRS ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( BR,MRS ) ) ) )", "choosing": "( ( MUC * ( RMSe / MUM ) ) + ( RRSe * ( MUR + Min( ( RCSe / RRSe ) ,( MLU * ( ( MLU / RRSe ) - ( ( RCSe + CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3216874493304793}, {"determining": "( Max( Min( ( ( Const * BR ) * MDR ) ,( FirstVNF_RAM * Max( CRS,FirstVNF_Mem ) ) ),( ( BR / RRS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_Mem + MRS ) + ( ( ( MRS * FirstVNF_CPU ) * BR ) - ARS ) ) - ( Min( AMS ,( ( ( AMS * ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) / PN ) ) / ( RRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( RCSe + ( ( Min( ( CS - MUC ) ,MLU ) - ( Max( MUM,MUM ) + ( MUC / ( RCSe + Max( DS,( MUC + DS ) ) ) ) ) ) * ( MLU * MUR ) ) )", "obj1": 0.8412408759124088, "obj2": 0.08332246450949961}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - ACS ) ,( FirstVNF_RAM_Server - MDR ) ) * DDR ) ) * MDR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,( MLU + ( ( CS + MLU ) / Min( MLU ,CS ) ) ) ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.8156934306569343, "obj2": 0.09272457181254001}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS * ( ( MLU * Max( Max( MLU,CS ),( CS / ( MUM - MLU ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6203491202566025}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) * ( Const / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "Max( MUR,( MUR + ( MUC - ( CS - CS ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6049150782824877}, {"determining": "( Max( ( ACS / MDR ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( MUC ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( ( MUR / DS ) * Min( MLU ,RCSe ) ) ,( MUR * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUC,( CS * RRSe ) ) ) ) )", "obj1": 0.541970802919708, "obj2": 0.40461229815058136}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - DDR ) ) + Max( RRS,DDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( RRSe + RMSe ) - ( MLU + MUC ) ) - RRSe ) ) * ( ( MUR + RMSe ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5948905109489051, "obj2": 0.2986041134591613}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6386861313868614, "obj2": 0.2530837823016477}, {"determining": "( ( ( PN * ( Min( Min( DDR ,BR ) ,AMS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( Min( MUM ,MUM ) + MUR ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,MUC ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( Min( RCSe ,CS ) - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7062043795620438, "obj2": 0.18087560423631874}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( DDR * Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) - ( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( Min( BR ,FirstVNF_Mem ) ,MDR ) ) ) )", "choosing": "( ( MUR + ( RMSe / ( ( RCSe - ( Min( RMSe ,RRSe ) - MUR ) ) * MLU ) ) ) * ( Min( ( RRSe - ( RRSe - DS ) ) ,CS ) / RMSe ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.718978102189781, "obj2": 0.18018553395661344}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * ( ( FirstVNF_CPU - PN ) / Min( ( ( ARS * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / Min( MUM ,Max( RRSe,DS ) ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( ( ( MUR - MLU ) + ( ( MUM * MUM ) * ( MUC - MUM ) ) ) - RCSe ) )", "obj1": 0.9361313868613139, "obj2": 0.035453385431767584}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - Min( Const ,Min( Max( MDR,Min( ACS ,ACS ) ) ,( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( MDR - ( Max( ( AMS * DDR ),( AMS + MDR ) ) + ACS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,MUM ) - Max( DS,DS ) ) * ( ( MUR * ( MUR / ( RRSe - DS ) ) ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.5529197080291971, "obj2": 0.3893500962469472}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.48175182481751827, "obj2": 0.47717799423494484}, {"determining": "( ( ( Min( BR ,MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( ( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_CPU - MDR ) ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC - Max( ( Max( MUM,DS ) + ( ( MUR + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,( ( ( ( CS + RCSe ) * ( MUC / MLU ) ) * ( MUR + RRSe ) ) / RRSe ) ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.04945592799312513}, {"determining": "( ( MDR + ACS ) + Min( ( ( ( ( ACS + Const ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( CS + ( ( MLU * MUR ) * ( ( RCSe / ( CS + MUM ) ) * RMSe ) ) )", "obj1": 0.7043795620437956, "obj2": 0.19938069108423428}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( Min( FirstVNF_Mem ,CRS ),FirstVNF_Mem ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUC - Min( MUM ,CS ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6000522053958659}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM * ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) + Min( Min( ( ( RRS * FirstVNF_RAM ) * FirstVNF_CPU ) ,( FirstVNF_RAM * Max( CRS,FirstVNF_Mem ) ) ) ,( ( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) * CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( Max( ( MLU * Max( MUR,( Min( MUR ,CS ) + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) / ( ( DS + MUC ) / ( CS - MUR ) ) ),Max( Min( RRSe ,( DS + MUC ) ),CS ) ) )", "obj1": 0.9452554744525548, "obj2": 0.027466474130817587}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.5711678832116789, "obj2": 0.363920259564715}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( MUR * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.531021897810219, "obj2": 0.41906749170164936}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42387977111530933}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * ARS ) * ( RRS * MDR ) ) / MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( Min( Max( ( ( Min( RCSe ,DS ) - MUR ) * ( RRSe - CS ) ),Max( MLU,RMSe ) ) ,( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6021897810218978, "obj2": 0.28637921869452737}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( ( CS - Min( MUM ,MUM ) ) / MUM ) ),( ( RRSe * ( RCSe * ( CS * ( MLU * MUR ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( CS - Min( MUM ,MUM ) ) * Min( ( MLU / DS ) ,DS ) ) / RCSe ) )", "obj1": 0.7208029197080292, "obj2": 0.1652326798900129}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) / ( ( RRS / ARS ) - ( ( ARS * FirstVNF_CPU_Server ) * ( Const / Min( ( FirstVNF_CPU * ACS ) ,( MDR * ACS ) ) ) ) ) )", "choosing": "( Max( RRSe,DS ) + Min( Max( MLU,DS ) ,( CS - ( Min( MLU ,RRSe ) + MUR ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5644064822676754}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_Mem_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - Max( ( RMSe + ( RCSe - ( Min( CS ,MLU ) * DS ) ) ),RMSe ) )", "obj1": 0.6459854014598541, "obj2": 0.24254326331612383}, {"determining": "( Max( BR,ARS ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,DS ) - ( ( MUM * MUM ) - Max( RRSe,( ( CS - MUM ) / ( CS / MUM ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.9507299270072993, "obj2": 0.02333845842643519}, {"determining": "( Min( ( FirstVNF_RAM_Server * Min( AMS ,RRS ) ) ,ARS ) + Min( ( ( Const * ( ( Max( ( FirstVNF_CPU * ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - AMS ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) * MDR ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( ( ( ( MUM * Min( MUR ,RMSe ) ) + ( ( MLU * MUR ) + Min( MUR ,MUC ) ) ) + Max( RRSe,RRSe ) ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( DS * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM * ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) + Min( ( ( BR * Const ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * DDR ) ) ,( ( ( FirstVNF_CPU_Server / ( PN + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * CRS ) / ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( PN - FirstVNF_Mem ) ) ) ) - Max( ( ( FirstVNF_RAM + MRS ) - FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC / MUR ) ) + ( ( ( ( ( MUM * ( MUC * ( CS + CS ) ) ) - RCSe ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( MUR,Min( RRSe ,MUM ) ) + RMSe ) ) ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Min( ( Min( Const ,FirstVNF_RAM ) * FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,Const ) ) ) * DDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.7007299270072993, "obj2": 0.2031512273004768}, {"determining": "( Min( FirstVNF_RAM_Server ,Const ) + Min( ( ( Const * ( ( ACS * MRS ) * DDR ) ) * AMS ) ,( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / Max( ( ( DS * ( RMSe / Max( RRSe,MUM ) ) ) * Max( Min( Max( MLU,MLU ) ,Min( DS ,RRSe ) ),Max( ( MUR / RCSe ),( MUC - MLU ) ) ) ),( ( ( Max( MLU,MUM ) - ( Max( MUM,RRSe ) - MUR ) ) * MUC ) - DS ) ) ) * DS )", "obj1": 0.7354014598540146, "obj2": 0.1593196127395699}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * FirstVNF_RAM_Server ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ARS,FirstVNF_CPU ) + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( ARS - ARS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( Min( ( RCSe / MUM ) ,( MLU - CS ) ) ,RCSe ) / ( ( RCSe / CS ) - ( RMSe - MUC ) ) ) / RRSe ) + RRSe ) + ( Min( Min( DS ,CS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( DS - RCSe ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9744525547445255, "obj2": 0.008682347316311814}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6496350364963503, "obj2": 0.23980703169190493}, {"determining": "Max( Max( BR,Max( FirstVNF_CPU,ARS ) ),Min( ( ARS + ( ( MDR + AMS ) * ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( BR * PN ) + ( BR - MDR ) ) / Max( ( AMS * RRS ),( FirstVNF_CPU_Server + ARS ) ) ) ) ) ) ,( DDR / ACS ) ) )", "choosing": "Max( MUR,( Max( Max( MUR,( MUC - RCSe ) ),MUR ) - ( RMSe - ( ( DS * ( ( MUR - ( CS * RMSe ) ) - RRSe ) ) + ( MUR + Max( MLU,DS ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5499850750928451}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) + ( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * BR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) - ARS ) )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),( ( Min( MUM ,MUM ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * ( Max( ( RMSe / ( MLU * RRSe ) ),Min( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) ,MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.47992700729927007, "obj2": 0.48844788673355527}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,CRS ) ) ) )", "choosing": "( ( ( DS + ( MUC - Max( ( DS * MUM ),DS ) ) ) / MUC ) + Max( ( RCSe - MUM ),MUR ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( MDR * Const ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( Max( MUR,( ( MUC + ( CS + MUM ) ) - DS ) ) - DS ) - ( CS * MLU ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( RMSe - ( MUR * ( Min( CS ,DS ) - MUR ) ) ) ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "( ( ( BR - AMS ) + ( FirstVNF_RAM_Server * PN ) ) + ( Max( BR,FirstVNF_RAM ) * Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( MUC / Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( ( MUC - ( ( RRSe - DS ) / RMSe ) ) + Min( MLU ,Min( ( RCSe - MUC ) ,( DS / MUM ) ) ) ) ),( Min( DS ,( Max( Min( MLU ,CS ),MUR ) / MUC ) ) - ( RMSe + DS ) ) ) ) * Max( CS,MUR ) )", "obj1": 0.7554744525547445, "obj2": 0.13455211202489462}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + PN ) + Max( RRS,RRS ) ) + ( ( FirstVNF_RAM_Server - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + Min( Max( MLU,MLU ) ,( ( Min( ( MUC / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( RCSe - CS ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( BR * Const ) * MDR ) ,Max( ( BR + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ACS / Min( Const ,FirstVNF_CPU_Server ) ) ) ),Min( BR ,AMS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,Max( ( ( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) * MUM ),DS ) )", "obj1": 0.5967153284671532, "obj2": 0.2962255978647281}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_CPU_Server + CRS ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) * MDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe - RMSe ) + ( MLU / Max( CS,Min( MLU ,MLU ) ) ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.572992700729927, "obj2": 0.3621670075779191}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( Max( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / MRS ) ) * MRS ),RRS ) + ARS ) ,MDR ) )", "choosing": "( ( MUC - MUR ) * ( MLU * ( RMSe - ( RRSe * ( RCSe - MUC ) ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.5867255925811677}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Const ) )", "choosing": "Min( ( ( ( RCSe / CS ) * RMSe ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( MUM + Min( CS ,MUM ) ) ,DS ) - DS ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3324540942016273}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - ( RCSe + ( RRSe - DS ) ) ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - ( Min( CS ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6277372262773723, "obj2": 0.2629375256920549}, {"determining": "( Max( FirstVNF_CPU_Server,Max( Min( ( Max( MDR,RRS ) + CRS ) ,FirstVNF_CPU_Server ),PN ) ) / Min( ( ( AMS / DDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( MUR,( ( CS - Max( MLU,Min( RMSe ,RMSe ) ) ) / DS ) ),MLU ) / Max( MLU,MLU ) ) / DS )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * RMSe ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Max( CS,MUM ) - DS ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( FirstVNF_CPU_Server + Min( MDR ,ACS ) ),BR ) ) ) ) )", "choosing": "( ( MUC / ( RRSe * ( MUC - MUR ) ) ) + Max( Max( MLU,( ( MUR / MUM ) - Max( MLU,MUM ) ) ),MUR ) )", "obj1": 0.9215328467153284, "obj2": 0.03860662039659343}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( MDR ,BR ) ) + ( Min( ( Min( Const ,FirstVNF_RAM ) * Max( FirstVNF_RAM_Server,( MDR / CRS ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,Const ) ) ) * DDR ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,Max( DS,( MUC + RRSe ) ) ) / MUM ) ) * ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7007299270072993, "obj2": 0.2031512273004768}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( DS / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.5821167883211679, "obj2": 0.3324540942016273}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( AMS + ( MDR * FirstVNF_CPU ) ) - Max( FirstVNF_CPU,ARS ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6313868613138686, "obj2": 0.25987665200024784}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),MUM ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.4744525547445255, "obj2": 0.49101248993646307}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - ( PN * Const ) ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5720220377926738}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( ( BR * Const ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.05415379752592031}, {"determining": "Min( ( ( DDR / DDR ) - ARS ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( ( ( MUM + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( ( ( MUM / CS ) + ( MUC - RCSe ) ),MUR ) ),( MUR + DS ) ) ),Max( Min( RRSe ,( MLU * ( MLU / MUR ) ) ),CS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( CS + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5109489051094891, "obj2": 0.44342474106859886}, {"determining": "( ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server * Max( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server + Max( BR,MDR ) ) ),FirstVNF_RAM_Server ) ) ) + ( PN - MDR ) ) + ( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( RRSe / RCSe ),( DS - ( MUC - ( MUR + ( RRSe + MUR ) ) ) ) )", "obj1": 0.7645985401459854, "obj2": 0.13027315921498406}, {"determining": "Max( Max( Max( ( ( FirstVNF_CPU + Max( ( ARS - ( RRS - MRS ) ),FirstVNF_RAM ) ) + Min( MRS ,FirstVNF_Mem_Server ) ),ARS ),BR ),Min( ( ARS + Max( ( ( ( ( Const + FirstVNF_RAM_Server ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) + AMS ),( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( Max( MUR,( MUR + ( ( RMSe + DS ) - MLU ) ) ) - ( MUR + ( MUC - MUR ) ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5419994989008701}, {"determining": "( ( ACS / Max( ( Const + ( DDR - ARS ) ),( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( MUR + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ),( MUR - ( MUC - ( MUR + ( Max( Max( MLU,MLU ),MUR ) + MUR ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5032469758629415}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( MRS - Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,RRS ) ) ) + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,( ( ( DDR * ARS ) * Const ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe / RRSe ),( CS * ( Max( RMSe,MUM ) - Min( RMSe ,MUC ) ) ) ) - ( ( CS - RCSe ) + ( ( CS / MUM ) * DS ) ) ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( ( Max( ( PN * Max( FirstVNF_CPU_Server,Min( DDR ,FirstVNF_RAM ) ) ),( BR - MDR ) ) / MRS ) - Min( FirstVNF_RAM_Server ,( DDR - ( ( Max( DDR,Min( ARS ,FirstVNF_CPU_Server ) ) - ARS ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUC - Max( ( Min( DS ,RRSe ) + ( RMSe + DS ) ),DS ) ) * ( RRSe * Max( ( MLU + RRSe ),( MLU - ( Max( MLU,CS ) - ( CS * MLU ) ) ) ) ) ) + ( Min( Min( DS ,( RCSe + Min( ( RCSe / RRSe ) ,RCSe ) ) ) ,Max( ( DS + MUC ),( DS * CS ) ) ) - ( MUR / MUM ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4634590149582614}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "Min( ( ( ( MUM / CS ) / MUM ) / Min( Min( ( Max( ( CS / MLU ),DS ) / RMSe ) ,( RMSe / Max( RMSe,Min( Min( RMSe ,MUR ) ,( MLU * DS ) ) ) ) ) ,DS ) ) ,( ( MUM / Max( RCSe,RRSe ) ) - ( Min( ( CS + CS ) ,DS ) - CS ) ) )", "obj1": 0.6131386861313869, "obj2": 0.27756351919627326}, {"determining": "Max( Max( ( MDR + ( Min( ( AMS / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ,CRS ) - Max( ACS,AMS ) ) ),( Const / Min( ( DDR - DDR ) ,FirstVNF_CPU ) ) ),Max( ( BR + MDR ),Min( FirstVNF_Mem ,( ARS / ACS ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) / ( DS * MUC ) ) * Min( DS ,Min( ( ( ( RCSe - RMSe ) / ( ( Min( MUR ,MUR ) + Min( CS ,MUC ) ) * RMSe ) ) / DS ) ,( ( MUM / ( MUM + RCSe ) ) - Min( ( ( ( MUC + DS ) + MUM ) / DS ) ,CS ) ) ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5714228440415206}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( ARS - ACS ) ,( MDR - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MUM,( MUR * RMSe ) ) + DS ) ) + MLU ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( MUR * ( Max( MUM,MUR ) - MUR ) ) ) ) ) ) )", "obj1": 0.7992700729927007, "obj2": 0.10303738417480836}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( Const / Min( ( FirstVNF_CPU * ACS ) ,Max( PN,DDR ) ) ) / PN ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( CS + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),Min( MLU ,MUM ) ) - ( RMSe - RCSe ) )", "obj1": 0.5109489051094891, "obj2": 0.44342474106859886}, {"determining": "( ( ACS / Max( ( Const + ( DDR - ARS ) ),( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( FirstVNF_Mem_Server / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( MUR + Min( MUM ,RMSe ) ) - MUC ) ),DS ) ) * MLU ),( MUR - ( MUC - ( MUR + ( Max( Max( MLU,MLU ),MUR ) + MUR ) ) ) ) )", "obj1": 0.4635036496350365, "obj2": 0.5087770795142926}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( CRS - ACS ) ,( MDR - ( CRS - FirstVNF_RAM ) ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ,( DS * ( RRSe * MLU ) ) ),( Max( MUM,( MUR * RMSe ) ) + DS ) ) + MLU ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR * ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.1011873184919351}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) * DDR ),DDR ) ) + Max( BR,AMS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( MUM + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + Max( MUC,MLU ) ) ) ),( DS / MUR ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1218599742751733}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.9835766423357665, "obj2": 0.00401445327575955}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + MRS ) * ( Const / Min( ( FirstVNF_CPU * ACS ) ,Max( PN,DDR ) ) ) ) ) ,MDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( Max( ( RCSe - MUR ),MLU ) + ( MUR * ( MUR + ( MUC - MLU ) ) ) ),( CS + DS ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.458029197080292, "obj2": 0.5153060931254188}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - DDR ) ) + Max( RRS,DDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( RRSe + RMSe ) - ( MLU + MUC ) ) - RRSe ) ) * ( ( MUR + RMSe ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.9708029197080292, "obj2": 0.015069338507946993}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) + ( FirstVNF_Mem_Server - Max( ( Min( Max( ( BR + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ),DDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC / RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) + Min( Min( Max( Min( ( MUR * ( MLU - ( RMSe + DS ) ) ) ,DS ),( DS + Max( ( MUM * CS ),DS ) ) ) ,DS ) ,( CS / MUC ) ) )", "obj1": 0.7682481751824818, "obj2": 0.12309948482282693}, {"determining": "( ( ( Max( ARS,Max( FirstVNF_CPU_Server,RRS ) ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( AMS + ( MDR * FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6186131386861314, "obj2": 0.2745264352788271}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Min( ( AMS / BR ) ,CRS ) * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( Max( DS,DS ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6094890510948905, "obj2": 0.28316264590052087}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,ARS ) + Min( ( ( ( ( Max( Max( ARS,FirstVNF_CPU ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - Min( Const ,FirstVNF_Mem_Server ) ) - ( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * Const ) * MDR ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( DS,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RRSe * ( RMSe / CS ) ) * ( DS * DS ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.7883211678832117, "obj2": 0.10528919272131322}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( PN ,( MDR - Min( ARS ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,DS ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.7956204379562044, "obj2": 0.10453084034254803}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ARS + MDR ),BR ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / ( DS * ( RCSe - RRSe ) ) ) ),( ( RRSe * ( ( MLU + MLU ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.9251824817518248, "obj2": 0.03641176718640084}, {"determining": "( Max( CRS,CRS ) / ( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + PN ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( RRSe,( ( RCSe - RMSe ) / ( MUR - ( RCSe * DS ) ) ) ) ) ) * ( Min( ( MUC * MUM ) ,RRSe ) - MUC ) ) + Min( ( MLU / MUM ) ,MLU ) )", "obj1": 0.5565693430656934, "obj2": 0.38043156256116867}, {"determining": "( Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( DDR / DDR ) ) ) * MDR ) ,ARS ) + ( DDR - Min( PN ,PN ) ) )", "choosing": "( Max( ( Max( ( MLU + MLU ),( MUR + DS ) ) / ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR / RCSe ) + MLU ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( MUR * MUC ) ) ) * Min( ( Min( CS ,( ( RMSe * RMSe ) / Max( CS,MUR ) ) ) + ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ) ) ,( ( ( CS + ( RRSe / MLU ) ) + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) )", "obj1": 0.7481751824817519, "obj2": 0.14153128777072477}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),FirstVNF_RAM_Server ) ) ,MDR ) )", "choosing": "( Max( RRSe,DS ) + ( Min( Min( MLU ,MUM ) ,CS ) / Min( RMSe ,DS ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) - MRS ) ) ) ) ) )", "choosing": "( RCSe + ( ( Min( RRSe ,Max( Max( ( RCSe * ( DS * RCSe ) ),RCSe ),DS ) ) * MLU ) * DS ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "( ( ARS - ( ( RRS - FirstVNF_Mem_Server ) / ARS ) ) / ( ( ( ( CRS - FirstVNF_Mem_Server ) + PN ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( Max( ( FirstVNF_RAM_Server * PN ),( BR - MDR ) ) + Min( ( ( Max( CRS,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( RRSe - ( ( ( ( ( RMSe + ( Min( RMSe ,RCSe ) + MLU ) ) - CS ) + MLU ) / ( RRSe * ( RCSe - RMSe ) ) ) + Max( RCSe,MUC ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5032469758629415}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + Min( ( ( Const * BR ) * ( ARS * DDR ) ) ,( Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) / ( ( ( ACS + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( Max( MLU,MLU ),( MUR + ( ( Min( RMSe ,MUC ) - MLU ) + MLU ) ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.46865445814976775}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) - MRS ) ) ) ) ) )", "choosing": "Max( MUR,( MUR + ( MUC - ( CS - Min( MUM ,MUM ) ) ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / Min( ACS ,ACS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( DS - ( ( Max( MLU,MUM ) - ( Max( MUM,MLU ) - MUR ) ) * MUC ) ) * ( MLU * ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( ( Max( RRSe,DS ) + ( MUC + RMSe ) ),DS ) + ( CS + MUC ) ) ) - MUM ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5101344779068717}, {"determining": "Min( ( ( ( MRS - BR ) + Min( Min( RRS ,FirstVNF_RAM_Server ) ,ACS ) ) - ( AMS / Max( ACS,BR ) ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR * RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( ( ( ( MLU * MUM ) + RRSe ) - RRSe ) / ( Min( Min( MLU ,MUR ) ,RCSe ) + MLU ) ) * Max( MUR,MUC ) ) / ( MUM / ( Min( MLU ,( CS / RMSe ) ) / CS ) ) ) ) * ( Max( MUC,RRSe ) / ( RRSe / DS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.9835766423357665, "obj2": 0.00401445327575955}], "22": [{"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "Min( ( ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( DDR / DDR ) ) - ( DDR / DDR ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Min( Max( DS,( ( RRSe - DS ) + MLU ) ) ,( ( ( CS + ( RRSe / MLU ) ) + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( RRS - FirstVNF_Mem_Server ) / ARS ) ) / ( ( ( ( CRS - FirstVNF_Mem_Server ) + PN ) * ( Min( Max( MDR,FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - ( ARS * MRS ) ) ) ) / Const ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + ( ( RRSe + RCSe ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( ( ARS * ( PN / ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ),RRS ) )", "choosing": "Min( ( RRSe - Max( Min( ( ( ( RCSe / CS ) * RMSe ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Max( CS,MUM ) - DS ) ) ),MUR ) ) ,( Min( Min( Max( ( ( DS * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ( CRS * MDR ) / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / ( RRSe / ( MUR + RRSe ) ) ) ),( ( RRSe * ( ( MLU + MLU ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( Max( ( DDR - FirstVNF_RAM ),Const ) - MDR ) ) + ( Min( ( Min( Const ,FirstVNF_RAM ) * FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( Const,MDR ) ) ) * DDR ) )", "choosing": "( Max( MUC,RCSe ) + ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / CS ) ) * ( MUC - MUR ) ) ) ) ) )", "obj1": 0.6824817518248175, "obj2": 0.21806546129561474}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU_Server * BR ) - ( Max( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * RRS ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( BR,MRS ) ) ) )", "choosing": "( ( MUC * ( RMSe / MUM ) ) + ( RRSe * ( MUR + Min( ( RCSe / RRSe ) ,( MLU * ( ( MLU / RRSe ) - ( ( RCSe + CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3216874493304793}, {"determining": "( Min( FirstVNF_RAM_Server ,Const ) + Min( ( ( Const * ( ( ACS * MRS ) * DDR ) ) * AMS ) ,( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / Max( ( ( DS * ( RMSe / Max( RRSe,MUM ) ) ) * Max( Min( Max( MLU,MLU ) ,Min( DS ,RRSe ) ),Max( ( MUR / RCSe ),( MUC - MLU ) ) ) ),( ( ( Max( MLU,MUM ) - ( Max( MUM,RRSe ) - MUR ) ) * MUC ) - DS ) ) ) * DS )", "obj1": 0.7354014598540146, "obj2": 0.1593196127395699}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6624087591240876, "obj2": 0.22737730751984062}, {"determining": "( Max( ( ACS / MDR ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( MUC ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( ( MUR / DS ) * Min( MLU ,RCSe ) ) ,( MUR * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUC,( CS * RRSe ) ) ) ) )", "obj1": 0.541970802919708, "obj2": 0.40461229815058136}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - ACS ) ,( FirstVNF_RAM_Server - MDR ) ) * DDR ) ) * MDR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( RMSe / MUR ) + ( Min( Min( DS ,( MLU + ( ( CS + MLU ) / Min( MLU ,CS ) ) ) ) ,MUR ) - ( RCSe - MUM ) ) )", "obj1": 0.8156934306569343, "obj2": 0.09272457181254001}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) + ( PN - MDR ) ) + Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC / MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( RMSe - CS ) + Min( RRSe ,( DS - RCSe ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8886861313868614, "obj2": 0.06472867939802263}, {"determining": "( Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( DDR / DDR ) ) ) * MDR ) ,ARS ) + ( DDR - Min( PN ,PN ) ) )", "choosing": "( Max( ( Max( ( MLU + MLU ),( MUR + DS ) ) / ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR / RCSe ) + MLU ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( MUR * MUC ) ) ) * Min( ( Min( CS ,( ( RMSe * RMSe ) / Max( CS,MUR ) ) ) + ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ) ) ,( ( ( CS + ( RRSe / MLU ) ) + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) )", "obj1": 0.7481751824817519, "obj2": 0.14153128777072477}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( RRSe,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) ) * ( Min( ( MUC * MUM ) ,RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.551094890510949, "obj2": 0.38892469166414134}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS * ( ( MLU * Max( Max( MLU,CS ),( CS / ( MUM - MLU ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6203491202566025}, {"determining": "( ( ( PN * ( Min( Min( DDR ,BR ) ,AMS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( Min( MUM ,MUM ) + MUR ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,MUC ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( Min( RCSe ,CS ) - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7062043795620438, "obj2": 0.18087560423631874}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - DDR ) ) + Max( RRS,DDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( RRSe + RMSe ) - ( MLU + MUC ) ) - RRSe ) ) * ( ( MUR + RMSe ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5948905109489051, "obj2": 0.2986041134591613}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6386861313868614, "obj2": 0.2530837823016477}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( DDR * Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) - ( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( Min( BR ,FirstVNF_Mem ) ,MDR ) ) ) )", "choosing": "( ( MUR + ( RMSe / ( ( RCSe - ( Min( RMSe ,RRSe ) - MUR ) ) * MLU ) ) ) * ( Min( ( RRSe - ( RRSe - DS ) ) ,CS ) / RMSe ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.718978102189781, "obj2": 0.18018553395661344}, {"determining": "( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - Max( PN,DDR ) ) * ( ( FirstVNF_CPU - PN ) / Min( ( ( ARS * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ARS,Max( CRS,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( RRSe + ( MLU + ( MLU + MLU ) ) ) / Min( MUM ,Max( RRSe,DS ) ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - MUC ) ) ) ) - ( ( ( MUR - MLU ) + ( ( MUM * MUM ) * ( MUC - MUM ) ) ) - RCSe ) )", "obj1": 0.9361313868613139, "obj2": 0.035453385431767584}, {"determining": "Max( Max( BR,Max( FirstVNF_CPU,ARS ) ),Min( ( ARS + ( ( MDR + AMS ) * ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( BR * PN ) + ( BR - MDR ) ) / Max( ( AMS * RRS ),( FirstVNF_CPU_Server + ARS ) ) ) ) ) ) ,( DDR / ACS ) ) )", "choosing": "Max( MUR,( Max( Max( MUR,( MUC - RCSe ) ),MUR ) - ( RMSe - ( ( DS * ( ( MUR - ( CS * RMSe ) ) - RRSe ) ) + ( MUR + Max( MLU,DS ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5499850750928451}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( ( ( Min( BR ,MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( ( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_CPU - MDR ) ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC - Max( ( Max( MUM,DS ) + ( ( MUR + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,( ( ( ( CS + RCSe ) * ( MUC / MLU ) ) * ( MUR + RRSe ) ) / RRSe ) ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.04945592799312513}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM * ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) + Min( ( ( BR * Const ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * DDR ) ) ,( ( ( FirstVNF_CPU_Server / ( PN + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * CRS ) / ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( PN - FirstVNF_Mem ) ) ) ) - Max( ( ( FirstVNF_RAM + MRS ) - FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC / MUR ) ) + ( ( ( ( ( MUM * ( MUC * ( CS + CS ) ) ) - RCSe ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( MUR,Min( RRSe ,MUM ) ) + RMSe ) ) ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "( ( MDR + ACS ) + Min( ( ( ( ( ACS + Const ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( CS + ( ( MLU * MUR ) * ( ( RCSe / ( CS + MUM ) ) * RMSe ) ) )", "obj1": 0.7043795620437956, "obj2": 0.19938069108423428}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( MDR * Const ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( Max( MUR,( ( MUC + ( CS + MUM ) ) - DS ) ) - DS ) - ( CS * MLU ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( RMSe - ( MUR * ( Min( CS ,DS ) - MUR ) ) ) ) ) ) )", "obj1": 0.6277372262773723, "obj2": 0.26272821213750325}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM * ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) + Min( Min( ( ( RRS * FirstVNF_RAM ) * FirstVNF_CPU ) ,( FirstVNF_RAM * Max( CRS,FirstVNF_Mem ) ) ) ,( ( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) * CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS / MUC ) ) + Max( ( Max( ( MLU * Max( MUR,( Min( MUR ,CS ) + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) / ( ( DS + MUC ) / ( CS - MUR ) ) ),Max( Min( RRSe ,( DS + MUC ) ),CS ) ) )", "obj1": 0.9452554744525548, "obj2": 0.027466474130817587}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),MUM ) + Max( ( ( ( Max( MLU,MUM ) - ( Max( MUM,MLU ) - MUR ) ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.8357664233576643, "obj2": 0.08285440135637}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.5711678832116789, "obj2": 0.363920259564715}, {"determining": "( Max( FirstVNF_CPU_Server,Max( Min( ( Max( MDR,RRS ) + CRS ) ,FirstVNF_CPU_Server ),PN ) ) / Min( ( ( AMS / DDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( MUR,( ( CS - Max( MLU,Min( RMSe ,RMSe ) ) ) / DS ) ),MLU ) / Max( MLU,MLU ) ) / DS )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( ( CS - Min( MUM ,MUM ) ) / MUM ) ),( ( RRSe * ( RCSe * ( CS * ( MLU * MUR ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( CS - Min( MUM ,MUM ) ) * Min( ( MLU / DS ) ,DS ) ) / RCSe ) )", "obj1": 0.7208029197080292, "obj2": 0.1652326798900129}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / Max( CRS,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),MUM ) + Max( ( ( RMSe + ( Min( RMSe ,RCSe ) + MLU ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.8302919708029197, "obj2": 0.0858228545990088}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5644064822676754}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / MDR ) ) + ( FirstVNF_Mem_Server * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( MUM * ( RRSe - DS ) ) ,( RMSe * MUR ) ),DS ) + Min( Max( MLU,DS ) ,( CS - Max( ( ( ( CS + MUM ) / RRSe ) + ( ( RRSe + Max( RRSe,MLU ) ) - ( MUC * ( RRSe - CS ) ) ) ),MUR ) ) ) )", "obj1": 0.9708029197080292, "obj2": 0.01506933850794699}, {"determining": "( ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server * Max( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server + Max( BR,MDR ) ) ),FirstVNF_RAM_Server ) ) ) + ( PN - MDR ) ) + ( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( RRSe / RCSe ),( DS - ( MUC - ( MUR + ( RRSe + MUR ) ) ) ) )", "obj1": 0.7645985401459854, "obj2": 0.13027315921498406}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_Mem_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - Max( ( RMSe + ( RCSe - ( Min( CS ,MLU ) * DS ) ) ),RMSe ) )", "obj1": 0.6459854014598541, "obj2": 0.24254326331612383}, {"determining": "( ( ARS - ( ( RRS - FirstVNF_Mem_Server ) / ARS ) ) / ( ( ( ( CRS - FirstVNF_Mem_Server ) + PN ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( ( ( Max( ARS,Max( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ),RRS ) ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( AMS + ( MDR * FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MUC - MUC ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6186131386861314, "obj2": 0.27421818882940696}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_CPU_Server + CRS ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) * MDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe - RMSe ) + ( MLU / Max( CS,Min( MLU ,MLU ) ) ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.572992700729927, "obj2": 0.3621670075779191}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Min( ( Min( Const ,FirstVNF_RAM ) * FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,Const ) ) ) * DDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.7007299270072993, "obj2": 0.2031512273004768}, {"determining": "( Max( CRS,CRS ) / ( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + PN ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( RRSe,( ( RCSe - RMSe ) / ( MUR - ( RCSe * DS ) ) ) ) ) ) * ( Min( ( MUC * MUM ) ,RRSe ) - MUC ) ) + Min( ( MLU / MUM ) ,MLU ) )", "obj1": 0.5565693430656934, "obj2": 0.38043156256116867}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,( MUR * RRSe ) ) ),( DS + ( ( ( ( MLU * RCSe ) - MUR ) - ( Max( RMSe,MUM ) / RMSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5350996257483007}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - ( PN * Const ) ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5720220377926738}, {"determining": "Max( Max( ( FirstVNF_CPU + ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) * ( Const / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "Max( MUR,( MUR + ( MUC - ( CS - Min( ( MUC * MUM ) ,RRSe ) ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.5984675567173662}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6496350364963503, "obj2": 0.23980703169190493}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) + ( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * BR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) - ARS ) )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),( ( Min( MUM ,MUM ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * ( Max( ( RMSe / ( MLU * RRSe ) ),Min( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) ,MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.47992700729927007, "obj2": 0.48844788673355527}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,CRS ) ) ) )", "choosing": "( ( ( DS + ( MUC - Max( ( DS * MUM ),DS ) ) ) / MUC ) + Max( ( RCSe - MUM ),MUR ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( AMS + ( MDR * FirstVNF_CPU ) ) - Max( FirstVNF_CPU,ARS ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6313868613138686, "obj2": 0.25987665200024784}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),MUM ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + ( CS + MUC ) ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.8357664233576643, "obj2": 0.08285440135637}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) + ( BR - MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * AMS ) * MDR ) ) )", "choosing": "( ( ( RRSe * ( ( Min( MUM ,RCSe ) / MUM ) / ( ( RMSe / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) / ( ( ( RMSe + DS ) - CS ) + MLU ) ) + Max( MUC,RCSe ) )", "obj1": 0.8941605839416058, "obj2": 0.06301706868055468}, {"determining": "( ( FirstVNF_Mem_Server - ( DDR - FirstVNF_Mem_Server ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( MDR + FirstVNF_Mem ),( Max( ARS,ACS ) + FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,Min( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) ,( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( ( ARS + BR ) + ( ACS * FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe + RCSe ) / ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ),MUR )", "obj1": 0.8978102189781022, "obj2": 0.054153797525920304}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( MUR * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.531021897810219, "obj2": 0.41906749170164936}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( BR * Const ) * MDR ) ,Max( ( BR + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ACS / Min( Const ,FirstVNF_CPU_Server ) ) ) ),Min( BR ,AMS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,Max( ( ( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) * MUM ),DS ) )", "obj1": 0.5967153284671532, "obj2": 0.2962255978647281}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.5802919708029197, "obj2": 0.339603871550829}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * ( ARS * FirstVNF_CPU ) ) * MDR ) ,( BR - MDR ) ) )", "choosing": "( Max( ( Min( CS ,( RMSe / ( MUM - ( Max( MUM,RMSe ) - Min( RRSe ,CS ) ) ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( ( RCSe / MUM ) * MUR ) ),( Min( DS ,( Max( Min( MLU ,CS ),MUR ) / MUC ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.7828467153284672, "obj2": 0.1094181293134266}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.47717799423494484}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( MRS - Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,RRS ) ) ) + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,( ( ( DDR * ARS ) * Const ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe / RRSe ),( CS * ( Max( RMSe,MUM ) - Min( RMSe ,MUC ) ) ) ) - ( ( CS - RCSe ) + ( ( CS / MUM ) * DS ) ) ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Min( ( Min( Const ,FirstVNF_RAM ) * FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,Const ) ) ) * DDR ) )", "choosing": "Max( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( MUR + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ),( MUR - ( MUC - ( MUR + ( Max( Max( MLU,MLU ),MUR ) + MUR ) ) ) ) )", "obj1": 0.7007299270072993, "obj2": 0.2031512273004768}, {"determining": "( Max( BR,ARS ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,DS ) - ( ( MUM * MUM ) - Max( RRSe,( ( CS - MUM ) / ( CS / MUM ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.9507299270072993, "obj2": 0.02333845842643519}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( ARS * MDR ),Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + ( RCSe - MUM ) ) ) ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42387977111530933}, {"determining": "Min( ( ( DDR / DDR ) - ARS ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server / ( PN / Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( CS / MUC ) ) + Max( ( ( ( MUM + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( ( MUM / CS ) + ( MUC - RCSe ) ) ) ),( ( MUC / RMSe ) + DS ) ) ),Max( Min( RRSe ,( MLU * ( MLU / MUR ) ) ),CS ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6049150782824877}, {"determining": "( ( FirstVNF_CPU * MDR ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( ( ( ARS * MDR ) * BR ) * MDR ) ) )", "choosing": "( ( ( Max( DS,DS ) - ( ( MUM * MUM ) - Max( RRSe,( ( CS - MUM ) / ( Max( CS,CS ) + MUR ) ) ) ) ) + ( ( ( MUC * MUM ) / RRSe ) - ( RMSe - RCSe ) ) ) + ( RRSe * MUM ) )", "obj1": 0.5, "obj2": 0.45857346803012855}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( CRS - ACS ) ,( MDR - ( CRS - FirstVNF_RAM ) ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ,( DS * ( RRSe * MLU ) ) ),( Max( MUM,( MUR * RMSe ) ) + DS ) ) + MLU ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR * ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.1011873184919351}, {"determining": "( ( ( BR - FirstVNF_Mem_Server ) / DDR ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Max( ARS,FirstVNF_CPU ) + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( ( Max( DS,MUM ) / ( ( ( ( RRSe + RRSe ) - RRSe ) / RCSe ) * Max( MUC,MUR ) ) ) * ( ( ( RCSe - CS ) * ( MUR * MUR ) ) + ( MLU / MUR ) ) ) ) )", "obj1": 0.9744525547445255, "obj2": 0.008682347316311814}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( MDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "Max( Max( ( MDR + ( Min( ( AMS / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ,CRS ) - Max( ACS,AMS ) ) ),( Const / Min( ( DDR - DDR ) ,FirstVNF_CPU ) ) ),Max( ( BR + MDR ),Min( FirstVNF_Mem ,( ARS / ACS ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) / ( DS * MUC ) ) * Min( DS ,Min( ( ( ( RCSe - RMSe ) / ( ( Min( MUR ,MUR ) + Min( CS ,MUC ) ) * RMSe ) ) / DS ) ,( ( MUM / ( MUM + RCSe ) ) - Min( ( ( ( MUC + DS ) + MUM ) / DS ) ,CS ) ) ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5714228440415206}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( DS / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.5821167883211679, "obj2": 0.3324540942016273}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( PN,FirstVNF_CPU ) + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( Min( ( RCSe / MUM ) ,( MLU - CS ) ) ,RCSe ) / Max( ( ( ( RCSe - MUM ) + ( CS - MUC ) ) - DS ),Min( RRSe ,( MUM * Min( CS ,RRSe ) ) ) ) ) / RRSe ) + RRSe ) + ( Max( MUR,( MUR + ( ( RMSe + DS ) - MLU ) ) ) - ( MUR + ( MUC - MUR ) ) ) )", "obj1": 0.9543795620437956, "obj2": 0.018699718177301365}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( ARS - ACS ) ,( MDR - Min( FirstVNF_RAM_Server ,MDR ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ,( DS * Max( MUR,MUM ) ) ),( Max( MUM,( MUR * RMSe ) ) + DS ) ) + MLU ) ) * Max( Min( DS ,Max( ( Max( MUM,MUR ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( MUR * ( Max( MUM,MUR ) - MUR ) ) ) ) ) ) )", "obj1": 0.7536496350364964, "obj2": 0.1387057279998848}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) * DDR ),DDR ) ) + Max( BR,AMS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( MUM + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + Max( MUC,MLU ) ) ) ),( DS / MUR ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1218599742751733}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - RRS ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Min( Min( Max( ( ( DS * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) )", "obj1": 0.9835766423357665, "obj2": 0.00401445327575955}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + MRS ) * ( Const / Min( ( FirstVNF_CPU * ACS ) ,Max( PN,DDR ) ) ) ) ) ,MDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( Max( ( RCSe - MUR ),MLU ) + ( MUR * ( MUR + ( MUC - MLU ) ) ) ),( CS + DS ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.458029197080292, "obj2": 0.5153060931254188}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) * ( Const / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "Max( MUR,( MUR + ( MUC - ( CS - CS ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6049150782824877}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) + ( FirstVNF_Mem_Server - Max( ( Min( Max( ( BR + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ),DDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC / RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) + Min( Min( Max( Min( ( MUR * ( MLU - ( RMSe + DS ) ) ) ,DS ),( DS + Max( ( MUM * CS ),DS ) ) ) ,DS ) ,( CS / MUC ) ) )", "obj1": 0.7682481751824818, "obj2": 0.12309948482282693}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + PN ) + Max( RRS,RRS ) ) + ( ( FirstVNF_RAM_Server - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + Min( Max( MLU,MLU ) ,( ( Min( ( MUC / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( RCSe - CS ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.5036496350364964, "obj2": 0.4546551581575982}, {"determining": "( ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) + Min( ( ( Const * ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) * DDR ) ) * MDR ) ,( Max( FirstVNF_Mem,BR ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7554744525547445, "obj2": 0.13455211202489462}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) - MRS ) ) ) ) ) )", "choosing": "( RCSe + ( ( Min( RRSe ,Max( Max( ( RCSe * ( DS * RCSe ) ),RCSe ),DS ) ) * MLU ) * DS ) )", "obj1": 0.44343065693430656, "obj2": 0.5419994989008701}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + AMS ),FirstVNF_RAM_Server ) ) ,MDR ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( CS * DS ) ) / Max( ( Max( ( RMSe + MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),( Max( Max( Min( MUM ,( MUM - DS ) ),RMSe ),MLU ) - RMSe ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) - MRS ) ) ) ) ) )", "choosing": "( RCSe + ( ( Min( RRSe ,Max( Max( ( RCSe * ( DS * RCSe ) ),RCSe ),DS ) ) * MLU ) * DS ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "( Min( ( ( ( Max( ( ( Const / FirstVNF_RAM ) - ( FirstVNF_RAM_Server * PN ) ),( MDR - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) * Const ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) + ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) )", "choosing": "( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * ( MLU + ( RCSe - MUR ) ) ) ,( DS * Max( ( MUC - MUR ),( RMSe - CS ) ) ) ),( Max( MUM,( MUR * RMSe ) ) + DS ) ) + MLU ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( MUR * ( Max( MLU,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.49676503055072607}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( CS / MUM ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.656934306569343, "obj2": 0.23226629131162158}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / MDR ) / PN ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( CS + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( ( CS - MUM ) / ( Max( CS,CS ) + MUR ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5145985401459854, "obj2": 0.43827414482028676}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + Min( ( ( Const * BR ) * ( ARS * DDR ) ) ,( Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) / ( ( ( ACS + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( Max( MLU,MLU ),( MUR + ( ( Min( RMSe ,MUC ) - MLU ) + MLU ) ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.46865445814976775}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) - MRS ) ) ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "Max( Max( Max( ( ( FirstVNF_CPU + Max( ( ARS - ( RRS - MRS ) ),FirstVNF_RAM ) ) + Min( MRS ,FirstVNF_Mem_Server ) ),ARS ),BR ),Min( ( ARS + Max( ( ( ( ( Const + FirstVNF_RAM_Server ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) + AMS ),( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( Max( MUR,( MUR + ( ( RMSe + DS ) - MLU ) ) ) - ( MUR + ( MUC - MUR ) ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5419994989008701}, {"determining": "( ( BR / Max( RRS,FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( FirstVNF_CPU_Server + Min( MDR ,FirstVNF_CPU ) ),BR ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) / ( RRSe * ( ( Max( Max( MLU,RRSe ),RMSe ) - MUR ) + CS ) ) ) + Max( MUR,Max( MLU,( ( MUR / MUM ) - Max( MLU,MUM ) ) ) ) )", "obj1": 0.9215328467153284, "obj2": 0.03860662039659343}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ARS + MDR ),BR ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( CS + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.9251824817518248, "obj2": 0.03641176718640084}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.656934306569343, "obj2": 0.23226629131162158}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Const ) )", "choosing": "Min( ( ( ( RCSe / CS ) * RMSe ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( MUM + Min( CS ,MUM ) ) ,DS ) - DS ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3324540942016273}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / Min( ACS ,ACS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server - MDR ) * ( ( ( ( ARS * MDR ) * BR ) * MDR ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( DS - Min( Min( RMSe ,MUR ) ,( MLU * DS ) ) ) * ( MLU * ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( ( Max( RRSe,DS ) + ( MUC + RMSe ) ),DS ) + ( CS + MUC ) ) ) - MUM ) ) )", "obj1": 0.46897810218978103, "obj2": 0.49872334931088597}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.9835766423357665, "obj2": 0.00401445327575955}, {"determining": "Min( ( ( ( MRS - BR ) + Min( Min( RRS ,FirstVNF_RAM_Server ) ,ACS ) ) - ( AMS / Max( ACS,BR ) ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR * RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( ( ( ( MLU * MUM ) + RRSe ) - RRSe ) / ( Min( Min( MLU ,MUR ) ,RCSe ) + MLU ) ) * Max( MUR,MUC ) ) / ( MUM / ( Min( MLU ,( CS / RMSe ) ) / CS ) ) ) ) * ( Max( MUC,RRSe ) / ( RRSe / DS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( DDR / DDR ) ,( MDR - Min( FirstVNF_RAM_Server ,AMS ) ) ) * DDR ) ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( RMSe / ( MLU * RRSe ) ),Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUC + ( Max( MLU,DS ) + MUR ) ) ) ) ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( DS - ( ( MUR * DS ) * RCSe ) ) ) )", "obj1": 0.7992700729927007, "obj2": 0.10303738417480834}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6021897810218978, "obj2": 0.28637921869452737}], "23": [{"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "Min( ( ( Max( Min( AMS ,AMS ),Max( MDR,( DDR - BR ) ) ) * ( RRS - Min( ( Max( PN,FirstVNF_CPU ) + BR ) ,FirstVNF_RAM_Server ) ) ) - ( DDR / ( MRS + ( Min( ( CRS + RRS ) ,CRS ) + Const ) ) ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) * RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / ( ( MLU + MLU ) + ( RCSe + DS ) ) ),( ( ( Min( RMSe ,( RMSe / CS ) ) / CS ) / MUM ) / ( ( ( ( ( MUM / MLU ) + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * ( CS + Max( ( MUM - Min( MUC ,RMSe ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( DDR / DDR ) ) - ( DDR / DDR ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Min( Max( DS,( ( RRSe - DS ) + MLU ) ) ,( ( ( CS + ( RRSe / MLU ) ) + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU + ARS ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( ( ARS * ( Max( ARS,( FirstVNF_CPU_Server + PN ) ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ),RRS ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( DS * DS ) * ( RRSe * ( MUR * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,( MLU / ( RRSe + MUM ) ) ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ( CRS * MDR ) / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / ( RRSe / ( MUR + RRSe ) ) ) ),( ( RRSe * ( ( MLU + MLU ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "( ( ( Max( ( BR + MDR ),Min( Max( ACS,ARS ) ,FirstVNF_Mem ) ) * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR * FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / Max( CRS,ACS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,Max( MUR,Min( ( RRSe / ( MUM + MLU ) ) ,MUR ) ) ) - Max( MUR,( MUR + ( MUC / RCSe ) ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6788321167883211, "obj2": 0.2139061213013283}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( MUC * MUM ) / RRSe ) - ( RMSe - RCSe ) ) - Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( DS * ( RCSe / MUM ) ) ),( Min( DS ,( Max( Min( MLU ,CS ),MUR ) / MUC ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.025942228914761962}, {"determining": "( ( ( Max( ARS,Max( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ),RRS ) ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( AMS + ( MDR * FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MUC - MUC ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6186131386861314, "obj2": 0.27421818882940696}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Max( AMS,MRS ) * DDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( RRSe + RRSe ) - RRSe ) / ( MLU / ( RRSe * MUM ) ) ) * Max( MUC,( ( MLU - DS ) + ( MLU - MUM ) ) ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.698905109489051, "obj2": 0.2024120377986919}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU_Server * BR ) - ( Max( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * RRS ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( BR,MRS ) ) ) )", "choosing": "( ( MUC * ( RMSe / MUM ) ) + ( RRSe * ( MUR + Min( ( RCSe / RRSe ) ,( MLU * ( ( MLU / RRSe ) - ( ( RCSe + CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3216874493304793}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( RRSe,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) ) * ( Min( ( MUC * MUM ) ,RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.551094890510949, "obj2": 0.38892469166414134}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS * ( ( MLU * Max( Max( MLU,CS ),( CS / ( MUM - MLU ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6203491202566025}, {"determining": "( Max( BR,ARS ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,DS ) - ( ( MUM * MUM ) - Max( RRSe,( ( CS - MUM ) / ( CS / MUM ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.9507299270072993, "obj2": 0.02333845842643519}, {"determining": "( Min( FirstVNF_RAM_Server ,Const ) + Min( ( ( Const * ( ( ACS * MRS ) * DDR ) ) * AMS ) ,( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / Max( ( ( DS * ( RMSe / Max( RRSe,MUM ) ) ) * Max( Min( Max( MLU,MLU ) ,Min( DS ,RRSe ) ),Max( ( MUR / RCSe ),( MUC - MLU ) ) ) ),( ( ( Max( MLU,MUM ) - ( Max( MUM,RRSe ) - MUR ) ) * MUC ) - DS ) ) ) * DS )", "obj1": 0.7354014598540146, "obj2": 0.1593196127395699}, {"determining": "( ( ( Min( BR ,MDR ) / FirstVNF_CPU_Server ) / MRS ) - Min( ( FirstVNF_Mem_Server - ( ACS / Max( ( Const + ( DDR - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_CPU - MDR ) ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC - Max( ( Max( MUM,DS ) + ( ( MUR + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,( ( ( ( CS + RCSe ) * ( MUC / MLU ) ) * ( MUR + RRSe ) ) / RRSe ) ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9197080291970803, "obj2": 0.04945592799312513}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - DDR ) ) + Max( RRS,DDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( RRSe + RMSe ) - ( MLU + MUC ) ) - RRSe ) ) * ( ( MUR + RMSe ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5948905109489051, "obj2": 0.2986041134591613}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) + ( PN - MDR ) ) + Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC / MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( RMSe - CS ) + Min( RRSe ,( DS - RCSe ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8886861313868614, "obj2": 0.06472867939802263}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( DDR * Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) - ( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( Min( BR ,FirstVNF_Mem ) ,MDR ) ) ) )", "choosing": "( ( MUR + ( RMSe / ( ( RCSe - ( Min( RMSe ,RRSe ) - MUR ) ) * MLU ) ) ) * ( Min( ( RRSe - ( RRSe - DS ) ) ,CS ) / RMSe ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( ( MUC - MUR ) + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7463503649635036, "obj2": 0.14917976053283669}, {"determining": "( ( ARS - ( ( RRS - FirstVNF_Mem_Server ) / ARS ) ) / ( ( ( ( CRS - FirstVNF_Mem_Server ) + PN ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( ( BR * ( ( ( RRS - ( AMS * FirstVNF_Mem_Server ) ) - ARS ) / ( ACS + ACS ) ) ) + ( ( ( Min( RRS ,Max( ( FirstVNF_CPU_Server + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( MUR * ( MLU - ( RMSe + DS ) ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,RRSe ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),( MUM - MUR ) ) )", "obj1": 0.6040145985401459, "obj2": 0.2839036488926286}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.47717799423494484}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) + ( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * BR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) ) * MDR ) - ARS ) )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) ),( ( Min( MUM ,MUM ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * ( Max( ( RMSe / ( MLU * RRSe ) ),Min( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) ,MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.47992700729927007, "obj2": 0.48844788673355527}, {"determining": "( ( MDR + ACS ) + Min( ( ( ( ( ACS + Const ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( CS + ( ( MLU * MUR ) * ( ( RCSe / ( CS + MUM ) ) * RMSe ) ) )", "obj1": 0.7043795620437956, "obj2": 0.19938069108423428}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.718978102189781, "obj2": 0.18018553395661344}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Min( Max( DS,( ( RRSe - DS ) + MLU ) ) ,( ( ( CS + ( RRSe / MLU ) ) + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) )", "obj1": 0.8357664233576643, "obj2": 0.08285440135637}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.5711678832116789, "obj2": 0.363920259564715}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "( Max( ( ACS / MDR ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( MUC ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( ( MUR / DS ) * Min( MLU ,RCSe ) ) ,( MUR * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUC,( CS * RRSe ) ) ) ) )", "obj1": 0.541970802919708, "obj2": 0.40461229815058136}, {"determining": "Max( Max( BR,Max( FirstVNF_CPU,ARS ) ),Min( ( ARS + ( ( MDR + AMS ) * ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( BR * PN ) + ( BR - MDR ) ) / Max( ( AMS * RRS ),( FirstVNF_CPU_Server + ARS ) ) ) ) ) ) ,( DDR / ACS ) ) )", "choosing": "Max( MUR,( Max( Max( MUR,( MUC - RCSe ) ),MUR ) - ( RMSe - ( ( DS * ( ( MUR - ( CS * RMSe ) ) - RRSe ) ) + ( MUR + Max( MLU,DS ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5499850750928451}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5644064822676754}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM * ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) + Min( ( ( BR * Const ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * DDR ) ) ,( ( ( FirstVNF_CPU_Server / ( PN + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * CRS ) / ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( PN - FirstVNF_Mem ) ) ) ) - Max( ( ( FirstVNF_RAM + MRS ) - FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC / MUR ) ) + ( ( ( ( ( MUM * ( MUC * ( CS + CS ) ) ) - RCSe ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( MUR,Min( RRSe ,MUM ) ) + RMSe ) ) ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / MDR ) ) + ( FirstVNF_Mem_Server * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( MUM * ( RRSe - DS ) ) ,( RMSe * MUR ) ),DS ) + Min( Max( MLU,DS ) ,( CS - Max( ( ( ( CS + MUM ) / RRSe ) + ( ( RRSe + Max( RRSe,MLU ) ) - ( MUC * ( RRSe - CS ) ) ) ),MUR ) ) ) )", "obj1": 0.9708029197080292, "obj2": 0.01506933850794699}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( RRS - MDR ) ) + ( Min( ( Min( Const ,FirstVNF_RAM ) * FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,Const ) ) ) * DDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - ( DS + MUC ) ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.7645985401459854, "obj2": 0.12928440968614624}, {"determining": "( ( ( BR - FirstVNF_Mem_Server ) / DDR ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Max( ARS,FirstVNF_CPU ) + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( ( Max( DS,MUM ) / ( ( ( ( RRSe + RRSe ) - RRSe ) / RCSe ) * Max( MUC,MUR ) ) ) * ( ( ( RCSe - CS ) * ( MUR * MUR ) ) + ( MLU / MUR ) ) ) ) )", "obj1": 0.9744525547445255, "obj2": 0.008682347316311814}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( ACS - MDR ) * ( Const / Max( FirstVNF_RAM,PN ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Const ) ) ) ) )", "choosing": "( DS / ( ( Max( MUR,( RCSe + Min( ( ( RRSe * MLU ) + MUC ) ,MUR ) ) ) / MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5291970802919708, "obj2": 0.41918746468824103}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_CPU_Server + CRS ) / Max( ARS,FirstVNF_Mem_Server ) ) * BR ) * MDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe - RMSe ) + ( MLU / Max( CS,Min( MLU ,MLU ) ) ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.572992700729927, "obj2": 0.3621670075779191}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,( MUR * RRSe ) ) ),( DS + ( ( ( ( MLU * RCSe ) - MUR ) - ( Max( RMSe,MUM ) / RMSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5350996257483007}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - ( PN * Const ) ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5720220377926738}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Max( MUR,( Max( MUR,( MUR + ( ( RMSe + DS ) - MLU ) ) ) - ( MUR + ( MUC - MUR ) ) ) )", "obj1": 0.6624087591240876, "obj2": 0.22737730751984062}, {"determining": "( ( ( PN * ( Min( Min( DDR ,BR ) ,AMS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( Min( MUM ,MUM ) + MUR ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,MUC ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( Min( RCSe ,CS ) - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7062043795620438, "obj2": 0.18087560423631874}, {"determining": "Max( Max( ( FirstVNF_CPU + ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) * ( Const / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "Max( MUR,( MUR + ( MUC - ( CS - Min( ( MUC * MUM ) ,RRSe ) ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.5984675567173662}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "( Max( ( CRS - ACS ),ARS ) + Min( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( ( ( FirstVNF_CPU_Server * MDR ) * BR ) * MDR ) ) )", "choosing": "( ( ( Max( Max( RCSe,Max( DS,Max( ( CS + RRSe ),CS ) ) ),DS ) - ( Max( MUM,MUM ) - Max( RRSe,( ( CS - MUM ) / ( CS / MUM ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.5109489051094891, "obj2": 0.444798983212313}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Min( ( ARS + Max( ( MDR + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) ),FirstVNF_RAM_Server ) ) ,MDR ) )", "choosing": "( Max( Min( Min( DS ,( MLU + ( ( CS + MLU ) / Min( MLU ,CS ) ) ) ) ,MUR ),( Max( Max( Min( MUM ,( MUM - DS ) ),RMSe ),MLU ) - RMSe ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5050717183366277}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( ( ACS / PN ) - FirstVNF_RAM ) ,Max( Max( AMS,FirstVNF_RAM ),MDR ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( MUR,( RCSe + ( RMSe - RRSe ) ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RMSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR + ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.10023197582939618}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),MUM ) + Max( ( ( ( Max( MLU,MUM ) - ( Max( MUM,MLU ) - MUR ) ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.8357664233576643, "obj2": 0.08285440135637}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) + ( BR - MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * AMS ) * MDR ) ) )", "choosing": "( ( ( RRSe * ( ( Min( MUM ,RCSe ) / MUM ) / ( ( RMSe / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) / ( ( ( RMSe + DS ) - CS ) + MLU ) ) + Max( MUC,RCSe ) )", "obj1": 0.8941605839416058, "obj2": 0.06301706868055468}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "Min( ( ( ( MRS - BR ) + Min( Min( RRS ,FirstVNF_RAM_Server ) ,ACS ) ) - ( AMS / Max( ACS,BR ) ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR * RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( ( ( ( MLU * MUM ) + RRSe ) - RRSe ) / ( Min( Min( MLU ,MUR ) ,RCSe ) + MLU ) ) * Max( MUR,MUC ) ) / ( MUM / ( Min( MLU ,( CS / RMSe ) ) / CS ) ) ) ) * ( Max( MUC,RRSe ) / ( RRSe / DS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6021897810218978, "obj2": 0.28637921869452737}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( BR * Const ) * MDR ) ,Max( ( BR + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ACS / Min( Const ,FirstVNF_CPU_Server ) ) ) ),Min( BR ,AMS ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * DS ) - DS ) ,Max( ( ( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) * MUM ),DS ) )", "obj1": 0.5967153284671532, "obj2": 0.2962255978647281}, {"determining": "Max( MDR,( ( MRS - Max( ( BR + ( ( ACS - FirstVNF_Mem ) / ( ( FirstVNF_Mem_Server - AMS ) - ( ARS - ARS ) ) ) ),CRS ) ) / Max( MRS,AMS ) ) )", "choosing": "( Max( ( ( MUM * CS ) / MLU ),( Max( Max( ( MLU / ( MUM - DS ) ),RMSe ),MLU ) - RMSe ) ) * Max( MLU,Min( RMSe ,RRSe ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5108569633104421}, {"determining": "( ( ( ( ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ARS,FirstVNF_CPU ) + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.0024658412928361445}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * ( ARS * FirstVNF_CPU ) ) * MDR ) ,( BR - MDR ) ) )", "choosing": "( Max( ( Min( CS ,( RMSe / ( MUM - ( Max( MUM,RMSe ) - Min( RRSe ,CS ) ) ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( ( RCSe / MUM ) * MUR ) ),( Min( DS ,( Max( Min( MLU ,CS ),MUR ) / MUC ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.7828467153284672, "obj2": 0.1094181293134266}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6624087591240876, "obj2": 0.22737730751984062}, {"determining": "( Max( FirstVNF_CPU_Server,Max( Min( ( Max( MDR,RRS ) + CRS ) ,FirstVNF_CPU_Server ),PN ) ) / Min( ( ( AMS / DDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( MUR,( ( CS - Max( MLU,Min( RMSe ,RMSe ) ) ) / DS ) ),MLU ) / Max( MLU,MLU ) ) / DS )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( Const / Max( FirstVNF_RAM,PN ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( DS,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) ) * ( Min( ( MUC * MUM ) ,RRSe ) - MUC ) ) + ( MUM - Min( Max( MUR,RRSe ) ,Max( MUR,DS ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.33090403505420496}, {"determining": "( Min( AMS ,CRS ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( DDR,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( ( MUM / MUM ),( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,MUC ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( Max( MUR,MUR ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6423357664233577, "obj2": 0.25116913683933606}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + PN ) + Max( RRS,RRS ) ) + ( ( FirstVNF_RAM_Server - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + Min( Max( MLU,MLU ) ,( ( Min( ( MUC / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( RCSe - CS ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Max( ( PN * Max( FirstVNF_CPU_Server,( ( FirstVNF_Mem - ( FirstVNF_RAM_Server * MRS ) ) / DDR ) ) ),( BR - MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( MUC * RMSe ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.4981751824817518, "obj2": 0.46224204453660006}, {"determining": "( Min( ( FirstVNF_RAM_Server * PN ) ,( MRS - Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,RRS ) ) ) + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,( ( ( DDR * ARS ) * Const ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe / RRSe ),( CS * ( Max( RMSe,MUM ) - Min( RMSe ,MUC ) ) ) ) - ( ( CS - RCSe ) + ( ( CS / MUM ) * DS ) ) ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45239285034275906}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( ( ( ( AMS + ( MDR * FirstVNF_CPU ) ) - Max( FirstVNF_CPU,ARS ) ) * BR ) - ( ( PN + ( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) * ( Const / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "Max( MUR,( MUR + ( ( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) - ( CS - CS ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6049150782824877}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / Max( CRS,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),MUM ) + Max( ( ( RMSe + ( Min( RMSe ,RCSe ) + MLU ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.8302919708029197, "obj2": 0.0858228545990088}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - ACS ) ,( ( Const - FirstVNF_CPU_Server ) / DDR ) ) * DDR ) ) * MDR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( RMSe / MUR ) + ( MUC - ( RCSe - MUM ) ) )", "obj1": 0.8156934306569343, "obj2": 0.09272457181254001}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.7208029197080292, "obj2": 0.1652326798900129}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + Min( ( ( Const * BR ) * ( ARS * DDR ) ) ,( Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) / ( ( ( ACS + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( Max( MLU,MLU ),( MUR + ( ( Min( RMSe ,MUC ) - MLU ) + MLU ) ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.46865445814976775}, {"determining": "( ( ( BR - MDR ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ARS,FirstVNF_CPU ) + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - ( MUM - DS ) ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.00025394562008604024}, {"determining": "( ( ( FirstVNF_Mem * AMS ) / RRS ) + Min( FirstVNF_CPU ,Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( MUC / ( MUC + ( MUC - Max( ( ( MUC * DS ) * ( MUM - RCSe ) ),DS ) ) ) ) + Max( CS,MUM ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,CRS ) ) ) )", "choosing": "( ( ( DS + ( MUC - Max( ( DS * MUM ),DS ) ) ) / MUC ) + Max( ( RCSe - MUM ),MUR ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( ARS * MDR ),Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.5200729927007299, "obj2": 0.42387977111530933}, {"determining": "( Max( ( ACS / MDR ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( MUC ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( ( MUR / DS ) * Min( MLU ,RCSe ) ) ,( MUR * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + DS ) ) + MLU ) ) + Max( CS,Max( MUC,( CS * RRSe ) ) ) ) )", "obj1": 0.541970802919708, "obj2": 0.40461229815058136}, {"determining": "( Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( DDR / DDR ) ) ) * MDR ) ,ARS ) + ( DDR - Min( PN ,PN ) ) )", "choosing": "( Max( ( Max( ( MLU + MLU ),( MUR + DS ) ) / ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR / RCSe ) + MLU ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( MUR * MUC ) ) ) * Min( ( Min( CS ,( ( RMSe * RMSe ) / Max( CS,MUR ) ) ) + ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ) ) ,( ( ( CS + ( RRSe / MLU ) ) + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) )", "obj1": 0.7481751824817519, "obj2": 0.14153128777072477}, {"determining": "( ( FirstVNF_Mem_Server - ( DDR - FirstVNF_Mem_Server ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( MDR + FirstVNF_Mem ),( Max( ARS,ACS ) + FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,Min( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) ,( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( ( ARS + BR ) + ( ACS * FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe + RCSe ) / ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ),MUR )", "obj1": 0.8978102189781022, "obj2": 0.054153797525920304}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( AMS + ( MDR * FirstVNF_CPU ) ) - Max( FirstVNF_CPU,ARS ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6313868613138686, "obj2": 0.25987665200024784}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( FirstVNF_RAM_Server * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.6277372262773723, "obj2": 0.26272821213750325}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( FirstVNF_CPU_Server + Min( MDR ,Const ) ),BR ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( Min( DS ,( DS - CS ) ),( Max( ( RRSe * RRSe ),( CS * ( Max( MUM,RMSe ) - Min( RMSe ,MUC ) ) ) ) - MUR ) ) ) / ( MLU * ( MLU / MUR ) ) )", "obj1": 0.9215328467153284, "obj2": 0.03860662039659343}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / CS ) * RMSe ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( MUM + Min( CS ,MUM ) ) ,DS ) - DS ) ) )", "obj1": 0.635036496350365, "obj2": 0.2548657124307703}, {"determining": "( ( BR / Max( RRS,FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( FirstVNF_CPU_Server + Min( MDR ,FirstVNF_CPU ) ),BR ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) / ( RRSe * ( ( Max( Max( MLU,RRSe ),RMSe ) - MUR ) + CS ) ) ) + Max( MUR,Max( MLU,( ( MUR / MUM ) - Max( MLU,MUM ) ) ) ) )", "obj1": 0.9215328467153284, "obj2": 0.03860662039659343}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) * DDR ),DDR ) ) + Max( BR,AMS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( MUM + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + Max( MUC,MLU ) ) ) ),( DS / MUR ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1218599742751733}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( MUR + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.18072078770036765}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5565693430656934, "obj2": 0.38043156256116867}, {"determining": "Min( ( ( DDR / DDR ) - ARS ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server / ( PN / Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( CS / MUC ) ) + Max( ( ( ( MUM + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( ( MUM / CS ) + ( MUC - RCSe ) ) ) ),( ( MUC / RMSe ) + DS ) ) ),Max( Min( RRSe ,( MLU * ( MLU / MUR ) ) ),CS ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6049150782824877}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( CRS - ACS ) ,( MDR - ( CRS - FirstVNF_RAM ) ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( Max( MUC,DS ) - ( ( MUM * MUM ) - Max( RRSe,( ( CS - MUM ) / ( CS / MUM ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.8120437956204379, "obj2": 0.09515532123539733}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.5036496350364964, "obj2": 0.4546551581575982}, {"determining": "( ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) + Min( ( ( Const * ( ( ( BR - MDR ) / FirstVNF_CPU_Server ) * DDR ) ) * MDR ) ,( Max( FirstVNF_Mem,BR ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - Max( ( RMSe + ( RCSe - ( Min( CS ,MLU ) * DS ) ) ),RMSe ) )", "obj1": 0.7554744525547445, "obj2": 0.13455211202489462}, {"determining": "( Max( Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * AMS ) * MDR ) ),FirstVNF_CPU_Server ) / ( ( Const + FirstVNF_RAM_Server ) / Max( ARS,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( DS + Max( CS,Max( MUM,( CS * ( ( ( RMSe + DS ) - CS ) + MLU ) ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.544926292388746}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) + ( FirstVNF_Mem_Server - Max( ( Min( Max( ( BR + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ),DDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC / RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) + Min( Min( Max( Min( ( MUR * ( MLU - ( RMSe + DS ) ) ) ,DS ),( DS + Max( ( MUM * CS ),DS ) ) ) ,DS ) ,( CS / MUC ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) - MRS ) ) ) ) ) )", "choosing": "( RCSe + ( ( Min( RRSe ,Max( Max( ( RCSe * ( DS * RCSe ) ),RCSe ),DS ) ) * MLU ) * DS ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) + ( FirstVNF_Mem_Server - Max( ( Min( Max( ( BR + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ),DDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC / RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) + Min( Min( Max( Min( ( MUR * ( MLU - ( RMSe + DS ) ) ) ,DS ),( DS + Max( ( MUM * CS ),DS ) ) ) ,DS ) ,( CS / MUC ) ) )", "obj1": 0.7682481751824818, "obj2": 0.12309948482282693}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Const ) )", "choosing": "Min( ( ( ( RCSe / CS ) * RMSe ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( MUM + Min( CS ,MUM ) ) ,DS ) - DS ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3324540942016273}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.5802919708029197, "obj2": 0.339603871550829}, {"determining": "Max( Max( ( FirstVNF_CPU + ( Min( ( AMS / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,Min( ( DS * RCSe ) ,( ( MUM / ( RRSe + RCSe ) ) - Min( Min( ( ( MUC + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "Max( Max( ( MDR + ( Min( ( AMS / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ,CRS ) - Max( ACS,AMS ) ) ),( Const / Min( ( DDR - DDR ) ,FirstVNF_CPU ) ) ),Max( ( BR + MDR ),Min( FirstVNF_Mem ,( ARS / ACS ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) / ( DS * MUC ) ) * Min( DS ,Min( ( ( ( RCSe - RMSe ) / ( ( Min( MUR ,MUR ) + Min( CS ,MUC ) ) * RMSe ) ) / DS ) ,( ( MUM / ( MUM + RCSe ) ) - Min( ( ( ( MUC + DS ) + MUM ) / DS ) ,CS ) ) ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5714228440415206}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( MDR * Const ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( Max( MUR,( ( MUC + ( CS + MUM ) ) - DS ) ) - DS ) - ( CS * MLU ) ),Max( Min( RRSe ,CS ),CS ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( RMSe - ( MUR * ( Min( CS ,DS ) - MUR ) ) ) ) ) ) )", "obj1": 0.6277372262773723, "obj2": 0.26272821213750325}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( Max( BR,DDR ) * DDR ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( ( MUC * Max( RMSe,MLU ) ) * ( RCSe - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS / MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6459854014598541, "obj2": 0.24254326331612383}, {"determining": "( MDR + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - Max( RRSe,DS ) ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.531021897810219, "obj2": 0.41181217114494734}, {"determining": "( Min( ( ( ( Max( ( ( Const / FirstVNF_RAM ) - ( FirstVNF_RAM_Server * PN ) ),( MDR - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) * Const ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) + ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) )", "choosing": "( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * ( MLU + ( RCSe - MUR ) ) ) ,( DS * Max( ( MUC - MUR ),( RMSe - CS ) ) ) ),( Max( MUM,( MUR * RMSe ) ) + DS ) ) + MLU ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( MUR * ( Max( MLU,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.49676503055072607}], "24": [{"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( RRS - MDR ) ) + ( Min( ( Min( Const ,FirstVNF_RAM ) * FirstVNF_RAM_Server ) ,( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) - Max( MDR,Const ) ) ) * DDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - ( DS + MUC ) ) / ( ( MLU + MUM ) / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Min( AMS ,AMS ),Max( MDR,( DDR - BR ) ) ) * ( RRS - Min( ( Max( PN,FirstVNF_CPU ) + BR ) ,FirstVNF_RAM_Server ) ) ) - ( DDR / ( MRS + ( Min( ( CRS + RRS ) ,CRS ) + Const ) ) ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) * RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / ( ( MLU + MLU ) + ( RCSe + DS ) ) ),( ( ( Min( RMSe ,( RMSe / CS ) ) / CS ) / MUM ) / ( ( ( ( ( MUM / MLU ) + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * ( CS + Max( ( MUM - Min( MUC ,RMSe ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_CPU + ( Min( RRS ,AMS ) - ( ( ( RRS + ACS ) * RRS ) - MRS ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( Max( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ),( Max( ARS,FirstVNF_CPU ) + BR ) ),RRS ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( MUM * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( DS * DS ) * Min( RRSe ,Min( RCSe ,DS ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ( CRS * MDR ) / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / ( RRSe / ( MUR + RRSe ) ) ) ),( ( RRSe * ( ( MLU + MLU ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( MUC * MUM ) / RRSe ) - ( RMSe - RCSe ) ) - Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( DS * ( RCSe / MUM ) ) ),( Min( DS ,Max( RRSe,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.03573283063193602}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),MUR ) - ( RMSe - RCSe ) )", "obj1": 0.5638686131386861, "obj2": 0.36174324700209615}, {"determining": "( ( ( Max( ( BR + MDR ),Min( Max( ACS,ARS ) ,FirstVNF_Mem ) ) * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR * FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / Max( CRS,ACS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,Max( MUR,Min( ( RRSe / ( MUM + MLU ) ) ,MUR ) ) ) - Max( MUR,( MUR + ( MUC / RCSe ) ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6788321167883211, "obj2": 0.2139061213013283}, {"determining": "( Max( ( ( Const - FirstVNF_CPU_Server ) / DDR ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( DS / ( ( Max( MUR,( DS / ( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.541970802919708, "obj2": 0.4010348550240277}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU_Server * BR ) - ( Max( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * RRS ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( BR,MRS ) ) ) )", "choosing": "( ( MUC * ( RMSe / MUM ) ) + ( RRSe * ( MUR + Min( ( RCSe / RRSe ) ,( MLU * ( ( MLU / RRSe ) - ( ( RCSe + CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3216874493304793}, {"determining": "( ( ARS - ( ( RRS - FirstVNF_Mem_Server ) / ARS ) ) / ( ( ( ( CRS - FirstVNF_Mem_Server ) + PN ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( ( MUC - MUR ) + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7463503649635036, "obj2": 0.14917976053283669}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( CS * DS ) ) / Max( ( Max( ( RMSe + MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),( Max( Max( Min( MUM ,( MUM - DS ) ),RMSe ),MLU ) - RMSe ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.025942228914761962}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS * ( ( MLU * Max( Max( MLU,CS ),( CS / ( MUM - MLU ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6203491202566025}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( RRSe,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) ) * ( Min( ( MUC * MUM ) ,RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.551094890510949, "obj2": 0.38892469166414134}, {"determining": "( Max( BR,ARS ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,DS ) - ( ( MUM * MUM ) - Max( RRSe,( ( CS - MUM ) / ( CS / MUM ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.9507299270072993, "obj2": 0.02333845842643519}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.7281021897810219, "obj2": 0.15738449458954948}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM * ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) + Min( ( ( BR * Const ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * DDR ) ) ,( ( ( FirstVNF_CPU_Server / ( PN + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * CRS ) / ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( PN - FirstVNF_Mem ) ) ) ) - Max( ( ( FirstVNF_RAM + MRS ) - FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC / MUR ) ) + ( ( ( ( ( MUM * ( MUC * ( CS + CS ) ) ) - RCSe ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( MUR,Min( RRSe ,MUM ) ) + RMSe ) ) ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - DDR ) ) + Max( RRS,DDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( RRSe + RMSe ) - ( MLU + MUC ) ) - RRSe ) ) * ( ( MUR + RMSe ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5948905109489051, "obj2": 0.2986041134591613}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) + ( PN - MDR ) ) + Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC / MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( RMSe - CS ) + Min( RRSe ,( DS - RCSe ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8886861313868614, "obj2": 0.06472867939802263}, {"determining": "( ( ( Max( ( BR + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / Min( Const ,( DDR / PN ) ) ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - Max( ( CS - DS ),( MUR + ( MUC / RCSe ) ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6879562043795621, "obj2": 0.20498341143602525}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - ACS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( Max( FirstVNF_RAM,DDR ) - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),Min( ( RRSe * ( RCSe - ( Min( DS ,RRSe ) + ( ( RCSe * DS ) / ( MUM / RMSe ) ) ) ) ) ,( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6514598540145985, "obj2": 0.2365507426907431}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( ( ACS / PN ) - FirstVNF_RAM ) ,Max( Max( AMS,FirstVNF_RAM ),MDR ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( MUR,( RCSe + ( RMSe - RRSe ) ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RMSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR + ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.10023197582939618}, {"determining": "Max( MDR,( ( MRS - Max( ( BR + ( ( ACS - FirstVNF_Mem ) / ( ( FirstVNF_Mem_Server - AMS ) - ( ARS - ARS ) ) ) ),CRS ) ) / Max( MRS,AMS ) ) )", "choosing": "( Max( ( ( MUM * CS ) / MLU ),( Max( Max( ( MLU / ( MUM - DS ) ),RMSe ),MLU ) - RMSe ) ) * Max( MLU,Min( RMSe ,RRSe ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5108569633104421}, {"determining": "( ( ( Max( ( BR + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - Max( MUR,( MUR + ( MUC / RCSe ) ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.666058394160584, "obj2": 0.22729189346015552}, {"determining": "Min( ( ( ( MRS - BR ) + Min( Min( RRS ,FirstVNF_RAM_Server ) ,ACS ) ) - ( AMS / Max( ACS,BR ) ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR * RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( ( ( ( MLU * MUM ) + RRSe ) - RRSe ) / ( Min( Min( MLU ,MUR ) ,RCSe ) + MLU ) ) * Max( MUR,MUC ) ) / ( MUM / ( Min( MLU ,( CS / RMSe ) ) / CS ) ) ) ) * ( Max( MUC,RRSe ) / ( RRSe / DS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "( ( ( Max( ( BR + Max( MRS,( FirstVNF_CPU + FirstVNF_RAM ) ) ),( Max( ARS,ACS ) - FirstVNF_Mem ) ) * ( ( MDR * ( ( CRS / Const ) * DDR ) ) + FirstVNF_RAM ) ) + ( PN - MDR ) ) + ( BR + ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( ( Min( ( RRSe + CS ) ,Min( MLU ,( CS + ( RCSe / ( ( MLU - DS ) - RRSe ) ) ) ) ) + DS ) ,( RRSe - Max( ( MUR / Min( DS ,MLU ) ),( ( MUC / RCSe ) + MUR ) ) ) )", "obj1": 0.9726277372262774, "obj2": 0.00553812699627579}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( ( MDR + ACS ) + Min( ( ( ( ( ACS + Const ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( CS + ( ( MLU * MUR ) * ( ( RCSe / ( CS + MUM ) ) * RMSe ) ) )", "obj1": 0.7043795620437956, "obj2": 0.19938069108423428}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.718978102189781, "obj2": 0.18018553395661344}, {"determining": "( Max( CRS,Min( FirstVNF_RAM_Server ,PN ) ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS - Max( ( ACS * FirstVNF_RAM_Server ),( FirstVNF_CPU - ARS ) ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( Min( ( Min( RMSe ,CS ) * DS ) ,RRSe ) / ( RRSe + ( CS - ( ( DS * MUM ) * DS ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.46715328467153283, "obj2": 0.500445511213008}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + ( ( ( RMSe + DS ) - MLU ) + MLU ) ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.8357664233576643, "obj2": 0.08285440135637}, {"determining": "( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) + Min( ( Const * BR ) ,( Max( ( MDR / Max( CRS,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( MUM ,( Max( ( CS + MUC ),( RRSe + CS ) ) * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - CS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),MUM ) + Max( ( ( RMSe + ( Min( RMSe ,RCSe ) + MLU ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.7883211678832117, "obj2": 0.10541579851774442}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( DDR * Min( Const ,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) - ( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( Min( BR ,FirstVNF_Mem ) ,MDR ) ) ) )", "choosing": "( ( MUR + ( RMSe / ( ( RCSe - ( Min( RMSe ,RRSe ) - MUR ) ) * MLU ) ) ) * ( Min( ( RRSe - ( RRSe - DS ) ) ,CS ) / RMSe ) )", "obj1": 0.5620437956204379, "obj2": 0.37735765670497357}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / MDR ) ) + ( FirstVNF_Mem_Server * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( MUM * ( RRSe - DS ) ) ,( RMSe * MUR ) ),DS ) + Min( Max( MLU,DS ) ,( CS - Max( ( ( ( CS + MUM ) / RRSe ) + ( ( RRSe + Max( RRSe,MLU ) ) - ( MUC * ( RRSe - CS ) ) ) ),MUR ) ) ) )", "obj1": 0.9708029197080292, "obj2": 0.01506933850794699}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + PN ) + Max( RRS,RRS ) ) + ( ( FirstVNF_RAM_Server - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + Min( Max( MLU,MLU ) ,( ( Min( ( MUC / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( RCSe - CS ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.5036496350364964, "obj2": 0.4546551581575982}, {"determining": "( ( BR * ( ( ( RRS - ( AMS * FirstVNF_Mem_Server ) ) - ARS ) / ( ACS + ACS ) ) ) + ( ( ( Min( RRS ,Max( ( FirstVNF_CPU_Server + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( MUR * ( MLU - ( RMSe + DS ) ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,RRSe ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),( MUM - MUR ) ) )", "obj1": 0.6040145985401459, "obj2": 0.2839036488926286}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / Max( CRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( FirstVNF_CPU ,DDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) ),MUM ) + Max( ( ( RMSe + ( ( RMSe * RCSe ) + MLU ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( ( MUM + ( Min( RRSe ,MLU ) + MLU ) ) ,CS ),CS ) ) )", "obj1": 0.8302919708029197, "obj2": 0.08562406479410652}, {"determining": "( ( ( Max( ARS,Max( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,MRS ) ),RRS ) ) * ( BR * BR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( AMS + ( MDR * FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) * BR ) * MDR ) ,( Max( FirstVNF_Mem,BR ) / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MUC - MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ),( ( ( Min( RCSe ,MUC ) - MUC ) * RRSe ) + ( MUC + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6167883211678832, "obj2": 0.276131453478933}, {"determining": "Max( Max( BR,Max( FirstVNF_CPU,ARS ) ),Min( ( ARS + ( ( MDR + AMS ) * ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( BR * PN ) + ( BR - MDR ) ) / Max( ( AMS * RRS ),( FirstVNF_CPU_Server + ARS ) ) ) ) ) ) ,( DDR / ACS ) ) )", "choosing": "Max( MUR,( Max( Max( MUR,( MUC - RCSe ) ),MUR ) - ( RMSe - ( ( DS * ( ( MUR - ( CS * RMSe ) ) - RRSe ) ) + ( MUR + Max( MLU,DS ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5499850750928451}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5644064822676754}, {"determining": "( Max( ( PN * Max( FirstVNF_CPU_Server,( ( FirstVNF_Mem - ( FirstVNF_RAM_Server * MRS ) ) / DDR ) ) ),( BR - MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( MUC * RMSe ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.4981751824817518, "obj2": 0.46224204453660006}, {"determining": "( ( ( FirstVNF_Mem * AMS ) / RRS ) + Min( FirstVNF_CPU ,Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( MUC / ( MUC + ( MUC - Max( ( ( MUC * DS ) * ( MUM - RCSe ) ),DS ) ) ) ) + Max( CS,MUM ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( ACS - MDR ) * ( Const / Max( FirstVNF_RAM,PN ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Const ) ) ) ) )", "choosing": "( DS / ( ( Max( MUR,( RCSe + Min( ( ( RRSe * MLU ) + MUC ) ,MUR ) ) ) / MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5291970802919708, "obj2": 0.41918746468824103}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5565693430656934, "obj2": 0.38043156256116867}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Max( AMS,MRS ) * DDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( RRSe + RRSe ) - RRSe ) / ( MLU / ( RRSe * MUM ) ) ) * Max( MUC,( ( MLU - DS ) + ( MLU - MUM ) ) ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.698905109489051, "obj2": 0.2024120377986919}, {"determining": "( Max( FirstVNF_CPU_Server,Max( Min( ( Max( MDR,RRS ) + CRS ) ,FirstVNF_CPU_Server ),PN ) ) / Min( ( ( AMS / DDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( MUR,( ( CS - Max( MLU,Min( RMSe ,RMSe ) ) ) / DS ) ),MLU ) / Max( MLU,MLU ) ) / DS )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( ( ( PN * ( Min( Min( DDR ,BR ) ,AMS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( Min( MUM ,MUM ) + MUR ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,MUC ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( Min( RCSe ,CS ) - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7062043795620438, "obj2": 0.18087560423631874}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,( MUR * RRSe ) ) ),( DS + ( ( ( ( MLU * RCSe ) - MUR ) - ( Max( RMSe,MUM ) / RMSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5350996257483007}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "Min( ( ( DDR / DDR ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - AMS ) ) ,Max( RRS,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( ( Min( ( ( CS / MUM ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ) + ( Max( MLU,MUM ) + ( CS + RMSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4867163965466204}, {"determining": "( ( ( Max( ARS,Max( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,Const ) ),RRS ) ) * PN ) + Max( Const,MDR ) ) + Min( ( ( ( ( AMS + ( MDR * FirstVNF_CPU ) ) - ( ( DDR + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) * BR ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),( ( RRSe * ( RCSe - MUC ) ) + ( ( RRSe - MUM ) / MUC ) ) ) - Min( RMSe ,RCSe ) )", "obj1": 0.6240875912408759, "obj2": 0.268681773292956}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Min( Max( DS,( ( RRSe - DS ) + MLU ) ) ,( ( ( CS + ( RRSe / MLU ) ) + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) )", "obj1": 0.8357664233576643, "obj2": 0.08285440135637}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) + ( BR - MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * AMS ) * MDR ) ) )", "choosing": "( ( ( RRSe * ( ( Min( MUM ,RCSe ) / MUM ) / ( ( RMSe / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) / ( ( ( RMSe + DS ) - CS ) + MLU ) ) + Max( MUC,RCSe ) )", "obj1": 0.8941605839416058, "obj2": 0.06301706868055468}, {"determining": "( Min( ( ( Const * ( Min( Max( PN,BR ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( DDR / DDR ) ) ) * MDR ) ,ARS ) + ( DDR - Min( PN ,PN ) ) )", "choosing": "( Max( ( Max( ( MLU + MLU ),( MUR + DS ) ) / ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR / RCSe ) + MLU ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( MUR * MUC ) ) ) * Min( ( Min( CS ,( ( RMSe * RMSe ) / Max( CS,MUR ) ) ) + ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ) ) ,( ( ( CS + ( RRSe / MLU ) ) + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) )", "obj1": 0.7481751824817519, "obj2": 0.14153128777072477}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.5802919708029197, "obj2": 0.339603871550829}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( Const / Max( FirstVNF_RAM,PN ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( DS,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) ) * ( Min( ( MUC * MUM ) ,RRSe ) - MUC ) ) + ( MUM - Min( Max( MUR,RRSe ) ,Max( MUR,DS ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.33090403505420496}, {"determining": "( Max( ( CRS - ACS ),ARS ) + Min( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( ( ( FirstVNF_CPU_Server * MDR ) * BR ) * MDR ) ) )", "choosing": "( ( ( Max( Max( RCSe,Max( DS,Max( ( CS + RRSe ),CS ) ) ),DS ) - ( Max( MUM,MUM ) - Max( RRSe,( ( CS - MUM ) / ( CS / MUM ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.5109489051094891, "obj2": 0.4447652062053273}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - ( PN * Const ) ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( Max( FirstVNF_CPU_Server,( AMS / CRS ) ) ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) ,MDR ) )", "choosing": "( Min( Min( DS ,MUR ) ,( MUC / CS ) ) + ( ( MLU - Min( ( ( MUC + DS ) - Max( Min( ( RMSe * MUM ) ,DS ),MUC ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5720220377926738}, {"determining": "( ( ( ( ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ARS,FirstVNF_CPU ) + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.0024658412928361445}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( ARS * ( PN / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ),Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.5072992700729927, "obj2": 0.44597827290872516}, {"determining": "Max( Max( Max( FirstVNF_CPU,DDR ),( FirstVNF_RAM_Server - ( PN * Const ) ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( DS,DS ) + MUR ) ) ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5411631231438128}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( ( ( Max( MUC,DS ) - ( ( MUM * MUM ) - Max( RRSe,( ( CS - MUM ) / ( CS / MUM ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.48175182481751827, "obj2": 0.47717799423494484}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + PN ) + Max( RRS,RRS ) ) + ( ( FirstVNF_RAM_Server - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + Min( Max( MLU,MLU ) ,( ( Min( ( MUC / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( RCSe - CS ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6049150782824877}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7208029197080292, "obj2": 0.1652326798900129}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Const ) )", "choosing": "Min( ( ( ( RCSe / CS ) * RMSe ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( MUM + Min( CS ,MUM ) ) ,DS ) - DS ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3324540942016273}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - ACS ) ,( ( Const - FirstVNF_CPU_Server ) / DDR ) ) * DDR ) ) * MDR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.8156934306569343, "obj2": 0.09272457181254001}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),Max( CS,Max( MUC,( CS * RRSe ) ) ) )", "obj1": 0.4908759124087591, "obj2": 0.46617862598617016}, {"determining": "( ( ( BR - MDR ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ARS,FirstVNF_CPU ) + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - ( MUM - DS ) ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.00025394562008604024}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( ARS * MDR ),Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( MUM,DS ) + ( ( MUR + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,( ( ( ( CS + RCSe ) * ( MUC / MLU ) ) * ( MUR + RRSe ) ) / RRSe ) ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42387977111530933}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) + ( FirstVNF_Mem_Server - Max( ( Min( Max( ( BR + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ),DDR ) ) )", "choosing": "( Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Max( Min( DS ,( RCSe - MLU ) ),( Min( RMSe ,( MUC - MUC ) ) - Max( ( RRSe * CS ),Max( MLU,MUC ) ) ) ) ),MUM ) + Max( ( ( RMSe + ( Min( RMSe ,RCSe ) + MLU ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "Max( Max( ( FirstVNF_CPU + ( Min( ( AMS / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( Max( ( FirstVNF_CPU + ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) * ( Const / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,Min( ( DS * RCSe ) ,( ( MUM / ( RRSe + RCSe ) ) - Min( Min( ( ( CS + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6316118147494595}, {"determining": "( ( FirstVNF_Mem_Server - ( DDR - FirstVNF_Mem_Server ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( MDR + FirstVNF_Mem ),( Max( ARS,ACS ) + FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,Min( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) ,( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( ( ARS + BR ) + ( ACS * FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe + RCSe ) / ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ),MUR )", "obj1": 0.8978102189781022, "obj2": 0.054153797525920304}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.9525547445255474, "obj2": 0.019387940129535226}, {"determining": "( ( ( ( ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ARS,FirstVNF_CPU ) + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.0024658412928361445}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( RCSe + Min( Min( DS ,DS ) ,MUM ) )", "obj1": 0.7536496350364964, "obj2": 0.13745809395011016}, {"determining": "( Max( Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * AMS ) * MDR ) ),FirstVNF_CPU_Server ) / ( ( Const + FirstVNF_RAM_Server ) / Max( ARS,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( DS + Max( CS,Max( MUM,( CS * ( ( ( RMSe + DS ) - CS ) + MLU ) ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.544926292388746}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) * DDR ),DDR ) ) + Max( BR,AMS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( MUM + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + Max( MUC,MLU ) ) ) ),( DS / MUR ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1218599742751733}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_Mem_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( MUR,( MUR + ( MUC - ( Min( MUM ,( Max( Max( DS,RCSe ),( RRSe + DS ) ) * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - CS ) ) ) )", "obj1": 0.6459854014598541, "obj2": 0.24254326331612383}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( MUC * MUM ) / RRSe ) - ( RMSe - RCSe ) ) - Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( DS * ( RCSe / MUM ) ) ),( Min( DS ,( Max( Min( MLU ,CS ),MUR ) / MUC ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.025942228914761962}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( ( ( ( AMS + ( MDR * FirstVNF_CPU ) ) - Max( FirstVNF_CPU,ARS ) ) * BR ) - ( ( PN + ( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) * ( Const / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "Max( MUR,( MUR + ( ( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) - ( CS - CS ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6049150782824877}, {"determining": "Min( ( ( DDR / DDR ) - ARS ) ,( FirstVNF_CPU_Server * ( ( FirstVNF_RAM_Server - ( PN * Const ) ) / ( PN / Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( CS / ( Max( ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) ) + Max( ( ( ( MUM + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( ( MUM / CS ) + ( MUC - RCSe ) ) ) ),( ( MUC / RMSe ) + DS ) ) ),Max( Min( RRSe ,( MLU * ( MLU / MUR ) ) ),CS ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5970348723534109}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6624087591240876, "obj2": 0.22737730751984062}, {"determining": "Max( Max( ( MDR + ( Min( ( AMS / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ,CRS ) - Max( ACS,AMS ) ) ),( Const / Min( ( DDR - DDR ) ,FirstVNF_CPU ) ) ),Max( ( BR + MDR ),Min( FirstVNF_Mem ,( ARS / ACS ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) / ( DS * MUC ) ) * Min( DS ,Min( ( ( ( RCSe - RMSe ) / ( ( Min( MUR ,MUR ) + Min( CS ,MUC ) ) * RMSe ) ) / DS ) ,( ( MUM / ( MUM + RCSe ) ) - Min( ( ( ( MUC + DS ) + MUM ) / DS ) ,CS ) ) ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5714228440415206}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( CRS - ACS ) ,( MDR - ( CRS - FirstVNF_RAM ) ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ,( DS * ( RRSe * MLU ) ) ),( Max( MUM,( MUR * RMSe ) ) + DS ) ) + MLU ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR * ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8102189781021898, "obj2": 0.09699640187645224}, {"determining": "( Min( AMS ,CRS ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( DDR,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( ( MUM / MUM ),( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,MUC ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( Max( MUR,MUR ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6423357664233577, "obj2": 0.25116913683933606}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + CRS ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( RRSe + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.18072078770036765}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Max( MUR,( Max( MUR,( MUR + ( ( RMSe + DS ) - MLU ) ) ) - ( MUR + ( MUC - MUR ) ) ) )", "obj1": 0.6624087591240876, "obj2": 0.22737730751984062}, {"determining": "Max( Max( ( FirstVNF_CPU + ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) * ( Const / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "Max( MUR,( MUR + ( MUC - ( CS - Min( ( MUC * MUM ) ,RRSe ) ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.5984675567173662}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.4744525547445255, "obj2": 0.49101248993646307}, {"determining": "( Min( ( ( ( Max( ( ( Const / FirstVNF_RAM ) - ( FirstVNF_RAM_Server * PN ) ),( MDR - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) * Const ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) + ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) )", "choosing": "( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * ( MLU + ( RCSe - MUR ) ) ) ,( DS * Max( ( MUC - MUR ),( RMSe - CS ) ) ) ),( Max( MUM,( MUR * RMSe ) ) + DS ) ) + MLU ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( MUR * ( Max( MLU,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.49676503055072607}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( Min( Max( ( CRS - ( CRS + DDR ) ),ACS ) ,FirstVNF_Mem ) * BR ) * MDR ) )", "choosing": "( ( ( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,RRSe ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + ( RMSe + RMSe ) )", "obj1": 0.5985401459854015, "obj2": 0.290206722002795}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,Max( PN,FirstVNF_CPU ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + ( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Min( Max( DS,( ( RRSe - DS ) + MLU ) ) ,( ( RCSe + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) ) )", "obj1": 0.6386861313868614, "obj2": 0.2541844250236977}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - ACS ) ,( ( Const - FirstVNF_CPU_Server ) / DDR ) ) * DDR ) ) * MDR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( RMSe / MUR ) + ( MUC - ( RCSe - MUM ) ) )", "obj1": 0.8156934306569343, "obj2": 0.09272457181254001}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( ARS + Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Min( FirstVNF_Mem_Server ,DDR ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( RRSe * CS ) + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),( Min( RRSe ,CS ) - MLU ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * ( ARS * FirstVNF_CPU ) ) * MDR ) ,( BR - MDR ) ) )", "choosing": "( Max( ( Min( CS ,( RMSe / ( MUM - ( Max( MUM,RMSe ) - Min( RRSe ,CS ) ) ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( ( RCSe / MUM ) * MUR ) ),( Min( DS ,( Max( Min( MLU ,CS ),MUR ) / MUC ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.7828467153284672, "obj2": 0.1094181293134266}], "25": [{"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( Max( CRS,Min( FirstVNF_RAM_Server ,PN ) ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS - Max( ( ACS * FirstVNF_RAM_Server ),( FirstVNF_CPU - ARS ) ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( Min( ( Min( RMSe ,CS ) * DS ) ,RRSe ) / ( RRSe + ( CS - ( ( DS * MUM ) * DS ) ) ) ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( RRS - MDR ) ) + ( Min( ( Min( Const ,FirstVNF_RAM ) * FirstVNF_RAM_Server ) ,( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) - Max( MDR,Const ) ) ) * DDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - ( DS + MUC ) ) / ( ( MLU + MUM ) / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM_Server * PN ) ) ) * ( Max( ARS,FirstVNF_CPU ) + BR ) ),RRS ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( DS * DS ) * Min( RRSe ,( RCSe - DS ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ( CRS * MDR ) / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / ( RRSe / ( MUR + RRSe ) ) ) ),( ( RRSe * ( ( MLU + MLU ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "( ( ( ( PN + RRS ) * DDR ) + ( MDR - PN ) ) + Min( ( ( ( ( MDR + ( ( AMS + CRS ) - ( AMS * FirstVNF_Mem ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( MDR / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( Max( AMS,MDR ) * ( RRS * MRS ) ) ) )", "choosing": "Max( ( Min( ( MUM * MLU ) ,MUC ) - Max( MLU,MUM ) ),( Min( ( ( ( ( MLU + MUM ) / MLU ) + MUR ) / ( MLU * RRSe ) ) ,( ( ( ( MUC / MUM ) + RRSe ) * ( ( ( RMSe / MUC ) + MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( RCSe - RRSe ) ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.025942228914761955}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server - DDR ) ) + Min( ( Const * ( ( Max( FirstVNF_Mem_Server,MDR ) + ( MDR - Const ) ) - MDR ) ) ,( Max( ( MDR / ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Const ) ) ),( Const + FirstVNF_Mem_Server ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( AMS / Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ( AMS * FirstVNF_CPU ) ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + Max( ( ( ( DS * CS ) / ( MLU + MUC ) ) / Max( ( MLU / MLU ),( MUR + ( ( ( MUM + MUM ) - MUM ) + Min( MLU ,MUR ) ) ) ) ),Max( Min( RCSe ,CS ),CS ) ) )", "obj1": 0.8357664233576643, "obj2": 0.08285440135636998}, {"determining": "( ( ( Max( ( BR + MDR ),Min( Max( ACS,ARS ) ,FirstVNF_Mem ) ) * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR * FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / Max( CRS,ACS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,Max( MUR,Min( ( RRSe / ( MUM + MLU ) ) ,MUR ) ) ) - Max( MUR,( MUR + ( MUC / RCSe ) ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6788321167883211, "obj2": 0.2139061213013283}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( MUR,( CS - Min( ( MUC * MUM ) ,RRSe ) ) )", "obj1": 0.6240875912408759, "obj2": 0.2678279505462367}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) * DDR ),DDR ) ) + Max( BR,AMS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( MUM + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + Max( MUC,MLU ) ) ) ),( DS / MUR ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1218599742751733}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU_Server * BR ) - ( Max( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * RRS ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( BR,MRS ) ) ) )", "choosing": "( ( MUC * ( RMSe / MUM ) ) + ( RRSe * ( MUR + Min( ( RCSe / RRSe ) ,( MLU * ( ( MLU / RRSe ) - ( ( RCSe + CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3216874493304793}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - DDR ) ) + Max( RRS,DDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( RRSe + RMSe ) - ( MLU + MUC ) ) - RRSe ) ) * ( ( MUR + RMSe ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5948905109489051, "obj2": 0.2986041134591613}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Max( AMS,MRS ) * DDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( RRSe + RRSe ) - RRSe ) / ( MLU / ( RRSe * MUM ) ) ) * Max( MUC,( ( MLU - DS ) + ( MLU - MUM ) ) ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.698905109489051, "obj2": 0.2024120377986919}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( FirstVNF_RAM_Server * BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - Max( ACS,Const ) ) ) ,FirstVNF_Mem_Server ) ) + MDR ) ,( FirstVNF_RAM_Server * ( Min( AMS ,( BR / BR ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Min( RRSe ,( MLU * CS ) ) + CS ),MUM ) - ( RMSe - RCSe ) )", "obj1": 0.5547445255474452, "obj2": 0.37326412554429594}, {"determining": "( Max( BR,ARS ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,DS ) - ( ( MUM * MUM ) - Max( RRSe,( ( CS - MUM ) / ( CS / MUM ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.9507299270072993, "obj2": 0.02333845842643519}, {"determining": "( ( ( Max( ARS,Max( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,MRS ) ),RRS ) ) * ( BR * BR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( AMS + ( MDR * FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) * BR ) * MDR ) ,( Max( FirstVNF_Mem,BR ) / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MUC - MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ),( ( ( Min( RCSe ,MUC ) - MUC ) * RRSe ) + ( MUC + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6167883211678832, "obj2": 0.276131453478933}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( ( MUC - MUR ) + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7463503649635036, "obj2": 0.14669239022844588}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM * ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) + Min( ( ( BR * Const ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * DDR ) ) ,( ( ( FirstVNF_CPU_Server / ( PN + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * CRS ) / ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( PN - FirstVNF_Mem ) ) ) ) - Max( ( ( FirstVNF_RAM + MRS ) - FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC / MUR ) ) + ( ( ( ( ( MUM * ( MUC * ( CS + CS ) ) ) - RCSe ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( MUR,Min( RRSe ,MUM ) ) + RMSe ) ) ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) + ( PN - MDR ) ) + Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC / MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( RMSe - CS ) + Min( RRSe ,( DS - RCSe ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8886861313868614, "obj2": 0.06472867939802263}, {"determining": "( ( ( Max( ( BR + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / Min( Const ,( DDR / PN ) ) ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - Max( ( CS - DS ),( MUR + ( MUC / RCSe ) ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6879562043795621, "obj2": 0.20498341143602525}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + Min( ( ( Const * ( Min( ( CRS - ACS ) ,( ( Const - FirstVNF_CPU_Server ) / DDR ) ) * DDR ) ) * MDR ) ,( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( RMSe / MUR ) + ( MUC - ( RCSe - MUM ) ) )", "obj1": 0.8156934306569343, "obj2": 0.09272457181254}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - ACS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( Max( FirstVNF_RAM,DDR ) - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),Min( ( RRSe * ( RCSe - ( Min( DS ,RRSe ) + ( ( RCSe * DS ) / ( MUM / RMSe ) ) ) ) ) ,( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6514598540145985, "obj2": 0.2365507426907431}, {"determining": "( Max( FirstVNF_CPU_Server,Max( Min( ( Max( MDR,RRS ) + CRS ) ,FirstVNF_CPU_Server ),PN ) ) / Min( ( ( AMS / DDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( MUR,( ( CS - Max( MLU,Min( RMSe ,RMSe ) ) ) / DS ) ),MLU ) / Max( MLU,MLU ) ) / DS )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / Max( CRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( FirstVNF_CPU ,DDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) ),MUM ) + Max( ( ( RMSe + ( ( RMSe * RCSe ) + MLU ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( ( MUM + ( Min( RRSe ,MLU ) + MLU ) ) ,CS ),CS ) ) )", "obj1": 0.8302919708029197, "obj2": 0.08562406479410652}, {"determining": "( ( ( Max( ( BR + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - Max( MUR,( MUR + ( MUC / RCSe ) ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.666058394160584, "obj2": 0.22729189346015552}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( ( ACS / PN ) - FirstVNF_RAM ) ,Max( Max( AMS,FirstVNF_RAM ),MDR ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( MUR,( RCSe + ( RMSe - RRSe ) ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RMSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR + ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.10023197582939618}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM_Server * MDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / Const ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( DS,( Max( MLU,MUM ) + Min( ( MLU / RMSe ) ,RRSe ) ) ) + MUR ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.718978102189781, "obj2": 0.16601351381606408}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7299270072992701, "obj2": 0.15619746953498767}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( Min( ( MUC * MUM ) ,RRSe ) / ( MUC - MUR ) ),MUR ) )", "obj1": 0.5638686131386861, "obj2": 0.3614274399635032}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ARS,FirstVNF_CPU ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( ( MUC * MUM ) ,RRSe ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.1857258927844819}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.5711678832116789, "obj2": 0.3611926832464399}, {"determining": "Max( Max( BR,Max( FirstVNF_CPU,ARS ) ),Min( ( ARS + ( ( MDR + AMS ) * ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( BR * PN ) + ( BR - MDR ) ) / Max( ( AMS * RRS ),( FirstVNF_CPU_Server + ARS ) ) ) ) ) ) ,( DDR / ACS ) ) )", "choosing": "Max( MUR,( Max( Max( MUR,( MUC - RCSe ) ),MUR ) - ( RMSe - ( ( DS * ( ( MUR - ( CS * RMSe ) ) - RRSe ) ) + ( MUR + Max( MLU,DS ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5499850750928451}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + CRS ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( RRSe + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.18072078770036765}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( MUC * MUM ) / RRSe ) - ( RMSe - RCSe ) ) - Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( DS * ( RCSe / MUM ) ) ),( Min( DS ,Max( RRSe,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.03573283063193602}, {"determining": "( ( ARS - ( ( RRS - FirstVNF_Mem_Server ) / ARS ) ) / ( ( ( ( CRS - FirstVNF_Mem_Server ) + PN ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( FirstVNF_CPU - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.3441392546613468}, {"determining": "Max( Max( ( FirstVNF_CPU + ( Min( ( AMS / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ,CRS ) - Max( ACS,AMS ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( ( BR + MDR ),( FirstVNF_RAM - FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( RRSe ,CS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,Min( ( ( ( RCSe - RMSe ) / ( ( Min( MLU ,MUR ) + Min( CS ,RCSe ) ) * RMSe ) ) / DS ) ,( ( MUM / ( RRSe + RCSe ) ) - Min( CS ,( ( ( MUC + DS ) + MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.4760826206553251}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( ACS - MDR ) * ( Const / Max( FirstVNF_RAM,PN ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Const ) ) ) ) )", "choosing": "( DS / ( ( Max( MUR,( RCSe + Min( ( ( RRSe * MLU ) + MUC ) ,MUR ) ) ) / MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5291970802919708, "obj2": 0.41918746468824103}, {"determining": "Max( ( ( FirstVNF_CPU + ARS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( ( ( ( RRS - FirstVNF_Mem ) - ( AMS + ( MDR * FirstVNF_CPU ) ) ) * BR ) - ( FirstVNF_CPU + ARS ) ) )", "choosing": "Max( MUR,( MUR + ( Max( Min( ( DS * DS ) ,( RRSe * ( MLU * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) - ( ( CS * DS ) - CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6120380861396301}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * DDR ),DDR ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ,RRS ) * ( MRS * BR ) ) ) ,( Max( ( ( MDR / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ),FirstVNF_CPU ) / ( ( Min( PN ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + DDR ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( RRSe + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.9671532846715328, "obj2": 0.010485397663473593}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + PN ) + Max( RRS,RRS ) ) + ( ( FirstVNF_RAM_Server - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + Min( Max( MLU,MLU ) ,( ( Min( ( MUC / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( RCSe - CS ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.5036496350364964, "obj2": 0.4546551581575982}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS * ( ( MLU * Max( Max( MLU,CS ),( CS / ( MUM - MLU ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6203491202566025}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5644064822676754}, {"determining": "Max( MDR,( ( MRS - Max( ( BR + ( ( ACS - FirstVNF_Mem ) / ( ( FirstVNF_Mem_Server - AMS ) - ( ARS - ARS ) ) ) ),CRS ) ) / Max( MRS,AMS ) ) )", "choosing": "( Max( ( ( MUM * CS ) / MLU ),( Max( Max( ( MLU / ( MUM - DS ) ),RMSe ),MLU ) - RMSe ) ) * Max( MLU,Min( RMSe ,RRSe ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5108569633104421}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,Max( PN,FirstVNF_CPU ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + ( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Min( Max( DS,( ( RRSe - DS ) + MLU ) ) ,( ( RCSe + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) ) )", "obj1": 0.6386861313868614, "obj2": 0.2541844250236977}, {"determining": "( ( ( FirstVNF_Mem * AMS ) / RRS ) + Min( FirstVNF_CPU ,Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( MUC / ( MUC + ( MUC - Max( ( ( MUC * DS ) * ( MUM - RCSe ) ),DS ) ) ) ) + Max( CS,MUM ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "( ( ( Max( ( BR + Max( MRS,( FirstVNF_CPU + FirstVNF_RAM ) ) ),( Max( ARS,ACS ) - FirstVNF_Mem ) ) * ( ( MDR * ( ( CRS / Const ) * DDR ) ) + FirstVNF_RAM ) ) + ( PN - MDR ) ) + ( BR + ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( ( Min( ( RRSe + CS ) ,Min( MLU ,( CS + ( RCSe / ( ( MLU - DS ) - RRSe ) ) ) ) ) + DS ) ,( RRSe - Max( ( MUR / Min( DS ,MLU ) ),( ( MUC / RCSe ) + MUR ) ) ) )", "obj1": 0.9726277372262774, "obj2": 0.00553812699627579}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - ( PN * Const ) ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( Max( FirstVNF_CPU_Server,( AMS / CRS ) ) ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) ,MDR ) )", "choosing": "( Min( Min( DS ,MUR ) ,( MUC / CS ) ) + ( ( MLU - Min( ( ( MUC + DS ) - Max( Min( ( RMSe * MUM ) ,DS ),MUC ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5720220377926738}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,( MUR * RRSe ) ) ),( DS + ( ( ( ( MLU * RCSe ) - MUR ) - ( Max( RMSe,MUM ) / RMSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5350996257483007}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "( Max( ( ( Const - FirstVNF_CPU_Server ) / DDR ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( DS / ( ( Max( MUR,( DS / ( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.541970802919708, "obj2": 0.4010348550240277}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( MUC * MUM ) / RRSe ) - ( RMSe - RCSe ) ) - Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( DS * ( RCSe / MUM ) ) ),( Min( DS ,Max( RRSe,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.03573283063193602}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,Max( PN,FirstVNF_CPU ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + ( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Min( Max( DS,( ( RRSe - DS ) + MLU ) ) ,( ( RCSe + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) ) )", "obj1": 0.6058394160583942, "obj2": 0.2829410533549623}, {"determining": "Min( ( ( ( MRS - BR ) + Min( Min( RRS ,FirstVNF_RAM_Server ) ,ACS ) ) - ( AMS / Max( ACS,BR ) ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR * RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( ( ( ( MLU * MUM ) + RRSe ) - RRSe ) / ( Min( Min( MLU ,MUR ) ,RCSe ) + MLU ) ) * Max( MUR,MUC ) ) / ( MUM / ( Min( MLU ,( CS / RMSe ) ) / CS ) ) ) ) * ( Max( MUC,RRSe ) / ( RRSe / DS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "( ( ( ( Min( ( PN - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ,( MRS + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const * Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( MUC + Min( ( ( RCSe - Min( DS ,MLU ) ) + Min( ( Min( MUR ,( Min( MLU ,MUC ) + MLU ) ) + RRSe ) ,DS ) ) ,MUM ) )", "obj1": 0.7883211678832117, "obj2": 0.10443023359017685}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7536496350364964, "obj2": 0.13745809395011016}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( Max( ( Max( PN,MRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) + Min( MRS ,FirstVNF_Mem_Server ) ),Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.5127737226277372, "obj2": 0.4372072235554446}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) + ( BR - MDR ) ) + Min( ( FirstVNF_RAM_Server / MDR ) ,( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * AMS ) * MDR ) ) )", "choosing": "( ( ( RRSe * ( ( Min( MUM ,RCSe ) / MUM ) / ( ( RMSe / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) / ( ( ( RMSe + DS ) - CS ) + MLU ) ) + Max( MUC,RCSe ) )", "obj1": 0.8941605839416058, "obj2": 0.06301706868055468}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Const ) )", "choosing": "Min( ( ( ( RCSe / CS ) * RMSe ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - ( Min( ( MUM + Min( CS ,MUM ) ) ,DS ) - DS ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3324540942016273}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "( Max( ( ( Const - FirstVNF_CPU_Server ) / DDR ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,Min( ( ( MLU / MUM ) - DS ) ,( ( MUM / ( RRSe + RCSe ) ) - Min( Min( ( ( MUC + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.541970802919708, "obj2": 0.4010348550240277}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / ( ( ( Max( MDR,FirstVNF_RAM ) / Min( Max( MDR,FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ACS + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_Mem ,AMS ) / ARS ) ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,Max( RRSe,( ( RRSe * ( MUC * MUR ) ) / ( MUR - ( RCSe * DS ) ) ) ) ) - Max( DS,DS ) ) * ( MUC / DS ) ) + ( MLU + CS ) )", "obj1": 0.5529197080291971, "obj2": 0.3861697373598376}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,( ( CRS / MRS ) - FirstVNF_Mem ) ) / ARS ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( ( ( RRSe - RCSe ) / RRSe ) * Min( DS ,( MUM - RMSe ) ) ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5766423357664233, "obj2": 0.3388745557420178}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( RCSe + Min( Min( DS ,DS ) ,MUM ) )", "obj1": 0.7536496350364964, "obj2": 0.13745809395011016}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * ( AMS - FirstVNF_CPU ) ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU_Server - ACS ) * RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),Max( ( RRSe * ( RCSe - ( ( MLU * RRSe ) + ( RMSe + DS ) ) ) ),( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6405109489051095, "obj2": 0.24526185014142568}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( ( MRS * BR ) - ( ( PN + ( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) * ( Const / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "Max( Max( Min( MUM ,( MUM - DS ) ),MLU ),( MUR + ( ( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) - ( CS - CS ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6014009938198519}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * ( ARS * FirstVNF_CPU ) ) * MDR ) ,( BR - MDR ) ) )", "choosing": "( Max( ( Min( CS ,( RMSe / ( MUM - ( Max( MUM,RMSe ) - Min( RRSe ,CS ) ) ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( ( RCSe / MUM ) * MUR ) ),( Min( DS ,( Max( Min( MLU ,CS ),MUR ) / MUC ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.7828467153284672, "obj2": 0.1094181293134266}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - ( ( MUC - MUR ) / ( RRSe / ( MUR / CS ) ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.9835766423357665, "obj2": 0.00401445327575955}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( Const / Max( FirstVNF_RAM,PN ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( DS,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) ) * ( Min( ( MUC * MUM ) ,RRSe ) - MUC ) ) + ( MUM - Min( Max( MUR,RRSe ) ,Max( MUR,DS ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.33090403505420496}, {"determining": "( Min( ( ( ( Max( ( ( Const / FirstVNF_RAM ) - ( FirstVNF_RAM_Server * PN ) ),( MDR - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * DDR ) * Const ) * MDR ) ,( FirstVNF_RAM_Server / MDR ) ) + ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) )", "choosing": "( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * ( MLU + ( RCSe - MUR ) ) ) ,( DS * Max( ( MUC - MUR ),( RMSe - CS ) ) ) ),( Max( MUM,( MUR * RMSe ) ) + DS ) ) + MLU ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS - ( MUR * ( Max( MLU,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.49676503055072607}, {"determining": "( Max( CRS,( ( ( ( MRS + FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,ARS ) ) * BR ) * PN ) ) / ( ( ( ARS + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( FirstVNF_CPU_Server / Min( ARS ,MDR ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( Min( ( MUC - Max( DS,RMSe ) ) ,( RRSe + ( CS - Max( DS,( MUR * MUM ) ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.46715328467153283, "obj2": 0.500445511213008}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),Max( CS,Max( MUC,( CS * RRSe ) ) ) )", "obj1": 0.4908759124087591, "obj2": 0.46617862598617016}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( ARS * MDR ),Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( ( MUM / MUM ),( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,MUC ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( Max( MUR,MUR ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.5200729927007299, "obj2": 0.42387977111530933}, {"determining": "Max( Max( ( FirstVNF_CPU + ( Min( ( AMS / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( Max( ( FirstVNF_CPU + ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) * ( Const / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,Min( ( DS * RCSe ) ,( ( MUM / ( RRSe + RCSe ) ) - Min( Min( ( ( CS + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6316118147494595}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,Max( PN,FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,Max( MUR,Min( ( RRSe / ( MUM + MLU ) ) ,MUR ) ) ) - Max( MUR,( MUR + ( MUC / RCSe ) ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6386861313868614, "obj2": 0.2541844250236977}, {"determining": "( ( FirstVNF_Mem_Server - ( DDR - FirstVNF_Mem_Server ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( MDR + FirstVNF_Mem ),( Max( ARS,ACS ) + FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,Min( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) ,( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( ( ARS + BR ) + ( ACS * FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe + RCSe ) / ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ),MUR )", "obj1": 0.8978102189781022, "obj2": 0.054153797525920304}, {"determining": "Max( Max( ( MDR + ( Min( ( AMS / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ,CRS ) - Max( ACS,AMS ) ) ),( Const / Min( ( DDR - DDR ) ,FirstVNF_CPU ) ) ),Max( ( BR + MDR ),Min( FirstVNF_Mem ,( ARS / ACS ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) / ( DS * MUC ) ) * Min( DS ,Min( ( ( ( RCSe - RMSe ) / ( ( Min( MUR ,MUR ) + Min( CS ,MUC ) ) * RMSe ) ) / DS ) ,( ( MUM / ( MUM + RCSe ) ) - Min( ( ( ( MUC + DS ) + MUM ) / DS ) ,CS ) ) ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5714228440415206}, {"determining": "( Max( ( PN * Max( FirstVNF_CPU_Server,( ( FirstVNF_Mem - ( FirstVNF_RAM_Server * MRS ) ) / DDR ) ) ),( BR - MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( MUC * RMSe ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.4981751824817518, "obj2": 0.46224204453660006}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.9525547445255474, "obj2": 0.019387940129535226}, {"determining": "( Max( Min( ( FirstVNF_RAM_Server / MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / ( ( Const + FirstVNF_RAM_Server ) / Max( ARS,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( DS + Max( CS,Max( MUM,( CS * ( MLU + MLU ) ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5412188412771036}, {"determining": "Min( ( ( DDR / DDR ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - AMS ) ) ,Max( RRS,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( ( Min( ( ( CS / MUM ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ) + ( Max( MLU,MUM ) + ( CS + RMSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4867163965466204}, {"determining": "Min( ( ( DDR / DDR ) - ARS ) ,( FirstVNF_CPU_Server * ( ( FirstVNF_RAM_Server - ( PN * Const ) ) / ( PN / Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( CS / ( Max( ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) ) + Max( ( ( ( MUM + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( ( MUM / CS ) + ( MUC - RCSe ) ) ) ),( ( MUC / RMSe ) + DS ) ) ),Max( Min( RRSe ,( MLU * ( MLU / MUR ) ) ),CS ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5970348723534109}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - AMS ) ) * ( Min( ( MDR / FirstVNF_Mem ) ,Max( PN,( BR * FirstVNF_RAM ) ) ) / Const ) ) - ( Min( ( AMS * PN ) ,AMS ) / ARS ) ) )", "choosing": "( ( MUC / Max( ( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MUM,MLU ) + Min( MLU ,RRSe ) ) ) + ( MUR / ( CS * RCSe ) ) ),( RMSe / ( MLU * ( RRSe + RMSe ) ) ) ) ) + Max( ( RRSe / ( MUC - MUR ) ),MUR ) )", "obj1": 0.551094890510949, "obj2": 0.38892469166414134}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ARS,FirstVNF_CPU ) + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + Max( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + ( ( ( RMSe + DS ) - MLU ) + DS ) ) ) ),Max( Min( RRSe ,CS ),CS ) ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / ( ( Const + FirstVNF_RAM_Server ) / ( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "Max( ( MUM - Min( RRSe ,MUC ) ),( DS + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.7244525547445255, "obj2": 0.16075124450738199}, {"determining": "Max( Max( Max( FirstVNF_CPU,DDR ),( FirstVNF_RAM_Server - ( PN * Const ) ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( DS,DS ) + MUR ) ) ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5411631231438128}, {"determining": "( Max( CRS,( FirstVNF_RAM_Server * PN ) ) / ( ( ( PN + ( FirstVNF_RAM_Server + AMS ) ) * ( Const / Min( ( MRS / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( ( BR - MDR ) / ARS ) ) )", "choosing": "( ( MUC / ( RRSe + ( ( Max( DS,RCSe ) / ( MUC * MUR ) ) - ( ( DS * MUM ) * DS ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( ARS + Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Min( FirstVNF_Mem_Server ,DDR ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( RRSe * CS ) + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),( Min( RRSe ,CS ) - MLU ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM - MDR ) ) + ( ( ( Max( FirstVNF_CPU,ARS ) - MDR ) * ( Const / Min( ( MDR / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + Min( BR ,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( FirstVNF_Mem_Server / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( Min( Max( MLU,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( ( MUM + Max( CS,Min( ( RMSe * MUR ) ,CS ) ) ) - MLU ) ) )", "obj1": 0.6624087591240876, "obj2": 0.22737730751984062}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( RRSe,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) ) * ( Min( ( MUC * MUM ) ,RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.551094890510949, "obj2": 0.38892469166414134}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( ARS * ( PN / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ),Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( ( RMSe + MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),( Max( Max( Min( MUM ,( MUM - DS ) ),MLU ),MLU ) - RMSe ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44597827290872516}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( Min( Max( ( BR + MDR ),Max( DDR,FirstVNF_Mem_Server ) ) ,RRS ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( MUR * ( MLU / ( RMSe + DS ) ) ),( ( ( RMSe * RCSe ) * Min( Min( ( RRSe / MUM ) ,RCSe ) ,Min( ( MUR + MLU ) ,Min( MLU ,MUM ) ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.5967153284671532, "obj2": 0.2924875212679926}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( Min( Max( ( CRS - ( CRS + DDR ) ),ACS ) ,FirstVNF_Mem ) * BR ) * MDR ) )", "choosing": "( ( ( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,RRSe ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + ( RMSe + RMSe ) )", "obj1": 0.6021897810218978, "obj2": 0.28766934944842226}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - ( ( Max( MLU,( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) + MUC ) - MUR ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6624087591240876, "obj2": 0.22737730751984062}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_Mem_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( MUR,( MUR + ( MUC - ( Min( MUM ,( Max( Max( DS,RCSe ),( RRSe + DS ) ) * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - CS ) ) ) )", "obj1": 0.6459854014598541, "obj2": 0.24254326331612383}, {"determining": "( Max( CRS,Min( FirstVNF_RAM_Server ,PN ) ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS - Max( ( ACS * FirstVNF_RAM_Server ),( FirstVNF_CPU - ARS ) ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( Min( ( Min( RMSe ,CS ) * DS ) ,RRSe ) / ( RRSe + ( CS - ( ( DS * MUM ) * DS ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.46715328467153283, "obj2": 0.500445511213008}, {"determining": "( Max( ( CRS - ACS ),ARS ) + Min( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( ( ( FirstVNF_CPU_Server * MDR ) * BR ) * MDR ) ) )", "choosing": "( ( ( Max( Max( RCSe,Max( DS,Max( ( CS + RRSe ),CS ) ) ),DS ) - ( Max( MUM,MUM ) - Max( RRSe,( ( CS - MUM ) / ( CS / MUM ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.5109489051094891, "obj2": 0.4447652062053273}], "26": [{"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( BR * FirstVNF_RAM ) ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( MUC / Max( ( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + ( MUR / ( CS * RCSe ) ) ),( Min( ( Min( CS ,RMSe ) * ( MLU + ( RCSe - MUR ) ) ) ,( DS * Max( ( MUC - MUR ),( RMSe - CS ) ) ) ) / ( MLU * RRSe ) ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,Min( FirstVNF_RAM_Server ,PN ) ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( MRS - Max( ( ACS * FirstVNF_RAM_Server ),( FirstVNF_CPU - ARS ) ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( Min( ( Min( RMSe ,CS ) * DS ) ,RRSe ) / ( RRSe + ( CS - ( ( DS * MUM ) * DS ) ) ) ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( ( FirstVNF_Mem_Server - ( DDR - FirstVNF_Mem_Server ) ) * PN ) ) ) * ( Max( ARS,FirstVNF_CPU ) + BR ) ),RRS ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( DS * DS ) * Max( ( MLU * MUM ),DS ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( ( ( Max( PN,FirstVNF_RAM_Server ) + ( Min( ( ACS / ARS ) ,AMS ) * ( DDR * AMS ) ) ) - ( ACS / Max( ( ( CRS * MDR ) + ( MRS * PN ) ),( ARS * FirstVNF_CPU ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MUC + MLU ) ) / RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / ( RRSe / ( MUR + RRSe ) ) ) ),( ( RRSe * ( ( MLU + MLU ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - ( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( ( MLU * CS ) + DS ) ) ) ) + ( CS + MUC ) ) ) )", "obj1": 0.8686131386861314, "obj2": 0.060562071980838586}, {"determining": "( ( ( ( PN + RRS ) * DDR ) + ( MDR - PN ) ) + Min( ( ( ( ( MDR + ( ( AMS + CRS ) - ( AMS * FirstVNF_Mem ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( MDR / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( Max( AMS,MDR ) * ( RRS * MRS ) ) ) )", "choosing": "Max( ( Min( ( MUM * MLU ) ,MUC ) - Max( MLU,MUM ) ),( Min( ( ( ( ( MLU + MUM ) / MLU ) + MUR ) / ( MLU * RRSe ) ) ,( ( ( ( MUC / MUM ) + RRSe ) * ( ( ( RMSe / MUC ) + MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( RCSe - RRSe ) ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.025942228914761955}, {"determining": "( ( FirstVNF_Mem_Server - ( DDR - FirstVNF_Mem_Server ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( MDR + FirstVNF_Mem ),( Max( ARS,ACS ) + FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,Min( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) ,( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( ( ARS + BR ) + ( ACS * FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe + RCSe ) / ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ),MUR )", "obj1": 0.8978102189781022, "obj2": 0.054153797525920304}, {"determining": "( ( ( PN * ( Min( ( ( PN + FirstVNF_Mem ) - FirstVNF_Mem_Server ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) - Min( MRS ,BR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.8485401459854015, "obj2": 0.07714439141098375}, {"determining": "( ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) / ( ( FirstVNF_RAM_Server - AMS ) * ( RRS + Max( AMS,( ( ( FirstVNF_RAM - ( Const / FirstVNF_CPU_Server ) ) / CRS ) + MDR ) ) ) ) )", "choosing": "( Max( ( ( Min( ( MUM * RMSe ) ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( DS ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5364963503649635, "obj2": 0.3982640830289412}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU_Server * BR ) - ( Max( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * RRS ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( BR,MRS ) ) ) )", "choosing": "( ( MUC * ( RMSe / MUM ) ) + ( RRSe * ( MUR + Min( ( RCSe / RRSe ) ,( MLU * ( ( MLU / RRSe ) - ( ( RCSe + CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3216874493304793}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Max( AMS,MRS ) * DDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( RRSe + RRSe ) - RRSe ) / ( MLU / ( RRSe * MUM ) ) ) * Max( MUC,( ( MLU - DS ) + ( MLU - MUM ) ) ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.698905109489051, "obj2": 0.2024120377986919}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - DDR ) ) + Max( RRS,DDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( RRSe + RMSe ) - ( MLU + MUC ) ) - RRSe ) ) * ( ( MUR + RMSe ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5948905109489051, "obj2": 0.2986041134591613}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) * DDR ),DDR ) ) + Max( BR,AMS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( MUM + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + Max( MUC,MLU ) ) ) ),( DS / MUR ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1218599742751733}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM * ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) + Min( ( ( BR * Const ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * DDR ) ) ,( ( ( FirstVNF_CPU_Server / ( PN + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * CRS ) / ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( PN - FirstVNF_Mem ) ) ) ) - Max( ( ( FirstVNF_RAM + MRS ) - FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC / MUR ) ) + ( ( ( ( ( MUM * ( MUC * ( CS + CS ) ) ) - RCSe ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( MUR,Min( RRSe ,MUM ) ) + RMSe ) ) ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "( Max( BR,ARS ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,DS ) - ( ( MUM * MUM ) - Max( RRSe,( ( CS - MUM ) / ( CS / MUM ) ) ) ) ) * ( ( ( MUC * MUM ) / RRSe ) - MUC ) ) + ( RMSe + MUM ) )", "obj1": 0.9507299270072993, "obj2": 0.02333845842643519}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( ( MUC - MUR ) + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7463503649635036, "obj2": 0.14669239022844588}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + CRS ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( RRSe + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.18072078770036765}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7572992700729927, "obj2": 0.13340695822127754}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7299270072992701, "obj2": 0.15619746953498767}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6861313868613139, "obj2": 0.20368974535661005}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - ACS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( Max( FirstVNF_RAM,DDR ) - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),Min( ( RRSe * ( RCSe - ( Min( DS ,RRSe ) + ( ( RCSe * DS ) / ( MUM / RMSe ) ) ) ) ) ,( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6514598540145985, "obj2": 0.2365507426907431}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM_Server * MDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / Const ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( DS,( Max( MLU,MUM ) + Min( ( MLU / RMSe ) ,RRSe ) ) ) + MUR ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.718978102189781, "obj2": 0.16601351381606408}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( ( ACS / PN ) - FirstVNF_RAM ) ,Max( Max( AMS,FirstVNF_RAM ),MDR ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( MUR,( RCSe + ( RMSe - RRSe ) ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RMSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR + ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.10023197582939618}, {"determining": "Min( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( ( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.6295620437956204, "obj2": 0.261409909140949}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.5711678832116789, "obj2": 0.3611926832464399}, {"determining": "( ( ( Max( ( BR + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / Min( Const ,( DDR / PN ) ) ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - Max( ( CS - DS ),( MUR + ( MUC / RCSe ) ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.677007299270073, "obj2": 0.21446901123575118}, {"determining": "Max( Max( BR,Max( FirstVNF_CPU,ARS ) ),Min( ( ARS + ( ( MDR + AMS ) * ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( BR * PN ) + ( BR - MDR ) ) / Max( ( AMS * RRS ),( FirstVNF_CPU_Server + ARS ) ) ) ) ) ) ,( DDR / ACS ) ) )", "choosing": "Max( MUR,( Max( Max( MUR,( MUC - RCSe ) ),MUR ) - ( RMSe - ( ( DS * ( ( MUR - ( CS * RMSe ) ) - RRSe ) ) + ( MUR + Max( MLU,DS ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5499850750928451}, {"determining": "( Max( FirstVNF_CPU_Server,Max( Min( ( Max( MDR,RRS ) + CRS ) ,FirstVNF_CPU_Server ),PN ) ) / Min( ( ( AMS / DDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( MUR,( ( CS - Max( MLU,Min( RMSe ,RMSe ) ) ) / DS ) ),MLU ) / Max( MLU,MLU ) ) / DS )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( CS * DS ) ) / Max( ( Max( ( RMSe + ( MUC * RMSe ) ),RMSe ) + ( MUR * ( MUR + ( CS - MUR ) ) ) ),( MUR + DS ) ) ),( Max( Max( ( MUM / ( MUM - DS ) ),RMSe ),MLU ) - RMSe ) ) * Max( MLU,Min( RMSe ,RRSe ) ) )", "obj1": 0.6642335766423357, "obj2": 0.22723970005483418}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( MUC * MUM ) / RRSe ) - ( RMSe - RCSe ) ) - Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( DS * ( RCSe / MUM ) ) ),( Min( DS ,Max( RRSe,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.03573283063193602}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( RRSe * ( ( Min( MUM ,RCSe ) / MUM ) / ( ( RMSe / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) / ( ( ( RMSe + DS ) - CS ) + MLU ) ) + Max( MUC,RCSe ) )", "obj1": 0.5748175182481752, "obj2": 0.3439988719930018}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server - DDR ) ) + Min( ( Const * ( ( Max( FirstVNF_Mem_Server,MDR ) + ( MDR - Const ) ) - MDR ) ) ,( Max( ( MDR / ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Const ) ) ),( Const + FirstVNF_Mem_Server ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( AMS / Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ( AMS * FirstVNF_CPU ) ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + Max( ( ( ( DS * CS ) / ( MLU + MUC ) ) / Max( ( MLU / MLU ),( MUR + ( ( ( MUM + MUM ) - MUM ) + Min( MLU ,MUR ) ) ) ) ),Max( Min( RCSe ,CS ),CS ) ) )", "obj1": 0.8357664233576643, "obj2": 0.08285440135636998}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ) ) ) + ( CS + Max( ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "Max( ( ( FirstVNF_CPU + ARS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( ( ( ( RRS - FirstVNF_Mem ) - ( AMS + ( MDR * FirstVNF_CPU ) ) ) * BR ) - ( FirstVNF_CPU + ARS ) ) )", "choosing": "Max( MUR,( MUR + ( Max( Min( ( DS * DS ) ,( RRSe * ( MLU * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) - ( ( CS * DS ) - CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6120380861396301}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + PN ) + Max( RRS,RRS ) ) + ( ( FirstVNF_RAM_Server - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + Min( Max( MLU,MLU ) ,( ( Min( ( MUC / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( RCSe - CS ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / Max( CRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( FirstVNF_CPU ,DDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) ),MUM ) + Max( ( ( RMSe + ( ( RMSe * RCSe ) + MLU ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( ( MUM + ( Min( RRSe ,MLU ) + MLU ) ) ,CS ),CS ) ) )", "obj1": 0.8302919708029197, "obj2": 0.08562406479410652}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS * ( ( MLU * Max( Max( MLU,CS ),( CS / ( MUM - MLU ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6203491202566025}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5644064822676754}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( PN * Max( FirstVNF_CPU_Server,( ( FirstVNF_Mem - ( FirstVNF_RAM_Server * MRS ) ) / DDR ) ) ),( BR - MDR ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MUC * RMSe ) ),( Max( Min( ( ( CS / MUM ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4615694360776153}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( ( CS / MUM ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42085657471712834}, {"determining": "( ( ( FirstVNF_Mem * AMS ) / RRS ) + Min( FirstVNF_CPU ,Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( MUC / ( MUC + ( MUC - Max( ( ( MUC * DS ) * ( MUM - RCSe ) ),DS ) ) ) ) + Max( CS,MUM ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "Min( ( ( ( MRS - BR ) + Min( Min( RRS ,FirstVNF_RAM_Server ) ,ACS ) ) - ( AMS / Max( ACS,BR ) ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR * RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( ( ( ( MLU * MUM ) + RRSe ) - RRSe ) / ( Min( Min( MLU ,MUR ) ,RCSe ) + MLU ) ) * Max( MUR,MUC ) ) / ( MUM / ( Min( MLU ,( CS / RMSe ) ) / CS ) ) ) ) * ( Max( MUC,RRSe ) / ( RRSe / DS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "Min( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) - ARS ) ,( FirstVNF_CPU_Server * ( ( FirstVNF_RAM_Server - ( PN * Const ) ) / ( PN / Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( CS / ( Max( ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) ) + Max( ( ( ( MUM + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( ( MUM / RRSe ) + ( MUC - RCSe ) ) ) ),( ( MUC / RMSe ) + DS ) ) ),Max( Min( RRSe ,( MLU * ( MLU / MUR ) ) ),CS ) ) )", "obj1": 0.9945255474452555, "obj2": 0.0014500588124919834}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) + ( ( FirstVNF_RAM_Server * ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( DDR / DDR ) ) ) + ( PN - ( Min( MRS ,MRS ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / ( ( ( ( RRSe + Min( CS ,RRSe ) ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) / Max( MUC,MUR ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.8193430656934306, "obj2": 0.09108049616942494}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( BR ,DDR ) ) / FirstVNF_Mem_Server ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( BR ,( FirstVNF_Mem - FirstVNF_Mem ) ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( MUC + ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * Min( ( DS / MUM ) ,( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( Max( ( RCSe * RRSe ),Max( MLU,MUR ) ),MUR ) ) ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.37326412554429594}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - ( PN * Const ) ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( Max( FirstVNF_CPU_Server,( AMS / CRS ) ) ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) ,MDR ) )", "choosing": "( Min( Min( DS ,MUR ) ,( MUC / CS ) ) + ( ( MLU - Min( ( ( MUC + DS ) - Max( Min( ( RMSe * MUM ) ,DS ),MUC ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5720220377926738}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,( MUR * RRSe ) ) ),( DS + ( ( ( ( MLU * RCSe ) - MUR ) - ( Max( RMSe,MUM ) / RMSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5350996257483007}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( MUC * MUM ) / RRSe ) - ( RMSe - RCSe ) ) - Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( DS * ( RCSe / MUM ) ) ),( Min( DS ,Max( RRSe,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.03573283063193602}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ( CRS * MDR ) / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / ( RRSe / ( MUR + RRSe ) ) ) ),( ( RRSe * ( ( MLU + MLU ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "( ( ( Max( ( BR + MDR ),Min( Max( ACS,ARS ) ,FirstVNF_Mem ) ) * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR * FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / Max( CRS,ACS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,Max( MUR,Min( ( RRSe / ( MUM + MLU ) ) ,MUR ) ) ) - Max( MUR,( MUR + ( MUC / RCSe ) ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6788321167883211, "obj2": 0.2139061213013283}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( Min( ( AMS / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ,CRS ) - Max( ACS,AMS ) ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ARS,FirstVNF_CPU ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( ( MUC * MUM ) ,( RCSe - RMSe ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.1857258927844819}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_Mem_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( MUR,( MUR + ( MUC - ( Min( MUM ,( Max( Max( DS,RCSe ),( RRSe + DS ) ) * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - CS ) ) ) )", "obj1": 0.6459854014598541, "obj2": 0.24254326331612383}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3614274399635032}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / ( ( ( Max( MDR,FirstVNF_RAM ) / Min( Max( MDR,FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ACS + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_Mem ,AMS ) / ARS ) ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,Max( RRSe,( ( RRSe * ( MUC * MUR ) ) / ( MUR - ( RCSe * DS ) ) ) ) ) - Max( DS,DS ) ) * ( MUC / DS ) ) + ( MLU + CS ) )", "obj1": 0.5529197080291971, "obj2": 0.3861697373598376}, {"determining": "Max( MDR,( ( MRS - Max( ( BR + ( ( ACS - FirstVNF_Mem ) / ( ( FirstVNF_Mem_Server - AMS ) - ( ARS - ARS ) ) ) ),CRS ) ) / Max( MRS,AMS ) ) )", "choosing": "( Max( ( ( MUM * CS ) / MLU ),( Max( Max( ( MLU / ( MUM - DS ) ),RMSe ),MLU ) - RMSe ) ) * Max( MLU,Min( RMSe ,RRSe ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5108569633104421}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6405109489051095, "obj2": 0.24505548311959174}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM_Server - MDR ) ) + Min( ( FirstVNF_RAM_Server * PN ) ,( Const + Min( MRS ,( ARS / Min( ( FirstVNF_CPU_Server - DDR ) ,ARS ) ) ) ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ),MUR ) - ( RMSe - ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( Min( MUC ,MLU ) / Min( RRSe ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.49563017555216365}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,Max( PN,FirstVNF_CPU ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + ( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Min( Max( DS,( ( RRSe - DS ) + MLU ) ) ,( ( RCSe + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) ) )", "obj1": 0.6386861313868614, "obj2": 0.2541844250236977}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( Const / Max( FirstVNF_RAM,PN ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( DS,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) ) * ( Min( ( MUC * MUM ) ,RRSe ) - MUC ) ) + ( MUM - Min( Max( MUR,RRSe ) ,Max( MUR,DS ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.33090403505420496}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( MUR,( CS - Min( ( MUC * MUM ) ,RRSe ) ) )", "obj1": 0.6131386861313869, "obj2": 0.2774692033621658}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - AMS ) ) * ( Min( ( MDR / FirstVNF_Mem ) ,Max( PN,( BR * FirstVNF_RAM ) ) ) / Const ) ) - ( Min( ( AMS * PN ) ,AMS ) / ARS ) ) )", "choosing": "( ( MUC / Max( ( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MUM,MLU ) + Min( MLU ,RRSe ) ) ) + ( MUR / ( CS * RCSe ) ) ),( RMSe / ( MLU * ( RRSe + RMSe ) ) ) ) ) + Max( ( RRSe / ( MUC - MUR ) ),MUR ) )", "obj1": 0.551094890510949, "obj2": 0.38892469166414134}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * Min( CS ,RMSe ) ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.39963503649635035, "obj2": 0.6516425826901567}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( ACS - MDR ) * ( Const / Max( FirstVNF_RAM,PN ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Const ) ) ) ) )", "choosing": "( DS / ( ( Max( MUR,( RCSe + Min( ( ( RRSe * MLU ) + MUC ) ,MUR ) ) ) / MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5291970802919708, "obj2": 0.41918746468824103}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ( CRS * MDR ) / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / ( RRSe / ( MUR + RRSe ) ) ) ),( ( RRSe * ( ( MLU + MLU ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - RRSe ) ) * ( RCSe + ( MUM / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09284583913567557}, {"determining": "( Max( ( ( Const / FirstVNF_RAM ) - ( FirstVNF_RAM_Server * PN ) ),( MDR - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( Min( ARS ,MDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( RRSe + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.4653284671532847, "obj2": 0.4994390072286004}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.791970802919708, "obj2": 0.10317447263286766}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,Max( PN,FirstVNF_CPU ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + ( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Min( Max( DS,( ( RRSe - DS ) + MLU ) ) ,( ( RCSe + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) ) )", "obj1": 0.6058394160583942, "obj2": 0.2829410533549623}, {"determining": "( ( ( Const * PN ) + ( PN - MDR ) ) + Min( ( ( ( FirstVNF_RAM_Server * BR ) * ( ARS * FirstVNF_CPU ) ) * MDR ) ,( BR - MDR ) ) )", "choosing": "( Max( ( Min( CS ,( RMSe / ( MUM - ( Max( MUM,RMSe ) - Min( RRSe ,CS ) ) ) ) ) / ( MUM / RRSe ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - Max( ( Max( CS,Max( Max( MUR,MUR ),Max( MUM,CS ) ) ) * ( ( RCSe / MUM ) * MUR ) ),( Min( DS ,( Max( Max( MLU,CS ),MUR ) / MUC ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.781021897810219, "obj2": 0.1106576398610802}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( MUR,( CS - Min( ( MUC * MUM ) ,RRSe ) ) )", "obj1": 0.6222627737226277, "obj2": 0.27419487603219495}, {"determining": "( Max( CRS,( FirstVNF_RAM_Server * PN ) ) / ( ( ( PN + ( FirstVNF_Mem + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) * ( Const / Min( ( FirstVNF_CPU_Server / Min( MRS ,MDR ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUC / ( RRSe + ( CS - ( MUR - ( ( RMSe * RRSe ) - CS ) ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "Max( Max( ( FirstVNF_CPU + ( Min( ( AMS / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( Max( ( FirstVNF_CPU + ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) * ( Const / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,Min( ( DS * RCSe ) ,( ( MUM / ( RRSe + RCSe ) ) - Min( Min( ( ( CS + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6316118147494595}, {"determining": "( Max( ( PN * Max( FirstVNF_CPU_Server,( ( Max( ( FirstVNF_Mem * ACS ),Const ) - ( FirstVNF_RAM_Server * Min( AMS ,MRS ) ) ) / DDR ) ) ),( BR - MDR ) ) + ( ( ACS - Const ) / RRS ) )", "choosing": "( ( MUC * RRSe ) + Max( ( MUC - Min( DS ,( RRSe - RMSe ) ) ),RCSe ) )", "obj1": 0.4708029197080292, "obj2": 0.4959243956899403}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,( ( CRS / MRS ) - FirstVNF_Mem ) ) / ARS ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( ( ( RRSe - RCSe ) / RRSe ) * Min( DS ,( MUM - RMSe ) ) ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5766423357664233, "obj2": 0.3388745557420178}, {"determining": "Max( Max( ( MDR + ( Min( ( AMS / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ,CRS ) - Max( ACS,AMS ) ) ),( Const / Min( ( DDR - DDR ) ,FirstVNF_CPU ) ) ),Max( ( BR + MDR ),Min( FirstVNF_Mem ,( ARS / ACS ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) / ( DS * MUC ) ) * Min( DS ,Min( ( ( ( RCSe - RMSe ) / ( ( Min( MUR ,MUR ) + Min( CS ,MUC ) ) * RMSe ) ) / DS ) ,( ( MUM / ( MUM + RCSe ) ) - Min( ( ( ( MUC + DS ) + MUM ) / DS ) ,CS ) ) ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5714228440415206}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - ( PN * PN ) ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( Max( FirstVNF_CPU_Server,( AMS / CRS ) ) ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) ,MDR ) )", "choosing": "( Min( Min( DS ,MUR ) ,( MUC / CS ) ) + ( ( MLU - Min( ( ( MUC + DS ) - Max( Min( Max( MLU,MUM ) ,DS ),MUC ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4753289239725842}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.5036496350364964, "obj2": 0.4546551581575982}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),Max( CS,Max( MUC,( CS * RRSe ) ) ) )", "obj1": 0.4908759124087591, "obj2": 0.46617862598617016}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.9525547445255474, "obj2": 0.019387940129535226}, {"determining": "( Max( Min( ( FirstVNF_RAM_Server / MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / ( ( Const + FirstVNF_RAM_Server ) / Max( ARS,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( DS + Max( CS,Max( MUM,( CS * ( MLU + MLU ) ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5412188412771036}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - DDR ) ) + Max( RRS,DDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( RRSe + RMSe ) - ( MLU + MUC ) ) - RRSe ) ) * ( ( MUR + RMSe ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6014009938198519}, {"determining": "Min( ( ( DDR / DDR ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - AMS ) ) ,Max( RRS,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( ( Min( ( ( CS / MUM ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ) + ( Max( MLU,MUM ) + ( CS + RMSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4867163965466204}, {"determining": "Max( Max( Max( FirstVNF_CPU,DDR ),( FirstVNF_RAM_Server - ( PN * Const ) ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ,MDR ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( DS,DS ) + MUR ) ) ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5411631231438128}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( Min( ARS ,MDR ) * BR ) * MDR ),Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( ( MUC - MUR ) + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( ( RCSe / ( RRSe - MUR ) ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) / ( CS * MUC ) ) ) )", "obj1": 0.75, "obj2": 0.1419792509187662}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( FirstVNF_RAM_Server * BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - Max( ACS,Const ) ) ) ,FirstVNF_Mem_Server ) ) + MDR ) ,( FirstVNF_RAM_Server * ( Min( AMS ,( BR / BR ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Min( RRSe ,( MLU * CS ) ) + CS ),MUM ) - ( RMSe - RCSe ) )", "obj1": 0.5547445255474452, "obj2": 0.37326412554429594}, {"determining": "( ( ( Max( ( BR + Max( MRS,( FirstVNF_CPU + FirstVNF_RAM ) ) ),( Max( ARS,ACS ) - FirstVNF_Mem ) ) * ( ( MDR * ( ( CRS / Const ) * DDR ) ) + FirstVNF_RAM ) ) + ( PN - MDR ) ) + ( BR + ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( ( Min( ( RRSe + CS ) ,Min( MLU ,( CS + ( RCSe / ( ( MLU - DS ) - RRSe ) ) ) ) ) + DS ) ,( RRSe - Max( ( MUR / Min( DS ,MLU ) ),( ( MUC / RCSe ) + MUR ) ) ) )", "obj1": 0.9726277372262774, "obj2": 0.00553812699627579}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( ARS + Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Min( FirstVNF_Mem_Server ,DDR ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( RRSe * CS ) + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),( Min( RRSe ,CS ) - MLU ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "( ( ( Max( ARS,Max( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,MRS ) ),RRS ) ) * ( BR * BR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( AMS + ( MDR * FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) * BR ) * MDR ) ,( Max( FirstVNF_Mem,BR ) / MDR ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MUC - MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / Max( ( Max( RRSe,DS ) + ( DS + RMSe ) ),DS ) ),( ( ( Min( RCSe ,MUC ) - MUC ) * RRSe ) + ( MUC + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6167883211678832, "obj2": 0.276131453478933}, {"determining": "Min( ( ( DDR / DDR ) - ARS ) ,( FirstVNF_CPU_Server * ( ( FirstVNF_RAM_Server - ( PN * Const ) ) / ( PN / Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( CS / ( Max( ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) ) + Max( ( ( ( MUM + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( ( MUM / CS ) + ( MUC - RCSe ) ) ) ),( ( MUC / RMSe ) + DS ) ) ),Max( Min( RRSe ,( MLU * ( MLU / MUR ) ) ),CS ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5970348723534109}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( ARS * ( PN / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ),Min( AMS ,( ( MDR / ( ARS * ( PN / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) / PN ) ) ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( ( ( RMSe + MLU ) + MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),( Max( Max( Min( MUM ,( MUM - DS ) ),MLU ),MLU ) - RMSe ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4475126681290419}, {"determining": "Max( Max( ( FirstVNF_CPU + ( Min( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ,CRS ) - Max( ACS,AMS ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( ( BR + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ) )", "choosing": "( Min( ( MUM * MUM ) ,Max( RRSe,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) * Min( DS ,Min( ( ( ( RCSe - RMSe ) / ( ( Min( MUR ,MUR ) + Min( CS ,RCSe ) ) * RMSe ) ) / DS ) ,( ( MUM / ( RRSe + RCSe ) ) - Min( ( ( ( MUC + DS ) + MUM ) / DS ) ,CS ) ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.4760826206553251}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( Min( Max( ( BR + MDR ),( AMS + BR ) ) ,RRS ) / ACS ) )", "choosing": "( ( RMSe + DS ) - ( RMSe - RCSe ) )", "obj1": 0.6003649635036497, "obj2": 0.28777150794815454}, {"determining": "( ( MRS / AMS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,AMS ) / ARS ) ) )", "choosing": "( Max( RRSe,RRSe ) + ( CS + MUM ) )", "obj1": 0.5802919708029197, "obj2": 0.3343075839898012}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( DS * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6240875912408759, "obj2": 0.2678279505462367}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM - MDR ) ) + ( ( ( Max( FirstVNF_CPU,ARS ) - MDR ) * ( Const / Min( ( MDR / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + Min( BR ,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( FirstVNF_Mem_Server / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( Min( Max( MLU,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( ( MUM + Max( CS,Min( ( RMSe * MUR ) ,CS ) ) ) - MLU ) ) )", "obj1": 0.6624087591240876, "obj2": 0.22737730751984062}], "27": [{"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server - Max( Min( BR ,BR ),( ( MDR - FirstVNF_RAM_Server ) / ( Const / Const ) ) ) ) )", "choosing": "( DS / ( ( Max( MLU,Min( MUR ,( MLU * Max( RRSe,RCSe ) ) ) ) + Min( MLU ,RRSe ) ) / ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( BR * FirstVNF_RAM ) ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( MUC / Max( ( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + ( MUR / ( CS * RCSe ) ) ),( Min( ( Min( CS ,RMSe ) * ( MLU + ( RCSe - MUR ) ) ) ,( DS * Max( ( MUC - MUR ),( RMSe - CS ) ) ) ) / ( MLU * RRSe ) ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( ( FirstVNF_Mem_Server - ( DDR - FirstVNF_Mem_Server ) ) * PN ) ) ) * ( Max( ARS,FirstVNF_CPU ) + BR ) ),RRS ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( ( PN + RRS ) * DDR ) + ( MDR - PN ) ) + Min( ( ( ( ( MDR + ( ( AMS + CRS ) - ( AMS * FirstVNF_Mem ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( MDR / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( Max( AMS,MDR ) * ( RRS * MRS ) ) ) )", "choosing": "Max( ( Min( ( MUM * MLU ) ,MUC ) - Max( MLU,MUM ) ),( Min( ( ( ( ( MLU + MUM ) / MLU ) + MUR ) / ( MLU * RRSe ) ) ,( ( ( ( MUC / MUM ) + RRSe ) * ( ( ( RMSe / MUC ) + MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( RCSe - RRSe ) ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.025942228914761955}, {"determining": "( ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) / ( ( FirstVNF_RAM_Server - AMS ) * ( RRS + Max( AMS,( ( ( FirstVNF_RAM - ( Const / FirstVNF_CPU_Server ) ) / CRS ) + MDR ) ) ) ) )", "choosing": "( Max( ( ( Min( ( MUM * RMSe ) ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( DS ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5364963503649635, "obj2": 0.3982640830289412}, {"determining": "( ( AMS - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Const ) ) ),( Const + FirstVNF_Mem_Server ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) - Max( ( ( Max( PN,MRS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + ( MUR + DS ) )", "obj1": 0.8886861313868614, "obj2": 0.06012135257140107}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Max( AMS,MRS ) * DDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( RRSe + RRSe ) - RRSe ) / ( MLU / ( RRSe * MUM ) ) ) * Max( MUC,( ( MLU - DS ) + ( MLU - MUM ) ) ) ) ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.698905109489051, "obj2": 0.2024120377986919}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( ( ( Max( PN,FirstVNF_RAM_Server ) + ( Min( ( ACS / ARS ) ,AMS ) * ( DDR * AMS ) ) ) - ( ACS / Max( ( ( CRS * MDR ) + ( MRS * PN ) ),( ARS * FirstVNF_CPU ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MUC + MLU ) ) / RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / ( RRSe / ( MUR + RRSe ) ) ) ),( ( RRSe * ( ( MLU + MLU ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - ( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( ( MLU * CS ) + DS ) ) ) ) + ( CS + MUC ) ) ) )", "obj1": 0.8686131386861314, "obj2": 0.060562071980838586}, {"determining": "( ( ( PN - MDR ) + ( FirstVNF_RAM_Server * PN ) ) + ( Min( Min( ( BR + Max( ( BR + MDR ),Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Max( ARS,ACS ) ) ) ) ,( AMS + BR ) ) ,RRS ) / ACS ) )", "choosing": "( Max( CS,MUR ) - ( RMSe - RCSe ) )", "obj1": 0.5948905109489051, "obj2": 0.29497559614506264}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) * DDR ),DDR ) ) + Max( BR,AMS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( MUM + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + Max( MUC,MLU ) ) ) ),( DS / MUR ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1218599742751733}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7572992700729927, "obj2": 0.13340695822127754}, {"determining": "( ( ( FirstVNF_Mem * AMS ) / RRS ) + Min( FirstVNF_CPU ,Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( MUC / ( MUC + ( MUC - Max( ( ( MUC * DS ) * ( MUM - RCSe ) ),DS ) ) ) ) + Max( CS,MUM ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU_Server * BR ) - ( Max( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * RRS ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( BR,MRS ) ) ) )", "choosing": "( ( MUC * ( RMSe / MUM ) ) + ( RRSe * ( MUR + Min( ( RCSe / RRSe ) ,( MLU * ( ( MLU / RRSe ) - ( ( RCSe + CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3216874493304793}, {"determining": "( ( ( Max( ( BR + Max( MRS,( FirstVNF_CPU + FirstVNF_RAM ) ) ),( Max( ARS,ACS ) - FirstVNF_Mem ) ) * ( ( MDR * ( ( CRS / Const ) * DDR ) ) + FirstVNF_RAM ) ) + ( PN - MDR ) ) + ( BR + ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( ( Min( ( RRSe + CS ) ,Min( MLU ,( CS + ( RCSe / ( ( MLU - DS ) - RRSe ) ) ) ) ) + DS ) ,( RRSe - Max( ( MUR / Min( DS ,MLU ) ),( ( MUC / RCSe ) + MUR ) ) ) )", "obj1": 0.9726277372262774, "obj2": 0.00553812699627579}, {"determining": "( ( ( PN * ( Min( ( ( PN + FirstVNF_Mem ) - FirstVNF_Mem_Server ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) - Min( MRS ,BR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.8503649635036497, "obj2": 0.07610367066823244}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7299270072992701, "obj2": 0.15619746953498767}, {"determining": "( ( ( Max( ( BR + MDR ),Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / Min( Const ,( DDR / PN ) ) ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( ( MDR / FirstVNF_CPU_Server ),DDR ) ) ) ) ) ) )", "choosing": "Min( ( RRSe - Max( ( CS - DS ),( MUR + ( MUC / RCSe ) ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RRSe ) ) + DS ) )", "obj1": 0.6751824817518248, "obj2": 0.2157085217834048}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6861313868613139, "obj2": 0.20368974535661005}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * ( ( CRS * MDR ) / ( MRS * PN ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( RRSe / ( MUR + RRSe ) ) ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.948905109489051, "obj2": 0.02443252454462571}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - AMS ) ) * ( Min( ( MDR / FirstVNF_Mem ) ,Max( PN,( BR * FirstVNF_RAM ) ) ) / Const ) ) - ( Min( ( AMS * PN ) ,AMS ) / ARS ) ) )", "choosing": "( ( MUC / Max( ( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MUM,MLU ) + Min( MLU ,RRSe ) ) ) + ( MUR / ( CS * RCSe ) ) ),( RMSe / ( MLU * ( RRSe + RMSe ) ) ) ) ) + Max( ( RRSe / ( MUC - MUR ) ),MUR ) )", "obj1": 0.551094890510949, "obj2": 0.38892469166414134}, {"determining": "Min( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( ( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.6295620437956204, "obj2": 0.261409909140949}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( FirstVNF_Mem - ( FirstVNF_RAM_Server * MRS ) ) / DDR ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( ( ( CS / MUM ) * Min( MLU ,RCSe ) ) + MUR ) ) ) ) )", "obj1": 0.5127737226277372, "obj2": 0.4374815084544031}, {"determining": "Max( Max( BR,Max( FirstVNF_CPU,ARS ) ),Min( ( ARS + ( ( MDR + AMS ) * ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( BR * PN ) + ( BR - MDR ) ) / Max( ( AMS * RRS ),( FirstVNF_CPU_Server + ARS ) ) ) ) ) ) ,( DDR / ACS ) ) )", "choosing": "Max( MUR,( Max( Max( MUR,( MUC - RCSe ) ),MUR ) - ( RMSe - ( ( DS * ( ( MUR - ( CS * RMSe ) ) - RRSe ) ) + ( MUR + Max( MLU,DS ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5499850750928451}, {"determining": "Min( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) - ARS ) ,( FirstVNF_CPU_Server * ( ( FirstVNF_RAM_Server - ( PN * Const ) ) / ( PN / Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( CS / ( Max( ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) ) + Max( ( ( ( MUM + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( ( MUM / RRSe ) + ( MUC - RCSe ) ) ) ),( ( MUC / RMSe ) + DS ) ) ),Max( Min( RRSe ,( MLU * ( MLU / MUR ) ) ),CS ) ) )", "obj1": 0.9945255474452555, "obj2": 0.0014500588124919834}, {"determining": "( Max( FirstVNF_CPU_Server,Max( Min( ( Max( MDR,RRS ) + CRS ) ,FirstVNF_CPU_Server ),PN ) ) / Min( ( ( AMS / DDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( MUR,( ( CS - Max( MLU,Min( RMSe ,RMSe ) ) ) / DS ) ),MLU ) / Max( MLU,MLU ) ) / DS )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU_Server - Max( Max( DDR,( FirstVNF_CPU - AMS ) ),DDR ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( ( MUM + ( MUC * ( RCSe / MLU ) ) ) - RCSe ) )", "obj1": 0.9087591240875912, "obj2": 0.04482466136593247}, {"determining": "( ( MRS / AMS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,AMS ) / ARS ) ) )", "choosing": "( Max( RRSe,RRSe ) + ( CS + MUM ) )", "obj1": 0.5802919708029197, "obj2": 0.3343075839898012}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.7390510948905109, "obj2": 0.1553239309922914}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( ARS * ( PN / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ),Min( AMS ,( ( MDR / ( ARS * ( PN / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) / PN ) ) ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( ( ( RMSe + MLU ) + MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),( Max( Max( Min( MUM ,( MUM - DS ) ),MLU ),MLU ) - RMSe ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4475126681290419}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * MLU ) )", "obj1": 0.718978102189781, "obj2": 0.16601351381606408}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + PN ) + Max( RRS,RRS ) ) + ( ( FirstVNF_RAM_Server - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + Min( Max( MLU,MLU ) ,( ( Min( ( MUC / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( RCSe - CS ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Max( Max( BR,MDR ),( ( FirstVNF_Mem_Server / ARS ) + MDR ) ) + ( ( FirstVNF_RAM_Server - Const ) / RRS ) )", "choosing": "( ( RCSe + ( RRSe + ( MLU - CS ) ) ) + Max( ( MUC - Max( Min( MLU ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5644064822676754}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.677007299270073, "obj2": 0.2093734250656348}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( ( FirstVNF_Mem_Server - ( DDR - FirstVNF_Mem_Server ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( MDR + FirstVNF_Mem ),( Max( ARS,ACS ) + FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,Min( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) ,( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( ( ARS + BR ) + ( ACS * FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe + RCSe ) / ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ),MUR )", "obj1": 0.8978102189781022, "obj2": 0.054153797525920304}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( RCSe + ( ( MUR * MLU ) * ( CS * ( ( MLU * Max( Max( MLU,CS ),( CS / ( MUM - MLU ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6203491202566025}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM - MDR ) ) + ( ( ( Max( FirstVNF_CPU,ARS ) - MDR ) * ( Const / Min( ( MDR / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + Min( BR ,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( FirstVNF_Mem_Server / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( Min( Max( MLU,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( ( MUM + Max( CS,Min( ( RMSe * MUR ) ,CS ) ) ) - MLU ) ) )", "obj1": 0.6624087591240876, "obj2": 0.22737730751984062}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - DDR ) ) + Max( RRS,DDR ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( RRSe + RMSe ) - ( MLU + MUC ) ) - RRSe ) ) * ( ( MUR + RMSe ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6014009938198519}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( ( ( Max( DS,DS ) - Min( ( MUM * MUM ) ,Max( DS,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) ) * ( Min( ( MUC * MUM ) ,RRSe ) - MUC ) ) + ( MUM - Min( Max( MUR,RRSe ) ,Max( MUR,DS ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.37326412554429594}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - ( PN * Const ) ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( Max( FirstVNF_CPU_Server,( AMS / CRS ) ) ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) ,MDR ) )", "choosing": "( Min( Min( DS ,MUR ) ,( MUC / CS ) ) + ( ( MLU - Min( ( ( MUC + DS ) - Max( Min( ( RMSe * MUM ) ,DS ),MUC ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5720220377926738}, {"determining": "( ( MRS / Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ( CRS * MDR ) / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( MUR - RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / ( RRSe / ( MUR + RRSe ) ) ) ),( ( RRSe * ( ( MLU + MLU ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.8394160583941606, "obj2": 0.07698093061835254}, {"determining": "( ( Max( ARS,ACS ) / ( ( Min( FirstVNF_RAM ,AMS ) / ARS ) - ( ( PN + ( ( AMS / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) / ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) + ( Const - Const ) )", "choosing": "( ( ( ( ( CS - RCSe ) / ( Max( CS,MUM ) / MUM ) ) / Max( Min( ( Min( Min( RMSe ,CS ) ,MUC ) / ( Max( CS,RRSe ) / ( DS + MUR ) ) ) ,( RMSe * ( DS * Max( RRSe,MLU ) ) ) ),Min( ( Max( MUM,DS ) / ( CS - DS ) ) ,MLU ) ) ) - MUR ) - Max( Min( ( Min( ( MUC - ( RMSe * MUR ) ) ,( MLU - RRSe ) ) + MLU ) ,RCSe ),( ( MUC * Min( DS ,Min( RMSe ,Min( CS ,( MUC / MUR ) ) ) ) ) - RMSe ) ) )", "obj1": 0.5875912408759124, "obj2": 0.32248563633891797}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( ( MUC / ( RRSe + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM_Server * MDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / Const ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( DS,( Max( MLU,MUM ) + Min( ( MLU / RMSe ) ,RRSe ) ) ) + MUR ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.718978102189781, "obj2": 0.16601351381606408}, {"determining": "Min( ( ( ( MRS - BR ) + Min( Min( RRS ,FirstVNF_RAM_Server ) ,ACS ) ) - ( AMS / Max( ACS,BR ) ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR * RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( ( ( ( MLU * MUM ) + RRSe ) - RRSe ) / ( Min( Min( MLU ,MUR ) ,RCSe ) + MLU ) ) * Max( MUR,MUC ) ) / ( MUM / ( Min( MLU ,( CS / RMSe ) ) / CS ) ) ) ) * ( Max( MUC,RRSe ) / ( RRSe / DS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM * ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) + Min( ( ( BR * Const ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * DDR ) ) ,( ( ( FirstVNF_CPU_Server / ( PN + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * CRS ) / ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( PN - FirstVNF_Mem ) ) ) ) - Max( ( ( FirstVNF_RAM + MRS ) - FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC / MUR ) ) + ( ( ( ( ( MUM * ( MUC * ( CS + CS ) ) ) - RCSe ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( MUR,Min( RRSe ,MUM ) ) + RMSe ) ) ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( RRSe * ( Max( CS,Max( MUM,( CS * RRSe ) ) ) / ( ( RMSe / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) / ( ( ( RMSe + DS ) - CS ) + MLU ) ) + Max( MUC,RCSe ) )", "obj1": 0.572992700729927, "obj2": 0.3489309452000074}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,BR ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( ( ( DS + MUM ) / Max( MUR,MLU ) ) + RRSe ) - RRSe ) / ( Min( RCSe ,MUR ) + MLU ) ) * Max( MUC,MUR ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.9142335766423357, "obj2": 0.03573283063193602}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "( ( Min( FirstVNF_CPU ,RRS ) + Max( BR,MRS ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( CRS,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - ( ( ( MUM - ( ( MLU * ( CS - MLU ) ) + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.1857258927844819}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.5711678832116789, "obj2": 0.3611926832464399}, {"determining": "( ( MRS / ( ( FirstVNF_Mem_Server - MDR ) / FirstVNF_CPU_Server ) ) - Min( MDR ,( Min( Const ,AMS ) - ( ( Min( FirstVNF_Mem ,MRS ) + PN ) / Max( ( ( CRS * MDR ) / ( Max( Const,CRS ) * PN ) ),BR ) ) ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( DS ,MUR ) ) + ( ( MLU - Min( ( Min( MUR ,RMSe ) + ( Min( Max( MLU,MLU ) ,Max( RCSe,CS ) ) + ( CS * RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3614274399635032}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / ( ( ( Max( MDR,FirstVNF_RAM ) / Min( Max( MDR,FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ACS + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_Mem ,AMS ) / ARS ) ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,Max( RRSe,( ( RRSe * ( MUC * MUR ) ) / ( MUR - ( RCSe * DS ) ) ) ) ) - Max( DS,DS ) ) * ( MUC / DS ) ) + ( MLU + CS ) )", "obj1": 0.5529197080291971, "obj2": 0.3861697373598376}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,( MUR * RRSe ) ) ),( DS + ( ( ( ( MLU * RCSe ) - MUR ) - ( Max( RMSe,MUM ) / RMSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5350996257483007}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,Max( PN,FirstVNF_CPU ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + ( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Min( Max( DS,( ( RRSe - DS ) + MLU ) ) ,( ( RCSe + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) ) )", "obj1": 0.6386861313868614, "obj2": 0.2541844250236977}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( ( ACS / PN ) - FirstVNF_RAM ) ,Max( Max( AMS,FirstVNF_RAM ),MDR ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( MUR,( RCSe + ( RMSe - RRSe ) ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RMSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR + ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.10023197582939618}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * ( DDR / DDR ) ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( Max( CS,Max( MUC,( CS * RRSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7937956204379562, "obj2": 0.10213375189011632}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + CRS ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( RRSe + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.18072078770036765}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server - DDR ) ) + Min( ( Const * ( ( Max( FirstVNF_Mem_Server,MDR ) + ( MDR - Const ) ) - MDR ) ) ,( Max( ( MDR / ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Const ) ) ),( Const + FirstVNF_Mem_Server ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( AMS / Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ( AMS * FirstVNF_CPU ) ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + Max( ( ( ( DS * CS ) / ( MLU + MUC ) ) / Max( ( MLU / MLU ),( MUR + ( ( ( MUM + MUM ) - MUM ) + Min( MLU ,MUR ) ) ) ) ),Max( Min( RCSe ,CS ),CS ) ) )", "obj1": 0.8357664233576643, "obj2": 0.08285440135636998}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( ACS - MDR ) * ( Const / Max( FirstVNF_RAM,PN ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Const ) ) ) ) )", "choosing": "( DS / ( ( Max( MUR,( RCSe + Min( ( ( RRSe * MLU ) + MUC ) ,MUR ) ) ) / MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5291970802919708, "obj2": 0.41918746468824103}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * ( ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) + ( Max( AMS,MRS ) * DDR ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + FirstVNF_Mem ) ) * ( ( MRS * FirstVNF_RAM_Server ) - ( DDR - ( Const + ( Const / MRS ) ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,( RRSe / MUC ) ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( MUC,( ( MLU + DS ) + ( MLU - MUM ) ) ) - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6514598540145985, "obj2": 0.2365507426907431}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR / DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( RRSe + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUM ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.18072078770036765}, {"determining": "Max( ( ( FirstVNF_CPU + ARS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( ( ( ( RRS - FirstVNF_Mem ) - ( AMS + ( MDR * FirstVNF_CPU ) ) ) * BR ) - ( FirstVNF_CPU + ARS ) ) )", "choosing": "Max( MUR,( MUR + ( Max( Min( ( DS * DS ) ,( RRSe * ( MLU * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) - ( ( CS * DS ) - CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6120380861396301}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.1383170530812465}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( MUR,( CS - Min( ( MUC * MUM ) ,RRSe ) ) )", "obj1": 0.6222627737226277, "obj2": 0.27419487603219495}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( MUC * MUM ) / RRSe ) - ( RMSe - RCSe ) ) - Max( ( Max( CS,Max( Max( MUR,MUR ),( RRSe + CS ) ) ) * ( DS * ( RCSe / MUM ) ) ),( Min( DS ,Max( RRSe,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) - ( RMSe + MLU ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.03573283063193602}, {"determining": "Max( Max( ( FirstVNF_CPU + ( Min( ( AMS / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( Max( ( FirstVNF_CPU + ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) * ( Const / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) - ( DS * MUC ) ) * Min( DS ,Min( ( DS * RCSe ) ,( ( MUM / ( RRSe + RCSe ) ) - Min( Min( ( ( CS + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6316118147494595}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,( ( CRS / MRS ) - FirstVNF_Mem ) ) / ARS ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( ( ( RRSe - RCSe ) / RRSe ) * Min( DS ,( MUM - RMSe ) ) ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5766423357664233, "obj2": 0.3388745557420178}, {"determining": "Max( Max( ( MDR + ( Min( ( AMS / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ,CRS ) - Max( ACS,AMS ) ) ),( Const / Min( ( DDR - DDR ) ,FirstVNF_CPU ) ) ),Max( ( BR + MDR ),Min( FirstVNF_Mem ,( ARS / ACS ) ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) / ( DS * MUC ) ) * Min( DS ,Min( ( ( ( RCSe - RMSe ) / ( ( Min( MUR ,MUR ) + Min( CS ,MUC ) ) * RMSe ) ) / DS ) ,( ( MUM / ( MUM + RCSe ) ) - Min( ( ( ( MUC + DS ) + MUM ) / DS ) ,CS ) ) ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5714228440415206}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ( CRS * MDR ) / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / ( RRSe / ( MUR + RRSe ) ) ) ),( ( RRSe * ( ( MLU + MLU ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "Max( Max( ( FirstVNF_CPU + ( Min( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ,CRS ) - Max( ACS,AMS ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( ( BR + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ) )", "choosing": "( Min( ( MUM * MUM ) ,Max( RRSe,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) * Min( DS ,Min( ( ( ( RCSe - RMSe ) / ( ( Min( MUR ,MUR ) + Min( CS ,RCSe ) ) * RMSe ) ) / DS ) ,( ( MUM / ( RRSe + RCSe ) ) - Min( ( ( ( MUC + DS ) + MUM ) / DS ) ,CS ) ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.4760826206553251}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - ACS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( Max( FirstVNF_RAM,DDR ) - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),Min( ( RRSe * ( RCSe - ( Min( DS ,RRSe ) + ( ( RCSe * DS ) / ( MUM / RMSe ) ) ) ) ) ,( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6514598540145985, "obj2": 0.2365507426907431}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( DS * DS ) * Max( ( MLU * MUM ),DS ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6405109489051095, "obj2": 0.24505548311959174}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.5036496350364964, "obj2": 0.4546551581575982}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM_Server - MDR ) ) + Min( ( FirstVNF_RAM_Server * PN ) ,( Const + Min( MRS ,( ARS / Min( ( FirstVNF_CPU_Server - DDR ) ,ARS ) ) ) ) ) )", "choosing": "( Max( ( ( ( RCSe - CS ) / ( Max( CS,MUM ) / MUM ) ) / ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ),MUR ) - ( RMSe - ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( Min( MUC ,MLU ) / Min( RRSe ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.49563017555216365}, {"determining": "Min( ( ( DDR / DDR ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - AMS ) ) ,Max( RRS,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( ( Min( ( ( CS / MUM ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ) + ( Max( MLU,MUM ) + ( CS + RMSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4867163965466204}, {"determining": "( ( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / Max( CRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ),CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( FirstVNF_CPU ,DDR ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,( ( MLU + RRSe ) * ( MUR + MLU ) ) ) - DS ) + Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) ),MUM ) + Max( ( ( RMSe + ( ( RMSe * RCSe ) + MLU ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - RCSe ) ) ) ),( MUR + DS ) ) ),Max( Min( ( MUM + ( Min( RRSe ,MLU ) + MLU ) ) ,CS ),CS ) ) )", "obj1": 0.8302919708029197, "obj2": 0.08562406479410652}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * Min( CS ,RMSe ) ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.39963503649635035, "obj2": 0.6516425826901567}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( Min( ARS ,MDR ) * BR ) * MDR ),Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( ( MUC - MUR ) + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( ( RCSe / ( RRSe - MUR ) ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) / ( CS * MUC ) ) ) )", "obj1": 0.75, "obj2": 0.1419792509187662}, {"determining": "Min( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) ,( FirstVNF_RAM_Server / ( Max( ARS,( FirstVNF_Mem - ARS ) ) * ( MRS / Max( PN,MDR ) ) ) ) )", "choosing": "Max( MUR,( Max( MUC,( CS / Max( DS,RRSe ) ) ) - ( Max( ( ( MUC - MUR ) / ( MUM / MLU ) ),( ( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.6058394160583942, "obj2": 0.281265374634033}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( RRSe * ( ( Min( MUM ,RCSe ) / MUM ) / ( ( RMSe / ( MLU / ( RRSe - MLU ) ) ) * Max( MUC,MUR ) ) ) ) / ( ( ( RMSe + DS ) - CS ) + MLU ) ) + Max( MUC,RCSe ) )", "obj1": 0.5748175182481752, "obj2": 0.3439988719930018}, {"determining": "( Max( CRS,( CRS / BR ) ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( Min( ARS ,MDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ARS * MDR ) * ( ARS * MRS ) ) ) ,( BR - MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) * RMSe ) + Max( MUC,MUR ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( BR ,DDR ) ) / FirstVNF_Mem_Server ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( BR ,( FirstVNF_Mem - FirstVNF_Mem ) ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( MUC + ( ( ( ( RMSe + DS ) - CS ) + MLU ) / ( RRSe * Min( ( DS / MUM ) ,( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( Max( ( RCSe * RRSe ),Max( MLU,MUR ) ),MUR ) ) ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.37326412554429594}, {"determining": "( Max( ( PN * Max( FirstVNF_CPU_Server,( ( Max( ( FirstVNF_Mem * ACS ),Const ) - ( FirstVNF_RAM_Server * Min( AMS ,MRS ) ) ) / DDR ) ) ),( BR - MDR ) ) + ( ( ACS - Const ) / RRS ) )", "choosing": "( ( MUC * RRSe ) + Max( ( MUC - Min( DS ,( RRSe - RMSe ) ) ),RCSe ) )", "obj1": 0.4708029197080292, "obj2": 0.4959243956899403}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS + MUC ) / ( CS * DS ) ) / Max( ( Max( ( RMSe + ( MUC * RMSe ) ),RMSe ) + ( MUR * ( MUR + ( CS - MUR ) ) ) ),( MUR + DS ) ) ),( Max( Max( ( MUM / ( MUM - DS ) ),RMSe ),MLU ) - RMSe ) ) * Max( MLU,Min( RMSe ,RRSe ) ) )", "obj1": 0.6642335766423357, "obj2": 0.22723970005483418}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( ARS + Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Min( FirstVNF_Mem_Server ,DDR ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( RRSe * CS ) + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),( Min( RRSe ,CS ) - MLU ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) + ( ( FirstVNF_RAM_Server * ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( DDR / DDR ) ) ) + ( PN - ( Min( MRS ,MRS ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / ( ( ( ( RRSe + Min( CS ,RRSe ) ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) / Max( MUC,MUR ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.8193430656934306, "obj2": 0.09108049616942494}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( FirstVNF_RAM_Server / DDR ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MLU * RRSe ) ),( Max( RRSe,( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.5182481751824818, "obj2": 0.4222017295403071}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - RRS ) ) + ( RRS * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU - DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,( RRSe / MUC ) ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5967153284671532, "obj2": 0.2921539804749347}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) + BR ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,Min( PN ,CRS ) ) ) ) ) )", "choosing": "( Max( Max( ( ( MUC + DS ) / ( Max( DS,DS ) + ( CS + MUC ) ) ),Max( ( ( ( ( CS - CS ) + ( RRSe + RMSe ) ) / MUR ) + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) + Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4868334145769107}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( PN * Max( FirstVNF_CPU_Server,( ( FirstVNF_Mem - ( FirstVNF_RAM_Server * MRS ) ) / DDR ) ) ),( BR - MDR ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( Max( ( RMSe / ( MUC * RMSe ) ),( Max( Min( ( ( CS / MUM ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( CS * RRSe ) ) ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4615694360776153}, {"determining": "Min( ( ( DDR / DDR ) - ARS ) ,( FirstVNF_CPU_Server * ( ( FirstVNF_RAM_Server - ( PN * Const ) ) / ( PN / Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( CS / ( Max( ( ( MUC - MUR ) / ( RRSe / ( MUM / CS ) ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) ) + Max( ( ( ( MUM + MUC ) / ( DS * CS ) ) / Max( ( MLU + Max( MUR,( ( MUM / CS ) + ( MUC - RCSe ) ) ) ),( ( MUC / RMSe ) + DS ) ) ),Max( Min( RRSe ,( MLU * ( MLU / MUR ) ) ),CS ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5970348723534109}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( ( MUC - MUR ) + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7463503649635036, "obj2": 0.14669239022844588}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / Min( RRS ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( RMSe + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7463503649635036, "obj2": 0.14669239022844588}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( PN * Max( FirstVNF_CPU_Server,( ( FirstVNF_Mem - ( FirstVNF_RAM_Server * MRS ) ) / DDR ) ) ),( BR - MDR ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4615694360776153}], "28": [{"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( BR * FirstVNF_RAM ) ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( MUC / Max( ( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + ( MUR / ( CS * RCSe ) ) ),( Min( ( Min( CS ,RMSe ) * ( MLU + ( RCSe - MUR ) ) ) ,( DS * Max( ( MUC - MUR ),( RMSe - CS ) ) ) ) / ( MLU * RRSe ) ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server - Max( Min( BR ,BR ),( ( MDR - FirstVNF_RAM_Server ) / ( Const / Const ) ) ) ) )", "choosing": "( DS / ( ( Max( MLU,Min( MUR ,( MLU * Max( RRSe,RCSe ) ) ) ) + Min( MLU ,RRSe ) ) / ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( ARS + FirstVNF_CPU ),( ( PN / Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) - FirstVNF_CPU_Server ) ),Max( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( ( FirstVNF_Mem_Server - ( DDR * MRS ) ) - PN ) ) ) * ( Max( ARS,FirstVNF_CPU ) + BR ) ),RRS ) )", "choosing": "( Max( ( ( MUR - DS ) / ( RCSe + MLU ) ),( ( CS + MUC ) + ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( RMSe + Max( RRSe,MUC ) ) ) ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( ( PN + RRS ) * DDR ) + ( MDR - PN ) ) + Min( ( ( ( ( MDR + ( ( AMS + CRS ) - ( AMS * FirstVNF_Mem ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( MDR / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( Max( AMS,MDR ) * ( RRS * MRS ) ) ) )", "choosing": "Max( ( Min( ( MUM * MLU ) ,MUC ) - Max( MLU,MUM ) ),( Min( ( ( ( ( MLU + MUM ) / MLU ) + MUR ) / ( MLU * RRSe ) ) ,( ( ( ( MUC / MUM ) + RRSe ) * ( ( ( RMSe / MUC ) + MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( RCSe - RRSe ) ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.025942228914761955}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * ( ( CRS * MDR ) / ( MRS * PN ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( RRSe / ( MUR + RRSe ) ) ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.948905109489051, "obj2": 0.02443252454462571}, {"determining": "( ( ( FirstVNF_Mem * AMS ) / RRS ) + Min( FirstVNF_CPU ,Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( MUC / ( MUC + ( MUC - Max( ( ( MUC * DS ) * ( MUM - RCSe ) ),DS ) ) ) ) + Max( CS,MUM ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "( ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) / ( ( FirstVNF_RAM_Server - AMS ) * ( RRS + Max( AMS,( ( ( FirstVNF_RAM - ( Const / FirstVNF_CPU_Server ) ) / CRS ) + MDR ) ) ) ) )", "choosing": "( Max( ( ( Min( ( MUM * RMSe ) ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( DS ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5364963503649635, "obj2": 0.3982640830289412}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + BR ) * ( Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU / FirstVNF_RAM ) - AMS ) ) ) / MDR ) ) )", "choosing": "( RCSe + ( ( RMSe / MUC ) * ( CS * ( ( MLU * Max( ( MUC + ( MUR / MLU ) ),( CS / ( MUM - MLU ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.698905109489051, "obj2": 0.18999329561006637}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( ( ( Max( PN,FirstVNF_RAM_Server ) + ( Min( ( ACS / ARS ) ,AMS ) * ( DDR * AMS ) ) ) - ( ACS / Max( ( ( CRS * MDR ) + ( MRS * PN ) ),( ARS * FirstVNF_CPU ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MUC + MLU ) ) / RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / ( RRSe / ( MUR + RRSe ) ) ) ),( ( RRSe * ( ( MLU + MLU ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - ( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( ( MLU * CS ) + DS ) ) ) ) + ( CS + MUC ) ) ) )", "obj1": 0.8686131386861314, "obj2": 0.060562071980838586}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) * DDR ),DDR ) ) + Max( BR,AMS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( MUM + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + Max( MUC,MLU ) ) ) ),( DS / MUR ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1218599742751733}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6861313868613139, "obj2": 0.20368974535661005}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - ( PN * Const ) ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( Max( FirstVNF_CPU_Server,( AMS / CRS ) ) ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) ,MDR ) )", "choosing": "( Min( Min( DS ,MUR ) ,( MUC / CS ) ) + ( ( MLU - Min( ( ( MUC + DS ) - Max( Min( ( RMSe * MUM ) ,DS ),MUC ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5720220377926738}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( ( ACS / PN ) - FirstVNF_RAM ) ,Max( Max( AMS,FirstVNF_RAM ),MDR ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( MUR,( RCSe + ( RMSe - RRSe ) ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RMSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR + ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.10023197582939618}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,( MUR * RRSe ) ) ),( DS + ( ( ( ( MLU * RCSe ) - MUR ) - ( Max( RMSe,MUM ) / RMSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5350996257483007}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( MUR,( CS - Min( ( MUC * MUM ) ,RRSe ) ) )", "obj1": 0.6222627737226277, "obj2": 0.27419487603219495}, {"determining": "( ( ( Max( ( BR + Max( MRS,( FirstVNF_CPU + FirstVNF_RAM ) ) ),( Max( ARS,ACS ) - FirstVNF_Mem ) ) * ( ( MDR * ( ( CRS / Const ) * DDR ) ) + FirstVNF_RAM ) ) + ( PN - MDR ) ) + ( BR + ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( ( Min( ( RRSe + CS ) ,Min( MLU ,( CS + ( RCSe / ( ( MLU - DS ) - RRSe ) ) ) ) ) + DS ) ,( RRSe - Max( ( MUR / Min( DS ,MLU ) ),( ( MUC / RCSe ) + MUR ) ) ) )", "obj1": 0.9726277372262774, "obj2": 0.00553812699627579}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5912408759124088, "obj2": 0.30385047100880325}, {"determining": "( ( MRS / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ACS / Max( ( ( CRS * MDR ) / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( MUC / CS ) ) + ( ( MLU - Min( ( ( MUC + DS ) - Max( ( MUC / RCSe ),MUC ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07594020987560123}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7299270072992701, "obj2": 0.15619746953498767}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( PN - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "Max( Max( ( ( Min( CS ,( ( ( RRSe + RMSe ) - ( MLU + MUC ) ) - RRSe ) ) * ( ( MUR + RMSe ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ),( DS + ( ( ( ( MLU * RCSe ) - MUR ) - ( Max( RMSe,MUM ) / RMSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5574258658672333}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - AMS ) ) * ( Min( ( MDR / FirstVNF_Mem ) ,Max( PN,( BR * FirstVNF_RAM ) ) ) / Const ) ) - ( Min( ( AMS * PN ) ,AMS ) / ARS ) ) )", "choosing": "( ( MUC / Max( ( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MUM,MLU ) + Min( MLU ,RRSe ) ) ) + ( MUR / ( CS * RCSe ) ) ),( RMSe / ( MLU * ( RRSe + RMSe ) ) ) ) ) + Max( ( RRSe / ( MUC - MUR ) ),MUR ) )", "obj1": 0.551094890510949, "obj2": 0.38892469166414134}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( Max( BR,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( DS,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( DS * DS ) * Max( ( MLU * MUM ),DS ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( Max( ( ( DS * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( ( MUM + RRSe ) * ( MUM + MUM ) ) - ( RMSe + MLU ) ) ) ,RCSe ) ) + DS ) )", "obj1": 0.6295620437956204, "obj2": 0.258299322858024}, {"determining": "( Max( FirstVNF_CPU_Server,Max( Min( ( Max( MDR,RRS ) + CRS ) ,FirstVNF_CPU_Server ),PN ) ) / Min( ( ( AMS / DDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( MUR,( ( CS - Max( MLU,Min( RMSe ,RMSe ) ) ) / DS ) ),MLU ) / Max( MLU,MLU ) ) / DS )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU_Server - Max( Max( DDR,( FirstVNF_CPU - AMS ) ),DDR ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( ( MUM + ( MUC * ( RCSe / MLU ) ) ) - RCSe ) )", "obj1": 0.9087591240875912, "obj2": 0.04482466136593247}, {"determining": "( ( MRS / AMS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,AMS ) / ARS ) ) )", "choosing": "( Max( RRSe,RRSe ) + ( CS + MUM ) )", "obj1": 0.5802919708029197, "obj2": 0.3343075839898012}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * ( DDR / DDR ) ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( Max( CS,Max( MUC,( CS * RRSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7937956204379562, "obj2": 0.10213375189011632}, {"determining": "Max( ( ( FirstVNF_CPU + ( Min( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ,CRS ) - Max( ACS,AMS ) ) ) / ( FirstVNF_RAM_Server - Min( Min( AMS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) ),Max( ( BR + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ) )", "choosing": "( ( ( MUM * MUM ) / Max( Min( DS ,( MLU * MUM ) ),( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) * Min( DS ,Min( ( ( MUM / ( RRSe + RCSe ) ) - Min( ( ( ( MUC + DS ) + MUM ) / DS ) ,CS ) ) ,( ( ( RCSe - RMSe ) / MLU ) / DS ) ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5480369503927801}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM_Server * MDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / Const ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( DS,( Max( MLU,MUM ) + Min( ( MLU / RMSe ) ,RRSe ) ) ) + MUR ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.718978102189781, "obj2": 0.16601351381606408}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + PN ) + Max( RRS,RRS ) ) + ( ( FirstVNF_RAM_Server - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( RMSe + DS ) - CS ) + Min( Max( MLU,MLU ) ,( ( Min( ( MUC / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( RCSe - CS ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( ARS + Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Min( FirstVNF_Mem_Server ,DDR ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( RRSe * CS ) + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),( Min( RRSe ,CS ) - MLU ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "( ( MRS / ( ( FirstVNF_Mem_Server - MDR ) / FirstVNF_CPU_Server ) ) - Min( MDR ,( Min( Const ,AMS ) - ( ( Min( FirstVNF_Mem ,MRS ) + PN ) / Max( ( ( CRS * MDR ) / ( Max( Const,CRS ) * PN ) ),BR ) ) ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( DS ,MUR ) ) + ( ( MLU - Min( ( Min( MUR ,RMSe ) + ( Min( Max( MLU,MLU ) ,Max( RCSe,CS ) ) + ( CS * RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "( ( BR / ( MDR * FirstVNF_Mem_Server ) ) + Min( ( Const * BR ) ,( Max( ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) / ( ARS + AMS ) ) ),( Const + FirstVNF_Mem_Server ) ) / ( ( ( PN + ( ( ARS - ARS ) - AMS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) - Max( ( ( Max( PN,MRS ) + FirstVNF_Mem_Server ) / DDR ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( MUC ,RCSe ) ,Min( Max( Min( MUM ,( ( RMSe - MUC ) - ( MUR - RCSe ) ) ),( ( CS / RRSe ) - MUM ) ) ,( MUR / MUM ) ) ) + ( MUR + DS ) )", "obj1": 0.8886861313868614, "obj2": 0.06012135257140106}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,Max( PN,FirstVNF_CPU ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + ( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Min( Max( DS,( ( RRSe - DS ) + MLU ) ) ,( ( RCSe + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) ) )", "obj1": 0.6386861313868614, "obj2": 0.2541844250236977}, {"determining": "( ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - CRS ) ) + ( DDR - MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( MUC,MUM ) ) ) ,( ( ( MUM + RMSe ) - ( CS * MUR ) ) + DS ) )", "obj1": 0.6697080291970803, "obj2": 0.222095194535377}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * ( PN * FirstVNF_RAM_Server ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - ( ( MLU + MUM ) * MUM ) ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6240875912408759, "obj2": 0.2679730153440827}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM - MDR ) ) + ( ( ( Max( FirstVNF_CPU,ARS ) - MDR ) * ( Const / Min( ( MDR / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + Min( BR ,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( FirstVNF_Mem_Server / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( Min( Max( MLU,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( ( MUM + Max( CS,Min( ( RMSe * MUR ) ,CS ) ) ) - MLU ) ) )", "obj1": 0.6624087591240876, "obj2": 0.22737730751984062}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( DDR / DDR ) ) ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Min( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) + Max( Max( MUR,( DS / ( CS - ( DS - Min( MUC ,MUM ) ) ) ) ),MLU ) )", "obj1": 0.8175182481751825, "obj2": 0.09184428292066664}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU_Server * BR ) - ( Max( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * RRS ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( BR,MRS ) ) ) )", "choosing": "( ( MUC * ( RMSe / MUM ) ) + ( RRSe * ( MUR + Min( ( RCSe / RRSe ) ,( MLU * ( ( MLU / RRSe ) - ( ( RCSe + CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3216874493304793}, {"determining": "( ( Max( ARS,ACS ) / ( ( Min( FirstVNF_RAM ,AMS ) / ARS ) - ( ( PN + ( ( AMS / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) / ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) + ( Const - Const ) )", "choosing": "( ( ( ( ( CS - RCSe ) / ( Max( CS,MUM ) / MUM ) ) / Max( Min( ( Min( Min( RMSe ,CS ) ,MUC ) / ( Max( CS,RRSe ) / ( DS + MUR ) ) ) ,( RMSe * ( DS * Max( RRSe,MLU ) ) ) ),Min( ( Max( MUM,DS ) / ( CS - DS ) ) ,MLU ) ) ) - MUR ) - Max( Min( ( Min( ( MUC - ( RMSe * MUR ) ) ,( MLU - RRSe ) ) + MLU ) ,RCSe ),( ( MUC * Min( DS ,Min( RMSe ,Min( CS ,( MUC / MUR ) ) ) ) ) - RMSe ) ) )", "obj1": 0.5875912408759124, "obj2": 0.32248563633891797}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.7390510948905109, "obj2": 0.1553239309922914}, {"determining": "( Max( CRS,( CRS / BR ) ) / ( ( ( PN + ( FirstVNF_Mem + AMS ) ) * ( Const / Min( ( Min( ARS ,MDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ARS * MDR ) * ( ARS * MRS ) ) ) ,( BR - MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) * RMSe ) + Max( MUC,MUR ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( ( ( CRS + FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / ( MRS + ( ACS + FirstVNF_CPU_Server ) ) ) ) + ( MDR - PN ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM - RMSe ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / ( RCSe + MLU ) ) ) * Max( Min( ( MLU * RRSe ) ,( RCSe / RRSe ) ),MUR ) ) ) ) ) + MUC )", "obj1": 0.5602189781021898, "obj2": 0.3636496776951247}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * MLU ) )", "obj1": 0.718978102189781, "obj2": 0.16601351381606408}, {"determining": "Max( Max( ( FirstVNF_CPU + ( Min( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ,CRS ) - Max( ACS,AMS ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( ( BR + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ) )", "choosing": "( Min( ( MUM * MUM ) ,Max( RRSe,( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) * Min( DS ,Min( ( ( ( RCSe - RMSe ) / ( ( Min( MUR ,MUR ) + Min( CS ,RCSe ) ) * RMSe ) ) / DS ) ,( ( MUM / ( RRSe + RCSe ) ) - Min( ( ( ( MUC + DS ) + MUM ) / DS ) ,CS ) ) ) ) )", "obj1": 0.48175182481751827, "obj2": 0.4760826206553251}, {"determining": "( Max( ( PN * Max( FirstVNF_CPU_Server,( ( Max( ( FirstVNF_Mem * ACS ),Const ) - ( FirstVNF_RAM_Server * Min( AMS ,MRS ) ) ) / DDR ) ) ),( BR - MDR ) ) + ( ( ACS - Const ) / RRS ) )", "choosing": "( ( MUC * RRSe ) + Max( ( MUC - Min( DS ,( RRSe - RMSe ) ) ),RCSe ) )", "obj1": 0.4708029197080292, "obj2": 0.4959243956899403}, {"determining": "Min( ( ( ( MRS - BR ) + Min( Min( RRS ,FirstVNF_RAM_Server ) ,ACS ) ) - ( AMS / Max( ACS,BR ) ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR * RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( ( ( ( MLU * MUM ) + RRSe ) - RRSe ) / ( Min( Min( MLU ,MUR ) ,RCSe ) + MLU ) ) * Max( MUR,MUC ) ) / ( MUM / ( Min( MLU ,( CS / RMSe ) ) / CS ) ) ) ) * ( Max( MUC,RRSe ) / ( RRSe / DS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM * ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) + Min( ( ( BR * Const ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * DDR ) ) ,( ( ( FirstVNF_CPU_Server / ( PN + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * CRS ) / ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( PN - FirstVNF_Mem ) ) ) ) - Max( ( ( FirstVNF_RAM + MRS ) - FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC / MUR ) ) + ( ( ( ( ( MUM * ( MUC * ( CS + CS ) ) ) - RCSe ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( MUR,Min( RRSe ,MUM ) ) + RMSe ) ) ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "Min( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) ,Max( Min( AMS ,AMS ),Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( ( Max( MLU,MUM ) + Min( MUR ,RRSe ) ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.6058394160583942, "obj2": 0.281265374634033}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( ( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.03573283063193602}, {"determining": "( ( FirstVNF_RAM_Server * PN ) / ( FirstVNF_RAM_Server / ( ARS / FirstVNF_RAM ) ) )", "choosing": "Max( ( Max( ( Min( MLU ,Max( RMSe,( Max( MUR,MUR ) * Min( MUM ,MUR ) ) ) ) + ( RRSe + RMSe ) ),MUM ) - Min( RRSe ,MUC ) ),( ( ( ( DS + MUC ) / ( CS * DS ) ) / Max( ( Max( ( RMSe + ( MUC * RMSe ) ),RMSe ) + ( MUR * ( MUR + ( CS - MUR ) ) ) ),( MUR + DS ) ) ) + ( ( ( ( MLU * RCSe ) - MUR ) - ( Max( RMSe,MUM ) / RMSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.503748017391275}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RRSe - ( MLU + MUR ) ) ) )", "obj1": 0.6733576642335767, "obj2": 0.21308781641861702}, {"determining": "( ( FirstVNF_Mem_Server - ( DDR - FirstVNF_Mem_Server ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( MDR + FirstVNF_Mem ),( Max( ARS,ACS ) + FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,Min( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) ,( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( ( ARS + BR ) + ( ACS * FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe + RCSe ) / ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ),MUR )", "obj1": 0.8978102189781022, "obj2": 0.054153797525920304}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * ( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Max( AMS,MRS ) * DDR ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( MUC,( ( MLU - DS ) + ( MLU - MUM ) ) ) - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6441605839416058, "obj2": 0.24216605707513209}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * RRSe ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.5711678832116789, "obj2": 0.3611926832464399}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.5036496350364964, "obj2": 0.4546551581575982}, {"determining": "( ( MRS - ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ( Max( FirstVNF_Mem_Server,Min( ACS ,FirstVNF_RAM_Server ) ) * BR ) / Max( ( ( CRS * MDR ) / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( MUC - Max( RRSe,CS ) ) ) + ( ( MLU - Min( ( ( MUC + DS ) - Max( Min( ( RMSe * MUM ) ,DS ),MUC ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / ( ( ( Max( MDR,FirstVNF_RAM ) / Min( Max( MDR,FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ACS + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_Mem ,AMS ) / ARS ) ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,Max( RRSe,( ( RRSe * ( MUC * MUR ) ) / ( MUR - ( RCSe * DS ) ) ) ) ) - Max( DS,DS ) ) * ( MUC / DS ) ) + ( MLU + CS ) )", "obj1": 0.5529197080291971, "obj2": 0.3861697373598376}, {"determining": "( ( ( PN - Min( FirstVNF_CPU_Server ,RRS ) ) + ( FirstVNF_RAM_Server * PN ) ) + ( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) )", "choosing": "( Max( ( ( MLU - DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( MUM + DS ) ) ) ) + ( CS + Max( ( MUR + MUM ),CS ) ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.458029197080292, "obj2": 0.5125245431546224}, {"determining": "( ( Min( FirstVNF_CPU ,RRS ) + Max( BR,MRS ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( CRS,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - ( ( ( MUM - ( ( MLU * ( CS - MLU ) ) + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.1857258927844819}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( MUR / Min( DS ,MLU ) ),( ( MUC / RCSe ) + MUR ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.5547445255474452, "obj2": 0.37326412554429594}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( ( ( RMSe + MLU ) + MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),( Max( Max( Min( MUM ,( MUM - DS ) ),MLU ),MLU ) - RMSe ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.7572992700729927, "obj2": 0.13340695822127754}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + CRS ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( RRSe + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUC ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.18072078770036765}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( ACS - MDR ) * ( Const / Max( FirstVNF_RAM,PN ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Const ) ) ) ) )", "choosing": "( DS / ( ( Max( MUR,( RCSe + Min( ( ( RRSe * MLU ) + MUC ) ,MUR ) ) ) / MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5291970802919708, "obj2": 0.41918746468824103}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * ( ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) + ( Max( AMS,MRS ) * DDR ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + FirstVNF_Mem ) ) * ( ( MRS * FirstVNF_RAM_Server ) - ( DDR - ( Const + ( Const / MRS ) ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,( RRSe / MUC ) ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( MUC,( ( MLU + DS ) + ( MLU - MUM ) ) ) - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( DS * DS ) * Max( ( MLU * MUM ),DS ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6405109489051095, "obj2": 0.24505548311959174}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( ARS * ( PN / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ),Min( AMS ,( ( MDR / Const ) / PN ) ) ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( ( ( RMSe + MLU ) + MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),( Max( Max( Min( MUM ,( MUM - DS ) ),MLU ),MLU ) - RMSe ) ) * Max( ( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) ),Min( RRSe ,RMSe ) ) )", "obj1": 0.5109489051094891, "obj2": 0.4412521545282002}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.7572992700729927, "obj2": 0.13340695822127754}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - ACS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( Max( FirstVNF_RAM,DDR ) - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),Min( ( RRSe * ( RCSe - ( Min( DS ,RRSe ) + ( ( RCSe * DS ) / ( MUM / RMSe ) ) ) ) ) ,( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6514598540145985, "obj2": 0.2365507426907431}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * ( ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) + ( Max( AMS,MRS ) * DDR ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + FirstVNF_Mem ) ) * ( ( MRS * FirstVNF_RAM_Server ) - ( DDR - ( Const + ( Const / MRS ) ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,( RRSe / MUC ) ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( MUC,( ( MLU + DS ) + ( MLU - MUM ) ) ) - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6514598540145985, "obj2": 0.2365507426907431}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) - FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) ,( PN * Min( ( Const / ( DDR * ( FirstVNF_Mem_Server + MRS ) ) ) ,( Max( ( MDR * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Max( ( MUR + ( MUM / RCSe ) ),Max( Min( RRSe ,CS ),MLU ) ) + Min( ( RRSe + ( CS - ( RRSe + CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.4744525547445255, "obj2": 0.4884342386853767}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( ( FirstVNF_Mem - ( FirstVNF_RAM_Server * MRS ) ) / DDR ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( ( ( CS / MUM ) * Min( MLU ,RCSe ) ) + MUR ) ) ) ) )", "obj1": 0.5127737226277372, "obj2": 0.4374815084544031}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR / DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( Max( RRSe,DS ) + ( ( RRSe + Min( MUM ,MUM ) ) - MUC ) ),DS ) ) * MLU ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUC - CS ) + Min( RRSe ,( RCSe - DS ) ) ) + RMSe ) + ( CS * MUM ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.18072078770036765}, {"determining": "( ( ( Max( ( AMS * Min( BR ,CRS ) ),BR ) - FirstVNF_Mem ) / RRS ) + Max( ( MDR * ( ( ARS * ( ( ( MDR - PN ) + PN ) + MRS ) ) * BR ) ),( ( ( ARS * MDR ) * BR ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / Const ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( CS - Min( RRSe ,( RMSe - ( CS + ( DS * DS ) ) ) ) ) + Max( ( MUR / ( MUC - MLU ) ),MUR ) )", "obj1": 0.7427007299270073, "obj2": 0.14768601118210956}, {"determining": "( ( AMS - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( ( Const / Const ) - Const ) ) ),( Const + FirstVNF_Mem_Server ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) - Max( ( ( Max( PN,MRS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + ( DS / ( ( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) + ( CS + MUC ) ) ) )", "obj1": 0.8905109489051095, "obj2": 0.05908063182864975}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,BR ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( ( ( DS + MUM ) / Max( MUR,MLU ) ) + RRSe ) - RRSe ) / ( Min( RCSe ,MUR ) + MLU ) ) * Max( MUC,MUR ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.9142335766423357, "obj2": 0.03573283063193602}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6806569343065694, "obj2": 0.20691174931150746}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server - DDR ) ) + Min( ( Const * ( ( Max( FirstVNF_Mem_Server,MDR ) + ( MDR - Const ) ) - MDR ) ) ,( Max( ( MDR / ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Const ) ) ),( Const + FirstVNF_Mem_Server ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( AMS / Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) - Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ( AMS * FirstVNF_CPU ) ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + Max( ( ( ( DS * CS ) / ( MLU + MUC ) ) / Max( ( MLU / MLU ),( MUR + ( ( ( MUM + MUM ) - MUM ) + Min( MLU ,MUR ) ) ) ) ),Max( Min( RCSe ,CS ),CS ) ) )", "obj1": 0.8357664233576643, "obj2": 0.08285440135636998}, {"determining": "Max( Max( BR,Max( FirstVNF_CPU,ARS ) ),Min( ( ARS + ( ( MDR + AMS ) * ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( BR * PN ) + ( BR - MDR ) ) / Max( ( AMS * RRS ),( FirstVNF_CPU_Server + ARS ) ) ) ) ) ) ,( DDR / ACS ) ) )", "choosing": "Max( MUR,( Max( Max( MUR,( MUC - RCSe ) ),MUR ) - ( RMSe - ( ( DS * ( ( MUR - ( CS * RMSe ) ) - RRSe ) ) + ( MUR + Max( MLU,DS ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5499850750928451}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( PN * Max( FirstVNF_CPU_Server,Max( ARS,ACS ) ) ),( BR - MDR ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),CS )", "obj1": 0.49452554744525545, "obj2": 0.46380613480039307}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( FirstVNF_RAM_Server / RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42085657471712834}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * ( FirstVNF_RAM_Server * PN ) ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( MUR + ( Max( MLU,DS ) + MUR ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.781021897810219, "obj2": 0.11065763986108021}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / ( ( ( Max( MDR,FirstVNF_RAM ) / Min( Max( MDR,FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ACS + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_Mem ,AMS ) / ARS ) ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,Max( RRSe,( ( RRSe * ( MUC * MUR ) ) / ( MUR - ( RCSe * DS ) ) ) ) ) - Max( DS,DS ) ) * ( MUC / DS ) ) + ( MLU + CS ) )", "obj1": 0.4051094890510949, "obj2": 0.6192058310211038}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - ( MUM - MLU ) ) )", "obj1": 0.5, "obj2": 0.4615447191479973}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4804515975941925}, {"determining": "Max( ( ( FirstVNF_CPU + ARS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( ( ( ( RRS - FirstVNF_Mem ) - ( AMS + ( MDR * FirstVNF_CPU ) ) ) * BR ) - ( FirstVNF_CPU + ARS ) ) )", "choosing": "Max( MUR,( MUR + ( Max( Min( ( DS * DS ) ,( RRSe * ( MLU * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) - ( ( CS * DS ) - CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6120380861396301}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ARS - ( AMS + AMS ) ) / AMS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * Min( CS ,RMSe ) ) ),( Max( Min( Max( MLU,( RCSe - RMSe ) ) ,( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.4142335766423358, "obj2": 0.6014009938198519}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * Min( CS ,RMSe ) ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.39963503649635035, "obj2": 0.6516425826901567}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3614274399635032}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( DS / ( Max( Max( MUR,( DS / ( CS - ( DS - Min( MUC ,MUM ) ) ) ) ),MLU ) / ( MLU - MLU ) ) )", "obj1": 0.75, "obj2": 0.13938582644999764}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( DS / ( ( Max( MUR,( RCSe + MLU ) ) + MLU ) / ( MLU - MLU ) ) )", "obj1": 0.572992700729927, "obj2": 0.3489309452000074}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.677007299270073, "obj2": 0.2093734250656348}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.5748175182481752, "obj2": 0.34191681438487276}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,( ( CRS / MRS ) - FirstVNF_Mem ) ) / ARS ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( ( ( RRSe - RCSe ) / RRSe ) * Min( DS ,( MUM - RMSe ) ) ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5766423357664233, "obj2": 0.3388745557420178}], "29": [{"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( MRS - ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ( Max( FirstVNF_Mem_Server,Min( ACS ,FirstVNF_RAM_Server ) ) * BR ) / Max( ( MRS / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( MUC - Max( RRSe,CS ) ) ) + ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,( BR * FirstVNF_RAM ) ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( MUC / Max( ( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + ( MUR / ( CS * RCSe ) ) ),( Min( ( Min( CS ,RMSe ) * ( MLU + ( RCSe - MUR ) ) ) ,( DS * Max( ( MUC - MUR ),( RMSe - CS ) ) ) ) / ( MLU * RRSe ) ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( RRS * MRS ) )", "choosing": "( Min( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) ,Max( MLU,( MUR + MUR ) ) ) * Min( DS ,Min( ( ( MLU / MUM ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - Min( Min( ( ( MUC + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( ( PN + RRS ) * DDR ) + ( MDR - PN ) ) + Min( ( ( ( ( MDR + ( ( AMS + CRS ) - ( AMS * FirstVNF_Mem ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( MDR / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( Max( AMS,MDR ) * ( RRS * MRS ) ) ) )", "choosing": "Max( ( Min( ( MUM * MLU ) ,MUC ) - Max( MLU,MUM ) ),( Min( ( ( ( ( MLU + MUM ) / MLU ) + MUR ) / ( MLU * RRSe ) ) ,( ( ( ( MUC / MUM ) + RRSe ) * ( ( ( RMSe / MUC ) + MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( RCSe - RRSe ) ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.025942228914761955}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( MUR - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5401459854014599, "obj2": 0.3797328484896326}, {"determining": "( ( FirstVNF_RAM - CRS ) + Min( ( MDR * ( ( ARS * MDR ) * BR ) ) ,Min( ( Max( FirstVNF_CPU,Min( BR ,AMS ) ) * ( FirstVNF_CPU_Server / MDR ) ) ,( ( Max( DDR,AMS ) + CRS ) / PN ) ) ) )", "choosing": "( ( RRSe + Min( RMSe ,Max( MUM,DS ) ) ) + Min( Min( Min( DS ,DS ) ,MUM ) ,( Min( ( Min( MLU ,CS ) / ( ( ( MUR + MUM ) / Min( RCSe ,MUM ) ) - RCSe ) ) ,Max( RMSe,MUM ) ) + ( CS * MUC ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3559806692118027}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ( ( FirstVNF_Mem - ( Max( RRS,ARS ) * MRS ) ) / DDR ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( DS + MUC ) / ( ( MUR / MUC ) + CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( ( RRSe + CS ),MLU ) ) )", "obj1": 0.572992700729927, "obj2": 0.3372195341565952}, {"determining": "( ( MRS / ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( ( ( Max( PN,FirstVNF_RAM_Server ) + ( Min( ( ACS / ARS ) ,AMS ) * ( DDR * AMS ) ) ) - ( ACS / Max( ( ( CRS * MDR ) + ( MRS * PN ) ),( ARS * FirstVNF_CPU ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MUC + MLU ) ) / RRSe ) ) * ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) ) / ( RRSe / ( RRSe / ( MUR + RRSe ) ) ) ),( ( RRSe * ( ( MLU + MLU ) - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - ( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( ( MLU * CS ) + DS ) ) ) ) + ( CS + MUC ) ) ) )", "obj1": 0.8686131386861314, "obj2": 0.060562071980838586}, {"determining": "Max( Max( Max( FirstVNF_CPU,ARS ),( FirstVNF_RAM_Server - ( PN * Const ) ) ),Min( ( ARS + Max( ( MDR + AMS ),( Const / Min( Max( FirstVNF_CPU_Server,( AMS / CRS ) ) ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) ,MDR ) )", "choosing": "( Min( Min( DS ,MUR ) ,( MUC / CS ) ) + ( ( MLU - Min( ( ( MUC + DS ) - Max( Min( ( RMSe * MUM ) ,DS ),MUC ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5720220377926738}, {"determining": "( ( ( FirstVNF_Mem * AMS ) / RRS ) + Min( FirstVNF_CPU ,Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( MUC / ( MUC + ( MUC - Max( ( ( MUC * DS ) * ( MUM - RCSe ) ),DS ) ) ) ) + Max( CS,MUM ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * ( ( CRS * MDR ) / ( MRS * PN ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( RRSe / ( MUR + RRSe ) ) ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.948905109489051, "obj2": 0.02443252454462571}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM - MDR ) ) + ( ( ( Max( FirstVNF_CPU,ARS ) - MDR ) * ( Const / Min( ( MDR / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + Min( BR ,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( FirstVNF_Mem_Server / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( Min( Max( MLU,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( ( MUM + Max( CS,Min( ( RMSe * MUR ) ,CS ) ) ) - MLU ) ) )", "obj1": 0.6624087591240876, "obj2": 0.22737730751984062}, {"determining": "( ( ( Max( ( BR + Max( MRS,( FirstVNF_CPU + FirstVNF_RAM ) ) ),( Max( ARS,ACS ) - FirstVNF_Mem ) ) * ( ( MDR * ( ( CRS / Const ) * DDR ) ) + FirstVNF_RAM ) ) + ( PN - MDR ) ) + ( BR + ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( ( Min( ( RRSe + CS ) ,Min( MLU ,( CS + ( RCSe / ( ( MLU - DS ) - RRSe ) ) ) ) ) + DS ) ,( RRSe - Max( ( MUR / Min( DS ,MLU ) ),( ( MUC / RCSe ) + MUR ) ) ) )", "obj1": 0.9726277372262774, "obj2": 0.00553812699627579}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( DDR / DDR ) ) ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Min( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) + Max( Max( MUR,( DS / ( CS - ( DS - Min( MUC ,MUM ) ) ) ) ),MLU ) )", "obj1": 0.8175182481751825, "obj2": 0.09184428292066664}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( MDR / ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_RAM_Server,ARS ) + AMS ) ) * ( Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ),( ( CRS / BR ) - FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU_Server - ACS ) - RRS ) ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + Min( ( MUM * RRSe ) ,MUR ) ) ) ) / Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.5967153284671532, "obj2": 0.2923894559595689}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( ARS + Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Min( FirstVNF_Mem_Server ,DDR ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( RRSe * CS ) + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),( Min( RRSe ,CS ) - MLU ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "( ( MRS / AMS ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,AMS ) / ARS ) ) )", "choosing": "( Max( RRSe,RRSe ) + ( CS + MUM ) )", "obj1": 0.5802919708029197, "obj2": 0.3343075839898012}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( Max( BR,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( DS,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( DS * DS ) * Max( ( MLU * MUM ),DS ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( Max( ( ( DS * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( ( MUM + RRSe ) * ( MUM + MUM ) ) - ( RMSe + MLU ) ) ) ,RCSe ) ) + DS ) )", "obj1": 0.6295620437956204, "obj2": 0.258299322858024}, {"determining": "( ( ( DDR - FirstVNF_RAM_Server ) / ( ( BR - MDR ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) - Max( ( ( Max( PN,MRS ) + FirstVNF_Mem_Server ) / Max( ( DDR * MRS ),FirstVNF_Mem_Server ) ),Min( ARS ,MDR ) ) ) ) ) - Min( FirstVNF_RAM_Server ,( Min( AMS ,Const ) - ( DDR / Max( ( ( DDR * MDR ) / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( DS ,MUR ) ) + ( MUR + MUR ) )", "obj1": 0.8448905109489051, "obj2": 0.07409912923454631}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( ( ( RRSe - ( MLU + MUC ) ) - RRSe ) - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.9890510948905109, "obj2": 0.0015236737205162412}, {"determining": "Min( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) ,Max( Min( AMS ,AMS ),Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( ( Max( MLU,MUM ) + Min( MUR ,RRSe ) ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.6058394160583942, "obj2": 0.281265374634033}, {"determining": "( Max( FirstVNF_CPU_Server,Max( Min( ( Max( MDR,RRS ) + CRS ) ,FirstVNF_CPU_Server ),PN ) ) / Min( ( ( AMS / DDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( MUR,( ( CS - Max( MLU,Min( RMSe ,RMSe ) ) ) / DS ) ),MLU ) / Max( MLU,MLU ) ) / DS )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem / MRS ) ) ) + ( ( Const + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) + ( PN / ACS ) )", "choosing": "( ( CS + MUC ) + Max( ( ( ( DS + ( ( ( RMSe * MUM ) * RRSe ) - ( MUC * MLU ) ) ) / ( DS * CS ) ) / Max( ( ( ( ( MUC * MLU ) - ( MUM + MUM ) ) + RRSe ) / MLU ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - MUR ) / RMSe ) ,CS ),( DS + ( MUR / ( CS * Min( ( MLU * RMSe ) ,MUC ) ) ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU_Server - Max( Max( DDR,( FirstVNF_CPU - AMS ) ),DDR ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( ( MUM + ( MUC * ( RCSe / MLU ) ) ) - RCSe ) )", "obj1": 0.9087591240875912, "obj2": 0.04482466136593247}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6861313868613139, "obj2": 0.20368974535661005}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "Max( ( CS - Min( RRSe ,( RMSe - ( CS + ( DS * DS ) ) ) ) ),( DS + ( ( ( ( MLU * RCSe ) - MUR ) - ( Max( RMSe,MUM ) / RMSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5026121506458631}, {"determining": "( ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - CRS ) ) + ( DDR - MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( MUC,MUM ) ) ) ,( ( ( MUM + RMSe ) - ( CS * MUR ) ) + DS ) )", "obj1": 0.6697080291970803, "obj2": 0.222095194535377}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( FirstVNF_RAM_Server - Min( Max( ARS,ACS ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( MUR,( CS - Min( ( MUC * MUM ) ,RRSe ) ) )", "obj1": 0.6222627737226277, "obj2": 0.27419487603219495}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * ( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Max( AMS,MRS ) * DDR ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( MUC,( ( MLU - DS ) + ( MLU - MUM ) ) ) - ( RRSe * ( MLU * MUC ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6113138686131386, "obj2": 0.2792147669422738}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( FirstVNF_RAM_Server / RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42085657471712834}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( DS / ( Max( Max( MUR,( DS / ( CS - ( DS - Min( MUC ,MUM ) ) ) ) ),MLU ) / ( MLU - MLU ) ) )", "obj1": 0.75, "obj2": 0.13938582644999764}, {"determining": "( Max( ( PN * Max( FirstVNF_CPU_Server,( ( Max( ( FirstVNF_Mem * ACS ),Const ) - ( FirstVNF_RAM_Server * Min( AMS ,MRS ) ) ) / DDR ) ) ),( BR - MDR ) ) + ( ( ACS - Const ) / RRS ) )", "choosing": "( ( MUC * RRSe ) + Max( ( MUC - Min( DS ,( RRSe - RMSe ) ) ),RCSe ) )", "obj1": 0.4708029197080292, "obj2": 0.4959243956899403}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( ACS - MDR ) * ( Const / Max( FirstVNF_RAM,PN ) ) ) - Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Const ) ) ) ) )", "choosing": "( DS / ( ( Max( MUR,( RCSe + Min( ( ( RRSe * MLU ) + MUC ) ,MUR ) ) ) / MLU ) / ( MLU - MLU ) ) )", "obj1": 0.5291970802919708, "obj2": 0.41918746468824103}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * ( PN * FirstVNF_RAM_Server ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - ( ( MLU + MUM ) * MUM ) ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6240875912408759, "obj2": 0.2679730153440827}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - ( MUC - MUR ) ) ) * MLU ) )", "obj1": 0.6952554744525548, "obj2": 0.1922803145996594}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "Max( ( ( FirstVNF_CPU + ( Min( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ,CRS ) - Max( ACS,AMS ) ) ) / ( FirstVNF_RAM_Server - Min( Min( AMS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) ),Max( ( BR + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ) )", "choosing": "( ( ( MUM * MUM ) / Max( Min( DS ,( MLU * MUM ) ),( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) * Min( DS ,Min( ( ( MUM / ( RRSe + RCSe ) ) - Min( ( ( ( MUC + DS ) + MUM ) / DS ) ,CS ) ) ,( ( ( RCSe - RMSe ) / MLU ) / DS ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6144093178284101}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( ( ACS / PN ) - FirstVNF_RAM ) ,Max( Max( AMS,FirstVNF_RAM ),MDR ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( MUR,( RCSe + ( RMSe - RRSe ) ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RMSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR + ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.10023197582939618}, {"determining": "( ( Max( ( Max( ( CRS + FirstVNF_Mem ),FirstVNF_CPU ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),PN ) + ( PN * AMS ) ) + Max( MRS,MDR ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( Max( RMSe,MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),Max( MUR,( Max( MUR,MUC ) * Max( RRSe,RMSe ) ) ) ) * Max( MLU,Min( RRSe ,MUR ) ) )", "obj1": 0.7773722627737226, "obj2": 0.11835659978923364}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7299270072992701, "obj2": 0.15619746953498767}, {"determining": "( ( BR / ( MDR * FirstVNF_Mem_Server ) ) + Min( ( Const * BR ) ,( Max( ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) / ( ARS + AMS ) ) ),( Const + FirstVNF_Mem_Server ) ) / ( ( ( PN + ( ( ARS - ARS ) - AMS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) - Max( ( ( Max( PN,MRS ) + FirstVNF_Mem_Server ) / DDR ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( MUC ,RCSe ) ,Min( Max( Min( MUM ,( ( RMSe - MUC ) - ( MUR - RCSe ) ) ),( ( CS / RRSe ) - MUM ) ) ,( MUR / MUM ) ) ) + ( MUR + DS ) )", "obj1": 0.8886861313868614, "obj2": 0.06012135257140106}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU_Server * BR ) - ( Max( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * RRS ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( BR,MRS ) ) ) )", "choosing": "( ( MUC * ( RMSe / MUM ) ) + ( RRSe * ( MUR + Min( ( RCSe / RRSe ) ,( MLU * ( ( MLU / RRSe ) - ( ( RCSe + CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3216874493304793}, {"determining": "( ( Max( ARS,ACS ) / ( ( Min( FirstVNF_RAM ,AMS ) / ARS ) - ( ( PN + ( ( AMS / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) / ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) + ( Const - Const ) )", "choosing": "( ( ( ( ( CS - RCSe ) / ( Max( CS,MUM ) / MUM ) ) / Max( Min( ( Min( Min( RMSe ,CS ) ,MUC ) / ( Max( CS,RRSe ) / ( DS + MUR ) ) ) ,( RMSe * ( DS * Max( RRSe,MLU ) ) ) ),Min( ( Max( MUM,DS ) / ( CS - DS ) ) ,MLU ) ) ) - MUR ) - Max( Min( ( Min( ( MUC - ( RMSe * MUR ) ) ,( MLU - RRSe ) ) + MLU ) ,RCSe ),( ( MUC * Min( DS ,Min( RMSe ,Min( CS ,( MUC / MUR ) ) ) ) ) - RMSe ) ) )", "obj1": 0.5875912408759124, "obj2": 0.32248563633891797}, {"determining": "( ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) / ( ( FirstVNF_RAM_Server - AMS ) * ( RRS + Max( AMS,( ( ( FirstVNF_RAM - ( Const / FirstVNF_CPU_Server ) ) / CRS ) + MDR ) ) ) ) )", "choosing": "( Max( ( ( Min( ( MUM * RMSe ) ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( DS ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5364963503649635, "obj2": 0.3982640830289412}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( ( ( FirstVNF_CPU - MDR ) / MRS ) + FirstVNF_Mem_Server ) * ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - ( PN - MDR ) ) ) / ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( ( Max( DS,MUR ) - MUR ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) + ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.7390510948905109, "obj2": 0.15417365162791838}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) * DDR ),DDR ) ) + Max( BR,AMS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( MUM + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + Max( MUC,MLU ) ) ) ),( DS / MUR ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1218599742751733}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( ( FirstVNF_RAM * ( PN / CRS ) ) * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ,( MDR * MRS ) ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),MUR ) ,( ( RRSe / DS ) / MUM ) ) + Max( MUC,RCSe ) )", "obj1": 0.5912408759124088, "obj2": 0.30385047100880325}, {"determining": "( ( ( ( CRS + FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / ( MRS + ( ACS + FirstVNF_CPU_Server ) ) ) ) + ( MDR - PN ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM - RMSe ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / ( RCSe + MLU ) ) ) * Max( Min( ( MLU * RRSe ) ,( RCSe / RRSe ) ),MUR ) ) ) ) ) + MUC )", "obj1": 0.5602189781021898, "obj2": 0.3636496776951247}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * MLU ) )", "obj1": 0.7244525547445255, "obj2": 0.1613365269254156}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( Min( ( Min( ARS ,MDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( Min( MUC ,MUR ) * RMSe ) + Max( MUC,MUR ) ),MUR ) + RRSe ) + ( Min( MUC ,MUM ) - ( MUM - MLU ) ) )", "obj1": 0.4233576642335766, "obj2": 0.5823841015570119}, {"determining": "( ( MRS / ( ( FirstVNF_Mem_Server - MDR ) / FirstVNF_CPU_Server ) ) - Min( MDR ,( Min( Const ,AMS ) - ( ( Min( FirstVNF_Mem ,MRS ) + PN ) / Max( ( ( CRS * MDR ) / ( Max( Const,CRS ) * PN ) ),BR ) ) ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( DS ,MUR ) ) + ( ( MLU - Min( ( Min( MUR ,RMSe ) + ( Min( Max( MLU,MLU ) ,Max( RCSe,CS ) ) + ( CS * RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM * ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) + Min( ( ( BR * Const ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * DDR ) ) ,( ( ( FirstVNF_CPU_Server / ( PN + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * CRS ) / ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( PN - FirstVNF_Mem ) ) ) ) - Max( ( ( FirstVNF_RAM + MRS ) - FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC / MUR ) ) + ( ( ( ( ( MUM * ( MUC * ( CS + CS ) ) ) - RCSe ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( MUR,Min( RRSe ,MUM ) ) + RMSe ) ) ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( ( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.03573283063193602}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RRSe - ( MLU + MUR ) ) ) )", "obj1": 0.6733576642335767, "obj2": 0.21308781641861702}, {"determining": "( ( FirstVNF_Mem_Server - ( DDR - FirstVNF_Mem_Server ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( MDR + FirstVNF_Mem ),( Max( ARS,ACS ) + FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,Min( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) ,( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( ( ARS + BR ) + ( ACS * FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe + RCSe ) / ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ),MUR )", "obj1": 0.8978102189781022, "obj2": 0.054153797525920304}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,( MUR * RRSe ) ) ),( DS + ( ( ( ( MLU * RCSe ) - MUR ) - ( Max( RMSe,MUM ) / RMSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5350996257483007}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( MUR / Min( DS ,MLU ) ),( ( MUC / RCSe ) + MUR ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.5547445255474452, "obj2": 0.37326412554429594}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( ( ACS / MRS ) - ACS ) ,( MDR / ( CRS - FirstVNF_RAM ) ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Min( DS ,DS ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR * ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.7645985401459854, "obj2": 0.1267509230941372}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,Max( PN,FirstVNF_CPU ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + ( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Min( Max( DS,( ( RRSe - DS ) + MLU ) ) ,( ( RCSe + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) ) )", "obj1": 0.6386861313868614, "obj2": 0.2541844250236977}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( PN * Max( FirstVNF_CPU_Server,Max( ARS,ACS ) ) ),( BR - MDR ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),CS )", "obj1": 0.49452554744525545, "obj2": 0.46380613480039307}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * ( DDR / DDR ) ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( Max( CS,Max( MUC,( CS * RRSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7937956204379562, "obj2": 0.10213375189011632}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( PN - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUC * RRSe ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.4343065693430657, "obj2": 0.5574258658672333}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - Min( FirstVNF_RAM ,BR ) ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server / PN ),FirstVNF_CPU_Server ) + BR ) ) - Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( RCSe + ( MUR * ( CS * ( ( MLU * Max( Min( ( RMSe + RCSe ) ,( MUM + MLU ) ),( CS / ( MUM - MUM ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.9525547445255474, "obj2": 0.02024833016022477}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( DS * DS ) * Max( ( MLU * MUM ),DS ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.6405109489051095, "obj2": 0.24505548311959174}, {"determining": "( ( MRS - ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ( Max( FirstVNF_Mem_Server,Min( ACS ,FirstVNF_RAM_Server ) ) * BR ) / Max( ( ( CRS * MDR ) / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( MUC - Max( RRSe,CS ) ) ) + ( ( MLU - Min( ( ( MUC + DS ) - Max( Min( ( RMSe * MUM ) ,DS ),MUC ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ARS * MDR ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( DS * DS ) * Max( ( CS * RRSe ),DS ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.45985401459854014, "obj2": 0.5108569633104421}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5948905109489051, "obj2": 0.3015537593344242}, {"determining": "Min( ( ( ( MRS - BR ) + Min( Min( RRS ,FirstVNF_RAM_Server ) ,ACS ) ) - ( AMS / Max( ACS,BR ) ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR * RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( ( ( ( MLU * MUM ) + RRSe ) - RRSe ) / ( Min( Min( MLU ,MUR ) ,RCSe ) + MLU ) ) * Max( MUR,MUC ) ) / ( MUM / ( Min( MLU ,( CS / RMSe ) ) / CS ) ) ) ) * ( Max( MUC,RRSe ) / ( RRSe / DS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ARS - ( AMS + AMS ) ) / AMS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * Min( CS ,RMSe ) ) ),( Max( Min( Max( MLU,( RCSe - RMSe ) ) ,( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.4142335766423358, "obj2": 0.6014009938198519}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.5036496350364964, "obj2": 0.4546551581575982}, {"determining": "Max( ( ( FirstVNF_CPU + ARS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( ( ( ( RRS - FirstVNF_Mem ) - ( AMS + ( MDR * FirstVNF_CPU ) ) ) * BR ) - ( FirstVNF_CPU + ARS ) ) )", "choosing": "Max( MUR,( MUR + ( Max( Min( ( DS * DS ) ,( RRSe * ( MLU * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) - ( ( CS * DS ) - CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6120380861396301}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( CS - Min( ( MUC * MUM ) ,RRSe ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.4142335766423358, "obj2": 0.6014009938198519}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * ( ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) + ( Max( AMS,MRS ) * DDR ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + FirstVNF_Mem ) ) * ( ( MRS * FirstVNF_RAM_Server ) - ( DDR - ( Const + ( Const / MRS ) ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,( RRSe / MUC ) ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( MUC,( ( MLU + DS ) + ( MLU - MUM ) ) ) - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6514598540145985, "obj2": 0.2365507426907431}, {"determining": "( ( ( FirstVNF_RAM_Server - AMS ) * PN ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC / MUR ) ) + ( ( ( ( ( RRSe / RMSe ) * ( CS / MUM ) ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( Min( RRSe ,MUM ),MUR ) + RMSe ) ) ) )", "obj1": 0.5364963503649635, "obj2": 0.3982640830289412}, {"determining": "( ( Min( CRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( MLU - Max( ( Min( ( RCSe * MUM ) ,DS ) + Min( MLU ,DS ) ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( MDR - PN ) ) + Min( ( ( ( Min( Min( ( ACS * ACS ) ,FirstVNF_Mem_Server ) ,CRS ) / MRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,Min( ACS ,FirstVNF_Mem ) ) ) + MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + ( MUR / MLU ) ) + ( ( RMSe / CS ) * ( MUC + MUM ) ) )", "obj1": 0.7153284671532847, "obj2": 0.17416544276359205}, {"determining": "( ( AMS - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( ( Const / Const ) - Const ) ) ),( Const + FirstVNF_Mem_Server ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) - Max( ( ( Max( PN,MRS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + ( DS / ( ( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) + ( CS + MUC ) ) ) )", "obj1": 0.8905109489051095, "obj2": 0.05908063182864975}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( ( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.03573283063193602}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4804515975941925}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( ( BR + ( MDR / FirstVNF_CPU_Server ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( ( Min( MUR ,MUR ) + Min( CS ,RCSe ) ) * RMSe ),( ( MUC / RCSe ) + MUR ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.5565693430656934, "obj2": 0.36980052457324813}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - ( MUM - MLU ) ) )", "obj1": 0.5072992700729927, "obj2": 0.4504125470400998}, {"determining": "Max( Max( BR,Max( FirstVNF_CPU,ARS ) ),Min( ( ARS + ( ( MDR + AMS ) * ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( BR * PN ) + ( BR - MDR ) ) / Max( ( AMS * RRS ),( FirstVNF_CPU_Server + ARS ) ) ) ) ) ) ,( DDR / ACS ) ) )", "choosing": "Max( MUR,( Max( Max( MUR,( MUC - RCSe ) ),MUR ) - ( RMSe - ( ( DS * ( ( MUR - ( CS * RMSe ) ) - RRSe ) ) + ( MUR + Max( MLU,DS ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5499850750928451}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - ACS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( Max( FirstVNF_RAM,DDR ) - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),Min( ( RRSe * ( RCSe - ( Min( DS ,RRSe ) + ( ( RCSe * DS ) / ( MUM / RMSe ) ) ) ) ) ,( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6514598540145985, "obj2": 0.2365507426907431}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * ( FirstVNF_RAM_Server * PN ) ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( MUR + ( Max( MLU,DS ) + MUR ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.781021897810219, "obj2": 0.11065763986108021}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * ( Min( ARS ,ARS ) * ( DDR * MDR ) ) ) + ( PN / MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( ( MUC + DS ) + MUC ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.7609489051094891, "obj2": 0.13105454292240148}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * Min( CS ,RMSe ) ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.39963503649635035, "obj2": 0.6516425826901567}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM_Server - MDR ) ) + ( ( Min( Max( ARS,FirstVNF_CPU ) ,MDR ) * ( Const / Min( ( ( MRS * FirstVNF_RAM_Server ) / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Min( RRS ,PN ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( Max( ( MLU / ( Max( MUR,( RCSe / MLU ) ) + MLU ) ),Max( RMSe,Max( ( ( RMSe * DS ) + RMSe ),MUC ) ) ) * CS ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5428536266276126}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( MDR ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,( ( RRS - MDR ) * MDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * ( ( ( MDR * PN ) + PN ) + MRS ) ) * BR ) * MDR ),( ( ( ARS * MDR ) * BR ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( PN / Const ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( CS - Min( ( RMSe - ( CS + RRSe ) ) ,RRSe ) ) + Max( Max( ( MUC - Max( RRSe,RCSe ) ),MUR ),MUR ) )", "obj1": 0.7427007299270073, "obj2": 0.14768601118210956}, {"determining": "( ( Min( FirstVNF_CPU ,RRS ) + Max( BR,MRS ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( CRS,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - ( ( ( MUM - ( ( MLU * ( CS - MLU ) ) + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.1857258927844819}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * MLU ) )", "obj1": 0.718978102189781, "obj2": 0.16601351381606408}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.677007299270073, "obj2": 0.2093734250656348}, {"determining": "( ( ( ( ( BR + ( ( CRS - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + ( ( ( PN * AMS ) * DDR ) * MDR ) )", "choosing": "( Min( Min( DS ,Max( MLU,RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( MUC,RMSe ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4877332528473524}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( ( ( DS / DS ) + DS ) / ( CS + DS ) ) / Max( ( Max( ( ( RMSe + MLU ) + MLU ),RMSe ) + ( MUR * ( MUR + ( MUC - MUR ) ) ) ),( MUR + DS ) ) ),( Max( Max( Min( MUM ,( MUM - DS ) ),MLU ),MLU ) - RMSe ) ) * Max( MLU,Min( RRSe ,RMSe ) ) )", "obj1": 0.7554744525547445, "obj2": 0.13699719435187524}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) ,( ( FirstVNF_RAM_Server - AMS ) - ( ( FirstVNF_Mem_Server - ( DDR - FirstVNF_Mem_Server ) ) * PN ) ) ) ) )", "choosing": "( Min( ( RRSe + ( CS - ( RRSe + CS ) ) ) ,( CS + ( CS + MUC ) ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( CS + MUC ) ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - RRS ) ) + ( Max( ( ( FirstVNF_RAM_Server * MDR ) * ARS ),FirstVNF_RAM ) / MRS ) )", "choosing": "( Max( ( ( MLU - DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,DS ) + ( ( CS + RRSe ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.458029197080292, "obj2": 0.5125245431546223}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * ( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Max( AMS,MRS ) * DDR ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( ( RCSe + RMSe ) + ( MLU / ( MUM - ( RMSe * RMSe ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6459854014598541, "obj2": 0.2412349765626369}], "30": [{"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( DDR,DDR ) ) ) ) ) * ( Const / Min( ( ( FirstVNF_CPU / FirstVNF_RAM ) / FirstVNF_CPU_Server ) ,Max( PN,( BR * FirstVNF_RAM ) ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( Max( MUR,( DS - DS ) ) - Min( ( MUC * MUM ) ,RRSe ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ( Max( FirstVNF_Mem_Server,Min( ACS ,FirstVNF_RAM_Server ) ) * BR ) / Max( ( MRS / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( MUC - Max( RRSe,CS ) ) ) + ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + ( FirstVNF_RAM / ( RRS - ARS ) ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( DDR / FirstVNF_CPU_Server ),Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ),( RRS * MRS ) )", "choosing": "( ( MUR - ( MLU + MUM ) ) * Min( DS ,Min( ( ( MLU / MUM ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - Min( Min( ( ( RMSe + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ( ( FirstVNF_Mem - ( Max( RRS,ARS ) * MRS ) ) / DDR ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( DS + MUC ) / ( ( MUR / MUC ) + CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( ( RRSe + CS ),MLU ) ) )", "obj1": 0.572992700729927, "obj2": 0.3372195341565952}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( MUR - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5401459854014599, "obj2": 0.3797328484896326}, {"determining": "( ( ( ( PN + RRS ) * DDR ) + ( MDR - PN ) ) + Min( ( ( ( ( MDR + ( ( AMS + CRS ) - ( AMS * FirstVNF_Mem ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( MDR / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( Max( AMS,MDR ) * ( RRS * MRS ) ) ) )", "choosing": "Max( ( Min( ( MUM * MLU ) ,MUC ) - Max( MLU,MUM ) ),( Min( ( ( ( ( MLU + MUM ) / MLU ) + MUR ) / ( MLU * RRSe ) ) ,( ( ( ( MUC / MUM ) + RRSe ) * ( ( ( RMSe / MUC ) + MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( RCSe - RRSe ) ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.025942228914761955}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem / MRS ) ) ) + ( ( Const + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) + ( PN / ACS ) )", "choosing": "( ( CS + MUC ) + Max( ( ( ( DS + ( ( ( RMSe * MUM ) * RRSe ) - ( MUC * MLU ) ) ) / ( DS * CS ) ) / Max( ( ( ( ( MUC * MLU ) - ( MUM + MUM ) ) + RRSe ) / MLU ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - MUR ) / RMSe ) ,CS ),( DS + ( MUR / ( CS * Min( ( MLU * RMSe ) ,MUC ) ) ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Max( ARS,ACS ) / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( ( ( MUR + ( MUC - MUC ) ) + Min( MLU ,RRSe ) ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.8686131386861314, "obj2": 0.05987096616433046}, {"determining": "( ( FirstVNF_RAM - CRS ) + Min( ( MDR * ( ( ARS * MDR ) * BR ) ) ,Min( ( Max( FirstVNF_CPU,Min( BR ,AMS ) ) * ( FirstVNF_CPU_Server / MDR ) ) ,( ( Max( DDR,AMS ) + CRS ) / PN ) ) ) )", "choosing": "( ( RRSe + Min( RMSe ,Max( MUM,DS ) ) ) + Min( Min( Min( DS ,DS ) ,MUM ) ,( Min( ( Min( MLU ,CS ) / ( ( ( MUR + MUM ) / Min( RCSe ,MUM ) ) - RCSe ) ) ,Max( RMSe,MUM ) ) + ( CS * MUC ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3559806692118027}, {"determining": "( ( AMS - Max( FirstVNF_CPU_Server,DDR ) ) + Min( ( Const * BR ) ,( Max( ( MDR / ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( ( Const / Const ) - Const ) ) ),( Const + FirstVNF_Mem_Server ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) - Max( ( ( Max( PN,MRS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( RCSe - MUC ) ) + ( DS / ( ( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) + ( CS + MUC ) ) ) )", "obj1": 0.8905109489051095, "obj2": 0.05908063182864974}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( Min( ( Min( AMS ,MDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUM - ( RMSe * RMSe ) ) + ( Min( MUC ,MUM ) - ( MUM - MLU ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5689032902273858}, {"determining": "( ( Min( FirstVNF_CPU ,RRS ) + Max( BR,MRS ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( CRS,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - ( ( ( MUM - ( ( MLU * ( CS - MLU ) ) + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.1857258927844819}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( MDR - PN ) ) + Min( ( ( ( Min( Min( ( ACS * ACS ) ,FirstVNF_Mem_Server ) ,CRS ) / MRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,Min( ACS ,FirstVNF_Mem ) ) ) + MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + ( MUR / MLU ) ) + ( ( RMSe / CS ) * ( MUC + MUM ) ) )", "obj1": 0.7153284671532847, "obj2": 0.17416544276359205}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * ( ( CRS * MDR ) / ( MRS * PN ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( RRSe / ( MUR + RRSe ) ) ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.948905109489051, "obj2": 0.02443252454462571}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU_Server - Max( Max( DDR,( FirstVNF_CPU - AMS ) ),DDR ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( ( MUM + ( MUC * ( RCSe / MLU ) ) ) - RCSe ) )", "obj1": 0.9087591240875912, "obj2": 0.04482466136593247}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM - MDR ) ) + ( ( ( Max( FirstVNF_CPU,ARS ) - MDR ) * ( Const / Min( ( MDR / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + Min( BR ,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( FirstVNF_Mem_Server / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( Min( Max( MLU,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( ( MUM + Max( CS,Min( ( RMSe * MUR ) ,CS ) ) ) - MLU ) ) )", "obj1": 0.6624087591240876, "obj2": 0.22737730751984062}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( ( ACS / PN ) - FirstVNF_RAM ) ,Max( Max( AMS,FirstVNF_RAM ),MDR ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( MUR,( RCSe + ( RMSe - RRSe ) ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RMSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR + ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.10023197582939618}, {"determining": "Min( ( ( ( MRS - BR ) + Min( Min( RRS ,FirstVNF_RAM_Server ) ,ACS ) ) - ( AMS / Max( ACS,BR ) ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR * RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( ( ( ( MLU * MUM ) + RRSe ) - RRSe ) / ( Min( Min( MLU ,MUR ) ,RCSe ) + MLU ) ) * Max( MUR,MUC ) ) / ( MUM / ( Min( MLU ,( CS / RMSe ) ) / CS ) ) ) ) * ( Max( MUC,RRSe ) / ( RRSe / DS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4804515975941925}, {"determining": "( Max( FirstVNF_CPU_Server,Max( Min( ( Max( MDR,RRS ) + CRS ) ,FirstVNF_CPU_Server ),PN ) ) / Min( ( ( AMS / DDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( MUR,( ( CS - Max( MLU,Min( RMSe ,RMSe ) ) ) / DS ) ),MLU ) / Max( MLU,MLU ) ) / DS )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( ARS + Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Min( FirstVNF_Mem_Server ,DDR ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( RRSe * CS ) + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),( Min( RRSe ,CS ) - MLU ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + Max( MLU,DS ) ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( FirstVNF_Mem_Server * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) )", "obj1": 0.5127737226277372, "obj2": 0.4440831776217089}, {"determining": "( ( ( DDR - FirstVNF_RAM_Server ) / ( ( BR - MDR ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) - Max( ( ( Max( PN,MRS ) + FirstVNF_Mem_Server ) / Max( ( DDR * MRS ),FirstVNF_Mem_Server ) ),Min( ARS ,MDR ) ) ) ) ) - Min( FirstVNF_RAM_Server ,( Min( AMS ,Const ) - ( DDR / Max( ( ( DDR * MDR ) / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( DS ,MUR ) ) + ( MUR + MUR ) )", "obj1": 0.8448905109489051, "obj2": 0.07409912923454631}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( RRSe - ( MLU + MUR ) ) )", "obj1": 0.6295620437956204, "obj2": 0.2564002980934058}, {"determining": "( Max( ( PN * Max( FirstVNF_CPU_Server,( ( ( FirstVNF_CPU_Server - ACS ) - ( FirstVNF_RAM_Server * MRS ) ) / CRS ) ) ),( BR - MDR ) ) + ( ( ACS - Const ) / RRS ) )", "choosing": "( ( MUC * RRSe ) + ( ( MUC - ( Max( Min( MLU ,( DS * ( MUR * MUM ) ) ),Max( RRSe,RRSe ) ) / RMSe ) ) - RCSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5822076123020558}, {"determining": "Max( Max( BR,Max( FirstVNF_CPU,ARS ) ),Min( ( ARS + ( ( MDR + AMS ) * ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( BR * PN ) + ( BR - MDR ) ) / Max( ( AMS * RRS ),( FirstVNF_CPU_Server + ARS ) ) ) ) ) ) ,( DDR / ACS ) ) )", "choosing": "Max( MUR,( Max( Max( MUR,( MUC - RCSe ) ),MUR ) - ( RMSe - ( ( DS * ( ( MUR - ( CS * RMSe ) ) - RRSe ) ) + ( MUR + Max( MLU,DS ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5499850750928451}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,Min( AMS ,( ( MDR / FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( Max( DS,DS ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.5036496350364964, "obj2": 0.4546551581575982}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( ( DS * DS ) * Max( ( MLU * MUM ),DS ) ) ) )", "obj1": 0.9616788321167883, "obj2": 0.013498501890017533}, {"determining": "( ( ( Max( ( BR + Max( MRS,( FirstVNF_CPU + FirstVNF_RAM ) ) ),( Max( ARS,ACS ) - FirstVNF_Mem ) ) * ( ( MDR * ( ( CRS / Const ) * DDR ) ) + FirstVNF_RAM ) ) + ( PN - MDR ) ) + ( BR + ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( ( Min( ( RRSe + CS ) ,Min( MLU ,( CS + ( RCSe / ( ( MLU - DS ) - RRSe ) ) ) ) ) + DS ) ,( RRSe - Max( ( MUR / Min( DS ,MLU ) ),( ( MUC / RCSe ) + MUR ) ) ) )", "obj1": 0.9726277372262774, "obj2": 0.00553812699627579}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * ( PN * FirstVNF_RAM_Server ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - ( ( MLU + MUM ) * MUM ) ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6240875912408759, "obj2": 0.2679730153440827}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - ( MUC - MUR ) ) ) * MLU ) )", "obj1": 0.6952554744525548, "obj2": 0.1922803145996594}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "Max( MUR,( ( ( ( ( RRSe / RMSe ) * ( CS / MUM ) ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( Min( RRSe ,MUM ),MUR ) + RMSe ) ) ) )", "obj1": 0.8394160583941606, "obj2": 0.07451347892270961}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( MDR / ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_RAM_Server,ARS ) + AMS ) ) * ( Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ),( ( CRS / BR ) - FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU_Server - ACS ) - RRS ) ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + Min( ( MUM * RRSe ) ,MUR ) ) ) ) / Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.5967153284671532, "obj2": 0.2923894559595689}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "Max( ( ( FirstVNF_CPU + ( Min( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ,CRS ) - Max( ACS,AMS ) ) ) / ( MDR * FirstVNF_CPU ) ),Max( ( BR + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ) )", "choosing": "( ( ( MUM * MUM ) / Max( Min( DS ,( MLU * MUM ) ),( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) * Min( DS ,Min( ( ( MUM / ( RRSe + RCSe ) ) - Min( ( ( ( MUC + MLU ) + MUM ) / DS ) ,CS ) ) ,( ( ( RCSe - RMSe ) / MLU ) / DS ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6144093178284101}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,Max( PN,FirstVNF_CPU ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + ( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Min( Max( DS,( ( RRSe - DS ) + MLU ) ) ,( ( RCSe + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) ) )", "obj1": 0.6386861313868614, "obj2": 0.2541844250236977}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( MDR ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM_Server * MDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * ( ( ( MDR - PN ) + PN ) + MRS ) ) * BR ) * MDR ),( ( ( ARS * MDR ) * BR ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( PN / Const ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( ( ( MUM * ( MUC * ( CS + CS ) ) ) - RCSe ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( MUR,Min( RRSe ,MUM ) ) + RMSe ) ) ) + Max( ( MUR / ( MUC - RRSe ) ),MUR ) )", "obj1": 0.7755474452554745, "obj2": 0.11820924282537436}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7299270072992701, "obj2": 0.15619746953498767}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( FirstVNF_RAM_Server / RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42085657471712834}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * MLU ) )", "obj1": 0.718978102189781, "obj2": 0.1659209018422467}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU_Server * BR ) - ( Max( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * RRS ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( BR,MRS ) ) ) )", "choosing": "( ( MUC * ( RMSe / MUM ) ) + ( RRSe * ( MUR + Min( ( RCSe / RRSe ) ,( MLU * ( ( MLU / RRSe ) - ( ( RCSe + CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3216874493304793}, {"determining": "( ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) / ( ( FirstVNF_RAM_Server - AMS ) * ( RRS + Max( AMS,( ( ( FirstVNF_RAM - ( Const / FirstVNF_CPU_Server ) ) / CRS ) + MDR ) ) ) ) )", "choosing": "( Max( ( ( Min( ( MUM * RMSe ) ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( DS ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5364963503649635, "obj2": 0.3982640830289412}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "( ( MRS / ( ( FirstVNF_Mem_Server - MDR ) / FirstVNF_CPU_Server ) ) - Min( MDR ,( Min( Const ,AMS ) - ( ( Min( FirstVNF_Mem ,MRS ) + PN ) / Max( ( ( CRS * MDR ) / ( Max( Const,CRS ) * PN ) ),BR ) ) ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( DS ,MUR ) ) + ( ( MLU - Min( ( Min( MUR ,RMSe ) + ( Min( Max( MLU,MLU ) ,Max( RCSe,CS ) ) + ( CS * RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "( ( ( ( CRS + FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / ( MRS + ( ACS + FirstVNF_CPU_Server ) ) ) ) + ( MDR - PN ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM - RMSe ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / ( RCSe + MLU ) ) ) * Max( Min( ( MLU * RRSe ) ,( RCSe / RRSe ) ),MUR ) ) ) ) ) + MUC )", "obj1": 0.5602189781021898, "obj2": 0.3636496776951247}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * MLU ) )", "obj1": 0.7244525547445255, "obj2": 0.1613365269254156}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM * ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) + Min( ( ( BR * Const ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * DDR ) ) ,( ( ( FirstVNF_CPU_Server / ( PN + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * CRS ) / ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,( PN - FirstVNF_Mem ) ) ) ) - Max( ( ( FirstVNF_RAM + MRS ) - FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC / MUR ) ) + ( ( ( ( ( MUM * ( MUC * ( CS + CS ) ) ) - RCSe ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( MUR,Min( RRSe ,MUM ) ) + RMSe ) ) ) )", "obj1": 0.9032846715328468, "obj2": 0.052505069994895265}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) * ( ( MRS * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) - Min( ( FirstVNF_CPU_Server - ( PN - FirstVNF_CPU ) ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( ( CS * RMSe ) * DS ) * Max( DS,( MLU * MUM ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,( Min( MUC ,MUM ) - ( MLU - MLU ) ) ) + DS ) )", "obj1": 0.6021897810218978, "obj2": 0.28582424947601487}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "Max( ( CS - Min( RRSe ,( RMSe - ( CS + ( DS * DS ) ) ) ) ),( DS + ( ( ( ( MLU * RCSe ) - MUR ) - ( Max( RMSe,MUM ) / RMSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5026121506458631}, {"determining": "( Max( ( PN * Max( FirstVNF_CPU_Server,( ( Max( ( FirstVNF_Mem * ACS ),Const ) - ( FirstVNF_RAM_Server * Min( AMS ,MRS ) ) ) / DDR ) ) ),( BR - MDR ) ) + ( ( ACS - Const ) / RRS ) )", "choosing": "( ( MUC * RRSe ) + Max( ( MUC - Min( DS ,( RRSe - RMSe ) ) ),RCSe ) )", "obj1": 0.4708029197080292, "obj2": 0.4959243956899403}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RRSe - ( MLU + MUR ) ) ) )", "obj1": 0.6733576642335767, "obj2": 0.21308781641861702}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - ( MUM - MLU ) ) )", "obj1": 0.5072992700729927, "obj2": 0.4504125470400998}, {"determining": "( ( FirstVNF_Mem_Server - ( DDR - FirstVNF_Mem_Server ) ) + Min( ( ( Const * BR ) * ( Min( Max( ( MDR + FirstVNF_Mem ),( Max( ARS,ACS ) + FirstVNF_RAM_Server ) ) ,RRS ) * DDR ) ) ,Min( Max( ( MDR / FirstVNF_CPU_Server ),CRS ) ,( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( ( ( ( ARS + BR ) + ( ACS * FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe + RCSe ) / ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ),MUR )", "obj1": 0.8978102189781022, "obj2": 0.054153797525920304}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) * DDR ),DDR ) ) + Max( BR,AMS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( MUM + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + Max( MUC,MLU ) ) ) ),( DS / MUR ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1218599742751733}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,( MUR * RRSe ) ) ),( DS + ( ( ( ( MLU * RCSe ) - MUR ) - ( Max( RMSe,MUM ) / RMSe ) ) - ( DS * MUC ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5350996257483007}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,MDR ) ) ) - ( DDR / DDR ) ) ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Min( ( ( MDR / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( ( MUC + ( ( MUM - RRSe ) / ( ( MLU / DS ) - ( DS / MUC ) ) ) ) / RMSe ) + Max( Max( MUR,( DS / ( CS - ( DS - ( MUC + MUM ) ) ) ) ),MLU ) )", "obj1": 0.8156934306569343, "obj2": 0.09295718767188905}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( RRS - ACS ) ,RRS ) ) ) / ( Min( PN ,AMS ) + ( ARS / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( Max( MUR,RRSe ) - ( RCSe / RRSe ) ) + RRSe ),RCSe ) ) + ( CS - ( MUR - MUC ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5912408759124088, "obj2": 0.30385047100880325}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( MUR / Min( DS ,MLU ) ),( ( MUC / RCSe ) + MUR ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.5547445255474452, "obj2": 0.37326412554429594}, {"determining": "Max( Max( AMS,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ),( ( ( Max( BR,Max( CRS,PN ) ) - Max( FirstVNF_CPU,ARS ) ) * BR ) - ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( CS + RCSe ),( MUR + ( Max( ( ( DS * DS ) * ( RCSe - RMSe ) ),( ( CS + MUM ) * ( RMSe + MLU ) ) ) - ( CS - CS ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5998991963584823}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * ( DDR / DDR ) ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( Max( CS,Max( MUC,( CS * RRSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7937956204379562, "obj2": 0.10213375189011632}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * Min( CS ,RMSe ) ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.39963503649635035, "obj2": 0.6516425826901567}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - Min( FirstVNF_RAM ,BR ) ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server / PN ),FirstVNF_CPU_Server ) + BR ) ) - Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( RCSe + ( MUR * ( CS * ( ( MLU * Max( Min( ( RMSe + RCSe ) ,( MUM + MLU ) ),( CS / ( MUM - MUM ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.9525547445255474, "obj2": 0.02024833016022477}, {"determining": "( ( MRS - ( ( BR - MDR ) / FirstVNF_CPU_Server ) ) - Min( FirstVNF_RAM_Server ,( Min( Const ,AMS ) - ( ( Max( FirstVNF_Mem_Server,Min( ACS ,FirstVNF_RAM_Server ) ) * BR ) / Max( ( ( CRS * MDR ) / ( MRS * PN ) ),BR ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( MUC - Max( RRSe,CS ) ) ) + ( ( MLU - Min( ( ( MUC + DS ) - Max( Min( ( RMSe * MUM ) ,DS ),MUC ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM_Server - MDR ) ) + ( ( Min( Max( ARS,FirstVNF_CPU ) ,MDR ) * ( Const / Min( ( ( MRS * FirstVNF_RAM_Server ) / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Min( RRS ,PN ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( Max( ( MLU / ( Max( MUR,( RCSe / MLU ) ) + MLU ) ),Max( RMSe,Max( ( ( RMSe * DS ) + RMSe ),MUC ) ) ) * CS ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5428536266276126}, {"determining": "( ( ( ( ( BR + ( ( CRS - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + ( ( ( PN * AMS ) * DDR ) * MDR ) )", "choosing": "( Min( Min( DS ,Max( MLU,RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( MUC,RMSe ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4877332528473524}, {"determining": "( ( ( PN * ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) * ( DDR / DDR ) ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC / MUR ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.6131386861313869, "obj2": 0.27772682820574374}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( DDR / DDR ) ) ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Min( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - ( ( ( MUM - ( ( MLU * ( CS - MLU ) ) + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8175182481751825, "obj2": 0.09184428292066664}, {"determining": "( ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - CRS ) ) + ( DDR - MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( MUC,MUM ) ) ) ,( ( ( MUM + RMSe ) - ( CS * MUR ) ) + DS ) )", "obj1": 0.6697080291970803, "obj2": 0.222095194535377}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * ( FirstVNF_RAM_Server * PN ) ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( MUR + ( Max( MLU,DS ) + MUR ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.781021897810219, "obj2": 0.1106576398610802}, {"determining": "( ( ( FirstVNF_Mem * AMS ) / RRS ) + Min( FirstVNF_CPU ,Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( MUC / ( MUC + ( MUC - Max( ( ( MUC * DS ) * ( MUM - RCSe ) ),DS ) ) ) ) + Max( CS,MUM ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "Max( ( ( FirstVNF_CPU + ARS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( ( ( ( RRS - FirstVNF_Mem ) - ( AMS + ( MDR * FirstVNF_CPU ) ) ) * BR ) - ( FirstVNF_CPU + ARS ) ) )", "choosing": "Max( MUR,( MUR + ( Max( Min( ( DS * DS ) ,( RRSe * ( MLU * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) - ( ( CS * DS ) - CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6120380861396301}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6514598540145985, "obj2": 0.2365507426907431}, {"determining": "( ( ( FirstVNF_RAM_Server - AMS ) * PN ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC / MUR ) ) + ( ( ( ( ( RRSe / RMSe ) * ( CS / MUM ) ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( Min( RRSe ,MUM ),MUR ) + RMSe ) ) ) )", "obj1": 0.5364963503649635, "obj2": 0.3982640830289412}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( ACS / MRS ) - ACS ) ,( MDR / ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( MUR * MUC ) ) ) )", "obj1": 0.6970802919708029, "obj2": 0.1902427647305314}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) + Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Const ) ) ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4744525547445255, "obj2": 0.4916086335491075}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( PN + DDR ) ,Const ) + BR ) ) ) + ( ( RRS - DDR ) + ( BR - MDR ) ) )", "choosing": "( Max( MUM,MUR ) * Max( Min( DS ,Max( ( MUC + CS ),RRSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR * ( Max( MUR,MUM ) - MUR ) ) ) ) ) ) )", "obj1": 0.9854014598540146, "obj2": 0.0027197869129221845}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ),( FirstVNF_RAM_Server / RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( MUM / ( MUM + RMSe ) ) )", "obj1": 0.5237226277372263, "obj2": 0.4151585495372451}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) ,( ( FirstVNF_RAM_Server - AMS ) - ( ( FirstVNF_Mem_Server - ( DDR - FirstVNF_Mem_Server ) ) * PN ) ) ) ) )", "choosing": "( Min( ( RRSe + ( CS - ( RRSe + CS ) ) ) ,( CS + ( CS + MUC ) ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( CS + MUC ) ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( ( BR + ( MDR / FirstVNF_CPU_Server ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( ( Min( MUR ,MUR ) + Min( CS ,RCSe ) ) * RMSe ),( ( MUC / RCSe ) + MUR ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.5565693430656934, "obj2": 0.36980052457324813}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ) ) / ( Min( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,ARS ) ,FirstVNF_Mem_Server ) / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( ( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ,Max( MLU,MLU ) ) ) / ( Max( ( ( ( CS / RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - ( ( CS * MUR ) * MUC ) ),RCSe ) )", "obj1": 0.4343065693430657, "obj2": 0.5574258658672333}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6861313868613139, "obj2": 0.20368974535661005}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( ( ( FirstVNF_CPU - MDR ) / MRS ) + FirstVNF_Mem_Server ) * ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - ( PN - MDR ) ) ) / ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( ( Max( DS,MUR ) - MUR ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) + ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.7390510948905109, "obj2": 0.15417365162791838}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * ( ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) + ( Max( AMS,MRS ) * DDR ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + FirstVNF_Mem ) ) * ( ( MRS * FirstVNF_RAM_Server ) - ( DDR - ( Const + ( Const / MRS ) ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,( RRSe / MUC ) ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( MUC,( ( MLU + DS ) + ( MLU - MUM ) ) ) - ( Min( RRSe ,DS ) + ( RMSe + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6514598540145985, "obj2": 0.2365507426907431}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6405109489051095, "obj2": 0.24505548311959174}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + ( MUR / ( CS * RCSe ) ) ),( Min( ( Min( CS ,RMSe ) * ( MLU + ( RCSe - MUR ) ) ) ,( DS * Max( ( MUC - MUR ),( RMSe - CS ) ) ) ) / ( MLU * RRSe ) ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.4142335766423358, "obj2": 0.6014009938198519}, {"determining": "( ( Max( ARS,ACS ) / ( ( Min( FirstVNF_RAM ,AMS ) / ARS ) - ( ( PN + ( ( AMS / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) / ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) + ( Const - Const ) )", "choosing": "( ( ( ( ( CS - RCSe ) / ( Max( CS,MUM ) / MUM ) ) / Max( Min( ( Min( Min( RMSe ,CS ) ,MUC ) / ( Max( CS,RRSe ) / ( DS + MUR ) ) ) ,( RMSe * ( DS * Max( RRSe,MLU ) ) ) ),Min( ( Max( MUM,DS ) / ( CS - DS ) ) ,MLU ) ) ) - MUR ) - Max( Min( ( Min( ( MUC - ( RMSe * MUR ) ) ,( MLU - RRSe ) ) + MLU ) ,RCSe ),( ( MUC * Min( DS ,Min( RMSe ,Min( CS ,( MUC / MUR ) ) ) ) ) - RMSe ) ) )", "obj1": 0.5875912408759124, "obj2": 0.32248563633891797}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.677007299270073, "obj2": 0.2093734250656348}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( PN - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUC * RRSe ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.4343065693430657, "obj2": 0.5574258658672333}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( PN * Max( FirstVNF_CPU_Server,Max( ARS,ACS ) ) ),( BR - MDR ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),CS )", "obj1": 0.49452554744525545, "obj2": 0.46380613480039307}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( ( MRS * MDR ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Min( DS ,DS ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),Max( MUR,( ( RRSe * CS ) + ( MUC - MLU ) ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.13653983871381137}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( ( PN * Max( FirstVNF_CPU_Server,Max( ARS,ACS ) ) ),( BR - MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( MUR / Min( DS ,MLU ) ),( ( MUC / RCSe ) + MUR ) ) ) ,( Min( ( RRSe + CS ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.49452554744525545, "obj2": 0.46380613480039307}, {"determining": "( ( Min( CRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MUC ) ) ) ),( MUR / DS ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( ( FirstVNF_RAM * ( PN / CRS ) ) * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ,( MDR * MRS ) ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),MUR ) ,( ( RRSe / DS ) / MUM ) ) + Max( MUC,RCSe ) )", "obj1": 0.6204379562043796, "obj2": 0.2720126285173436}, {"determining": "( ( ( PN * ( Min( ACS ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( ( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * ( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Max( AMS,MRS ) * DDR ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( MUC,( ( MLU - DS ) + ( MLU - MUM ) ) ) - ( RRSe * ( MLU * MUC ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6113138686131386, "obj2": 0.2792147669422738}], "31": [{"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( DDR,DDR ) ) ) ) ) * ( Const / Min( ( ( FirstVNF_CPU / FirstVNF_RAM ) / FirstVNF_CPU_Server ) ,Max( PN,( BR * FirstVNF_RAM ) ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( Max( MUR,( DS - DS ) ) - Min( ( MUC * MUM ) ,RRSe ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( DDR,DDR ) ) ) ) ) * ( Const / Min( ( ( FirstVNF_CPU / FirstVNF_RAM ) / FirstVNF_CPU_Server ) ,Max( PN,( BR * FirstVNF_RAM ) ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( Max( MUR,( DS - DS ) ) - Min( ( MUC * MUM ) ,RRSe ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + ( FirstVNF_RAM / ( RRS - ARS ) ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( DDR / FirstVNF_CPU_Server ),Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ),( RRS * MRS ) )", "choosing": "( ( MUR - ( MLU + MUM ) ) * Min( DS ,Min( ( ( MLU / MUM ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - Min( Min( ( ( RMSe + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( RRSe - Max( ( MUM + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / MUM ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.885036496350365, "obj2": 0.05117598612578255}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU_Server - Max( Max( DDR,( FirstVNF_CPU - AMS ) ),DDR ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( ( MUM + ( MUC * ( RCSe / MLU ) ) ) - RCSe ) )", "obj1": 0.9087591240875912, "obj2": 0.04482466136593247}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( MUR - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5401459854014599, "obj2": 0.3797328484896326}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ( ( FirstVNF_Mem - ( Max( RRS,ARS ) * MRS ) ) / DDR ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( DS + MUC ) / ( ( MUR / MUC ) + CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( ( RRSe + CS ),MLU ) ) )", "obj1": 0.572992700729927, "obj2": 0.3372195341565952}, {"determining": "( ( ( ( PN + RRS ) * DDR ) + ( MDR - PN ) ) + Min( ( ( ( ( MDR + ( ( AMS + CRS ) - ( AMS * FirstVNF_Mem ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( MDR / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( Max( AMS,MDR ) * ( RRS * MRS ) ) ) )", "choosing": "Max( ( Min( ( MUM * MLU ) ,MUC ) - Max( MLU,MUM ) ),( Min( ( ( ( ( MLU + MUM ) / MLU ) + MUR ) / ( MLU * RRSe ) ) ,( ( ( ( MUC / MUM ) + RRSe ) * ( ( ( RMSe / MUC ) + MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( RCSe - RRSe ) ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.025942228914761955}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem / MRS ) ) ) + ( ( Const + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) + ( PN / ACS ) )", "choosing": "( ( CS + MUC ) + Max( ( ( ( DS + ( ( ( RMSe * MUM ) * RRSe ) - ( MUC * MLU ) ) ) / ( DS * CS ) ) / Max( ( ( ( ( MUC * MLU ) - ( MUM + MUM ) ) + RRSe ) / MLU ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - MUR ) / RMSe ) ,CS ),( DS + ( MUR / ( CS * Min( ( MLU * RMSe ) ,MUC ) ) ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "( ( FirstVNF_RAM - CRS ) + Min( ( MDR * ( ( ARS * MDR ) * BR ) ) ,Min( ( Max( FirstVNF_CPU,Min( BR ,AMS ) ) * ( FirstVNF_CPU_Server / MDR ) ) ,( ( Max( DDR,AMS ) + CRS ) / PN ) ) ) )", "choosing": "( ( RRSe + Min( RMSe ,Max( MUM,DS ) ) ) + Min( Min( Min( DS ,DS ) ,MUM ) ,( Min( ( Min( MLU ,CS ) / ( ( ( MUR + MUM ) / Min( RCSe ,MUM ) ) - RCSe ) ) ,Max( RMSe,MUM ) ) + ( CS * MUC ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3559806692118027}, {"determining": "( ( ( ( ( AMS + ( FirstVNF_RAM + ( MDR + FirstVNF_RAM ) ) ) / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / RRS ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( MUC - ( ( MUM - MUM ) + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) ) )", "obj1": 0.5529197080291971, "obj2": 0.3648255719589994}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) * DDR ),DDR ) ) + Max( BR,AMS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( MUM + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + Max( MUC,MLU ) ) ) ),( DS / MUR ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1218599742751733}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Max( ARS,ACS ) / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "Max( MUR,( MUR - ( Max( ( ( MUC - MUR ) / ( RRSe / MUM ) ),( ( ( MUR + ( MUC - MUC ) ) + Min( MLU ,RRSe ) ) + ( CS + MUC ) ) ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.8686131386861314, "obj2": 0.05987096616433046}, {"determining": "( ( Min( FirstVNF_CPU ,RRS ) + Max( BR,MRS ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( CRS,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - ( ( ( MUM - ( ( MLU * ( CS - MLU ) ) + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.1857258927844819}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * ( ( CRS * MDR ) / ( MRS * PN ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( RRSe / ( MUR + RRSe ) ) ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.948905109489051, "obj2": 0.02443252454462571}, {"determining": "Min( ( ( ( MRS - BR ) + Min( Min( RRS ,FirstVNF_RAM_Server ) ,ACS ) ) - ( AMS / Max( ACS,BR ) ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR * RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( ( ( ( MLU * MUM ) + RRSe ) - RRSe ) / ( Min( Min( MLU ,MUR ) ,RCSe ) + MLU ) ) * Max( MUR,MUC ) ) / ( MUM / ( Min( MLU ,( CS / RMSe ) ) / CS ) ) ) ) * ( Max( MUC,RRSe ) / ( RRSe / DS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "( Max( FirstVNF_CPU_Server,Max( Min( ( Max( MDR,RRS ) + CRS ) ,FirstVNF_CPU_Server ),PN ) ) / Min( ( ( AMS / DDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( MUR,( ( CS - Max( MLU,Min( RMSe ,RMSe ) ) ) / DS ) ),MLU ) / Max( MLU,MLU ) ) / DS )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( ARS + Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Min( FirstVNF_Mem_Server ,DDR ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( RRSe * CS ) + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),( Min( RRSe ,CS ) - MLU ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + Max( MLU,DS ) ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( ( MRS * MDR ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Min( DS ,DS ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),Max( MUR,( ( RRSe * CS ) + ( MUC - MLU ) ) ) ) )", "obj1": 0.7572992700729927, "obj2": 0.13503605498568882}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( FirstVNF_Mem_Server * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) )", "obj1": 0.5127737226277372, "obj2": 0.4440831776217089}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( Min( ( ( ACS / PN ) - FirstVNF_RAM ) ,Max( Max( AMS,FirstVNF_RAM ),MDR ) ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( MUR,( RCSe + ( RMSe - RRSe ) ) ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RMSe ) ),( Min( MUM ,MUM ) + ( MLU / ( CS / ( MUR + ( Max( MUR,RMSe ) - MUR ) ) ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.10023197582939618}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( RRS - ACS ) ,RRS ) ) ) / ( Min( PN ,AMS ) + ( ARS / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( Max( MUR,RRSe ) - ( RCSe / RRSe ) ) + RRSe ),RCSe ) ) + ( CS - ( MUR - MUC ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5912408759124088, "obj2": 0.30385047100880325}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( BR ,DDR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_Mem_Server,Min( ARS ,MDR ) ) ) ) + ( ( ( CRS * AMS ) + ARS ) * MRS ) )", "choosing": "( ( ( ( Max( CS,Max( MUM,RCSe ) ) - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Max( ( RMSe / ( ( ( DS / ( RRSe - MUR ) ) - MUC ) + ( Min( ( MUR * MUR ) ,MLU ) * ( RMSe - ( MUR / CS ) ) ) ) ),( RMSe * RMSe ) ) + MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5115637835983325}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( MDR - PN ) ) + Min( ( ( ( Min( Min( ( ACS * ACS ) ,FirstVNF_Mem_Server ) ,CRS ) / MRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,Min( ACS ,FirstVNF_Mem ) ) ) + MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + ( MUR / MLU ) ) + ( ( RMSe / CS ) * ( MUC + MUM ) ) )", "obj1": 0.7153284671532847, "obj2": 0.17416544276359205}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7408759124087592, "obj2": 0.14687773305399787}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) ,( ( FirstVNF_RAM_Server - AMS ) - ( ( FirstVNF_Mem_Server - ( DDR - FirstVNF_Mem_Server ) ) * PN ) ) ) ) )", "choosing": "( Min( ( RRSe + ( CS - ( RRSe + CS ) ) ) ,( CS + ( CS + MUC ) ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( CS + MUC ) ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM - MDR ) ) + ( ( ( Max( FirstVNF_CPU,ARS ) - MDR ) * ( Const / Min( ( MDR / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + Min( BR ,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( FirstVNF_Mem_Server / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( Min( Max( MLU,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( ( MUM + Max( CS,Min( ( RMSe * MUR ) ,CS ) ) ) - MLU ) ) )", "obj1": 0.6624087591240876, "obj2": 0.22737730751984062}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( DDR / DDR ) ) ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Min( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - ( ( ( MUM - ( ( MLU * ( CS - MLU ) ) + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8175182481751825, "obj2": 0.09184428292066663}, {"determining": "( ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - CRS ) ) + ( DDR - MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( MUC,MUM ) ) ) ,( ( ( MUM + RMSe ) - ( CS * MUR ) ) + DS ) )", "obj1": 0.6697080291970803, "obj2": 0.222095194535377}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * Min( FirstVNF_Mem ,( FirstVNF_CPU + ACS ) ) ) * MDR ) ) + ( ( PN * FirstVNF_RAM_Server ) * ( BR - MDR ) ) )", "choosing": "( Min( DS ,DS ) * Max( Min( DS ,Max( ( DS * MUR ),RRSe ) ),Max( RCSe,( ( CS * RRSe ) + ( MUC - MLU ) ) ) ) )", "obj1": 0.7518248175182481, "obj2": 0.14109213712137475}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - ( MUC - MUR ) ) ) * MLU ) )", "obj1": 0.6952554744525548, "obj2": 0.1922803145996594}, {"determining": "( ( MRS / ( ( FirstVNF_Mem_Server - MDR ) / FirstVNF_CPU_Server ) ) - Min( MDR ,( Min( Const ,AMS ) - ( ( Min( FirstVNF_Mem ,MRS ) + PN ) / Max( ( ( CRS * MDR ) / ( Max( Const,CRS ) * PN ) ),BR ) ) ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( DS ,MUR ) ) + ( ( MLU - Min( ( Min( MUR ,RMSe ) + ( Min( Max( MLU,MLU ) ,Max( RCSe,CS ) ) + ( CS * RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * Min( CS ,RMSe ) ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.4051094890510949, "obj2": 0.6144093178284101}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( Min( ( FirstVNF_CPU_Server - ( PN - FirstVNF_CPU ) ) ,RRS ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + Max( MUR,Max( MUM,( CS * RRSe ) ) ) ),MUR ) ) ,( RRSe - ( MLU + MUR ) ) )", "obj1": 0.6332116788321168, "obj2": 0.2539863023436051}, {"determining": "Max( ( Max( ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),Min( ARS ,MDR ) ) - ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( FirstVNF_CPU / Min( ( ( DDR + DDR ) / FirstVNF_CPU_Server ) ,Max( ( ( AMS + FirstVNF_RAM ) - Max( RRS,FirstVNF_CPU_Server ) ),DDR ) ) ) ) ),Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Max( MUR,( ( RRSe - DS ) + RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6411219003899359}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7299270072992701, "obj2": 0.15619746953498767}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( RRS,( FirstVNF_RAM_Server / RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42085657471712834}, {"determining": "Max( ( ( FirstVNF_CPU + ARS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( ( ( ( RRS - FirstVNF_Mem ) - ( AMS + ( MDR * FirstVNF_CPU ) ) ) * BR ) - ( FirstVNF_CPU + ARS ) ) )", "choosing": "Max( MUR,( MUR + ( Max( Min( ( DS * DS ) ,( RRSe * ( MLU * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) - ( ( CS * DS ) - CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6120380861396301}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU_Server * BR ) - ( Max( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * RRS ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( BR,MRS ) ) ) )", "choosing": "( ( MUC * ( RMSe / MUM ) ) + ( RRSe * ( MUR + Min( ( RCSe / RRSe ) ,( MLU * ( ( MLU / RRSe ) - ( ( RCSe + CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.3216874493304793}, {"determining": "( ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) / ( ( FirstVNF_RAM_Server - AMS ) * ( RRS + Max( AMS,( ( ( FirstVNF_RAM - ( Const / FirstVNF_CPU_Server ) ) / CRS ) + MDR ) ) ) ) )", "choosing": "( Max( ( ( Min( ( MUM * RMSe ) ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( DS ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5364963503649635, "obj2": 0.3982640830289412}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.49452554744525545, "obj2": 0.4593356699357887}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( CRS,FirstVNF_RAM_Server ) + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( ( ( MLU * ( CS - MLU ) ) + MUR ) - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6551094890510949, "obj2": 0.23263638473743214}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( Max( Min( MRS ,ACS ),( FirstVNF_RAM_Server - MDR ) ) + ( ( ACS - Const ) / RRS ) )", "choosing": "( ( MUR * MUC ) + Max( Max( MUC,Min( DS ,( RRSe - RMSe ) ) ),RCSe ) )", "obj1": 0.4708029197080292, "obj2": 0.4954327811456758}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( MUR - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6405109489051095, "obj2": 0.24505548311959174}, {"determining": "( ( ( ( CRS + FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / ( MRS + ( ACS + FirstVNF_CPU_Server ) ) ) ) + ( MDR - PN ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM - RMSe ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / ( RCSe + MLU ) ) ) * Max( Min( ( MLU * RRSe ) ,( RCSe / RRSe ) ),MUR ) ) ) ) ) + MUC )", "obj1": 0.5602189781021898, "obj2": 0.3636496776951247}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RRSe - ( MLU + MUR ) ) ) )", "obj1": 0.6733576642335767, "obj2": 0.21308781641861702}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,MDR ) ) ) - ( DDR / DDR ) ) ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Min( ( ( MDR / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( ( MUC + ( ( MUM - RRSe ) / ( ( MLU / DS ) - ( DS / MUC ) ) ) ) / RMSe ) + Max( Max( MUR,( DS / ( CS - ( DS - ( MUC + MUM ) ) ) ) ),MLU ) )", "obj1": 0.8156934306569343, "obj2": 0.09295718767188905}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + ( MUR / ( CS * RCSe ) ) ),( Min( ( Min( CS ,RMSe ) * ( MLU + ( RCSe - MUR ) ) ) ,( DS * Max( ( MUC - MUR ),( RMSe - CS ) ) ) ) / ( MLU * RRSe ) ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.4142335766423358, "obj2": 0.6014009938198519}, {"determining": "Max( Max( BR,Max( FirstVNF_CPU,ARS ) ),Min( ( ARS + ( ( MDR + AMS ) * ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( ( ( BR * PN ) + ( BR - MDR ) ) / Max( ( AMS * RRS ),( FirstVNF_CPU_Server + ARS ) ) ) ) ) ) ,( DDR / ACS ) ) )", "choosing": "Max( MUR,( Max( Max( MUR,( MUC - RCSe ) ),MUR ) - ( RMSe - ( ( DS * ( ( MUR - ( CS * RMSe ) ) - RRSe ) ) + ( MUR + Max( MLU,DS ) ) ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5499850750928451}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - ( ACS - ( Max( Const,( FirstVNF_Mem * FirstVNF_RAM ) ) - PN ) ) ) ) + ( BR + ( ( FirstVNF_RAM_Server - ( AMS - DDR ) ) - ( ACS - ARS ) ) ) )", "choosing": "( ( ( MUR - RMSe ) / ( RRSe + DS ) ) * Max( MLU,( ( Max( MLU,Min( RMSe ,MUM ) ) * DS ) * Max( ( MLU * MUM ),DS ) ) ) )", "obj1": 0.9653284671532847, "obj2": 0.011064980167964429}, {"determining": "( ( ( Max( ( BR + Max( MRS,( FirstVNF_CPU + FirstVNF_RAM ) ) ),( Max( ARS,ACS ) - FirstVNF_Mem ) ) * ( ( MDR * ( ( CRS / Const ) * DDR ) ) + FirstVNF_RAM ) ) + ( PN - MDR ) ) + ( BR + ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( ( Min( ( RRSe + CS ) ,Min( MLU ,( CS + ( RCSe / ( ( MLU - DS ) - RRSe ) ) ) ) ) + DS ) ,( RRSe - Max( ( MUR / Min( DS ,MLU ) ),( ( MUC / RCSe ) + MUR ) ) ) )", "obj1": 0.9726277372262774, "obj2": 0.00553812699627579}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.42700729927007297, "obj2": 0.582092969388597}, {"determining": "Max( Max( AMS,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ),( ( ( Max( BR,Max( CRS,PN ) ) - Max( FirstVNF_CPU,ARS ) ) * BR ) - ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( CS + RCSe ),( MUR + ( Max( ( ( DS * DS ) * ( RCSe - RMSe ) ),( ( CS + MUM ) * ( RMSe + MLU ) ) ) - ( CS - CS ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5998991963584823}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) ) * ( ( MRS * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( ( MLU - MUM ) ,RMSe ) ,( Min( MUC ,MUM ) - ( MUM - MLU ) ) ) + DS ) )", "obj1": 0.6240875912408759, "obj2": 0.2662648440449552}, {"determining": "Max( Min( ( ( Min( CRS ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) * BR ) * MDR ) ,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server * MRS ) )", "choosing": "( ( MUR - ( MLU + MUR ) ) * Min( DS ,Min( Min( DS ,( Min( MUR ,MUC ) - ( RCSe + RRSe ) ) ) ,( ( Min( RMSe ,RRSe ) / ( RCSe + RRSe ) ) - Min( Min( ( ( MUC + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6492792378733494}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - Min( FirstVNF_RAM ,BR ) ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server / PN ),FirstVNF_CPU_Server ) + BR ) ) - Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( RCSe + ( MUR * ( CS * ( ( MLU * Max( Min( ( RMSe + RCSe ) ,( MUM + MLU ) ),( CS / ( MUM - MUM ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.9525547445255474, "obj2": 0.02024833016022477}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM_Server - MDR ) ) + ( ( Min( Max( ARS,FirstVNF_CPU ) ,MDR ) * ( Const / Min( ( ( MRS * FirstVNF_RAM_Server ) / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Min( RRS ,PN ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( Max( ( MLU / ( Max( MUR,( RCSe / MLU ) ) + MLU ) ),Max( RMSe,Max( ( ( RMSe * DS ) + RMSe ),MUC ) ) ) * CS ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5428536266276126}, {"determining": "( Max( MDR,( Max( FirstVNF_RAM_Server,PN ) + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,( CS * RMSe ) ) ) ) ),RCSe ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * ( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Max( AMS,MRS ) * DDR ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( MUC,( ( MLU - DS ) + ( MLU - MUM ) ) ) - ( RRSe * ( MLU * MUC ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6113138686131386, "obj2": 0.2792147669422738}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( FirstVNF_RAM_Server * PN ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( ( ( Min( MUR ,MUR ) + Min( CS ,RCSe ) ) * RMSe ) + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + Max( MLU,DS ) ) )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6861313868613139, "obj2": 0.20368974535661005}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( ( ( FirstVNF_CPU - MDR ) / MRS ) + FirstVNF_Mem_Server ) * ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - ( PN - MDR ) ) ) / ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( ( Max( DS,MUR ) - MUR ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) + ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.7390510948905109, "obj2": 0.15417365162791838}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + Max( MUR,( MUR + ( DS / MUM ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4818268819150492}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( Min( MDR ,FirstVNF_CPU ) ,Const ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( RMSe + MUM ) + ( CS + MUC ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,MUM ) ) )", "obj1": 0.6131386861313869, "obj2": 0.27686513146078573}, {"determining": "( ( ( FirstVNF_Mem * AMS ) / RRS ) + Min( FirstVNF_CPU ,Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( MUC / ( MUC + ( MUC - Max( ( ( MUC * DS ) * ( MUM - RCSe ) ),DS ) ) ) ) + Max( CS,MUM ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( MRS + ( MDR + RRS ) ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server * Const ) ) ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),( RCSe / MUM ) ) ) ,( Min( Min( Max( ( ( DS * DS ) * Max( ( MLU * MUM ),DS ) ),( ( RCSe + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,( Min( MUC ,MUM ) - ( MUM - MLU ) ) ) + DS ) )", "obj1": 0.6040145985401459, "obj2": 0.2843899684548115}, {"determining": "( ( ( FirstVNF_RAM_Server - AMS ) * PN ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * MLU ) )", "obj1": 0.5364963503649635, "obj2": 0.3982640830289412}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( ACS / MRS ) - ACS ) ,( MDR / ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( MUR * MUC ) ) ) )", "obj1": 0.6970802919708029, "obj2": 0.1902427647305314}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6405109489051095, "obj2": 0.24505548311959174}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.8613138686131386, "obj2": 0.06204103311177514}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( CRS + BR ) ) * Max( CRS,Const ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( MUR,( Max( Max( ( RCSe - RMSe ),Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ) ) ) ,( RRSe - ( MLU + RCSe ) ) )", "obj1": 0.6277372262773723, "obj2": 0.2612256584078883}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6514598540145985, "obj2": 0.2365507426907431}, {"determining": "( ( Max( ( ( Min( ACS ,RRS ) * FirstVNF_Mem_Server ) / MDR ),PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + BR ) ) * ( ( CRS * MDR ) / ( MRS * PN ) ) ) / MDR ) ) )", "choosing": "( Min( Min( ( MLU / RMSe ) ,( MUR / Max( Min( MUR ,( MUR - RRSe ) ),MLU ) ) ) ,DS ) + ( Min( Min( DS ,DS ) ,( ( MUR + RRSe ) / RRSe ) ) - ( ( ( RRSe - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.001015782480344161}, {"determining": "( ( ( PN * ( ( DDR + DDR ) * Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) ) ) + ( PN - MDR ) ) + Min( MRS ,( AMS * FirstVNF_RAM ) ) )", "choosing": "( Max( ( MLU / RRSe ),CS ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7956204379562044, "obj2": 0.10102084713889391}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( Min( RRS ,( ( AMS / FirstVNF_Mem ) - MDR ) ),( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,( MUC + ( RRSe / MLU ) ) ) ),Min( Min( DS ,DS ) ,MUM ) )", "obj1": 0.5237226277372263, "obj2": 0.4151585495372451}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6806569343065694, "obj2": 0.2086019946722175}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( Min( ( Min( AMS ,MDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( Min( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) * ( RCSe * ( CS + RMSe ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5689032902273858}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + ( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Min( Max( DS,( ( RRSe - DS ) + MLU ) ) ,( ( RCSe + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5026121506458631}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * MLU ) )", "obj1": 0.718978102189781, "obj2": 0.1659209018422467}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / MDR ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( ( MLU / MUM ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - Min( Min( ( ( MUC + DS ) + MUM ) ,DS ) ,CS ) ) ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6861313868613139, "obj2": 0.20368974535661005}, {"determining": "Min( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,Max( Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ),( FirstVNF_RAM_Server / RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( MUM / ( MUM + ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) ) ) )", "obj1": 0.5, "obj2": 0.45857346803012855}, {"determining": "( ( Max( ARS,ACS ) / ( ( Min( FirstVNF_RAM ,AMS ) / ARS ) - ( ( PN + ( ( AMS / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) / ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) ) + ( Const - Const ) )", "choosing": "( ( ( ( ( CS - RCSe ) / ( Max( CS,MUM ) / MUM ) ) / Max( Min( ( Min( Min( RMSe ,CS ) ,MUC ) / ( Max( CS,RRSe ) / ( DS + MUR ) ) ) ,( RMSe * ( DS * Max( RRSe,MLU ) ) ) ),Min( ( Max( MUM,DS ) / ( CS - DS ) ) ,MLU ) ) ) - MUR ) - Max( Min( ( Min( ( MUC - ( RMSe * MUR ) ) ,( MLU - RRSe ) ) + MLU ) ,RCSe ),( ( MUC * Min( DS ,Min( RMSe ,Min( CS ,( MUC / MUR ) ) ) ) ) - RMSe ) ) )", "obj1": 0.5875912408759124, "obj2": 0.32248563633891797}, {"determining": "( Max( ( PN * Max( FirstVNF_CPU_Server,( ( ( FirstVNF_CPU_Server - ACS ) - ( FirstVNF_RAM_Server * MRS ) ) / CRS ) ) ),( BR - MDR ) ) + ( ( ACS - Const ) / RRS ) )", "choosing": "( ( MUC * RRSe ) + ( ( MUC - ( Max( Min( MLU ,( DS * ( MUR * MUM ) ) ),Max( RRSe,RRSe ) ) / RMSe ) ) - RCSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5822076123020558}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4804515975941925}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) + Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Const ) ) ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4744525547445255, "obj2": 0.4916086335491075}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( ( FirstVNF_RAM * ( PN / CRS ) ) * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ,( MDR * MRS ) ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),MUR ) ,( ( RRSe / DS ) / MUM ) ) + Max( MUC,RCSe ) )", "obj1": 0.6204379562043796, "obj2": 0.2720126285173436}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( MDR ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM_Server * MDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * ( ( ( MDR - PN ) + PN ) + MRS ) ) * BR ) * MDR ),( ( ( ARS * MDR ) * BR ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( PN / Const ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( ( ( MUM * ( MUC * ( CS + CS ) ) ) - RCSe ) - ( MUM + DS ) ) - MUR ) + ( DS - ( Max( MUR,Min( RRSe ,MUM ) ) + RMSe ) ) ) + Max( ( MUR / ( MUC - RRSe ) ),MUR ) )", "obj1": 0.7755474452554745, "obj2": 0.11820924282537436}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( RRSe - ( MLU + MUR ) ) )", "obj1": 0.6295620437956204, "obj2": 0.2564002980934058}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( BR + ( Min( FirstVNF_CPU ,FirstVNF_RAM ) - Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( CS / RRSe ) ) * ( MLU * ( ( DS * DS ) * Max( ( MLU * MUM ),Max( DS,RMSe ) ) ) ) )", "obj1": 0.9616788321167883, "obj2": 0.01349850189001753}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - ( ( ( MUM - ( ( MLU * ( CS - MLU ) ) + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6514598540145985, "obj2": 0.2365507426907431}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( MDR / ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_RAM_Server,ARS ) + AMS ) ) * ( Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ),( ( CRS / BR ) - FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU_Server - ACS ) - RRS ) ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + Min( ( MUM * RRSe ) ,MUR ) ) ) ) / Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.5967153284671532, "obj2": 0.2923894559595689}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - ( MUM - MLU ) ) )", "obj1": 0.7171532846715328, "obj2": 0.17175284175103755}, {"determining": "( ( Min( CRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * ACS ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( AMS ,FirstVNF_CPU ) ) ) * ( AMS + BR ) ) * Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + FirstVNF_Mem ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( Min( Min( DS ,( MLU / RMSe ) ) ,( CS + MUC ) ) + Max( Max( CS,Min( RRSe ,CS ) ),( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( RRSe + MUR ) ) ) ),( MUR / DS ) ) ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}], "32": [{"determining": "Max( Max( ( Const + ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),Max( RRS,( ARS * ( ( ( FirstVNF_CPU_Server + PN ) - ACS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( CS,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),MUR ) ) ,( Min( Min( Max( ( ( RMSe * DS ) * ( RRSe * ( MLU * MUC ) ) ),( ( CS + Min( RRSe ,RCSe ) ) - ( RMSe + MLU ) ) ) ,RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( Max( ( DDR / ACS ),PN ) + ( RRS - Min( AMS ,FirstVNF_RAM_Server ) ) ) - ( DDR / DDR ) ) ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Min( ( ( AMS / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( ( RMSe / DS ) - ( ( RRSe - ( Min( MLU ,MUM ) + RCSe ) ) / Min( Max( ( ( ( MLU - MUR ) + ( MUM * RMSe ) ) - MLU ),RCSe ) ,( Max( MUC,( RMSe + DS ) ) - MLU ) ) ) ) + ( Min( MUC ,MUM ) - ( ( ( MUM - ( RMSe + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( DDR,DDR ) ) ) ) ) * ( Const / Min( ( ( FirstVNF_CPU / FirstVNF_RAM ) / FirstVNF_CPU_Server ) ,Max( PN,( BR * FirstVNF_RAM ) ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( Max( MUR,( DS - DS ) ) - Min( ( MUC * MUM ) ,RRSe ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + ( FirstVNF_RAM / ( RRS - ARS ) ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * ( Max( ( DDR / FirstVNF_CPU_Server ),Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ),( RRS * MRS ) )", "choosing": "( ( ( ( Min( DS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ) - ( MLU + MUM ) ) * Min( DS ,Min( ( ( MLU / MUM ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - Min( Min( ( ( RMSe + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( RRSe - Max( ( MUM + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / MUM ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.885036496350365, "obj2": 0.05117598612578255}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU_Server - Max( Max( DDR,( FirstVNF_CPU - AMS ) ),DDR ) ) + ( PN - MDR ) ) ) / ( FirstVNF_Mem_Server - Min( ( DDR / PN ) ,Const ) ) )", "choosing": "( Max( ( ( Min( CS ,( ( RRSe - ( MLU + MUR ) ) - RRSe ) ) * ( RCSe + ( MLU / MUM ) ) ) / ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( ( MUM + ( MUC * ( RCSe / MLU ) ) ) - RCSe ) )", "obj1": 0.9087591240875912, "obj2": 0.04482466136593247}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ( ( FirstVNF_Mem - ( Max( RRS,ARS ) * MRS ) ) / DDR ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( DS + MUC ) / ( ( MUR / MUC ) + CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( ( RRSe + CS ),MLU ) ) )", "obj1": 0.572992700729927, "obj2": 0.3372195341565952}, {"determining": "( ( ( ( PN + RRS ) * DDR ) + ( MDR - PN ) ) + Min( ( ( ( ( MDR + ( ( AMS + CRS ) - ( AMS * FirstVNF_Mem ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( MDR / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( Max( AMS,MDR ) * ( RRS * MRS ) ) ) )", "choosing": "Max( ( Min( ( MUM * MLU ) ,MUC ) - Max( MLU,MUM ) ),( Min( ( ( ( ( MLU + MUM ) / MLU ) + MUR ) / ( MLU * RRSe ) ) ,( ( ( ( MUC / MUM ) + RRSe ) * ( ( ( RMSe / MUC ) + MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( RCSe - RRSe ) ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.025942228914761955}, {"determining": "( ( FirstVNF_RAM - CRS ) + Min( ( MDR * ( ( ARS * MDR ) * BR ) ) ,Min( ( Max( FirstVNF_CPU,Min( BR ,AMS ) ) * ( FirstVNF_CPU_Server / MDR ) ) ,( ( Max( DDR,AMS ) + CRS ) / PN ) ) ) )", "choosing": "( ( RRSe + Min( RMSe ,Max( MUM,DS ) ) ) + Min( Min( Min( DS ,DS ) ,MUM ) ,( Min( ( Min( MLU ,CS ) / ( ( ( MUR + MUM ) / Min( RCSe ,MUM ) ) - RCSe ) ) ,Max( RMSe,MUM ) ) + ( CS * MUC ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3559806692118027}, {"determining": "( ( ( ( ( AMS + ( FirstVNF_RAM + ( MDR + FirstVNF_RAM ) ) ) / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / RRS ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( MUC - ( ( MUM - MUM ) + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) ) )", "obj1": 0.5529197080291971, "obj2": 0.3648255719589994}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + Max( MLU,DS ) ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5054744525547445, "obj2": 0.4430167498492174}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) * DDR ),DDR ) ) + Max( BR,AMS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( MUM + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + Max( MUC,MLU ) ) ) ),( DS / MUR ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1218599742751733}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * MUR ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + Max( MLU,DS ) ) )", "obj1": 0.5857664233576643, "obj2": 0.3142769036311012}, {"determining": "( ( Min( FirstVNF_CPU ,RRS ) + Max( BR,MRS ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( CRS,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - ( ( ( MUM - ( ( MLU * ( CS - MLU ) ) + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.1857258927844819}, {"determining": "( ( MRS / ( ( FirstVNF_Mem_Server - MDR ) / FirstVNF_CPU_Server ) ) - Min( MDR ,( Min( Const ,AMS ) - ( ( Min( FirstVNF_Mem ,MRS ) + PN ) / Max( ( ( CRS * MDR ) / ( Max( Const,CRS ) * PN ) ),BR ) ) ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( DS ,MUR ) ) + ( ( MLU - Min( ( Min( MUR ,RMSe ) + ( Min( Max( MLU,MLU ) ,Max( RCSe,CS ) ) + ( CS * RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.5401459854014599, "obj2": 0.3797328484896326}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,( FirstVNF_RAM_Server - AMS ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,ARS ),Min( ARS ,MDR ) ) )", "choosing": "( ( ( ( Max( CS,Max( MUM,RCSe ) ) - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Min( CS ,Max( ( RRSe - ( MLU + MUC ) ),RRSe ) ) * RCSe ) )", "obj1": 0.7737226277372263, "obj2": 0.11820508087426809}, {"determining": "( Max( FirstVNF_CPU_Server,Max( Min( ( Max( MDR,RRS ) + CRS ) ,FirstVNF_CPU_Server ),PN ) ) / Min( ( ( AMS / DDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( MUR,( ( CS - Max( MLU,Min( RMSe ,RMSe ) ) ) / DS ) ),MLU ) / Max( MLU,MLU ) ) / DS )", "obj1": 0.5328467153284672, "obj2": 0.41078270653911214}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * ( ( CRS * MDR ) / ( MRS * PN ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( RRSe / ( MUR + RRSe ) ) ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.948905109489051, "obj2": 0.02443252454462571}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( ( MRS * MDR ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Min( DS ,DS ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),Max( MUR,( ( RRSe * CS ) + ( MUC - MLU ) ) ) ) )", "obj1": 0.7572992700729927, "obj2": 0.13503605498568882}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * MLU ) )", "obj1": 0.718978102189781, "obj2": 0.1659209018422467}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MUC,MLU ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.43795620437956206, "obj2": 0.5473282535468954}, {"determining": "Min( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,Max( Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ),( FirstVNF_RAM_Server / RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( MUM / ( MUM + ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) ) ) )", "obj1": 0.5, "obj2": 0.45857346803012855}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM_Server - MDR ) ) + ( ( Min( Max( ARS,FirstVNF_CPU ) ,MDR ) * ( Const / Min( ( ( MRS * FirstVNF_RAM_Server ) / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Min( RRS ,PN ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( Max( ( MLU / ( Max( MUR,( RCSe / MLU ) ) + MLU ) ),Max( RMSe,Max( ( ( RMSe * DS ) + RMSe ),MUC ) ) ) * CS ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5428536266276126}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * Min( CS ,RMSe ) ) ),( Max( Min( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + Min( MLU ,RRSe ) ) ) + MLU ) ) ) + Max( ( MUR / ( MUC - MUR ) ),MUR ) )", "obj1": 0.4051094890510949, "obj2": 0.6144093178284101}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( MDR - PN ) ) + Min( ( ( ( Min( Min( ( ACS * ACS ) ,FirstVNF_Mem_Server ) ,CRS ) / MRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,Min( ACS ,FirstVNF_Mem ) ) ) + MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + ( MUR / MLU ) ) + ( ( RMSe / CS ) * ( MUC + MUM ) ) )", "obj1": 0.7153284671532847, "obj2": 0.17416544276359205}, {"determining": "Max( Min( ( ( Min( CRS ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) * BR ) * MDR ) ,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server * MRS ) )", "choosing": "( ( MUR - ( MLU + MUR ) ) * Min( DS ,Min( Min( DS ,( Min( MUR ,MUC ) - ( RCSe + RRSe ) ) ) ,( ( Min( RMSe ,RRSe ) / ( RCSe + RRSe ) ) - Min( Min( ( ( MUC + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6492792378733494}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( ( RMSe + CS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.8065693430656934, "obj2": 0.09797269686682675}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( Min( FirstVNF_Mem ,Max( Min( FirstVNF_RAM ,ARS ),ACS ) ) ,( BR * MDR ) ) )", "choosing": "Max( MUR,( ( ( ( DS + RMSe ) - MUR ) / RRSe ) * MUC ) )", "obj1": 0.8704379562043796, "obj2": 0.05883024542157914}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM - MDR ) ) + ( ( ( Max( FirstVNF_CPU,ARS ) - MDR ) * ( Const / Min( ( MDR / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + Min( BR ,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( FirstVNF_Mem_Server / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( Min( Max( MLU,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( ( MUM + Max( CS,Min( ( RMSe * MUR ) ,CS ) ) ) - MLU ) ) )", "obj1": 0.6624087591240876, "obj2": 0.22737730751984062}, {"determining": "( Min( ( ( RRS + BR ) / FirstVNF_CPU ) ,( ( BR * ( DDR * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,RRS ) ) ) * Const ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + RRSe ) + ( ( RRSe * CS ) + ( ( ( MUR / ( DS - RCSe ) ) / CS ) - ( ( ( RMSe / MUC ) / MLU ) + RCSe ) ) ) ) ) * ( DS + DS ) )", "obj1": 0.75, "obj2": 0.141014923214409}, {"determining": "( ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - CRS ) ) + ( DDR - MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( MUC,MUM ) ) ) ,( ( ( MUM + RMSe ) - ( CS * MUR ) ) + DS ) )", "obj1": 0.6697080291970803, "obj2": 0.222095194535377}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( RRS - ACS ) ,RRS ) ) ) / ( Min( PN ,AMS ) + ( ARS / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( Max( MUR,RRSe ) - ( RCSe / RRSe ) ) + RRSe ),RCSe ) ) + ( CS - ( MUR - MUC ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5912408759124088, "obj2": 0.30385047100880325}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem / MRS ) ) ) + ( ( Const + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) + ( PN / ACS ) )", "choosing": "( ( CS + MUC ) + Max( ( ( ( DS + ( ( ( RMSe * MUM ) * RRSe ) - ( MUC * MLU ) ) ) / ( DS * CS ) ) / Max( ( ( ( ( MUC * MLU ) - ( MUM + MUM ) ) + RRSe ) / MLU ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - MUR ) / RMSe ) ,CS ),( DS + ( MUR / ( CS * Min( ( MLU * RMSe ) ,MUC ) ) ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7408759124087592, "obj2": 0.14687773305399787}, {"determining": "( ( FirstVNF_Mem_Server + PN ) + Min( ( MDR * MDR ) ,( ( Min( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - Min( FirstVNF_CPU ,ACS ) ) ) ,( AMS + BR ) ) * ( MDR + MDR ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS + ( RMSe - MLU ) ) - MLU ) ) + Max( MUC,DS ) )", "obj1": 0.5091240875912408, "obj2": 0.43307863372573285}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7299270072992701, "obj2": 0.15619746953498767}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( RRSe - ( MLU + MUR ) ) ) )", "obj1": 0.6733576642335767, "obj2": 0.21308781641861702}, {"determining": "Min( ( ( ( MRS - BR ) + Min( Min( RRS ,FirstVNF_RAM_Server ) ,ACS ) ) - ( AMS / Max( ACS,BR ) ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR * RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( ( ( ( MLU * MUM ) + RRSe ) - RRSe ) / ( Min( Min( MLU ,MUR ) ,RCSe ) + MLU ) ) * Max( MUR,MUC ) ) / ( MUM / ( Min( MLU ,( CS / RMSe ) ) / CS ) ) ) ) * ( Max( MUC,RRSe ) / ( RRSe / DS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( Min( RRS ,( ( AMS / FirstVNF_Mem ) - MDR ) ),( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,( MUC + ( RRSe / MLU ) ) ) ),Min( Min( DS ,DS ) ,MUM ) )", "obj1": 0.5237226277372263, "obj2": 0.4151585495372451}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "( ( ( DDR / DDR ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * MLU ) )", "obj1": 0.40145985401459855, "obj2": 0.6328233870957455}, {"determining": "( Max( MDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + ( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * MLU ) )", "obj1": 0.4343065693430657, "obj2": 0.5574258658672333}, {"determining": "( ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) / ( ( FirstVNF_RAM_Server - AMS ) * ( RRS + Max( AMS,( ( ( FirstVNF_RAM - ( Const / FirstVNF_CPU_Server ) ) / CRS ) + MDR ) ) ) ) )", "choosing": "( Max( ( ( Min( ( MUM * RMSe ) ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( DS ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5364963503649635, "obj2": 0.3982640830289412}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( ARS + Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Min( FirstVNF_Mem_Server ,DDR ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( RRSe * CS ) + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),( Min( RRSe ,CS ) - MLU ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "( ( DDR * ( FirstVNF_RAM - AMS ) ) + ( ACS + ( MDR / ARS ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,( MUC * MUR ) ) + MLU ) / DS ) + MUC ),MUR ) + RRSe ) + ( ( ( Max( ( DS * ( CS - ( RMSe / DS ) ) ),DS ) + ( ( Min( DS ,( RRSe / RMSe ) ) / DS ) - MUR ) ) * MUC ) * ( RRSe * MLU ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4738847498527962}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( DS ,MUR ) ) + ( ( MLU - Min( ( Min( RMSe ,MUR ) - MUC ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8394160583941606, "obj2": 0.07451347892270961}, {"determining": "( ( ( ( CRS + FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / ( MRS + ( ACS + FirstVNF_CPU_Server ) ) ) ) + ( MDR - PN ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM - RMSe ) + MLU ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - RRSe ) / ( MLU / ( RCSe + MLU ) ) ) * Max( Min( ( MLU * RRSe ) ,( RCSe / RRSe ) ),MUR ) ) ) ) ) + MUC )", "obj1": 0.5602189781021898, "obj2": 0.3636496776951247}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( BR ,DDR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_Mem_Server,Min( ARS ,MDR ) ) ) ) + ( ( ( CRS * AMS ) + ARS ) * MRS ) )", "choosing": "( ( ( ( Max( CS,Max( MUM,RCSe ) ) - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Max( ( RMSe / ( ( ( DS / ( RRSe - MUR ) ) - MUC ) + ( Min( ( MUR * MUR ) ,MLU ) * ( RMSe - ( MUR / CS ) ) ) ) ),( RMSe * RMSe ) ) + MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5115637835983325}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6478102189781022, "obj2": 0.24258831288012891}, {"determining": "( ( Max( RRS,( FirstVNF_RAM_Server / RRS ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( RRSe - ( RRSe - ( MLU + ( RRSe + RCSe ) ) ) ) ) * MLU ) )", "obj1": 0.45072992700729925, "obj2": 0.5331205353216739}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( MUR - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5401459854014599, "obj2": 0.3797328484896326}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( ( ( FirstVNF_CPU - MDR ) / MRS ) + FirstVNF_Mem_Server ) * ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - ( PN - MDR ) ) ) / ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( ( Max( DS,MUR ) - MUR ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) + ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.7390510948905109, "obj2": 0.15417365162791838}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS + MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( MRS * FirstVNF_RAM ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( MLU + RRSe ) + DS ) - MUM ) + Min( ( MLU - MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,( MLU - MUM ) ) )", "obj1": 0.6788321167883211, "obj2": 0.2076126926062975}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,MDR ) ) ) - ( DDR / DDR ) ) ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Min( ( ( MDR / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( ( MUC + ( ( MUM - RRSe ) / ( ( MLU / DS ) - ( DS / MUC ) ) ) ) / RMSe ) + Max( Max( MUR,( DS / ( CS - ( DS - ( MUC + MUM ) ) ) ) ),MLU ) )", "obj1": 0.8156934306569343, "obj2": 0.09295718767188905}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * ( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Max( AMS,MRS ) * DDR ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( MUC,( ( MLU - DS ) + ( MLU - MUM ) ) ) - ( RRSe * ( MLU * MUC ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6113138686131386, "obj2": 0.2792147669422738}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.42700729927007297, "obj2": 0.582092969388597}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + Max( MUR,( MUR + ( DS / MUM ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4818268819150492}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) / Min( Max( RMSe,RMSe ) ,( CS / RRSe ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.9726277372262774, "obj2": 0.004931682585672287}, {"determining": "Max( Max( AMS,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ),( ( ( Max( BR,Max( CRS,PN ) ) - Max( FirstVNF_CPU,ARS ) ) * BR ) - ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( CS + RCSe ),( MUR + ( Max( ( ( DS * DS ) * ( RCSe - RMSe ) ),( ( CS + MUM ) * ( RMSe + MLU ) ) ) - ( CS - CS ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5998991963584823}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( MDR ,FirstVNF_Mem_Server ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( Min( RRSe ,Max( ( MUR / Min( DS ,MLU ) ),( ( MUC / RCSe ) + MUR ) ) ) ,( ( Min( RCSe ,( ( ( DS / MUM ) / ( RCSe + ( MLU + MUC ) ) ) / RRSe ) ) - RCSe ) + DS ) )", "obj1": 0.6368613138686131, "obj2": 0.2525682337039775}, {"determining": "( Max( Min( MRS ,ACS ),( FirstVNF_RAM_Server - MDR ) ) + ( ( ACS - Const ) / RRS ) )", "choosing": "( ( MUR * MUC ) + Max( Max( MUC,Min( DS ,( RRSe - RMSe ) ) ),RCSe ) )", "obj1": 0.4708029197080292, "obj2": 0.4954327811456758}, {"determining": "Max( ( ( FirstVNF_CPU + ARS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( ( ( ( RRS - FirstVNF_Mem ) - ( AMS + ( MDR * FirstVNF_CPU ) ) ) * BR ) - ( FirstVNF_CPU + ARS ) ) )", "choosing": "Max( MUR,( MUR + ( Max( Min( ( DS * DS ) ,( RRSe * ( MLU * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) - ( ( CS * DS ) - CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6120380861396301}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( MRS + ( MDR + RRS ) ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server * Const ) ) ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),( RCSe / MUM ) ) ) ,( Min( Min( Max( ( ( DS * DS ) * Max( ( MLU * MUM ),DS ) ),( ( RCSe + MUM ) - ( RMSe + MLU ) ) ) ,RMSe ) ,( Min( MUC ,MUM ) - ( MUM - MLU ) ) ) + DS ) )", "obj1": 0.6040145985401459, "obj2": 0.2843899684548115}, {"determining": "( ( ( FirstVNF_RAM_Server - AMS ) * PN ) / ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) )", "choosing": "( ( ( ( Max( CS,Max( MUM,RCSe ) ) - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Min( CS ,Max( ( RRSe - ( MLU + MUC ) ),RRSe ) ) * DS ) )", "obj1": 0.5364963503649635, "obj2": 0.3982640830289412}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( ( FirstVNF_RAM * ( PN / CRS ) ) * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ,( MDR * MRS ) ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),MUR ) ,( ( RRSe / DS ) / MUM ) ) + Max( MUC,RCSe ) )", "obj1": 0.6204379562043796, "obj2": 0.2720126285173436}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( Max( FirstVNF_Mem_Server,MDR ) ,( Min( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM + BR ) ) ,( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( DS + DS ) ,MUM ) - Min( RCSe ,Max( DS,Max( MUR,CS ) ) ) ) )", "obj1": 0.6222627737226277, "obj2": 0.2651306238711768}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6405109489051095, "obj2": 0.24505548311959174}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6861313868613139, "obj2": 0.20368974535661005}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) ) * MDR ) ,( PN * Min( Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,CS ) + ( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4927007299270073, "obj2": 0.46791291731632617}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * Min( ( Min( AMS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * BR ) * MDR ) ,( ( ( MRS - DDR ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUC,MUR ) ) ) + ( CS - ( RMSe + ( RCSe - ( MUR + ( MUC - RCSe ) ) ) ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.42883211678832117, "obj2": 0.5689032902273858}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + ( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * Min( Max( DS,( ( RRSe - DS ) + MLU ) ) ,( ( RCSe + DS ) + Max( RCSe,( MLU / RCSe ) ) ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5026121506458631}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) ) + Min( ( FirstVNF_RAM * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( ARS - PN ) ,Const ) + BR ) ) * ( DDR - Max( ( ( FirstVNF_RAM * CRS ) - ( ARS + MRS ) ),( FirstVNF_RAM + ( AMS - CRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( MUM + Min( ( RCSe * MUM ) ,DS ) ),MUR ) ) + ( RRSe - MUC ) ) ) + Max( MUC,( MUR / CS ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4593356699357887}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Min( ( Min( CS ,RMSe ) * ( MLU + ( RCSe - MUR ) ) ) ,( DS * Max( ( MUC - MUR ),( RMSe - CS ) ) ) ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7883211678832117, "obj2": 0.10509507321625398}, {"determining": "( Max( ( PN * Max( FirstVNF_CPU_Server,( ( ( FirstVNF_CPU_Server - ACS ) - ( FirstVNF_RAM_Server * MRS ) ) / CRS ) ) ),( BR - MDR ) ) + ( ( ACS - Const ) / RRS ) )", "choosing": "( ( MUC * RRSe ) + ( ( MUC - ( Max( Min( MLU ,( DS * ( MUR * MUM ) ) ),Max( RRSe,RRSe ) ) / RMSe ) ) - RCSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5822076123020558}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( Const * ( ( MRS * MDR ) * DDR ) ) * MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Min( DS ,DS ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),Max( MUR,( ( RRSe * CS ) + ( MUC - MLU ) ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.1364021713297737}, {"determining": "Max( Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + ( FirstVNF_RAM / ( RRS - ARS ) ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( ( Const / FirstVNF_CPU_Server ) / Const ) + BR ) ) * Min( ( DDR * Const ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) ),( RRS * MRS ) )", "choosing": "( ( MUR - ( MLU + MUM ) ) * Min( DS ,Min( ( ( MLU / MUM ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - Min( ( ( ( RMSe + CS ) + MUM ) / DS ) ,CS ) ) ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) + Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Const ) ) ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4744525547445255, "obj2": 0.4916086335491075}, {"determining": "( ( Min( CRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * ACS ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( AMS ,FirstVNF_CPU ) ) ) * ( AMS + BR ) ) * Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + FirstVNF_Mem ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( RCSe + ( MUR * ( CS * ( ( MLU * Max( Min( ( RMSe + RCSe ) ,( MUM + MLU ) ),( CS / ( MUM - MUM ) ) ) ) + ( MUR - MUC ) ) ) ) )", "obj1": 0.7846715328467153, "obj2": 0.1067826488890529}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,Max( Max( ( FirstVNF_Mem + MDR ),( MDR - ACS ) ),( ACS - RRS ) ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( DS - ( CS + ( MUC + RMSe ) ) ) - RRSe ) - DS ) * ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - ( MUC - MUR ) ) ) * MLU ) )", "obj1": 0.6952554744525548, "obj2": 0.1922803145996594}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,( PN - MRS ) )", "choosing": "Max( ( Max( MLU,MUM ) - MUM ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42085657471712834}, {"determining": "( ( ( FirstVNF_Mem * AMS ) / RRS ) + Min( FirstVNF_CPU ,Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( MUC / ( MUC + ( MUC - Max( ( ( MUC * DS ) * ( MUM - RCSe ) ),DS ) ) ) ) + Max( CS,MUM ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "( ( Min( CRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * ACS ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( AMS ,FirstVNF_CPU ) ) ) * ( AMS + BR ) ) * Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + FirstVNF_Mem ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( Min( Min( DS ,( MLU / RMSe ) ) ,( CS + MUC ) ) + Max( Max( CS,Min( RRSe ,CS ) ),( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( RRSe + MUR ) ) ) ),( MUR / DS ) ) ) ) )", "obj1": 0.7846715328467153, "obj2": 0.1067826488890529}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( ( Max( ARS,ACS ) - FirstVNF_Mem ) + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Max( ARS,ACS ) / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "Max( MUR,( MUR - ( Min( DS ,MLU ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.8193430656934306, "obj2": 0.08718618604829138}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.614963503649635, "obj2": 0.27351551373303207}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( ( ( Min( MUR ,MUR ) + Min( CS ,RCSe ) ) * RMSe ) + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + Max( MLU,DS ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6014009938198519}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( ACS / MRS ) - ACS ) ,( MDR / ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( MUR * MUC ) ) ) )", "obj1": 0.698905109489051, "obj2": 0.19008893978020014}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - ( MUM - MLU ) ) )", "obj1": 0.7171532846715328, "obj2": 0.17175284175103755}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * AMS ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( ( ( MDR - Const ) * BR ) + ( BR - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( Min( ( ( ( MUC / RCSe ) + ( MUR - Max( MUR,( Min( MLU ,MLU ) / RMSe ) ) ) ) + Min( RRSe ,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) * ( RCSe * Max( CS,RMSe ) ) )", "obj1": 0.8613138686131386, "obj2": 0.06204103311177514}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - ( MUC - MUR ) ) ) * MLU ) )", "obj1": 0.6952554744525548, "obj2": 0.1922803145996594}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( RCSe / MLU ) ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7317518248175182, "obj2": 0.1552542396918937}, {"determining": "( ( ( ( ( DDR + DDR ) * Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( MUR - ( MLU + MUR ) ) - RRSe ) + ( ( MLU / RRSe ) * MUC ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.0017776193406022814}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + Min( FirstVNF_RAM_Server ,CRS ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) ) + RRSe ) + ( Min( MUC ,MUM ) - ( MUM - MLU ) ) )", "obj1": 0.6824817518248175, "obj2": 0.20491353590882955}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( Min( ( FirstVNF_CPU_Server - ( PN - FirstVNF_CPU ) ) ,RRS ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + Max( MUR,Max( MUM,( CS * RRSe ) ) ) ),MUR ) ) ,( RRSe - ( MLU + MUR ) ) )", "obj1": 0.6332116788321168, "obj2": 0.2539863023436051}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * BR ) * MDR ) ,( ( ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( AMS / ( DDR + ARS ) ) ) * ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + Min( ARS ,( BR - Const ) ) ) ) ) / MDR ) ) )", "choosing": "Min( ( ( MUR / MUC ) - ( RCSe / MUM ) ) ,Max( RRSe,( MLU + MUR ) ) )", "obj1": 0.9525547445255474, "obj2": 0.019507414009465276}], "33": [{"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( BR ,DDR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / ( PN + ( FirstVNF_RAM_Server - ACS ) ) ) ) - Max( FirstVNF_Mem_Server,Min( ARS ,MDR ) ) ) ) + ( ( ( CRS * AMS ) + ARS ) * MRS ) )", "choosing": "( ( ( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) - RRSe ) - DS ) * ( Max( ( RMSe / ( ( ( DS / ( RRSe - MUR ) ) - MUC ) + ( Min( ( MUR * MUR ) ,MLU ) * ( RMSe - ( MUR / CS ) ) ) ) ),( RMSe * RMSe ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( Max( ( DDR / ACS ),PN ) + ( RRS - Min( AMS ,FirstVNF_RAM_Server ) ) ) - ( DDR / DDR ) ) ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Min( ( ( AMS / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( ( RMSe / DS ) - ( ( RRSe - ( Min( MLU ,MUM ) + RCSe ) ) / Min( Max( ( ( ( MLU - MUR ) + ( MUM * RMSe ) ) - MLU ),RCSe ) ,( Max( MUC,( RMSe + DS ) ) - MLU ) ) ) ) + ( Min( MUC ,MUM ) - ( ( ( MUM - ( RMSe + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( MUC,( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Max( ACS,AMS ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( Min( ( ( ( MUC / RCSe ) + DS ) + Min( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) ,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) * ( RCSe * ( CS + RMSe ) ) )", "obj1": 0.9014598540145985, "obj2": 0.04457810905335995}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ( ( FirstVNF_Mem - ( Max( RRS,ARS ) * MRS ) ) / DDR ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( DS + MUC ) / ( ( MUR / MUC ) + CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( ( RRSe + CS ),MLU ) ) )", "obj1": 0.572992700729927, "obj2": 0.3372195341565952}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( FirstVNF_RAM - CRS ) + Min( ( MDR * ( ( ARS * MDR ) * BR ) ) ,Min( ( Max( FirstVNF_CPU,Min( BR ,AMS ) ) * ( FirstVNF_CPU_Server / MDR ) ) ,( ( Max( DDR,AMS ) + CRS ) / PN ) ) ) )", "choosing": "( ( RRSe + Min( RMSe ,Max( MUM,DS ) ) ) + Min( Min( Min( DS ,DS ) ,MUM ) ,( Min( ( Min( MLU ,CS ) / ( ( ( MUR + MUM ) / Min( RCSe ,MUM ) ) - RCSe ) ) ,Max( RMSe,MUM ) ) + ( CS * MUC ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3559806692118027}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( PN - MDR ) - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU + FirstVNF_RAM ) - Min( Const ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,RMSe ) + Max( Min( CS ,MUC ),CS ) ) + ( Min( RRSe ,CS ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.13349999375368912}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( Min( FirstVNF_Mem ,Max( Min( FirstVNF_RAM ,ARS ),ACS ) ) ,( BR * MDR ) ) )", "choosing": "Max( MUR,( ( ( ( DS + RMSe ) - MUR ) / RRSe ) * MUC ) )", "obj1": 0.8704379562043796, "obj2": 0.05883024542157914}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( DS ,MUR ) ) + ( ( MLU - Min( ( Min( RMSe ,( DS * DS ) ) - MUC ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.9379562043795621, "obj2": 0.0229831458651955}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5054744525547445, "obj2": 0.4430167498492174}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * MUR ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + Max( MLU,DS ) ) )", "obj1": 0.5857664233576643, "obj2": 0.3142769036311012}, {"determining": "( ( MRS / ( ( FirstVNF_Mem_Server - MDR ) / FirstVNF_CPU_Server ) ) - Min( MDR ,( Min( Const ,AMS ) - ( ( Min( FirstVNF_Mem ,MRS ) + PN ) / Max( ( ( CRS * MDR ) / ( Max( Const,CRS ) * PN ) ),BR ) ) ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( DS ,MUR ) ) + ( ( MLU - Min( ( Min( MUR ,RMSe ) + ( Min( Max( MLU,MLU ) ,Max( RCSe,CS ) ) + ( CS * RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + Min( MUM ,MUM ) ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6551094890510949, "obj2": 0.23227179214565954}, {"determining": "( ( ( ( PN + RRS ) * DDR ) + ( MDR - PN ) ) + Min( ( ( ( ( MDR + ( ( AMS + CRS ) - ( AMS * FirstVNF_Mem ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( MDR / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( Max( AMS,MDR ) * ( RRS * MRS ) ) ) )", "choosing": "Max( ( Min( ( MUM * MLU ) ,MUC ) - Max( MLU,MUM ) ),( Min( ( ( ( ( MLU + MUM ) / MLU ) + MUR ) / ( MLU * RRSe ) ) ,( ( ( ( MUC / MUM ) + RRSe ) * ( ( ( RMSe / MUC ) + MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( RCSe - RRSe ) ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.025942228914761955}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( RRSe - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ) ) )", "obj1": 0.5273722627737226, "obj2": 0.4033353547350011}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) * DDR ),DDR ) ) + Max( BR,AMS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( MUM + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + Max( MUC,MLU ) ) ) ),( DS / MUR ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1218599742751733}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * BR ) * MDR ) ,( ( ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( AMS / ( DDR + ARS ) ) ) * ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + Min( ARS ,( BR - Const ) ) ) ) ) / MDR ) ) )", "choosing": "Min( ( ( MUR / MUC ) - ( RCSe / MUM ) ) ,Max( RRSe,( MLU + MUR ) ) )", "obj1": 0.9525547445255474, "obj2": 0.019507414009465276}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( Min( ( FirstVNF_CPU_Server - ( PN - FirstVNF_CPU ) ) ,RRS ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + Max( MUR,Max( MUM,( CS * RRSe ) ) ) ),MUR ) ) ,( RRSe - ( MLU + MUR ) ) )", "obj1": 0.6332116788321168, "obj2": 0.2539863023436051}, {"determining": "Min( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,Max( Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ),( FirstVNF_RAM_Server / RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( MUM / ( MUM + ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) ) ) )", "obj1": 0.5, "obj2": 0.45857346803012855}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM_Server - MDR ) ) + ( ( Min( Max( ARS,FirstVNF_CPU ) ,MDR ) * ( Const / Min( ( ( MRS * FirstVNF_RAM_Server ) / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Min( RRS ,PN ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( Max( ( MLU / ( Max( MUR,( RCSe / MLU ) ) + MLU ) ),Max( RMSe,Max( ( ( RMSe * DS ) + RMSe ),MUC ) ) ) * CS ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5428536266276126}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( BR ,DDR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_Mem_Server,Min( ARS ,MDR ) ) ) ) + ( ( ( CRS * AMS ) + ARS ) * MRS ) )", "choosing": "( ( ( ( Max( CS,Max( MUM,RCSe ) ) - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Max( ( RMSe / ( ( ( DS / ( RRSe - MUR ) ) - MUC ) + ( Min( ( MUR * MUR ) ,MLU ) * ( RMSe - ( MUR / CS ) ) ) ) ),( RMSe * RMSe ) ) + MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5115637835983325}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( FirstVNF_RAM_Server - AMS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + MUM ) )", "obj1": 0.5985401459854015, "obj2": 0.2898365597180342}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + Max( MUR,( MUR + ( DS / MUM ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4781021897810219, "obj2": 0.4818268819150492}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( Max( RMSe,MLU ) + ( Min( MUC ,MUM ) - ( MUM - MLU ) ) )", "obj1": 0.9671532846715328, "obj2": 0.009698129796655975}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( ( RMSe + CS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.8065693430656934, "obj2": 0.09797269686682675}, {"determining": "Max( Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + ( FirstVNF_RAM / ( RRS - ARS ) ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( ( Const / FirstVNF_CPU_Server ) / Const ) + BR ) ) * Min( ( DDR * Const ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) ),( RRS * MRS ) )", "choosing": "( ( MUR - ( MLU + MUM ) ) * Min( DS ,Min( ( ( MLU / MUM ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - Min( ( ( ( RMSe + CS ) + MUM ) / DS ) ,CS ) ) ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( MUR - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5401459854014599, "obj2": 0.3797328484896326}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem / MRS ) ) ) + ( ( Const + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) + ( PN / ACS ) )", "choosing": "( ( CS + MUC ) + Max( ( ( ( DS + ( ( ( RMSe * MUM ) * RRSe ) - ( MUC * MLU ) ) ) / ( DS * CS ) ) / Max( ( ( ( ( MUC * MLU ) - ( MUM + MUM ) ) + RRSe ) / MLU ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - MUR ) / RMSe ) ,CS ),( DS + ( MUR / ( CS * Min( ( MLU * RMSe ) ,MUC ) ) ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) * ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ) * Min( ( PN - MRS ) ,( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / ( ( DS * Max( ( DS + RCSe ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.885036496350365, "obj2": 0.05117598612578255}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( Min( RRS ,( ( AMS / FirstVNF_Mem ) - MDR ) ),( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,( MUC + ( RRSe / MLU ) ) ) ),Min( Min( DS ,DS ) ,MUM ) )", "obj1": 0.5237226277372263, "obj2": 0.4151585495372451}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( PN - MDR ) )", "choosing": "( ( MUC / ( MUC - MLU ) ) + Max( MUC,MUR ) )", "obj1": 0.7135036496350365, "obj2": 0.1838672636105868}, {"determining": "( ( DDR * ( FirstVNF_RAM - AMS ) ) + ( ACS + ( MDR / ARS ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,( MUC * MUR ) ) + MLU ) / DS ) + MUC ),MUR ) + RRSe ) + ( ( ( Max( ( DS * ( CS - ( RMSe / DS ) ) ),DS ) + ( ( Min( DS ,( RRSe / RMSe ) ) / DS ) - MUR ) ) * MUC ) * ( RRSe * MLU ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4738847498527962}, {"determining": "( Min( ( ( RRS + BR ) / FirstVNF_CPU ) ,( ( BR * ( DDR * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,RRS ) ) ) * Const ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + RRSe ) + ( ( RRSe * CS ) + ( ( ( MUR / ( DS - RCSe ) ) / CS ) - ( ( ( RMSe / MUC ) / MLU ) + RCSe ) ) ) ) ) * ( DS + DS ) )", "obj1": 0.75, "obj2": 0.141014923214409}, {"determining": "( ( FirstVNF_Mem_Server + PN ) + Min( ( MDR * MDR ) ,( ( Min( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - Min( FirstVNF_CPU ,ACS ) ) ) ,( AMS + BR ) ) * ( MDR + MDR ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS + ( RMSe - MLU ) ) - MLU ) ) + Max( MUC,DS ) )", "obj1": 0.5091240875912408, "obj2": 0.43307863372573285}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - DDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( MLU * MUC ),Max( MUR,( RCSe / MLU ) ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.8156934306569343, "obj2": 0.09067122596087844}, {"determining": "Min( ( ( ( MRS - BR ) + Min( Min( RRS ,FirstVNF_RAM_Server ) ,ACS ) ) - ( AMS / Max( ACS,BR ) ) ) ,FirstVNF_Mem )", "choosing": "( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( ( MUR * RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( ( ( ( MLU * MUM ) + RRSe ) - RRSe ) / ( Min( Min( MLU ,MUR ) ,RCSe ) + MLU ) ) * Max( MUR,MUC ) ) / ( MUM / ( Min( MLU ,( CS / RMSe ) ) / CS ) ) ) ) * ( Max( MUC,RRSe ) / ( RRSe / DS ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4301873191736667}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),( MDR - ACS ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6144093178284101}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6478102189781022, "obj2": 0.24258831288012891}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,( PN - MRS ) )", "choosing": "Max( ( Max( MLU,MUM ) - MUM ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42085657471712834}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( RRSe - Max( ( MUM + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / MUM ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.885036496350365, "obj2": 0.05117598612578255}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - FirstVNF_Mem_Server ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,CRS ) ) ) * Min( AMS ,( ACS - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( MLU * MUM ) + RRSe ) - RRSe ),( ( RRSe * ( ( ( ( MUR + DS ) * RCSe ) / Min( MUC ,( RRSe + DS ) ) ) + Max( MUM,Max( ( RRSe * CS ),MLU ) ) ) ) + ( CS + MUC ) ) ) - ( Min( ( ( MUR - RRSe ) * MUM ) ,MLU ) + Max( MLU,DS ) ) )", "obj1": 0.5383211678832117, "obj2": 0.39259646118385694}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( ARS + Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) ) ,Min( ( ( ( MRS * MDR ) * BR ) * MDR ) ,( PN * Min( ( Min( FirstVNF_Mem_Server ,DDR ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( RRSe * CS ) + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),( Min( RRSe ,CS ) - MLU ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6320916266012078}, {"determining": "( ( Max( FirstVNF_CPU_Server,CRS ) / ( ( FirstVNF_RAM / ARS ) - ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( ( ( Min( ( MLU / MLU ) ,( CS - MUR ) ) * RMSe ) / MUR ) ,Min( MLU ,MLU ) ) ) / ( Max( Max( RMSe,MLU ),( ( RRSe * Max( RCSe,MUC ) ) + ( Max( Max( MUC,CS ),( RCSe - CS ) ) + CS ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),Min( MUC ,( RCSe + ( Max( MUR,MUR ) - ( RMSe + RMSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( AMS * MDR ) ,( ( ( CRS - BR ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,RRSe ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( Min( RRSe ,MUR ) - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( Max( Min( MRS ,ACS ),( FirstVNF_RAM_Server - MDR ) ) + ( ( ACS - Const ) / RRS ) )", "choosing": "( ( MUR * MUC ) + Max( Max( MUC,Min( DS ,( RRSe - RMSe ) ) ),RCSe ) )", "obj1": 0.4708029197080292, "obj2": 0.4954327811456758}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.5565693430656934, "obj2": 0.36213557445703903}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7025547445255474, "obj2": 0.1853309372886406}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( RRS - ACS ) ,RRS ) ) ) / ( Min( PN ,AMS ) + ( ARS / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( Max( MUR,RRSe ) - ( RCSe / RRSe ) ) + RRSe ),RCSe ) ) + ( CS - ( MUR - MUC ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5912408759124088, "obj2": 0.30385047100880325}, {"determining": "( ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - CRS ) ) + ( DDR - MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( MUC,MUM ) ) ) ,( ( ( MUM + RMSe ) - ( CS * MUR ) ) + DS ) )", "obj1": 0.6697080291970803, "obj2": 0.222095194535377}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6624087591240876, "obj2": 0.22593252392584987}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.5529197080291971, "obj2": 0.3648255719589994}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Min( DS ,DS ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),Max( MUR,( ( RRSe * CS ) + ( MUC - MLU ) ) ) ) )", "obj1": 0.6222627737226277, "obj2": 0.2651306238711768}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "Max( Min( ( ( Min( CRS ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) * BR ) * MDR ) ,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server * MRS ) )", "choosing": "( ( MUR - ( MLU + MUR ) ) * Min( DS ,Min( Min( DS ,( Min( MUR ,MUC ) - ( RCSe + RRSe ) ) ) ,( ( Min( RMSe ,RRSe ) / ( RCSe + RRSe ) ) - Min( Min( ( ( MUC + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6492792378733494}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( ( AMS + FirstVNF_RAM ) - ( PN + RRS ) ) ,RRS ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / RMSe ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + RRSe ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6328233870957455}, {"determining": "( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Min( ( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ,( MDR * MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,( ( RCSe / Max( ( MUM - RCSe ),Max( RCSe,CS ) ) ) / ( RMSe + ( ( MUC + MLU ) + ( DS + MUR ) ) ) ) ) ,RRSe ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( MUR * MUC ) ) ) )", "obj1": 0.5912408759124088, "obj2": 0.30385047100880325}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( ( ( FirstVNF_CPU - MDR ) / MRS ) + FirstVNF_Mem_Server ) * ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - ( PN - MDR ) ) ) / ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( ( Max( DS,MUR ) - MUR ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) + ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.7390510948905109, "obj2": 0.15417365162791838}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS + MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( MRS * FirstVNF_RAM ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( MLU + RRSe ) + DS ) - MUM ) + Min( ( MLU - MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,( MLU - MUM ) ) )", "obj1": 0.6788321167883211, "obj2": 0.2076126926062975}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) ) + Min( ( FirstVNF_RAM * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( ARS - PN ) ,Const ) + BR ) ) * ( DDR - Max( ( ( FirstVNF_RAM * CRS ) - ( ARS + MRS ) ),( FirstVNF_RAM + ( AMS - CRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( MUM + Min( ( RCSe * MUM ) ,DS ) ),MUR ) ) + ( RRSe - MUC ) ) ) + Max( MUC,( MUR / CS ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4593356699357887}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7956204379562044, "obj2": 0.10089424134246268}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( Min( ( Min( AMS ,MDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( MUC,MUM ) ) ) ,( Min( ( Max( ( ( DS * DS ) * ( DS / Min( MUC ,MUR ) ) ),( ( CS + MUM ) - ( MLU + RMSe ) ) ) * RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.42883211678832117, "obj2": 0.5689032902273858}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( MDR ,FirstVNF_Mem_Server ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( Min( RRSe ,Max( ( MUR / Min( DS ,MLU ) ),( ( MUC / RCSe ) + MUR ) ) ) ,( ( Min( RCSe ,( ( ( DS / MUM ) / ( RCSe + ( MLU + MUC ) ) ) / RRSe ) ) - RCSe ) + DS ) )", "obj1": 0.6368613138686131, "obj2": 0.2525682337039775}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.5401459854014599, "obj2": 0.3797328484896326}, {"determining": "( ( ( ( ( AMS + ( FirstVNF_RAM + ( MDR + FirstVNF_RAM ) ) ) / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / RRS ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( MUC - ( ( MUM - MUM ) + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) ) )", "obj1": 0.5529197080291971, "obj2": 0.3648255719589994}, {"determining": "Max( ( ( FirstVNF_CPU + ARS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( ( ( ( RRS - FirstVNF_Mem ) - ( AMS + ( MDR * FirstVNF_CPU ) ) ) * BR ) - ( FirstVNF_CPU + ARS ) ) )", "choosing": "Max( MUR,( MUR + ( Max( Min( ( DS * DS ) ,( RRSe * ( MLU * MUC ) ) ),( ( CS + MUM ) - ( RMSe + MLU ) ) ) - ( ( CS * DS ) - CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6120380861396301}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,MDR ) ) ) - ( DDR / DDR ) ) ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Min( ( ( MDR / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( ( MUC + ( ( MUM - RRSe ) / ( ( MLU / DS ) - ( DS / MUC ) ) ) ) / RMSe ) + Max( Max( MUR,( DS / ( CS - ( DS - ( MUC + MUM ) ) ) ) ),MLU ) )", "obj1": 0.8266423357664233, "obj2": 0.0865475934704625}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) / Min( Max( RMSe,RMSe ) ,( CS / RRSe ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.9726277372262774, "obj2": 0.004931682585672287}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) - ( ( ( RRSe - ( MLU + MUR ) ) - Max( ( ( Min( DS ,MLU ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.6916058394160584, "obj2": 0.19619335352288395}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( ( Max( ARS,ACS ) - FirstVNF_Mem ) + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Max( ARS,ACS ) / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "Max( MUR,( MUR - ( Min( DS ,MLU ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.8193430656934306, "obj2": 0.08718618604829138}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( MDR - PN ) ) + Min( ( ( ( Min( Min( ( ACS * ACS ) ,FirstVNF_Mem_Server ) ,CRS ) / MRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,Min( ACS ,FirstVNF_Mem ) ) ) + MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + ( MUR / MLU ) ) + ( ( RMSe / CS ) * ( MUC + MUM ) ) )", "obj1": 0.7153284671532847, "obj2": 0.17416544276359205}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + Max( MLU,DS ) ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "Max( Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + ( FirstVNF_RAM / ( RRS - ARS ) ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * ( Max( ( DDR / FirstVNF_CPU_Server ),Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ),( RRS * ( ( FirstVNF_RAM_Server * ( Min( AMS ,( FirstVNF_RAM_Server - AMS ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ARS ,MDR ) ) ) ) ) )", "choosing": "( ( ( ( Min( DS ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( MLU ,RCSe ) ) ) - ( RRSe / MUM ) ) - ( MLU + MUM ) ) * Min( DS ,Min( ( ( Max( CS,Max( MUM,RCSe ) ) - Max( RMSe,MLU ) ) - DS ) ,( ( MUM / ( RCSe + RRSe ) ) - Min( Min( ( ( RMSe + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7427007299270073, "obj2": 0.14446513204144337}, {"determining": "( ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) / ( ( FirstVNF_RAM_Server - AMS ) * ( RRS + Max( AMS,( ( ( FirstVNF_RAM - ( Const / FirstVNF_CPU_Server ) ) / CRS ) + MDR ) ) ) ) )", "choosing": "( Max( ( ( Min( ( MUM * RMSe ) ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( DS ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5364963503649635, "obj2": 0.3982640830289412}, {"determining": "Max( Max( AMS,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ),( ( ( Max( BR,Max( CRS,PN ) ) - Max( FirstVNF_CPU,ARS ) ) * BR ) - ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( CS + RCSe ),( MUR + ( Max( ( ( DS * DS ) * ( RCSe - RMSe ) ),( ( CS + MUM ) * ( RMSe + MLU ) ) ) - ( CS - CS ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5998991963584823}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * Min( ( Min( AMS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * BR ) * MDR ) ,( ( ( MRS - DDR ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUC,MUR ) ) ) + ( CS - ( RMSe + ( RCSe - ( MUR + ( MUC - RCSe ) ) ) ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.42883211678832117, "obj2": 0.5689032902273858}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ARS ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) ) * MDR ) ,( PN * Min( Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,CS ) + ( ( Min( CS ,RMSe ) * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4927007299270073, "obj2": 0.46791291731632617}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5473282535468954}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + ( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * MLU ) )", "obj1": 0.6733576642335767, "obj2": 0.21308781641861702}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) + Max( ( ( ( ARS * MDR ) * BR ) * MDR ),( Max( FirstVNF_CPU_Server,Max( Max( ( FirstVNF_Mem + MDR ),( MDR - ACS ) ),( ACS - RRS ) ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "( ( ( ( DS - ( CS + ( MUC + RMSe ) ) ) - RRSe ) - DS ) * ( Min( CS ,( ( RRSe - ( MLU + MUC ) ) - ( MUC - MUR ) ) ) * MLU ) )", "obj1": 0.698905109489051, "obj2": 0.18793816126221138}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM - MDR ) ) + ( ( ( Max( FirstVNF_CPU,ARS ) - MDR ) * ( Const / Min( ( MDR / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + Min( BR ,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( FirstVNF_Mem_Server / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( Min( Max( MLU,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( ( MUM + Max( CS,Min( ( RMSe * MUR ) ,CS ) ) ) - MLU ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5026121506458631}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( Max( Min( AMS ,AMS ),PN ) + ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - Min( RRS ,MDR ) ) ) - ( DDR / DDR ) ) ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Min( ( ( MDR / FirstVNF_RAM ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( ( MUC + ( ( MUM - RRSe ) / ( ( MLU / DS ) - ( DS / MUC ) ) ) ) / RMSe ) + Max( Max( MUR,( DS / ( CS - ( ( RRSe - ( MLU + MUC ) ) - ( MUC + MUM ) ) ) ) ),MLU ) )", "obj1": 0.7992700729927007, "obj2": 0.09990253806060483}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Min( ( Min( CS ,RMSe ) * ( MLU + ( RCSe - MUR ) ) ) ,( DS * Max( ( MUC - MUR ),( RMSe - CS ) ) ) ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7883211678832117, "obj2": 0.10509507321625398}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( Min( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) * ( RCSe * ( CS + RMSe ) ) )", "obj1": 0.8613138686131386, "obj2": 0.06204103311177514}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) + Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Const ) ) ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4744525547445255, "obj2": 0.4916086335491075}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7408759124087592, "obj2": 0.14687773305399787}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( RRSe - Max( ( MUM + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / MUM ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.614963503649635, "obj2": 0.27351551373303207}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( ( ( Min( MUR ,MUR ) + Min( CS ,RCSe ) ) * RMSe ) + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + Max( MLU,DS ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5574258658672333}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( FirstVNF_RAM_Server * PN ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - MUC ) ,MUR ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * ( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Max( AMS,MRS ) * DDR ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( MUC,( ( MLU - DS ) + ( MLU - MUM ) ) ) - ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6076642335766423, "obj2": 0.2824089245993504}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( Max( FirstVNF_Mem_Server,MDR ) ,( Min( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM + BR ) ) ,( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( DS + DS ) ,MUM ) - Min( RCSe ,Max( DS,Max( MUR,CS ) ) ) ) )", "obj1": 0.6222627737226277, "obj2": 0.2651306238711768}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + ( ( DDR / DDR ) - ACS ) )", "choosing": "( RRSe + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.4251824817518248, "obj2": 0.5798636045328007}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( ( FirstVNF_RAM * ( PN / CRS ) ) * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ,( MDR * MRS ) ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),MUR ) ,( ( RRSe / DS ) / MUM ) ) + Max( MUC,RCSe ) )", "obj1": 0.6204379562043796, "obj2": 0.2720126285173436}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7299270072992701, "obj2": 0.15619746953498767}], "34": [{"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( MUC,( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - FirstVNF_Mem_Server ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,CRS ) ) ) * Min( AMS ,( ACS - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( MLU * MUM ) + RRSe ) - RRSe ),( ( RRSe * ( ( ( ( MUR + DS ) * RCSe ) / Min( MUC ,( RRSe + DS ) ) ) + Max( MUM,Max( ( RRSe * CS ),MLU ) ) ) ) + ( CS + MUC ) ) ) - ( Min( ( ( MUR - RRSe ) * MUM ) ,MLU ) + Max( MLU,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( BR ,DDR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / ( PN + ( FirstVNF_RAM_Server - ACS ) ) ) ) - Max( FirstVNF_Mem_Server,Min( ARS ,MDR ) ) ) ) + ( ( ( CRS * AMS ) + ARS ) * MRS ) )", "choosing": "( ( ( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) - RRSe ) - DS ) * ( Max( ( RMSe / ( ( ( DS / ( RRSe - MUR ) ) - MUC ) + ( Min( ( MUR * MUR ) ,MLU ) * ( RMSe - ( MUR / CS ) ) ) ) ),( RMSe * RMSe ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server - AMS ) / ( FirstVNF_CPU + ( ACS + FirstVNF_Mem ) ) ) * BR ) * MDR ) )", "choosing": "( ( MUC / Max( ( RCSe / ( MLU * Min( CS ,RMSe ) ) ),( Max( Min( ( Min( CS ,RMSe ) * Max( MLU,DS ) ) ,( RMSe * Max( MUR,MUM ) ) ),( Max( MLU,MUM ) + ( MLU - DS ) ) ) + MLU ) ) ) + RCSe )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ( ( FirstVNF_Mem - ( Max( RRS,ARS ) * MRS ) ) / DDR ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( DS + MUC ) / ( ( MUR / MUC ) + CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( ( RRSe + CS ),MLU ) ) )", "obj1": 0.572992700729927, "obj2": 0.3372195341565952}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,MLU ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) * ( RCSe * ( CS + RMSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298419}, {"determining": "( ( FirstVNF_RAM - CRS ) + Min( ( MDR * ( ( ARS * MDR ) * BR ) ) ,Min( ( Max( FirstVNF_CPU,Min( BR ,AMS ) ) * ( FirstVNF_CPU_Server / MDR ) ) ,( ( Max( DDR,AMS ) + CRS ) / PN ) ) ) )", "choosing": "( ( RRSe + Min( RMSe ,Max( MUM,DS ) ) ) + Min( Min( Min( DS ,DS ) ,MUM ) ,( Min( ( Min( MLU ,CS ) / ( ( ( MUR + MUM ) / Min( RCSe ,MUM ) ) - RCSe ) ) ,Max( RMSe,MUM ) ) + ( CS * MUC ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3559806692118027}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) - ( ( ( RRSe - ( MLU + MUR ) ) - Max( ( ( Min( DS ,MLU ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.6916058394160584, "obj2": 0.19619335352288395}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( PN - MDR ) - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU + FirstVNF_RAM ) - Min( Const ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,RMSe ) + Max( Min( CS ,MUC ),CS ) ) + ( Min( RRSe ,CS ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.13349999375368912}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5054744525547445, "obj2": 0.4430167498492174}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "Max( Max( AMS,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ),( ( ( Max( BR,Max( CRS,PN ) ) - Max( FirstVNF_CPU,ARS ) ) * BR ) - ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( CS + RCSe ),( MUR + ( Max( ( ( DS * DS ) * ( RCSe - RMSe ) ),( ( CS + MUM ) * ( RMSe + MLU ) ) ) - ( CS - CS ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5998991963584823}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS + MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( MRS * FirstVNF_RAM ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( MLU + RRSe ) + DS ) - MUM ) + Min( ( MLU - MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,( MLU - MUM ) ) )", "obj1": 0.6788321167883211, "obj2": 0.2076126926062975}, {"determining": "( Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) / MDR ) ,( ( ( ( BR + ( Max( ARS,Const ) - ( MDR - BR ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RMSe ,( MUC + RMSe ) ) + RMSe ) / ( RRSe * ( ( DS / MUM ) / ( Max( MUC,MUR ) * ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) ) ) ) ) + MUC )", "obj1": 0.8704379562043796, "obj2": 0.0576933700217704}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) * DDR ),DDR ) ) + Max( BR,AMS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( MUM + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + Max( MUC,MLU ) ) ) ),( DS / MUR ) ) ),Max( CS,Min( RRSe ,CS ) ) ) )", "obj1": 0.7700729927007299, "obj2": 0.1218599742751733}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM_Server - MDR ) ) + ( ( Min( Max( ARS,FirstVNF_CPU ) ,MDR ) * ( Const / Min( ( ( MRS * FirstVNF_RAM_Server ) / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Min( RRS ,PN ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( Max( ( MLU / ( Max( MUR,( RCSe / MLU ) ) + MLU ) ),Max( RMSe,Max( ( ( RMSe * DS ) + RMSe ),MUC ) ) ) * CS ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5428536266276126}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( RRSe - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ) ) )", "obj1": 0.5273722627737226, "obj2": 0.4033353547350011}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + ( ( DDR / DDR ) - ACS ) )", "choosing": "( RRSe + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.4251824817518248, "obj2": 0.5798636045328007}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( MUM + RMSe ) - MLU ) + ( ( MLU - Min( ( Min( RMSe ,( DS * DS ) ) - MUC ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( DDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( Max( MUR,( MUR + Max( MUC,MLU ) ) ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + MUM ) )", "obj1": 0.5474452554744526, "obj2": 0.37615263061434084}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * BR ) * MDR ) ,( ( ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( AMS / ( DDR + ARS ) ) ) * ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + Min( ARS ,( BR - Const ) ) ) ) ) / MDR ) ) )", "choosing": "Min( ( ( MUR / MUC ) - ( RCSe / MUM ) ) ,Max( RRSe,( MLU + MUR ) ) )", "obj1": 0.9525547445255474, "obj2": 0.019507414009465276}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + Min( MUM ,MUM ) ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6551094890510949, "obj2": 0.23227179214565954}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( Min( ( Min( AMS ,MDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.611331949562027}, {"determining": "Min( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,Max( Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ),( FirstVNF_RAM_Server / RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,MUC ) ),( MUM / ( MUM + ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) ) ) )", "obj1": 0.5, "obj2": 0.45857346803012855}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( MDR ,FirstVNF_Mem_Server ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Min( Min( RRSe ,Max( ( MUR / Min( DS ,MLU ) ),( ( MUC / RCSe ) + MUR ) ) ) ,( ( Min( RCSe ,( ( ( DS / MUM ) / ( RCSe + ( MLU + MUC ) ) ) / RRSe ) ) - RCSe ) + DS ) )", "obj1": 0.6368613138686131, "obj2": 0.2525682337039775}, {"determining": "( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( MDR ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( Max( MUM,RCSe ) - ( CS + MUM ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.8540145985401459, "obj2": 0.06987875101199455}, {"determining": "Max( Min( ( ( Min( CRS ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) * BR ) * MDR ) ,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server * MRS ) )", "choosing": "( ( MUR - ( MLU + MUR ) ) * Min( DS ,Min( Min( DS ,( Min( MUR ,MUC ) - ( RCSe + RRSe ) ) ) ,( ( Min( RMSe ,RRSe ) / ( RCSe + RRSe ) ) - Min( Min( ( ( MUC + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6492792378733494}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + ( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Min( ( Min( CS ,RMSe ) * ( MLU + ( RCSe - MUR ) ) ) ,( DS * Max( ( MUC - MUR ),( RMSe - CS ) ) ) ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - ( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) ) ),MUC ) )", "obj1": 0.9890510948905109, "obj2": 0.0015236737205162412}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * ( ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) + ( Max( AMS,MRS ) * DDR ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( MUC,( ( MLU - DS ) + ( MLU - MUM ) ) ) - ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.6076642335766423, "obj2": 0.2824089245993504}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem / MRS ) ) ) + ( ( Const + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) + ( PN / ACS ) )", "choosing": "( ( CS + MUC ) + Max( ( ( ( DS + ( ( ( RMSe * MUM ) * RRSe ) - ( MUC * MLU ) ) ) / ( DS * CS ) ) / Max( ( ( ( ( MUC * MLU ) - ( MUM + MUM ) ) + RRSe ) / MLU ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - MUR ) / RMSe ) ,CS ),( DS + ( MUR / ( CS * Min( ( MLU * RMSe ) ,MUC ) ) ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6624087591240876, "obj2": 0.22593252392584987}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( Max( Min( AMS ,AMS ),( FirstVNF_Mem / FirstVNF_RAM ) ) + Min( Min( RRS ,FirstVNF_RAM_Server ) ,ACS ) ) - ( AMS / Max( ACS,BR ) ) ) * FirstVNF_Mem_Server ) / ( Max( ARS,ACS ) / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "Max( MUR,( MUR - ( ( ( ( MLU * MUM ) + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) ) )", "obj1": 0.781021897810219, "obj2": 0.11065763986108022}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( FirstVNF_RAM_Server * PN ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - MUC ) ,MUR ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( Min( RRS ,( ( AMS / FirstVNF_Mem ) - MDR ) ),( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,( MUC + ( RRSe / MLU ) ) ) ),Min( Min( DS ,DS ) ,MUM ) )", "obj1": 0.5237226277372263, "obj2": 0.4151585495372451}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( PN - MDR ) )", "choosing": "( ( MUC / ( MUC - MLU ) ) + Max( MUC,MUR ) )", "obj1": 0.7135036496350365, "obj2": 0.1838672636105868}, {"determining": "( Min( ( ( RRS + BR ) / FirstVNF_CPU ) ,( ( BR * ( DDR * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,RRS ) ) ) * Const ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + RRSe ) + ( ( RRSe * CS ) + ( ( ( MUR / ( DS - RCSe ) ) / CS ) - ( ( ( RMSe / MUC ) / MLU ) + RCSe ) ) ) ) ) * ( DS + DS ) )", "obj1": 0.75, "obj2": 0.141014923214409}, {"determining": "( ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - CRS ) ) + ( DDR - MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( MUC,MUM ) ) ) ,( ( ( MUM + RMSe ) - ( CS * MUR ) ) + DS ) )", "obj1": 0.6697080291970803, "obj2": 0.222095194535377}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( ( ( Min( MUR ,MUR ) + Min( CS ,RCSe ) ) * RMSe ) + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + Max( MLU,DS ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5574258658672333}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( RRSe + ( MUC - Max( ( DS * MUM ),DS ) ) ) ) + ( Max( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + ( MUR + RRSe ) ) ) / Max( ( MLU + MLU ),( RCSe + DS ) ) ),( ( ( Min( RMSe ,( CS / RMSe ) ) / CS ) / MUM ) / ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ) ) * MLU ) )", "obj1": 0.6733576642335767, "obj2": 0.21308781641861702}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.614963503649635, "obj2": 0.27351551373303207}, {"determining": "( ( Max( FirstVNF_CPU_Server,Min( ( ( RRS - FirstVNF_Mem ) * CRS ) ,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM / ARS ) - ( ( PN + ( FirstVNF_RAM - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( ( ( Min( ( MLU / MLU ) ,( CS - MUR ) ) * RMSe ) / MUR ) ,Min( MLU ,MLU ) ) ) / ( Max( Max( RMSe,MLU ),( ( RRSe * Max( RCSe,MUC ) ) + ( Max( Max( MUC,CS ),( RCSe - CS ) ) + CS ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),Min( MUC ,( RCSe + ( Max( MUR,MUR ) - ( RMSe + RMSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.718978102189781, "obj2": 0.16784635505323192}, {"determining": "( ( ( ( PN + RRS ) * DDR ) + ( MDR - PN ) ) + Min( ( ( ( ( MDR + ( ( AMS + CRS ) - ( AMS * FirstVNF_Mem ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( MDR / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( Max( AMS,MDR ) * ( RRS * MRS ) ) ) )", "choosing": "Max( ( Min( ( MUM * MLU ) ,MUC ) - Max( MLU,MUM ) ),( Min( ( ( ( ( MLU + MUM ) / MLU ) + MUR ) / ( MLU * RRSe ) ) ,( ( ( ( MUC / MUM ) + RRSe ) * ( ( ( RMSe / MUC ) + MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( RCSe - RRSe ) ) ) ) )", "obj1": 0.9251824817518248, "obj2": 0.025942228914761955}, {"determining": "( ( Max( FirstVNF_CPU_Server,CRS ) / ( ( FirstVNF_RAM / ARS ) - ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( ( ( Min( ( MLU / MLU ) ,( CS - MUR ) ) * RMSe ) / MUR ) ,Min( MLU ,MLU ) ) ) / ( Max( Max( RMSe,MLU ),( ( RRSe * Max( RCSe,MUC ) ) + ( Max( Max( MUC,CS ),( RCSe - CS ) ) + CS ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),Min( MUC ,( RCSe + ( Max( MUR,MUR ) - ( RMSe + RMSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + Min( MLU ,RCSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( ( CS / MLU ) ,( ( MUM + Min( RMSe ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6292165820711502}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( MDR - PN ) ) + Min( ( ( ( Min( Min( ( ACS * ACS ) ,FirstVNF_Mem_Server ) ,CRS ) / MRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,Min( ACS ,FirstVNF_Mem ) ) ) + MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + ( MUR / MLU ) ) + ( ( RMSe / CS ) * ( MUC + MUM ) ) )", "obj1": 0.7153284671532847, "obj2": 0.17416544276359205}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ACS + BR ) ) * ( ( RRS + MDR ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( CS - MLU ) + ( Min( Min( MLU ,DS ) ,MUM ) - ( ( DS + RMSe ) + ( MUR * MUC ) ) ) )", "obj1": 0.593065693430657, "obj2": 0.29827836415290465}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),( MDR - ACS ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6144093178284101}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7299270072992701, "obj2": 0.15619746953498767}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5473282535468954}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( RRSe - Max( ( MUM + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / MUM ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "Max( Max( Min( AMS ,AMS ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( ( MUR * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + Max( MUR,( MUR + ( DS / MUM ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4708029197080292, "obj2": 0.49252200133535246}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) * ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ) * Min( ( PN - MRS ) ,( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / ( ( DS * Max( ( DS + RCSe ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.885036496350365, "obj2": 0.05117598612578255}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7025547445255474, "obj2": 0.1853309372886406}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,( PN - MRS ) )", "choosing": "Max( ( Max( MLU,MUM ) - MUM ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42085657471712834}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( Max( MUR,RRSe ) - ( RCSe / RRSe ) ) + RRSe ),RCSe ) ) + ( CS - ( MUR - MUC ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5401459854014599, "obj2": 0.3797328484896326}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( MLU,DS ) ) )", "obj1": 0.5857664233576643, "obj2": 0.3127837078193808}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( MUR * MUC ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + MUM ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( DDR * ( FirstVNF_RAM - AMS ) ) + ( ACS + ( MDR / ARS ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,( MUC * MUR ) ) + MLU ) / DS ) + MUC ),MUR ) + RRSe ) + ( ( ( Max( ( DS * ( CS - ( RMSe / DS ) ) ),DS ) + ( ( Min( DS ,( RRSe / RMSe ) ) / DS ) - MUR ) ) * MUC ) * ( RRSe * MLU ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4738847498527962}, {"determining": "( ( MDR - ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( CS + Min( RRSe ,MUR ) ) + Max( MUC,MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6328233870957455}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( Min( FirstVNF_RAM ,AMS ) / ARS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( RRSe - ( MLU + MUC ) ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.24054110650031132}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( BR ,DDR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_Mem_Server,Min( ARS ,MDR ) ) ) ) + ( ( ( CRS * AMS ) + ARS ) * MRS ) )", "choosing": "( ( ( ( Max( CS,Max( MUM,RCSe ) ) - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Max( ( RMSe / ( ( ( DS / ( RRSe - MUR ) ) - MUC ) + ( Min( ( MUR * MUR ) ,MLU ) * ( RMSe - ( MUR / CS ) ) ) ) ),( RMSe * RMSe ) ) + MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5115637835983325}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( DDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Min( DS ,DS ) * Max( Min( DS ,Max( ( Max( MUM,MUC ) * MLU ),RRSe ) ),Max( MUR,( ( ( Max( MLU,MUM ) - MUM ) * CS ) + ( MUC - MLU ) ) ) ) )", "obj1": 0.6021897810218978, "obj2": 0.28582424947601487}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) ) + Min( ( FirstVNF_RAM * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( ARS - PN ) ,Const ) + BR ) ) * ( DDR - Max( ( ( FirstVNF_RAM * CRS ) - ( ARS + MRS ) ),( FirstVNF_RAM + ( AMS - CRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( MUM + Min( ( RCSe * MUM ) ,DS ) ),MUR ) ) + ( RRSe - MUC ) ) ) + Max( MUC,( MUR / CS ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4593356699357887}, {"determining": "( ( ( ( FirstVNF_RAM_Server / BR ) * PN ) + Min( CRS ,( ( BR / RRS ) + FirstVNF_Mem ) ) ) + ( PN / ARS ) )", "choosing": "( ( Min( ( Min( Max( ( ( MLU - RRSe ) * RCSe ),( Max( MUR,MUC ) - Max( CS,MLU ) ) ) ,( ( DS / ( RCSe / CS ) ) / Max( ( DS / RMSe ),MLU ) ) ) + RRSe ) ,Min( RRSe ,DS ) ) + ( CS + MUR ) ) + ( ( MUC - MUM ) - RMSe ) )", "obj1": 0.8138686131386861, "obj2": 0.09191073650853206}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( ( ( FirstVNF_CPU - MDR ) / MRS ) + FirstVNF_Mem_Server ) * ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - ( PN - MDR ) ) ) / ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( ( Max( DS,MUR ) - MUR ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) + ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.7390510948905109, "obj2": 0.15417365162791838}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - Max( FirstVNF_CPU,( ACS - MDR ) ) ) ) + Min( ( MDR * MDR ) ,( ( ( ( AMS + BR ) * ( Min( AMS ,AMS ) / ( Min( DDR ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,( Min( FirstVNF_CPU ,DDR ) + RRS ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( MUM + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) * Min( DS ,Min( Min( DS ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.9306569343065694, "obj2": 0.02336415865403483}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( Min( ( Min( AMS ,MDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( ( MUM * MLU ) ,MUC ) ),( Min( ( ( ( ( MLU + MUM ) / MLU ) + MUR ) / ( MLU * RRSe ) ) ,( ( Min( ( Min( RMSe ,DS ) * ( RMSe / MUC ) ) ,( RMSe * Max( MUR,MUM ) ) ) * ( Max( ( RMSe / MUC ),MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( RCSe - RRSe ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5689032902273858}, {"determining": "( ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) / ( ( FirstVNF_RAM_Server - AMS ) * ( RRS + Max( AMS,( ( ( FirstVNF_RAM - ( Const / FirstVNF_CPU_Server ) ) / CRS ) + MDR ) ) ) ) )", "choosing": "( Max( ( ( Min( ( MUM * RMSe ) ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( DS ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5364963503649635, "obj2": 0.3982640830289412}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( AMS * MDR ) ,( ( ( CRS - BR ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,RRSe ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( Min( RRSe ,MUR ) - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ( FirstVNF_Mem * DDR ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( MUR - ( RCSe * DS ) ) / ( RCSe - CS ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + MLU ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( RRSe,MUR ) ) ) ) ) + MUC )", "obj1": 0.9379562043795621, "obj2": 0.0229831458651955}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( ( Max( ARS,ACS ) - FirstVNF_Mem ) + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ARS ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Max( ARS,ACS ) / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "Max( MUR,( MUR - ( Min( DS ,MLU ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.8193430656934306, "obj2": 0.08718618604829138}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "Max( Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + ( FirstVNF_RAM / ( RRS - ARS ) ) ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * ( Max( ( DDR / FirstVNF_CPU_Server ),Const ) + BR ) ) * ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Const ) ) ) / MDR ) ),( RRS * ( ( FirstVNF_RAM_Server * ( Min( AMS ,( FirstVNF_RAM_Server - AMS ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_CPU_Server,Min( MDR ,ARS ) ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + RCSe ) ) - RCSe ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * MUR ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + Min( Max( RRSe,DS ) ,RMSe ) ) ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + Max( MLU,DS ) ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( FirstVNF_RAM_Server * BR ) + ( ( Const - ARS ) + MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( ( FirstVNF_CPU - Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + BR ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,( DS + ( ( MUR * MLU ) - ( MLU * MUC ) ) ) ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) * ( ( ( RRSe - ( ( MLU * MLU ) / MLU ) ) - RRSe ) + ( CS + MUC ) ) ) )", "obj1": 0.6277372262773723, "obj2": 0.2637421730143973}, {"determining": "( ( MRS / ( ( FirstVNF_Mem_Server - MDR ) / FirstVNF_CPU_Server ) ) - Min( MDR ,( Min( Const ,AMS ) - ( ( Min( FirstVNF_Mem ,MRS ) + PN ) / Max( ( ( CRS * MDR ) / ( Max( Const,CRS ) * PN ) ),BR ) ) ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( DS ,MUR ) ) + ( ( MLU - Min( ( Min( MUR ,RMSe ) + ( Min( Max( MLU,MLU ) ,Max( RCSe,CS ) ) + ( CS * RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8594890510948905, "obj2": 0.06616058955956451}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( AMS - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( RCSe + MUM ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6295620437956204, "obj2": 0.25728603607192174}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( Min( ( Min( AMS ,MDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( MUC,MUM ) ) ) ,( Min( ( Max( ( ( DS * DS ) * ( DS / Min( MUC ,MUR ) ) ),( ( CS + MUM ) - ( MLU + RMSe ) ) ) * RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.42883211678832117, "obj2": 0.5689032902273858}, {"determining": "( Max( Const,Const ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU_Server + MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_RAM_Server ) ,Const ) + Const ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( DS / Min( RCSe ,( ( ( DS + CS ) / MUM ) + Max( RCSe,RCSe ) ) ) ),MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Max( Max( MUC,MUR ),MUM ) * Min( ( MUC - DS ) ,MLU ) ) ) )", "obj1": 0.5529197080291971, "obj2": 0.3648255719589994}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM - MDR ) ) + ( ( ( Max( FirstVNF_CPU,ARS ) - MDR ) * ( PN / Min( ( MDR / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + Min( BR ,FirstVNF_CPU ) ) - ( DDR / Const ) ),( ( MDR - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( DS ,MUR ) ) + ( ( MLU - Min( ( Min( ( Max( MUM,RRSe ) - ( MUR / RMSe ) ) ,Min( ( RMSe / RMSe ) ,RMSe ) ) - MUC ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5026121506458631}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.8613138686131386, "obj2": 0.06204103311177514}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM - MDR ) ) + ( ( ( Max( FirstVNF_CPU,ARS ) - MDR ) * ( Const / Min( ( MDR / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Max( ( ( FirstVNF_RAM_Server + Min( BR ,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( FirstVNF_Mem_Server / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) )", "choosing": "( Min( Max( MLU,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( ( MUM + Max( CS,Min( ( RMSe * MUR ) ,CS ) ) ) - MLU ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5026121506458631}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6478102189781022, "obj2": 0.24258831288012891}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( ( PN - MRS ) ,BR ) ) ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( ( Min( MUC ,RMSe ) * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + Max( MUR,( MUR + ( DS / MUM ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.48175182481751827, "obj2": 0.47921184850935866}, {"determining": "( ( ( ( FirstVNF_RAM_Server / ACS ) * ( Max( FirstVNF_CPU,RRS ) + ACS ) ) * MDR ) + FirstVNF_RAM_Server )", "choosing": "( ( MUC / Max( ( RMSe / ( MLU * Min( CS ,RMSe ) ) ),Min( ( DS + Max( DS,MLU ) ) ,( ( MLU + CS ) - RCSe ) ) ) ) + RCSe )", "obj1": 0.4543795620437956, "obj2": 0.5186422646810317}, {"determining": "Max( Max( ( Max( AMS,MDR ) + MDR ),Min( FirstVNF_Mem ,( ( AMS + ( ( FirstVNF_Mem + ARS ) + DDR ) ) / ( ACS - FirstVNF_RAM ) ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( AMS ,FirstVNF_RAM ) ) * Min( MRS ,FirstVNF_Mem ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_CPU * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( CS + ( ( MLU - ( DS - RRSe ) ) + RMSe ) ) ) - DS ) - DS ) * ( Min( ( Max( Max( ( ( RCSe * MUM ) + Min( RMSe ,CS ) ),Max( Max( MUR,MLU ),Max( RMSe,MUM ) ) ),( Min( RRSe ,MUM ) / RMSe ) ) / DS ) ,Min( RCSe ,Min( RMSe ,( RRSe + RRSe ) ) ) ) * MLU ) )", "obj1": 0.4781021897810219, "obj2": 0.4818268819150492}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) + Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Const ) ) ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4744525547445255, "obj2": 0.4916086335491075}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( Min( ( ACS * ACS ) ,FirstVNF_Mem_Server ) ,CRS ) ) - DDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + CS )", "obj1": 0.7408759124087592, "obj2": 0.14687773305399782}, {"determining": "( ( Max( BR,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( MDR / ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS / FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * ( ( MUM + ( MUM - ( CS * DS ) ) ) / RRSe ) ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RMSe ,( DS * DS ) ) - MUC ) + Max( MUC,RCSe ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + Min( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( DDR ,BR ) ) * FirstVNF_Mem_Server ) ) ,( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) / Min( Max( RMSe,RMSe ) ,( CS / RRSe ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.9726277372262774, "obj2": 0.004931682585672287}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( Max( FirstVNF_Mem_Server,MDR ) ,( Min( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM + BR ) ) ,( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( DS + DS ) ,MUM ) - Min( RCSe ,Max( DS,Max( MUR,CS ) ) ) ) )", "obj1": 0.6222627737226277, "obj2": 0.2651306238711768}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( ( FirstVNF_RAM * ( PN / CRS ) ) * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ,( MDR * MRS ) ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),MUR ) ,( ( RRSe / DS ) / MUM ) ) + Max( MUC,RCSe ) )", "obj1": 0.6204379562043796, "obj2": 0.2720126285173436}], "35": [{"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( MUC,( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) / DDR ) - ACS ) ,( PN - MRS ) )", "choosing": "Max( ( Max( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ),MUM ) - MUM ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - FirstVNF_Mem_Server ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,CRS ) ) ) * Min( AMS ,( ACS - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( MLU * MUM ) + RRSe ) - RRSe ),( ( RRSe * ( ( ( ( MUR + DS ) * RCSe ) / Min( MUC ,( RRSe + DS ) ) ) + Max( MUM,Max( ( RRSe * CS ),MLU ) ) ) ) + ( CS + MUC ) ) ) - ( Min( ( ( MUR - RRSe ) * MUM ) ,MLU ) + Max( MLU,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Min( AMS ,AMS ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( ( MUR * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + Max( MUR,( MUR + ( DS / MUM ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( ( FirstVNF_RAM - ( MDR - CRS ) ) - AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUR ) / Min( Max( MLU,MUC ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( Max( MUC,RRSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) * ( RCSe * ( CS + RMSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( ( FirstVNF_RAM_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - MDR ) - MDR ) ) + Min( ( ( ( ARS * MDR ) * CRS ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) * RRSe ) + ( MUR - DS ) )", "obj1": 0.7554744525547445, "obj2": 0.13251442882612158}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem / MRS ) ) ) + ( ( Const + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) + ( PN / ACS ) )", "choosing": "( ( CS + MUC ) + Max( ( ( ( DS + ( ( ( RMSe * MUM ) * RRSe ) - ( MUC * MLU ) ) ) / ( DS * CS ) ) / Max( ( ( ( ( MUC * MLU ) - ( MUM + MUM ) ) + RRSe ) / MLU ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - MUR ) / RMSe ) ,CS ),( DS + ( MUR / ( CS * Min( ( MLU * RMSe ) ,MUC ) ) ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS + MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( MRS * FirstVNF_RAM ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( MLU + RRSe ) + DS ) - MUM ) + Min( ( MLU - MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,( MLU - MUM ) ) )", "obj1": 0.6788321167883211, "obj2": 0.2076126926062975}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( Max( DDR,FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) ,RRSe ) ) ) - ( Min( ( ( MUC - RRSe ) / RMSe ) ,CS ) + Max( MLU,DS ) ) )", "obj1": 0.8083941605839416, "obj2": 0.09728447491459291}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( MRS * FirstVNF_RAM ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUC ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.7700729927007299, "obj2": 0.1209441191605436}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) - ( ( ( RRSe - ( MLU + MUR ) ) - Max( ( ( Min( DS ,MLU ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.6916058394160584, "obj2": 0.19619335352288395}, {"determining": "( Max( Const,Const ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU_Server + MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_RAM_Server ) ,Const ) + Const ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( DS / Min( RCSe ,( ( ( DS + CS ) / MUM ) + Max( RCSe,RCSe ) ) ) ),MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Max( Max( MUC,MUR ),MUM ) * Min( ( MUC - DS ) ,MLU ) ) ) )", "obj1": 0.5529197080291971, "obj2": 0.3648255719589994}, {"determining": "( Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) / MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Max( ARS,Const ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8540145985401459, "obj2": 0.06523591837041469}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( MDR * MDR ) / ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_Mem + MDR ) ) ) * ( AMS + BR ) ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Min( CS ,Min( ( RMSe + MLU ) ,MLU ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.6368613138686131, "obj2": 0.25160117641657886}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + ( ( DDR / DDR ) - ACS ) )", "choosing": "( RRSe + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.4251824817518248, "obj2": 0.5798636045328007}, {"determining": "( ( FirstVNF_RAM - CRS ) + Min( ( MDR * ( ( ARS * MDR ) * BR ) ) ,Min( ( Max( FirstVNF_CPU,Min( BR ,AMS ) ) * ( FirstVNF_CPU_Server / MDR ) ) ,( ( Max( DDR,AMS ) + CRS ) / PN ) ) ) )", "choosing": "( ( RRSe + Min( RMSe ,Max( MUM,DS ) ) ) + Min( Min( Min( DS ,DS ) ,MUM ) ,( Min( ( Min( MLU ,CS ) / ( ( ( MUR + MUM ) / Min( RCSe ,MUM ) ) - RCSe ) ) ,Max( RMSe,MUM ) ) + ( CS * MUC ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3559806692118027}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) )", "obj1": 0.5711678832116789, "obj2": 0.3388592641850901}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) ) + Min( ( FirstVNF_RAM * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( ARS - PN ) ,Const ) + BR ) ) * ( DDR - Max( ( ( FirstVNF_RAM * CRS ) - ( ARS + MRS ) ),( FirstVNF_RAM + ( AMS - CRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( MUM + Min( ( RCSe * MUM ) ,DS ) ),MUR ) ) + ( RRSe - MUC ) ) ) + Max( MUC,( MUR / CS ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4593356699357887}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "Max( Max( AMS,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ),( ( ( Max( BR,Max( CRS,PN ) ) - Max( FirstVNF_CPU,ARS ) ) * BR ) - ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( CS + RCSe ),( MUR + ( Max( ( ( DS * DS ) * ( RCSe - RMSe ) ),( ( CS + MUM ) * ( RMSe + MLU ) ) ) - ( CS - CS ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5998991963584823}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6624087591240876, "obj2": 0.22593252392584987}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( MUR * MUC ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( ( Max( RMSe,MUR ) - MUM ) + MLU ) ) ) ) + MUM ) )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( PN - MDR ) )", "choosing": "( ( MUC / ( MUC - MLU ) ) + Max( MUC,MUR ) )", "obj1": 0.7135036496350365, "obj2": 0.1838672636105868}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6478102189781022, "obj2": 0.24258831288012891}, {"determining": "( ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - CRS ) ) + ( DDR - MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( MUC,MUM ) ) ) ,( ( ( MUM + RMSe ) - ( CS * MUR ) ) + DS ) )", "obj1": 0.6697080291970803, "obj2": 0.222095194535377}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( MLU,DS ) ) )", "obj1": 0.5875912408759124, "obj2": 0.30822824313105446}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( ( ( Min( MUR ,MUR ) + Min( CS ,RCSe ) ) * RMSe ) + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + Max( MLU,DS ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5574258658672333}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server * BR ) + ( PN - MDR ) ) / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_RAM_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RRSe - ( ( MLU * MLU ) / MLU ) ) - RRSe ) + ( CS * MUC ) ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - CS ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9635036496350365, "obj2": 0.00881509528934248}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM_Server - MDR ) ) + ( ( Min( Max( ARS,FirstVNF_CPU ) ,MDR ) * ( Const / Min( ( ( MRS * FirstVNF_RAM_Server ) / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Min( RRS ,PN ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( Max( ( MLU / ( Max( MUR,( RCSe / MLU ) ) + MLU ) ),Max( RMSe,Max( ( ( RMSe * DS ) + RMSe ),MUC ) ) ) * CS ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5428536266276126}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),( MDR - ACS ) ),FirstVNF_RAM_Server )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - DS ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6059017796643115}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.7299270072992701, "obj2": 0.15619746953498767}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( FirstVNF_RAM_Server * PN ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - MUC ) ,MUR ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ( ( FirstVNF_Mem - ( Max( RRS,ARS ) * MRS ) ) / DDR ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( DS + MUC ) / ( ( MUR / MUC ) + CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( ( RRSe + CS ),MLU ) ) )", "obj1": 0.572992700729927, "obj2": 0.3372195341565952}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - FirstVNF_CPU_Server ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ,( ( ( ( BR + ( Max( FirstVNF_RAM_Server,BR ) - ( PN - MDR ) ) ) * ( AMS + Max( ( MRS + Const ),( CRS * FirstVNF_Mem ) ) ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( MLU + MLU ) ) ) ) ) / ( RMSe + CS ) ) + MUC )", "obj1": 0.8722627737226277, "obj2": 0.057439424401684355}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( Min( ( ( RRS + BR ) / FirstVNF_CPU ) ,( ( BR * ( DDR * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,RRS ) ) ) * Const ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + RRSe ) + ( ( RRSe * CS ) + ( ( ( MUR / ( DS - RCSe ) ) / CS ) - ( ( ( RMSe / MUC ) / MLU ) + RCSe ) ) ) ) ) * ( DS + DS ) )", "obj1": 0.75, "obj2": 0.141014923214409}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( MDR - PN ) ) + Min( ( ( ( Min( Min( ( ACS * ACS ) ,FirstVNF_Mem_Server ) ,CRS ) / MRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,Min( ACS ,FirstVNF_Mem ) ) ) + MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + ( MUR / MLU ) ) + ( ( RMSe / CS ) * ( MUC + MUM ) ) )", "obj1": 0.7153284671532847, "obj2": 0.17416544276359205}, {"determining": "( ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) / ( ( FirstVNF_RAM_Server - AMS ) * ( RRS + Max( AMS,( ( ( FirstVNF_RAM - ( Const / FirstVNF_CPU_Server ) ) / CRS ) + MDR ) ) ) ) )", "choosing": "( Max( ( ( Min( ( MUM * RMSe ) ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( DS ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5364963503649635, "obj2": 0.3982640830289412}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5473282535468954}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - DDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MLU * MLU ) / MLU ),MUR ) + RRSe ) + CS )", "obj1": 0.7372262773722628, "obj2": 0.15074746971486783}, {"determining": "( ( PN / ARS ) + ( ( ( FirstVNF_RAM_Server / BR ) * ( Min( AMS ,AMS ) * ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server / ARS ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) + ( PN - MDR ) ) )", "choosing": "( ( Min( ( Min( ( ( ( MLU - RRSe ) * RCSe ) * Max( Min( CS ,RMSe ),MUR ) ) ,( ( Max( MUC,MUR ) / RRSe ) / Max( ( DS / RMSe ),MLU ) ) ) + RRSe ) ,Min( RRSe ,DS ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.39963503649635035, "obj2": 0.6398460404448308}, {"determining": "( ( ( PN * ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) ) + ( PN - MDR ) ) + Min( MRS ,BR ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( Max( MUR,RRSe ) - ( RCSe / RRSe ) ) + RRSe ),RCSe ) ) + ( CS - ( MUR - MUC ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.791970802919708, "obj2": 0.10317447263286766}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,( PN - MRS ) )", "choosing": "Max( ( Max( MLU,MUM ) - MUM ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42085657471712834}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.5401459854014599, "obj2": 0.3797328484896326}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * BR ) * MDR ) ,( ( ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( AMS / ( DDR + ARS ) ) ) * ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + Min( ARS ,( BR - Const ) ) ) ) ) / MDR ) ) )", "choosing": "Min( ( ( MUR / MUC ) - ( RCSe / MUM ) ) ,Max( RRSe,( MLU + MUR ) ) )", "obj1": 0.9525547445255474, "obj2": 0.019507414009465276}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "( Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU_Server - MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( FirstVNF_CPU_Server - ACS ),RRS ) ) ) / MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) )", "choosing": "( ( ( ( MLU - RMSe ) * Min( ( MUC / Min( MUR ,MUC ) ) ,Max( MUR,( CS / Min( ( MUM / CS ) ,MUC ) ) ) ) ) / RCSe ) + ( Max( MUM,MUR ) + RRSe ) )", "obj1": 0.6131386861313869, "obj2": 0.28131529147724865}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.6952554744525548, "obj2": 0.19194277112740554}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( ( Max( ARS,ACS ) - FirstVNF_Mem ) + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Max( ARS,ACS ) / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "Max( MUR,( MUR - ( Min( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ,MLU ) - ( MUR + ( Max( MLU,DS ) + MUR ) ) ) ) )", "obj1": 0.8193430656934306, "obj2": 0.08718618604829138}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) + Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Const ) ) ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4744525547445255, "obj2": 0.4916086335491075}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) * ( RCSe * ( CS + RMSe ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) * ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ) * Min( ( PN - MRS ) ,( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / ( ( DS * Max( ( DS + RCSe ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.885036496350365, "obj2": 0.05117598612578255}, {"determining": "( ( DDR * ( FirstVNF_RAM - AMS ) ) + ( ACS + ( MDR / ARS ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,( MUC * MUR ) ) + MLU ) / DS ) + MUC ),MUR ) + RRSe ) + ( ( ( Max( ( DS * ( CS - ( RMSe / DS ) ) ),DS ) + ( ( Min( DS ,( RRSe / RMSe ) ) / DS ) - MUR ) ) * MUC ) * ( RRSe * MLU ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4738847498527962}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( RRSe - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ) ) )", "obj1": 0.5273722627737226, "obj2": 0.4033353547350011}, {"determining": "Max( Min( ( ( Min( CRS ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) * BR ) * MDR ) ,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server * MRS ) )", "choosing": "( ( MUR - ( MLU + MUR ) ) * Min( DS ,Min( Min( DS ,( Min( MUR ,MUC ) - ( RCSe + RRSe ) ) ) ,( ( Min( RMSe ,RRSe ) / ( RCSe + RRSe ) ) - Min( Min( ( ( MUC + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6492792378733494}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.614963503649635, "obj2": 0.27351551373303207}, {"determining": "Max( Max( ( Max( AMS,MDR ) + MDR ),Min( FirstVNF_Mem ,( ( AMS + ( ( FirstVNF_Mem + ARS ) + DDR ) ) / ( ACS - FirstVNF_RAM ) ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( AMS ,FirstVNF_RAM ) ) * Min( MRS ,FirstVNF_Mem ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_CPU * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( CS + ( ( MLU - ( DS - RRSe ) ) + RMSe ) ) ) - DS ) - DS ) * ( Min( ( Max( Max( ( ( RCSe * MUM ) + Min( RMSe ,CS ) ),Max( Max( MUR,MLU ),Max( RMSe,MUM ) ) ),( Min( RRSe ,MUM ) / RMSe ) ) / DS ) ,Min( RCSe ,Min( RMSe ,( RRSe + RRSe ) ) ) ) * MLU ) )", "obj1": 0.4781021897810219, "obj2": 0.4818268819150492}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( Max( AMS,FirstVNF_RAM_Server ) * ( ( FirstVNF_RAM_Server * MRS ) - Min( ( FirstVNF_CPU - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( Min( ( Max( RMSe,MLU ) - Min( Min( DS ,MUC ) ,RCSe ) ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,RCSe ) ,( ( Min( CS ,MUM ) + MUM ) / ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( Min( ( Min( AMS ,MDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5689032902273858}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) / MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_RAM_Server ) ,Const ) + BR ) ) * Min( ( PN / AMS ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,( DS + ( ( ( RMSe * MUM ) + Max( ( MLU / CS ),MLU ) ) - ( MLU * MUC ) ) ) ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) * ( ( ( RRSe - ( ( MLU * MLU ) / MLU ) ) - RRSe ) / ( CS * MUC ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3559806692118027}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),( MDR - ACS ) ),( ACS - RRS ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( ( MUM * MLU ) ,MUC ) ),( Min( ( ( ( ( MLU + MUM ) / MLU ) + MUR ) / ( MLU * RRSe ) ) ,( ( Min( ( Min( RMSe ,DS ) * ( RMSe / MUC ) ) ,( RMSe * Max( MUR,MUM ) ) ) * ( Max( ( RMSe / MUC ),MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( RCSe - RRSe ) ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6144093178284101}, {"determining": "Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + Min( MLU ,RCSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( ( CS / MLU ) ,( ( MUM + Min( RMSe ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6292165820711502}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - Max( FirstVNF_CPU,( ACS - MDR ) ) ) ) + Min( ( MDR * MDR ) ,( ( ( ( AMS + BR ) * ( Min( AMS ,AMS ) / ( Min( DDR ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,( Min( FirstVNF_CPU ,DDR ) + RRS ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( MUM + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.9379562043795621, "obj2": 0.0229831458651955}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( ( FirstVNF_RAM * ( PN / CRS ) ) * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ,( MDR * MRS ) ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),MUR ) ,( ( RRSe / DS ) / MUM ) ) + Max( MUC,RCSe ) )", "obj1": 0.6204379562043796, "obj2": 0.2720126285173436}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( RRSe - Max( ( MUM + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / MUM ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "Max( Max( AMS,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ),( ( ( Max( BR,Max( CRS,PN ) ) - Max( FirstVNF_CPU,ARS ) ) * BR ) - ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( CS + RCSe ),( MUR + ( Max( ( ( DS * DS ) * ( RCSe - RMSe ) ),( ( CS + MUM ) * ( RMSe + MLU ) ) ) - ( CS - CS ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5010781700418937}, {"determining": "( ( ( DDR / DDR ) - ACS ) + ( PN / ARS ) )", "choosing": "( ( Min( ( Min( Max( ( RRSe + RCSe ),( Max( MUR,MUC ) - Max( CS,MLU ) ) ) ,( ( DS / ( RCSe / CS ) ) / Max( ( DS / RMSe ),MLU ) ) ) + RRSe ) ,Min( RRSe ,DS ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( FirstVNF_RAM_Server * BR ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( ( FirstVNF_CPU - Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + BR ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - CS ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7481751824817519, "obj2": 0.14672626078161374}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( Min( RRS ,( ( AMS / FirstVNF_Mem ) - MDR ) ),( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,( MUC + ( RRSe / MLU ) ) ) ),Min( Min( DS ,DS ) ,MUM ) )", "obj1": 0.5237226277372263, "obj2": 0.4151585495372451}, {"determining": "( ( ( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( MLU + Max( MUC,MUR ) )", "obj1": 0.9872262773722628, "obj2": 0.0017776193406022814}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( Min( ( Min( AMS ,MDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( ( MUM * MLU ) ,MUC ) ),( Min( ( ( ( ( MLU + MUM ) / MLU ) + MUR ) / ( MLU * RRSe ) ) ,( ( Min( ( Min( RMSe ,DS ) * ( RMSe / MUC ) ) ,( RMSe * Max( MUR,MUM ) ) ) * ( Max( ( RMSe / MUC ),MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( RCSe - RRSe ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5689032902273858}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "Min( Max( Min( ( FirstVNF_CPU_Server - MDR ) ,RRS ),( FirstVNF_RAM_Server / RRS ) ) ,Min( ACS ,Const ) )", "choosing": "Max( Min( Min( ( DS * DS ) ,MUC ) ,RMSe ),Min( RCSe ,Min( DS ,DS ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4647423673361221}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) + ( CRS - MDR ) ) + Min( FirstVNF_RAM_Server ,( MDR / ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - ( PN - MDR ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( ( ( ( MUC - ( RCSe * MLU ) ) / RCSe ) / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUR,MUC ) ) ) ) ) + ( Min( ( RCSe + MUM ) ,DS ) + MUM ) )", "obj1": 0.4562043795620438, "obj2": 0.5173956675526197}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( DS + MUC ) / ( DS * CS ) ) ) ) )", "obj1": 0.5291970802919708, "obj2": 0.4031455864650503}, {"determining": "( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ( ( FirstVNF_Mem - ( FirstVNF_RAM_Server * MRS ) ) / DDR ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( Max( MUR,( MUR + ( DS / MUM ) ) ) + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.7791970802919708, "obj2": 0.11129611357603313}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( MUM + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.6733576642335767, "obj2": 0.21308781641861702}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( BR ,DDR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - Max( FirstVNF_Mem_Server,Min( ARS ,MDR ) ) ) ) + ( ( ( CRS * AMS ) + ARS ) * MRS ) )", "choosing": "( ( ( ( Max( CS,Max( MUM,RCSe ) ) - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Max( ( RMSe / ( ( ( DS / ( RRSe - MUR ) ) - MUC ) + ( Min( ( MUR * MUR ) ,MLU ) * ( RMSe - ( MUR / CS ) ) ) ) ),( RMSe * RMSe ) ) + MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5115637835983325}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( MDR - ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( CS + Min( RRSe ,MUR ) ) + Max( MUC,MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6328233870957455}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( Min( DS ,DS ) / RMSe ) ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7007299270072993, "obj2": 0.18743317852501581}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( Min( ( Min( AMS ,MDR ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.611331949562027}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( ( MRS * ( FirstVNF_RAM_Server + Const ) ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM + RMSe ) - MLU ) + ( ( ( DS - ( CS + ( MUC + RMSe ) ) ) - RRSe ) - DS ) )", "obj1": 0.6532846715328468, "obj2": 0.23721449321587293}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( DS ,MUR ) ) + ( ( MLU - Min( ( Min( ( Max( MUM,RRSe ) - ( MUR / RMSe ) ) ,Min( ( RMSe / RMSe ) ,RMSe ) ) - MUC ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.7025547445255474, "obj2": 0.1853309372886406}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( ( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MUR ) ) * RMSe ) / MUR ) ) ) / ( Max( Max( RMSe,MLU ),( ( RRSe * Max( RCSe,MUC ) ) + ( MUC + CS ) ) ) - ( RMSe - RCSe ) ) ) + Max( Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ),RCSe ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + ( ( BR / FirstVNF_CPU_Server ) / ( RRS + ARS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM / MLU ) / MUM ) + MUM ),DS ) * ( ( DS / MUM ) / ( ( ( ( MUC + DS ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) / ( ( RCSe - CS ) / Min( Max( RMSe,RMSe ) ,( CS / RRSe ) ) ) ) + MUC )", "obj1": 0.9708029197080292, "obj2": 0.005858852297766249}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) * FirstVNF_Mem_Server ) * MDR ) ,( ( DDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + MUM ) )", "obj1": 0.6332116788321168, "obj2": 0.25653832356833295}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + ( PN - MRS ) )", "choosing": "( ( ( MUM / ( RRSe + RCSe ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.6058394160583942, "obj2": 0.28239648437396914}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) - ( ( ( RRSe - ( MLU + MUR ) ) - Max( ( ( Min( DS ,MLU ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5378212909201331}, {"determining": "( ( ( MDR + Max( FirstVNF_Mem_Server,BR ) ) * FirstVNF_CPU_Server ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) + BR ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / MUR ) + Max( ( ( CS + MLU ) / Max( ( MLU / ( ( RCSe - RRSe ) + RRSe ) ),( MUR + ( ( Max( RMSe,MUM ) - RMSe ) + MLU ) ) ) ),Max( Min( ( ( MUC - RRSe ) / RMSe ) ,CS ),CS ) ) )", "obj1": 0.8613138686131386, "obj2": 0.06204103311177514}], "36": [{"determining": "Min( ( ( Max( ( FirstVNF_RAM_Server * PN ),( MDR - CRS ) ) / ( Const - ( FirstVNF_RAM / MDR ) ) ) - ACS ) ,( PN * MRS ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( MUM * MUC ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC + MUR ) ) ) ) ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( DS,MUR ) / RRSe ) ) - ( Max( MUR,MLU ) + ( ( RRSe - ( RRSe / MUM ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( MUC,( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) / DDR ) - ACS ) ,( PN - MRS ) )", "choosing": "Max( ( Max( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ),MUM ) - MUM ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Min( AMS ,AMS ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - MUC ) ,MUR ) ) ) )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( ( FirstVNF_RAM - ( MDR - CRS ) ) - AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUR ) / Min( Max( MLU,MUC ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( Max( MUC,RRSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) * ( RCSe * ( CS + RMSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS + MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( MRS * FirstVNF_RAM ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( MLU + RRSe ) + DS ) - MUM ) + Min( ( MLU - MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,( MLU - MUM ) ) )", "obj1": 0.6788321167883211, "obj2": 0.2076126926062975}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - FirstVNF_CPU_Server ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ,( ( ( ( BR + ( Max( FirstVNF_RAM_Server,BR ) - ( PN - MDR ) ) ) * ( AMS + Max( ( MRS + Const ),( CRS * FirstVNF_Mem ) ) ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( MLU + MLU ) ) ) ) ) / ( RMSe + CS ) ) + MUC )", "obj1": 0.8722627737226277, "obj2": 0.057439424401684355}, {"determining": "( ( ( ARS * FirstVNF_RAM ) + ( ( PN - MDR ) - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( ACS - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( RRSe ,CS ) - ( Min( ( RRSe - ( RRSe - MLU ) ) ,RRSe ) + ( DS * MUC ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.13251442882612155}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ACS * AMS ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( DS ,( RMSe / Max( RCSe,( ( RMSe * ( MUM + MUC ) ) - RMSe ) ) ) ) - ( Max( MUM,MUR ) / RRSe ) ) )", "obj1": 0.7645985401459854, "obj2": 0.12094156345758214}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem / MRS ) ) ) + ( ( Const + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) + ( PN / ACS ) )", "choosing": "( ( CS + MUC ) + Max( ( ( ( DS + ( ( ( RMSe * MUM ) * RRSe ) - ( MUC * MLU ) ) ) / ( DS * CS ) ) / Max( ( ( ( ( MUC * MLU ) - ( MUM + MUM ) ) + RRSe ) / MLU ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - MUR ) / RMSe ) ,CS ),( DS + ( MUR / ( CS * Min( ( MLU * RMSe ) ,MUC ) ) ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) - ( ( ( RRSe - ( MLU + MUR ) ) - Max( ( ( Min( DS ,MLU ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.6916058394160584, "obj2": 0.19619335352288395}, {"determining": "( Max( Const,Const ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU_Server + MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_RAM_Server ) ,Const ) + Const ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( DS / Min( RCSe ,( ( ( DS + CS ) / MUM ) + Max( RCSe,RCSe ) ) ) ),MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Max( Max( MUC,MUR ),MUM ) * Min( ( MUC - DS ) ,MLU ) ) ) )", "obj1": 0.5529197080291971, "obj2": 0.3648255719589994}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) + Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Const ) ) ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4744525547445255, "obj2": 0.4916086335491075}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( Min( ( Min( AMS ,PN ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( RCSe + DS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),MUR ) )", "obj1": 0.41058394160583944, "obj2": 0.6029742092722469}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_Mem + MDR ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( RRSe + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.6295620437956204, "obj2": 0.25849977644642885}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / Max( ( FirstVNF_Mem + MDR ),( MDR - ACS ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + ( Min( ( ( ( ( MLU + MUM ) / MLU ) + MUR ) / ( MLU * RRSe ) ) ,( ( Min( ( Min( RMSe ,DS ) * ( RMSe / MUC ) ) ,( RMSe * Max( MUR,MUM ) ) ) * ( Max( ( RMSe / MUC ),MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( RCSe - RRSe ) ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5733898261980113}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_RAM_Server * PN ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( MUM ,( MUC / MUR ) ) ) ) ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( RRSe - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3080034077706307}, {"determining": "( ( FirstVNF_RAM - CRS ) + Min( ( MDR * ( ( ARS * MDR ) * BR ) ) ,Min( ( Max( FirstVNF_CPU,Min( BR ,AMS ) ) * ( FirstVNF_CPU_Server / MDR ) ) ,( ( Max( DDR,AMS ) + CRS ) / PN ) ) ) )", "choosing": "( ( RRSe + Min( RMSe ,Max( MUM,DS ) ) ) + Min( Min( Min( DS ,DS ) ,MUM ) ,( Min( ( Min( MLU ,CS ) / ( ( ( MUR + MUM ) / Min( RCSe ,MUM ) ) - RCSe ) ) ,Max( RMSe,MUM ) ) + ( CS * MUC ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3559806692118027}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) * ( RCSe * ( CS + RMSe ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) )", "obj1": 0.5711678832116789, "obj2": 0.3388592641850901}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * BR ) * MDR ) ,( ( ( ( Max( Min( AMS ,AMS ),PN ) + ( RRS - Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( AMS / ( DDR + ARS ) ) ) * ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + Min( ARS ,( BR - Const ) ) ) ) ) / MDR ) ) )", "choosing": "Min( ( ( MUR / MUC ) - ( RCSe / MUM ) ) ,Max( RRSe,( MLU + MUR ) ) )", "obj1": 0.9525547445255474, "obj2": 0.019507414009465276}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) ) + Min( ( FirstVNF_RAM * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( ARS - PN ) ,Const ) + BR ) ) * ( DDR - Max( ( ( FirstVNF_RAM * CRS ) - ( ARS + MRS ) ),( FirstVNF_RAM + ( AMS - CRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( MUM + Min( ( RCSe * MUM ) ,DS ) ),MUR ) ) + ( RRSe - MUC ) ) ) + Max( MUC,( MUR / CS ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4593356699357887}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "Max( Max( ( Max( AMS,MDR ) + MDR ),Min( FirstVNF_Mem ,( ( AMS + ( ( FirstVNF_Mem + ARS ) + DDR ) ) / ( ACS - FirstVNF_RAM ) ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( AMS ,FirstVNF_RAM ) ) * Min( MRS ,FirstVNF_Mem ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_CPU * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( CS + ( ( MLU - ( DS - RRSe ) ) + RMSe ) ) ) - DS ) - DS ) * ( Min( ( Max( Max( ( ( RCSe * MUM ) + Min( RMSe ,CS ) ),Max( Max( MUR,MLU ),Max( RMSe,MUM ) ) ),( Min( RRSe ,MUM ) / RMSe ) ) / DS ) ,Min( RCSe ,Min( RMSe ,( RRSe + RRSe ) ) ) ) * MLU ) )", "obj1": 0.4781021897810219, "obj2": 0.4818268819150492}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( DS ,MUR ) ) + ( ( MLU - Min( ( Min( ( Max( MUM,RRSe ) - ( MUR / RMSe ) ) ,Min( ( RMSe / RMSe ) ,RMSe ) ) - MUC ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.7025547445255474, "obj2": 0.1853309372886406}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "( ( ( ( BR * ( Max( ARS,( MDR * Max( MDR,FirstVNF_RAM ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * DDR ) ) * FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( ( ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) - RRSe ) - DS ) * ( Min( CS ,( Max( ( CS - DS ),( CS / DS ) ) - ( RRSe - ( MLU + MUC ) ) ) ) * RCSe ) )", "obj1": 0.45255474452554745, "obj2": 0.5285401032999011}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( MUR * MUC ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( ( Max( RMSe,MUR ) - MUM ) + MLU ) ) ) ) + MUM ) )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7135036496350365, "obj2": 0.17488669964807585}, {"determining": "( ( DDR * ( FirstVNF_RAM - AMS ) ) + ( ACS + ( MDR / ARS ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,( MUC * MUR ) ) + MLU ) / DS ) + MUC ),MUR ) + RRSe ) + ( ( ( Max( ( DS * ( CS - ( RMSe / DS ) ) ),DS ) + ( ( Min( DS ,( RRSe / RMSe ) ) / DS ) - MUR ) ) * MUC ) * ( RRSe * MLU ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4738847498527962}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + MLU )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( MDR * MDR ) / ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_Mem + MDR ) ) ) * ( AMS + BR ) ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Min( CS ,Min( ( RMSe + MLU ) ,MLU ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.6368613138686131, "obj2": 0.25160117641657886}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( MDR - PN ) ) + Min( ( ( ( Min( Min( ( ACS * ACS ) ,FirstVNF_Mem_Server ) ,CRS ) / MRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,Min( ACS ,FirstVNF_Mem ) ) ) + MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / ACS ) ) + BR ) ) * Min( ( PN - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + ( MUR / MLU ) ) + ( ( RCSe * MUM ) * ( MUC + MUM ) ) )", "obj1": 0.41788321167883213, "obj2": 0.5934151997929974}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( MUM + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.6733576642335767, "obj2": 0.21308781641861702}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + PN ) ) ,Min( ( FirstVNF_Mem * ( RRS / AMS ) ) ,( ( CRS + MRS ) / FirstVNF_CPU_Server ) ) ) - DDR ) * ACS ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( FirstVNF_CPU_Server ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( ( RCSe - MUM ),MUC ) - ( ( RRSe + RRSe ) + ( ( RMSe + MUM ) + DS ) ) ) ) + ( MUC + DS ) ) ) - Max( CS,RCSe ) )", "obj1": 0.7208029197080292, "obj2": 0.17216715355801357}, {"determining": "( ( ( ( AMS - Max( PN,BR ) ) * ( AMS + FirstVNF_CPU ) ) / ( Min( Max( ( ACS * Const ),( ( DDR / Max( RRS,CRS ) ) / FirstVNF_RAM ) ) ,CRS ) - MDR ) ) + Max( MRS,MRS ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( ( CS / MUR ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,Min( Min( Min( ( RCSe * Max( Max( DS,MUM ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) ,( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4333090978110347}, {"determining": "Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + Min( MLU ,RCSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( ( CS / MLU ) ,( ( MUM + Min( RMSe ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6292165820711502}, {"determining": "( Min( ( ( RRS + BR ) / FirstVNF_CPU ) ,( ( BR * ( DDR * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,RRS ) ) ) * Const ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + RRSe ) + ( ( RRSe * CS ) + ( ( ( MUR / ( DS - RCSe ) ) / CS ) - ( ( ( RMSe / MUC ) / MLU ) + RCSe ) ) ) ) ) * ( DS + DS ) )", "obj1": 0.75, "obj2": 0.141014923214409}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( Max( DDR,FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( ( ( ( DS - Max( RMSe,MLU ) ) - RRSe ) - DS ) ,RRSe ) ) ) - ( Min( ( ( MUC - RRSe ) / RMSe ) ,CS ) + Max( MLU,DS ) ) )", "obj1": 0.8083941605839416, "obj2": 0.09728447491459291}, {"determining": "( ( ( ( MDR / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,AMS ) + ( ( AMS - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( ARS + FirstVNF_CPU_Server ) ) * ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU_Server * MRS ) ) + BR ) ) * Min( ( MDR / ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,MDR ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( ( MUR / RMSe ) / MLU ) / RCSe ) ,( MLU / ( Min( MUM ,Max( ( MUC * MLU ),MUM ) ) - MLU ) ) ) / ( CS / MUM ) ) + ( ( ( ( MUM / DS ) - ( CS * DS ) ) + ( Min( RMSe ,MLU ) / MLU ) ) + RRSe ) )", "obj1": 0.8175182481751825, "obj2": 0.09648172904443382}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( RRSe - Max( ( MUM + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / MUM ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server * BR ) + ( PN - MDR ) ) / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_RAM_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RRSe - ( ( MLU * MLU ) / MLU ) ) - RRSe ) + ( CS * MUC ) ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - CS ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9635036496350365, "obj2": 0.00881509528934248}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + ( ( AMS + BR ) - MRS ) )", "choosing": "( ( ( MUM / ( RRSe + Min( Min( DS ,DS ) ,MUM ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.46167883211678834, "obj2": 0.5102340405355521}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( ( MRS * ( FirstVNF_RAM_Server + Const ) ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM + RMSe ) - MLU ) + ( ( ( DS - ( CS + ( MUC + RMSe ) ) ) - RRSe ) - DS ) )", "obj1": 0.6532846715328468, "obj2": 0.23721449321587293}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR - ARS ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Max( ( FirstVNF_Mem + MDR ),( MDR - ACS ) ) ) * ( ( Min( ( BR - ARS ) ,FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( MUC ,DS ) ,MUM ) - ( ( ( RRSe - ( RCSe + MUR ) ) - ( CS * MUC ) ) + ( CS * MUC ) ) ) )", "obj1": 0.6459854014598541, "obj2": 0.24548190887066126}, {"determining": "( ( PN / ARS ) + ( ( ( FirstVNF_RAM_Server / BR ) * ( Min( AMS ,AMS ) * ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server / ARS ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) + ( PN - MDR ) ) )", "choosing": "( ( Min( ( Min( ( ( ( MLU - RRSe ) * RCSe ) * Max( Min( CS ,RMSe ),MUR ) ) ,( ( Max( MUC,MUR ) / RRSe ) / Max( ( DS / RMSe ),MLU ) ) ) + RRSe ) ,Min( RRSe ,DS ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.39963503649635035, "obj2": 0.6398460404448308}, {"determining": "( ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - CRS ) ) + ( DDR - MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( MUC,MUM ) ) ) ,( ( ( MUM + RMSe ) - ( CS * MUR ) ) + DS ) )", "obj1": 0.6697080291970803, "obj2": 0.222095194535377}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( FirstVNF_Mem / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.6021897810218978, "obj2": 0.2878721631365925}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,( PN - MRS ) )", "choosing": "Max( ( Max( MLU,MUM ) - MUM ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42085657471712834}, {"determining": "( Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / Max( FirstVNF_Mem,PN ) ) ,( BR - MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) - ( MUR - ( RCSe * DS ) ) ) / ( ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( Max( DS,RRSe ) / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) * RRSe ) ) + MUC )", "obj1": 0.9379562043795621, "obj2": 0.0229831458651955}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( ( FirstVNF_RAM * ( PN / CRS ) ) * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ,( MDR * MRS ) ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),MUR ) ,( ( RRSe / DS ) / MUM ) ) + Max( MUC,RCSe ) )", "obj1": 0.6204379562043796, "obj2": 0.2720126285173436}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.9379562043795621, "obj2": 0.0229831458651955}, {"determining": "Max( Max( ( ARS + ( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) - Max( ACS,AMS ) ) ),( ( ( BR + CRS ) - BR ) + BR ) ),( RRS * MRS ) )", "choosing": "( ( RCSe * ( CS + RMSe ) ) * Min( ( ( ( MUC / RCSe ) + Max( CS,RCSe ) ) + Max( RRSe,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.46866319973445103}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - DDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MLU * MLU ) / MLU ),MUR ) + RRSe ) + CS )", "obj1": 0.7372262773722628, "obj2": 0.15074746971486783}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( DS + DS ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + RRSe ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.7992700729927007, "obj2": 0.09859629323023973}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.6952554744525548, "obj2": 0.1913699722495169}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) * ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ) * Min( ( PN - MRS ) ,( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / ( ( DS * Max( ( DS + RCSe ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.885036496350365, "obj2": 0.05117598612578255}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( MRS ,BR ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) ,Min( Min( DS ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.5967153284671532, "obj2": 0.2926834370627365}, {"determining": "Max( Max( Min( AMS ,AMS ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( ( MUR * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + ( MLU + MUR ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6673874043663433}, {"determining": "Max( Min( ( ( Min( CRS ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) * BR ) * MDR ) ,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server * MRS ) )", "choosing": "( ( MUR - ( MLU + MUR ) ) * Min( DS ,Min( Min( DS ,( Min( MUR ,MUC ) - ( RCSe + RRSe ) ) ) ,( ( Min( RMSe ,RRSe ) / ( RCSe + RRSe ) ) - Min( Min( ( ( MUC + DS ) + MUM ) ,DS ) ,CS ) ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6492792378733494}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( Min( DS ,( MLU / ( MUM - MUR ) ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.614963503649635, "obj2": 0.27351551373303207}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( RRSe + RCSe ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6587591240875912, "obj2": 0.22946746764149362}, {"determining": "Max( Max( AMS,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ),( ( ( Max( BR,Max( CRS,PN ) ) - Max( ( MRS * FirstVNF_RAM_Server ),ARS ) ) * BR ) - ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( CS + RCSe ),( MUR + ( Max( MUM,( ( CS + MUM ) * ( RMSe + MLU ) ) ) - ( CS - CS ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5010781700418937}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - Max( FirstVNF_CPU,( ACS - MDR ) ) ) ) + Min( ( MDR * MDR ) ,( ( ( ( AMS + BR ) * ( Min( AMS ,AMS ) / ( Min( DDR ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,( Min( FirstVNF_CPU ,DDR ) + RRS ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( MUM + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_RAM_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / MUR ) + Max( ( ( ( DS + ( ( ( RMSe * MUM ) + RRSe ) - ( MUC * MLU ) ) ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + RRSe ) ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - RRSe ) / RMSe ) ,CS ),CS ) ) )", "obj1": 0.5638686131386861, "obj2": 0.3559806692118027}, {"determining": "Max( Max( ( MDR + FirstVNF_Mem ),Max( MDR,ACS ) ),( Min( BR ,( BR * FirstVNF_RAM ) ) - RRS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + ( ( ( ( MUC + DS ) / ( MUR - CS ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ) - Max( Min( Min( RCSe ,MUC ) ,CS ),MLU ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6144093178284101}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( Max( AMS,FirstVNF_RAM_Server ) * ( ( FirstVNF_RAM_Server * MRS ) - Min( ( FirstVNF_CPU - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( Min( ( Max( RMSe,MLU ) - Min( Min( DS ,MUC ) ,RCSe ) ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,RCSe ) ,( ( Min( CS ,MUM ) + MUM ) / ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( ( ( Max( MDR,ACS ) - FirstVNF_Mem ) + Max( ( MDR / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) ) / ( RRS - BR ) ) ,( FirstVNF_CPU_Server - MDR ) ) + Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "Max( RMSe,( MUR - ( ( MUR + ( Max( MLU,DS ) / MUR ) ) - ( ( ( CS / DS ) - RCSe ) - CS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08607328129706897}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + ( ( ARS * MDR ) * BR ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.541970802919708, "obj2": 0.3792547683313367}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( BR ,DDR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / ( ( ( FirstVNF_Mem_Server + MDR ) + AMS ) * ( Max( PN,ACS ) * MDR ) ) ) ) - Max( FirstVNF_Mem_Server,Min( ARS ,MDR ) ) ) ) + ( ( ( CRS * AMS ) + DDR ) * MRS ) )", "choosing": "( ( ( ( Max( CS,Max( MUM,RCSe ) ) - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Max( ( RMSe / ( ( Min( ( CS / MLU ) ,( MUR * RMSe ) ) - MUC ) + ( Min( ( MUR * MUR ) ,MLU ) * ( RMSe - Min( MUR ,CS ) ) ) ) ),( RMSe * RMSe ) ) + MUM ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139926}, {"determining": "( Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) / MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Max( ARS,Const ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8540145985401459, "obj2": 0.06523591837041469}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( ( MLU * ( MUR - ( MLU + MUR ) ) ) * MUC ) ) ) ) )", "obj1": 0.7427007299270073, "obj2": 0.1476860111821096}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( ( ( Min( MUR ,MUR ) + Min( CS ,RCSe ) ) * RMSe ) + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + Max( MLU,DS ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5574258658672333}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( Min( RRS ,( ( AMS / FirstVNF_Mem ) - MDR ) ),( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,( MUC + ( RRSe / MLU ) ) ) ),Min( Min( DS ,DS ) ,MUM ) )", "obj1": 0.5237226277372263, "obj2": 0.4151585495372451}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUC ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.9908759124087592, "obj2": 0.0012697281004302012}, {"determining": "Max( Max( ( ( CRS * FirstVNF_Mem_Server ) + MDR ),( ARS - Max( AMS,( CRS * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ),( RRS - ACS ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + Min( MUR ,MUM ) ) ) ) - Max( DS,RRSe ) ) / MUM ) - ( DS * MUC ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( Max( MUM,Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "Max( Max( AMS,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ),( ( ( Max( BR,Max( CRS,PN ) ) - Max( FirstVNF_CPU,ARS ) ) * BR ) - ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( CS + RCSe ),( MUR + ( Max( ( ( DS * DS ) * ( RCSe - RMSe ) ),( ( CS + MUM ) * ( RMSe + MLU ) ) ) - ( CS - CS ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5010781700418937}, {"determining": "Min( Max( Min( ( FirstVNF_CPU_Server - MDR ) ,RRS ),( FirstVNF_RAM_Server / RRS ) ) ,Min( ACS ,Const ) )", "choosing": "Max( Min( Min( ( DS * DS ) ,MUC ) ,RMSe ),Min( RCSe ,Min( DS ,DS ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4647423673361221}, {"determining": "( ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) / ( ( FirstVNF_RAM_Server - AMS ) * ( RRS + Max( AMS,( ( ( FirstVNF_RAM - ( Const / FirstVNF_CPU_Server ) ) / CRS ) + MDR ) ) ) ) )", "choosing": "( Max( ( ( Min( ( MUM * RMSe ) ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( DS ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5364963503649635, "obj2": 0.3982640830289412}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,ARS ) + BR ) ) + ( DDR - MDR ) ) + ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( MUC,MUM ) ) ) ,( Min( ( Max( ( ( DS * DS ) * ( DS / Min( MUC ,MUR ) ) ),( ( CS + MUM ) - ( MLU + RMSe ) ) ) * RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.4562043795620438, "obj2": 0.5173956675526197}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ( ( FirstVNF_Mem - ( Max( RRS,ARS ) * MRS ) ) / DDR ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( DS + MUC ) / ( ( MUR / MUC ) + CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( ( RRSe + CS ),MLU ) ) )", "obj1": 0.572992700729927, "obj2": 0.3372195341565952}, {"determining": "( ( MDR - ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( CS + Min( RRSe ,MUR ) ) + Max( MUC,MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6328233870957455}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( ( ( Min( MUR ,MUR ) + Min( CS ,RCSe ) ) * RMSe ) + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) + RCSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5438370728309512}, {"determining": "( ( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUC / MUR ) + Max( ( ( ( DS + ( ( ( RMSe * MUM ) + RRSe ) - ( MUC * MLU ) ) ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + RRSe ) ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - RRSe ) / RMSe ) ,CS ),CS ) ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( Min( DS ,DS ) / RMSe ) ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7007299270072993, "obj2": 0.18743317852501581}, {"determining": "( Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) / MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Max( ARS,Const ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - RRS ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + CS ) - MUR ) / ( MLU - RRSe ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8540145985401459, "obj2": 0.06523591837041469}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_RAM_Server - MDR ) ) + ( ( Min( Max( ARS,FirstVNF_CPU ) ,MDR ) * ( Const / Min( ( ( MRS * FirstVNF_RAM_Server ) / ( ARS / MRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) ) ) ) - Min( RRS ,PN ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( CS / RRSe ) ) * Max( MLU,( Max( ( MLU / ( Max( MUR,( RCSe / MLU ) ) + MLU ) ),Max( RMSe,Max( ( ( RMSe * DS ) + RMSe ),MUC ) ) ) * CS ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5428536266276126}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( ( Max( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ),MUM ) - MUM ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 0.5273722627737226, "obj2": 0.4033353547350011}, {"determining": "( Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU_Server - MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( FirstVNF_CPU_Server - ACS ),RRS ) ) ) / MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) )", "choosing": "( ( ( ( MLU - RMSe ) * Min( ( MUC / Min( MUR ,MUC ) ) ,Max( MUR,( CS / Min( ( MUM / CS ) ,MUC ) ) ) ) ) / RCSe ) + ( Max( MUM,MUR ) + RRSe ) )", "obj1": 0.6131386861313869, "obj2": 0.28131529147724865}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - CS ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5401459854014599, "obj2": 0.3797328484896326}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( FirstVNF_RAM_Server * PN ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - MUC ) ,MUR ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.016271226353742962}], "37": [{"determining": "Min( ( ( Max( ( FirstVNF_RAM_Server * PN ),( ( MRS * CRS ) / Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + Max( ARS,MDR ) ) - ( MRS + FirstVNF_RAM_Server ) ) ,( PN - MRS ) )", "choosing": "( ( Max( RMSe,Min( DS ,MUM ) ) + Min( RMSe ,RRSe ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( DS,MUR ) / RRSe ) ) - ( ( ( RRSe - ( CS - Min( RRSe ,CS ) ) ) - RCSe ) + ( MUC * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( MUC,( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "Min( ( ( Max( ( FirstVNF_RAM_Server * PN ),( MDR - CRS ) ) / ( Const - ( FirstVNF_RAM / MDR ) ) ) - ACS ) ,( PN * MRS ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( MUM * MUC ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC + MUR ) ) ) ) ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( DS,MUR ) / RRSe ) ) - ( Max( MUR,MLU ) + ( ( RRSe - ( RRSe / MUM ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Min( AMS ,AMS ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( Min( CS ,MUM ),DS ) + ( ( MUR * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + ( MLU + MUR ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Min( ( MUC * MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + Max( MUM,MUM ) ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) + ( Max( MUM,MUR ) + RRSe ) ) )", "obj1": 0.5620437956204379, "obj2": 0.3542463063283886}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,Const ) ) ) / ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + ( BR * Const ) ) ) )", "choosing": "( Min( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) * Min( Min( DS ,( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUR * Min( CS ,( DS / CS ) ) ) / ( RRSe + Max( ( ( RRSe - MUM ) / RRSe ),RRSe ) ) ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.015755761171652814}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "Max( Max( ( ( CRS * FirstVNF_Mem_Server ) + MDR ),( ARS - Max( AMS,( CRS * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ),( RRS - ACS ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + Min( MUR ,MUM ) ) ) ) - Max( DS,RRSe ) ) / MUM ) - ( DS * MUC ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( Max( MUM,Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( FirstVNF_Mem / Max( FirstVNF_Mem,CRS ) )", "choosing": "( ( MUC / ( ( Min( MLU ,CS ) + ( ( ( MUR + MUM ) / Min( MUR ,MUR ) ) - RCSe ) ) - MLU ) ) + Max( MUC,MUR ) )", "obj1": 0.3978102189781022, "obj2": 0.6320716753181514}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + MLU )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / Max( ( FirstVNF_Mem + MDR ),( MDR - ACS ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + ( Min( ( ( ( ( MLU + MUM ) / MLU ) + MUR ) / ( MLU * RRSe ) ) ,( ( Min( ( Min( RMSe ,DS ) * ( RMSe / MUC ) ) ,( RMSe * Max( MUR,MUM ) ) ) * ( Max( ( RMSe / MUC ),MUM ) + Min( DS ,RRSe ) ) ) + MLU ) ) + Max( CS,Max( MUM,( RCSe - RRSe ) ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5733898261980113}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS + MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( MRS * FirstVNF_RAM ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( MLU + RRSe ) + DS ) - MUM ) + Min( ( MLU - MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,( MLU - MUM ) ) )", "obj1": 0.6788321167883211, "obj2": 0.2076126926062975}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem / MRS ) ) ) + ( ( Const + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) + ( PN / ACS ) )", "choosing": "( ( CS + MUC ) + Max( ( ( ( DS + ( ( ( RMSe * MUM ) * RRSe ) - ( MUC * MLU ) ) ) / ( DS * CS ) ) / Max( ( ( ( ( MUC * MLU ) - ( MUM + MUM ) ) + RRSe ) / MLU ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - MUR ) / RMSe ) ,CS ),( DS + ( MUR / ( CS * Min( ( MLU * RMSe ) ,MUC ) ) ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) - ( ( ( RRSe - ( MLU + MUR ) ) - Max( ( ( Min( DS ,MLU ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.6916058394160584, "obj2": 0.19619335352288395}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) ,Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( ( MDR / FirstVNF_Mem ) * ACS ) )", "choosing": "( Min( Min( MUM ,( MLU / ( MUM - MUR ) ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( Max( MLU,DS ) + ( RCSe - MLU ) ) ) ),Max( RCSe,RMSe ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5271088147134937}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( DS + DS ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + RRSe ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.7992700729927007, "obj2": 0.09859629323023973}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( ( Max( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ),MUM ) - MUM ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 0.5273722627737226, "obj2": 0.4033353547350011}, {"determining": "Max( Max( ( MDR + FirstVNF_Mem ),Max( MDR,ACS ) ),( Min( BR ,( BR * FirstVNF_RAM ) ) - RRS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + ( ( ( ( MUC + DS ) / ( MUR - CS ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ) - Max( Min( Min( RCSe ,MUC ) ,CS ),MLU ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6144093178284101}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUC ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.9908759124087592, "obj2": 0.0012697281004302012}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_RAM_Server * PN ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( MUM ,( MUC / MUR ) ) ) ) ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( RRSe - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3080034077706307}, {"determining": "( Min( ( ( RRS + BR ) / FirstVNF_CPU ) ,( ( BR * ( DDR * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,RRS ) ) ) * Const ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + RRSe ) + ( ( RRSe * CS ) + ( ( ( MUR / ( DS - RCSe ) ) / CS ) - ( ( ( RMSe / MUC ) / MLU ) + RCSe ) ) ) ) ) * ( DS + DS ) )", "obj1": 0.75, "obj2": 0.141014923214409}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) ) )", "obj1": 0.5711678832116789, "obj2": 0.3388592641850901}, {"determining": "( Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) / MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Max( PN,Const ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) + ( DDR + ( MDR - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - MLU ) ) / ( RRSe * Max( ( DS / MUM ),( ( ( ( RCSe + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8540145985401459, "obj2": 0.06523591837041468}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) ) + Min( ( FirstVNF_RAM * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( ARS - PN ) ,Const ) + BR ) ) * ( DDR - Max( ( ( FirstVNF_RAM * CRS ) - ( ARS + MRS ) ),( FirstVNF_RAM + ( AMS - CRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( MUM + Min( ( RCSe * MUM ) ,DS ) ),MUR ) ) + ( RRSe - MUC ) ) ) + Max( MUC,( MUR / CS ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4593356699357887}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( ( ( Max( MDR,ACS ) - FirstVNF_Mem ) + Max( ( MDR / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) ) / ( RRS - BR ) ) ,( FirstVNF_CPU_Server - MDR ) ) + Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "Max( RMSe,( MUR - ( ( MUR + ( Max( MLU,DS ) / MUR ) ) - ( ( ( CS / DS ) - RCSe ) - CS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08607328129706897}, {"determining": "( ( ( FirstVNF_CPU * PN ) + ( CRS / MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) * ( FirstVNF_Mem_Server / MRS ) ) / MDR ) ,( ( ( CRS * ( RRS * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) / MDR ) ) )", "choosing": "( ( MUM + MUR ) + ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( DS + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) )", "obj1": 0.8704379562043796, "obj2": 0.0576933700217704}, {"determining": "Max( Max( ( Max( AMS,MDR ) + MDR ),Min( FirstVNF_Mem ,( ( AMS + ( ( FirstVNF_Mem + ARS ) + DDR ) ) / ( ACS - FirstVNF_RAM ) ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( AMS ,FirstVNF_RAM ) ) * Min( MRS ,FirstVNF_Mem ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_CPU * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( CS + ( ( MLU - ( DS - RRSe ) ) + RMSe ) ) ) - DS ) - DS ) * ( Min( ( Max( Max( ( ( RCSe * MUM ) + Min( RMSe ,CS ) ),Max( Max( MUR,MLU ),Max( RMSe,MUM ) ) ),( Min( RRSe ,MUM ) / RMSe ) ) / DS ) ,Min( RCSe ,Min( RMSe ,( RRSe + RRSe ) ) ) ) * MLU ) )", "obj1": 0.4781021897810219, "obj2": 0.4818268819150492}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + RRSe ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( ( MUC - RRSe ),MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6209613042832636}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,Max( Min( RRS ,( ( AMS / FirstVNF_Mem ) - MDR ) ),( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - Min( RRSe ,( MUC + ( RRSe / MLU ) ) ) ),Min( Min( DS ,DS ) ,MUM ) )", "obj1": 0.5237226277372263, "obj2": 0.4151585495372451}, {"determining": "( ( ( ( MDR / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,AMS ) + ( ( AMS - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( ARS + FirstVNF_CPU_Server ) ) * ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU_Server * MRS ) ) + BR ) ) * Min( ( MDR / ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,MDR ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( ( MUR / RMSe ) / MLU ) / RCSe ) ,( MLU / ( Min( MUM ,Max( ( MUC * MLU ),MUM ) ) - MLU ) ) ) / ( CS / MUM ) ) + ( ( ( ( MUM / DS ) - ( CS * DS ) ) + ( Min( RMSe ,MLU ) / MLU ) ) + RRSe ) )", "obj1": 0.8175182481751825, "obj2": 0.09648172904443382}, {"determining": "( ( Min( FirstVNF_CPU ,MRS ) + ( PN - CRS ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( Max( RRSe,CS ) - Max( ( ( ( RMSe + MLU ) - CS ) + MUM ),Max( MUM,MUR ) ) ) / ( CS - ( MUC - MUR ) ) ) ) + Max( ( MUC - RRSe ),MLU ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - DDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MLU * MLU ) / MLU ),MUR ) + RRSe ) + CS )", "obj1": 0.7372262773722628, "obj2": 0.15074746971486783}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Min( AMS ,Min( BR ,DDR ) ) * FirstVNF_Mem_Server ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) * ( Const / ( ( ( FirstVNF_Mem_Server + MDR ) + AMS ) * ( Max( PN,ACS ) * MDR ) ) ) ) - Max( FirstVNF_Mem_Server,Min( ARS ,MDR ) ) ) ) + ( ( ( CRS * AMS ) + DDR ) * MRS ) )", "choosing": "( ( ( ( Max( CS,Max( MUM,RCSe ) ) - Max( RMSe,MLU ) ) - RRSe ) - DS ) * ( Max( ( RMSe / ( ( Min( ( CS / MLU ) ,( MUR * RMSe ) ) - MUC ) + ( Min( ( MUR * MUR ) ,MLU ) * ( RMSe - Min( MUR ,CS ) ) ) ) ),( RMSe * RMSe ) ) + MUM ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139926}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( ( FirstVNF_RAM * ( PN / CRS ) ) * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ,( MDR * MRS ) ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),MUR ) ,( ( RRSe / DS ) / MUM ) ) + Max( MUC,RCSe ) )", "obj1": 0.6204379562043796, "obj2": 0.2720126285173436}, {"determining": "( ( ( ( AMS - Max( PN,BR ) ) * ( AMS + FirstVNF_CPU ) ) / ( Min( Max( ( ACS * Const ),( ( DDR / Max( RRS,CRS ) ) / FirstVNF_RAM ) ) ,CRS ) - MDR ) ) + Max( MRS,MRS ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( ( CS / MUR ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,Min( Min( Min( ( RCSe * Max( Max( DS,MUM ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) ,( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4333090978110347}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( ( MLU * ( MUR - ( MLU + MUR ) ) ) * MUC ) ) ) ) )", "obj1": 0.7427007299270073, "obj2": 0.1476860111821096}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) * Max( ( Min( AMS ,AMS ) + ( ( BR - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ),( Min( ( FirstVNF_Mem / PN ) ,Const ) + FirstVNF_RAM_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( Max( Min( ( ( ( MUM + RRSe ) * RMSe ) + Max( MLU,DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) + MLU ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.6277372262773723, "obj2": 0.2634802594103311}, {"determining": "( Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / Max( FirstVNF_Mem,PN ) ) ,( BR - MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) - ( MUR - ( RCSe * DS ) ) ) / ( ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( Max( DS,RRSe ) / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) * RRSe ) ) + MUC )", "obj1": 0.9379562043795621, "obj2": 0.0229831458651955}, {"determining": "( ( Max( FirstVNF_CPU_Server,( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + BR ) ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUC / MUR ) + Max( ( MUC / Max( ( MLU / ( ( RCSe - RRSe ) + RRSe ) ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - RRSe ) / RMSe ) ,CS ),CS ) ) )", "obj1": 0.7299270072992701, "obj2": 0.15790367822926094}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( ( FirstVNF_RAM - ( MDR - CRS ) ) - AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUR ) / Min( Max( MLU,MUC ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( Max( MUC,RRSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) * ( RCSe * ( CS + RMSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ( ( FirstVNF_Mem - ( Max( RRS,ARS ) * MRS ) ) / DDR ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( DS + MUC ) / ( ( MUR / MUC ) + CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( ( RRSe + CS ),MLU ) ) )", "obj1": 0.572992700729927, "obj2": 0.3372195341565952}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ACS ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( ( Max( CRS,FirstVNF_RAM_Server ) - PN ) + ( Min( RRS ,FirstVNF_Mem_Server ) / DDR ) ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - DDR ) ,( ( ( ( BR + Max( MDR,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS * ( PN + FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( MLU + ( ( CS / ( MUR * MLU ) ) / Min( ( MUM - MLU ) ,Max( MUM,( RMSe * MUR ) ) ) ) ),Max( MUR,( ( RMSe + Max( Max( RRSe,DS ),Max( MUC,RMSe ) ) ) - MUM ) ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7116788321167883, "obj2": 0.17591911961781034}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + ( BR * Min( FirstVNF_CPU ,( ACS / PN ) ) ) )", "choosing": "( ( MUC / ( ( RRSe - Max( ( MUM + MUM ),RCSe ) ) + ( CS - Min( ( MLU / MLU ) ,MUR ) ) ) ) + Max( MUC,Min( MUR ,Min( MLU ,DS ) ) ) )", "obj1": 0.8521897810218978, "obj2": 0.0663488231216371}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUM,Max( MUR,RMSe ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.4489051094890511, "obj2": 0.5424009178639669}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) + Max( Min( MUM ,MUM ),DS ) ) - RCSe ) * Min( DS ,Min( Min( DS ,( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUR * Min( CS ,( DS / CS ) ) ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.7645985401459854, "obj2": 0.12094156345758214}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( ( ( Min( MUR ,MUR ) + Min( CS ,RCSe ) ) * RMSe ) + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) + RCSe ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5438370728309512}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( RRSe - Max( ( MUM + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / RCSe ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "Max( Max( Min( AMS ,AMS ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - MUC ) ,MUR ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5069595696921577}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( Min( ( Min( AMS ,PN ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( RCSe + DS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),MUR ) )", "obj1": 0.41058394160583944, "obj2": 0.6013047282852666}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server * BR ) + ( PN - MDR ) ) / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_RAM_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RRSe - ( ( MLU * MLU ) / MLU ) ) - RRSe ) + ( CS * MUC ) ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - CS ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9635036496350365, "obj2": 0.00881509528934248}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( ( DDR * ( FirstVNF_RAM - AMS ) ) + ( ACS + ( MDR / ARS ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,( MUC * MUR ) ) + MLU ) / DS ) + MUC ),MUR ) + RRSe ) + ( ( ( Max( ( DS * ( CS - ( RMSe / DS ) ) ),DS ) + ( ( Min( DS ,( RRSe / RMSe ) ) / DS ) - MUR ) ) * MUC ) * ( RRSe * MLU ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4738847498527962}, {"determining": "( ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - CRS ) ) + ( DDR - MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( MUC,MUM ) ) ) ,( ( ( MUM + RMSe ) - ( CS * MUR ) ) + DS ) )", "obj1": 0.6697080291970803, "obj2": 0.222095194535377}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( FirstVNF_Mem / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5967153284671532, "obj2": 0.2926231808461866}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + PN ) ) ,Min( ( FirstVNF_Mem * ( RRS / AMS ) ) ,( ( CRS + MRS ) / FirstVNF_CPU_Server ) ) ) - DDR ) * ACS ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( FirstVNF_CPU_Server ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( ( RCSe - MUM ),MUC ) - ( ( RRSe + RRSe ) + ( ( RMSe + MUM ) + DS ) ) ) ) + ( MUC + DS ) ) ) - Max( CS,RCSe ) )", "obj1": 0.7208029197080292, "obj2": 0.17216715355801357}, {"determining": "Min( ( ( DDR / DDR ) - ACS ) ,( PN - MRS ) )", "choosing": "Max( ( Max( MLU,MUM ) - MUM ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.42085657471712834}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server * BR ) + ( PN - MDR ) ) / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_RAM_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RRSe - ( ( MLU * MLU ) / MLU ) ) - RRSe ) + ( CS * MUC ) ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - CS ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9635036496350365, "obj2": 0.00881509528934248}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Max( ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ),Min( ( FirstVNF_Mem / MDR ) ,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / ( Const + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( DDR / PN ) ) ) ) ,( AMS - BR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( ( CS / RCSe ) * MLU ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) * ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ) * Min( ( PN - MRS ) ,( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / ( ( DS * Max( ( DS + RCSe ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.885036496350365, "obj2": 0.05117598612578255}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( PN - MDR ) - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( ACS - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( RRSe ,CS ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( DS * MUC ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.13251442882612155}, {"determining": "( ( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * Max( MLU,DS ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_Mem + MDR ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( RRSe + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.6295620437956204, "obj2": 0.25849977644642885}, {"determining": "Max( Max( Min( AMS ,AMS ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( ( MUR * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + ( MLU + MUR ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6673874043663433}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( BR - MDR ) ,Min( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - AMS ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem / Max( BR,CRS ) ) + FirstVNF_Mem_Server ) ) + RRS ) ) ) )", "choosing": "( Max( Min( Max( Min( RRSe ,CS ),MUR ) ,( ( RRSe / DS ) / MUM ) ),( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( Min( Max( RCSe,DS ) ,CS ),MUR ) ) ) ) ) + MUC )", "obj1": 0.9379562043795621, "obj2": 0.0229831458651955}, {"determining": "( ( ( ARS * FirstVNF_RAM ) + ( ( PN - MDR ) - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( ACS - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( RRSe ,CS ) - ( Min( ( RRSe - ( RRSe - MLU ) ) ,RRSe ) + ( DS * MUC ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.13251442882612155}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( Max( AMS,FirstVNF_RAM_Server ) * ( ( FirstVNF_RAM_Server * MRS ) - Min( ( FirstVNF_CPU - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( Min( ( Max( RMSe,MLU ) - Min( Min( DS ,MUC ) ,RCSe ) ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,RCSe ) ,( ( Min( CS ,MUM ) + MUM ) / ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( ( ( ( PN + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( Const / Min( ( MDR / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) / ( ( FirstVNF_RAM_Server - AMS ) * ( RRS + Max( AMS,( ( ( FirstVNF_RAM - ( Const / FirstVNF_CPU_Server ) ) / CRS ) + MDR ) ) ) ) )", "choosing": "( Max( ( ( Min( ( MUM * RMSe ) ,( ( RRSe - ( MLU + MUC ) ) - RRSe ) ) * ( ( CS + RMSe ) + Min( DS ,RCSe ) ) ) - ( RRSe / MUM ) ),( ( RRSe * ( RCSe - MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) )", "obj1": 0.5364963503649635, "obj2": 0.3982640830289412}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - Max( FirstVNF_CPU,( ACS - MDR ) ) ) ) + Min( ( MDR * MDR ) ,( ( ( ( AMS + BR ) * ( Min( AMS ,AMS ) / ( Min( DDR ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,( Min( FirstVNF_CPU ,DDR ) + RRS ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( MUM + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( Max( Const,Const ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU_Server + MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_RAM_Server ) ,Const ) + Const ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( DS / Min( RCSe ,( ( ( DS + CS ) / MUM ) + Max( RCSe,RCSe ) ) ) ),MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Max( Max( MUC,MUR ),MUM ) * Min( ( MUC - DS ) ,MLU ) ) ) )", "obj1": 0.5529197080291971, "obj2": 0.3648255719589994}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( MUR - RMSe ) )", "obj1": 0.5529197080291971, "obj2": 0.3648255719589994}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( RRSe + RCSe ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6587591240875912, "obj2": 0.22946746764149362}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ARS,( ( CRS * MDR ) * ( MDR + PN ) ) ) + BR ) ) + ( DDR - MDR ) ) + ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) )", "choosing": "Min( ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - Min( DS ,DS ) ) - RRSe ) / ( CS * MUC ) ) ) ) ,( Min( ( Max( ( ( DS * DS ) * ( DS / Min( MUC ,MUR ) ) ),( MUC * ( MUR - ( RMSe * MUM ) ) ) ) * RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.45985401459854014, "obj2": 0.5142054328828187}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + ( ( ARS * MDR ) * BR ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.541970802919708, "obj2": 0.3792547683313367}, {"determining": "( ( ( PN * AMS ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( Min( ( CRS - FirstVNF_RAM ) ,( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RRSe - ( ( RRSe - RMSe ) + ( ( RRSe + MLU ) + DS ) ) ) ) + Min( Max( ( MLU * ( Min( RRSe ,DS ) / MLU ) ),MUC ) ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.6514598540145985, "obj2": 0.23901561991932924}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Max( ( FirstVNF_Mem + MDR ),( MDR - ACS ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + MUC ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( RCSe + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6441605839416058, "obj2": 0.2470880173268005}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR - ARS ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Max( ( FirstVNF_Mem + MDR ),( MDR - ACS ) ) ) * ( ( Min( ( BR - ARS ) ,FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( MUC ,DS ) ,MUM ) - ( ( ( RRSe - ( RCSe + MUR ) ) - ( CS * MUC ) ) + ( CS * MUC ) ) ) )", "obj1": 0.6459854014598541, "obj2": 0.24548190887066126}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( RRSe - Max( ( MUM + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / MUM ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_RAM_Server + Const ) / ACS ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( Min( RRSe ,RRSe ) + ( Min( MUM ,MUM ) + DS ) ) ) ) + ( CS + MUC ) ) ) - ( ( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( ( ( Min( MUR ,MUR ) + Min( CS ,RCSe ) ) * RMSe ) + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ) + Max( MLU,DS ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5574258658672333}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( ( MDR * PN ) + ( PN - ( BR * FirstVNF_RAM ) ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( AMS - FirstVNF_RAM ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( CS - Max( DS,Min( MUR ,CS ) ) ) - ( ( ( RRSe - ( MLU + ( CS - ( MUC - MUR ) ) ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( Max( ( BR + BR ),( ( FirstVNF_RAM_Server * PN ) + ( Min( ( ( Max( FirstVNF_CPU,CRS ) * MDR ) + ( PN - MDR ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,Min( DDR ,AMS ) ) ) - DDR ) ) ) / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "( Max( ( CS * ( MUC / CS ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( MUC ,CS ) ) ) - Min( ( DS + RRSe ) ,RCSe ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + CS ) - MUR ) / ( MLU - RRSe ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.6733576642335767, "obj2": 0.21308781641861702}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_Mem + MDR ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( RRSe + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.635036496350365, "obj2": 0.253436296942649}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - ( PN - MDR ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.8722627737226277, "obj2": 0.057439424401684355}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( Min( ( Min( AMS ,PN ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( RCSe + DS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),MUR ) )", "obj1": 0.41058394160583944, "obj2": 0.6013047282852666}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Min( Min( DS ,( MLU / ( MUM - MUR ) ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.614963503649635, "obj2": 0.27351551373303207}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) + Max( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server - MDR ) * ( Const / Const ) ) ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / Min( FirstVNF_RAM ,AMS ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4744525547445255, "obj2": 0.4916086335491075}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7135036496350365, "obj2": 0.17488669964807585}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( Min( ( MDR - ACS ) ,RRS ) - ( MRS * ( FirstVNF_RAM_Server + Const ) ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + ( RRS * FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( MLU - ( MUM + Max( ( MUM * DS ),Max( ( DS * Max( ( MLU * MLU ),CS ) ),( RCSe * MLU ) ) ) ) ) + ( ( ( DS - ( CS + ( MUC + RMSe ) ) ) - RRSe ) - DS ) )", "obj1": 0.6551094890510949, "obj2": 0.23483295841158533}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,ARS ) + BR ) ) + ( DDR - MDR ) ) + ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5173956675526197}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( MUM + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5401459854014599, "obj2": 0.3797328484896326}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( CRS * ARS ) ,BR ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) ,Min( Min( DS ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / DS ),RRSe ) ) ) ) ) ) )", "obj1": 0.6094890510948905, "obj2": 0.28138612665231266}], "38": [{"determining": "Min( ( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / Max( ARS,MDR ) ) - ACS ) ,( PN - MRS ) )", "choosing": "( ( Max( MUC,Min( DS ,MUM ) ) + RCSe ) + Max( MUC,( Min( Min( DS ,DS ) ,( ( ( ( RMSe + DS ) - CS ) + MUM ) / RRSe ) ) - ( ( ( RRSe - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( MUC,( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "Min( ( ( Max( ( FirstVNF_RAM_Server * PN ),( ( MRS * CRS ) / Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + Max( ARS,MDR ) ) - ( MRS + FirstVNF_RAM_Server ) ) ,( PN - MRS ) )", "choosing": "( ( Max( RMSe,Min( DS ,MUM ) ) + Min( RMSe ,RRSe ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( DS,MUR ) / RRSe ) ) - ( ( ( RRSe - ( CS - Min( RRSe ,CS ) ) ) - RCSe ) + ( MUC * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Min( AMS ,AMS ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( ( MUC - RRSe ),MUR ) )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "Max( Max( ( ( CRS * FirstVNF_Mem_Server ) + MDR ),( ARS - Max( AMS,( CRS * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ),( RRS - ACS ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + Min( MUR ,MUM ) ) ) ) - Max( DS,RRSe ) ) / MUM ) - ( DS * MUC ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( Max( MUM,Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( Max( ( FirstVNF_Mem_Server * ARS ),( MDR - ( MRS - FirstVNF_Mem_Server ) ) ) + Min( ( MRS - ACS ) ,RRS ) )", "choosing": "( ( ( RRSe * MUR ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) + ( Max( MUM,DS ) + RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5723157656738803}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( AMS / MDR ) * PN ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MLU ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + MLU )", "obj1": 0.5182481751824818, "obj2": 0.4174590820391664}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - ( MDR / ( CRS / ( ( FirstVNF_CPU + Max( FirstVNF_Mem,( DDR + FirstVNF_RAM_Server ) ) ) * MDR ) ) ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( DS + CS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),( ( DS / Min( RMSe ,CS ) ) - MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6000862591395966}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Min( ( MUC * MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + Max( MUM,MUM ) ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) + ( Max( MUM,MUR ) + RRSe ) ) )", "obj1": 0.5620437956204379, "obj2": 0.3542463063283886}, {"determining": "( ( ( ( MDR / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,AMS ) + ( ( AMS - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( ARS + FirstVNF_CPU_Server ) ) * ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU_Server * MRS ) ) + BR ) ) * Min( ( MDR / ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,MDR ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( ( MUR / RMSe ) / MLU ) / RCSe ) ,( MLU / ( Min( MUM ,Max( ( MUC * MLU ),MUM ) ) - MLU ) ) ) / ( CS / MUM ) ) + ( ( ( ( MUM / DS ) - ( CS * DS ) ) + ( Min( RMSe ,MLU ) / MLU ) ) + RRSe ) )", "obj1": 0.8175182481751825, "obj2": 0.09648172904443382}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) ,Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( ( MDR / FirstVNF_Mem ) * ACS ) )", "choosing": "( Min( Min( MUM ,( MLU / ( MUM - MUR ) ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( Max( MLU,DS ) + ( RCSe - MLU ) ) ) ),Max( RCSe,RMSe ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5271088147134937}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( PN - MDR ) - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( ACS - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( RRSe ,CS ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( DS * MUC ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.1325144288261215}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / ( RMSe / RMSe ) ) ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7043795620437956, "obj2": 0.18196041428909912}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) - ( ( ( RRSe - ( MLU + MUR ) ) - Max( ( ( Min( DS ,MLU ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.6916058394160584, "obj2": 0.19619335352288395}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_RAM_Server * PN ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( MUM ,( MUC / MUR ) ) ) ) ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( RRSe - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3080034077706307}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( MUR + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.75, "obj2": 0.13939612989501657}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.6952554744525548, "obj2": 0.19221913708097102}, {"determining": "Max( Max( ( Max( AMS,MDR ) + MDR ),Min( FirstVNF_Mem ,( ( AMS + ( ( FirstVNF_Mem + ARS ) + DDR ) ) / ( ACS - FirstVNF_RAM ) ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( AMS ,FirstVNF_RAM ) ) * Min( MRS ,FirstVNF_Mem ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_CPU * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( CS + ( ( MLU - ( DS - RRSe ) ) + RMSe ) ) ) - DS ) - DS ) * ( Min( ( Max( Max( ( ( RCSe * MUM ) + Min( RMSe ,CS ) ),Max( Max( MUR,MLU ),Max( RMSe,MUM ) ) ),( Min( RRSe ,MUM ) / RMSe ) ) / DS ) ,Min( RCSe ,Min( RMSe ,( RRSe + RRSe ) ) ) ) * MLU ) )", "obj1": 0.4781021897810219, "obj2": 0.4818268819150492}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( DS + DS ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + RRSe ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.7992700729927007, "obj2": 0.09859629323023973}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + PN ) ) ,Min( ( FirstVNF_Mem * ( RRS / AMS ) ) ,( ( CRS + MRS ) / FirstVNF_CPU_Server ) ) ) - DDR ) * ACS ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( FirstVNF_CPU_Server ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( ( RCSe - MUM ),MUC ) - ( ( RRSe + RRSe ) + ( ( RMSe + MUM ) + DS ) ) ) ) + ( MUC + DS ) ) ) - Max( CS,RCSe ) )", "obj1": 0.7208029197080292, "obj2": 0.17216715355801357}, {"determining": "( Max( ( BR + BR ),( ( FirstVNF_RAM_Server * PN ) + ( Min( ( ( Max( FirstVNF_CPU,CRS ) * MDR ) + ( PN - MDR ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,Min( DDR ,AMS ) ) ) - DDR ) ) ) / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "( Max( ( CS * ( MUC / CS ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( MUC ,CS ) ) ) - Min( ( DS + RRSe ) ,RCSe ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,FirstVNF_RAM_Server ) ) ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + Max( MLU,( MLU + MUR ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.44525547445255476, "obj2": 0.5414826248560948}, {"determining": "( ( DDR * ( FirstVNF_RAM - AMS ) ) + ( ACS + ( MDR / ARS ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,( MUC * MUR ) ) + MLU ) / DS ) + MUC ),MUR ) + RRSe ) + ( ( ( Max( ( DS * ( CS - ( RMSe / DS ) ) ),DS ) + ( ( Min( DS ,( RRSe / RMSe ) ) / DS ) - MUR ) ) * MUC ) * ( RRSe * MLU ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4738847498527962}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_RAM * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( CRS * ARS ) ,BR ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUC ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ,Min( Min( DS ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / DS ),RRSe ) ) ) ) ) ) )", "obj1": 0.6094890510948905, "obj2": 0.2813861266523126}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + RRSe ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( ( MUC - RRSe ),MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6209613042832636}, {"determining": "( MDR / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + RRSe ) + ( ( RRSe * CS ) + ( ( ( MUR / ( DS - RCSe ) ) / CS ) - ( ( ( RMSe / MUC ) / MLU ) + RCSe ) ) ) ) ) * ( DS + DS ) )", "obj1": 0.3978102189781022, "obj2": 0.6320716753181514}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( Max( Min( RRSe ,CS ),MUR ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / RCSe ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.8558394160583942, "obj2": 0.06190143025553726}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + CS ) - MUR ) / ( MLU - RRSe ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.6806569343065694, "obj2": 0.20730247270711508}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( ( MLU * ( MUR - ( MLU + MUR ) ) ) * MUC ) ) ) ) )", "obj1": 0.7427007299270073, "obj2": 0.1476860111821096}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * BR ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 0.6021897810218978, "obj2": 0.28582424947601487}, {"determining": "( ( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU_Server + MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + Const ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( DS / Min( RCSe ,( ( ( DS + CS ) / MUM ) + Max( RCSe,RCSe ) ) ) ),MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Max( Max( MUC,MUR ),MUM ) - ( ( ( RRSe - ( MLU + Min( MLU ,DS ) ) ) - RRSe ) + ( CS * MUC ) ) ) ) )", "obj1": 0.9124087591240876, "obj2": 0.03227433181535741}, {"determining": "( ( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * Max( MLU,DS ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) / ( MLU / Min( MLU ,RCSe ) ) ),MUM ) - MUM ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 0.5218978102189781, "obj2": 0.40670677624697654}, {"determining": "( ( ( ( AMS - Max( PN,BR ) ) * ( AMS + FirstVNF_CPU ) ) / ( Min( Max( ( ACS * Const ),( ( DDR / Max( RRS,CRS ) ) / FirstVNF_RAM ) ) ,CRS ) - MDR ) ) + Max( MRS,MRS ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( ( CS / MUR ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,Min( Min( Min( ( RCSe * Max( Max( DS,MUM ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) ,( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4333090978110347}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / Max( FirstVNF_Mem,PN ) ) ,( BR - MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) - ( MUR - ( RCSe * DS ) ) ) / ( ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( Max( DS,RRSe ) / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) * RRSe ) ) + MUC )", "obj1": 0.9379562043795621, "obj2": 0.0229831458651955}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Max( ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ),Min( ( FirstVNF_Mem / MDR ) ,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / ( Const + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( DDR / PN ) ) ) ) ,( AMS - BR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( ( CS / RCSe ) * MLU ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( Max( FirstVNF_CPU_Server,( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + BR ) ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUC / MUR ) + Max( ( MUC / Max( ( MLU / ( ( RCSe - RRSe ) + RRSe ) ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - RRSe ) / RMSe ) ,CS ),CS ) ) )", "obj1": 0.7299270072992701, "obj2": 0.15790367822926094}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ( ( FirstVNF_Mem - ( Max( RRS,ARS ) * MRS ) ) / DDR ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( DS + MUC ) / ( ( MUR / MUC ) + CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( ( RRSe + CS ),MLU ) ) )", "obj1": 0.572992700729927, "obj2": 0.3372195341565952}, {"determining": "( ( ( FirstVNF_CPU * PN ) + ( CRS / MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) * ( FirstVNF_Mem_Server / MRS ) ) / MDR ) ,( ( ( CRS * ( RRS * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) / MDR ) ) )", "choosing": "( ( MUM + MUR ) + ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( DS + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) )", "obj1": 0.8704379562043796, "obj2": 0.0576933700217704}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( MDR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( ( MUC - RRSe ),MUR ) )", "obj1": 0.8959854014598541, "obj2": 0.03998071220789943}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Min( Min( DS ,( MLU / ( MUM - MUR ) ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,ARS ) + BR ) ) + ( DDR - MDR ) ) + ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( MUC,MUM ) ) ) ,( Min( ( Max( ( ( DS * DS ) * ( DS / Min( MUC ,MUR ) ) ),( ( CS + MUM ) - ( MLU + RMSe ) ) ) * RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,ARS ) + BR ) ) + ( DDR - MDR ) ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS * DS ) * ( DS / Min( MUC ,MUR ) ) ) * Min( DS ,Min( Min( DS ,( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUR * Min( CS ,( DS / CS ) ) ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.7645985401459854, "obj2": 0.12094156345758214}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) + Max( Min( MUM ,MUM ),DS ) ) - RCSe ) * Min( DS ,DS ) )", "obj1": 0.8375912408759124, "obj2": 0.08047308485025241}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,( ARS / ( FirstVNF_RAM_Server / RRS ) ) ) ),Min( ( Max( ( ( ( Const - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ( MDR * FirstVNF_Mem ) - ARS ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( Max( PN,( MRS + MDR ) ) * Min( FirstVNF_RAM ,AMS ) ) + ( BR * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ,( PN * Min( ( Max( ACS,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( Max( MUC,Max( ( Max( ( MLU - MUC ),Min( RRSe ,( RRSe - MLU ) ) ) - RRSe ),Min( ( DS * CS ) ,MUR ) ) ) + ( ( RMSe - Min( MUC ,RMSe ) ) + MUM ) ) * ( Min( CS ,Min( RCSe ,( Min( ( MUM / RRSe ) ,( MUM + CS ) ) - MUC ) ) ) * MLU ) )", "obj1": 0.49635036496350365, "obj2": 0.4565164855704457}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Max( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),RRS ),FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( ( CS * ( DS + MUR ) ) - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUC ) ) - ( ( MLU + Max( MUM,RCSe ) ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) )", "obj1": 0.7974452554744526, "obj2": 0.10154769929806895}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + ( ( ( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) / MDR ) )", "choosing": "( Min( RCSe ,( ( ( DS + CS ) / MUM ) + Max( RCSe,RCSe ) ) ) + Max( MUC,Min( MUR ,Min( MLU ,DS ) ) ) )", "obj1": 0.9616788321167883, "obj2": 0.012698798014105702}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.35744332416050334}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem / MRS ) ) ) + ( ( Const + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) + ( PN / ACS ) )", "choosing": "( ( CS + MUC ) + Max( ( ( ( DS + ( ( ( RMSe * MUM ) * RRSe ) - ( MUC * MLU ) ) ) / ( DS * CS ) ) / Max( ( ( ( ( MUC * MLU ) - ( MUM + MUM ) ) + RRSe ) / MLU ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - MUR ) / RMSe ) ,CS ),( DS + ( MUR / ( CS * Min( ( MLU * RMSe ) ,MUC ) ) ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( ( FirstVNF_RAM * ( PN / CRS ) ) * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ,( MDR * MRS ) ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),MUR ) ,( ( RRSe / DS ) / MUM ) ) + Max( MUC,RCSe ) )", "obj1": 0.6204379562043796, "obj2": 0.2720126285173436}, {"determining": "( ( ( PN * AMS ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( Min( ( CRS - FirstVNF_RAM ) ,( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RRSe - ( ( RRSe - RMSe ) + ( ( RRSe + MLU ) + DS ) ) ) ) + Min( Max( ( MLU * ( Min( RRSe ,DS ) / MLU ) ),MUC ) ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.6514598540145985, "obj2": 0.23901561991932924}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( FirstVNF_Mem - Max( ARS,FirstVNF_RAM_Server ) ) - RRS ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( RRS + ( MDR - Min( FirstVNF_CPU ,PN ) ) ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,MDR ) ) * Min( ( DDR * Const ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( DS * RCSe ) ) + ( MLU - Max( DS,( ( CS / RCSe ) * Max( MUC,Max( Min( RMSe ,Max( RCSe,MLU ) ),MLU ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6113317375789231}, {"determining": "( MDR / Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,RRS ) )", "choosing": "( ( MUC / ( ( Min( MLU ,CS ) / ( ( ( MUR + MUM ) / Min( MUR ,MUR ) ) - MUR ) ) - MLU ) ) + Max( MUC,MUR ) )", "obj1": 0.46715328467153283, "obj2": 0.5004291780226733}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( ( Max( BR,ACS ) - ( ARS * MDR ) ) + ( ( MDR / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) * FirstVNF_Mem_Server ) / ( Max( ARS,ACS ) / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "Max( MUR,( MUR - ( Min( ( ( ( ( MLU + RRSe ) - RRSe ) / ( Min( MUR ,RCSe ) + MLU ) ) * Max( MUC,MUR ) ) ,( ( RMSe + DS ) - CS ) ) - ( MUR + Max( MUM,MUR ) ) ) ) )", "obj1": 0.781021897810219, "obj2": 0.11065763986108022}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + CS ) - MUR ) / ( MLU - RRSe ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.6733576642335767, "obj2": 0.21308781641861702}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + ( BR * Min( FirstVNF_CPU ,( ACS / ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) ) ) ) )", "choosing": "( ( MUC / ( ( RRSe - Max( ( MUM + MUM ),RCSe ) ) + ( ( RRSe - Max( ( MUM + MUM ),RCSe ) ) + ( CS - Min( ( MLU / MLU ) ,MUR ) ) ) ) ) + Max( MUC,Min( MUR ,Min( MLU ,DS ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( Min( ( ( ( Max( AMS,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,FirstVNF_RAM_Server ) ) ) ) ,Min( CRS ,( RRS + MRS ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) )", "choosing": "( Min( ( ( ( MUC / RCSe ) + DS ) * Min( RRSe ,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) * Min( Min( DS ,( DS * MUR ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUR * Min( CS ,( DS / CS ) ) ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.015755761171652814}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) ) + Min( ( FirstVNF_RAM * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( ARS - PN ) ,Const ) + BR ) ) * ( DDR - Max( ( ( FirstVNF_RAM * CRS ) - ( ARS + MRS ) ),( FirstVNF_RAM + ( AMS - CRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( MUM + Min( ( RCSe * MUM ) ,DS ) ),MUR ) ) + ( RRSe - MUC ) ) ) + Max( MUC,( MUR / CS ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4593356699357887}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) * ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ) * Min( ( PN - MRS ) ,( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / ( ( DS * Max( ( DS + RCSe ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.885036496350365, "obj2": 0.05117598612578255}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_Mem + MDR ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( RRSe + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.6295620437956204, "obj2": 0.25849977644642885}, {"determining": "Max( Max( Min( AMS ,AMS ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( ( MUR * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + ( MLU + MUR ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6673874043663433}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.9379562043795621, "obj2": 0.0229831458651955}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( Min( ( MDR - ACS ) ,RRS ) - ( MRS * ( FirstVNF_RAM_Server + Const ) ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + ( RRS * FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( MLU - ( MUM + Max( ( MUM * DS ),Max( ( DS * Max( ( MLU * MLU ),CS ) ),( RCSe * MLU ) ) ) ) ) + ( ( ( DS - ( CS + ( MUC + RMSe ) ) ) - RRSe ) - DS ) )", "obj1": 0.6551094890510949, "obj2": 0.23483295841158533}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( ( ( Max( MDR,ACS ) - FirstVNF_Mem ) + Max( ( MDR / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) ) / ( RRS - BR ) ) ,( FirstVNF_CPU_Server - MDR ) ) + Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "Max( RMSe,( MUR - ( ( MUR + ( Max( MLU,DS ) / MUR ) ) - ( ( ( CS / DS ) - RCSe ) - CS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08607328129706897}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5711678832116789, "obj2": 0.3388592641850901}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ACS ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( ( Max( CRS,FirstVNF_RAM_Server ) - PN ) + ( Min( RRS ,FirstVNF_Mem_Server ) / DDR ) ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - DDR ) ,( ( ( ( BR + Max( MDR,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS * ( PN + FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( MLU + ( ( CS / ( MUR * MLU ) ) / Min( ( MUM - MLU ) ,Max( MUM,( RMSe * MUR ) ) ) ) ),Max( MUR,( ( RMSe + Max( Max( RRSe,DS ),Max( MUC,RMSe ) ) ) - MUM ) ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7116788321167883, "obj2": 0.17591911961781034}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,Const ) ) ) / ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + ( BR * Const ) ) ) )", "choosing": "( Min( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) ,Max( MLU,( MLU + MUR ) ) ) * Min( Min( DS ,( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUR * Min( CS ,( DS / CS ) ) ) / ( RRSe + Max( ( ( RRSe - MUM ) / RRSe ),RRSe ) ) ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.015755761171652814}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ) * Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUC ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.9908759124087592, "obj2": 0.0012697281004302012}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - Max( FirstVNF_CPU,( ACS - MDR ) ) ) ) + Min( ( MDR * MDR ) ,( ( ( ( AMS + BR ) * ( Min( AMS ,AMS ) / ( Min( DDR ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,( Min( FirstVNF_CPU ,DDR ) + RRS ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( MUM + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / RRS ) ,CRS ) ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Max( ( FirstVNF_Mem + MDR ),( MDR - ACS ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + MUC ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( RCSe + MUR ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6441605839416058, "obj2": 0.2470880173268005}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ( ( ARS * MDR ) * RRS ),ARS ) + BR ) ) + ( DDR - MDR ) ) + ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) )", "choosing": "Min( ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) - ( ( ( RRSe - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) ) ,( Min( ( Max( ( ( DS * DS ) * ( DS / Min( MUC ,MUR ) ) ),( ( CS + MUM ) - ( MLU + RMSe ) ) ) * RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.4726277372262774, "obj2": 0.4990232429830347}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( Max( AMS,FirstVNF_RAM_Server ) * ( ( FirstVNF_RAM_Server * MRS ) - Min( ( FirstVNF_CPU - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( Min( ( Max( RMSe,MLU ) - Min( Min( DS ,MUC ) ,RCSe ) ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,RCSe ) ,( ( Min( CS ,MUM ) + MUM ) / ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( RRSe - Max( ( MUM + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / RCSe ) ,Max( ( ( RCSe + MUR ) / MUM ),MUR ) ) ) ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - CRS ) ) + ( DDR - MDR ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( MUC,MUM ) ) ) ,( ( ( MUM + RMSe ) - ( CS * MUR ) ) + DS ) )", "obj1": 0.6697080291970803, "obj2": 0.222095194535377}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( FirstVNF_RAM_Server + Const ) / ( ( FirstVNF_Mem - ( FirstVNF_RAM_Server * MRS ) ) / DDR ) ) * BR ) * MDR ) ) )", "choosing": "( ( MUR / Max( ( MLU / ( ( RCSe - RRSe ) + ( CS - MUR ) ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.6259124087591241, "obj2": 0.2650647366253754}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( ARS,( ( CRS * MDR ) * ( MDR + PN ) ) ) + BR ) ) + ( DDR - MDR ) ) + ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) )", "choosing": "Min( ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - Min( DS ,DS ) ) - RRSe ) / ( CS * MUC ) ) ) ) ,( Min( ( Max( ( ( DS * DS ) * ( DS / Min( MUC ,MUR ) ) ),( MUC * ( MUR - ( RMSe * MUM ) ) ) ) * RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.45985401459854014, "obj2": 0.5142054328828187}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + ( ( ARS * MDR ) * BR ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.541970802919708, "obj2": 0.3792547683313367}, {"determining": "( ( ( PN * Max( Max( ( ( CRS * FirstVNF_Mem_Server ) + MDR ),( ARS - ACS ) ),( ACS - RRS ) ) ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_Mem + MDR ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( ( ( RRSe / DS ) / ( MLU / RCSe ) ) + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( RRSe + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.6368613138686131, "obj2": 0.2521967863949953}, {"determining": "( ( ( Min( Max( FirstVNF_Mem,DDR ) ,( ARS - MDR ) ) - FirstVNF_Mem ) + ( PN - MDR ) ) + Min( ( ( ( ( AMS + AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( ARS / PN ) ,Const ) + BR ) ) - ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( MUM - ( ( MLU + RRSe ) + DS ) ) + Min( ( MLU - MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( RRSe / MUM ) / ( ( CS - RCSe ) / ( ( CS + RMSe ) / MUM ) ) ),( ( RRSe * ( RCSe / MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + ( ( ( MUC / MUC ) * ( ( DS + MUR ) - MUC ) ) + RRSe ) )", "obj1": 0.5364963503649635, "obj2": 0.3976573585470722}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( MUM + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,MUR ) )", "obj1": 0.5401459854014599, "obj2": 0.3797328484896326}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( RRSe + RCSe ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6459854014598541, "obj2": 0.2452328672989358}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + ( ( ( DS + DS ) * ( ( ( ( ( MUM + MLU ) - ( RRSe - MUC ) ) - Min( MLU ,Min( CS ,RCSe ) ) ) - ( RCSe + MLU ) ) - MUC ) ) / ( RMSe - RCSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( ( Max( MUC,Min( DS ,MUM ) ) + Min( RMSe ,RRSe ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( DS,MUR ) / RRSe ) ) - ( ( ( RRSe - ( RRSe / DS ) ) - RCSe ) + ( MUC * CS ) ) ) ) )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - AMS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( MUR + RCSe ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6605839416058394, "obj2": 0.22771176508065105}, {"determining": "Max( Max( ( MDR + FirstVNF_Mem ),Max( MDR,ACS ) ),( Min( BR ,( BR * FirstVNF_RAM ) ) - RRS ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + ( ( ( ( MUC + DS ) / ( MUR - CS ) ) / Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ) - Max( Min( Min( RCSe ,MUC ) ,CS ),MLU ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6144093178284101}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( ( MRS * ( FirstVNF_RAM_Server + Const ) ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM + RMSe ) - MLU ) + ( ( ( DS - ( CS + ( MUC + RMSe ) ) ) - RRSe ) - DS ) )", "obj1": 0.6678832116788321, "obj2": 0.22378552834295887}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_Mem + MDR ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( RRSe + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.635036496350365, "obj2": 0.253436296942649}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( CRS - MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - ( PN - MDR ) ) ) * ( AMS + BR ) ) * MDR ) / MDR ) ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - MUC ) * Min( DS ,Min( Min( DS ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.8722627737226277, "obj2": 0.057439424401684355}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Max( Const,PN ) - Min( FirstVNF_CPU ,BR ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MLU + Max( Min( ( ( ( RMSe / RMSe ) + MLU ) * Max( MLU,DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) ) / Max( ( MLU / ( MUR + ( RCSe - RRSe ) ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MUM ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MUM ),RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + MLU )", "obj1": 0.614963503649635, "obj2": 0.27351551373303207}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7135036496350365, "obj2": 0.17488669964807585}], "39": [{"determining": "( ( Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) + ( PN - MDR ) ) + Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) )", "choosing": "( ( ( ( Max( DS,DS ) + ( ( MUR * Min( MLU ,RCSe ) ) + MUC ) ) + Max( Min( MUM ,MUM ),DS ) ) - RCSe ) * Min( DS ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( MUC,( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "Min( ( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / Max( ARS,MDR ) ) - ACS ) ,( PN - MRS ) )", "choosing": "( ( Max( MUC,Min( DS ,MUM ) ) + RCSe ) + Max( MUC,( Min( Min( DS ,DS ) ,( ( ( ( RMSe + DS ) - CS ) + MUM ) / RRSe ) ) - ( ( ( RRSe - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Min( AMS ,AMS ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - MDR ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) + Max( ( MUC - RRSe ),MUR ) )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,FirstVNF_RAM_Server ) ) ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + Max( MLU,( MLU + MUR ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.44525547445255476, "obj2": 0.5414826248560948}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "Max( Max( ( ( CRS * FirstVNF_Mem_Server ) + MDR ),( ARS - Max( AMS,( CRS * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ),( RRS - ACS ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + Min( MUR ,MUM ) ) ) ) - Max( DS,RRSe ) ) / MUM ) - ( DS * MUC ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( Max( MUM,Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + AMS ) + ( FirstVNF_RAM * ( ( ( ARS * MDR ) * BR ) * MDR ) ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - RRSe ) ) * Max( MUC,MUR ) ) - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + MLU ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.9379562043795621, "obj2": 0.0212935871288452}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Max( Const,PN ) - Min( FirstVNF_CPU ,BR ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MLU + Max( Min( ( ( ( RMSe / RMSe ) + MLU ) * Max( MLU,DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) ) / Max( ( MLU / ( MUR + ( RCSe - RRSe ) ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MUM ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( ( ( RRS - AMS ) + ( FirstVNF_RAM_Server * PN ) ) + Min( ( ( FirstVNF_CPU / ( ( BR - Min( FirstVNF_Mem_Server ,DDR ) ) + FirstVNF_RAM ) ) / ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) * ( FirstVNF_CPU + BR ) ) * FirstVNF_Mem_Server ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( RRSe - ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - ( DS - CS ) ) / ( MLU / Min( MLU ,RCSe ) ) ) * ( Max( DS,MUC ) - MUC ) ) ) ) / ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) + MUC )", "obj1": 0.948905109489051, "obj2": 0.015555491827697191}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / ( RMSe / RMSe ) ) ) ) + RRSe ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.7043795620437956, "obj2": 0.18156668778236282}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "( ( ( ( MDR / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,AMS ) + ( ( AMS - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( ARS + FirstVNF_CPU_Server ) ) * ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU_Server * MRS ) ) + BR ) ) * Min( ( MDR / ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,MDR ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( ( MUR / RMSe ) / MLU ) / RCSe ) ,( MLU / ( Min( MUM ,Max( ( MUC * MLU ),MUM ) ) - MLU ) ) ) / ( CS / MUM ) ) + ( ( ( ( MUM / DS ) - ( CS * DS ) ) + ( Min( RMSe ,MLU ) / MLU ) ) + RRSe ) )", "obj1": 0.8175182481751825, "obj2": 0.09648172904443382}, {"determining": "( ( Max( FirstVNF_CPU_Server,( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + BR ) ) ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUC / MUR ) + Max( ( MUC / Max( ( MLU / ( ( RCSe - RRSe ) + RRSe ) ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - RRSe ) / RMSe ) ,CS ),CS ) ) )", "obj1": 0.7299270072992701, "obj2": 0.15790367822926094}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) - ( ( ( RRSe - ( MLU + MUR ) ) - Max( ( ( Min( DS ,MLU ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.6916058394160584, "obj2": 0.19619335352288395}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) / ( MLU / Min( MLU ,RCSe ) ) ),MUM ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.30648124269411775}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5711678832116789, "obj2": 0.3388592641850901}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.6952554744525548, "obj2": 0.19221913708097102}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + CS ) - MUR ) / ( MLU - RRSe ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.6806569343065694, "obj2": 0.20730247270711508}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( ( ( Max( MDR,ACS ) - FirstVNF_Mem ) + Max( ( MDR / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) ) / ( RRS - BR ) ) ,( FirstVNF_CPU_Server - MDR ) ) + Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "Max( RMSe,( MUR - ( ( MUR + ( Max( MLU,DS ) / MUR ) ) - ( ( ( CS / DS ) - RCSe ) - CS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08607328129706897}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( Max( Min( RRSe ,CS ),MUR ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / RCSe ) ,Max( ( MUR + RRSe ),MUR ) ) ) ) ) )", "obj1": 0.8540145985401459, "obj2": 0.06294215099828859}, {"determining": "Max( Max( ( Max( AMS,MDR ) + MDR ),Min( FirstVNF_Mem ,( ( AMS + ( ( FirstVNF_Mem + ARS ) + DDR ) ) / ( ACS - FirstVNF_RAM ) ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( AMS ,FirstVNF_RAM ) ) * Min( MRS ,FirstVNF_Mem ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_CPU * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( CS + ( ( MLU - ( DS - RRSe ) ) + RMSe ) ) ) - DS ) - DS ) * ( Min( ( Max( Max( ( ( RCSe * MUM ) + Min( RMSe ,CS ) ),Max( Max( MUR,MLU ),Max( RMSe,MUM ) ) ),( Min( RRSe ,MUM ) / RMSe ) ) / DS ) ,Min( RCSe ,Min( RMSe ,( RRSe + RRSe ) ) ) ) * MLU ) )", "obj1": 0.4781021897810219, "obj2": 0.4818268819150492}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + PN ) ) ,Min( ( FirstVNF_Mem * ( RRS / AMS ) ) ,( ( CRS + MRS ) / FirstVNF_CPU_Server ) ) ) - DDR ) * ACS ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( FirstVNF_CPU_Server ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( ( RCSe - MUM ),MUC ) - ( ( RRSe + RRSe ) + ( ( RMSe + MUM ) + DS ) ) ) ) + ( MUC + DS ) ) ) - Max( CS,RCSe ) )", "obj1": 0.7208029197080292, "obj2": 0.17216715355801357}, {"determining": "( ( DDR * ( FirstVNF_RAM - AMS ) ) + ( ACS + ( MDR / ARS ) ) )", "choosing": "( ( Max( ( ( ( Min( MUM ,( MUC * MUR ) ) + MLU ) / DS ) + MUC ),MUR ) + RRSe ) + ( ( ( Max( ( DS * ( CS - ( RMSe / DS ) ) ),DS ) + ( ( Min( DS ,( RRSe / RMSe ) ) / DS ) - MUR ) ) * MUC ) * ( RRSe * MLU ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4738847498527962}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,ARS ) + BR ) ) + ( DDR - MDR ) ) + ( RRS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) )", "choosing": "Min( ( RRSe - Max( ( Max( Max( MUR,Max( MUM,( CS * RRSe ) ) ),MUC ) + MUC ),Max( MUC,MUM ) ) ) ,( Min( ( Max( ( ( DS * DS ) * ( DS / Min( MUC ,MUR ) ) ),( ( CS + MUM ) - ( MLU + RMSe ) ) ) * RMSe ) ,Min( MLU ,RCSe ) ) + DS ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( MDR / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + RRSe ) + ( ( RRSe * CS ) + ( ( ( MUR / ( DS - RCSe ) ) / CS ) - ( ( ( RMSe / MUC ) / MLU ) + RCSe ) ) ) ) ) * ( DS + DS ) )", "obj1": 0.3978102189781022, "obj2": 0.6320716753181514}, {"determining": "( Max( ( FirstVNF_Mem_Server * ARS ),( MDR - ( MRS - FirstVNF_Mem_Server ) ) ) + Min( ( MRS - ACS ) ,RRS ) )", "choosing": "( ( ( RRSe * MUR ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) + ( Max( MUM,DS ) + RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5723157656738803}, {"determining": "( MDR / Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,RRS ) )", "choosing": "( ( MUC / ( ( Min( MLU ,CS ) / ( ( ( MUR + MUM ) / Min( MUR ,MUR ) ) - MUR ) ) - MLU ) ) + Max( MUC,MUR ) )", "obj1": 0.46715328467153283, "obj2": 0.5004291780226733}, {"determining": "( ( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * Max( MLU,DS ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( AMS - Max( FirstVNF_RAM_Server,ACS ) ) ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( ( ( CS + RMSe ) - RMSe ) ,RCSe ) * MLU ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6605839416058394, "obj2": 0.2268763980845105}, {"determining": "( ( ( ( AMS - Max( PN,BR ) ) * ( AMS + FirstVNF_CPU ) ) / ( Min( Max( ( ACS * Const ),( ( DDR / Max( RRS,CRS ) ) / FirstVNF_RAM ) ) ,CRS ) - MDR ) ) + Max( MRS,MRS ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( ( CS / MUR ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,Min( Min( Min( ( RCSe * Max( Max( DS,MUM ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) ,( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4333090978110347}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( ( Max( MUC,Min( DS ,MUM ) ) + Min( RMSe ,RRSe ) ) + Max( MUC,( Min( Min( DS ,DS ) ,( Max( DS,MUR ) / RRSe ) ) - ( ( ( RRSe - ( RRSe / DS ) ) - RCSe ) + ( MUC * CS ) ) ) ) )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem / MRS ) ) ) + ( ( Const + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) + ( PN / ACS ) )", "choosing": "( ( CS + MUC ) + Max( ( ( ( DS + ( ( ( RMSe * MUM ) * RRSe ) - ( MUC * MLU ) ) ) / ( DS * CS ) ) / Max( ( ( ( ( MUC * MLU ) - ( MUM + MUM ) ) + RRSe ) / MLU ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - MUR ) / RMSe ) ,CS ),( DS + ( MUR / ( CS * Min( ( MLU * RMSe ) ,MUC ) ) ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08458334405135517}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Min( ( MUC * MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + Max( MUM,MUM ) ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) + ( Max( MUM,MUR ) + RRSe ) ) )", "obj1": 0.5620437956204379, "obj2": 0.3542463063283886}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( Max( Min( RRSe ,CS ),MUR ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / RCSe ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.8558394160583942, "obj2": 0.06190143025553726}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Max( ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ),Min( ( FirstVNF_Mem / MDR ) ,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / ( Const + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( DDR / PN ) ) ) ) ,( AMS - BR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( ( CS / RCSe ) * MLU ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + ( ( ARS * MDR ) * BR ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.5164233576642335, "obj2": 0.427304478150394}, {"determining": "( ( ( ( FirstVNF_RAM_Server - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( ( ( ( Min( AMS ,AMS ) + ( Max( ARS,MDR ) * ( MDR / DDR ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( MUC - MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - Min( CS ,RRSe ) ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Max( MUC,( Min( CS ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.5547445255474452, "obj2": 0.35744332416050334}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) + Max( Min( MUM ,MUM ),DS ) ) - RCSe ) * Min( DS ,DS ) )", "obj1": 0.8375912408759124, "obj2": 0.08047308485025241}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( DS + DS ) * ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( ( Max( MUM,RCSe ) + RRSe ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.801094890510949, "obj2": 0.09735678268258612}, {"determining": "( ( Max( RRS,( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( ( Const + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) + ( AMS - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / MUR ) + Max( ( ( ( DS + ( ( ( RMSe * MUM ) * RRSe ) - ( MUC * MLU ) ) ) / ( DS * CS ) ) / Max( ( ( ( RCSe - RRSe ) + RRSe ) / MLU ),( MUR + ( ( Max( RMSe,MUM ) - MUM ) + MLU ) ) ) ),Max( Min( ( ( MUC - RRSe ) / RMSe ) ,CS ),( DS + ( MUR / ( CS * Min( ( MLU * RMSe ) ,MUC ) ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6000862591395966}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,( ARS / ( FirstVNF_RAM_Server / RRS ) ) ) ),Min( ( Max( ( ( ( Const - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ( MDR * FirstVNF_Mem ) - ARS ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( Max( PN,( MRS + MDR ) ) * Min( FirstVNF_RAM ,AMS ) ) + ( BR * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ,( PN * Min( ( Max( ACS,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( Max( MUC,Max( ( Max( ( MLU - MUC ),Min( RRSe ,( RRSe - MLU ) ) ) - RRSe ),Min( ( DS * CS ) ,MUR ) ) ) + ( ( RMSe - Min( MUC ,RMSe ) ) + MUM ) ) * ( Min( CS ,Min( RCSe ,( Min( ( MUM / RRSe ) ,( MUM + CS ) ) - MUC ) ) ) * MLU ) )", "obj1": 0.49635036496350365, "obj2": 0.4565164855704457}, {"determining": "( ( ( Min( ( ( RRS / ( ( DDR - CRS ) + Min( AMS ,FirstVNF_CPU ) ) ) / Min( ( FirstVNF_RAM_Server - RRS ) ,Max( FirstVNF_RAM,AMS ) ) ) ,ACS ) * PN ) + ( PN - MDR ) ) + ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) * Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "( ( Max( ( Max( MUR,( ( MLU - MLU ) + Min( ( DS - RRSe ) ,Min( RCSe ,MLU ) ) ) ) + MLU ),( MUR + DS ) ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - MUR ) + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.5205133136819537}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,( Max( FirstVNF_RAM,ARS ) + BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Min( ( Max( ( ( DS * DS ) * ( DS / Min( MUC ,MUR ) ) ),( ( CS + MUM ) - ( MLU + RMSe ) ) ) * RMSe ) ,Min( MLU ,RCSe ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5967153284671532, "obj2": 0.2926231808461866}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) ,Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ( Min( ( ARS - PN ) ,Const ) + BR ) ) )", "choosing": "( Min( Min( DS ,( MLU / ( MUM - MUR ) ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( Max( MLU,DS ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ),Max( Min( CS ,CS ),MLU ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5271088147134937}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( FirstVNF_Mem - Max( ARS,FirstVNF_RAM_Server ) ) - RRS ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( RRS + ( MDR - Min( FirstVNF_CPU ,PN ) ) ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,MDR ) ) * Min( ( DDR * Const ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( DS * RCSe ) ) + ( MLU - Max( DS,( ( CS / RCSe ) * Max( MUC,Max( Min( RMSe ,Max( RCSe,MLU ) ),MLU ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6113317375789231}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( Min( CS ,MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8795620437956204, "obj2": 0.055167117367569345}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( PN - MDR ) - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( ACS - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( RRSe ,CS ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( DS * MUC ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.1325144288261215}, {"determining": "( ( ( Min( Max( FirstVNF_Mem,DDR ) ,( ARS - MDR ) ) - FirstVNF_Mem ) + ( PN - MDR ) ) + Min( ( ( ( ( AMS + AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( ARS / PN ) ,Const ) + BR ) ) - ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( MUM - ( ( MLU + RRSe ) + DS ) ) + Min( ( MLU - MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( RRSe / MUM ) / ( ( CS - RCSe ) / ( ( CS + RMSe ) / MUM ) ) ),( ( RRSe * ( RCSe / MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + ( ( ( MUC / MUC ) * ( ( DS + MUR ) - MUC ) ) + RRSe ) )", "obj1": 0.5364963503649635, "obj2": 0.3976573585470722}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( ( MRS * ( FirstVNF_RAM_Server + Const ) ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM + RMSe ) - MLU ) + ( ( ( DS - ( CS + ( MUC + RMSe ) ) ) - RRSe ) - DS ) )", "obj1": 0.6678832116788321, "obj2": 0.22378552834295887}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( BR + ( ( ( CRS / MRS ) - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + ( ( ARS * MDR ) * Max( ARS,FirstVNF_RAM ) ) ) ) * Min( ( DDR * FirstVNF_CPU ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) )", "choosing": "Max( MUR,( MUR - ( ( ( ( ( ( MUR * RRSe ) + ( RRSe - RCSe ) ) / MUR ) + RCSe ) / ( MUR * RMSe ) ) - MUM ) ) )", "obj1": 0.9105839416058394, "obj2": 0.03795488793805375}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( FirstVNF_RAM_Server ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( ( ( DS + DS ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + RRSe ) + ( Max( MUM,MUR ) + RRSe ) ) ) ) * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.781021897810219, "obj2": 0.1106576398610802}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + RRSe ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( ( MUC - RRSe ),MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6209613042832636}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( MUR + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.75, "obj2": 0.13770281704296286}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,ARS ) + BR ) ) + ( DDR - MDR ) ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS * DS ) * ( DS / Min( MUC ,MUR ) ) ) * Min( DS ,Min( Min( DS ,( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUR * Min( CS ,( DS / CS ) ) ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.7645985401459854, "obj2": 0.12094156345758214}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( PN - MDR ) ) + ( ( ( ( Max( Min( FirstVNF_CPU ,( PN / FirstVNF_RAM ) ),Max( Max( FirstVNF_Mem,PN ),ARS ) ) * MDR ) * MDR ) * MDR ) - ( ( ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - AMS ) ) ) * ( Min( ( FirstVNF_CPU_Server / DDR ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( MUM + Min( CS ,MUM ) ) ,( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) + MLU ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( MUC - MUR ) ) ) ) + ( ( Min( Min( MLU ,CS ) ,( ( RRSe - DS ) / RRSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ) / MUC ) )", "obj1": 0.4762773722627737, "obj2": 0.4929434040971607}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5748175182481752, "obj2": 0.3251274678476373}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Max( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),RRS ),FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( ( CS * ( DS + MUR ) ) - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUC ) ) - ( ( MLU + Max( MUM,RCSe ) ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) )", "obj1": 0.7974452554744526, "obj2": 0.10154769929806895}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) ) + Min( ( FirstVNF_RAM * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( ARS - PN ) ,Const ) + BR ) ) * ( DDR - Max( ( ( FirstVNF_RAM * CRS ) - ( ARS + MRS ) ),( FirstVNF_RAM + ( AMS - CRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( MUM + Min( ( RCSe * MUM ) ,DS ) ),MUR ) ) + ( RRSe - MUC ) ) ) + Max( MUC,( MUR / CS ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4593356699357887}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( RRSe + RCSe ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6423357664233577, "obj2": 0.2450069743048496}, {"determining": "( ( PN - MDR ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + ( RRSe - Max( ( MUM + MUM ),RCSe ) ) ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.9799270072992701, "obj2": 0.0027934018209464415}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + ( ( ( DS + DS ) * ( ( ( ( ( MUM + MLU ) - ( RRSe - MUC ) ) - Min( MLU ,Min( CS ,RCSe ) ) ) - ( RCSe + MLU ) ) - MUC ) ) / ( RMSe - RCSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "( ( FirstVNF_RAM_Server / ACS ) / Max( MDR,( ( FirstVNF_RAM_Server * Max( FirstVNF_Mem_Server,CRS ) ) + ( FirstVNF_Mem_Server - ( PN + ACS ) ) ) ) )", "choosing": "( Max( ( ( MLU * DS ) / ( RCSe + MLU ) ),( ( ( RCSe - ( ( RRSe - RRSe ) + ( ( MLU + RMSe ) + DS ) ) ) * RCSe ) + Min( RRSe ,MUM ) ) ) - ( MUR + Max( ( Max( Min( ( CS * ( RRSe * RCSe ) ) ,RRSe ),DS ) + DS ),DS ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5710635115891226}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_RAM * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( CRS * ARS ) ,BR ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUC ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ,Min( Min( DS ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / DS ),RRSe ) ) ) ) ) ) )", "obj1": 0.6094890510948905, "obj2": 0.2813861266523126}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( PN - MDR ) - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( Max( Min( ( ( ( MUM + RRSe ) * RMSe ) + Max( Min( DS ,DS ),DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) + MLU ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.6551094890510949, "obj2": 0.2337020805298973}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - Max( ( ( ( RMSe + DS ) - CS ) + RRSe ),Max( MUM,MUR ) ) ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.4635036496350365, "obj2": 0.5098408447017324}, {"determining": "( ( ( ( CRS + PN ) * ( RRS / ( FirstVNF_Mem / PN ) ) ) - Max( PN,MDR ) ) + Min( ( ( RRS - Const ) + FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_Mem,DDR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( DS ,Max( CS,( MUM / MUC ) ) ) / MUC ) * ( Min( ( ( DS - MLU ) - MUR ) ,Max( DS,( MLU - DS ) ) ) - MUR ) ) + ( Min( ( MLU * MLU ) ,( MLU * CS ) ) - ( ( RRSe - ( RRSe - ( Min( ( MUC * RCSe ) ,MLU ) / Max( CS,MLU ) ) ) ) + ( CS * MUR ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.40670677624697654}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + CS ) - MUR ) / ( MLU - RRSe ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.6697080291970803, "obj2": 0.2169678026664726}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ACS ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( ( Max( CRS,FirstVNF_RAM_Server ) - PN ) + ( Min( RRS ,FirstVNF_Mem_Server ) / DDR ) ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - DDR ) ,( ( ( ( BR + Max( MDR,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS * ( PN + FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( MLU + ( ( CS / ( MUR * MLU ) ) / Min( ( MUM - MLU ) ,Max( MUM,( RMSe * MUR ) ) ) ) ),Max( MUR,( ( RMSe + Max( Max( RRSe,DS ),Max( MUC,RMSe ) ) ) - MUM ) ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7116788321167883, "obj2": 0.17591911961781034}, {"determining": "( ( ( FirstVNF_CPU * PN ) + ( CRS / MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) * ( FirstVNF_Mem_Server / MRS ) ) / MDR ) ,( ( ( CRS * ( RRS * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) / MDR ) ) )", "choosing": "( ( MUM + MUR ) + ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( DS + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) )", "obj1": 0.8704379562043796, "obj2": 0.0576933700217704}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * BR ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ),( MUM / ( RRSe + RCSe ) ) )", "obj1": 0.6021897810218978, "obj2": 0.28582424947601487}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( MDR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( ( FirstVNF_RAM_Server - AMS ) - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) + MUM ) )", "obj1": 0.7883211678832117, "obj2": 0.10455180948811338}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * Min( FirstVNF_RAM_Server ,CRS ) ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Max( ( FirstVNF_Mem + MDR ),( MDR - ACS ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + MUC ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - MUM ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6459854014598541, "obj2": 0.24407396717947086}, {"determining": "( ( ( PN * AMS ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( Min( ( CRS - FirstVNF_RAM ) ,( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RRSe - ( ( RRSe - RMSe ) + ( ( RRSe + MLU ) + DS ) ) ) ) + Min( Max( ( MLU * ( Min( RRSe ,DS ) / MLU ) ),MUC ) ,RRSe ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.6514598540145985, "obj2": 0.23901561991932924}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - ( MDR / ( CRS / ( ( FirstVNF_CPU + Max( FirstVNF_Mem,( DDR + FirstVNF_RAM_Server ) ) ) * MDR ) ) ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( DS + CS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),( ( DS / Min( RMSe ,CS ) ) - MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6000862591395966}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) / MUM ) - ( DS * MUC ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7463503649635036, "obj2": 0.1420626765276571}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( MLU + RRSe ) + DS ) - MUM ) + Min( ( MLU - MLU ) ,( ( Min( ( MLU / MLU ) ,Max( MUC,MUR ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( MUC,( MLU - MUM ) ) )", "obj1": 0.5291970802919708, "obj2": 0.4014816000736723}, {"determining": "Max( Max( Min( AMS ,AMS ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( Max( DS,DS ) + ( ( MUR * Min( MLU ,RCSe ) ) + MUC ) ) ) / Max( ( MLU + ( MLU + MUR ) ),( MUR + DS ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6673874043663433}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + AMS ) + ( FirstVNF_RAM * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( MRS ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( MLU - ( MLU + RRSe ) ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + MLU ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.7609489051094891, "obj2": 0.12955549778529232}, {"determining": "Max( ( RRS + ( MDR / FirstVNF_RAM_Server ) ),Min( ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - ( CRS - ACS ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( AMS * ARS ) ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * PN ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( MLU * DS ) + ( ( ( MUC * ( ( MUM - DS ) * ( Max( ( RRSe / MLU ),( MUR / MUC ) ) / ( ( MUC * CS ) + MLU ) ) ) ) + MLU ) - MLU ) )", "obj1": 0.39963503649635035, "obj2": 0.6314882633665565}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Min( PN ,MDR ) - MDR ) ) + Min( ( ( ( ARS * MDR ) * AMS ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_RAM ) ) ,( ( ( FirstVNF_RAM_Server - AMS ) - Min( ( BR + DDR ) ,ACS ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( RRSe ,CS ) - Min( CS ,( MLU + ( DS - ( DS / ( ( MUR + MLU ) / RCSe ) ) ) ) ) ) )", "obj1": 0.9744525547445255, "obj2": 0.00686079264750924}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) * ( ( FirstVNF_CPU * DDR ) / BR ) ) ) / ( Max( FirstVNF_RAM_Server,BR ) + Const ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Max( RCSe,( ( Max( MUM,MUR ) - RCSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( Max( DS,RCSe ) ,( MLU + Max( ( MUC - MUC ),( RRSe - ( MUC - RMSe ) ) ) ) ) ) ) - ( ( ( ( ( MUC / MUC ) - MUR ) + ( RCSe / ( RCSe / MUC ) ) ) * MUC ) + Max( MLU,DS ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - Max( FirstVNF_CPU,( ACS - MDR ) ) ) ) + Min( ( MDR * MDR ) ,( ( ( ( AMS + BR ) * ( Min( AMS ,AMS ) / ( Min( DDR ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,( Min( FirstVNF_CPU ,DDR ) + RRS ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( MUM + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) ,Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( ( MDR / FirstVNF_Mem ) * ACS ) )", "choosing": "( Min( Min( MUM ,( MLU / ( MUM - MUR ) ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( Max( MLU,DS ) + ( RCSe - MLU ) ) ) ),Max( RCSe,RMSe ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5271088147134937}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( ( MLU * ( MUR - ( MLU + MUR ) ) ) * MUC ) ) ) ) )", "obj1": 0.7427007299270073, "obj2": 0.1476860111821096}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ( ( FirstVNF_Mem - ( Max( RRS,ARS ) * MRS ) ) / DDR ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( DS + MUC ) / ( ( MUR / MUC ) + CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( ( RRSe + CS ),MLU ) ) )", "obj1": 0.572992700729927, "obj2": 0.3372195341565952}, {"determining": "( Max( ( BR + BR ),( ( FirstVNF_RAM_Server * PN ) + ( Min( ( ( Max( FirstVNF_CPU,CRS ) * MDR ) + ( PN - MDR ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,Min( DDR ,AMS ) ) ) - DDR ) ) ) / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "( Max( ( CS * ( MUC / CS ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( MUC ,CS ) ) ) - Min( ( DS + RRSe ) ,RCSe ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( FirstVNF_Mem_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / Const ) ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( ( MUM * DS ),Max( ( DS * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.2770172781797911}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_Mem - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,FirstVNF_RAM_Server ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( ( ( MUC / RCSe ) + DS ) + Min( RRSe ,MUC ) ) ,Max( ( MUC / ( ( DS - Max( ( MUM + MUM ),RCSe ) ) + ( CS - ( MUC - MUR ) ) ) ),( MLU + MUR ) ) ) * Min( Min( DS ,( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUR * Min( CS ,( DS / CS ) ) ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.008198731353074456}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Max( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),RRS ),FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( ( CS * ( DS + MUR ) ) - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUC ) ) - ( ( MLU + Max( MUM,RCSe ) ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) )", "obj1": 0.9598540145985401, "obj2": 0.010548873741517945}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( AMS / MDR ) * PN ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( Min( ( RCSe * MUM ) ,DS ) + MLU ),( MUR + ( Min( MUC ,MUM ) - RMSe ) ) ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + MLU )", "obj1": 0.5182481751824818, "obj2": 0.4174590820391664}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / Max( ( MUC - RRSe ),MUR ) ) + MUC )", "obj1": 0.6788321167883211, "obj2": 0.2106780256051513}], "40": [{"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( MUC,( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( RRS - AMS ) ) + Min( ( ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) / ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) * ( FirstVNF_CPU + BR ) ) * FirstVNF_Mem_Server ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - ( DS - CS ) ) / ( MLU / Min( MLU ,RCSe ) ) ) * ( ( RCSe - RRSe ) - MUC ) ) ) ) / ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) + ( PN - MDR ) ) + Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) )", "choosing": "( ( ( ( Max( DS,DS ) + ( ( MUR * Min( MLU ,RCSe ) ) + MUC ) ) + Max( Min( MUM ,MUM ),DS ) ) - RCSe ) * Min( DS ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Min( AMS ,AMS ),Min( FirstVNF_Mem ,Max( ARS,ACS ) ) ),( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,CS ) / ( RCSe + MLU ) ) + Max( ( MUC - RRSe ),MUR ) )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( ( RCSe - RRSe ) + RCSe ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6259124087591241, "obj2": 0.26104477573021756}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Max( Const,PN ) - Min( FirstVNF_CPU ,BR ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MLU + Max( Min( ( ( ( RMSe / RMSe ) + MLU ) * Max( MLU,DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) ) / Max( ( MLU / ( MUR + ( RCSe - RRSe ) ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MUM ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) - ( ( ( RRSe - ( MLU + MUR ) ) - Max( ( ( Min( DS ,MLU ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.4835766423357664, "obj2": 0.47105703872708543}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Max( ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ),Min( ( FirstVNF_Mem / MDR ) ,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / ( Const + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( DDR / PN ) ) ) ) ,( AMS - BR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( ( CS / RCSe ) * MLU ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( FirstVNF_Mem_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / Const ) ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( ( MUM * DS ),Max( ( DS * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.2770172781797911}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( ( DS - DS ) ,MUM ) - ( ( CS * MUC ) + ( ( ( ( MUR / ( MUR + RCSe ) ) - Min( DS ,DS ) ) - ( MLU + ( CS - ( MUC - MUR ) ) ) ) - RRSe ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.41505121207178336}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Min( ( MUC * MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + Max( MUM,MUM ) ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) + ( Max( MUM,MUR ) + RRSe ) ) )", "obj1": 0.5620437956204379, "obj2": 0.3542463063283886}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + ( ( ( DS + DS ) * ( ( ( ( ( MUM + MLU ) - ( RRSe - MUC ) ) - Min( MLU ,Min( CS ,RCSe ) ) ) - ( RCSe + MLU ) ) - MUC ) ) / ( RMSe - RCSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( ( ( ( FirstVNF_RAM_Server - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( ( ( ( Min( AMS ,AMS ) + ( Max( ARS,MDR ) * ( MDR / DDR ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( MUC - MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - Min( CS ,RRSe ) ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Max( MUC,( Min( CS ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.5547445255474452, "obj2": 0.35744332416050334}, {"determining": "( ( ( FirstVNF_CPU * PN ) + ( CRS / MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) * ( FirstVNF_Mem_Server / MRS ) ) / MDR ) ,( ( ( CRS * ( RRS * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) / MDR ) ) )", "choosing": "( ( MUM + MUR ) + ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( DS + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) )", "obj1": 0.8704379562043796, "obj2": 0.0576933700217704}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,FirstVNF_RAM_Server ) ) ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + Max( MLU,( MLU + MUR ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.44525547445255476, "obj2": 0.5414826248560948}, {"determining": "( ( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * Max( MLU,DS ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.7299270072992701, "obj2": 0.15609036148741265}, {"determining": "Max( Max( ( ( CRS * FirstVNF_Mem_Server ) + MDR ),( ARS - Max( AMS,( CRS * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ),( RRS - ACS ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + Min( MUR ,MUM ) ) ) ) - Max( DS,RRSe ) ) / MUM ) - ( DS * MUC ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( Max( MUM,Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( FirstVNF_Mem - Max( ARS,FirstVNF_RAM_Server ) ) - RRS ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( RRS + ( MDR - Min( FirstVNF_CPU ,PN ) ) ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,MDR ) ) * Min( ( DDR * Const ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( DS * RCSe ) ) + ( MLU - Max( DS,( ( CS / RCSe ) * Max( MUC,Max( Min( RMSe ,Max( RCSe,MLU ) ),MLU ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6113317375789231}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5069595696921577}, {"determining": "Max( Max( ( Max( AMS,MDR ) + MDR ),Min( FirstVNF_Mem ,( ( AMS + ( ( FirstVNF_Mem + ARS ) + DDR ) ) / ( ACS - FirstVNF_RAM ) ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( AMS ,FirstVNF_RAM ) ) * Min( MRS ,FirstVNF_Mem ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_CPU * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( CS + ( ( MLU - ( DS - RRSe ) ) + RMSe ) ) ) - DS ) - DS ) * ( Min( ( Max( Max( ( ( RCSe * MUM ) + Min( RMSe ,CS ) ),Max( Max( MUR,MLU ),Max( RMSe,MUM ) ) ),( Min( RRSe ,MUM ) / RMSe ) ) / DS ) ,Min( RCSe ,Min( RMSe ,( RRSe + RRSe ) ) ) ) * MLU ) )", "obj1": 0.4781021897810219, "obj2": 0.4818268819150492}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( Max( ARS,ACS ) + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( RCSe + MLU ) - ( DS * MUC ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08353257577343762}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( ( ( Max( MDR,ACS ) - FirstVNF_Mem ) + Max( ( MDR / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) ) / ( RRS - BR ) ) ,( FirstVNF_CPU_Server - MDR ) ) + Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "Max( RMSe,( MUR - ( ( MUR + ( Max( MLU,DS ) / MUR ) ) - ( ( ( CS / DS ) - RCSe ) - CS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08607328129706897}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) ) + Min( ( FirstVNF_RAM * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( ARS - PN ) ,Const ) + BR ) ) * ( DDR - Max( ( ( FirstVNF_RAM * CRS ) - ( ARS + MRS ) ),( FirstVNF_RAM + ( AMS - CRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( MUM + Min( ( RCSe * MUM ) ,DS ) ),MUR ) ) + ( RRSe - MUC ) ) ) + Max( MUC,( MUR / CS ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4593356699357887}, {"determining": "( ( ( ( MDR / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,AMS ) + ( ( AMS - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( ARS + FirstVNF_CPU_Server ) ) * ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU_Server * MRS ) ) + BR ) ) * Min( ( MDR / ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,MDR ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( ( MUR / RMSe ) / MLU ) / RCSe ) ,( MLU / ( Min( MUM ,Max( ( MUC * MLU ),MUM ) ) - MLU ) ) ) / ( CS / MUM ) ) + ( ( ( ( MUM / DS ) - ( CS * DS ) ) + ( Min( RMSe ,MLU ) / MLU ) ) + RRSe ) )", "obj1": 0.8175182481751825, "obj2": 0.09648172904443382}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + RRSe ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + Max( ( MUC - RRSe ),MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6209613042832636}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( ( ( CRS + PN ) * ( RRS / ( FirstVNF_Mem / PN ) ) ) - Max( PN,MDR ) ) + Min( ( ( RRS - Const ) + FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_Mem,DDR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( DS ,Max( CS,( MUM / MUC ) ) ) / MUC ) * ( Min( ( ( DS - MLU ) - MUR ) ,Max( DS,( MLU - DS ) ) ) - MUR ) ) + ( Min( ( MLU * MLU ) ,( MLU * CS ) ) - ( ( RRSe - ( RRSe - ( Min( ( MUC * RCSe ) ,MLU ) / Max( CS,MLU ) ) ) ) + ( CS * MUR ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.40670677624697654}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ACS ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( ( Max( CRS,FirstVNF_RAM_Server ) - PN ) + ( Min( RRS ,FirstVNF_Mem_Server ) / DDR ) ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - DDR ) ,( ( ( ( BR + Max( MDR,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS * ( PN + FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( MLU + ( ( CS / ( MUR * MLU ) ) / Min( ( MUM - MLU ) ,Max( MUM,( RMSe * MUR ) ) ) ) ),Max( MUR,( ( RMSe + Max( Max( RRSe,DS ),Max( MUC,RMSe ) ) ) - MUM ) ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7116788321167883, "obj2": 0.17591911961781034}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( DS + DS ) * ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( ( Max( MUM,RCSe ) + RRSe ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.801094890510949, "obj2": 0.0973567826825861}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + ( Max( MUM,MUR ) + RRSe ) ) ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - MUC ) ,MUR ) ) ) )", "obj1": 0.9379562043795621, "obj2": 0.019800250176657704}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + CS ) - MUR ) / ( MLU - RRSe ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.6697080291970803, "obj2": 0.2169678026664726}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( Max( ( FirstVNF_Mem_Server * ARS ),( MDR - ( MRS - FirstVNF_Mem_Server ) ) ) + Min( ( MRS - ACS ) ,RRS ) )", "choosing": "( ( ( RRSe * MUR ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) + ( Max( MUM,DS ) + RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5723157656738803}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( BR + ( ( ( CRS / MRS ) - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + ( ( ARS * MDR ) * Max( ARS,FirstVNF_RAM ) ) ) ) * Min( ( DDR * FirstVNF_CPU ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) )", "choosing": "Max( MUR,( MUR - ( ( ( ( ( ( MUR * RRSe ) + ( RRSe - RCSe ) ) / MUR ) + RCSe ) / ( MUR * RMSe ) ) - MUM ) ) )", "obj1": 0.9105839416058394, "obj2": 0.03795488793805375}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( AMS - Max( FirstVNF_RAM_Server,ACS ) ) ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( ( ( CS + RMSe ) - RMSe ) ,RCSe ) * MLU ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6605839416058394, "obj2": 0.2268763980845105}, {"determining": "( ( ( ( AMS - Max( PN,BR ) ) * ( AMS + FirstVNF_CPU ) ) / ( Min( Max( ( ACS * Const ),( ( DDR / Max( RRS,CRS ) ) / FirstVNF_RAM ) ) ,CRS ) - MDR ) ) + Max( MRS,MRS ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( ( CS / MUR ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,Min( Min( Min( ( RCSe * Max( Max( DS,MUM ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) ,( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4333090978110347}, {"determining": "( MDR / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( MUC,( Min( CS ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.3978102189781022, "obj2": 0.6320716753181514}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6897810218978102, "obj2": 0.1994207167647627}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + ( ( ARS * MDR ) * BR ) ) ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + ( ( ARS * MDR ) * BR ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( Min( ( MLU / MLU ) ,MUM ) * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.9890510948905109, "obj2": 0.0015236737205162412}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) + ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) + ACS ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( RRSe,( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + ( Max( DS,RCSe ) - ( MLU + MUR ) ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5360411848292798}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( ( ( Max( ( RRS + Const ),FirstVNF_Mem ) * RRS ) + ( PN - MDR ) ) + ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - RRSe ) * MUR ) / ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( ( RRSe * RRSe ) ,DS ) / ( RCSe + Min( MLU ,MUM ) ) ) ) ) ) ) + MUC )", "obj1": 0.6788321167883211, "obj2": 0.20885594029230342}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + PN ) ) ,Min( ( FirstVNF_Mem * ( RRS / AMS ) ) ,( ( CRS + MRS ) / FirstVNF_CPU_Server ) ) ) - DDR ) * ACS ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( FirstVNF_CPU_Server ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( ( RCSe - MUM ),MUC ) - ( ( RRSe + RRSe ) + ( ( RMSe + MUM ) + DS ) ) ) ) + ( MUC + DS ) ) ) - Max( CS,RCSe ) )", "obj1": 0.7208029197080292, "obj2": 0.17216715355801357}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + CS ) - MUR ) / ( MLU - RRSe ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.6806569343065694, "obj2": 0.20730247270711508}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( RRSe + RCSe ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6423357664233577, "obj2": 0.2450069743048496}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( ( MRS * ( FirstVNF_RAM_Server + Const ) ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU_Server ) ) / MDR ) ) )", "choosing": "( ( ( MUM + RMSe ) - MLU ) + ( ( ( DS - ( CS + ( ( MLU / Min( MLU ,RCSe ) ) + RMSe ) ) ) - RRSe ) - DS ) )", "obj1": 0.6514598540145985, "obj2": 0.23850915957871033}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( RRS - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( Max( Min( RRSe ,CS ),MUR ) + ( CS - ( Min( Min( DS ,DS ) ,( MUC / MUR ) ) - MUR ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / RCSe ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.8375912408759124, "obj2": 0.07429653573207358}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( PN - MDR ) - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( ACS - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( RRSe ,CS ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( DS * MUC ) ) ) )", "obj1": 0.7554744525547445, "obj2": 0.1325144288261215}, {"determining": "( ( ( Min( Max( FirstVNF_Mem,DDR ) ,( ARS - MDR ) ) - FirstVNF_Mem ) + ( PN - MDR ) ) + Min( ( ( ( ( AMS + AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( ARS / PN ) ,Const ) + BR ) ) - ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( MUM - ( ( MLU + RRSe ) + DS ) ) + Min( ( MLU - MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( RRSe / MUM ) / ( ( CS - RCSe ) / ( ( CS + RMSe ) / MUM ) ) ),( ( RRSe * ( RCSe / MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + ( ( ( MUC / MUC ) * ( ( DS + MUR ) - MUC ) ) + RRSe ) )", "obj1": 0.5364963503649635, "obj2": 0.3976573585470722}, {"determining": "( MDR / Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,RRS ) )", "choosing": "( ( MUC / ( ( Min( MLU ,CS ) / ( ( ( MUR + MUM ) / Min( MUR ,MUR ) ) - MUR ) ) - MLU ) ) + Max( MUC,MUR ) )", "obj1": 0.46715328467153283, "obj2": 0.5004291780226733}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( FirstVNF_RAM_Server ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( ( ( DS + DS ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + RRSe ) + ( Max( MUM,MUR ) + RRSe ) ) ) ) * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.781021897810219, "obj2": 0.1106576398610802}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - Max( FirstVNF_CPU,( ACS - MDR ) ) ) ) + Min( ( MDR * MDR ) ,( ( ( ( AMS + BR ) * ( Min( AMS ,AMS ) / ( Min( DDR ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,( Min( FirstVNF_CPU ,DDR ) + RRS ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( MUM + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( ( MLU * ( MUR - ( MLU + MUR ) ) ) * MUC ) ) ) ) )", "obj1": 0.7427007299270073, "obj2": 0.1476860111821096}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( MUR + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.75, "obj2": 0.13770281704296286}, {"determining": "( ( ( Min( ( ( RRS / ( ( DDR - CRS ) + Min( AMS ,FirstVNF_CPU ) ) ) / Min( ( FirstVNF_RAM_Server - RRS ) ,Max( FirstVNF_RAM,AMS ) ) ) ,ACS ) * PN ) + ( PN - MDR ) ) + ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) * Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "( ( Max( ( Max( MUR,( ( MLU - MLU ) + Min( ( DS - RRSe ) ,Min( RCSe ,MLU ) ) ) ) + MLU ),( MUR + DS ) ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - MUR ) + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.5205133136819537}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( PN - MDR ) ) + ( ( ( ( Max( Min( FirstVNF_CPU ,( PN / FirstVNF_RAM ) ),Max( Max( FirstVNF_Mem,PN ),ARS ) ) * MDR ) * MDR ) * MDR ) - ( ( ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - AMS ) ) ) * ( Min( ( FirstVNF_CPU_Server / DDR ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( MUM + Min( CS ,MUM ) ) ,( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) + MLU ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( MUC - MUR ) ) ) ) + ( ( Min( Min( MLU ,CS ) ,( ( RRSe - DS ) / RRSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ) / MUC ) )", "obj1": 0.4762773722627737, "obj2": 0.4929434040971607}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5748175182481752, "obj2": 0.3251274678476373}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( Min( CS ,MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8795620437956204, "obj2": 0.055167117367569345}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / AMS ) ) + Max( FirstVNF_RAM_Server,( MRS / Max( ( RRS / ACS ),( BR - MRS ) ) ) ) )", "choosing": "( MUC + ( ( ( DS - Min( DS ,RMSe ) ) + RRSe ) + Min( ( ( CS * MLU ) / CS ) ,( MUC + DS ) ) ) )", "obj1": 0.6423357664233577, "obj2": 0.2450069743048496}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) / MUM ) - ( DS * MUC ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7463503649635036, "obj2": 0.1420626765276571}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Max( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),RRS ),FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( ( CS * ( DS + MUR ) ) - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUC ) ) - ( ( MLU + Max( MUM,RCSe ) ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) )", "obj1": 0.7974452554744526, "obj2": 0.10154769929806895}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( BR + ( DDR / FirstVNF_CPU_Server ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( Min( MLU ,DS ) / Max( MUM,MUR ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6598894038207819}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( FirstVNF_RAM_Server + Const ) / ( ( FirstVNF_Mem - ( Max( RRS,ARS ) * MRS ) ) / DDR ) ) * BR ) * MDR ) )", "choosing": "( Min( Min( DS ,( MLU / RRSe ) ) ,( CS + MUC ) ) + Max( ( ( ( DS + MUC ) / ( ( MUR / MUC ) + CS ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( ( RRSe + CS ),MLU ) ) )", "obj1": 0.572992700729927, "obj2": 0.3372195341565952}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) / ( MLU / Min( MLU ,RCSe ) ) ),MUM ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.30648124269411775}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem_Server ,( Max( AMS,ARS ) + BR ) ) + ( DDR - MDR ) ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS * DS ) * ( DS / Min( MUC ,MUR ) ) ) * Min( DS ,Min( Min( DS ,( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),MUR ) ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUR * Min( CS ,( DS / CS ) ) ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.7645985401459854, "obj2": 0.12094156345758214}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) / MUM ) - ( DS * MUC ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.5711678832116789, "obj2": 0.3388592641850901}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.8558394160583942, "obj2": 0.06190143025553726}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( RRSe + RCSe ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6441605839416058, "obj2": 0.24206027001109562}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,( ARS / ( FirstVNF_RAM_Server / RRS ) ) ) ),Min( ( Max( ( ( ( Const - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ( MDR * FirstVNF_Mem ) - ARS ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( Max( PN,( MRS + MDR ) ) * Min( FirstVNF_RAM ,AMS ) ) + ( BR * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ,( PN * Min( ( Max( ACS,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( Max( MUC,Max( ( Max( ( MLU - MUC ),Min( RRSe ,( RRSe - MLU ) ) ) - RRSe ),Min( ( DS * CS ) ,MUR ) ) ) + ( ( RMSe - Min( MUC ,RMSe ) ) + MUM ) ) * ( Min( CS ,Min( RCSe ,( Min( ( MUM / RRSe ) ,( MUM + CS ) ) - MUC ) ) ) * MLU ) )", "obj1": 0.49635036496350365, "obj2": 0.4565164855704457}, {"determining": "( ( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,( MUM / ( RRSe + RCSe ) ) ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.7226277372262774, "obj2": 0.16631240122668292}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) / ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),MUM ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5912408759124088, "obj2": 0.30588134535481387}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( ( MLU * ( MUR - ( MLU + MUR ) ) ) * MUC ) ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + RRSe ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.6952554744525548, "obj2": 0.19221913708097102}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( BR - Max( FirstVNF_Mem,PN ) ) ,( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( CRS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "( Max( ( ( RCSe + MLU ) / Min( MLU ,DS ) ),( ( RRSe * ( ( MUC / RCSe ) - ( ( RRSe - RRSe ) + ( ( MUM + DS ) + DS ) ) ) ) + Min( CS ,MUC ) ) ) - ( CS + ( ( MUM + RMSe ) - MUR ) ) )", "obj1": 0.948905109489051, "obj2": 0.015555491827697191}, {"determining": "( ( PN - MDR ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + ( RRSe - Max( ( MUM + MUM ),RCSe ) ) ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.9799270072992701, "obj2": 0.0027934018209464415}, {"determining": "Max( ( RRS + ( MDR / FirstVNF_RAM_Server ) ),Min( ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - ( CRS - ACS ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( AMS * ARS ) ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * PN ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( MLU * DS ) + ( ( ( MUC * ( ( MUM - DS ) * ( Max( ( RRSe / MLU ),( MUR / MUC ) ) / ( ( MUC * CS ) + MLU ) ) ) ) + MLU ) - MLU ) )", "obj1": 0.39963503649635035, "obj2": 0.6314882633665565}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( Max( Min( RRSe ,CS ),MUR ) + ( CS - ( MUC - MUR ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / RCSe ) ,Max( ( MUR + RRSe ),MUR ) ) ) ) ) )", "obj1": 0.8540145985401459, "obj2": 0.06294215099828859}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) ,Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( ( MDR / FirstVNF_Mem ) * ACS ) )", "choosing": "( Min( Min( MUM ,( MLU / ( MUM - MUR ) ) ) ,( CS + MUC ) ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( Max( MLU,DS ) + ( RCSe - MLU ) ) ) ),Max( RCSe,RMSe ) ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5271088147134937}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( ( MRS * ( FirstVNF_RAM_Server + Const ) ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM + RMSe ) - MLU ) + ( ( ( DS - ( CS + ( MUC + RMSe ) ) ) - RRSe ) - DS ) )", "obj1": 0.6678832116788321, "obj2": 0.22378552834295887}, {"determining": "( Max( ( BR + BR ),( ( FirstVNF_RAM_Server * PN ) + ( Min( ( ( Max( FirstVNF_CPU,CRS ) * MDR ) + ( PN - MDR ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,Min( DDR ,AMS ) ) ) - DDR ) ) ) / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "( Max( ( CS * ( MUC / CS ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( MUC ,CS ) ) ) - Min( ( DS + RRSe ) ,RCSe ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Max( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),RRS ),FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( ( CS * ( DS + MUR ) ) - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUC ) ) - ( ( MLU + Max( MUM,RCSe ) ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) )", "obj1": 0.9598540145985401, "obj2": 0.010548873741517945}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) * ( ( FirstVNF_CPU * DDR ) / BR ) ) ) / ( Max( FirstVNF_RAM_Server,BR ) + Const ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Max( RCSe,( ( Max( MUM,MUR ) - RCSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( Max( DS,RCSe ) ,( MLU + Max( ( MUC - MUC ),( RRSe - ( MUC - RMSe ) ) ) ) ) ) ) - ( ( ( ( ( MUC / MUC ) - MUR ) + ( RCSe / ( RCSe / MUC ) ) ) * MUC ) + Max( MLU,DS ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / ( RMSe / RMSe ) ) ) ) + RRSe ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + AMS ) + ( FirstVNF_RAM * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( ( ( ( ARS * MDR ) * MDR ) * MDR ) * PN ) + ( BR - MDR ) ) )", "choosing": "( ( MLU - ( MLU + CS ) ) * ( ( ( Max( MUM,MUR ) + ( RRSe - Max( ( MUM + MUM ),RCSe ) ) ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) - ( ( Max( MUM,RCSe ) + MLU ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.00025394562008604024}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - ( MDR / ( CRS / ( ( FirstVNF_CPU + Max( FirstVNF_Mem,( DDR + FirstVNF_RAM_Server ) ) ) * MDR ) ) ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( DS + CS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),( ( DS / Min( RMSe ,CS ) ) - MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6000862591395966}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.5291970802919708, "obj2": 0.4014816000736723}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) - ( ( ( RRSe - ( MLU + MUR ) ) - Max( ( ( Min( DS ,MLU ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.6916058394160584, "obj2": 0.19619335352288395}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( MDR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( ( FirstVNF_RAM_Server - AMS ) - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) + MUM ) )", "obj1": 0.7901459854014599, "obj2": 0.10331229894045971}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + AMS ) + ( FirstVNF_RAM * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( MLU - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + MLU ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.9598540145985401, "obj2": 0.010548873741517945}, {"determining": "( ( ( RRS - AMS ) + ( FirstVNF_RAM_Server * PN ) ) + Min( ( ( FirstVNF_CPU / ( ( BR - Min( FirstVNF_Mem_Server ,DDR ) ) + FirstVNF_RAM ) ) / ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) * ( FirstVNF_CPU + BR ) ) * FirstVNF_Mem_Server ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( RRSe - ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - ( DS - CS ) ) / ( MLU / Min( MLU ,RCSe ) ) ) * ( Max( DS,MUC ) - MUC ) ) ) ) / ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) + MUC )", "obj1": 0.948905109489051, "obj2": 0.015555491827697191}, {"determining": "( ( ( MDR * MRS ) / Min( AMS ,AMS ) ) + ( ( ( CRS / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - ( DS * ( RCSe + DS ) ) ) ) ) ) + ( ( ( CS + DS ) - CS ) + MUM ) )", "obj1": 0.7043795620437956, "obj2": 0.18156668778236282}, {"determining": "( ( FirstVNF_RAM_Server / ACS ) / Max( MDR,( ( FirstVNF_RAM_Server * Max( FirstVNF_Mem_Server,CRS ) ) + ( FirstVNF_Mem_Server - ( PN + ACS ) ) ) ) )", "choosing": "( Max( ( ( MLU * DS ) / ( RCSe + MLU ) ),( ( ( RCSe - ( ( RRSe - RRSe ) + ( ( MLU + RMSe ) + DS ) ) ) * RCSe ) + Min( RRSe ,MUM ) ) ) - ( MUR + Max( ( Max( Min( ( CS * ( RRSe * RCSe ) ) ,RRSe ),DS ) + DS ),DS ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5710635115891226}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + AMS ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem / ACS ) ) * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( MRS ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( MLU + RRSe ) - MLU ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,( ( MUM - RRSe ) + ( ( RMSe * MUC ) + ( MUC / RCSe ) ) ) ) + MLU ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.7627737226277372, "obj2": 0.1284425930340699}], "41": [{"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( MUC,( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( ( ( ACS + MDR ) * PN ) + ( RRS - AMS ) ) + Min( ( ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) * ( FirstVNF_CPU + BR ) ) * FirstVNF_Mem_Server ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( RRSe * ( ( DS / MUM ) / ( ( Min( MUM ,( DS * MLU ) ) / ( MLU / Min( MLU ,RCSe ) ) ) * ( ( RCSe - RRSe ) - MUC ) ) ) ) / ( ( RCSe - CS ) / ( MUR - ( RCSe * CS ) ) ) ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( RRS - AMS ) ) + Min( ( ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) / ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) * ( FirstVNF_CPU + BR ) ) * FirstVNF_Mem_Server ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( RRSe * ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - ( DS - CS ) ) / ( MLU / Min( MLU ,RCSe ) ) ) * ( ( RCSe - RRSe ) - MUC ) ) ) ) / ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MDR ) + ( ( AMS * AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( ACS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe + Max( ( MLU + Max( MUR,( ( MLU - MLU ) + ( RCSe - MLU ) ) ) ),( MUR + DS ) ) ) + ( ( MUM - MUR ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + MUR ) ) - RRSe ) + ( ( MLU * ( CS + RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( ( RCSe - RRSe ) + RCSe ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6259124087591241, "obj2": 0.26104477573021756}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( ARS * MDR ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Min( ( MUC * MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + Max( MUM,RRSe ) ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) + ( Max( MUM,MUR ) + RRSe ) ) )", "obj1": 0.5602189781021898, "obj2": 0.34750945858811483}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( MDR ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( MDR * BR ) + MDR ) ) * ( Min( ( ARS / PN ) ,Const ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( Min( CS ,MLU ) + ( RRSe * ( RCSe - ( Max( MUM,RCSe ) + ( Max( DS,CS ) + DS ) ) ) ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.5711678832116789, "obj2": 0.33369374205879676}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Max( MUC,( Min( CS ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.5547445255474452, "obj2": 0.35744332416050334}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( ( DS - DS ) ,MUM ) - ( ( CS * MUC ) + ( ( ( ( MUR / ( MUR + RCSe ) ) - Min( DS ,DS ) ) - ( MLU + ( CS - ( MUC - MUR ) ) ) ) - RRSe ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.41505121207178336}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - ( MDR / ( CRS / ( ( FirstVNF_CPU + Max( FirstVNF_Mem,( DDR + FirstVNF_RAM_Server ) ) ) * MDR ) ) ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( DS + CS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),( ( DS / Min( RMSe ,CS ) ) - MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6000862591395966}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( AMS - Max( FirstVNF_RAM_Server,ACS ) ) ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( ( ( CS + RMSe ) - RMSe ) ,RCSe ) * MLU ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6605839416058394, "obj2": 0.2268763980845105}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( Min( RMSe ,RCSe ) + RCSe ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6405109489051095, "obj2": 0.24692430106871308}, {"determining": "( ( ( ( MDR / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,AMS ) + ( ( AMS - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( ARS + FirstVNF_CPU_Server ) ) * ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU_Server * MRS ) ) + BR ) ) * Min( ( MDR / ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,MDR ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( ( MUR / RMSe ) / MLU ) / RCSe ) ,( MLU / ( Min( MUM ,Max( ( MUC * MLU ),MUM ) ) - MLU ) ) ) / ( CS / MUM ) ) + ( ( ( ( MUM / DS ) - ( CS * DS ) ) + ( Min( RMSe ,MLU ) / MLU ) ) + RRSe ) )", "obj1": 0.8175182481751825, "obj2": 0.09648172904443382}, {"determining": "( ( ( ( FirstVNF_RAM_Server - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( ( ( ( Min( AMS ,AMS ) + ( Max( ARS,MDR ) * ( MDR / DDR ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( MUC - MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - Min( CS ,RRSe ) ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Max( Const,PN ) - Min( FirstVNF_CPU ,BR ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MLU + Max( Min( ( ( ( RMSe / RMSe ) + MLU ) * Max( MLU,DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) ) / Max( ( MLU / ( MUR + ( RCSe - RRSe ) ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MUM ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "Max( Max( ( ( CRS * FirstVNF_Mem_Server ) + MDR ),( ARS - Max( AMS,( CRS * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ),( RRS - ACS ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + Min( MUR ,MUM ) ) ) ) - Max( DS,RRSe ) ) / MUM ) - ( DS * MUC ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( Max( MUM,Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( FirstVNF_Mem - Max( ARS,FirstVNF_RAM_Server ) ) - RRS ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( RRS + ( MDR - Min( FirstVNF_CPU ,PN ) ) ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,MDR ) ) * Min( ( DDR * Const ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( DS * RCSe ) ) + ( MLU - Max( DS,( ( CS / RCSe ) * Max( MUC,Max( Min( RMSe ,Max( RCSe,MLU ) ),MLU ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6113317375789231}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( FirstVNF_Mem_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / Const ) ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( ( MUM * DS ),Max( ( DS * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.2770172781797911}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( ( MRS * ( FirstVNF_RAM_Server + Const ) ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( FirstVNF_CPU - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU_Server ) ) / MDR ) ) )", "choosing": "( ( ( MUM + RMSe ) - MLU ) + ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.6204379562043796, "obj2": 0.2760824740461191}, {"determining": "Max( Max( ( Max( AMS,MDR ) + MDR ),Min( FirstVNF_Mem ,( ( AMS + ( ( FirstVNF_Mem + ARS ) + DDR ) ) / ( ACS - FirstVNF_RAM ) ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( AMS ,FirstVNF_RAM ) ) * Min( MRS ,FirstVNF_Mem ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_CPU * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( CS + ( ( MLU - ( DS - RRSe ) ) + RMSe ) ) ) - DS ) - DS ) * ( Min( ( Max( Max( ( ( RCSe * MUM ) + Min( RMSe ,CS ) ),Max( Max( MUR,MLU ),Max( RMSe,MUM ) ) ),( Min( RRSe ,MUM ) / RMSe ) ) / DS ) ,Min( RCSe ,Min( RMSe ,( RRSe + RRSe ) ) ) ) * MLU ) )", "obj1": 0.4781021897810219, "obj2": 0.4818268819150492}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - MDR ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( RRSe + RCSe ) ) - RRSe ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6021897810218978, "obj2": 0.28649135664059705}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( ( ( MDR * MRS ) / Min( AMS ,AMS ) ) + ( ( ( CRS / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - ( DS * ( RCSe + DS ) ) ) ) ) ) + ( ( ( CS + DS ) - CS ) + MUM ) )", "obj1": 0.7043795620437956, "obj2": 0.18156668778236282}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) - ( ( ( RRSe - ( MLU + MUR ) ) - Max( ( ( Min( DS ,MLU ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.4835766423357664, "obj2": 0.47105703872708543}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( ( ( Max( MDR,ACS ) - FirstVNF_Mem ) + Max( ( MDR / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) ) / ( RRS - BR ) ) ,( FirstVNF_CPU_Server - MDR ) ) + Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "Max( RMSe,( MUR - ( ( MUR + ( Max( MLU,DS ) / MUR ) ) - ( ( ( CS / DS ) - RCSe ) - CS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08607328129706897}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( ( ( CRS + PN ) * ( RRS / ( FirstVNF_Mem / PN ) ) ) - Max( PN,MDR ) ) + Min( ( ( RRS - Const ) + FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_Mem,DDR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( DS ,Max( CS,( MUM / MUC ) ) ) / MUC ) * ( Min( ( ( DS - MLU ) - MUR ) ,Max( DS,( MLU - DS ) ) ) - MUR ) ) + ( Min( ( MLU * MLU ) ,( MLU * CS ) ) - ( ( RRSe - ( RRSe - ( Min( ( MUC * RCSe ) ,MLU ) / Max( CS,MLU ) ) ) ) + ( CS * MUR ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.40670677624697654}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ACS ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( ( Max( CRS,FirstVNF_RAM_Server ) - PN ) + ( Min( RRS ,FirstVNF_Mem_Server ) / DDR ) ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - DDR ) ,( ( ( ( BR + Max( MDR,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS * ( PN + FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( MLU + ( ( CS / ( MUR * MLU ) ) / Min( ( MUM - MLU ) ,Max( MUM,( RMSe * MUR ) ) ) ) ),Max( MUR,( ( RMSe + Max( Max( RRSe,DS ),Max( MUC,RMSe ) ) ) - MUM ) ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7116788321167883, "obj2": 0.17591911961781034}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * ( BR - MDR ) ) * MDR ) ,( ( ( Min( ( BR * Const ) ,MRS ) * ( FirstVNF_Mem_Server / BR ) ) * ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( Min( CRS ,MRS ) / DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( MLU * MUR ) * MLU ) - MUM ) + MUC ) / Max( RCSe,( ( Max( MUC,MUM ) + RCSe ) - RMSe ) ) ) + Max( MUC,Min( MUR ,( Max( MUR,Max( ( MUM - CS ),( Max( RCSe,RRSe ) - RCSe ) ) ) + Min( ( RCSe * DS ) ,Max( ( MUR + RRSe ),MUR ) ) ) ) ) )", "obj1": 0.8540145985401459, "obj2": 0.06294215099828858}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( DS + DS ) * ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( ( Max( MUM,RCSe ) + RRSe ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.801094890510949, "obj2": 0.0973567826825861}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + ( Max( MUM,MUR ) + RRSe ) ) ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - MUC ) ,MUR ) ) ) )", "obj1": 0.9379562043795621, "obj2": 0.019800250176657704}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * PN ) + Max( PN,MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / BR ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) + ( MLU / RCSe ) ) ) ) ) ) ) * ( CS / MLU ) )", "obj1": 0.9744525547445255, "obj2": 0.00531094124204709}, {"determining": "( Max( ( FirstVNF_Mem_Server * ARS ),( MDR - ( MRS - FirstVNF_Mem_Server ) ) ) + Min( ( MRS - ACS ) ,RRS ) )", "choosing": "( ( ( RRSe * MUR ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) + ( Max( MUM,DS ) + RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5723157656738803}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.5291970802919708, "obj2": 0.4014816000736723}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( ( BR + ( ( ( CRS / MRS ) - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + ( ( ARS * MDR ) * Max( ARS,FirstVNF_RAM ) ) ) ) * Min( ( DDR * FirstVNF_CPU ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) )", "choosing": "Max( MUR,( MUR - ( ( ( ( ( ( MUR * RRSe ) + ( RRSe - RCSe ) ) / MUR ) + RCSe ) / ( MUR * RMSe ) ) - MUM ) ) )", "obj1": 0.9105839416058394, "obj2": 0.03795488793805375}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,FirstVNF_RAM_Server ) ) ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + Max( MLU,( MLU + MUR ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.44525547445255476, "obj2": 0.5414826248560948}, {"determining": "( ( ( ( AMS - Max( PN,BR ) ) * ( AMS + FirstVNF_CPU ) ) / ( Min( Max( ( ACS * Const ),( ( DDR / Max( RRS,CRS ) ) / FirstVNF_RAM ) ) ,CRS ) - MDR ) ) + Max( MRS,MRS ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( ( CS / MUR ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,Min( Min( Min( ( RCSe * Max( Max( DS,MUM ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) ,( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4333090978110347}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( Max( ARS,ACS ) + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( RCSe + MLU ) - ( DS * MUC ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08353257577343762}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,Max( ARS,( PN + Min( BR ,ARS ) ) ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( BR * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( CS + ( MUC + RMSe ) ) ) - RRSe ) - DS ) * ( Min( CS ,Min( RCSe ,Min( DS ,( MUR + RRSe ) ) ) ) * MLU ) )", "obj1": 0.4927007299270073, "obj2": 0.4688202451662578}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + ( ( ( DS + DS ) * ( ( ( ( ( MUM + MLU ) - ( RRSe - MUC ) ) - Min( MLU ,Min( CS ,RCSe ) ) ) - ( RCSe + MLU ) ) - MUC ) ) / ( RMSe - RCSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( MDR / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) / MUM ) - ( DS * MUC ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6320716753181514}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6897810218978102, "obj2": 0.1994207167647627}, {"determining": "( ( ( FirstVNF_CPU * PN ) + ( CRS / MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) * ( FirstVNF_Mem_Server / MRS ) ) / MDR ) ,( ( ( CRS * ( RRS * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) / MDR ) ) )", "choosing": "( ( MUM + MUR ) + ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( DS + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) )", "obj1": 0.8704379562043796, "obj2": 0.0576933700217704}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) + ( PN - MDR ) ) + Min( ( ( ( PN * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - ( FirstVNF_RAM_Server * AMS ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + MDR ) ),RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + DS ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / Max( ( MLU / MUM ),( MUR * MUM ) ) ) - ( DS * DS ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) ) )", "obj1": 0.8941605839416058, "obj2": 0.04362003190892363}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) + ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) + ACS ) ) ) / ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) / ACS ) )", "choosing": "( Max( RRSe,( ( RRSe * ( RCSe - ( ( ( CS + MUM ) / MUM ) + ( ( MUM + RMSe ) + DS ) ) ) ) + ( Max( DS,RCSe ) - ( MLU + MUR ) ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5338046867305619}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + PN ) ) ,Min( ( FirstVNF_Mem * ( RRS / AMS ) ) ,( ( CRS + MRS ) / FirstVNF_CPU_Server ) ) ) - DDR ) * ACS ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( FirstVNF_CPU_Server ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( ( RCSe - MUM ),MUC ) - ( ( RRSe + RRSe ) + ( ( RMSe + MUM ) + DS ) ) ) ) + ( MUC + DS ) ) ) - Max( CS,RCSe ) )", "obj1": 0.7208029197080292, "obj2": 0.17216715355801357}, {"determining": "( ( ( ( CRS + FirstVNF_CPU ) * ( ( FirstVNF_CPU + AMS ) + ( FirstVNF_RAM * ACS ) ) ) * Min( ( AMS / MDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( Min( ( ( ( MLU * MUR ) / ( MUR / RMSe ) ) + ( Min( CS ,CS ) - DS ) ) ,DS ) / ( MUM / CS ) ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( Max( RRSe,( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.9598540145985401, "obj2": 0.010548873741517945}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) + PN ) + ( PN - MDR ) ) + Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) * MDR ) ,( ACS + ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,Max( Min( ( PN * MDR ) ,FirstVNF_Mem_Server ),Min( MDR ,DDR ) ) ) ) ) ) )", "choosing": "( Max( CS,RMSe ) + Min( MUR ,Max( Max( MLU,MUR ),( MUM + ( ( MUC + Min( Max( DS,MLU ) ,MUM ) ) - MUC ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5486481082635067}, {"determining": "( ( ( Min( Max( FirstVNF_Mem,DDR ) ,( ARS - MDR ) ) - FirstVNF_Mem ) + ( PN - MDR ) ) + Min( ( ( ( ( AMS + AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( ARS / PN ) ,Const ) + BR ) ) - ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( MUM - ( ( MLU + RRSe ) + DS ) ) + Min( ( MLU - MLU ) ,( ( Min( ( MLU / MLU ) ,( CS - MLU ) ) * RMSe ) / MUR ) ) ) / ( Max( ( ( RRSe / MUM ) / ( ( CS - RCSe ) / ( ( CS + RMSe ) / MUM ) ) ),( ( RRSe * ( RCSe / MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + ( ( ( MUC / MUC ) * ( ( DS + MUR ) - MUC ) ) + RRSe ) )", "obj1": 0.5364963503649635, "obj2": 0.3976573585470722}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - Max( FirstVNF_CPU,( ACS - MDR ) ) ) ) + Min( ( MDR * MDR ) ,( ( ( ( AMS + BR ) * ( Min( AMS ,AMS ) / ( Min( DDR ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,( Min( FirstVNF_CPU ,DDR ) + RRS ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( MUM + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( MUR + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.75, "obj2": 0.13770281704296286}, {"determining": "( ( ( Min( ( ( RRS / ( ( DDR - CRS ) + Min( AMS ,FirstVNF_CPU ) ) ) / Min( ( FirstVNF_RAM_Server - RRS ) ,Max( FirstVNF_RAM,AMS ) ) ) ,ACS ) * PN ) + ( PN - MDR ) ) + ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) * Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "( ( Max( ( Max( MUR,( ( MLU - MLU ) + Min( ( DS - RRSe ) ,Min( RCSe ,MLU ) ) ) ) + MLU ),( MUR + DS ) ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - MUR ) + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.5205133136819537}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / ( RMSe / RMSe ) ) ) ) + RRSe ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * Max( MLU,DS ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( ( FirstVNF_RAM_Server / ACS ) / Max( MDR,( ( FirstVNF_RAM_Server * Max( FirstVNF_Mem_Server,CRS ) ) + ( FirstVNF_Mem_Server - ( PN + ACS ) ) ) ) )", "choosing": "( Max( ( ( MLU * DS ) / ( RCSe + MLU ) ),( ( ( RCSe - ( ( RRSe - RRSe ) + ( ( MLU + RMSe ) + DS ) ) ) * RCSe ) + Min( RRSe ,MUM ) ) ) - ( MUR + Max( ( Max( Min( ( CS * ( RRSe * RCSe ) ) ,RRSe ),DS ) + DS ),DS ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5710635115891226}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Max( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),RRS ),FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( ( CS * ( DS + MUR ) ) - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUC ) ) - ( ( MLU + Max( MUM,RCSe ) ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) )", "obj1": 0.7974452554744526, "obj2": 0.10154769929806895}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + AMS ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem / ACS ) ) * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( MRS ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( MLU + RRSe ) - MLU ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,( ( MUM - RRSe ) + ( ( RMSe * MUC ) + ( MUC / RCSe ) ) ) ) + MLU ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.7627737226277372, "obj2": 0.1284425930340699}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + ( RRSe - Max( ( MUM + MUM ),RCSe ) ) ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.5437956204379562, "obj2": 0.3776772568298506}, {"determining": "( ( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * Max( MLU,DS ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.7317518248175182, "obj2": 0.15471391758294492}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) / ( MLU / Min( MLU ,RCSe ) ) ),MUM ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.30648124269411775}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * PN ) + ( Min( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MLU - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + MLU ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5069595696921577}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem_Server ,( Max( AMS,ARS ) + BR ) ) + ( DDR - MDR ) ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / MDR ) ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS * DS ) * ( DS / Min( MUC ,MUR ) ) ) * Min( DS ,Min( Min( DS ,( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),MUR ) ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( RMSe * Min( CS ,( DS / CS ) ) ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.7645985401459854, "obj2": 0.12094156345758214}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5748175182481752, "obj2": 0.3251274678476373}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / AMS ) ) + Max( FirstVNF_RAM_Server,( MRS / Max( ( RRS / ACS ),( BR - MRS ) ) ) ) )", "choosing": "( MUC + ( ( ( DS - Min( DS ,RMSe ) ) + RRSe ) + Min( ( ( CS * MLU ) / CS ) ,( MUC + DS ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.23814329831410366}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Max( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),RRS ),FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( ( CS * ( DS + MUR ) ) - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUC ) ) - ( ( MLU + Max( MUM,RCSe ) ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) )", "obj1": 0.9598540145985401, "obj2": 0.010548873741517945}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( ( ( ARS * MDR ) * BR ) * MDR ) - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + RRSe ) + ( ( RMSe + DS ) - MUM ) )", "obj1": 0.7390510948905109, "obj2": 0.14835240130245136}, {"determining": "( Min( FirstVNF_RAM_Server ,Min( Const ,MDR ) ) + Min( ( ( ( ARS * ( AMS * PN ) ) * BR ) * MDR ) ,( ( Min( ( Max( Min( FirstVNF_CPU ,CRS ),FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,BR ) ) ) ,( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe * ( Min( CS ,DS ) / ( RCSe + MLU ) ) ) ) / ( RCSe - CS ) ) / ( RRSe * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / DS ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( CS ,MUC ) ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8558394160583942, "obj2": 0.06190143025553726}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( MUM + Min( ( MLU * MUM ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( DS + RMSe ) )", "obj1": 0.40145985401459855, "obj2": 0.6209613042832636}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,( ARS / ( FirstVNF_RAM_Server / RRS ) ) ) ),Min( ( Max( ( ( ( Const - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ( MDR * FirstVNF_Mem ) - ARS ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( Max( PN,( MRS + MDR ) ) * Min( FirstVNF_RAM ,AMS ) ) + ( BR * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ,( PN * Min( ( Max( ACS,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( Max( MUC,Max( ( Max( ( MLU - MUC ),Min( RRSe ,( RRSe - MLU ) ) ) - RRSe ),Min( ( DS * CS ) ,MUR ) ) ) + ( ( RMSe - Min( MUC ,RMSe ) ) + MUM ) ) * ( Min( CS ,Min( RCSe ,( Min( ( MUM / RRSe ) ,( MUM + CS ) ) - MUC ) ) ) * MLU ) )", "obj1": 0.49635036496350365, "obj2": 0.4565164855704457}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) ) + Min( ( FirstVNF_RAM * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( Min( ( ARS - PN ) ,Const ) + BR ) ) * ( DDR - Max( ( ( FirstVNF_RAM * CRS ) - ( ARS + MRS ) ),( FirstVNF_RAM + ( AMS - CRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - Max( ( MUM + Min( ( RCSe * MUM ) ,DS ) ),MUR ) ) + ( RRSe - MUC ) ) ) + Max( MUC,( MUR / CS ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4593356699357887}, {"determining": "( ( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,( MUM / ( RRSe + RCSe ) ) ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.7226277372262774, "obj2": 0.16631240122668292}, {"determining": "( ( ( RRS - AMS ) + ( FirstVNF_RAM_Server * PN ) ) + Min( ( ( FirstVNF_CPU / ( ( BR - Min( FirstVNF_Mem_Server ,DDR ) ) + FirstVNF_RAM ) ) / ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) * ( FirstVNF_CPU + BR ) ) * FirstVNF_Mem_Server ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( RRSe - ( ( DS / MUM ) / ( ( ( ( MUM + RRSe ) - ( DS - CS ) ) / ( MLU / Min( MLU ,RCSe ) ) ) * ( Max( DS,MUC ) - MUC ) ) ) ) / ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) + MUC )", "obj1": 0.948905109489051, "obj2": 0.015555491827697191}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( MDR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( ( FirstVNF_RAM_Server - AMS ) - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) + MUM ) )", "obj1": 0.7901459854014599, "obj2": 0.10331229894045971}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( Const / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( RMSe / RMSe ) / ( RRSe * ( Min( CS ,MUM ) / ( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8795620437956204, "obj2": 0.05516711736756934}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( RRS - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + MLU ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / RCSe ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.07628536524375887}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / AMS ) ) + Max( FirstVNF_RAM_Server,( MRS / Max( ( RRS / ACS ),( BR - MRS ) ) ) ) )", "choosing": "( MUC + ( ( ( DS - Min( DS ,RMSe ) ) + RRSe ) + Min( ( ( CS * MLU ) / CS ) ,( MUC + DS ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.23814329831410366}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( PN - MDR ) ) + ( ( ( ( Max( Min( FirstVNF_CPU ,( PN / FirstVNF_RAM ) ),Max( Max( FirstVNF_Mem,PN ),ARS ) ) * MDR ) * MDR ) * MDR ) - ( ( ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - AMS ) ) ) * ( Min( ( FirstVNF_CPU_Server / DDR ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( MUM + Min( CS ,MUM ) ) ,( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) + MLU ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( MUC - MUR ) ) ) ) + ( ( Min( Min( MLU ,CS ) ,( ( RRSe - DS ) / RRSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ) / MUC ) )", "obj1": 0.4762773722627737, "obj2": 0.4929434040971607}, {"determining": "Max( ( RRS + ( MDR / FirstVNF_RAM_Server ) ),Min( ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - ( CRS - ACS ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( AMS * ARS ) ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * PN ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( MLU * DS ) + ( ( ( MUC * ( ( MUM - DS ) * ( Max( ( RRSe / MLU ),( MUR / MUC ) ) / ( ( MUC * CS ) + MLU ) ) ) ) + MLU ) - MLU ) )", "obj1": 0.39963503649635035, "obj2": 0.6314882633665565}, {"determining": "( ( ( PN - MDR ) + ( FirstVNF_RAM_Server * ( ( DDR / ( FirstVNF_Mem + MDR ) ) * MDR ) ) ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( RCSe + ( ( CS * ( ( MUR + RCSe ) + ( Max( DS,( RMSe / CS ) ) + Min( MUM ,Min( RRSe ,MUM ) ) ) ) ) + DS ) ) + MUC )", "obj1": 0.6441605839416058, "obj2": 0.24135252208660948}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( ( MRS * ( FirstVNF_RAM_Server + Const ) ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM + RMSe ) - MLU ) + ( ( ( DS - ( CS + ( MUC + RMSe ) ) ) - RRSe ) - DS ) )", "obj1": 0.6678832116788321, "obj2": 0.22378552834295887}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) * ( ( FirstVNF_CPU * DDR ) / BR ) ) ) / ( Max( FirstVNF_RAM_Server,BR ) + Const ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Max( RCSe,( ( Max( MUM,MUR ) - RCSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( Max( DS,RCSe ) ,( MLU + Max( ( MUC - MUC ),( RRSe - ( MUC - RMSe ) ) ) ) ) ) ) - ( ( ( ( ( MUC / MUC ) - MUR ) + ( RCSe / ( RCSe / MUC ) ) ) * MUC ) + Max( MLU,DS ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Max( ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ),Min( ( FirstVNF_Mem / MDR ) ,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / ( Const + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( DDR / PN ) ) ) ) ,( AMS - BR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( ( CS / RCSe ) * MLU ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ) ) ) + MUC )", "obj1": 0.7408759124087592, "obj2": 0.14757571290552152}, {"determining": "( Max( ( BR + BR ),( ( FirstVNF_RAM_Server * PN ) + ( Min( ( ( Max( FirstVNF_CPU,CRS ) * MDR ) + ( PN - MDR ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,Min( DDR ,AMS ) ) ) - DDR ) ) ) / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "( Max( ( CS * ( MUC / CS ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( MUC ,CS ) ) ) - Min( ( DS + RRSe ) ,RCSe ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) / ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),MUM ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5912408759124088, "obj2": 0.30588134535481387}, {"determining": "( ( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * Max( MLU,DS ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.7299270072992701, "obj2": 0.15609036148741265}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( BR - Max( FirstVNF_Mem,PN ) ) ,( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( CRS + BR ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ) )", "choosing": "( Max( ( ( RCSe + MLU ) / Min( MLU ,DS ) ),( ( RRSe * ( ( MUC / RCSe ) - ( ( RRSe - RRSe ) + ( ( MUM + DS ) + DS ) ) ) ) + Min( CS ,MUC ) ) ) - ( CS + ( ( MUM + RMSe ) - MUR ) ) )", "obj1": 0.948905109489051, "obj2": 0.015555491827697191}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( ( MRS * ( FirstVNF_RAM_Server + Const ) ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU_Server ) ) / MDR ) ) )", "choosing": "( ( ( RCSe - RRSe ) - MLU ) + ( ( ( DS - ( CS + ( ( MLU / Min( MLU ,RCSe ) ) + RMSe ) ) ) - RRSe ) - DS ) )", "obj1": 0.8813868613138686, "obj2": 0.05161976971967605}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( Max( ARS,FirstVNF_Mem_Server ) * RRS ) ) ,( ( MDR * Max( ( MRS * FirstVNF_RAM_Server ),Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( ( Max( ( Min( MUC ,MUR ) / ( MLU / Min( MLU ,RCSe ) ) ),MUM ) - MUM ),( MUM / ( Min( RMSe ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.2926849163356486}, {"determining": "( Min( ( FirstVNF_Mem_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) + MDR ) ) / ( ( MDR / FirstVNF_Mem ) * ACS ) )", "choosing": "( Min( Min( MUM ,( MLU / ( MUM - MUR ) ) ) ,( CS + MUC ) ) + Max( ( MUM * DS ),Max( ( DS * Min( ( DS / RMSe ) ,CS ) ),( RCSe * MLU ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5271088147134937}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,Const ) + ( ( ARS * MDR ) * BR ) ) ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUM ) + Min( Max( MLU,MLU ) ,( ( RRSe * Max( RCSe,MUC ) ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MLU - MUM ),MUC ) )", "obj1": 0.8722627737226277, "obj2": 0.056878243968812456}, {"determining": "( ( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_RAM_Server ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,( MUM / ( RRSe + RCSe ) ) ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + MUR ) ) - DS ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139926}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Min( ( MUC * MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + Max( MUM,MUM ) ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) + ( Max( MUM,MUR ) + RRSe ) ) )", "obj1": 0.5437956204379562, "obj2": 0.3776772568298506}], "42": [{"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( MUC,( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( ( Max( DDR,BR ) * FirstVNF_RAM ) + ( RRS - AMS ) ) + Min( ( ( Const / Min( ARS ,PN ) ) / ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) * ( FirstVNF_CPU + BR ) ) * FirstVNF_Mem_Server ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RMSe / RRSe ) * ( ( DS / MUM ) / ( ( ( RCSe - RRSe ) - MUC ) * ( ( Min( MUM ,RRSe ) - ( RRSe - CS ) ) / ( MLU / Min( MLU ,RCSe ) ) ) ) ) ) / ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + MDR ) * PN ) + ( RRS - AMS ) ) + Min( ( ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) * ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) * ( FirstVNF_CPU + BR ) ) * FirstVNF_Mem_Server ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( RRSe * ( ( DS / MUM ) / ( ( Min( MUM ,( DS * MLU ) ) / ( MLU / Min( MLU ,RCSe ) ) ) * ( ( RCSe - RRSe ) - MUC ) ) ) ) / ( ( RCSe - CS ) / ( MUR - ( RCSe * CS ) ) ) ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) + ( ( MDR / ARS ) + ACS ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + ( Max( DS,RCSe ) - ( MLU + MUR ) ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( ( MRS * ( FirstVNF_RAM_Server + Const ) ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM + RMSe ) - MLU ) + ( ( ( DS - ( CS + ( MUC + RMSe ) ) ) - RRSe ) - DS ) )", "obj1": 0.6678832116788321, "obj2": 0.22378552834295887}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6879562043795621, "obj2": 0.2004773818595551}, {"determining": "( ( ( MDR * MRS ) / Min( AMS ,AMS ) ) + ( ( ( CRS / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - ( DS * ( RCSe + DS ) ) ) ) ) ) + ( ( ( CS + DS ) - CS ) + MUM ) )", "obj1": 0.7043795620437956, "obj2": 0.18156668778236282}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( ARS * MDR ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Min( ( MUC * MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + Max( MUM,RRSe ) ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) + ( Max( MUM,MUR ) + RRSe ) ) )", "obj1": 0.5602189781021898, "obj2": 0.34750945858811483}, {"determining": "Max( Max( ( ( CRS * FirstVNF_Mem_Server ) + MDR ),( ARS - Max( AMS,( CRS * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ),( RRS - ACS ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + Min( MUR ,MUM ) ) ) ) - Max( DS,RRSe ) ) / MUM ) - ( DS * MUC ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( Max( MUM,Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.653695531397515}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( Min( MUM ,MUR ) ,RMSe ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( ( DS - DS ) ,MUM ) - ( ( CS * MUC ) + ( ( ( ( MUR / ( MUR + RCSe ) ) - Min( DS ,DS ) ) - ( MLU + ( CS - ( MUC - MUR ) ) ) ) - RRSe ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4150512120717833}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( AMS - Max( FirstVNF_RAM_Server,ACS ) ) ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( ( ( CS + RMSe ) - RMSe ) ,RCSe ) * MLU ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6605839416058394, "obj2": 0.2268763980845105}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( AMS ,( PN / Const ) ) ),( ACS - RRS ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( MUC + RMSe ) ) ) - Max( DS,RRSe ) ) ) - ( DS * MUC ) ) * Min( DS ,Min( Min( DS ,Min( ( RRSe - MUC ) ,MLU ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC * RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.588309417422208}, {"determining": "( ( ( ( MDR / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,AMS ) + ( ( AMS - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( ARS + FirstVNF_CPU_Server ) ) * ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU_Server * MRS ) ) + BR ) ) * Min( ( MDR / ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,MDR ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( ( MUR / RMSe ) / MLU ) / RCSe ) ,( MLU / ( Min( MUM ,Max( ( MUC * MLU ),MUM ) ) - MLU ) ) ) / ( CS / MUM ) ) + ( ( ( ( MUM / DS ) - ( CS * DS ) ) + ( Min( RMSe ,MLU ) / MLU ) ) + RRSe ) )", "obj1": 0.8175182481751825, "obj2": 0.09648172904443382}, {"determining": "( ( Min( Const ,MDR ) + ( ( ( ( ( FirstVNF_CPU_Server - AMS ) - Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) ) + BR ) * ( Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( FirstVNF_CPU_Server / DDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( ( ( RRS + PN ) * ( FirstVNF_Mem * AMS ) ),DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( MUM ,Min( DS ,DS ) ) - ( ( MUM * Min( ( Max( RRSe,RRSe ) + MUC ) ,RMSe ) ) / MUC ) ) )", "obj1": 0.948905109489051, "obj2": 0.014855196020737564}, {"determining": "( ( ( ( FirstVNF_RAM_Server - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( ( ( ( Min( AMS ,AMS ) + ( Max( ARS,MDR ) * ( MDR / DDR ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( MUC - MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - Min( CS ,RRSe ) ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + AMS ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem / ACS ) ) * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( MRS ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( MLU + RRSe ) - MLU ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,( ( MUM - RRSe ) + ( ( RMSe * MUC ) + ( MUC / RCSe ) ) ) ) + MLU ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.7627737226277372, "obj2": 0.1284425930340699}, {"determining": "( Max( ( FirstVNF_Mem_Server * ARS ),( MDR - ( MRS - FirstVNF_Mem_Server ) ) ) + Min( ( MRS - ACS ) ,RRS ) )", "choosing": "( ( ( RRSe * MUR ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) + ( Max( MUM,DS ) + RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5723157656738803}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( FirstVNF_Mem - Max( ARS,FirstVNF_RAM_Server ) ) - RRS ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( RRS + ( MDR - Min( FirstVNF_CPU ,PN ) ) ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,MDR ) ) * Min( ( DDR * Const ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( DS * RCSe ) ) + ( MLU - Max( DS,( ( CS / RCSe ) * Max( MUC,Max( Min( RMSe ,Max( RCSe,MLU ) ),MLU ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6113317375789231}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - ( PN - MDR ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / RMSe ) - RRSe ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.614963503649635, "obj2": 0.2756357301179748}, {"determining": "Max( Max( ( Max( AMS,MDR ) + MDR ),Min( FirstVNF_Mem ,( ( AMS + ( ( FirstVNF_Mem + ARS ) + DDR ) ) / ( ACS - FirstVNF_RAM ) ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( AMS ,FirstVNF_RAM ) ) * Min( MRS ,FirstVNF_Mem ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_CPU * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( CS + ( ( MLU - ( DS - RRSe ) ) + RMSe ) ) ) - DS ) - DS ) * ( Min( ( Max( Max( ( ( RCSe * MUM ) + Min( RMSe ,CS ) ),Max( Max( MUR,MLU ),Max( RMSe,MUM ) ) ),( Min( RRSe ,MUM ) / RMSe ) ) / DS ) ,Min( RCSe ,Min( RMSe ,( RRSe + RRSe ) ) ) ) * MLU ) )", "obj1": 0.4781021897810219, "obj2": 0.4818268819150492}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( Const + Max( ( ARS / RRS ),BR ) ) - ACS ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + ( ( ARS - FirstVNF_CPU_Server ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + ( ( ( ( RRSe * CS ) - ( MLU + Max( ( RRSe * CS ),MUR ) ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) * ( MUR * MUC ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4575221502541406}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( ( ( CRS + PN ) * ( RRS / ( FirstVNF_Mem / PN ) ) ) - Max( PN,MDR ) ) + Min( ( ( RRS - Const ) + FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_Mem,DDR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( DS ,Max( CS,( MUM / MUC ) ) ) / MUC ) * ( Min( ( ( DS - MLU ) - MUR ) ,Max( DS,( MLU - DS ) ) ) - MUR ) ) + ( Min( ( MLU * MLU ) ,( MLU * CS ) ) - ( ( RRSe - ( RRSe - ( Min( ( MUC * RCSe ) ,MLU ) / Max( CS,MLU ) ) ) ) + ( CS * MUR ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.40670677624697654}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * ( BR - MDR ) ) * MDR ) ,( ( ( Min( ( BR * Const ) ,MRS ) * ( FirstVNF_Mem_Server / BR ) ) * ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / ( Min( CRS ,MRS ) / DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( MLU * MUR ) * MLU ) - MUM ) + MUC ) / Max( RCSe,( ( Max( MUC,MUM ) + RCSe ) - RMSe ) ) ) + Max( MUC,Min( MUR ,( Max( MUR,Max( ( MUM - CS ),( Max( RCSe,RRSe ) - RCSe ) ) ) + Min( ( RCSe * DS ) ,Max( ( MUR + RRSe ),MUR ) ) ) ) ) )", "obj1": 0.8540145985401459, "obj2": 0.06294215099828858}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( ( ( Max( MDR,ACS ) - FirstVNF_Mem ) + Max( ( MDR / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) ) / ( RRS - BR ) ) ,( FirstVNF_CPU_Server - MDR ) ) + Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "Max( RMSe,( MUR - ( ( MUR + ( Max( MLU,DS ) / MUR ) ) - ( ( ( CS / DS ) - RCSe ) - CS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08607328129706897}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ),MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( Min( RMSe ,RCSe ) + RCSe ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6332116788321168, "obj2": 0.25545437945827304}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Max( MUC,( Min( CS ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.5547445255474452, "obj2": 0.35744332416050334}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * MDR ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU * DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MLU + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + ( MUC + RMSe ) ) ) - RRSe ),DS ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5406796488338033}, {"determining": "( ( ( ( AMS - Max( PN,BR ) ) * ( AMS + FirstVNF_CPU ) ) / ( Min( Max( ( ACS * Const ),( ( DDR / Max( RRS,CRS ) ) / FirstVNF_RAM ) ) ,CRS ) - MDR ) ) + Max( MRS,MRS ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( ( CS / MUR ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,Min( Min( Min( ( RCSe * Max( Max( DS,MUM ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) ,( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4333090978110347}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( PN + FirstVNF_Mem ) - FirstVNF_Mem_Server ) ,RRS ) - DDR ) ,( Max( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS / ( Min( FirstVNF_Mem ,BR ) - AMS ) ) ),Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Min( MUR ,( MUC - RMSe ) ) + ( Min( ( MUC - RMSe ) ,MUC ) - RCSe ) ) + ( Min( MUC ,MUM ) - MUR ) )", "obj1": 0.75, "obj2": 0.13770281704296286}, {"determining": "( Min( MRS ,BR ) + Min( ( ( ( ARS * Min( RRS ,PN ) ) * BR ) * MDR ) ,( ( ( ( MDR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( Const ,FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( ( MRS - AMS ) - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( MUM ,( MLU * CS ) ) + RRSe ) - DS ) + ( ( Max( MUM,( ( Min( RCSe ,MLU ) - Min( ( RCSe * CS ) ,Max( MUC,MUR ) ) ) / CS ) ) + DS ) + MUM ) )", "obj1": 0.8284671532846716, "obj2": 0.08168953092695194}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( PN - MDR ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - Max( DS,RRSe ) ) / MUM ) - ( DS * MUC ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( ( ( ( ARS * MDR ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR * MUR ) + Max( ( DS / MUC ),DS ) )", "obj1": 0.3978102189781022, "obj2": 0.6320716753181514}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - ( MDR / ( CRS / ( ( FirstVNF_CPU + Max( FirstVNF_Mem,( DDR + FirstVNF_RAM_Server ) ) ) * MDR ) ) ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( DS + CS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),( ( DS / Min( RMSe ,CS ) ) - MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6000862591395966}, {"determining": "( Min( FirstVNF_RAM_Server ,Min( Const ,MDR ) ) + Min( ( ( ( ARS * ( AMS * PN ) ) * BR ) * MDR ) ,( ( Min( ( Max( Min( FirstVNF_CPU ,CRS ),FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,BR ) ) ) ,( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe * ( Min( CS ,DS ) / ( RCSe + MLU ) ) ) ) / ( RCSe - CS ) ) / ( RRSe * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / DS ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( CS ,MUC ) ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8558394160583942, "obj2": 0.06190143025553726}, {"determining": "( ( ( FirstVNF_CPU * PN ) + ( CRS / MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) * ( FirstVNF_Mem_Server / MRS ) ) / MDR ) ,( ( ( CRS * ( RRS * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) / MDR ) ) )", "choosing": "( ( MUM + MUR ) + ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( DS + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) )", "obj1": 0.8704379562043796, "obj2": 0.0576933700217704}, {"determining": "( Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - MDR ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( ( ( BR + Min( MDR ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),FirstVNF_CPU_Server ) + BR ) ) / Min( Max( PN,DDR ) ,( Const / FirstVNF_CPU_Server ) ) ) ) ,( BR - MDR ) ) + ( RRS * PN ) )", "choosing": "( ( ( ( MLU - Min( Max( Max( MUC,MLU ),MUM ) ,MUM ) ) / MLU ) / ( RRSe * Min( Min( CS ,MUM ) ,( ( ( ( MLU + RRSe ) - MUR ) / ( MLU / Max( MLU,CS ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.781021897810219, "obj2": 0.1106576398610802}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Max( Const,PN ) - Min( FirstVNF_CPU ,BR ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MLU + Max( Min( ( ( ( RMSe / RMSe ) + MLU ) * Max( MLU,DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) ) / Max( ( MLU / ( MUR + ( RCSe - RRSe ) ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MUM ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem_Server ,( Max( AMS,ARS ) + BR ) ) + ( DDR - MDR ) ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / MDR ) ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS * DS ) * ( DS / Min( MUC ,MUR ) ) ) * Min( DS ,Min( Min( DS ,( ( ( ( MUM + RRSe ) - MUR ) / ( MLU / Min( MLU ,RCSe ) ) ) * Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),MUR ) ) ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( RMSe * Min( CS ,( DS / CS ) ) ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.7645985401459854, "obj2": 0.12094156345758214}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ) ) ) + MUC )", "obj1": 0.7408759124087592, "obj2": 0.14757571290552152}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( CS * ( DS + MUR ) ) - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUC ) ) - ( ( MLU + Max( MUM,RCSe ) ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) )", "obj1": 0.6259124087591241, "obj2": 0.26104477573021756}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) + ( PN - MDR ) ) + Min( ( ( ( PN * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - ( FirstVNF_RAM_Server * AMS ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + MDR ) ),RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + DS ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / Max( ( MLU / MUM ),( MUR * MUM ) ) ) - ( DS * DS ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) ) )", "obj1": 0.8941605839416058, "obj2": 0.04362003190892363}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( RRS - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + MLU ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / RCSe ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.07628536524375887}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,( ARS / ( FirstVNF_RAM_Server / RRS ) ) ) ),Min( ( Max( ( ( ( Const - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ( MDR * FirstVNF_Mem ) - ARS ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( Max( PN,( MRS + MDR ) ) * Min( FirstVNF_RAM ,AMS ) ) + ( BR * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ,( PN * Min( ( Max( ACS,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( Max( MUC,Max( ( Max( ( MLU - MUC ),Min( RRSe ,( RRSe - MLU ) ) ) - RRSe ),Min( ( DS * CS ) ,MUR ) ) ) + ( ( RMSe - Min( MUC ,RMSe ) ) + MUM ) ) * ( Min( CS ,Min( RCSe ,( Min( ( MUM / RRSe ) ,( MUM + CS ) ) - MUC ) ) ) * MLU ) )", "obj1": 0.49635036496350365, "obj2": 0.4565164855704457}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( DS + DS ) * ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( RRSe + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.801094890510949, "obj2": 0.0973567826825861}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / ( RMSe / RMSe ) ) ) ) + RRSe ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Max( MUC,( Min( CS ,MUM ) / ( CS + Max( ( RRSe + RCSe ),Min( ( Min( CS ,RMSe ) - DS ) ,MUC ) ) ) ) ) + RCSe )", "obj1": 0.5529197080291971, "obj2": 0.3647763590780158}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( ( Min( FirstVNF_CPU ,ARS ) * ARS ) + BR ) ),( ( DDR + FirstVNF_RAM_Server ) - MDR ) ) + Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * Min( RMSe ,CS ) ) ) ) - ( ( ( ( ( MLU - ( RCSe + RMSe ) ) / ( ( MUM + CS ) - MUR ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.595989557812868}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.5291970802919708, "obj2": 0.4014816000736723}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / BR ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) ) )", "choosing": "( ( Max( ( RRSe - ( Max( RRSe,( MUM - MUR ) ) + ( Max( MUM,MUR ) + RRSe ) ) ),MUR ) + RRSe ) + ( ( ( ( Min( ( ( CS + RMSe ) - RMSe ) ,RCSe ) * MLU ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9653284671532847, "obj2": 0.008744389076850814}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + ( Max( MUM,MUR ) + RRSe ) ) ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - MUC ) ,MUR ) ) ) )", "obj1": 0.9379562043795621, "obj2": 0.019800250176657704}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( MDR ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( MDR * BR ) + MDR ) ) * ( Min( ( ARS / PN ) ,Const ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( Min( CS ,MLU ) + ( RRSe * ( RCSe - ( Max( MUM,RCSe ) + ( Max( DS,CS ) + DS ) ) ) ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.5711678832116789, "obj2": 0.33369374205879676}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( PN - MDR ) ) + ( ( ( ( Max( Min( FirstVNF_CPU ,( PN / FirstVNF_RAM ) ),Max( Max( FirstVNF_Mem,PN ),ARS ) ) * MDR ) * MDR ) * MDR ) - ( ( ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - AMS ) ) ) * ( Min( ( FirstVNF_CPU_Server / DDR ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( MUM + Min( CS ,MUM ) ) ,( ( MUC / RCSe ) / ( RRSe + Max( ( RRSe / MUM ),RRSe ) ) ) ) + MLU ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( MUC - MUR ) ) ) ) + ( ( Min( Min( MLU ,CS ) ,( ( RRSe - DS ) / RRSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ) / MUC ) )", "obj1": 0.4762773722627737, "obj2": 0.4929434040971607}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( Max( ( RRSe - ( ( CS - CS ) + MUR ) ),( Min( CS ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.531021897810219, "obj2": 0.39494127739036994}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6897810218978102, "obj2": 0.1994207167647627}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Max( ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ),Min( ( FirstVNF_Mem / MDR ) ,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / ( Const + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( DDR / PN ) ) ) ) ,( AMS - BR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( ( CS / RCSe ) * MLU ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( RCSe / ( RRSe + RCSe ) ) - RRSe ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5985401459854015, "obj2": 0.29192779550321923}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + ( ( ( DS + DS ) * ( ( ( ( ( MUM + MLU ) - ( RRSe - MUC ) ) - Min( MLU ,Min( CS ,RCSe ) ) ) - ( RCSe + MLU ) ) - MUC ) ) / ( RMSe - RCSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - Max( FirstVNF_CPU,( ACS - MDR ) ) ) ) + Min( ( MDR * MDR ) ,( ( ( ( AMS + BR ) * ( Min( AMS ,AMS ) / ( Min( DDR ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,( Min( FirstVNF_CPU ,DDR ) + RRS ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( MUM + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) - ( ( ( RRSe - ( MLU + MUR ) ) - Max( ( ( Min( DS ,MLU ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.4835766423357664, "obj2": 0.47105703872708543}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Max( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),RRS ),FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( ( CS * ( DS + MUR ) ) - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUC ) ) - ( ( MLU + Max( MUM,RCSe ) ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0015621967585616866}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ( PN + MRS ) / FirstVNF_CPU_Server ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) / ( MLU / Min( MLU ,RCSe ) ) ),MUM ) - MUM ),( MUM / ( Max( MUM,Max( MUR,( Max( RRSe,MUR ) - MUM ) ) ) / ( RCSe + MLU ) ) ) )", "obj1": 0.6094890510948905, "obj2": 0.28325036406713894}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( MUR + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.75, "obj2": 0.13770281704296286}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ACS ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( ( Max( CRS,FirstVNF_RAM_Server ) - PN ) + ( Min( RRS ,FirstVNF_Mem_Server ) / DDR ) ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - DDR ) ,( ( ( ( BR + Max( MDR,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS * ( PN + FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( MLU + ( ( CS / ( MUR * MLU ) ) / Min( ( MUM - MLU ) ,Max( MUM,( RMSe * MUR ) ) ) ) ),Max( MUR,( ( RMSe + Max( Max( RRSe,DS ),Max( MUC,RMSe ) ) ) - MUM ) ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7116788321167883, "obj2": 0.17591911961781034}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) + PN ) + ( PN - MDR ) ) + Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) * MDR ) ,( ACS + ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,Max( Min( ( PN * MDR ) ,FirstVNF_Mem_Server ),Min( MDR ,DDR ) ) ) ) ) ) )", "choosing": "( Max( CS,RMSe ) + Min( MUR ,Max( Max( MLU,MUR ),( MUM + ( ( MUC + Min( Max( DS,MLU ) ,MUM ) ) - MUC ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5486481082635067}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( ( ( CS + RMSe ) - RMSe ) ,RCSe ) * MLU ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9379562043795621, "obj2": 0.019800250176657704}, {"determining": "( ( ( PN - MDR ) + ( FirstVNF_RAM_Server * ( ( DDR / ( FirstVNF_Mem + MDR ) ) * MDR ) ) ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( RCSe + ( ( CS * ( ( MUR + RCSe ) + ( Max( DS,( RMSe / CS ) ) + Min( MUM ,Min( RRSe ,MUM ) ) ) ) ) + DS ) ) + MUC )", "obj1": 0.6441605839416058, "obj2": 0.24135252208660948}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( ( ( Min( ( ( RRS / ( ( DDR - CRS ) + Min( AMS ,FirstVNF_CPU ) ) ) / Min( ( FirstVNF_RAM_Server - RRS ) ,Max( FirstVNF_RAM,AMS ) ) ) ,ACS ) * PN ) + ( PN - MDR ) ) + ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) * Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "( ( Max( ( Max( MUR,( ( MLU - MLU ) + Min( ( DS - RRSe ) ,Min( RCSe ,MLU ) ) ) ) + MLU ),( MUR + DS ) ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - MUR ) + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.5205133136819537}, {"determining": "( ( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * Max( MLU,DS ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.7244525547445255, "obj2": 0.15989228537624567}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) + ( ( MDR / ARS ) + PN ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RCSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + ( Max( DS,RCSe ) - ( MLU + MUR ) ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5650788190071298}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Max( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),RRS ),FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( ( CS * ( DS + MUR ) ) - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUC ) ) - ( ( MLU + Max( MUM,RCSe ) ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) )", "obj1": 0.7974452554744526, "obj2": 0.10154769929806895}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( MLU * DS ) / ( RCSe + MLU ) ),( ( RCSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MLU + RMSe ) + DS ) ) ) ) + Min( RRSe ,CS ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + ( DS * DS ) ) ) - RRSe ),DS ) ) )", "obj1": 0.5711678832116789, "obj2": 0.33369374205879676}, {"determining": "( ( ( ( ACS / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Max( ( AMS * MRS ),( FirstVNF_Mem / FirstVNF_Mem ) ) * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + Max( CS,RRSe ) ) ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - ( RRSe + MUM ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( MUC * CS ) ) ) )", "obj1": 0.5437956204379562, "obj2": 0.3776772568298506}, {"determining": "( ( Max( FirstVNF_CPU_Server,CRS ) / ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * Max( MLU,DS ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / MUM ) ),( ( RRSe * Max( RCSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) + Max( ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ),RCSe ) )", "obj1": 0.7317518248175182, "obj2": 0.15471391758294492}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( ( RCSe - RRSe ) + RCSe ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6259124087591241, "obj2": 0.26104477573021756}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) / ( MLU / Min( MLU ,RCSe ) ) ),MUM ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.30648124269411775}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( CRS ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) ) * Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Min( RMSe ,( Max( RCSe,MUC ) + DS ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RCSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.45985401459854014, "obj2": 0.5166265979430197}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / AMS ) ) + Max( FirstVNF_RAM_Server,( MRS / Max( ( RRS / ACS ),( BR - MRS ) ) ) ) )", "choosing": "( MUC + ( ( ( DS - Min( DS ,RMSe ) ) + RRSe ) + Min( ( ( CS * MLU ) / CS ) ,( MUC + DS ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.23814329831410366}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( ( ( ARS * MDR ) * BR ) * MDR ) - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + RRSe ) + ( ( RMSe + DS ) - MUM ) )", "obj1": 0.7390510948905109, "obj2": 0.14835240130245136}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6897810218978102, "obj2": 0.1994207167647627}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( ( RCSe + MLU ) - ( DS * MUC ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.4835766423357664, "obj2": 0.47105703872708543}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( FirstVNF_Mem_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / Const ) ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( ( MUM * DS ),Max( ( DS * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.906934306569343, "obj2": 0.03793127186116649}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU_Server - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + FirstVNF_Mem_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / Max( Min( RMSe ,RCSe ),( MUC / MUM ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6386861313868614, "obj2": 0.24840989129272792}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.40145985401459855, "obj2": 0.6209613042832636}, {"determining": "( ( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,( MUM / ( RRSe + RCSe ) ) ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.7226277372262774, "obj2": 0.16631240122668292}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) / ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),MUM ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5912408759124088, "obj2": 0.30588134535481387}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + PN ) ) ,Min( ( FirstVNF_Mem * ( RRS / AMS ) ) ,( ( CRS + MRS ) / FirstVNF_CPU_Server ) ) ) - DDR ) * ACS ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( FirstVNF_CPU_Server ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( Max( ( RCSe - MUM ),MUC ) - ( ( RRSe + RRSe ) + ( ( RMSe + MUM ) + DS ) ) ) ) + ( MUC + DS ) ) ) - Max( CS,RCSe ) )", "obj1": 0.7208029197080292, "obj2": 0.17216715355801357}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( Min( ( ( Max( MRS,ARS ) * MDR ) * BR ) ,MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / ( CRS * ACS ) ) ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + RMSe ) / MUR ) ,( CS + ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - Max( DS,RRSe ) ) ) - ( DS * ( MUC * MUC ) ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( MUC + RCSe ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.23814329831410366}, {"determining": "Max( ( RRS + ( MDR / FirstVNF_RAM_Server ) ),Min( ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - ( CRS - ACS ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( AMS * ARS ) ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * PN ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( MLU * DS ) + ( ( ( MUC * ( ( MUM - DS ) * ( Max( ( RRSe / MLU ),( MUR / MUC ) ) / ( ( MUC * CS ) + MLU ) ) ) ) + MLU ) - MLU ) )", "obj1": 0.39963503649635035, "obj2": 0.6314882633665565}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) * ( ( FirstVNF_CPU * DDR ) / BR ) ) ) / ( Max( FirstVNF_RAM_Server,BR ) + Const ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Max( RCSe,( ( Max( MUM,MUR ) - RCSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( Max( DS,RCSe ) ,( MLU + Max( ( MUC - MUC ),( RRSe - ( MUC - RMSe ) ) ) ) ) ) ) - ( ( ( ( ( MUC / MUC ) - MUR ) + ( RCSe / ( RCSe / MUC ) ) ) * MUC ) + Max( MLU,DS ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( ( ( ( CRS + FirstVNF_CPU ) * ( ( FirstVNF_CPU + AMS ) + ( FirstVNF_RAM * ACS ) ) ) * Min( ( AMS / MDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( Min( ( ( ( MLU * MUR ) / ( MUR / RMSe ) ) + ( Min( CS ,CS ) - DS ) ) ,DS ) / ( MUM / CS ) ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( Max( RRSe,( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.9598540145985401, "obj2": 0.010548873741517945}, {"determining": "( Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - ( DDR - FirstVNF_RAM_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) - Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) + ( Min( ( ( FirstVNF_RAM + Max( CRS,ARS ) ) - ( Const - MDR ) ) ,AMS ) + ( PN - MDR ) ) )", "choosing": "( ( ( ( RMSe + DS ) - Min( MUC ,MUR ) ) + MUM ) + ( ( ( ( Max( Min( CS ,( RCSe - DS ) ),RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( CS + DS ) - CS ) - MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) )", "obj1": 0.7135036496350365, "obj2": 0.17243835117434192}, {"determining": "( ( ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) * ( ( ARS * MDR ) * AMS ) ) / ( AMS * RRS ) ) + ( Min( Min( Min( MRS ,FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR * RRSe ) + Max( CS,RRSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5069595696921577}], "43": [{"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( MUC,( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - ACS ) ) + ( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( Min( RMSe ,MUR ) * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / MUM ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - RRSe ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( DDR,BR ) * FirstVNF_RAM ) + ( RRS - AMS ) ) + Min( ( ( Const / Min( ARS ,PN ) ) / ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) * ( FirstVNF_CPU + BR ) ) * FirstVNF_Mem_Server ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RMSe / RRSe ) * ( ( DS / MUM ) / ( ( ( RCSe - RRSe ) - MUC ) * ( ( Min( MUM ,RRSe ) - ( RRSe - CS ) ) / ( MLU / Min( MLU ,RCSe ) ) ) ) ) ) / ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) + ( ( MDR / ARS ) + ACS ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + ( Max( DS,RCSe ) - ( MLU + MUR ) ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( ( FirstVNF_CPU * PN ) + ( CRS / MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) * ( FirstVNF_Mem_Server / MRS ) ) / MDR ) ,( ( ( CRS * ( RRS * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) / MDR ) ) )", "choosing": "( ( MUM + MUR ) + ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( DS + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) )", "obj1": 0.8704379562043796, "obj2": 0.0576933700217704}, {"determining": "( ( ( MDR * MRS ) / Min( AMS ,AMS ) ) + ( ( ( CRS / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - ( DS * ( RCSe + DS ) ) ) ) ) ) + ( ( ( CS + DS ) - CS ) + MUM ) )", "obj1": 0.7043795620437956, "obj2": 0.18156668778236282}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6806569343065694, "obj2": 0.20716684554259748}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( MLU * DS ) / ( RCSe + MLU ) ),( ( RCSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MLU + RMSe ) + DS ) ) ) ) + Min( RRSe ,CS ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + ( DS * DS ) ) ) - RRSe ),DS ) ) )", "obj1": 0.5693430656934306, "obj2": 0.3331909707040754}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( FirstVNF_Mem * AMS ) )", "choosing": "( ( MUC / ( ( ( ( ( DS - Max( DS,MUR ) ) + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS / RMSe ) )", "obj1": 0.6678832116788321, "obj2": 0.2235087860950485}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,( ARS / ( PN + Min( Const ,( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ) ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ( MDR * FirstVNF_Mem ) - ARS ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( BR * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( Min( ( RCSe * MUM ) ,DS ) - DS ) * ( Min( CS ,Min( RCSe ,( MUC - Min( ( DS * RMSe ) ,( MUM + RRSe ) ) ) ) ) * MLU ) )", "obj1": 0.39416058394160586, "obj2": 0.6468993802843437}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( ARS * MDR ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Min( ( MUC * MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + Max( MUM,RRSe ) ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) + ( Max( MUM,MUR ) + RRSe ) ) )", "obj1": 0.5602189781021898, "obj2": 0.34750945858811483}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Max( ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ),Min( ( FirstVNF_Mem / MDR ) ,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / ( Const + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( DDR / PN ) ) ) ) ,( AMS - BR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( ( CS / RCSe ) * MLU ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( Min( MUM ,MUR ) ,RMSe ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( ( DS - DS ) ,MUM ) - ( ( CS * MUC ) + ( ( ( ( MUR / ( MUR + RCSe ) ) - Min( DS ,DS ) ) - ( MLU + ( CS - ( MUC - MUR ) ) ) ) - RRSe ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4150512120717833}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( AMS - Max( FirstVNF_RAM_Server,ACS ) ) ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( ( ( CS + RMSe ) - RMSe ) ,RCSe ) * MLU ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6605839416058394, "obj2": 0.2268763980845105}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - Max( FirstVNF_CPU,( ACS - MDR ) ) ) ) + Min( ( MDR * MDR ) ,( ( ( ( AMS + BR ) * ( Min( AMS ,AMS ) / ( Min( DDR ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,( Min( FirstVNF_CPU ,DDR ) + RRS ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( MUM + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( Max( ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),ARS ) + BR ) ),( ( MRS - FirstVNF_Mem_Server ) - MDR ) ) + Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * RRSe ) ) ) - ( ( ( ( CS + DS ) - CS ) + MUM ) + ( CS * MUC ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.5817390245261118}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * MDR ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU * DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MLU + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + ( MUC + RMSe ) ) ) - RRSe ),DS ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5406796488338033}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( DS + DS ) * ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( RRSe + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.801094890510949, "obj2": 0.0973567826825861}, {"determining": "( ( ( ( FirstVNF_RAM_Server - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( ( ( ( Min( AMS ,AMS ) + ( Max( ARS,MDR ) * ( MDR / DDR ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( MUC - MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - Min( CS ,RRSe ) ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( FirstVNF_Mem - Max( ARS,FirstVNF_RAM_Server ) ) - RRS ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( RRS + ( MDR - Min( FirstVNF_CPU ,PN ) ) ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,MDR ) ) * Min( ( DDR * Const ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( DS * RCSe ) ) + ( MLU - Max( DS,( ( CS / RCSe ) * Max( MUC,Max( Min( RMSe ,Max( RCSe,MLU ) ),MLU ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6113317375789231}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "( ( ( ( ACS / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Max( ( AMS * MRS ),( FirstVNF_Mem / FirstVNF_Mem ) ) * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + Max( CS,RRSe ) ) ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - ( RRSe + MUM ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( MUC * CS ) ) ) )", "obj1": 0.5437956204379562, "obj2": 0.3776772568298506}, {"determining": "( Max( ( FirstVNF_Mem_Server * ARS ),( MDR - ( MRS - FirstVNF_Mem_Server ) ) ) + Min( ( MRS - ACS ) ,RRS ) )", "choosing": "( ( ( RRSe * MUR ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) + ( Max( MUM,DS ) + RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5723157656738803}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( ( ( CRS + PN ) * ( RRS / ( FirstVNF_Mem / PN ) ) ) - Max( PN,MDR ) ) + Min( ( ( RRS - Const ) + FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_Mem,DDR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( DS ,Max( CS,( MUM / MUC ) ) ) / MUC ) * ( Min( ( ( DS - MLU ) - MUR ) ,Max( DS,( MLU - DS ) ) ) - MUR ) ) + ( Min( ( MLU * MLU ) ,( MLU * CS ) ) - ( ( RRSe - ( RRSe - ( Min( ( MUC * RCSe ) ,MLU ) / Max( CS,MLU ) ) ) ) + ( CS * MUR ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.40670677624697654}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ),MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( Min( RMSe ,RCSe ) + RCSe ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6332116788321168, "obj2": 0.25545437945827304}, {"determining": "Max( Max( ( Max( AMS,MDR ) + MDR ),Min( FirstVNF_Mem ,( ( AMS + ( ( FirstVNF_Mem + ARS ) + DDR ) ) / ( ACS - FirstVNF_RAM ) ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( AMS ,FirstVNF_RAM ) ) * Min( MRS ,FirstVNF_Mem ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_CPU * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( CS + ( ( MLU - ( DS - RRSe ) ) + RMSe ) ) ) - DS ) - DS ) * ( Min( ( Max( Max( ( ( RCSe * MUM ) + Min( RMSe ,CS ) ),Max( Max( MUR,MLU ),Max( RMSe,MUM ) ) ),( Min( RRSe ,MUM ) / RMSe ) ) / DS ) ,Min( RCSe ,Min( RMSe ,( RRSe + RRSe ) ) ) ) * MLU ) )", "obj1": 0.4781021897810219, "obj2": 0.4818268819150492}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU_Server - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + FirstVNF_Mem_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / Max( Min( RMSe ,RCSe ),( MUC / MUM ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6386861313868614, "obj2": 0.24840989129272792}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - MUC ) ,MUR ) ) ) )", "obj1": 0.948905109489051, "obj2": 0.014855196020737562}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,( ARS / ( FirstVNF_RAM_Server / RRS ) ) ) ),Min( ( Max( ( ( ( Const - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ( MDR * FirstVNF_Mem ) - ARS ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( Max( PN,( MRS + MDR ) ) * Min( FirstVNF_RAM ,AMS ) ) + ( BR * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ,( PN * Min( ( Max( ACS,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( Max( MUC,Max( ( Max( ( MLU - MUC ),Min( RRSe ,( RRSe - MLU ) ) ) - RRSe ),Min( ( DS * CS ) ,MUR ) ) ) + ( ( RMSe - Min( MUC ,RMSe ) ) + MUM ) ) * ( Min( CS ,Min( RCSe ,( Min( ( MUM / RRSe ) ,( MUM + CS ) ) - MUC ) ) ) * MLU ) )", "obj1": 0.49635036496350365, "obj2": 0.4565164855704457}, {"determining": "( Max( AMS,Max( ( MDR / ( DDR / ( PN * ( MDR + Max( ACS,MDR ) ) ) ) ),FirstVNF_Mem_Server ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUC,( ( RMSe / RMSe ) / ( RMSe / RMSe ) ) ) ) + RRSe ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( Min( RCSe ,RCSe ) + RCSe ) ) ),MUM ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.7208029197080292, "obj2": 0.16293292262735556}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,ARS ) + FirstVNF_RAM_Server ) ) / MDR ) * Max( ARS,( PN + Min( Const ,( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ) ) ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server / ( ( PN / FirstVNF_CPU ) * ( ARS - FirstVNF_Mem_Server ) ) ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - Max( MUM,RRSe ) ) + ( MUC * MUC ) ) / ( ( DS - Max( ( DS + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) + MUM ) )", "obj1": 0.4708029197080292, "obj2": 0.49829722313659125}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( Const - CRS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * Min( ( FirstVNF_Mem + ( BR + CRS ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( Min( RMSe ,( CS + MUC ) ) + Max( ( RMSe + MUR ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.8485401459854015, "obj2": 0.0663214128112809}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( ( Min( FirstVNF_CPU ,ARS ) * ARS ) + BR ) ),( ( DDR + FirstVNF_RAM_Server ) - MDR ) ) + Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * Min( RMSe ,CS ) ) ) ) - ( ( ( ( ( MLU - ( RCSe + RMSe ) ) / ( ( MUM + CS ) - MUR ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.595989557812868}, {"determining": "( ( ( ( AMS - Max( PN,BR ) ) * ( AMS + FirstVNF_CPU ) ) / ( Min( Max( ( ACS * Const ),( ( DDR / Max( RRS,CRS ) ) / FirstVNF_RAM ) ) ,CRS ) - MDR ) ) + Max( MRS,MRS ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( ( CS / MUR ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,Min( Min( Min( ( RCSe * Max( Max( DS,MUM ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) ,( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4333090978110347}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - ( MDR / ( CRS / ( ( FirstVNF_CPU + Max( FirstVNF_Mem,( DDR + FirstVNF_RAM_Server ) ) ) * MDR ) ) ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( DS + CS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),( ( DS / Min( RMSe ,CS ) ) - MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6000862591395966}, {"determining": "( Min( FirstVNF_RAM_Server ,Min( Const ,MDR ) ) + Min( ( ( ( ARS * ( AMS * PN ) ) * BR ) * MDR ) ,( ( Min( ( Max( Min( FirstVNF_CPU ,CRS ),FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,BR ) ) ) ,( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe * ( Min( CS ,DS ) / ( RCSe + MLU ) ) ) ) / ( RCSe - CS ) ) / ( RRSe * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / DS ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( CS ,MUC ) ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8558394160583942, "obj2": 0.06190143025553726}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Max( Const,PN ) - Min( FirstVNF_CPU ,BR ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MLU + Max( Min( ( ( ( RMSe / RMSe ) + MLU ) * Max( MLU,DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) ) / Max( ( MLU / ( MUR + ( RCSe - RRSe ) ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MUM ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - ( PN - MDR ) ) ) * ( AMS + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / RMSe ) - RRSe ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.614963503649635, "obj2": 0.2756357301179748}, {"determining": "( ( ( PN - MDR ) + ( FirstVNF_RAM_Server * ( ( DDR / ( FirstVNF_Mem + MDR ) ) * MDR ) ) ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( RCSe + ( ( CS * ( ( MUR + RCSe ) + ( Max( DS,( RMSe / CS ) ) + Min( MUM ,Min( RRSe ,MUM ) ) ) ) ) + DS ) ) + MUC )", "obj1": 0.6441605839416058, "obj2": 0.24135252208660948}, {"determining": "( Min( MRS ,BR ) + Min( ( ( ( ARS * Min( RRS ,PN ) ) * BR ) * MDR ) ,( ( ( ( MDR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( Const ,FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( ( MRS - AMS ) - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( MUM ,( MLU * CS ) ) + RRSe ) - DS ) + ( ( Max( MUM,( ( Min( RCSe ,MLU ) - Min( ( RCSe * CS ) ,Max( MUC,MUR ) ) ) / CS ) ) + DS ) + MUM ) )", "obj1": 0.8175182481751825, "obj2": 0.09016754167617924}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ( PN + MRS ) / FirstVNF_CPU_Server ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) / ( MLU / Min( MLU ,RCSe ) ) ),MUM ) - MUM ),( MUM / ( Max( MUM,Max( MUR,( Max( RRSe,MUR ) - MUM ) ) ) / ( RCSe + MLU ) ) ) )", "obj1": 0.6094890510948905, "obj2": 0.28325036406713894}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Max( MUC,( Min( CS ,MUM ) / ( CS + Max( ( RRSe + RCSe ),Min( ( Min( CS ,RMSe ) - DS ) ,MUC ) ) ) ) ) + RCSe )", "obj1": 0.5529197080291971, "obj2": 0.3647763590780158}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( ( ( ( ( ARS * MDR ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR * MUR ) + Max( ( DS / MUC ),DS ) )", "obj1": 0.3978102189781022, "obj2": 0.6320716753181514}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( Const + Max( ( ARS / RRS ),BR ) ) - ACS ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + ( ( ARS - FirstVNF_CPU_Server ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + ( ( ( ( RRSe * CS ) - ( MLU + Max( ( RRSe * CS ),MUR ) ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) * ( MUR * MUC ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4575221502541406}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( PN - MDR ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,RCSe ) + CS ) / MUR ) ,( CS + ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - Max( DS,RRSe ) ) / MUM ) - ( DS * MUC ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / ( RMSe / RMSe ) ) ) ) + RRSe ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( MUR + ( MUC - MLU ) ) ) ),MUM ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) * ( ( ARS * MDR ) * AMS ) ) / ( AMS * RRS ) ) + ( Min( Min( Min( MRS ,FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR * RRSe ) + Max( CS,RRSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5069595696921577}, {"determining": "( Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - MDR ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( ( ( BR + Min( MDR ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),FirstVNF_CPU_Server ) + BR ) ) / Min( Max( PN,DDR ) ,( Const / FirstVNF_CPU_Server ) ) ) ) ,( BR - MDR ) ) + ( RRS * PN ) )", "choosing": "( ( ( ( MLU - Min( Max( Max( MUC,MLU ),MUM ) ,MUM ) ) / MLU ) / ( RRSe * Min( Min( CS ,MUM ) ,( ( ( ( MLU + RRSe ) - MUR ) / ( MLU / Max( MLU,CS ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.781021897810219, "obj2": 0.1106576398610802}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6897810218978102, "obj2": 0.1994207167647627}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + ( ( ( DS + DS ) * ( ( ( ( ( MUM + MLU ) - ( RRSe - MUC ) ) - Min( MLU ,Min( CS ,RCSe ) ) ) - ( RCSe + MLU ) ) - MUC ) ) / ( RMSe - RCSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( Max( AMS,Max( CRS,FirstVNF_CPU_Server ) ) ,( MDR + ( ( FirstVNF_RAM + CRS ) - MRS ) ) ) )", "choosing": "( RCSe + Max( MUC,( Min( Min( ( Max( RRSe,RMSe ) + ( ( RMSe * MUM ) + ( DS - MLU ) ) ) ,( RRSe - ( ( CS / CS ) - RCSe ) ) ) ,MUM ) / RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.46780391853973996}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Max( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),RRS ),FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( BR - MDR ) + ( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( ( CS * ( DS + MUR ) ) - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUC ) ) - ( ( MLU + Max( MUM,RCSe ) ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0015621967585616866}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( RRS - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,RCSe ) + MLU ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / RCSe ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.07628536524375887}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ACS ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( ( Max( CRS,FirstVNF_RAM_Server ) - PN ) + ( Min( RRS ,FirstVNF_Mem_Server ) / DDR ) ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - DDR ) ,( ( ( ( BR + Max( MDR,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS * ( PN + FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( MLU + ( ( CS / ( MUR * MLU ) ) / Min( ( MUM - MLU ) ,Max( MUM,( RMSe * MUR ) ) ) ) ),Max( MUR,( ( RMSe + Max( Max( RRSe,DS ),Max( MUC,RMSe ) ) ) - MUM ) ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7116788321167883, "obj2": 0.17591911961781034}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( RRSe * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / MUM ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - RRSe ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.4653284671532847, "obj2": 0.5021336656459897}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) + ( ( MDR / ARS ) + PN ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RCSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + ( Max( DS,RCSe ) - ( MLU + MUR ) ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5650788190071298}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6879562043795621, "obj2": 0.2004773818595551}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( MRS * FirstVNF_RAM_Server ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,DS ) - ( ( ( ( MUM / Max( Min( RMSe ,RCSe ),( MUC / MUM ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6204379562043796, "obj2": 0.2723548166052739}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( Const + Max( ( ARS / RRS ),BR ) ) - ACS ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + ( ( ARS - FirstVNF_CPU_Server ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + ( ( ( ( RRSe * CS ) - ( MLU + Max( ( RRSe * CS ),MUR ) ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) * ( MUR * MUC ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5271088147134937}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( CRS ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) ) * Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Min( RMSe ,( Max( RCSe,MUC ) + DS ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RCSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.45985401459854014, "obj2": 0.5166265979430197}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem_Server ,( Max( AMS,ARS ) + BR ) ) + ( DDR - MDR ) ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / MDR ) ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.7645985401459854, "obj2": 0.12094156345758214}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( FirstVNF_CPU_Server * ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) * Max( PN,DDR ) ) * MRS ) ) * FirstVNF_Mem_Server ) / ( Const + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( MDR - BR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( MUM ,MUR ) - MUC ) ,( ( RMSe * ( MUM * Min( RMSe ,MUR ) ) ) / Max( RCSe,RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.6240875912408759, "obj2": 0.26793701796358876}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / AMS ) ) + Max( FirstVNF_RAM_Server,( MRS / Max( ( RRS / ACS ),( BR - MRS ) ) ) ) )", "choosing": "( MUC + ( ( ( DS - Min( DS ,RMSe ) ) + RRSe ) + Min( ( ( CS * MLU ) / CS ) ,( MUC + DS ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.23814329831410366}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( ( ( ARS * MDR ) * BR ) * MDR ) - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUR,( ( RMSe / RMSe ) / RMSe ) ) ) + RRSe ) + ( ( RMSe + DS ) - MUM ) )", "obj1": 0.7390510948905109, "obj2": 0.14835240130245136}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_CPU * ACS ) ) ) * ( MDR + BR ) ) ) ,( DDR - RRS ) ) )", "choosing": "( ( ( MUM / ( ( ( ( Min( CS ,MUR ) + ( MLU - DS ) ) + DS ) / RRSe ) * ( MUR / RRSe ) ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - ( Min( DS ,DS ) / ( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6897810218978102, "obj2": 0.1994207167647627}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( Max( CRS,BR ) + BR ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + ( Max( MUM,MUR ) + RRSe ) ) ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - MUC ) ,Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) ) ) ) )", "obj1": 0.9124087591240876, "obj2": 0.03373865281015087}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) * MDR ) * BR ) * ( Const * MDR ) ) ,( ( ( Max( BR,( ( FirstVNF_Mem_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Max( MDR,( MDR - FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( Min( MUR ,Min( RCSe ,( MUC - ( ( MUM + RRSe ) / ( DS + RMSe ) ) ) ) ) * MLU ) * ( Max( MUC,( RMSe - MLU ) ) - MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6209613042832636}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + ( Max( MUM,CS ) + RRSe ) ) ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - MUC ) ,MUR ) ) ) )", "obj1": 0.968978102189781, "obj2": 0.006427600370070062}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / FirstVNF_CPU_Server ),RRS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.30533937773292386}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + ( Max( MUM,MUR ) + RRSe ) ) ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - MUC ) ,MUR ) ) ) )", "obj1": 0.9379562043795621, "obj2": 0.019800250176657704}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( DS + DS ) * ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( RRSe + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.7956204379562044, "obj2": 0.10278720984572257}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( Min( ( ( Max( MRS,ARS ) * MDR ) * BR ) ,MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / ( CRS * ACS ) ) ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + RMSe ) / MUR ) ,( CS + ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - Max( DS,RRSe ) ) ) - ( DS * ( MUC * MUC ) ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( MUC + RCSe ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.23814329831410366}, {"determining": "Max( ( RRS + ( MDR / FirstVNF_RAM_Server ) ),Min( ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - ( CRS - ACS ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( AMS * ARS ) ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * PN ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( MLU * DS ) + ( ( ( MUC * ( ( MUM - DS ) * ( Max( ( RRSe / MLU ),( MUR / MUC ) ) / ( ( MUC * CS ) + MLU ) ) ) ) + MLU ) - MLU ) )", "obj1": 0.39963503649635035, "obj2": 0.6314882633665565}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( ( RCSe - RRSe ) + RCSe ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6259124087591241, "obj2": 0.26104477573021756}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,( MUM / ( RRSe + RCSe ) ) ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.4835766423357664, "obj2": 0.47105703872708543}, {"determining": "( ( ( ( CRS + FirstVNF_CPU ) * ( ( FirstVNF_CPU + AMS ) + ( FirstVNF_RAM * ACS ) ) ) * Min( ( AMS / MDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( Min( ( ( ( MLU * MUR ) / ( MUR / RMSe ) ) + ( Min( CS ,CS ) - DS ) ) ,DS ) / ( MUM / CS ) ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( Max( RRSe,( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.9598540145985401, "obj2": 0.010548873741517945}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( FirstVNF_Mem + ( ( FirstVNF_Mem - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( ( MUR + Max( ( ( Max( MUM,RRSe ) - ( MLU + MUR ) ) - RRSe ),DS ) ) - Max( ( Min( MLU ,DS ) / ( RCSe + RCSe ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.531021897810219, "obj2": 0.39494127739036994}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.5291970802919708, "obj2": 0.4014816000736723}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( ( ( Max( MDR,ACS ) - FirstVNF_Mem ) + Max( ( MDR / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) ) / ( RRS - BR ) ) ,( FirstVNF_CPU_Server - MDR ) ) + Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "Max( RMSe,( MUR - ( ( MUR + ( Max( MLU,DS ) / MUR ) ) - ( ( ( CS / DS ) - RCSe ) - CS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08607328129706897}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ) ) ) + MUC )", "obj1": 0.7408759124087592, "obj2": 0.14757571290552152}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,( Min( ( ( CS + RMSe ) - RMSe ) ,RCSe ) * MLU ) ) ,MUM ) - ( ( ( RRSe - ( MLU + ( Max( MUM,MUR ) + RRSe ) ) ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - MUC ) ,MUR ) ) ) )", "obj1": 0.9653284671532847, "obj2": 0.007804044274537787}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) + PN ) + ( PN - MDR ) ) + Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) * MDR ) ,( ACS + ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,Max( Min( ( PN * MDR ) ,FirstVNF_Mem_Server ),Min( MDR ,DDR ) ) ) ) ) ) )", "choosing": "( Max( CS,RMSe ) + Min( MUR ,Max( Max( MLU,MUR ),( MUM + ( ( MUC + Min( Max( DS,MLU ) ,MUM ) ) - MUC ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5486481082635067}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) * ( ( FirstVNF_CPU * DDR ) / BR ) ) ) / ( Max( FirstVNF_RAM_Server,BR ) + Const ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Max( RCSe,( ( Max( MUM,MUR ) - RCSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( Max( DS,RCSe ) ,( MLU + Max( ( MUC - MUC ),( RRSe - ( MUC - RMSe ) ) ) ) ) ) ) - ( ( ( ( ( MUC / MUC ) - MUR ) + ( RCSe / ( RCSe / MUC ) ) ) * MUC ) + Max( MLU,DS ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,( ARS / ( FirstVNF_RAM_Server / RRS ) ) ) ),Min( ( Max( ( ( ( Const - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ( MDR * FirstVNF_Mem ) - ARS ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( Max( PN,( MRS + MDR ) ) * Min( FirstVNF_RAM ,AMS ) ) + ( BR * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ,( PN * Min( ( Max( ACS,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( Max( MUC,Max( ( Max( ( MLU - MUC ),Min( RRSe ,( RRSe - MLU ) ) ) - RRSe ),Min( ( DS * CS ) ,MUR ) ) ) + ( ( RMSe - Min( MUC ,RMSe ) ) + MUM ) ) * ( Min( CS ,Min( RCSe ,( Min( ( MUM / RRSe ) ,( MUM + CS ) ) - MUC ) ) ) * MLU ) )", "obj1": 0.4762773722627737, "obj2": 0.4896566208686631}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) + ( PN - MDR ) ) + Min( ( ( ( PN * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - ( FirstVNF_RAM_Server * AMS ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + MDR ) ),RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + DS ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / Max( ( MLU / MUM ),( MUR * MUM ) ) ) - ( DS * DS ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) ) )", "obj1": 0.8941605839416058, "obj2": 0.04362003190892363}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),Min( ( DS * RMSe ) ,( MUM + RRSe ) ) ) )", "obj1": 0.6058394160583942, "obj2": 0.28774801895681945}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / MLU ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.35744332416050334}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( MUR + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.75, "obj2": 0.13770281704296286}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( Min( AMS ,Max( DDR,AMS ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( AMS - Max( FirstVNF_RAM_Server,ACS ) ) ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( RRSe - ( MLU + ( Max( MUM,MUR ) + RRSe ) ) ),MUR ) + RRSe ) + ( ( ( ( Min( ( ( CS + RMSe ) - RMSe ) ,( Max( MUM,MUR ) + RRSe ) ) * MLU ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.9434306569343066, "obj2": 0.018566751328489728}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( Max( MUM,MUR ) + RRSe ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.4562043795620438, "obj2": 0.5247929067965547}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( MDR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,Const ) ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( ( FirstVNF_RAM_Server - AMS ) - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM + RRSe ) + ( DS + ( MUC + DS ) ) ) + MUC )", "obj1": 0.8248175182481752, "obj2": 0.08384315642092569}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + AMS ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem / ACS ) ) * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( MRS ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( MLU + RRSe ) - MLU ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,( ( MUM - RRSe ) + ( ( RMSe * MUC ) + ( MUC / RCSe ) ) ) ) + MLU ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.7591240875912408, "obj2": 0.13078054048258442}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( FirstVNF_Mem_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / Const ) ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( ( MUM * DS ),Max( ( DS * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.906934306569343, "obj2": 0.03793127186116649}], "44": [{"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( MUC,( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / PN ),RRS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( DS - MLU ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - ACS ) ) + ( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( Min( RMSe ,MUR ) * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / MUM ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - RRSe ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) + ( ( MDR / ARS ) + ACS ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + ( Max( DS,RCSe ) - ( MLU + MUR ) ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( ( FirstVNF_CPU * PN ) + ( CRS / MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) * ( FirstVNF_Mem_Server / MRS ) ) / MDR ) ,( ( ( CRS * ( RRS * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) / MDR ) ) )", "choosing": "( ( MUM + MUR ) + ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( DS + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) )", "obj1": 0.8704379562043796, "obj2": 0.0576933700217704}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Max( ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ),Min( ( FirstVNF_Mem / MDR ) ,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / ( Const + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( DDR / PN ) ) ) ) ,( AMS - BR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( ( CS / RCSe ) * MLU ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( Min( MUM ,MUR ) ,RMSe ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( ( DS - DS ) ,MUM ) - ( ( CS * MUC ) + ( ( ( ( MUR / ( MUR + RCSe ) ) - Min( DS ,DS ) ) - ( MLU + ( CS - ( MUC - MUR ) ) ) ) - RRSe ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4150512120717833}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ACS ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( ( Max( CRS,FirstVNF_RAM_Server ) - PN ) + ( Min( RRS ,FirstVNF_Mem_Server ) / DDR ) ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - DDR ) ,( ( ( ( BR + Max( MDR,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS * ( PN + FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( MLU + ( ( CS / ( MUR * MLU ) ) / Min( ( MUM - MLU ) ,Max( MUM,( RMSe * MUR ) ) ) ) ),Max( MUR,( ( RMSe + Max( Max( RRSe,DS ),Max( MUC,RMSe ) ) ) - MUM ) ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7116788321167883, "obj2": 0.17591911961781034}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( ARS * MDR ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Min( ( MUC * MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + Max( MUM,RRSe ) ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) + ( Max( MUM,MUR ) + RRSe ) ) )", "obj1": 0.5602189781021898, "obj2": 0.34750945858811483}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( AMS - Max( FirstVNF_RAM_Server,ACS ) ) ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( ( ( CS + RMSe ) - RMSe ) ,RCSe ) * MLU ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6605839416058394, "obj2": 0.2268763980845105}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - Max( FirstVNF_CPU,( ACS - MDR ) ) ) ) + Min( ( MDR * MDR ) ,( ( ( ( AMS + BR ) * ( Min( AMS ,AMS ) / ( Min( DDR ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,( Min( FirstVNF_CPU ,DDR ) + RRS ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( MUM + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * MDR ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU * DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MLU + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + ( MUC + RMSe ) ) ) - RRSe ),DS ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5406796488338033}, {"determining": "( ( ( ( FirstVNF_RAM_Server - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( ( ( ( Min( AMS ,AMS ) + ( Max( ARS,MDR ) * ( MDR / DDR ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( MUC - MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - Min( CS ,RRSe ) ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( Min( FirstVNF_RAM_Server ,Min( Const ,MDR ) ) + Min( ( ( ( ARS * ( AMS * PN ) ) * BR ) * MDR ) ,( ( Min( ( Max( Min( FirstVNF_CPU ,CRS ),FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,BR ) ) ) ,( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe * ( Min( CS ,DS ) / ( RCSe + MLU ) ) ) ) / ( RCSe - CS ) ) / ( RRSe * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / DS ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( CS ,MUC ) ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8558394160583942, "obj2": 0.06190143025553726}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( FirstVNF_Mem - Max( ARS,FirstVNF_RAM_Server ) ) - RRS ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( RRS + ( MDR - Min( FirstVNF_CPU ,PN ) ) ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,MDR ) ) * Min( ( DDR * Const ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( DS * RCSe ) ) + ( MLU - Max( DS,( ( CS / RCSe ) * Max( MUC,Max( Min( RMSe ,Max( RCSe,MLU ) ),MLU ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6113317375789231}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( Max( ARS,ACS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6715328467153284, "obj2": 0.21902626267891295}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "( ( ( ( ACS / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Max( ( AMS * MRS ),( FirstVNF_Mem / FirstVNF_Mem ) ) * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + Max( CS,RRSe ) ) ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - ( RRSe + MUM ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( MUC * CS ) ) ) )", "obj1": 0.5437956204379562, "obj2": 0.3776772568298506}, {"determining": "( ( ( ( CRS + PN ) * ( RRS / ( FirstVNF_Mem / PN ) ) ) - Max( PN,MDR ) ) + Min( ( ( RRS - Const ) + FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_Mem,DDR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( DS ,Max( CS,( MUM / MUC ) ) ) / MUC ) * ( Min( ( ( DS - MLU ) - MUR ) ,Max( DS,( MLU - DS ) ) ) - MUR ) ) + ( Min( ( MLU * MLU ) ,( MLU * CS ) ) - ( ( RRSe - ( RRSe - ( Min( ( MUC * RCSe ) ,MLU ) / Max( CS,MLU ) ) ) ) + ( CS * MUR ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.40670677624697654}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / FirstVNF_CPU_Server ),RRS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.30533937773292386}, {"determining": "( Max( ( FirstVNF_Mem_Server * ARS ),( MDR - ( MRS - FirstVNF_Mem_Server ) ) ) + Min( ( MRS - ACS ) ,RRS ) )", "choosing": "( ( ( RRSe * MUR ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) + ( Max( MUM,DS ) + RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5723157656738803}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) + Const ) ,Const ) + ( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) + BR ) )", "choosing": "( Max( MUM,MUC ) + ( RMSe * Min( MUR ,Min( DS ,CS ) ) ) )", "obj1": 0.7007299270072993, "obj2": 0.18884345107498543}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) * MDR ) * BR ) * ( Const * MDR ) ) ,( ( ( Max( BR,( ( FirstVNF_Mem_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Max( MDR,( MDR - FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( Min( MUR ,Min( RCSe ,( MUC - ( ( MUM + RRSe ) / ( DS + RMSe ) ) ) ) ) * MLU ) * ( Max( MUC,( RMSe - MLU ) ) - MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6209613042832636}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + AMS ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem / ACS ) ) * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( MRS ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( MLU + RRSe ) - MLU ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,( ( MUM - RRSe ) + ( ( RMSe * MUC ) + ( MUC / RCSe ) ) ) ) + MLU ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.7591240875912408, "obj2": 0.13078054048258442}, {"determining": "( Max( AMS,Max( ( MDR / ( DDR / ( PN * ( MDR + Max( ACS,MDR ) ) ) ) ),FirstVNF_Mem_Server ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUC,( ( RMSe / RMSe ) / ( RMSe / RMSe ) ) ) ) + RRSe ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( Min( RCSe ,RCSe ) + RCSe ) ) ),MUM ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.7208029197080292, "obj2": 0.16293292262735556}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,( ARS / ( FirstVNF_RAM_Server / RRS ) ) ) ),Min( ( Max( ( ( ( Const - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ( MDR * FirstVNF_Mem ) - ARS ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( Max( PN,( MRS + MDR ) ) * Min( FirstVNF_RAM ,AMS ) ) + ( BR * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ,( PN * Min( ( Max( ACS,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( Max( MUC,Max( ( Max( ( MLU - MUC ),Min( RRSe ,( RRSe - MLU ) ) ) - RRSe ),Min( ( DS * CS ) ,MUR ) ) ) + ( ( RMSe - Min( MUC ,RMSe ) ) + MUM ) ) * ( Min( CS ,Min( RCSe ,( Min( ( MUM / RRSe ) ,( MUM + CS ) ) - MUC ) ) ) * MLU ) )", "obj1": 0.49635036496350365, "obj2": 0.4565164855704457}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - ( ( MDR / ARS ) + ACS ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) * ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( RRSe + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.8083941605839416, "obj2": 0.09550661502260901}, {"determining": "( ( ( MDR * MRS ) / Min( AMS ,AMS ) ) + ( ( ( CRS / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - ( DS * ( RCSe + DS ) ) ) ) ) ) + ( ( ( CS + DS ) - CS ) + MUM ) )", "obj1": 0.7043795620437956, "obj2": 0.18156668778236282}, {"determining": "( ( ( Min( PN ,RRS ) * FirstVNF_RAM_Server ) * MDR ) + FirstVNF_RAM_Server )", "choosing": "( Max( MUC,( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / ( Min( ( ( RCSe * Min( RRSe ,CS ) ) / Max( ( MUM + RMSe ),( MUR * MLU ) ) ) ,MUR ) * MLU ) ) ) + RCSe )", "obj1": 0.39416058394160586, "obj2": 0.6468993802843437}, {"determining": "( ( ( Max( AMS,( ARS * FirstVNF_CPU ) ) - BR ) + ARS ) + Min( Min( BR ,DDR ) ,PN ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,DS ) + CS ) / MUR ) ,( CS + ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( RMSe / RMSe ) ) / MUM ) - ( MUM - Min( DS ,( RMSe - ( ( RMSe * DS ) + RCSe ) ) ) ) ) * Min( Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ,( MUM + Min( MUC ,( RCSe / DS ) ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.1529786967193805}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( ( Min( FirstVNF_CPU ,ARS ) * ARS ) + BR ) ),( ( DDR + FirstVNF_RAM_Server ) - MDR ) ) + Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * Min( RMSe ,CS ) ) ) ) - ( ( ( ( ( MLU - ( RCSe + RMSe ) ) / ( ( MUM + CS ) - MUR ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.595989557812868}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( RRSe * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / MUM ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - RRSe ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.5693430656934306, "obj2": 0.3331909707040754}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( ( ( ( AMS - Max( PN,BR ) ) * ( AMS + FirstVNF_CPU ) ) / ( Min( Max( ( ACS * Const ),( ( DDR / Max( RRS,CRS ) ) / FirstVNF_RAM ) ) ,CRS ) - MDR ) ) + Max( MRS,MRS ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( ( CS / MUR ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,Min( Min( Min( ( RCSe * Max( Max( DS,MUM ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) ,( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4333090978110347}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( MDR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,Const ) ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( ( FirstVNF_RAM_Server - AMS ) - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM + RRSe ) + ( DS + ( MUC + DS ) ) ) + MUC )", "obj1": 0.8248175182481752, "obj2": 0.08384315642092569}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - ( MDR / ( CRS / ( ( FirstVNF_CPU + Max( FirstVNF_Mem,( DDR + FirstVNF_RAM_Server ) ) ) * MDR ) ) ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( DS + CS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),( ( DS / Min( RMSe ,CS ) ) - MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6000862591395966}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( Max( CRS,BR ) + DDR ) + BR ) ) * FirstVNF_RAM ) + ( FirstVNF_RAM_Server * PN ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( ( FirstVNF_Mem_Server / RRS ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( MUM * MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + ( Max( MUM,MUR ) + RRSe ) ) ) - RRSe ) + Min( Max( RRSe,Min( MUR ,( RCSe / ( DS / CS ) ) ) ) ,MUM ) ) ) )", "obj1": 0.9361313868613139, "obj2": 0.021037658706304863}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ) ) ) + MUC )", "obj1": 0.7408759124087592, "obj2": 0.1475757129055215}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) + ( PN - MDR ) ) + Min( ( ( ( PN * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - ( FirstVNF_RAM_Server * AMS ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + MDR ) ),RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + DS ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / Max( ( MLU / MUM ),( MUR * MUM ) ) ) - ( DS * DS ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) ) )", "obj1": 0.8941605839416058, "obj2": 0.04362003190892363}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( Max( ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),ARS ) + BR ) ),( ( MRS - FirstVNF_Mem_Server ) - MDR ) ) + Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) )", "choosing": "( ( RCSe + ( ( CS * ( MUC + ( Max( DS,( RMSe / CS ) ) + Min( MLU ,Max( CS,CS ) ) ) ) ) + DS ) ) + MUC )", "obj1": 0.41605839416058393, "obj2": 0.5817390245261118}, {"determining": "( ( ( ( FirstVNF_RAM_Server / ( ACS / ACS ) ) * PN ) + ( MDR - PN ) ) + Min( ( ( ( AMS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server * AMS ) - ( MRS - Const ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + Min( MLU ,Min( MLU ,MLU ) ) ) + ( ( Max( MUM,MUR ) + RRSe ) + Max( Min( Max( MUC,MUR ) ,MUM ),( ( ( RRSe - ( ( DS / MLU ) / MUM ) ) - RRSe ) + ( ( MLU - ( ( DS + DS ) - ( MUM * MUC ) ) ) * MUC ) ) ) ) )", "obj1": 0.5291970802919708, "obj2": 0.3993429294285154}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) + PN ) + ( PN - MDR ) ) + Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) * MDR ) ,( ACS + ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,Max( Min( ( PN * MDR ) ,FirstVNF_Mem_Server ),Min( MDR ,DDR ) ) ) ) ) ) )", "choosing": "( Max( CS,RMSe ) + Min( MUR ,Max( Max( MLU,MUR ),( MUM + ( ( MUC + Min( Max( DS,MLU ) ,MUM ) ) - MUC ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5486481082635067}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( Const + Max( ( ARS / RRS ),BR ) ) - ACS ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + ( ( ARS - FirstVNF_CPU_Server ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + ( ( ( ( RRSe * CS ) - ( MLU + Max( ( RRSe * CS ),MUR ) ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) * ( MUR * MUC ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4575221502541406}, {"determining": "( ( ( PN - MDR ) + ( FirstVNF_RAM_Server * ( ( DDR / ( FirstVNF_Mem + MDR ) ) * MDR ) ) ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( RCSe + ( ( CS * ( ( MUR + RCSe ) + ( Max( DS,( RMSe / CS ) ) + Min( MUM ,Min( RRSe ,MUM ) ) ) ) ) + DS ) ) + MUC )", "obj1": 0.6441605839416058, "obj2": 0.24135252208660948}, {"determining": "Max( Max( ( Max( AMS,MDR ) + MDR ),Min( FirstVNF_Mem ,( ( AMS + ( ( FirstVNF_Mem + ARS ) + DDR ) ) / ( ACS - FirstVNF_RAM ) ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( AMS ,FirstVNF_RAM ) ) * Min( MRS ,FirstVNF_Mem ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_CPU * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( CS + ( ( MLU - ( DS - RRSe ) ) + RMSe ) ) ) - DS ) - DS ) * ( Min( ( Max( Max( ( ( RCSe * MUM ) + Min( RMSe ,CS ) ),Max( Max( MUR,MLU ),Max( RMSe,MUM ) ) ),( Min( RRSe ,MUM ) / RMSe ) ) / DS ) ,Min( RCSe ,Min( RMSe ,( RRSe + RRSe ) ) ) ) * MLU ) )", "obj1": 0.4781021897810219, "obj2": 0.4818268819150492}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( FirstVNF_Mem * AMS ) )", "choosing": "( ( MUC / ( ( ( ( ( DS - Max( DS,MUR ) ) + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS / RMSe ) )", "obj1": 0.6678832116788321, "obj2": 0.2235087860950485}, {"determining": "( ( Min( ( CRS * Const ) ,CRS ) + ( PN - MDR ) ) + Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( RRS / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem_Server ,( Max( AMS,ARS ) + BR ) ) + ( ( PN - MDR ) - MDR ) ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / MDR ) ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM - Max( Max( Min( CS ,( RMSe + MUM ) ),( MLU - ( ( RRSe / MUC ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + ( MUC + MUR ) )", "obj1": 0.7645985401459854, "obj2": 0.12094156345758214}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + ( ( ( DS + DS ) * ( ( ( ( ( MUM + MLU ) - ( RRSe - MUC ) ) - Min( MLU ,Min( CS ,RCSe ) ) ) - ( RCSe + MLU ) ) - MUC ) ) / ( RMSe - RCSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( MLU * DS ) / ( RCSe + MLU ) ),( ( RCSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MLU + RMSe ) + DS ) ) ) ) + Min( RRSe ,CS ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + ( DS * DS ) ) ) - RRSe ),DS ) ) )", "obj1": 0.5693430656934306, "obj2": 0.3331909707040754}, {"determining": "( ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( ( ( ( MLU - Min( Max( Max( MUC,MLU ),MUM ) ,MUM ) ) / MLU ) / ( RRSe * Min( Min( CS ,MUM ) ,( ( ( ( MLU + RRSe ) - MUR ) / ( MLU / Max( MLU,CS ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.7244525547445255, "obj2": 0.16143946645961588}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * Const ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( Max( MUM,MUR ) + RRSe ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.4562043795620438, "obj2": 0.5247929067965547}, {"determining": "( Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( MDR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( DDR / Const ) ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,Min( ( FirstVNF_RAM_Server - AMS ) ,MRS ) ) ) / FirstVNF_RAM ) ) + ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) )", "choosing": "( ( ( MUM + RRSe ) + ( DS + ( ( Min( MUM ,( ( DS / MUC ) + MUM ) ) + MUM ) + DS ) ) ) + MUC )", "obj1": 0.791970802919708, "obj2": 0.10205922253553856}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) + ( ( MDR / ARS ) + PN ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RCSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + ( Max( DS,RCSe ) - ( MLU + MUR ) ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5650788190071298}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( FirstVNF_Mem + ( ( FirstVNF_Mem - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( ( MUR + Max( ( ( Max( MUM,RRSe ) - ( MLU + MUR ) ) - RRSe ),DS ) ) - Max( ( Min( MLU ,DS ) / ( RCSe + RCSe ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.531021897810219, "obj2": 0.39494127739036994}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ),MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( Min( RMSe ,RCSe ) + RCSe ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6204379562043796, "obj2": 0.2696525274705845}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( Const / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) - ( ( ( Max( MUR,( ( RRSe / RRSe ) + ( DS * MUC ) ) ) - ( MLU + MUR ) ) + Max( ( ( MUC + DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5271088147134937}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / AMS ) ) + Max( FirstVNF_RAM_Server,( MRS / Max( ( RRS / ACS ),( BR - MRS ) ) ) ) )", "choosing": "( MUC + ( ( ( DS - Min( DS ,RMSe ) ) + RRSe ) + Min( ( ( CS * MLU ) / CS ) ,( MUC + DS ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.23814329831410366}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,ARS ) + FirstVNF_RAM_Server ) ) / MDR ) * Max( ARS,( PN + Min( Const ,( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ) ) ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server / ( ( PN / FirstVNF_CPU ) * ( ARS - FirstVNF_Mem_Server ) ) ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - Max( MUM,RRSe ) ) + ( MUC * MUC ) ) / ( ( DS - Max( ( DS + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) + MUM ) )", "obj1": 0.4708029197080292, "obj2": 0.49829722313659125}, {"determining": "( ( ( ( BR + Max( FirstVNF_CPU,MRS ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * ( ( MDR / FirstVNF_CPU_Server ) + MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( MDR - BR ) ) )", "choosing": "( ( DS + DS ) * ( ( MUR - ( MLU / ( DS / ( ( MUR - ( DS * MUM ) ) * DS ) ) ) ) - ( RRSe / MUM ) ) )", "obj1": 0.7536496350364964, "obj2": 0.13683790918257588}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Max( MUC,( Min( CS ,MUM ) / ( CS + Max( ( RRSe + RCSe ),Min( ( Min( CS ,RMSe ) - DS ) ,MUC ) ) ) ) ) + RCSe )", "obj1": 0.5529197080291971, "obj2": 0.3647763590780158}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,( ARS / ( PN + Min( Const ,( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ) ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ( MDR * FirstVNF_Mem ) - ARS ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( FirstVNF_RAM ,AMS ) ) * ( BR * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( Min( ( RCSe * MUM ) ,DS ) - DS ) * ( Min( CS ,Min( RCSe ,( MUC - Min( ( DS * RMSe ) ,( MUM + RRSe ) ) ) ) ) * MLU ) )", "obj1": 0.39416058394160586, "obj2": 0.6468993802843437}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MLU + Max( ( MUC - ( ( RRSe - RRSe ) + ( ( RMSe + MUM ) + DS ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) ) / Max( ( MLU / ( ( RCSe - RRSe ) + MUR ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.3978102189781022, "obj2": 0.6320716753181514}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( ( RRSe - ( MLU + ( DS * DS ) ) ) - RRSe ) ) + MUC )", "obj1": 0.48175182481751827, "obj2": 0.4754243933561681}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( FirstVNF_Mem_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / Const ) ) ,RRS ) ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( ( MUM * DS ),Max( ( MUR * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.9543795620437956, "obj2": 0.01257236671733768}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( MLU + MUR ) ) ) )", "obj1": 0.5565693430656934, "obj2": 0.3554336759795748}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( DS + DS ) * ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( RRSe + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.801094890510949, "obj2": 0.09735678268258609}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( RRS - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUR ) ) - ( ( RMSe / RMSe ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / RCSe ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.07628536524375887}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( Const - CRS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * Min( ( FirstVNF_Mem + ( BR + CRS ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( Min( RMSe ,( CS + MUC ) ) + Max( ( RMSe + MUR ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.8485401459854015, "obj2": 0.0663214128112809}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Max( Const,PN ) - Min( FirstVNF_CPU ,BR ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MLU + Max( Min( ( ( ( RMSe / RMSe ) + MLU ) * Max( MLU,DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) ) / Max( ( MLU / ( MUR + ( RCSe - RRSe ) ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MUM ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( Min( ( ( Max( ARS,MRS ) * MDR ) * BR ) ,MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * ( BR + AMS ) ) * ( Min( DDR ,FirstVNF_CPU ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / ( CRS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.0019579500526640636}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( Min( ( ( Max( MRS,ARS ) * MDR ) * BR ) ,MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / ( CRS * ACS ) ) ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + RMSe ) / MUR ) ,( CS + ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - Max( DS,RRSe ) ) ) - ( DS * ( MUC * MUC ) ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( MUC + RCSe ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.23814329831410366}, {"determining": "Max( ( RRS + ( MDR / FirstVNF_RAM_Server ) ),Min( ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - ( CRS - ACS ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( AMS * ARS ) ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * PN ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( MLU * DS ) + ( ( ( MUC * ( ( MUM - DS ) * ( Max( ( RRSe / MLU ),( MUR / MUC ) ) / ( ( MUC * CS ) + MLU ) ) ) ) + MLU ) - MLU ) )", "obj1": 0.39963503649635035, "obj2": 0.6314882633665565}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_CPU_Server - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + FirstVNF_Mem_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / Max( Min( RMSe ,RCSe ),( MUC / MUM ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6386861313868614, "obj2": 0.24840989129272792}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server - ( PN / ACS ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( ( DS - DS ) ,MUM ) - ( ( CS * MUC ) + ( ( RRSe - ( MLU + ( ( MUC + DS ) / ( CS - MUR ) ) ) ) - RRSe ) ) ) )", "obj1": 0.7791970802919708, "obj2": 0.11276584121244021}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( Const - CRS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * Min( ( FirstVNF_Mem + ( BR + CRS ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( Min( RMSe ,( CS + MUC ) ) + Max( ( RMSe + MUR ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.8467153284671532, "obj2": 0.06736213355403221}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) + BR ) * ( Min( ( DDR * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * ( FirstVNF_RAM_Server - DDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( DS + DS ) * ( ( MUR - ( MLU - ( DS / CS ) ) ) - ( ( Max( ( DS * RMSe ),MUR ) + RRSe ) + RRSe ) ) )", "obj1": 0.7992700729927007, "obj2": 0.10129375367798292}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6824817518248175, "obj2": 0.20525358089307152}, {"determining": "Max( ( Const / PN ),Min( ( Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ARS - ( MDR * FirstVNF_Mem ) ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( DDR * ARS ),FirstVNF_RAM ) / MRS ) ) ) ,( ( ( Max( PN,( MRS + MDR ) ) * Min( AMS ,FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - AMS ) * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ) ) )", "choosing": "( Max( ( Min( CS ,RCSe ) / Min( ( MUM / DS ) ,MUC ) ),RCSe ) * ( ( MUC * MLU ) * DS ) )", "obj1": 0.4744525547445255, "obj2": 0.4904355250929441}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( ( ( Max( MDR,ACS ) - FirstVNF_Mem ) + Max( ( MDR / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) ) / ( RRS - BR ) ) ,( FirstVNF_CPU_Server - MDR ) ) + Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "Max( RMSe,( MUR - ( ( MUR + ( Max( MLU,DS ) / MUR ) ) - ( ( ( CS / DS ) - RCSe ) - CS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08607328129706897}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( Max( AMS,Max( CRS,FirstVNF_CPU_Server ) ) ,( MDR + ( ( FirstVNF_RAM + CRS ) - MRS ) ) ) )", "choosing": "( RCSe + Max( MUC,( Min( Min( ( Max( RRSe,RMSe ) + ( ( RMSe * MUM ) + ( DS - MLU ) ) ) ,( RRSe - ( ( CS / CS ) - RCSe ) ) ) ,MUM ) / RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.46780391853973996}, {"determining": "( Min( MRS ,BR ) + Min( ( ( ( ARS * Min( RRS ,PN ) ) * BR ) * MDR ) ,( ( ( ( MDR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( Const ,FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( ( MRS - AMS ) - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( MUM ,( MLU * CS ) ) + RRSe ) - DS ) + ( ( Max( MUM,( ( Min( RCSe ,MLU ) - Min( ( RCSe * CS ) ,Max( MUC,MUR ) ) ) / CS ) ) + DS ) + MUM ) )", "obj1": 0.8175182481751825, "obj2": 0.09016754167617924}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) * ( ( FirstVNF_CPU * DDR ) / BR ) ) ) / ( Max( FirstVNF_RAM_Server,BR ) + Const ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Max( RCSe,( ( Max( MUM,MUR ) - RCSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( Max( DS,RCSe ) ,( MLU + Max( ( MUC - MUC ),( RRSe - ( MUC - RMSe ) ) ) ) ) ) ) - ( ( ( ( ( MUC / MUC ) - MUR ) + ( RCSe / ( RCSe / MUC ) ) ) * MUC ) + Max( MLU,DS ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + ( Max( MUM,CS ) + RRSe ) ) ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - MUC ) ,MUR ) ) ) )", "obj1": 0.75, "obj2": 0.13770281704296286}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( MUR * MUR ) + Max( ( DS / MUC ),DS ) )", "obj1": 0.6806569343065694, "obj2": 0.20716684554259748}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6879562043795621, "obj2": 0.2004773818595551}, {"determining": "( ( ( ( BR * ( ARS * MDR ) ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ARS ) ) ) / ( AMS * RRS ) ) + ( Min( ( ( ACS / FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( ( Min( DS ,DS ) / RMSe ) * ( RCSe - Min( ( ( ( CS / ( RMSe - MUC ) ) * ( MLU / RCSe ) ) + MUR ) ,Max( DS,( MLU * DS ) ) ) ) ) + ( ( MUR * ( MUM / MUR ) ) + MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5069595696921577}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( CRS ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) ) * Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Min( RMSe ,( Max( RCSe,MUC ) + DS ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RCSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.45985401459854014, "obj2": 0.5166265979430197}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,( FirstVNF_RAM * ( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( FirstVNF_Mem_Server / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,( MUM / ( RRSe + RCSe ) ) ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + MUR ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.4835766423357664, "obj2": 0.47105703872708543}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.6295620437956204, "obj2": 0.25738544919477524}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MUM + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6131386861313869, "obj2": 0.2773916137081506}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( FirstVNF_CPU_Server * Max( Min( RRS ,( ACS * FirstVNF_CPU_Server ) ),ARS ) ) * ( Max( Min( AMS ,Max( DDR,BR ) ),( ( FirstVNF_RAM_Server - AMS ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( MUM + Min( ( RRSe + MLU ) ,DS ) ) + RMSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 0.6076642335766423, "obj2": 0.2810482166707827}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / MLU ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.35744332416050334}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( ( DS - DS ) ,MUM ) - ( ( CS * MUC ) + ( ( RRSe - ( MLU + ( CS - ( MUC - MUR ) ) ) ) - RRSe ) ) ) )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( Max( MDR,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,RRS ) ) ) + ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( CS / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( DS + MUC ) ),RMSe ) ) / ( MUR * ( MUR * MUR ) ) ) + Max( ( Min( Min( DS ,CS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * Min( DS ,DS ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6405109489051095, "obj2": 0.2483954620091577}], "45": [{"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( MUC,( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + Min( ( MDR * MRS ) ,( ( ( FirstVNF_CPU_Server * Max( Min( RRS ,( ACS * FirstVNF_CPU_Server ) ),ARS ) ) * ( Max( FirstVNF_CPU,( FirstVNF_Mem / MDR ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( MLU + ( Min( MUM ,( ( RRSe - MUC ) / MUC ) ) + RRSe ) ) + ( CS - ( ( DS + MUM ) / MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / PN ),RRS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( DS - MLU ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( MDR + ( ( MDR / ARS ) + ACS ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( DS - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + ( Max( DS,RCSe ) - ( MLU + MUR ) ) ) ) - ( MUR + Max( MLU,DS ) ) )", "obj1": 0.39233576642335766, "obj2": 0.6676047453651351}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( Min( MUM ,MUR ) ,RMSe ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( ( DS - DS ) ,MUM ) - ( ( CS * MUC ) + ( ( ( ( MUR / ( MUR + RCSe ) ) - Min( DS ,DS ) ) - ( MLU + ( CS - ( MUC - MUR ) ) ) ) - RRSe ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4150512120717833}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) + Const ) ,Const ) + ( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) + BR ) )", "choosing": "( Max( MUM,MUC ) + ( RMSe * Min( MUR ,Min( DS ,CS ) ) ) )", "obj1": 0.7007299270072993, "obj2": 0.18884345107498543}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ACS ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( ( Max( CRS,FirstVNF_RAM_Server ) - PN ) + ( Min( RRS ,FirstVNF_Mem_Server ) / DDR ) ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - DDR ) ,( ( ( ( BR + Max( MDR,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS * ( PN + FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( MLU + ( ( CS / ( MUR * MLU ) ) / Min( ( MUM - MLU ) ,Max( MUM,( RMSe * MUR ) ) ) ) ),Max( MUR,( ( RMSe + Max( Max( RRSe,DS ),Max( MUC,RMSe ) ) ) - MUM ) ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7116788321167883, "obj2": 0.17591911961781034}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6879562043795621, "obj2": 0.2004773818595551}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + ( ( ( DS + DS ) * ( ( ( ( ( MUM + MLU ) - ( RRSe - MUC ) ) - Min( MLU ,Min( CS ,RCSe ) ) ) - ( RCSe + MLU ) ) - MUC ) ) / ( RMSe - RCSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( AMS - Max( FirstVNF_RAM_Server,ACS ) ) ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( ( ( CS + RMSe ) - RMSe ) ,RCSe ) * MLU ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6605839416058394, "obj2": 0.2268763980845105}, {"determining": "( Min( FirstVNF_RAM_Server ,Min( Const ,MDR ) ) + Min( ( ( ( ARS * ( AMS * PN ) ) * BR ) * MDR ) ,( ( Min( ( Max( Min( FirstVNF_CPU ,CRS ),FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,BR ) ) ) ,( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe * ( Min( CS ,DS ) / ( RCSe + MLU ) ) ) ) / ( RCSe - CS ) ) / ( RRSe * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / DS ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( CS ,MUC ) ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8558394160583942, "obj2": 0.06190143025553726}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Max( ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ),Min( ( FirstVNF_Mem / MDR ) ,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / ( Const + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( DDR / PN ) ) ) ) ,( AMS - BR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( ( CS / RCSe ) * MLU ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( FirstVNF_Mem - Max( ARS,FirstVNF_RAM_Server ) ) - RRS ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( RRS + ( MDR - Min( FirstVNF_CPU ,PN ) ) ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,MDR ) ) * Min( ( DDR * Const ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( DS * RCSe ) ) + ( MLU - Max( DS,( ( CS / RCSe ) * Max( MUC,Max( Min( RMSe ,Max( RCSe,MLU ) ),MLU ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6113317375789231}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,ARS ) + FirstVNF_RAM_Server ) ) / MDR ) * Max( ARS,( PN + Min( Const ,( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ) ) ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server / ( ( PN / FirstVNF_CPU ) * ( ARS - FirstVNF_Mem_Server ) ) ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - Max( MUM,RRSe ) ) + ( MUC * MUC ) ) / ( ( DS - Max( ( DS + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) + MUM ) )", "obj1": 0.4708029197080292, "obj2": 0.49829722313659125}, {"determining": "( ( ( ( BR * ( ARS * MDR ) ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ARS ) ) ) / ( AMS * RRS ) ) + ( Min( ( ( ACS / FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( ( Min( DS ,DS ) / RMSe ) * ( RCSe - Min( ( ( ( CS / ( RMSe - MUC ) ) * ( MLU / RCSe ) ) + MUR ) ,Max( DS,( MLU * DS ) ) ) ) ) + ( ( MUR * ( MUM / MUR ) ) + MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5069595696921577}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "( ( ( ( ACS / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Max( ( AMS * MRS ),( FirstVNF_Mem / FirstVNF_Mem ) ) * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + Max( CS,RRSe ) ) ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - ( RRSe + MUM ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( MUC * CS ) ) ) )", "obj1": 0.5437956204379562, "obj2": 0.3776772568298506}, {"determining": "( ( ( ( CRS + PN ) * ( RRS / ( FirstVNF_Mem / PN ) ) ) - Max( PN,MDR ) ) + Min( ( ( RRS - Const ) + FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_Mem,DDR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( DS ,Max( CS,( MUM / MUC ) ) ) / MUC ) * ( Min( ( ( DS - MLU ) - MUR ) ,Max( DS,( MLU - DS ) ) ) - MUR ) ) + ( Min( ( MLU * MLU ) ,( MLU * CS ) ) - ( ( RRSe - ( RRSe - ( Min( ( MUC * RCSe ) ,MLU ) / Max( CS,MLU ) ) ) ) + ( CS * MUR ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.40670677624697654}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / FirstVNF_CPU_Server ),RRS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.30533937773292386}, {"determining": "( ( ( ( BR + ( ( DDR - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / BR ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( FirstVNF_CPU_Server / BR ) ,MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM - FirstVNF_RAM ) - MDR ) ) )", "choosing": "( ( ( MUR - ( MLU + ( DS / Min( MUR ,Max( ( MUC / MUC ),MUC ) ) ) ) ) + ( RRSe + ( Min( MUM ,MUR ) + RRSe ) ) ) * ( DS + ( Max( DS,Max( RCSe,MUM ) ) + Min( Max( CS,CS ) ,MLU ) ) ) )", "obj1": 0.8759124087591241, "obj2": 0.05539817586653941}, {"determining": "( ( Min( ( CRS * Const ) ,CRS ) + ( PN - MDR ) ) + Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( RRS / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem_Server ,( Max( AMS,ARS ) + BR ) ) + ( ( PN - MDR ) - MDR ) ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / MDR ) ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM - Max( Max( Min( CS ,( RMSe + MUM ) ),( MLU - ( ( RRSe / MUC ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + ( MUC + MUR ) )", "obj1": 0.7645985401459854, "obj2": 0.12094156345758214}, {"determining": "( Max( ( FirstVNF_Mem_Server * ARS ),( MDR - ( MRS - FirstVNF_Mem_Server ) ) ) + Min( ( MRS - ACS ) ,RRS ) )", "choosing": "( ( ( RRSe * MUR ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) + ( Max( MUM,DS ) + RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5723157656738803}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( RRS - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUR ) ) - ( ( RMSe / RMSe ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / RCSe ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.07628536524375885}, {"determining": "( ( ( FirstVNF_CPU * PN ) + ( CRS / MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) * ( FirstVNF_Mem_Server / MRS ) ) / MDR ) ,( ( ( CRS * ( RRS * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) / MDR ) ) )", "choosing": "( ( MUM + MUR ) + ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( DS + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) )", "obj1": 0.8704379562043796, "obj2": 0.0576933700217704}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( Max( CRS,BR ) + BR ) + BR ) ) * FirstVNF_RAM ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + ( Max( MUM,DS ) + RRSe ) ) ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - MUC ) ,Min( Min( ( CS + MLU ) ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) ) ) ) )", "obj1": 0.9452554744525548, "obj2": 0.018157526254286967}, {"determining": "( Max( AMS,Max( ( MDR / ( DDR / ( PN * ( MDR + Max( ACS,MDR ) ) ) ) ),FirstVNF_Mem_Server ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,Max( MUC,( ( RMSe / RMSe ) / ( RMSe / RMSe ) ) ) ) + RRSe ) + Max( ( ( ( MUC + DS ) / ( CS - MUR ) ) / Max( ( MLU + Max( MUR,( Min( RCSe ,RCSe ) + RCSe ) ) ),MUM ) ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.7208029197080292, "obj2": 0.16293292262735556}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) * MDR ) * BR ) * ( Const * MDR ) ) ,( ( ( Max( BR,( ( FirstVNF_Mem_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Max( MDR,( MDR - FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( Min( MUR ,Min( RCSe ,( MUC - ( ( MUM + RRSe ) / ( DS + RMSe ) ) ) ) ) * MLU ) * ( Max( MUC,( RMSe - MLU ) ) - MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6209613042832636}, {"determining": "( ( ( ( FirstVNF_RAM_Server - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( ( ( ( Min( AMS ,AMS ) + ( Max( ARS,MDR ) * ( MDR / DDR ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( MUC - MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - Min( CS ,RRSe ) ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ) ) )", "choosing": "( ( MUR * MUR ) + Max( ( DS / ( MLU + MUR ) ),DS ) )", "obj1": 0.6715328467153284, "obj2": 0.2164716767214464}, {"determining": "Max( Max( ( FirstVNF_Mem + MDR ),Min( FirstVNF_Mem ,( ARS / ( FirstVNF_RAM_Server / RRS ) ) ) ),Min( ( Max( ( ( ( Const - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ( MDR * FirstVNF_Mem ) - ARS ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( Max( PN,( MRS + MDR ) ) * Min( FirstVNF_RAM ,AMS ) ) + ( BR * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ,( PN * Min( ( Max( ACS,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( Max( MUC,Max( ( Max( ( MLU - MUC ),Min( RRSe ,( RRSe - MLU ) ) ) - RRSe ),Min( ( DS * CS ) ,MUR ) ) ) + ( ( RMSe - Min( MUC ,RMSe ) ) + MUM ) ) * ( Min( CS ,Min( RCSe ,( Min( ( MUM / RRSe ) ,( MUM + CS ) ) - MUC ) ) ) * MLU ) )", "obj1": 0.49635036496350365, "obj2": 0.4565164855704457}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( Max( CRS,BR ) + DDR ) + BR ) ) * FirstVNF_RAM ) + ( FirstVNF_RAM_Server * PN ) ) + Min( ( ( ( Min( AMS ,( FirstVNF_RAM_Server / MDR ) ) + ( ( FirstVNF_RAM_Server - AMS ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( ( FirstVNF_Mem_Server / RRS ) / FirstVNF_CPU_Server ) ,Max( PN,( AMS / ( MRS - FirstVNF_CPU ) ) ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( CS ,DS ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( DS + ( ( MUM + MUR ) + RRSe ) ) ) - RRSe ) + Min( Max( RRSe,Min( MUR ,( RCSe / ( DS / CS ) ) ) ) ,MUM ) ) ) )", "obj1": 0.9653284671532847, "obj2": 0.007908846286747146}, {"determining": "( ( ( MDR * MRS ) / Min( AMS ,AMS ) ) + ( ( ( CRS / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - ( DS * ( RCSe + DS ) ) ) ) ) ) + ( ( ( CS + DS ) - CS ) + MUM ) )", "obj1": 0.7043795620437956, "obj2": 0.18156668778236282}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( ARS * MDR ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Min( ( MUC * MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + Max( MUM,RRSe ) ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) + ( Max( MUM,MUR ) + RRSe ) ) )", "obj1": 0.5602189781021898, "obj2": 0.34750945858811483}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ),MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / ( Min( RMSe ,RCSe ) + RCSe ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6204379562043796, "obj2": 0.2696525274705845}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6468993802843437}, {"determining": "Max( ( Const / PN ),Min( ( Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ARS - ( MDR * FirstVNF_Mem ) ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( DDR * ARS ),FirstVNF_RAM ) / MRS ) ) ) ,( ( ( Max( PN,( MRS + MDR ) ) * Min( AMS ,FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - AMS ) * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ) ) )", "choosing": "( Max( ( Min( CS ,RCSe ) / Min( ( MUM / DS ) ,MUC ) ),RCSe ) * ( ( MUC * MLU ) * DS ) )", "obj1": 0.4744525547445255, "obj2": 0.4904355250929441}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( ( Min( FirstVNF_CPU ,ARS ) * ARS ) + BR ) ),( ( DDR + FirstVNF_RAM_Server ) - MDR ) ) + Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * Min( RMSe ,CS ) ) ) ) - ( ( ( ( ( MLU - ( RCSe + RMSe ) ) / ( ( MUM + CS ) - MUR ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.595989557812868}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / MLU ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.5675182481751825, "obj2": 0.3425221976230662}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - ( MDR / ( CRS / ( ( FirstVNF_CPU + Max( FirstVNF_Mem,( DDR + FirstVNF_RAM_Server ) ) ) * MDR ) ) ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( DS + CS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),( ( DS / Min( RMSe ,CS ) ) - MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6000862591395966}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - Max( FirstVNF_CPU,( ACS - MDR ) ) ) ) + Min( ( MDR * MDR ) ,( ( ( ( AMS + BR ) * ( Min( AMS ,AMS ) / ( Min( DDR ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,( Min( FirstVNF_CPU ,DDR ) + RRS ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( MUM + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 0.5784671532846716, "obj2": 0.32420194126708757}, {"determining": "Max( Max( ( Max( AMS,MDR ) + MDR ),Min( FirstVNF_Mem ,( ( AMS + ( ( FirstVNF_Mem + ARS ) + DDR ) ) / ( ACS - FirstVNF_RAM ) ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( AMS ,FirstVNF_RAM ) ) * Min( MRS ,FirstVNF_Mem ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_CPU * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( CS + ( ( MLU - ( DS - RRSe ) ) + RMSe ) ) ) - DS ) - DS ) * ( Min( ( Max( Max( ( ( RCSe * MUM ) + Min( RMSe ,CS ) ),Max( Max( MUR,MLU ),Max( RMSe,MUM ) ) ),( Min( RRSe ,MUM ) / RMSe ) ) / DS ) ,Min( RCSe ,Min( RMSe ,( RRSe + RRSe ) ) ) ) * MLU ) )", "obj1": 0.4781021897810219, "obj2": 0.4818268819150492}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Max( Const,PN ) - Min( FirstVNF_CPU ,BR ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MLU + Max( Min( ( ( ( RMSe / RMSe ) + MLU ) * Max( MLU,DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) ) / Max( ( MLU / ( MUR + ( RCSe - RRSe ) ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MUM ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( CRS ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) ) * Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Min( RMSe ,( Max( RCSe,MUC ) + DS ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RCSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.45985401459854014, "obj2": 0.5166265979430197}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) + ( PN - MDR ) ) + Min( ( ( ( PN * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - ( FirstVNF_RAM_Server * AMS ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + MDR ) ),RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + DS ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / Max( ( MLU / MUM ),( MUR * MUM ) ) ) - ( DS * DS ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) ) )", "obj1": 0.8941605839416058, "obj2": 0.04362003190892363}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( MRS ,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6277372262773723, "obj2": 0.2608575609453528}, {"determining": "( Min( ( Min( ( ( ACS + Min( ( RRS / ARS ) ,BR ) ) - ACS ) ,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + ( ( ( Max( MUR,( ( RRSe / RRSe ) + ( DS * MUC ) ) ) - ( MLU + MUR ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.5817390245261118}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( ( FirstVNF_RAM_Server - AMS ) - MRS ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUM + RRSe ) + ( DS + ( ( ( ( RMSe + DS ) - Max( MUC,MUR ) ) + MUM ) + DS ) ) ) + MUC )", "obj1": 0.8083941605839416, "obj2": 0.09493712162227434}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Max( MUC,( Min( CS ,MUM ) / ( CS + Max( ( RRSe + RCSe ),Min( ( Min( CS ,RMSe ) - DS ) ,MUC ) ) ) ) ) + RCSe )", "obj1": 0.5529197080291971, "obj2": 0.3647763590780158}, {"determining": "( ( ( ( FirstVNF_RAM_Server / ( ACS / ACS ) ) * PN ) + ( MDR - PN ) ) + Min( ( ( ( AMS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server * AMS ) - ( MRS - Const ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + Min( MLU ,Min( MLU ,MLU ) ) ) + ( ( Max( MUM,MUR ) + RRSe ) + Max( Min( Max( MUC,MUR ) ,MUM ),( ( ( RRSe - ( ( DS / MLU ) / MUM ) ) - RRSe ) + ( ( MLU - ( ( DS + DS ) - ( MUM * MUC ) ) ) * MUC ) ) ) ) )", "obj1": 0.5291970802919708, "obj2": 0.3993429294285154}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,Min( FirstVNF_CPU ,ACS ) ) ) - ACS ) ,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( Const / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) - ( ( ( Max( MUR,( ( RRSe / RRSe ) + ( DS * MUC ) ) ) - ( MLU + MUR ) ) + Max( ( ( MUC + DS ) + DS ),MLU ) ) + ( MUR * ( MUR * MUR ) ) ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5455254012037615}, {"determining": "( ( ( ( ( CRS - Min( Const ,BR ) ) - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_CPU_Server + Max( PN,FirstVNF_Mem ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( MUR * ( MUM / MUC ) ) + DS ) + RRSe ) + ( ( RRSe + Max( MUM,MUR ) ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - MLU ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5368216248666824}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( Const + Max( ( ARS / RRS ),BR ) ) - ACS ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + ( ( ARS - FirstVNF_CPU_Server ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + ( ( ( ( RRSe * CS ) - ( MLU + Max( ( RRSe * CS ),MUR ) ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) * ( MUR * MUC ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4575221502541406}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( FirstVNF_Mem_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / Const ) ) ,RRS ) ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( ( MUM * DS ),Max( ( MUR * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.9543795620437956, "obj2": 0.012572366717337675}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( FirstVNF_Mem_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / Const ) ) ,RRS ) ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( ( MUM * DS ),Max( ( MUR * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( Max( ( DS / MUC ),DS ) * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.9781021897810219, "obj2": 0.0034816237731803046}, {"determining": "( ( ( PN - MDR ) + ( FirstVNF_RAM_Server * ( ( DDR / ( FirstVNF_Mem + MDR ) ) * MDR ) ) ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( RCSe + ( ( CS * ( ( MUR + RCSe ) + ( Max( DS,( RMSe / CS ) ) + Min( MUM ,Min( RRSe ,MUM ) ) ) ) ) + DS ) ) + MUC )", "obj1": 0.6441605839416058, "obj2": 0.24135252208660948}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - Min( MLU ,RCSe ) ) )", "obj1": 0.7481751824817519, "obj2": 0.14026154982420083}, {"determining": "( ( ( Max( AMS,( ARS * FirstVNF_CPU ) ) - BR ) + ARS ) + Min( Min( BR ,DDR ) ,PN ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,DS ) + CS ) / MUR ) ,( CS + ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( RMSe / RMSe ) ) / MUM ) - ( MUM - Min( DS ,( RMSe - ( ( RMSe * DS ) + RCSe ) ) ) ) ) * Min( Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ,( MUM + Min( MUC ,( RCSe / DS ) ) ) ) )", "obj1": 0.7317518248175182, "obj2": 0.1529786967193805}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + AMS ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem / ACS ) ) * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( MRS ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( MLU + RRSe ) - MLU ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,( ( MUM - RRSe ) + ( ( RMSe * MUC ) + ( MUC / RCSe ) ) ) ) + MLU ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.7591240875912408, "obj2": 0.13078054048258442}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( Max( ARS,ACS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6788321167883211, "obj2": 0.20952171141552026}, {"determining": "( ( ( FirstVNF_RAM_Server + PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) ) * ( MDR + ( PN - MDR ) ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( MUR * MUR ) + ( ( DS / ( DS / ( CS / MUM ) ) ) - DS ) )", "obj1": 0.635036496350365, "obj2": 0.25265386826601505}, {"determining": "( Max( MDR,( ( FirstVNF_RAM_Server * MDR ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU * DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MLU + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + ( MUC + RMSe ) ) ) - RRSe ),DS ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5406796488338033}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / AMS ) ) + Max( FirstVNF_RAM_Server,( MRS / Max( ( RRS / ACS ),( BR - MRS ) ) ) ) )", "choosing": "( MUC + ( ( ( DS - Min( DS ,RMSe ) ) + RRSe ) + Min( ( ( CS * MLU ) / CS ) ,( MUC + DS ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.23814329831410366}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( Max( AMS,Max( CRS,FirstVNF_CPU_Server ) ) ,( MDR + ( ( FirstVNF_RAM + CRS ) - MRS ) ) ) )", "choosing": "( RCSe + Max( MUC,( Min( Min( ( Max( RRSe,RMSe ) + ( ( RMSe * MUM ) + ( DS - MLU ) ) ) ,( RRSe - ( ( CS / CS ) - RCSe ) ) ) ,MUM ) / RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.46780391853973996}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( Max( CRS,BR ) + DDR ) + BR ) ) * FirstVNF_RAM ) + ( FirstVNF_RAM_Server * PN ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( ( FirstVNF_Mem_Server / RRS ) / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( MUM * MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + ( Max( MUM,MUR ) + RRSe ) ) ) - RRSe ) + Min( Max( RRSe,Min( MUR ,( RCSe / ( DS / CS ) ) ) ) ,MUM ) ) ) )", "obj1": 0.9361313868613139, "obj2": 0.021037658706304863}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( Min( MUM ,MUR ) ,RMSe ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( ( DS - DS ) ,MUM ) - ( ( CS * MUC ) + ( ( ( ( MUR / ( MUR + RCSe ) ) - Min( DS ,DS ) ) - ( MLU + ( CS - ( MUC - MUR ) ) ) ) - RRSe ) ) ) )", "obj1": 0.5018248175182481, "obj2": 0.43531924177348946}, {"determining": "( ( ( Min( PN ,RRS ) * FirstVNF_RAM_Server ) * MDR ) + FirstVNF_RAM_Server )", "choosing": "( Max( MUC,( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / ( Min( ( ( RCSe * Min( RRSe ,CS ) ) / Max( ( MUM + RMSe ),( MUR * MLU ) ) ) ,MUR ) * MLU ) ) ) + RCSe )", "obj1": 0.39416058394160586, "obj2": 0.6468993802843437}, {"determining": "( ( ( Const - MDR ) + Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - BR ) ) + BR ) ) * Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM + RRSe ) + ( DS + ( ( ( Min( RMSe ,DS ) - CS ) + Min( MUC ,RRSe ) ) + DS ) ) ) + MUC )", "obj1": 0.3978102189781022, "obj2": 0.6320716753181514}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( ( RRSe - ( MLU + ( DS * DS ) ) ) - RRSe ) ) + MUC )", "obj1": 0.48175182481751827, "obj2": 0.4754243933561681}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + Max( Max( MUR,MLU ),Max( RMSe,MUM ) ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( MLU + MUR ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.011164513876360159}, {"determining": "( ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( ( ( ( MLU - Min( Max( Max( MUC,MLU ),MUM ) ,MUM ) ) / MLU ) / ( RRSe * Min( Min( CS ,MUM ) ,( ( ( ( MLU + RRSe ) - MUR ) / ( MLU / Max( MLU,CS ) ) ) * Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.7262773722627737, "obj2": 0.1589501178039258}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.6295620437956204, "obj2": 0.25738544919477524}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( MLU + MUR ) ) ) )", "obj1": 0.5565693430656934, "obj2": 0.3554336759795748}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( ( MRS * ( ( FirstVNF_RAM_Server * PN ) + Const ) ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 0.6040145985401459, "obj2": 0.2843899684548115}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( Max( CRS,BR ) + BR ) + BR ) ) * FirstVNF_RAM ) ) + Min( ( ( ( Min( AMS ,( Min( FirstVNF_Mem ,MDR ) - FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( MDR * BR ) ) )", "choosing": "( ( Max( MUR,MUM ) * RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( MUC + RMSe ) ) )", "obj1": 0.9361313868613139, "obj2": 0.021037658706304863}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_Mem + RRS ) ) + Min( ( CRS / ARS ) ,( ( ( ( RRS - FirstVNF_Mem ) / ARS ) * ( ( MRS * FirstVNF_RAM_Server ) - ( ( DDR - RRS ) + RRS ) ) ) / ARS ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,Max( ( MLU + MLU ),MUM ) ),( MLU - ( Max( RRSe,MUM ) + MLU ) ) ),RMSe ) ) / ( ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) + ( DS - ( ( Min( ( MLU * MUM ) ,DS ) + MUM ) * RCSe ) ) ) ) + Max( ( Min( Max( RRSe,Max( RRSe,RMSe ) ) ,( Max( MUC,MUR ) / ( ( RRSe - RRSe ) + ( ( RMSe + RCSe ) + DS ) ) ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - Max( MUR,RRSe ) ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5985401459854015, "obj2": 0.29039472458042853}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( Const - CRS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * Min( ( FirstVNF_Mem + ( BR + CRS ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( Min( RMSe ,( CS + MUC ) ) + Max( ( RMSe + MUR ),Max( Min( RRSe ,CS ),MLU ) ) )", "obj1": 0.8485401459854015, "obj2": 0.0663214128112809}, {"determining": "( ( ( FirstVNF_RAM_Server * ( DDR / DDR ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,AMS ) ) ) ) + Min( ( ( ( ( MDR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( AMS ,FirstVNF_RAM ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( Max( RCSe,CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( RMSe ,MUR ) ,RMSe ) ),RMSe ) ) ) ) + ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( RRSe / MUM ) ) )", "obj1": 0.7372262773722628, "obj2": 0.15109545474358008}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( Min( ( ( Max( MRS,ARS ) * MDR ) * BR ) ,MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / ( CRS * ACS ) ) ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + RMSe ) / MUR ) ,( CS + ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - Max( DS,RRSe ) ) ) - ( DS * ( MUC * MUC ) ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( MUC + RCSe ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.23814329831410366}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / MDR ) ) + Min( ( MDR * MDR ) ,( Min( ( FirstVNF_CPU + BR ) ,MRS ) - Max( RRS,( Max( RRS,AMS ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( CS * ( RMSe * CS ) ) + ( CS + ( ( Max( ( ( MLU - CS ) * ( MUC + RCSe ) ),MLU ) + MUM ) + DS ) ) ) + MUC )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "Max( ( RRS + ( MDR / FirstVNF_RAM_Server ) ),Min( ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - ( CRS - ACS ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( AMS * ARS ) ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * PN ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( MLU * DS ) + ( ( ( MUC * ( ( MUM - DS ) * ( Max( ( RRSe / MLU ),( MUR / MUC ) ) / ( ( MUC * CS ) + MLU ) ) ) ) + MLU ) - MLU ) )", "obj1": 0.39963503649635035, "obj2": 0.6314882633665565}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( FirstVNF_Mem * AMS ) )", "choosing": "( ( MUC / ( ( ( ( ( DS - Max( DS,MUR ) ) + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS / RMSe ) )", "obj1": 0.6678832116788321, "obj2": 0.2235087860950485}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + ( ( ( Max( MUR,( ( RRSe / RRSe ) + ( DS * MUC ) ) ) - ( MLU + MUR ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.5748175182481752, "obj2": 0.32869078864607415}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * Min( RRS ,PN ) ) * BR ) * MDR ) ,( ( ( ( MDR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( Const ,FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( ( FirstVNF_RAM_Server - AMS ) - ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( MUM ,( MLU * CS ) ) + RRSe ) - DS ) + ( ( ( ( ( ( RMSe + DS ) - CS ) + MUM ) + DS ) - CS ) + MUM ) )", "obj1": 0.8156934306569343, "obj2": 0.09128044642740168}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( ( ( Max( MDR,ACS ) - FirstVNF_Mem ) + Max( ( MDR / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) ) / ( RRS - BR ) ) ,( FirstVNF_CPU_Server - MDR ) ) + Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "Max( RMSe,( MUR - ( ( MUR + ( Max( MLU,DS ) / MUR ) ) - ( ( ( CS / DS ) - RCSe ) - CS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08607328129706897}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( Min( ( ( Max( ARS,MRS ) * MDR ) * BR ) ,MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * ( BR + AMS ) ) * ( Min( DDR ,FirstVNF_CPU ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / ( CRS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.0019579500526640636}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) * ( ( FirstVNF_CPU * DDR ) / BR ) ) ) / ( Max( FirstVNF_RAM_Server,BR ) + Const ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Max( RCSe,( ( Max( MUM,MUR ) - RCSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( Max( DS,RCSe ) ,( MLU + Max( ( MUC - MUC ),( RRSe - ( MUC - RMSe ) ) ) ) ) ) ) - ( ( ( ( ( MUC / MUC ) - MUR ) + ( RCSe / ( RCSe / MUC ) ) ) * MUC ) + Max( MLU,DS ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( Min( ( Min( ( ACS - ( ACS / Max( Max( FirstVNF_Mem_Server,AMS ),FirstVNF_Mem ) ) ) ,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( Const / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( Min( MLU ,MUR ) + Max( ( RRSe / MUC ),DS ) )", "obj1": 0.45255474452554745, "obj2": 0.5271088147134937}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / MLU ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.35744332416050334}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * Max( AMS,( FirstVNF_Mem / Min( PN ,ARS ) ) ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / BR ) ,Const ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,RRS ) ) ) / MDR ) ) )", "choosing": "( Min( RRSe ,( MLU - MLU ) ) + MUC )", "obj1": 0.5693430656934306, "obj2": 0.3331909707040754}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( Max( MDR,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,RRS ) ) ) + ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( CS / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( DS + MUC ) ),RMSe ) ) / ( MUR * ( MUR * MUR ) ) ) + Max( ( Min( Min( DS ,CS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * Min( DS ,DS ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6405109489051095, "obj2": 0.2483954620091577}, {"determining": "( ( ( ( AMS - Max( PN,BR ) ) * ( AMS + FirstVNF_CPU ) ) / ( Min( Max( ( ACS * Const ),( ( DDR / Max( RRS,CRS ) ) / FirstVNF_RAM ) ) ,CRS ) - MDR ) ) + Max( MRS,MRS ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( ( CS / MUR ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,Min( Min( Min( ( RCSe * Max( Max( DS,MUM ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) ,( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4333090978110347}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) + BR ) * ( Min( ( DDR * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + BR ) ) * ( FirstVNF_RAM_Server - DDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( DS + DS ) * ( ( MUR - ( MLU - ( DS / CS ) ) ) - ( ( Max( ( DS * RMSe ),MUR ) + RRSe ) + RRSe ) ) )", "obj1": 0.7992700729927007, "obj2": 0.10129375367798292}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( Max( MUC,( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.531021897810219, "obj2": 0.39494127739036994}], "46": [{"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( ( AMS - PN ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( Max( CRS,BR ) + BR ) + BR ) ) * FirstVNF_RAM ) ) + Min( ( ( ( Min( AMS ,( Min( FirstVNF_Mem ,MDR ) - BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( MDR * BR ) ) )", "choosing": "( ( Max( MUR,MUM ) * RRSe ) + ( Min( Min( DS ,( ( RMSe - ( Max( DS,CS ) * ( MUR * MUR ) ) ) * MUC ) ) ,MUM ) - ( MUC + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + Min( ( MDR * MRS ) ,( ( ( FirstVNF_CPU_Server * Max( Min( RRS ,( ACS * FirstVNF_CPU_Server ) ),ARS ) ) * ( Max( FirstVNF_CPU,( FirstVNF_Mem / MDR ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( MLU + ( Min( MUM ,( ( RRSe - MUC ) / MUC ) ) + RRSe ) ) + ( CS - ( ( DS + MUM ) / MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server + ( ( ( Max( FirstVNF_CPU,( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_RAM_Server / MRS ) ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( CS - RMSe ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + DS ) ) )", "obj1": 0.38686131386861317, "obj2": 0.663359110858801}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + ( ( ( DS + DS ) * ( ( ( ( ( MUM + MLU ) - ( RRSe - MUC ) ) - Min( MLU ,Min( CS ,RCSe ) ) ) - ( RCSe + MLU ) ) - MUC ) ) / ( RMSe - RCSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( Max( ( FirstVNF_Mem_Server * ARS ),( MDR - ( MRS - FirstVNF_Mem_Server ) ) ) + Min( ( MRS - ACS ) ,RRS ) )", "choosing": "( ( ( RRSe * MUR ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) + ( Max( MUM,DS ) + RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5723157656738803}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( ( ( Max( MDR,ACS ) - FirstVNF_Mem ) + Max( ( MDR / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) ) / ( RRS - BR ) ) ,( FirstVNF_CPU_Server - MDR ) ) + Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "Max( RMSe,( MUR - ( ( MUR + ( Max( MLU,DS ) / MUR ) ) - ( ( ( CS / DS ) - RCSe ) - CS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08607328129706897}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( RRS - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU + CS ) ) * ( ( MUR - ( MLU + MUR ) ) - ( ( RMSe / RMSe ) + ( ( Max( RRSe,DS ) - DS ) + ( MUM / MUR ) ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( MLU ,RMSe ) ) * Min( ( CS / RCSe ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.07628536524375885}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( AMS - Max( FirstVNF_RAM_Server,ACS ) ) ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( ( ( CS + RMSe ) - RMSe ) ,RCSe ) * MLU ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6605839416058394, "obj2": 0.2268763980845105}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) * ( ( FirstVNF_CPU * DDR ) / BR ) ) ) / ( Max( FirstVNF_RAM_Server,BR ) + Const ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Max( RCSe,( ( Max( MUM,MUR ) - RCSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( Max( DS,RCSe ) ,( MLU + Max( ( MUC - MUC ),( RRSe - ( MUC - RMSe ) ) ) ) ) ) ) - ( ( ( ( ( MUC / MUC ) - MUR ) + ( RCSe / ( RCSe / MUC ) ) ) * MUC ) + Max( MLU,DS ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( Min( ( Min( ( ( ACS + Min( ( RRS / ARS ) ,BR ) ) - ACS ) ,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + ( ( ( Max( MUR,( ( RRSe / RRSe ) + ( DS * MUC ) ) ) - ( MLU + MUR ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.5817390245261118}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ,RRS ) - FirstVNF_Mem ) ,( ( ( Min( Max( CRS,FirstVNF_Mem ) ,( RRS + Min( RRS ,FirstVNF_CPU_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( RCSe * RRSe ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + Min( Min( DS ,DS ) ,RMSe ) ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) * MUM ) )", "obj1": 0.7007299270072993, "obj2": 0.1854078889491354}, {"determining": "( Min( FirstVNF_RAM_Server ,Min( Const ,MDR ) ) + Min( ( ( ( ARS * ( AMS * PN ) ) * BR ) * MDR ) ,( ( Min( ( Max( Min( FirstVNF_CPU ,CRS ),FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,BR ) ) ) ,( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe * ( Min( CS ,DS ) / ( RCSe + MLU ) ) ) ) / ( RCSe - CS ) ) / ( RRSe * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / DS ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( CS ,MUC ) ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8558394160583942, "obj2": 0.06190143025553726}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Max( ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ),Min( ( FirstVNF_Mem / MDR ) ,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / ( Const + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( DDR / PN ) ) ) ) ,( AMS - BR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( ( CS / RCSe ) * MLU ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( ( ( CRS + PN ) * ( RRS / ( FirstVNF_Mem / PN ) ) ) - Max( PN,MDR ) ) + Min( ( ( RRS - Const ) + FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_Mem,DDR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( DS ,Max( CS,( MUM / MUC ) ) ) / MUC ) * ( Min( ( ( DS - MLU ) - MUR ) ,Max( DS,( MLU - DS ) ) ) - MUR ) ) + ( Min( ( MLU * MLU ) ,( MLU * CS ) ) - ( ( RRSe - ( RRSe - ( Min( ( MUC * RCSe ) ,MLU ) / Max( CS,MLU ) ) ) ) + ( CS * MUR ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.40670677624697654}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ACS ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( ( Max( CRS,FirstVNF_RAM_Server ) - PN ) + ( Min( RRS ,FirstVNF_Mem_Server ) / DDR ) ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - DDR ) ,( ( ( ( BR + Max( MDR,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS * ( PN + FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( MLU + ( ( CS / ( MUR * MLU ) ) / Min( ( MUM - MLU ) ,Max( MUM,( RMSe * MUR ) ) ) ) ),Max( MUR,( ( RMSe + Max( Max( RRSe,DS ),Max( MUC,RMSe ) ) ) - MUM ) ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7116788321167883, "obj2": 0.17591911961781034}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( FirstVNF_Mem - Max( ARS,FirstVNF_RAM_Server ) ) - RRS ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( RRS + ( MDR - Min( FirstVNF_CPU ,PN ) ) ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,MDR ) ) * Min( ( DDR * Const ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( DS * RCSe ) ) + ( MLU - Max( DS,( ( CS / RCSe ) * Max( MUC,Max( Min( RMSe ,Max( RCSe,MLU ) ),MLU ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6113317375789231}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / FirstVNF_CPU_Server ),RRS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.30533937773292386}, {"determining": "( ( ( ( BR + ( ( DDR - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / BR ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( FirstVNF_CPU_Server / BR ) ,MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM - FirstVNF_RAM ) - MDR ) ) )", "choosing": "( ( ( MUR - ( MLU + ( DS / Min( MUR ,Max( ( MUC / MUC ),MUC ) ) ) ) ) + ( RRSe + ( Min( MUM ,MUR ) + RRSe ) ) ) * ( DS + ( Max( DS,Max( RCSe,MUM ) ) + Min( Max( CS,CS ) ,MLU ) ) ) )", "obj1": 0.8759124087591241, "obj2": 0.05539817586653941}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( PN / ( MRS + PN ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( ( Min( DS ,DS ) / ( Max( MUC,Min( DS ,RMSe ) ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6897810218978102, "obj2": 0.1990844495131966}, {"determining": "( ( ( FirstVNF_CPU * PN ) + ( CRS / MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) * ( FirstVNF_Mem_Server / MRS ) ) / MDR ) ,( ( ( CRS * ( RRS * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) / MDR ) ) )", "choosing": "( ( MUM + MUR ) + ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( DS + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) )", "obj1": 0.8704379562043796, "obj2": 0.0576933700217704}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) * MDR ) * BR ) * ( Const * MDR ) ) ,( ( ( Max( BR,( ( FirstVNF_Mem_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Max( MDR,( MDR - FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( Min( MUR ,Min( RCSe ,( MUC - ( ( MUM + RRSe ) / ( DS + RMSe ) ) ) ) ) * MLU ) * ( Max( MUC,( RMSe - MLU ) ) - MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6209613042832636}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,ARS ) + FirstVNF_RAM_Server ) ) / MDR ) * Max( ARS,( PN + Min( Const ,( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ) ) ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server / ( ( PN / FirstVNF_CPU ) * ( ARS - FirstVNF_Mem_Server ) ) ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - Max( MUM,RRSe ) ) + ( MUC * MUC ) ) / ( ( DS - Max( ( DS + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) + MUM ) )", "obj1": 0.4708029197080292, "obj2": 0.49829722313659125}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( FirstVNF_Mem_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_Mem_Server / Const ) ) ,RRS ) ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( ( MUM * DS ),Max( ( MUR * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + RMSe ) + DS ) ) ) ) + Min( CS ,( ( RMSe + DS ) - Max( MUC,MUR ) ) ) ) ) )", "obj1": 0.9890510948905109, "obj2": 0.0015236737205162412}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( Const + Max( ( ARS / RRS ),BR ) ) - ACS ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + ( ( ARS - FirstVNF_CPU_Server ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + ( ( ( ( RRSe * CS ) - ( MLU + Max( ( RRSe * CS ),MUR ) ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) * ( MUR * MUC ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4575221502541406}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Max( Const,PN ) - Min( FirstVNF_CPU ,BR ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MLU + Max( Min( ( ( ( RMSe / RMSe ) + MLU ) * Max( MLU,DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) ) / Max( ( MLU / ( MUR + ( RCSe - RRSe ) ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MUM ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( ACS / FirstVNF_Mem_Server ) - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + FirstVNF_RAM_Server ) * MDR ) ,( MDR / ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( MRS + Const ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( MUC,( Min( CS ,MUM ) / ( CS + Max( ( RRSe + RCSe ),Min( ( RRSe * MLU ) ,MUC ) ) ) ) ) + MLU )", "obj1": 0.49635036496350365, "obj2": 0.4522558692545822}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / MDR ) ) + Min( ( MDR * MDR ) ,( Min( ( FirstVNF_CPU + BR ) ,MRS ) - Max( RRS,( Max( RRS,AMS ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( CS * ( RMSe * CS ) ) + ( CS + ( ( Max( ( ( MLU - CS ) * ( MUC + RCSe ) ),MLU ) + MUM ) + DS ) ) ) + MUC )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( ARS * MDR ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Min( ( MUC * MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS - CS ) + Max( MUM,RRSe ) ) ) - RRSe ) + ( ( MLU * Min( CS ,RMSe ) ) * MUC ) ) ) + ( Max( MUM,MUR ) + RRSe ) ) )", "obj1": 0.5602189781021898, "obj2": 0.34750945858811483}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( ( Min( FirstVNF_CPU ,ARS ) * ARS ) + BR ) ),( ( DDR + FirstVNF_RAM_Server ) - MDR ) ) + Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * Min( RMSe ,CS ) ) ) ) - ( ( ( ( ( MLU - ( RCSe + RMSe ) ) / ( ( MUM + CS ) - MUR ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.595989557812868}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / MLU ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.5675182481751825, "obj2": 0.3425221976230662}, {"determining": "( ( ( ( RRS / PN ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - FirstVNF_Mem ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM * PN ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( ARS * MDR ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Min( ( MUC * MUR ) ,MUM ) - ( ( ( RRSe - ( Min( DS ,MLU ) + Max( MUM,RRSe ) ) ) - RRSe ) + ( ( MUR * Min( CS ,RMSe ) ) * MUC ) ) ) + ( Max( MUM,MUR ) + RRSe ) ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + ( Max( CRS,BR ) + BR ) ) ) * FirstVNF_RAM ) ) + Min( ( ( Min( Min( AMS ,Max( DDR,ACS ) ) ,( ( ( MRS * Const ) - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) + ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( MDR - ( FirstVNF_CPU / MDR ) ) ) )", "choosing": "( ( Max( DS,MUR ) + RRSe ) + ( ( Min( DS ,DS ) * Max( RRSe,Max( Min( ( MUM - ( MUC - DS ) ) ,RRSe ),MUR ) ) ) - ( ( ( ( Min( DS ,( MUC / CS ) ) + ( Max( MUM,MUR ) + RRSe ) ) - RRSe ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - ( ( Max( DS,RRSe ) - ( CS - MUC ) ) * MUC ) ) ,Min( Min( ( CS + MLU ) ,DS ) ,( Max( MUC,MUR ) + RRSe ) ) ) ) ) )", "obj1": 0.9361313868613139, "obj2": 0.021037658706304856}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - Min( MLU ,RCSe ) ) )", "obj1": 0.7481751824817519, "obj2": 0.14026154982420083}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - ( MDR / ( CRS / ( ( FirstVNF_CPU + Max( FirstVNF_Mem,( DDR + FirstVNF_RAM_Server ) ) ) * MDR ) ) ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( DS + CS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),( ( DS / Min( RMSe ,CS ) ) - MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6000862591395966}, {"determining": "Max( Max( ( Max( AMS,MDR ) + MDR ),Min( FirstVNF_Mem ,( ( AMS + ( ( FirstVNF_Mem + ARS ) + DDR ) ) / ( ACS - FirstVNF_RAM ) ) ) ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( ( ( MRS * Min( AMS ,FirstVNF_RAM ) ) * Min( MRS ,FirstVNF_Mem ) ) * MDR ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_CPU * ARS ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( CS + ( ( MLU - ( DS - RRSe ) ) + RMSe ) ) ) - DS ) - DS ) * ( Min( ( Max( Max( ( ( RCSe * MUM ) + Min( RMSe ,CS ) ),Max( Max( MUR,MLU ),Max( RMSe,MUM ) ) ),( Min( RRSe ,MUM ) / RMSe ) ) / DS ) ,Min( RCSe ,Min( RMSe ,( RRSe + RRSe ) ) ) ) * MLU ) )", "obj1": 0.4781021897810219, "obj2": 0.4818268819150492}, {"determining": "( ( ( ( FirstVNF_RAM_Server - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( ( ( ( Min( AMS ,AMS ) + ( Max( ARS,MDR ) * ( MDR / DDR ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( MUC - MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - Min( CS ,RRSe ) ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) + ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( ( ( ( ( MDR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ) ) ) + ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( RRSe / MUM ) ) )", "obj1": 0.781021897810219, "obj2": 0.11427739627859078}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6468993802843437}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * PN ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( MUM + Min( CS ,MUM ) ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - MUR ) + ( DS * MLU ) ) ) )", "obj1": 0.7408759124087592, "obj2": 0.14512380753517656}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( CRS ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) ) * Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Min( RMSe ,( Max( RCSe,MUC ) + DS ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RCSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.45985401459854014, "obj2": 0.5166265979430197}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( MRS - Min( ( AMS - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( MRS,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( Min( RMSe ,DS ) + ( ( MUC - MLU ) - CS ) ) ) + ( CS + RMSe ) )", "obj1": 0.614963503649635, "obj2": 0.2751376587968387}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) + ( PN - MDR ) ) + Min( ( ( ( PN * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - ( FirstVNF_RAM_Server * AMS ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + MDR ) ),RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + DS ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / Max( ( MLU / MUM ),( MUR * MUM ) ) ) - ( DS * DS ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) ) )", "obj1": 0.8941605839416058, "obj2": 0.04362003190892363}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( FirstVNF_Mem * AMS ) )", "choosing": "( ( MUC / ( ( ( ( ( DS - Max( DS,MUR ) ) + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS / RMSe ) )", "obj1": 0.6678832116788321, "obj2": 0.2235087860950485}, {"determining": "( ( ( ( ACS / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Max( ( AMS * MRS ),( FirstVNF_Mem / FirstVNF_Mem ) ) * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + Max( CS,RRSe ) ) ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - ( RRSe + MUM ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( MUC * CS ) ) ) )", "obj1": 0.5437956204379562, "obj2": 0.3776772568298506}, {"determining": "( Min( ( Min( PN ,FirstVNF_RAM_Server ) - MDR ) ,( ( ( ( BR + ( MRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( RCSe + Max( MUC,( Max( Max( ( ( RRSe * MUR ) - DS ),( RMSe + RMSe ) ),Min( MUM ,( MUC / RCSe ) ) ) / RRSe ) ) )", "obj1": 0.5529197080291971, "obj2": 0.3621868660592402}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS + MUC ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.5291970802919708, "obj2": 0.3975462911290833}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,Min( FirstVNF_CPU ,ACS ) ) ) - ACS ) ,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( Const / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) - ( ( ( Max( MUR,( ( RRSe / RRSe ) + ( DS * MUC ) ) ) - ( MLU + MUR ) ) + Max( ( ( MUC + DS ) + DS ),MLU ) ) + ( MUR * ( MUR * MUR ) ) ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5455254012037615}, {"determining": "( ( Min( ( CRS * Const ) ,CRS ) + ( PN - MDR ) ) + Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( RRS / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem_Server ,( Max( AMS,ARS ) + BR ) ) + ( ( PN - MDR ) - MDR ) ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / MDR ) ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM - Max( Max( Min( CS ,( RMSe + MUM ) ),( MLU - ( ( RRSe / MUC ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + ( MUC + MUR ) )", "obj1": 0.7645985401459854, "obj2": 0.12094156345758214}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( MDR - PN ) ) + Min( ( MDR * ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( MDR - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) * ( Min( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( Max( ARS,ACS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,RMSe ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Max( RRSe,RRSe ) ,MUM ) / RRSe ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.7536496350364964, "obj2": 0.13561956209635417}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / Const ) ) ,RRS ) ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( ( DDR - AMS ) ,FirstVNF_CPU ) ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( Min( MUM ,DS ),Max( ( MUR * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / Max( ( Max( Max( CS,MUC ),( ( MUC * RCSe ) / MUC ) ) * MUC ),( RCSe - Max( ( MUM * Min( RMSe ,MLU ) ),( MLU * DS ) ) ) ) ),( ( Max( ( DS / MUC ),DS ) * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + MUC ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.7992700729927007, "obj2": 0.09795255952346768}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( Max( MDR,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,RRS ) ) ) + ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( CS / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( DS + MUC ) ),RMSe ) ) / ( MUR * ( MUR * MUR ) ) ) + Max( ( Min( Min( DS ,CS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * Min( DS ,DS ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6405109489051095, "obj2": 0.2483954620091577}, {"determining": "( Min( ( Min( ( ACS - ( ACS / Max( Max( FirstVNF_Mem_Server,AMS ),FirstVNF_Mem ) ) ) ,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( Const / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( Min( MLU ,MUR ) + Max( ( RRSe / MUC ),DS ) )", "obj1": 0.45255474452554745, "obj2": 0.5271088147134937}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( ( MRS * ( ( FirstVNF_RAM_Server * PN ) + Const ) ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( DS - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 0.6058394160583942, "obj2": 0.2835029566976753}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_CPU / MDR ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) / MDR ) )", "choosing": "( Max( ( Min( MUM ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe * RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - Min( ( ( DS / MUC ) + CS ) ,( MUR * ( CS * MUM ) ) ) ) - RRSe ),DS ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6468993802843437}, {"determining": "( ( ( PN - MDR ) + ( FirstVNF_RAM_Server * ( ( DDR / ( FirstVNF_Mem + MDR ) ) * MDR ) ) ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( RCSe + ( ( CS * ( ( MUR + RCSe ) + ( Max( DS,( RMSe / CS ) ) + Min( MUM ,Min( RRSe ,MUM ) ) ) ) ) + DS ) ) + MUC )", "obj1": 0.6441605839416058, "obj2": 0.24135252208660948}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( DS * MLU ) ) ) )", "obj1": 0.5401459854014599, "obj2": 0.38528806806189153}, {"determining": "( ( ( ( BR * ( ARS * MDR ) ) * ( FirstVNF_Mem - Min( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,ARS ) ) ) / ( AMS * RRS ) ) + ( Min( ( ( ACS / FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( ( Min( DS ,DS ) / RMSe ) * ( RCSe - Min( ( ( ( CS / ( RRSe - MUC ) ) * ( MLU / RCSe ) ) + MUR ) ,Max( DS,( MLU * DS ) ) ) ) ) + ( ( MUR * ( MUM / MUR ) ) + MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5069595696921577}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( Max( CRS,BR ) + BR ) + BR ) ) * FirstVNF_RAM ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ARS * DDR ) ) / ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( PN - DDR ) ) / FirstVNF_RAM_Server ) ) ,( BR - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + ( Max( MUM,MUR ) + RRSe ) ) ) - RRSe ) + Min( RMSe ,Min( Min( ( CS / MLU ) ,DS ) ,( Max( MUC,MUR ) / ( ( MLU * MLU ) + ( CS - MUR ) ) ) ) ) ) ) )", "obj1": 0.9288321167883211, "obj2": 0.024332397158793255}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( ACS + Max( ( RRS / ARS ),BR ) ) - ACS ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + ( ( ( Max( MUR,( ( RRSe / RRSe ) + ( DS * MUC ) ) ) - ( MLU + Max( MUR,DS ) ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.10378489047098466}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,DS ) + CS ) / MUR ) ,( CS + ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( RMSe / RMSe ) ) / MUM ) - ( MUM - Min( DS ,( RMSe - ( ( RMSe * DS ) + RCSe ) ) ) ) ) * Min( Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ,( MUM + Min( MUC ,( RCSe / DS ) ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4150512120717833}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( ( RRSe - ( MLU + ( DS * DS ) ) ) - RRSe ) ) + MUC )", "obj1": 0.48175182481751827, "obj2": 0.4754243933561681}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_Mem ) ,Const ) + MDR ) ) * PN ) + ( PN - MDR ) ) + Min( Max( BR,DDR ) ,PN ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,DS ) + CS ) / MUR ) ,( Max( MUC,MUR ) / RRSe ) ) - ( MUC / RMSe ) ) / MUM ) - ( DS * MUC ) ) * Min( ( MUM + Min( MUC ,( RCSe / DS ) ) ) ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.6861313868613139, "obj2": 0.2026897099054319}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( Max( FirstVNF_Mem_Server,RRS ) * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server * AMS ) - ( ARS - Const ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( Max( DS,RCSe ) ,( MLU + MUR ) ) ) ) - ( ( ( Min( ( Max( ( MUC / RMSe ),MUR ) / DS ) ,( ( Max( MUC,DS ) + CS ) / MUM ) ) + Max( MLU,RMSe ) ) / RCSe ) + Max( MLU,DS ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5235880486496234}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( Min( MUM ,MUR ) ,RMSe ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( ( DS - DS ) ,MUM ) - ( ( CS * MUC ) + ( ( ( ( MUR / ( MUR + RCSe ) ) - Min( DS ,DS ) ) - ( MLU + ( CS - ( MUC - MUR ) ) ) ) - RRSe ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4150512120717833}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + AMS ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem / ACS ) ) * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( MRS ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( MLU + RRSe ) - MLU ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,( ( MUM - RRSe ) + ( ( RMSe * MUC ) + ( MUC / RCSe ) ) ) ) + MLU ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.7591240875912408, "obj2": 0.13078054048258442}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / AMS ) ) + Max( FirstVNF_RAM_Server,( MRS / Max( ( RRS / ACS ),( BR - MRS ) ) ) ) )", "choosing": "( MUC + ( ( ( DS - Min( DS ,RMSe ) ) + RRSe ) + Min( ( ( CS * MLU ) / CS ) ,( MUC + DS ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.23814329831410366}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( Max( AMS,Max( CRS,FirstVNF_CPU_Server ) ) ,( MDR + ( ( FirstVNF_RAM + CRS ) - MRS ) ) ) )", "choosing": "( RCSe + Max( MUC,( Min( Min( ( Max( RRSe,RMSe ) + ( ( RMSe * MUM ) + ( DS - MLU ) ) ) ,( RRSe - ( ( CS / CS ) - RCSe ) ) ) ,MUM ) / RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.46780391853973996}, {"determining": "( ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( ( ( ( CS / ( RMSe - MUC ) ) * ( MLU / RCSe ) ) / ( RRSe * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / MUM ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - RRSe ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.7208029197080292, "obj2": 0.16293292262735556}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / FirstVNF_CPU_Server ),RRS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - FirstVNF_Mem ) )", "choosing": "( ( Min( CS ,Min( RCSe ,( MUC - Min( ( DS * MUR ) ,( MUM + ( RMSe + RCSe ) ) ) ) ) ) * MLU ) * ( Max( MUC,( MUM / Min( MLU ,MUM ) ) ) - MUR ) )", "obj1": 0.3978102189781022, "obj2": 0.6320716753181514}, {"determining": "( ( ( ( BR + FirstVNF_CPU_Server ) + FirstVNF_CPU ) - FirstVNF_Mem ) + Min( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ,( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( MRS ,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + BR ) ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / CS ) + MLU ) ) ),RMSe ) ) / ( ( ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( MLU * MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6240875912408759, "obj2": 0.26337347173775094}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ( BR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( MLU + MUR ) ) ) )", "obj1": 0.5565693430656934, "obj2": 0.3554336759795748}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + AMS ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem / ACS ) ) * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( MRS ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( MLU + RRSe ) - MLU ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,( ( MUM - RRSe ) + ( ( RMSe * MUC ) + ( MUC / RCSe ) ) ) ) + MLU ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.7627737226277372, "obj2": 0.12734617672473822}, {"determining": "( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + AMS ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem / ACS ) ) * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Max( RRS,AMS ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( Min( ( ( ( CS / ( RMSe - MUC ) ) * ( MLU / RCSe ) ) - MUR ) ,Max( DS,( MLU - DS ) ) ) + RRSe ) - MLU ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,( ( MUM - RRSe ) + ( ( RMSe * MUC ) + ( MUC / RCSe ) ) ) ) + MLU ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.948905109489051, "obj2": 0.01592336730583894}, {"determining": "Max( ( Const / PN ),Min( ( Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ARS - ( MDR * FirstVNF_Mem ) ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( DDR * ARS ),FirstVNF_RAM ) / MRS ) ) ) ,( ( ( Max( PN,( MRS + MDR ) ) * Min( AMS ,FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - AMS ) * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ) ) )", "choosing": "( Max( ( Min( CS ,RCSe ) / Min( ( MUM / DS ) ,MUC ) ),RCSe ) * ( ( MUC * MLU ) * DS ) )", "obj1": 0.4744525547445255, "obj2": 0.4904355250929441}, {"determining": "Max( ( RRS + ( MDR / FirstVNF_RAM_Server ) ),Min( ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - ( CRS - ACS ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( AMS * ARS ) ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * PN ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( MLU * DS ) + ( ( ( MUC * ( ( MUM - DS ) * ( Max( ( RRSe / MLU ),( MUR / MUC ) ) / ( ( MUC * CS ) + MLU ) ) ) ) + MLU ) - MLU ) )", "obj1": 0.39963503649635035, "obj2": 0.6314882633665565}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( Min( ( ( Max( MRS,ARS ) * MDR ) * BR ) ,MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / ( CRS * ACS ) ) ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + RMSe ) / MUR ) ,( CS + ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - Max( DS,RRSe ) ) ) - ( DS * ( MUC * MUC ) ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( MUC + RCSe ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.23814329831410366}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( Const - CRS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * Min( ( FirstVNF_Mem + ( ( RRS / PN ) + CRS ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( Min( RMSe ,( CS + MUC ) ) + ( Min( ( RCSe * MUM ) ,DS ) + MUM ) )", "obj1": 0.8485401459854015, "obj2": 0.0663214128112809}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / Min( AMS ,AMS ) ) ),Min( Max( ARS,ACS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( ( MLU - MLU ) / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.677007299270073, "obj2": 0.21227766650233718}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_Mem + RRS ) ) + Min( ( CRS / ARS ) ,( ( ( ( RRS - FirstVNF_Mem ) / ARS ) * ( ( MRS * FirstVNF_RAM_Server ) - ( ( DDR - RRS ) + RRS ) ) ) / ARS ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,Max( ( MLU + MLU ),MUM ) ),( MLU - ( Max( RRSe,MUM ) + MLU ) ) ),RMSe ) ) / ( ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) + ( DS - ( ( Min( ( MLU * MUM ) ,DS ) + MUM ) * RCSe ) ) ) ) + Max( ( Min( Max( RRSe,Max( RRSe,RMSe ) ) ,( Max( MUC,MUR ) / ( ( RRSe - RRSe ) + ( ( RMSe + RCSe ) + DS ) ) ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - Max( MUR,RRSe ) ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5985401459854015, "obj2": 0.29039472458042853}, {"determining": "( ( ( FirstVNF_RAM_Server * ( DDR / DDR ) ) + ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,AMS ) ) ) ) + Min( ( ( ( ( MDR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( AMS ,FirstVNF_RAM ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( Max( RCSe,CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( RMSe ,MUR ) ,RMSe ) ),RMSe ) ) ) ) + ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( RRSe / MUM ) ) )", "obj1": 0.7372262773722628, "obj2": 0.15109545474358008}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * Min( RRS ,PN ) ) * BR ) * MDR ) ,( ( ( ( MDR + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( Const ,FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_Mem + ( BR - DDR ) ) ,( ( FirstVNF_RAM_Server - AMS ) - ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( MUM ,( MLU * CS ) ) + RRSe ) - DS ) + ( ( ( ( ( ( RMSe + DS ) - CS ) + MUM ) + DS ) - CS ) + MUM ) )", "obj1": 0.8156934306569343, "obj2": 0.09128044642740164}, {"determining": "( ( ( FirstVNF_RAM_Server + PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) ) * ( MDR + ( PN - MDR ) ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( MUR * MUR ) + ( ( DS / ( DS / ( CS / MUM ) ) ) - DS ) )", "obj1": 0.635036496350365, "obj2": 0.25265386826601505}, {"determining": "( ( ( ( ( CRS - Min( Const ,BR ) ) - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_CPU_Server + Max( PN,FirstVNF_Mem ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( MUR * ( MUM / MUC ) ) + DS ) + RRSe ) + ( ( RRSe + Max( MUM,MUR ) ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - MLU ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5368216248666824}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) + MUM ) )", "obj1": 0.708029197080292, "obj2": 0.18005162080514903}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( MLU + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) + MUC )", "obj1": 0.4854014598540146, "obj2": 0.47063913979514416}, {"determining": "( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) + ( FirstVNF_CPU - ( MDR / ( CRS / ( ( FirstVNF_CPU + Max( FirstVNF_Mem,( DDR + FirstVNF_RAM_Server ) ) ) * MDR ) ) ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( DS + CS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),( ( DS / Min( RMSe ,( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - MUR ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0011179346497171055}, {"determining": "( ( ( MDR * MRS ) / Min( AMS ,AMS ) ) + ( ( ( CRS / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - ( DS * ( RCSe + DS ) ) ) ) ) ) + ( ( ( CS + DS ) - CS ) + MUM ) )", "obj1": 0.7043795620437956, "obj2": 0.18156668778236282}, {"determining": "( ( ( ( AMS - Max( PN,BR ) ) * ( AMS + FirstVNF_CPU ) ) / ( Min( Max( ( ACS * Const ),( ( DDR / Max( RRS,CRS ) ) / FirstVNF_RAM ) ) ,CRS ) - MDR ) ) + Max( MRS,MRS ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( ( CS / MUR ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,Min( Min( Min( ( RCSe * Max( Max( DS,MUM ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) ,( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4333090978110347}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( Max( ( Const / FirstVNF_CPU ),FirstVNF_Mem ) - MDR ) ) + Min( ( MDR * ( ( ( BR + ( Min( Const ,FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( CRS * FirstVNF_RAM_Server ) * PN ) + ( Max( ( ( ACS - Max( RRS,FirstVNF_Mem ) ) - ACS ),Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ) ) )", "choosing": "( MUC + ( ( ( RMSe - Min( CS ,( MLU - ( MUR * Max( MUM,MUC ) ) ) ) ) + RRSe ) + Min( ( ( ( MUM * ( Max( MUR,MUR ) - MUC ) ) / MUM ) / CS ) ,( MUC + DS ) ) ) )", "obj1": 0.6715328467153284, "obj2": 0.2164716767214464}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * AMS ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( Min( ( ( ACS / Max( RRS,FirstVNF_Mem ) ) - ACS ) ,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ) ) )", "choosing": "( ( MUR * MUR ) + Max( ( ( ( ( DS - Min( DS ,RMSe ) ) + RRSe ) + Min( ( ( CS * MLU ) / CS ) ,( MUC + DS ) ) ) / ( MLU + MUR ) ),DS ) )", "obj1": 0.8047445255474452, "obj2": 0.09631093354027899}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.6295620437956204, "obj2": 0.25738544919477524}], "47": [{"determining": "( FirstVNF_RAM_Server + ( ( ( Max( FirstVNF_CPU,( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_RAM_Server / MRS ) ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( CS - RMSe ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + DS ) ) )", "obj1": 0.38686131386861317, "obj2": 0.663359110858801}, {"determining": "( ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + Min( ( MDR * MRS ) ,( ( ( FirstVNF_CPU_Server * Max( Min( RRS ,( ACS * FirstVNF_CPU_Server ) ),ARS ) ) * ( Max( FirstVNF_CPU,( FirstVNF_Mem / MDR ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( MLU + ( Min( MUM ,( ( RRSe - MUC ) / MUC ) ) + RRSe ) ) + ( CS - ( ( DS + MUM ) / MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( ( AMS - PN ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( Max( CRS,BR ) + BR ) + BR ) ) * FirstVNF_RAM ) ) + Min( ( ( ( Min( AMS ,( Min( FirstVNF_Mem ,MDR ) - BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) / ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( MDR * BR ) ) )", "choosing": "( ( Max( MUR,MUM ) * RRSe ) + ( Min( Min( DS ,( ( RMSe - ( Max( DS,CS ) * ( MUR * MUR ) ) ) * MUC ) ) ,MUM ) - ( MUC + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server / MRS ) ) * BR ) * MDR ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * DS ) ) ) / ( RRSe * ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ) ) ) + ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( RRSe / MUM ) ) )", "obj1": 0.38686131386861317, "obj2": 0.663359110858801}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( ( ( ( CS / ( RMSe - MUC ) ) * ( MLU / RCSe ) ) / ( RRSe * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / MUM ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - RRSe ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.7208029197080292, "obj2": 0.16293292262735556}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - BR ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - AMS ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * RRSe ) ) ) - ( Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) + ( CS * MUC ) ) ) )", "obj1": 0.5693430656934306, "obj2": 0.3424832915160828}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + ( ( ( DS + DS ) * ( ( ( ( ( MUM + MLU ) - ( RRSe - MUC ) ) - Min( MLU ,Min( CS ,RCSe ) ) ) - ( RCSe + MLU ) ) - MUC ) ) / ( RMSe - RCSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( Max( ( FirstVNF_Mem_Server * ARS ),( MDR - ( MRS - FirstVNF_Mem_Server ) ) ) + Min( ( MRS - ACS ) ,RRS ) )", "choosing": "( ( ( RRSe * MUR ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) + ( Max( MUM,DS ) + RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5723157656738803}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( AMS - Max( FirstVNF_RAM_Server,ACS ) ) ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( ( ( CS + RMSe ) - RMSe ) ,RCSe ) * MLU ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6605839416058394, "obj2": 0.2268763980845105}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) - ( PN - MDR ) ) + Min( ( Min( MRS ,Const ) * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / FirstVNF_CPU_Server ),RRS ) ) * Min( FirstVNF_CPU ,ACS ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / ( Min( MUM ,DS ) / ( Min( DS ,DS ) + MLU ) ) ),( Max( ( ( MUR / CS ) * ( MUC / Max( RMSe,DS ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ) )", "obj1": 0.9708029197080292, "obj2": 0.007461295861498702}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) * ( ( FirstVNF_CPU * DDR ) / BR ) ) ) / ( Max( FirstVNF_RAM_Server,BR ) + Const ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Max( RCSe,( ( Max( MUM,MUR ) - RCSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( Max( DS,RCSe ) ,( MLU + Max( ( MUC - MUC ),( RRSe - ( MUC - RMSe ) ) ) ) ) ) ) - ( ( ( ( ( MUC / MUC ) - MUR ) + ( RCSe / ( RCSe / MUC ) ) ) * MUC ) + Max( MLU,DS ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( Min( FirstVNF_RAM_Server ,Min( Const ,MDR ) ) + Min( ( ( ( ARS * ( AMS * PN ) ) * BR ) * MDR ) ,( ( Min( ( Max( Min( FirstVNF_CPU ,CRS ),FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,BR ) ) ) ,( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe * ( Min( CS ,DS ) / ( RCSe + MLU ) ) ) ) / ( RCSe - CS ) ) / ( RRSe * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / DS ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( CS ,MUC ) ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8558394160583942, "obj2": 0.06190143025553726}, {"determining": "( ( ( ( ( CRS - Min( Const ,BR ) ) - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_CPU_Server + Max( PN,FirstVNF_Mem ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( MUR * ( MUM / MUC ) ) + DS ) + RRSe ) + ( ( RRSe + Max( MUM,MUR ) ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - MLU ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5368216248666824}, {"determining": "( Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_Mem_Server - ( ACS / FirstVNF_Mem ) ) * ACS ) + ( FirstVNF_CPU + AMS ) ) ) * DDR ) ,( ( BR * ( ( Const / Min( DDR ,( MDR / PN ) ) ) / ARS ) ) * MRS ) ) + ( ( ( AMS / MDR ) * PN ) + ( ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) - MDR ) ) )", "choosing": "( ( Max( ( MUC * RMSe ),MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + Max( ( ( Max( MUR,( ( MLU / RRSe ) + ( DS * MLU ) ) ) - ( MLU + Max( MUM,DS ) ) ) + Max( ( DS + ( ( RRSe - RCSe ) * DS ) ),MLU ) ),( MUR * MUC ) ) ) )", "obj1": 0.9543795620437956, "obj2": 0.01385640876720303}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Max( ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ),Min( ( FirstVNF_Mem / MDR ) ,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / ( Const + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( DDR / PN ) ) ) ) ,( AMS - BR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( ( CS / RCSe ) * MLU ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ACS ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( ( Max( CRS,FirstVNF_RAM_Server ) - PN ) + ( Min( RRS ,FirstVNF_Mem_Server ) / DDR ) ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - DDR ) ,( ( ( ( BR + Max( MDR,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS * ( PN + FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( MLU + ( ( CS / ( MUR * MLU ) ) / Min( ( MUM - MLU ) ,Max( MUM,( RMSe * MUR ) ) ) ) ),Max( MUR,( ( RMSe + Max( Max( RRSe,DS ),Max( MUC,RMSe ) ) ) - MUM ) ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7116788321167883, "obj2": 0.17591911961781034}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( FirstVNF_Mem - Max( ARS,FirstVNF_RAM_Server ) ) - RRS ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( RRS + ( MDR - Min( FirstVNF_CPU ,PN ) ) ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,MDR ) ) * Min( ( DDR * Const ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( DS * RCSe ) ) + ( MLU - Max( DS,( ( CS / RCSe ) * Max( MUC,Max( Min( RMSe ,Max( RCSe,MLU ) ),MLU ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6113317375789231}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( MRS - Min( ( AMS - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( MRS,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( Min( RMSe ,DS ) + ( ( MUC - MLU ) - CS ) ) ) + ( CS + RMSe ) )", "obj1": 0.614963503649635, "obj2": 0.2751376587968387}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,ARS ) + FirstVNF_RAM_Server ) ) / MDR ) * Max( ARS,( PN + Min( Const ,( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ) ) ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server / ( ( PN / FirstVNF_CPU ) * ( ARS - FirstVNF_Mem_Server ) ) ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - Max( MUM,RRSe ) ) + ( MUC * MUC ) ) / ( ( DS - Max( ( DS + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) + MUM ) )", "obj1": 0.4708029197080292, "obj2": 0.49829722313659125}, {"determining": "( ( ( ( BR * ( ARS * MDR ) ) * ( FirstVNF_Mem - Min( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,ARS ) ) ) / ( AMS * RRS ) ) + ( Min( ( ( ACS / FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( ( Min( DS ,DS ) / RMSe ) * ( RCSe - Min( ( ( ( CS / ( RRSe - MUC ) ) * ( MLU / RCSe ) ) + MUR ) ,Max( DS,( MLU * DS ) ) ) ) ) + ( ( MUR * ( MUM / MUR ) ) + MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5069595696921577}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_RAM_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( ( ( ( ( MDR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * Min( MUM ,RRSe ) ) ) ) / ( RRSe * ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ) ) ) + ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( RRSe / MUM ) ) )", "obj1": 0.7335766423357665, "obj2": 0.15383874901935624}, {"determining": "( Min( ( Min( ( ( ACS / Max( RRS,Min( FirstVNF_CPU ,ACS ) ) ) - ACS ) ,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( Const / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) - ( ( ( Max( MUR,( ( RRSe / RRSe ) + ( DS * MUC ) ) ) - ( MLU + MUR ) ) + Max( ( ( MUC + DS ) + DS ),MLU ) ) + ( MUR * ( MUR * MUR ) ) ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5455254012037615}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / FirstVNF_CPU_Server ),RRS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.30533937773292386}, {"determining": "( ( ( ( BR + ( ( DDR - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / BR ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( FirstVNF_CPU_Server / BR ) ,MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM - FirstVNF_RAM ) - MDR ) ) )", "choosing": "( ( ( MUR - ( MLU + ( DS / Min( MUR ,Max( ( MUC / MUC ),MUC ) ) ) ) ) + ( RRSe + ( Min( MUM ,MUR ) + RRSe ) ) ) * ( DS + ( Max( DS,Max( RCSe,MUM ) ) + Min( Max( CS,CS ) ,MLU ) ) ) )", "obj1": 0.8759124087591241, "obj2": 0.05539817586653941}, {"determining": "( ( ( ( FirstVNF_RAM_Server - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( ( ( ( Min( AMS ,AMS ) + ( Max( ARS,MDR ) * ( MDR / DDR ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( MUC - MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - Min( CS ,RRSe ) ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( ( ( FirstVNF_CPU * PN ) + ( CRS / MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) * ( FirstVNF_Mem_Server / MRS ) ) / MDR ) ,( ( ( CRS * ( RRS * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) / MDR ) ) )", "choosing": "( ( MUM + MUR ) + ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( DS + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) )", "obj1": 0.8704379562043796, "obj2": 0.0576933700217704}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) * MDR ) * BR ) * ( Const * MDR ) ) ,( ( ( Max( BR,( ( FirstVNF_Mem_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Max( MDR,( MDR - FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( Min( MUR ,Min( RCSe ,( MUC - ( ( MUM + RRSe ) / ( DS + RMSe ) ) ) ) ) * MLU ) * ( Max( MUC,( RMSe - MLU ) ) - MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6209613042832636}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( Const + Max( ( ARS / RRS ),BR ) ) - ACS ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + ( ( ARS - FirstVNF_CPU_Server ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + ( ( ( ( RRSe * CS ) - ( MLU + Max( ( RRSe * CS ),MUR ) ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) * ( MUR * MUC ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4575221502541406}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Max( Const,PN ) - Min( FirstVNF_CPU ,BR ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MLU + Max( Min( ( ( ( RMSe / RMSe ) + MLU ) * Max( MLU,DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) ) / Max( ( MLU / ( MUR + ( RCSe - RRSe ) ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MUM ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( ACS / FirstVNF_Mem_Server ) - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + FirstVNF_RAM_Server ) * MDR ) ,( MDR / ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( MRS + Const ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( MUC,( Min( CS ,MUM ) / ( CS + Max( ( RRSe + RCSe ),Min( ( RRSe * MLU ) ,MUC ) ) ) ) ) + MLU )", "obj1": 0.49635036496350365, "obj2": 0.4522558692545822}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / MDR ) ) + Min( ( MDR * MDR ) ,( Min( ( FirstVNF_CPU + BR ) ,MRS ) - Max( RRS,( Max( RRS,AMS ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( CS * ( RMSe * CS ) ) + ( CS + ( ( Max( ( ( MLU - CS ) * ( MUC + RCSe ) ),MLU ) + MUM ) + DS ) ) ) + MUC )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( ( ( CRS + PN ) * ( RRS / ( FirstVNF_Mem / PN ) ) ) - Max( PN,MDR ) ) + Min( ( ( RRS - Const ) + FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_Mem,DDR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( DS ,Max( CS,( MUM / MUC ) ) ) / MUC ) * ( Min( ( ( DS - MLU ) - MUR ) ,Max( DS,( MLU - DS ) ) ) - MUR ) ) + ( Min( ( MLU * MLU ) ,( MLU * CS ) ) - ( ( RRSe - ( RRSe - ( Min( ( MUC * RCSe ) ,MLU ) / Max( CS,MLU ) ) ) ) + ( CS * MUR ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.40670677624697654}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + ( Max( CRS,BR ) + BR ) ) ) * FirstVNF_RAM ) ) + Min( ( ( Min( Min( AMS ,Max( DDR,ACS ) ) ,( ( ( MRS * Const ) - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) + ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( MDR - ( FirstVNF_CPU / MDR ) ) ) )", "choosing": "( ( Max( DS,MUR ) + RRSe ) + ( ( Min( DS ,DS ) * Max( RRSe,Max( Min( ( MUM - ( MUC - DS ) ) ,RRSe ),MUR ) ) ) - ( ( ( ( Min( DS ,( MUC / CS ) ) + ( Max( MUM,MUR ) + RRSe ) ) - RRSe ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - ( ( Max( DS,RRSe ) - ( CS - MUC ) ) * MUC ) ) ,Min( Min( ( CS + MLU ) ,DS ) ,( Max( MUC,MUR ) + RRSe ) ) ) ) ) )", "obj1": 0.9361313868613139, "obj2": 0.021037658706304856}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( ( Min( FirstVNF_CPU ,ARS ) * ARS ) + BR ) ),( ( DDR + FirstVNF_RAM_Server ) - MDR ) ) + Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * Min( RMSe ,CS ) ) ) ) - ( ( ( ( ( MLU - ( RCSe + RMSe ) ) / ( ( MUM + CS ) - MUR ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.595989557812868}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( ( ( ( AMS - Max( PN,BR ) ) * ( AMS + FirstVNF_CPU ) ) / ( Min( Max( ( ACS * Const ),( ( DDR / Max( RRS,CRS ) ) / FirstVNF_RAM ) ) ,CRS ) - MDR ) ) + Max( MRS,MRS ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( ( CS / MUR ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,Min( Min( Min( ( RCSe * Max( Max( DS,MUM ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) ,( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4333090978110347}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - Max( RRS,AMS ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( RRS ,Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,DS ) + RRSe ) + ( RCSe - ( DS + MLU ) ) )", "obj1": 0.7481751824817519, "obj2": 0.1402615498242008}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - ( MDR / ( CRS / ( ( FirstVNF_CPU + Max( FirstVNF_Mem,( DDR + FirstVNF_RAM_Server ) ) ) * MDR ) ) ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( DS + CS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),( ( DS / Min( RMSe ,CS ) ) - MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6000862591395966}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS + MUC ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.5291970802919708, "obj2": 0.3975462911290833}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6468993802843437}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) + ( PN - MDR ) ) + Min( ( ( ( PN * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - ( FirstVNF_RAM_Server * AMS ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + MDR ) ),RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + DS ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / Max( ( MLU / MUM ),( MUR * MUM ) ) ) - ( DS * DS ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) ) )", "obj1": 0.8941605839416058, "obj2": 0.04362003190892363}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( FirstVNF_Mem * AMS ) )", "choosing": "( ( MUC / ( ( ( ( ( DS - Max( DS,MUR ) ) + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS / RMSe ) )", "obj1": 0.6678832116788321, "obj2": 0.2235087860950485}, {"determining": "( Min( ( Min( ( ( ACS + Min( ( RRS / ARS ) ,BR ) ) - ACS ) ,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + ( ( ( Max( MUR,( ( RRSe / RRSe ) + ( DS * MUC ) ) ) - ( MLU + Max( MUR,( RRSe * CS ) ) ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.5817390245261118}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( ARS / BR ) - Min( MRS ,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( ( ( RRSe / MUM ) + MLU ) - MLU ) ),( ( CS / Min( ( RCSe / MUR ) ,( CS + MUR ) ) ) / RRSe ) ) ) / ( ( ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( MLU + MUR ) ) - RCSe ),DS ) ) )", "obj1": 0.6222627737226277, "obj2": 0.26857424088300885}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - FirstVNF_Mem ) )", "choosing": "( ( Min( CS ,Min( RCSe ,( MUC - Min( ( DS * MUR ) ,( MUM + ( RMSe + RCSe ) ) ) ) ) ) * MLU ) * ( Max( MUC,( MUM / Min( MLU ,MUM ) ) ) - MUR ) )", "obj1": 0.3978102189781022, "obj2": 0.6320716753181514}, {"determining": "( ( ( ( ( PN - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) * PN ) + Max( ( ( Const - FirstVNF_Mem ) * FirstVNF_Mem_Server ),CRS ) ) + Min( Max( BR,DDR ) ,PN ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,DS ) + CS ) / MUR ) ,( Max( MUC,MUR ) / RRSe ) ) - Min( MUC ,RMSe ) ) / MUM ) - ( DS * MUC ) ) * Min( ( MUM + Min( MUC ,( RCSe / DS ) ) ) ,Min( Min( ( ( MUC / RRSe ) * MLU ) ,RCSe ) ,( ( MUM + ( DS * MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7518248175182481, "obj2": 0.13346019513124177}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( Max( MDR,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,RRS ) ) ) + ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( CS / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( DS + MUC ) ),RMSe ) ) / ( MUR * ( MUR * MUR ) ) ) + Max( ( Min( Min( DS ,CS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * Min( DS ,DS ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6405109489051095, "obj2": 0.2483954620091577}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_CPU / MDR ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) / MDR ) )", "choosing": "( Max( ( Min( MUM ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe * RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - Min( ( ( DS / MUC ) + CS ) ,( MUR * ( CS * MUM ) ) ) ) - RRSe ),DS ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6468993802843437}, {"determining": "( ( ( PN - MDR ) + ( FirstVNF_RAM_Server * ( ( DDR / ( FirstVNF_Mem + MDR ) ) * MDR ) ) ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( RCSe + ( ( CS * ( ( MUR + RCSe ) + ( Max( DS,( RMSe / CS ) ) + Min( MUM ,Min( RRSe ,MUM ) ) ) ) ) + DS ) ) + MUC )", "obj1": 0.6441605839416058, "obj2": 0.24135252208660948}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( DS * MLU ) ) ) )", "obj1": 0.5401459854014599, "obj2": 0.38528806806189153}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( Min( FirstVNF_CPU ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + Min( Min( DS ,DS ) ,MUM ) ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) + MUM ) )", "obj1": 0.6970802919708029, "obj2": 0.19004210303773983}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( Max( CRS,BR ) + BR ) + BR ) ) * FirstVNF_RAM ) ) + Min( ( ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ARS * DDR ) ) / ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( PN - DDR ) ) / FirstVNF_RAM_Server ) ) ,( BR - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( RRSe - ( MLU + ( Max( MUM,MUR ) + RRSe ) ) ) - RRSe ) + Min( RMSe ,Min( Min( ( CS / MLU ) ,DS ) ,( Max( MUC,MUR ) / ( ( MLU * MLU ) + ( CS - MUR ) ) ) ) ) ) ) )", "obj1": 0.9288321167883211, "obj2": 0.024332397158793255}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / ( ARS * ( AMS * PN ) ) ) ) )", "choosing": "( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / DS ) + ( Min( ( DS - DS ) ,MUM ) - ( ( CS * MUC ) + ( ( ( ( MUR / ( MUR + RCSe ) ) - Min( DS ,DS ) ) - ( MLU + ( CS - ( MUC - MUR ) ) ) ) - RRSe ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4150512120717833}, {"determining": "( ( ( ( BR + FirstVNF_CPU_Server ) + FirstVNF_CPU ) - FirstVNF_Mem ) + Min( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ,( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( MRS ,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + BR ) ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / CS ) + MLU ) ) ),RMSe ) ) / ( ( ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( MLU * MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6240875912408759, "obj2": 0.26337347173775094}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( ( ( Max( MDR,ACS ) - FirstVNF_Mem ) + Max( ( MDR / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) ) / ( RRS - BR ) ) ,( FirstVNF_CPU_Server - MDR ) ) + Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "Max( RMSe,( MUR - ( ( MUR + ( Max( MLU,DS ) / MUR ) ) - ( ( ( CS / DS ) - RCSe ) - CS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08607328129706897}, {"determining": "Max( ( Const / PN ),Min( ( Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ARS - ( MDR * FirstVNF_Mem ) ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( DDR * ARS ),FirstVNF_RAM ) / MRS ) ) ) ,( ( ( Max( PN,( MRS + MDR ) ) * Min( AMS ,FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - AMS ) * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ) ) )", "choosing": "( Max( ( Min( CS ,RCSe ) / Min( ( MUM / DS ) ,MUC ) ),RCSe ) * ( ( MUC * MLU ) * DS ) )", "obj1": 0.4744525547445255, "obj2": 0.4904355250929441}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - ( MDR / FirstVNF_CPU_Server ) ) ) + Min( ( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,FirstVNF_Mem ) ) ) / ( MDR / FirstVNF_RAM ) ) ,( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU / ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) - CS ) ) ) + ( ( RRSe + MUR ) / RCSe ) )", "obj1": 0.6076642335766423, "obj2": 0.2834133362872291}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,DS ) + CS ) / MUR ) ,( CS + ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( RMSe / RMSe ) ) / MUM ) - ( MUM - Min( DS ,( RMSe - ( ( RMSe * DS ) + RCSe ) ) ) ) ) * Min( Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ,( MUM + Min( MUC ,( RCSe / DS ) ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4150512120717833}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( Max( ( RRS - FirstVNF_Mem_Server ),FirstVNF_CPU ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RMSe ) + ( Min( ( RCSe * MUM ) ,MUC ) + MUM ) )", "obj1": 0.8485401459854015, "obj2": 0.06632141281128089}, {"determining": "( ( ( FirstVNF_RAM_Server + PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) ) * ( MDR + ( PN - MDR ) ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( MUR * MUR ) + ( ( DS / ( DS / ( CS / MUM ) ) ) - DS ) )", "obj1": 0.635036496350365, "obj2": 0.25265386826601505}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / AMS ) ) + Max( FirstVNF_RAM_Server,( MRS / Max( ( RRS / ACS ),( BR - MRS ) ) ) ) )", "choosing": "( MUC + ( ( ( DS - Min( DS ,RMSe ) ) + RRSe ) + Min( ( ( CS * MLU ) / CS ) ,( MUC + DS ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.23814329831410366}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( Max( ( Const / FirstVNF_CPU ),FirstVNF_Mem ) - MDR ) ) + Min( ( MDR * ( ( ( BR + ( Min( Const ,FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( CRS * FirstVNF_RAM_Server ) * PN ) + ( Max( ( ( ACS - Max( RRS,FirstVNF_Mem ) ) - ACS ),Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ) ) )", "choosing": "( MUC + ( ( ( RMSe - Min( CS ,( MLU - ( MUR * Max( MUM,MUC ) ) ) ) ) + RRSe ) + Min( ( ( ( MUM * ( Max( MUR,MUR ) - MUC ) ) / MUM ) / CS ) ,( MUC + DS ) ) ) )", "obj1": 0.6715328467153284, "obj2": 0.2164716767214464}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( Max( AMS,Max( CRS,FirstVNF_CPU_Server ) ) ,( MDR + ( ( FirstVNF_RAM + CRS ) - MRS ) ) ) )", "choosing": "( RCSe + Max( MUC,( Min( Min( ( Max( RRSe,RMSe ) + ( ( RMSe * MUM ) + ( DS - MLU ) ) ) ,( RRSe - ( ( CS / CS ) - RCSe ) ) ) ,MUM ) / RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.46780391853973996}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS + MUC ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.5273722627737226, "obj2": 0.40237882390195634}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( ( RRSe - ( MLU + ( DS * DS ) ) ) - RRSe ) ) + MUC )", "obj1": 0.48175182481751827, "obj2": 0.4754243933561681}, {"determining": "( ( Min( ( CRS * Const ) ,CRS ) + ( PN - MDR ) ) + Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( RRS / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem_Server ,( Max( AMS,ARS ) + BR ) ) + ( ( PN - MDR ) - MDR ) ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / MDR ) ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM - Max( Max( Min( CS ,( RMSe + MUM ) ),( MLU - ( ( RRSe / MUC ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + ( MUC + MUR ) )", "obj1": 0.7645985401459854, "obj2": 0.12094156345758214}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) * BR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( RRS - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.833941605839416, "obj2": 0.07628536524375885}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( ( MDR * RRS ),CRS ) / ( ( Const * DDR ) - BR ) ) ,Min( ARS ,BR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( RMSe * Min( Max( MUR,MUR ) ,RMSe ) ) ) ) - ( ( ( ( ( MUR - ( MUM + CS ) ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5602189781021898, "obj2": 0.34750945858811483}, {"determining": "( ( ( ( Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) / MDR ) * PN ) + ( PN - MDR ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - RCSe ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.9799270072992701, "obj2": 0.0027934018209464415}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( BR * ( ARS * MDR ) ) * MDR ) ,( ( ( ( BR + Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,( FirstVNF_CPU - AMS ) ) ) * Max( Const,BR ) ) * Min( ( FirstVNF_Mem + ( BR + CRS ) ) ,( MRS - ( ( FirstVNF_CPU / Const ) / FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( MUR / RRSe ) + Max( ( RMSe + RCSe ),Max( Min( DS ,CS ),( ( CS / ( ( MUM / MUR ) * ( DS - ( RRSe / MUM ) ) ) ) + RMSe ) ) ) )", "obj1": 0.9470802919708029, "obj2": 0.019673477746293633}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.6295620437956204, "obj2": 0.25738544919477524}, {"determining": "Max( ( RRS + ( MDR / FirstVNF_RAM_Server ) ),Min( ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - ( CRS - ACS ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( AMS * ARS ) ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * PN ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( MLU * DS ) + ( ( ( MUC * ( ( MUM - DS ) * ( Max( ( RRSe / MLU ),( MUR / MUC ) ) / ( ( MUC * CS ) + MLU ) ) ) ) + MLU ) - MLU ) )", "obj1": 0.39963503649635035, "obj2": 0.6314882633665565}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( Min( ( ( Max( MRS,ARS ) * MDR ) * BR ) ,MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / ( CRS * ACS ) ) ) )", "choosing": "( ( ( MUM / ( Min( ( ( Min( CS ,RCSe ) + RMSe ) / MUR ) ,( CS + ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - Max( DS,RRSe ) ) ) - ( DS * ( MUC * MUC ) ) ) * Min( DS ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / RCSe ) / ( RRSe + ( ( MUC + RCSe ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.6496350364963503, "obj2": 0.23814329831410366}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / MLU ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.5675182481751825, "obj2": 0.3425221976230662}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / Min( AMS ,AMS ) ) ),Min( Max( ARS,ACS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( ( ( MLU + MLU ) + MUM ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( ( MLU - MLU ) / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.8467153284671532, "obj2": 0.06939411802034018}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_Mem + RRS ) ) + Min( ( CRS / ARS ) ,( ( ( ( RRS - FirstVNF_Mem ) / ARS ) * ( ( MRS * FirstVNF_RAM_Server ) - ( ( DDR - RRS ) + RRS ) ) ) / ARS ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,Max( ( MLU + MLU ),MUM ) ),( MLU - ( Max( RRSe,MUM ) + MLU ) ) ),RMSe ) ) / ( ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) + ( DS - ( ( Min( ( MLU * MUM ) ,DS ) + MUM ) * RCSe ) ) ) ) + Max( ( Min( Max( RRSe,Max( RRSe,RMSe ) ) ,( Max( MUC,MUR ) / ( ( RRSe - RRSe ) + ( ( RMSe + RCSe ) + DS ) ) ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - Max( MUR,RRSe ) ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5985401459854015, "obj2": 0.29039472458042853}, {"determining": "( ( ( ( RRS / PN ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - FirstVNF_Mem ) ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_RAM * PN ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( ARS * MDR ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Min( ( MUC * MUR ) ,MUM ) - ( ( ( RRSe - ( Min( DS ,MLU ) + Max( MUM,RRSe ) ) ) - RRSe ) + ( ( MUR * Min( CS ,RMSe ) ) * MUC ) ) ) + ( Max( MUM,MUR ) + RRSe ) ) )", "obj1": 0.8266423357664233, "obj2": 0.08467633361769543}, {"determining": "( ( RRS / MDR ) + ( ( ( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) + BR ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * PN ) )", "choosing": "( ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUC ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - MLU ) + ( Min( Min( MUR ,Min( CS ,MLU ) ) ,Max( MUM,MUC ) ) * MUC ) ) ) ) + ( Max( MUM,MUR ) + RRSe ) )", "obj1": 0.7408759124087592, "obj2": 0.14512380753517656}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( CRS ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) ) * Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Min( RMSe ,( Max( RCSe,MUC ) + DS ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RCSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.45985401459854014, "obj2": 0.5166265979430197}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ,RRS ) - FirstVNF_Mem ) ,( ( ( Min( Max( CRS,FirstVNF_Mem ) ,( RRS + Min( RRS ,FirstVNF_CPU_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( RCSe * RRSe ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + Min( Min( DS ,DS ) ,RMSe ) ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) * MUM ) )", "obj1": 0.7007299270072993, "obj2": 0.1854078889491354}, {"determining": "( Max( Min( MRS ,FirstVNF_CPU ),( PN - MDR ) ) + Min( Min( AMS ,( CRS * FirstVNF_RAM ) ) ,( ( ( ( BR + BR ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / ( ( FirstVNF_CPU + Min( ( ( FirstVNF_Mem_Server * MDR ) * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU + CS ) ) * ( ( ( RMSe / CS ) - ( MLU * MUR ) ) - ( ( RMSe / RMSe ) + ( ( Max( RRSe,DS ) - ( RRSe - ( DS - CS ) ) ) + ( MUM / MUR ) ) ) ) ) + Max( MUC,Min( MUR ,( ( DS - Min( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ,RMSe ) ) * Min( ( CS / CS ) ,Max( ( RMSe / MUM ),MUR ) ) ) ) ) )", "obj1": 0.7956204379562044, "obj2": 0.09934558560313111}, {"determining": "( ( ( FirstVNF_RAM_Server / ( MRS / FirstVNF_RAM ) ) + AMS ) + ( ( PN - MDR ) + ( ( FirstVNF_RAM_Server / MDR ) * PN ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( Min( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) ,Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( MLU * ( MUR * RCSe ) ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5271088147134937}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) + MUM ) )", "obj1": 0.708029197080292, "obj2": 0.18005162080514903}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( MLU + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) + MUC )", "obj1": 0.4854014598540146, "obj2": 0.47063913979514416}, {"determining": "( ( ( ( FirstVNF_Mem_Server * AMS ) * FirstVNF_Mem_Server ) + ( PN - MDR ) ) + Min( Max( BR,DDR ) ,PN ) )", "choosing": "( ( MLU - Max( ( DS * ( MUC - Max( Min( RMSe ,( MUM * RCSe ) ),MLU ) ) ),DS ) ) + ( MUC / ( DS * RCSe ) ) )", "obj1": 0.6861313868613139, "obj2": 0.2026897099054319}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_Mem ) ,Const ) + MDR ) ) * PN ) + ( PN - MDR ) ) + Min( Max( BR,DDR ) ,PN ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,DS ) + CS ) / MUR ) ,( Max( MUC,MUR ) / RRSe ) ) - ( MUC / RMSe ) ) / MUM ) - ( DS * MUC ) ) * Min( ( MUM + Min( MUC ,( RCSe / DS ) ) ) ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.6861313868613139, "obj2": 0.2026897099054319}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - MDR ) ) + Min( ( MDR * ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( MDR - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( Max( ARS,ACS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( ( ( ( RCSe - CS ) * RMSe ) * ( RMSe / RCSe ) ) ,MUM ) / RRSe ),( Max( MUM,MUR ) + RRSe ) ) )", "obj1": 0.9945255474452555, "obj2": 0.0007618368602581206}, {"determining": "( ( ( MDR * MRS ) / Min( AMS ,AMS ) ) + ( ( ( CRS / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - ( DS * ( RCSe + DS ) ) ) ) ) ) + ( ( ( CS + DS ) - CS ) + MUM ) )", "obj1": 0.7043795620437956, "obj2": 0.18156668778236282}, {"determining": "( ( ( ( BR + ( ( Max( ( RRS / ARS ),BR ) - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU + AMS ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem / ACS ) ) * ACS ) ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( MRS ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( BR - MDR ) ) )", "choosing": "( ( ( MLU + RRSe ) - MLU ) * ( ( MUR - ( MLU + MUR ) ) - ( ( Max( MUM,( Min( Min( DS ,DS ) ,RMSe ) + ( ( RMSe * MUC ) + ( MUC / RCSe ) ) ) ) + MLU ) + ( Max( MUM,MUR ) + RRSe ) ) ) )", "obj1": 0.7718978102189781, "obj2": 0.12060402949016191}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ) * MDR ) * MDR ) ,( ( ( ( BR + ( MRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( Max( MUC,( Min( ( ( RMSe + DS ) - CS ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.5529197080291971, "obj2": 0.3621868660592402}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( PN / ( MRS + PN ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( ( Min( DS ,DS ) / ( Max( MUC,Min( DS ,RMSe ) ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6897810218978102, "obj2": 0.1990844495131966}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / Const ) ) ,RRS ) ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( ( DDR - AMS ) ,FirstVNF_CPU ) ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( Min( MUM ,DS ),Max( ( MUR * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / Max( ( Max( Max( CS,MUC ),( ( MUC * RCSe ) / MUC ) ) * MUC ),( RCSe - Max( ( MUM * Min( RMSe ,MLU ) ),( MLU * DS ) ) ) ) ),( ( Max( ( DS / MUC ),DS ) * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + MUC ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.7992700729927007, "obj2": 0.09795255952346767}, {"determining": "( Min( ( Min( PN ,FirstVNF_RAM_Server ) - MDR ) ,( ( ( ( BR + ( MRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( RCSe + Max( MUC,( Max( Max( ( ( RRSe * MUR ) - DS ),( RMSe + RMSe ) ),Min( MUM ,( MUC / RCSe ) ) ) / RRSe ) ) )", "obj1": 0.5529197080291971, "obj2": 0.3621868660592402}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}], "48": [{"determining": "( FirstVNF_RAM_Server + ( ( ( Max( FirstVNF_CPU,( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_RAM_Server / MRS ) ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( CS - RMSe ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + DS ) ) )", "obj1": 0.38686131386861317, "obj2": 0.663359110858801}, {"determining": "( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( Min( FirstVNF_CPU ,ACS ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / FirstVNF_CPU_Server ),RRS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( RCSe + MLU ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( Min( DS ,DS ) + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - AMS ) - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + Min( ( MDR * MRS ) ,( ( ( FirstVNF_CPU_Server * Max( Min( RRS ,( ACS * FirstVNF_CPU_Server ) ),ARS ) ) * ( Max( FirstVNF_CPU,( FirstVNF_Mem / MDR ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( MLU + ( Min( MUM ,( ( RRSe - MUC ) / MUC ) ) + RRSe ) ) + ( CS - ( ( DS + MUM ) / MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server / MRS ) ) * BR ) * MDR ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( Max( RRSe,MUR ) - MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.38686131386861317, "obj2": 0.663359110858801}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( ( CS - ( MUC - MUR ) ) - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.5675182481751825, "obj2": 0.3365310327052935}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) + Min( ( MDR * MDR ) ,( ( MDR * Min( Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ,RRS ) ) / MDR ) ) )", "choosing": "( ( ( ( CS / ( RMSe - MUC ) ) * ( MLU / RCSe ) ) / ( RRSe * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / MUM ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - RRSe ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.7208029197080292, "obj2": 0.16293292262735556}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( ( ( Max( MDR,ACS ) - FirstVNF_Mem ) + Max( ( MDR / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) ) / ( RRS - BR ) ) ,( FirstVNF_CPU_Server - MDR ) ) + Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "Max( RMSe,( MUR - ( ( MUR + ( Max( MLU,DS ) / MUR ) ) - ( ( ( CS / DS ) - RCSe ) - CS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08607328129706897}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( ( MDR * RRS ),CRS ) / ( ( Const * DDR ) - BR ) ) ,Min( ARS ,BR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( RMSe * Min( Max( MUR,MUR ) ,RMSe ) ) ) ) - ( ( ( ( ( MUR - ( MUM + CS ) ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5602189781021898, "obj2": 0.34750945858811483}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( ( ( PN - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) * PN ) + Max( ( ( Const - FirstVNF_Mem ) * FirstVNF_Mem_Server ),CRS ) ) + Min( Max( BR,DDR ) ,PN ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,DS ) + CS ) / MUR ) ,( Max( MUC,MUR ) / RRSe ) ) - Min( MUC ,RMSe ) ) / MUM ) - ( DS * MUC ) ) * Min( ( MUM + Min( MUC ,( RCSe / DS ) ) ) ,Min( Min( ( ( MUC / RRSe ) * MLU ) ,RCSe ) ,( ( MUM + ( DS * MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7518248175182481, "obj2": 0.13346019513124177}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Max( Const,PN ) - Min( FirstVNF_CPU ,BR ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MLU + Max( Min( ( ( ( RMSe / RMSe ) + MLU ) * Max( MLU,DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) ) / Max( ( MLU / ( MUR + ( RCSe - RRSe ) ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MUM ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + ( ( ( DS + DS ) * ( ( ( ( ( MUM + MLU ) - ( RRSe - MUC ) ) - Min( MLU ,Min( CS ,RCSe ) ) ) - ( RCSe + MLU ) ) - MUC ) ) / ( RMSe - RCSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( Max( ( FirstVNF_Mem_Server * ARS ),( MDR - ( MRS - FirstVNF_Mem_Server ) ) ) + Min( ( MRS - ACS ) ,RRS ) )", "choosing": "( ( ( RRSe * MUR ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) + ( Max( MUM,DS ) + RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5723157656738803}, {"determining": "Max( ( Const / PN ),Min( ( Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ARS - ( MDR * FirstVNF_Mem ) ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( DDR * ARS ),FirstVNF_RAM ) / MRS ) ) ) ,( ( ( Max( PN,( MRS + MDR ) ) * Min( AMS ,FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - AMS ) * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ) ) )", "choosing": "( Max( ( Min( CS ,RCSe ) / Min( ( MUM / DS ) ,MUC ) ),RCSe ) * ( ( MUC * MLU ) * DS ) )", "obj1": 0.4744525547445255, "obj2": 0.4904355250929441}, {"determining": "( ( Min( ( CRS * Const ) ,CRS ) + ( PN - MDR ) ) + Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( RRS / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem_Server ,( Max( AMS,ARS ) + BR ) ) + ( ( PN - MDR ) - MDR ) ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / MDR ) ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM - Max( Max( Min( CS ,( RMSe + MUM ) ),( MLU - ( ( RRSe / MUC ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + ( MUC + MUR ) )", "obj1": 0.7645985401459854, "obj2": 0.12094156345758214}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) * ( ( FirstVNF_CPU * DDR ) / BR ) ) ) / ( Max( FirstVNF_RAM_Server,BR ) + Const ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Max( RCSe,( ( Max( MUM,MUR ) - RCSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( Max( DS,RCSe ) ,( MLU + Max( ( MUC - MUC ),( RRSe - ( MUC - RMSe ) ) ) ) ) ) ) - ( ( ( ( ( MUC / MUC ) - MUR ) + ( RCSe / ( RCSe / MUC ) ) ) * MUC ) + Max( MLU,DS ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( ( ( ( ( CRS - Min( Const ,BR ) ) - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_CPU_Server + Max( PN,FirstVNF_Mem ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( MUR * ( MUM / MUC ) ) + DS ) + RRSe ) + ( ( RRSe + Max( MUM,MUR ) ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - MLU ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5368216248666824}, {"determining": "( ( ( FirstVNF_RAM_Server / ( MRS / FirstVNF_RAM ) ) + AMS ) + ( ( PN - MDR ) + ( ( FirstVNF_RAM_Server / MDR ) * PN ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( Min( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) ,Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( MLU * ( MUR * RCSe ) ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5271088147134937}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Max( ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ),Min( ( FirstVNF_Mem / MDR ) ,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / ( Const + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( DDR / PN ) ) ) ) ,( AMS - BR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( ( CS / RCSe ) * MLU ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ACS ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( ( Max( CRS,FirstVNF_RAM_Server ) - PN ) + ( Min( RRS ,FirstVNF_Mem_Server ) / DDR ) ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - DDR ) ,( ( ( ( BR + Max( MDR,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS * ( PN + FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( MLU + ( ( CS / ( MUR * MLU ) ) / Min( ( MUM - MLU ) ,Max( MUM,( RMSe * MUR ) ) ) ) ),Max( MUR,( ( RMSe + Max( Max( RRSe,DS ),Max( MUC,RMSe ) ) ) - MUM ) ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7116788321167883, "obj2": 0.17591911961781034}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( FirstVNF_Mem - Max( ARS,FirstVNF_RAM_Server ) ) - RRS ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( RRS + ( MDR - Min( FirstVNF_CPU ,PN ) ) ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,MDR ) ) * Min( ( DDR * Const ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( DS * RCSe ) ) + ( MLU - Max( DS,( ( CS / RCSe ) * Max( MUC,Max( Min( RMSe ,Max( RCSe,MLU ) ),MLU ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6113317375789231}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( CRS ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) ) * Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Min( RMSe ,( Max( RCSe,MUC ) + DS ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RCSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.45985401459854014, "obj2": 0.5166265979430197}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( DS * MLU ) ) ) )", "obj1": 0.5401459854014599, "obj2": 0.38528806806189153}, {"determining": "( ( RRS / MDR ) + ( ( ( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) + BR ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * PN ) )", "choosing": "( ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUC ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - MLU ) + ( Min( Min( MUR ,Min( CS ,MLU ) ) ,Max( MUM,MUC ) ) * MUC ) ) ) ) + ( Max( MUM,MUR ) + RRSe ) )", "obj1": 0.7408759124087592, "obj2": 0.14512380753517656}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / FirstVNF_CPU_Server ),RRS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.30533937773292386}, {"determining": "( ( ( ( BR + ( ( DDR - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / BR ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( FirstVNF_CPU_Server / BR ) ,MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM - FirstVNF_RAM ) - MDR ) ) )", "choosing": "( ( ( MUR - ( MLU + ( DS / Min( MUR ,Max( ( MUC / MUC ),MUC ) ) ) ) ) + ( RRSe + ( Min( MUM ,MUR ) + RRSe ) ) ) * ( DS + ( Max( DS,Max( RCSe,MUM ) ) + Min( Max( CS,CS ) ,MLU ) ) ) )", "obj1": 0.8759124087591241, "obj2": 0.05539817586653941}, {"determining": "( ( ( FirstVNF_CPU * PN ) + ( CRS / MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) * ( FirstVNF_Mem_Server / MRS ) ) / MDR ) ,( ( ( CRS * ( RRS * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) / MDR ) ) )", "choosing": "( ( MUM + MUR ) + ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( DS + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) )", "obj1": 0.8704379562043796, "obj2": 0.0576933700217704}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) * MDR ) * BR ) * ( Const * MDR ) ) ,( ( ( Max( BR,( ( FirstVNF_Mem_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Max( MDR,( MDR - FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( Min( MUR ,Min( RCSe ,( MUC - ( ( MUM + RRSe ) / ( DS + RMSe ) ) ) ) ) * MLU ) * ( Max( MUC,( RMSe - MLU ) ) - MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6209613042832636}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( AMS - Max( FirstVNF_RAM_Server,ACS ) ) ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( ( ( CS + RMSe ) - RMSe ) ,RCSe ) * MLU ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6605839416058394, "obj2": 0.2268763980845105}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( Const + Max( ( ARS / RRS ),BR ) ) - ACS ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + ( ( ARS - FirstVNF_CPU_Server ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + ( ( ( ( RRSe * CS ) - ( MLU + Max( ( RRSe * CS ),MUR ) ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) * ( MUR * MUC ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4575221502541406}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( ACS / FirstVNF_Mem_Server ) - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + FirstVNF_RAM_Server ) * MDR ) ,( MDR / ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( MRS + Const ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( MUC,( Min( CS ,MUM ) / ( CS + Max( ( RRSe + RCSe ),Min( ( RRSe * MLU ) ,MUC ) ) ) ) ) + MLU )", "obj1": 0.49635036496350365, "obj2": 0.4522558692545822}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / Const ) ) ,RRS ) ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( ( DDR - AMS ) ,FirstVNF_CPU ) ) ) ) - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * Min( MUM ,RRSe ) ) ) ) / ( RRSe * ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ) ) ) + ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( RRSe / MUM ) ) )", "obj1": 0.7992700729927007, "obj2": 0.09795255952346767}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( Max( ( Const / FirstVNF_CPU ),FirstVNF_Mem ) - MDR ) ) + Min( ( MDR * ( ( ( BR + ( Min( Const ,FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( CRS * FirstVNF_RAM_Server ) * PN ) + ( Max( ( ( ACS - Max( RRS,FirstVNF_Mem ) ) - ACS ),Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ) ) )", "choosing": "( MUC + ( ( ( RMSe - Min( CS ,( MLU - ( MUR * Max( MUM,MUC ) ) ) ) ) + RRSe ) + Min( ( ( ( MUM * ( Max( MUR,MUR ) - MUC ) ) / MUM ) / CS ) ,( MUC + DS ) ) ) )", "obj1": 0.6715328467153284, "obj2": 0.2164716767214464}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / MDR ) ) + Min( ( MDR * MDR ) ,( Min( ( FirstVNF_CPU + BR ) ,MRS ) - Max( RRS,( Max( RRS,AMS ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( CS * ( RMSe * CS ) ) + ( CS + ( ( Max( ( ( MLU - CS ) * ( MUC + RCSe ) ),MLU ) + MUM ) + DS ) ) ) + MUC )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( ( ( ( CRS + PN ) * ( RRS / ( FirstVNF_Mem / PN ) ) ) - Max( PN,MDR ) ) + Min( ( ( RRS - Const ) + FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_Mem,DDR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( DS ,Max( CS,( MUM / MUC ) ) ) / MUC ) * ( Min( ( ( DS - MLU ) - MUR ) ,Max( DS,( MLU - DS ) ) ) - MUR ) ) + ( Min( ( MLU * MLU ) ,( MLU * CS ) ) - ( ( RRSe - ( RRSe - ( Min( ( MUC * RCSe ) ,MLU ) / Max( CS,MLU ) ) ) ) + ( CS * MUR ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.40670677624697654}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + ( Max( CRS,BR ) + BR ) ) ) * FirstVNF_RAM ) ) + Min( ( ( Min( Min( AMS ,Max( DDR,ACS ) ) ,( ( ( MRS * Const ) - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) + ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( MDR - ( FirstVNF_CPU / MDR ) ) ) )", "choosing": "( ( Max( DS,MUR ) + RRSe ) + ( ( Min( DS ,DS ) * Max( RRSe,Max( Min( ( MUM - ( MUC - DS ) ) ,RRSe ),MUR ) ) ) - ( ( ( ( Min( DS ,( MUC / CS ) ) + ( Max( MUM,MUR ) + RRSe ) ) - RRSe ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - ( ( Max( DS,RRSe ) - ( CS - MUC ) ) * MUC ) ) ,Min( Min( ( CS + MLU ) ,DS ) ,( Max( MUC,MUR ) + RRSe ) ) ) ) ) )", "obj1": 0.9361313868613139, "obj2": 0.021037658706304856}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( ( Min( FirstVNF_CPU ,ARS ) * ARS ) + BR ) ),( ( DDR + FirstVNF_RAM_Server ) - MDR ) ) + Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * Min( RMSe ,CS ) ) ) ) - ( ( ( ( ( MLU - ( RCSe + RMSe ) ) / ( ( MUM + CS ) - MUR ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.595989557812868}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_Mem_Server - ( ACS / FirstVNF_Mem ) ) * ACS ) + ( FirstVNF_CPU + AMS ) ) ) * DDR ) ,( ( BR * ( ( Const / Min( DDR ,( MDR / PN ) ) ) / ARS ) ) * MRS ) ) + ( ( ( AMS / MDR ) * PN ) + ( ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) - MDR ) ) )", "choosing": "( ( Max( ( MUC * RMSe ),MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + Max( ( ( Max( MUR,( ( MLU / RRSe ) + ( DS * MLU ) ) ) - ( MLU + Max( MUM,DS ) ) ) + Max( ( DS + ( ( RRSe - RCSe ) * DS ) ),MLU ) ),( MUR * MUC ) ) ) )", "obj1": 0.9543795620437956, "obj2": 0.01385640876720303}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - ( MDR / ( CRS / ( ( FirstVNF_CPU + Max( FirstVNF_Mem,( DDR + FirstVNF_RAM_Server ) ) ) * MDR ) ) ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( DS + CS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),( ( DS / Min( RMSe ,CS ) ) - MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6000862591395966}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( MDR + BR ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) - ( RMSe / RMSe ) ) / MUM ) - ( MUM - Min( DS ,( RMSe - ( ( RMSe * DS ) + RCSe ) ) ) ) ) * Min( Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ,( MUM + Min( MUC ,( RCSe / DS ) ) ) ) )", "obj1": 0.6551094890510949, "obj2": 0.2371117087674043}, {"determining": "( Min( FirstVNF_RAM_Server ,Min( Const ,MDR ) ) + Min( ( ( ( ARS * ( AMS * PN ) ) * BR ) * MDR ) ,( ( Min( ( Max( Min( FirstVNF_CPU ,CRS ),FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,BR ) ) ) ,( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe * ( Min( CS ,DS ) / ( RCSe + MLU ) ) ) ) / ( RCSe - CS ) ) / ( RRSe * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / DS ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( CS ,MUC ) ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8558394160583942, "obj2": 0.06190143025553726}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( Min( ( ( Max( ARS,MRS ) * MDR ) * BR ) ,MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - AMS ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( RCSe + ( ( MLU * ( MUC + ( Max( DS,( RMSe / CS ) ) + Min( MLU ,Max( CS,CS ) ) ) ) ) + DS ) ) + MUC )", "obj1": 0.6806569343065694, "obj2": 0.2124594794686291}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS + MUC ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.5291970802919708, "obj2": 0.3975462911290833}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) + ( MDR - PN ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( PN - MDR ) - ( MDR - FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) / ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + MDR ) ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( ( ( Min( RMSe ,DS ) + Max( DS,CS ) ) + ( Min( RMSe ,MUR ) - ( MUR - MUM ) ) ) / Max( RRSe,MLU ) ) - MUC ) - ( MUR - RRSe ) ),RRSe ) + ( ( ( CS + MLU ) * MUR ) - ( ( ( Min( DS ,DS ) - ( MUM / ( ( RCSe - RRSe ) + DS ) ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) ) )", "obj1": 0.7828467153284672, "obj2": 0.10782336963180424}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6468993802843437}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( MRS - Min( ( AMS - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( MRS,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( Min( RMSe ,DS ) + ( ( MUC - MLU ) - CS ) ) ) + ( CS + RMSe ) )", "obj1": 0.614963503649635, "obj2": 0.2751376587968387}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_Mem + RRS ) ) + Min( ( CRS / ARS ) ,( ( ( ( RRS - FirstVNF_Mem ) / ARS ) * ( ( MRS * FirstVNF_RAM_Server ) - ( ( DDR - RRS ) + RRS ) ) ) / ARS ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,Max( ( MLU + MLU ),MUM ) ),( MLU - ( Max( RRSe,MUM ) + MLU ) ) ),RMSe ) ) / ( ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) + ( DS - ( ( Min( ( MLU * MUM ) ,DS ) + MUM ) * RCSe ) ) ) ) + Max( ( Min( Max( RRSe,Max( RRSe,RMSe ) ) ,( Max( MUC,MUR ) / ( ( RRSe - RRSe ) + ( ( RMSe + RCSe ) + DS ) ) ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - Max( MUR,RRSe ) ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5985401459854015, "obj2": 0.29039472458042853}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_RAM_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( ( ( ( ( MDR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * Min( MUM ,RRSe ) ) ) ) / ( RRSe * ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ) ) ) + ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( RRSe / MUM ) ) )", "obj1": 0.7335766423357665, "obj2": 0.15383874901935624}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,ARS ) + FirstVNF_RAM_Server ) ) / MDR ) * Max( ARS,( PN + Min( Const ,( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ) ) ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server / ( ( PN / FirstVNF_CPU ) * ( ARS - FirstVNF_Mem_Server ) ) ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - Max( MUM,RRSe ) ) + ( MUC * MUC ) ) / ( ( DS - Max( ( DS + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) + MUM ) )", "obj1": 0.4708029197080292, "obj2": 0.49829722313659125}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) - ( PN - MDR ) ) + Min( ( Min( MRS ,Const ) * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / FirstVNF_CPU_Server ),RRS ) ) * Min( FirstVNF_CPU ,ACS ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / ( Min( MUM ,DS ) / ( Min( DS ,DS ) + MLU ) ) ),( Max( ( ( MUR / CS ) * ( MUC / Max( RMSe,DS ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ) )", "obj1": 0.9708029197080292, "obj2": 0.007461295861498702}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) + ( PN - MDR ) ) + Min( ( ( ( PN * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - ( FirstVNF_RAM_Server * AMS ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + MDR ) ),RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + DS ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / Max( ( MLU / MUM ),( MUR * MUM ) ) ) - ( DS * DS ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) ) )", "obj1": 0.8941605839416058, "obj2": 0.04362003190892363}, {"determining": "( Min( ( Min( ( ( ACS + Min( ( RRS / MRS ) ,BR ) ) - ACS ) ,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( ( MUR + ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + DS ) ) + ( ( ( Max( MUR,( ( RRSe / RRSe ) + ( DS * MUC ) ) ) - ( MLU + Max( MUR,( RRSe * CS ) ) ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.5817390245261118}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( ARS / BR ) - Min( MRS ,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( ( ( RRSe / MUM ) + MLU ) - MLU ) ),( ( CS / Min( ( RCSe / MUR ) ,( CS + MUR ) ) ) / RRSe ) ) ) / ( ( ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( MLU + MUR ) ) - RCSe ),DS ) ) )", "obj1": 0.6222627737226277, "obj2": 0.26857424088300885}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - FirstVNF_Mem ) )", "choosing": "( ( Min( CS ,Min( RCSe ,( MUC - Min( ( DS * MUR ) ,( MUM + ( RMSe + RCSe ) ) ) ) ) ) * MLU ) * ( Max( MUC,( MUM / Min( MLU ,MUM ) ) ) - MUR ) )", "obj1": 0.3978102189781022, "obj2": 0.6320716753181514}, {"determining": "( ( ( ( FirstVNF_RAM_Server - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( ( ( ( Min( AMS ,AMS ) + ( Max( ARS,MDR ) * ( MDR / DDR ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( MUC - MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - Min( CS ,RRSe ) ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ) * MDR ) * MDR ) ,( ( ( ( BR + ( MRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( Max( MUC,( Min( ( ( RMSe + DS ) - CS ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.5529197080291971, "obj2": 0.3621868660592402}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( Min( DS ,DS ) + MLU ) ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6468993802843437}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( ( ( ( BR * ( ARS * MDR ) ) * ( FirstVNF_Mem - Min( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,ARS ) ) ) / ( AMS * RRS ) ) + ( Min( ( ( ACS / FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( ( Min( DS ,DS ) / RMSe ) * ( RCSe - Min( ( ( ( CS / ( RRSe - MUC ) ) * ( MLU / RCSe ) ) + MUR ) ,Max( DS,( MLU * DS ) ) ) ) ) + ( ( MUR * ( MUM / MUR ) ) + MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5069595696921577}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) + Min( ( ( ( Min( AMS ,Max( DDR,DDR ) ) + ( MDR - FirstVNF_CPU ) ) + FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( DDR,PN ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( Min( CS ,Max( ( ( CS * RCSe ) - MUM ),Max( MUC,MUM ) ) ) ,DS ) ,MUM ) * ( ( ( RRSe - ( MLU + ( Max( MUM,MUR ) + RRSe ) ) ) - RRSe ) + Min( RMSe ,Min( ( ( ( MLU * RMSe ) + RRSe ) * Max( MUM,( MUC * MUM ) ) ) ,( Max( MUC,MUR ) / RRSe ) ) ) ) ) )", "obj1": 0.9288321167883211, "obj2": 0.024332397158793248}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,DS ) + CS ) / MUR ) ,( CS + ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( RMSe / RMSe ) ) / MUM ) - ( MUM - Min( DS ,( RMSe - ( ( RMSe * DS ) + RCSe ) ) ) ) ) * Min( Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ,( MUM + Min( MUC ,( RCSe / DS ) ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4150512120717833}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( ( ( ( PN - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) * PN ) * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( ( DS * MUC ) + MLU ) ) ) ) ) / ( ( RRSe - ( MLU + ( DS * DS ) ) ) - RRSe ) ) + MUC )", "obj1": 0.48175182481751827, "obj2": 0.4754243933561681}, {"determining": "( ( ( ( ( ARS * MDR ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5030867907410367}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.6295620437956204, "obj2": 0.25738544919477524}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( MDR ,Const ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + MUC )", "obj1": 0.9799270072992701, "obj2": 0.0027934018209464415}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / ( ARS * ( AMS * PN ) ) ) ) )", "choosing": "( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / DS ) + ( Min( ( DS - DS ) ,MUM ) - ( ( CS * MUC ) + ( ( ( ( MUR / ( MUR + RCSe ) ) - Min( DS ,DS ) ) - ( MLU + ( CS - ( MUC - MUR ) ) ) ) - RRSe ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4150512120717833}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( BR * ( ARS * MDR ) ) * MDR ) ,( ( ( ( BR + Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,( FirstVNF_CPU - AMS ) ) ) * Max( Const,BR ) ) * Min( ( FirstVNF_Mem + ( BR + CRS ) ) ,( MRS - ( ( FirstVNF_CPU / Const ) / FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( MUR / RRSe ) + Max( ( RMSe + RCSe ),Max( Min( DS ,CS ),( ( CS / ( ( MUM / MUR ) * ( DS - ( RRSe / MUM ) ) ) ) + RMSe ) ) ) )", "obj1": 0.9470802919708029, "obj2": 0.019673477746293633}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( Max( AMS,Max( CRS,FirstVNF_CPU_Server ) ) ,( MDR + ( ( FirstVNF_RAM + CRS ) - MRS ) ) ) )", "choosing": "( RCSe + Max( MUC,( Min( Min( ( Max( RRSe,RMSe ) + ( ( RMSe * MUM ) + ( DS - MLU ) ) ) ,( RRSe - ( ( CS / CS ) - RCSe ) ) ) ,MUM ) / RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.46780391853973996}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS + MUC ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.5273722627737226, "obj2": 0.40237882390195634}, {"determining": "( Min( ( Min( PN ,FirstVNF_RAM_Server ) - MDR ) ,( ( ( ( BR + ( MRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) )", "choosing": "( RCSe + Max( MUC,( Max( Max( ( ( RRSe * MUR ) - DS ),( RMSe + RMSe ) ),Min( MUM ,( MUC / RCSe ) ) ) / RRSe ) ) )", "obj1": 0.5529197080291971, "obj2": 0.3621868660592402}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_RAM_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( ( ( ( ( MDR + ( ( MDR / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( MUM + Max( Min( MUM ,DS ),Max( ( MUR * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / Max( ( Max( Max( CS,MUC ),( ( MUC * RCSe ) / MUC ) ) * MUC ),( RCSe - Max( ( MUM * Min( RMSe ,MLU ) ),( MLU * DS ) ) ) ) ),( ( Max( ( DS / MUC ),DS ) * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + MUC ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.7335766423357665, "obj2": 0.15383874901935624}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_Mem ) ,Const ) + MDR ) ) * PN ) + ( PN - MDR ) ) + Min( Max( BR,DDR ) ,PN ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,DS ) + CS ) / MUR ) ,( Max( MUC,MUR ) / RRSe ) ) - ( MUC / RMSe ) ) / MUM ) - ( DS * MUC ) ) * Min( ( MUM + Min( MUC ,( RCSe / DS ) ) ) ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.6916058394160584, "obj2": 0.19541374219722632}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( FirstVNF_RAM_Server / ACS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + RRSe ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.6040145985401459, "obj2": 0.2854235572810615}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ARS ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Max( DS,( MLU * DS ) ) + MUC )", "obj1": 0.5036496350364964, "obj2": 0.4390958254016413}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( Max( PN,DDR ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( ( DDR - AMS ) ,FirstVNF_CPU ) ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( Min( MUM ,DS ),Max( ( MUR * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / Max( ( Max( Max( CS,MUC ),( ( MUC * RCSe ) / MUC ) ) * MUC ),( RCSe - Max( ( MUM * Min( RMSe ,MLU ) ),( MLU * DS ) ) ) ) ),( ( Max( ( DS / MUC ),DS ) * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + MLU ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08041118845267595}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( Max( MRS,Max( FirstVNF_CPU,Min( BR ,FirstVNF_Mem_Server ) ) ) ,( ( Min( FirstVNF_CPU ,ACS ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( RRS,( ( MRS + Const ) / FirstVNF_CPU_Server ) ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Min( ( RRSe * RMSe ) ,RRSe ) ) + Min( RRSe ,CS ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.9708029197080292, "obj2": 0.007461295861498702}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( ( MDR / BR ) * BR ) - FirstVNF_Mem_Server ) ) * FirstVNF_Mem_Server ) - ( PN - MDR ) ) + Min( Max( BR,DDR ) ,PN ) )", "choosing": "( ( MLU - ( ( DS * ( MUC - Min( RMSe ,DS ) ) ) / DS ) ) + ( MUC / ( DS * RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5455254012037615}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - ( MDR / FirstVNF_CPU_Server ) ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - DDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( ( RRSe - RRSe ) + ( ( MUM + CS ) * RCSe ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( Max( RRSe,MUR ) - MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.6113138686131386, "obj2": 0.279425222317305}, {"determining": "( ( Min( MRS ,FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * Min( ( MDR / FirstVNF_CPU_Server ) ,( DDR * AMS ) ) ) * BR ) * MDR ) ,( ( ( ( BR + BR ) * ( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( RRS - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_CPU / BR ) ) ) + ( FirstVNF_RAM * ACS ) ) ) ) )", "choosing": "( ( ( MUM + RRSe ) + ( CS + ( ( Max( ( ( CS + RCSe ) + ( RRSe * RCSe ) ),MLU ) + MUM ) + DS ) ) ) + MUC )", "obj1": 0.7937956204379562, "obj2": 0.10038630634588243}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / Const ) ) ,RRS ) ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( ( DDR - AMS ) ,FirstVNF_CPU ) ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( Min( MUM ,DS ),Max( ( MUR * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / Max( ( Max( Max( CS,MUC ),( ( MUC * RCSe ) / MUC ) ) * MUC ),( RCSe - Max( ( MUM * Min( RMSe ,MLU ) ),( MLU * DS ) ) ) ) ),( ( Max( ( DS / MUC ),DS ) * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + MUC ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.7992700729927007, "obj2": 0.09795255952346767}, {"determining": "( ( ( PN - MDR ) + ( FirstVNF_RAM_Server * ( ( DDR / ( FirstVNF_Mem + MDR ) ) * MDR ) ) ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( RCSe + ( ( CS * ( ( MUR + RCSe ) + ( Max( DS,( RMSe / CS ) ) + Min( MUM ,Min( RRSe ,MUM ) ) ) ) ) + DS ) ) + MUC )", "obj1": 0.6441605839416058, "obj2": 0.24135252208660948}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( Max( ARS,ACS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.20736533557809528}, {"determining": "Max( ( RRS + ( MDR / FirstVNF_RAM_Server ) ),Min( ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - ( CRS - ACS ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( AMS * ARS ) ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * PN ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( MLU * DS ) + ( ( ( MUC * ( ( MUM - DS ) * ( Max( ( RRSe / MLU ),( MUR / MUC ) ) / ( ( MUC * CS ) + MLU ) ) ) ) + MLU ) - MLU ) )", "obj1": 0.39963503649635035, "obj2": 0.6314882633665565}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( FirstVNF_Mem * AMS ) )", "choosing": "( ( MUC / ( ( ( ( ( DS - Max( DS,MUR ) ) + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS / RMSe ) )", "obj1": 0.6678832116788321, "obj2": 0.2235087860950485}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( Const - CRS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * Min( ( FirstVNF_Mem + ( ( RRS / PN ) + CRS ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( Min( RMSe ,( CS + MUC ) ) + ( Min( ( RCSe * MUM ) ,DS ) + MUM ) )", "obj1": 0.8467153284671532, "obj2": 0.06736213355403223}, {"determining": "( ( ( ( AMS - Max( PN,BR ) ) * ( AMS + FirstVNF_CPU ) ) / ( Min( Max( ( ACS * Const ),( ( DDR / Max( RRS,CRS ) ) / FirstVNF_RAM ) ) ,CRS ) - MDR ) ) + Max( MRS,MRS ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( ( CS / MUR ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,Min( Min( Min( ( RCSe * Max( Max( DS,MUM ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) ,( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4333090978110347}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( ACS + Max( ( RRS / ARS ),BR ) ) - ACS ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,CRS ) ) ) * ( Min( ( DDR / ACS ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( ( Max( MUC,MUM ) * DS ) + DS ) - RRSe ) + ( ( MLU - Min( MUM ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - Max( RRS,AMS ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( RRS ,Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,DS ) + RRSe ) + ( RCSe - ( DS + MLU ) ) )", "obj1": 0.7481751824817519, "obj2": 0.1402615498242008}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( Max( MDR,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,RRS ) ) ) + ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( CS / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( DS + MUC ) ),RMSe ) ) / ( MUR * ( MUR * MUR ) ) ) + Max( ( Min( Min( DS ,CS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * Min( DS ,DS ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6405109489051095, "obj2": 0.2483954620091577}, {"determining": "( Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_Mem_Server - ( ACS / FirstVNF_Mem ) ) * ACS ) + ( FirstVNF_CPU + AMS ) ) ) * DDR ) ,( ( BR * ( ( Const / Min( DDR ,( MDR / PN ) ) ) / ARS ) ) * MRS ) ) + ( ( ( AMS / MDR ) * PN ) + ( ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) - MDR ) ) )", "choosing": "( ( Max( ( MUC * RMSe ),MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + Max( ( ( Max( MUR,( ( MLU / RRSe ) + ( DS * MLU ) ) ) - ( MLU + Max( MUM,DS ) ) ) + Max( ( DS + ( ( RRSe - RCSe ) * DS ) ),MLU ) ),( MUR * MUC ) ) ) )", "obj1": 0.9543795620437956, "obj2": 0.01385640876720303}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( MLU + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) + MUC )", "obj1": 0.4854014598540146, "obj2": 0.47063913979514416}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( ( RRSe - ( MLU + ( DS * DS ) ) ) - RRSe ) ) + MUC )", "obj1": 0.48175182481751827, "obj2": 0.4754243933561681}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ,RRS ) - FirstVNF_Mem ) ,( ( ( Min( Max( CRS,FirstVNF_Mem ) ,( RRS + Min( RRS ,FirstVNF_CPU_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( RCSe * RRSe ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + Min( Min( DS ,DS ) ,RMSe ) ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) * MUM ) )", "obj1": 0.7007299270072993, "obj2": 0.1854078889491354}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( Max( ( RRS - FirstVNF_Mem_Server ),FirstVNF_CPU ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RMSe ) + ( Min( ( RCSe * MUM ) ,MUC ) + MUM ) )", "obj1": 0.8485401459854015, "obj2": 0.06632141281128089}], "49": [{"determining": "( Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_Mem_Server - ( ACS / FirstVNF_Mem ) ) * ACS ) + ( FirstVNF_CPU + AMS ) ) ) * DDR ) ,( ( BR * ( ( Const / Min( DDR ,( AMS / PN ) ) ) / ARS ) ) * MRS ) ) + ( ( ( ( DDR - FirstVNF_CPU_Server ) - ( MRS + MRS ) ) - MDR ) + CRS ) )", "choosing": "( ( Max( ( MUC * RMSe ),MUM ) + RRSe ) + ( Min( ( RCSe + MUR ) ,RMSe ) + Max( ( ( Max( MUR,( ( MLU / RRSe ) + ( DS * MLU ) ) ) - ( MLU + Max( MUM,DS ) ) ) + Max( ( DS + Min( ( CS + RCSe ) ,( MLU * RCSe ) ) ),MLU ) ),( MUR * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( Min( FirstVNF_CPU ,ACS ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / FirstVNF_CPU_Server ),RRS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( RCSe + MLU ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( Min( DS ,DS ) + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server + ( ( FirstVNF_Mem / ( FirstVNF_Mem - Min( ACS ,FirstVNF_Mem_Server ) ) ) * MDR ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),( RMSe - RCSe ) ) - MUM ),( MUM / ( ( Min( MUC ,CS ) + MLU ) + ( Min( DS ,DS ) + MLU ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6734831640889946}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( ( MDR * RRS ),CRS ) / ( ( Const * DDR ) - BR ) ) ,Min( ARS ,BR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( RMSe * Min( Max( MUR,MUR ) ,RMSe ) ) ) ) - ( ( ( ( ( MUR - ( MUM + CS ) ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5602189781021898, "obj2": 0.34750945858811483}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( ( ( Max( MDR,ACS ) - FirstVNF_Mem ) + Max( ( MDR / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) ) / ( RRS - BR ) ) ,( FirstVNF_CPU_Server - MDR ) ) + Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "Max( RMSe,( MUR - ( ( MUR + ( Max( MLU,DS ) / MUR ) ) - ( ( ( CS / DS ) - RCSe ) - CS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08607328129706897}, {"determining": "( ( Min( ( CRS * Const ) ,CRS ) + ( PN - MDR ) ) + Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( RRS / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem_Server ,( Max( AMS,ARS ) + BR ) ) + ( ( PN - MDR ) - MDR ) ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / MDR ) ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM - Max( Max( Min( CS ,( RMSe + MUM ) ),( MLU - ( ( RRSe / MUC ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + ( MUC + MUR ) )", "obj1": 0.7645985401459854, "obj2": 0.12094156345758214}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( ( ( PN - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) * PN ) + Max( ( ( Const - FirstVNF_Mem ) * FirstVNF_Mem_Server ),CRS ) ) + Min( Max( BR,DDR ) ,PN ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,DS ) + CS ) / MUR ) ,( Max( MUC,MUR ) / RRSe ) ) - Min( MUC ,RMSe ) ) / MUM ) - ( DS * MUC ) ) * Min( ( MUM + Min( MUC ,( RCSe / DS ) ) ) ,Min( Min( ( ( MUC / RRSe ) * MLU ) ,RCSe ) ,( ( MUM + ( DS * MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7518248175182481, "obj2": 0.13346019513124177}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Max( Const,PN ) - Min( FirstVNF_CPU ,BR ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MLU + Max( Min( ( ( ( RMSe / RMSe ) + MLU ) * Max( MLU,DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) ) / Max( ( MLU / ( MUR + ( RCSe - RRSe ) ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MUM ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + ( ( ( DS + DS ) * ( ( ( ( ( MUM + MLU ) - ( RRSe - MUC ) ) - Min( MLU ,Min( CS ,RCSe ) ) ) - ( RCSe + MLU ) ) - MUC ) ) / ( RMSe - RCSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ( FirstVNF_CPU_Server * AMS ) ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( MUM / ( ( RCSe - RRSe ) + ( CS / MLU ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS + MUC ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.09328609638246858}, {"determining": "( Max( ( FirstVNF_Mem_Server * ARS ),( MDR - ( MRS - FirstVNF_Mem_Server ) ) ) + Min( ( MRS - ACS ) ,RRS ) )", "choosing": "( ( ( RRSe * MUR ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) + ( Max( MUM,DS ) + RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5723157656738803}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( Max( PN,DDR ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( ( DDR - AMS ) ,FirstVNF_CPU ) ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( Min( MUM ,DS ),Max( ( MUR * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / Max( ( Max( Max( CS,MUC ),( ( MUC * RCSe ) / MUC ) ) * MUC ),( RCSe - Max( ( MUM * Min( RMSe ,MLU ) ),( MLU * DS ) ) ) ) ),( ( Max( ( DS / MUC ),DS ) * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + MLU ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08041118845267595}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) * ( ( FirstVNF_CPU * DDR ) / BR ) ) ) / ( Max( FirstVNF_RAM_Server,BR ) + Const ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Max( RCSe,( ( Max( MUM,MUR ) - RCSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( Max( DS,RCSe ) ,( MLU + Max( ( MUC - MUC ),( RRSe - ( MUC - RMSe ) ) ) ) ) ) ) - ( ( ( ( ( MUC / MUC ) - MUR ) + ( RCSe / ( RCSe / MUC ) ) ) * MUC ) + Max( MLU,DS ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "( ( ( ( ( CRS - Min( Const ,BR ) ) - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( FirstVNF_CPU_Server + Max( PN,FirstVNF_Mem ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( MUR * ( MUM / MUC ) ) + DS ) + RRSe ) + ( ( RRSe + Max( MUM,MUR ) ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - MLU ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5368216248666824}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( ( CS - ( MUC - MUR ) ) - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.5675182481751825, "obj2": 0.3365310327052935}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( FirstVNF_Mem - Max( ARS,FirstVNF_RAM_Server ) ) - RRS ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( RRS + ( MDR - Min( FirstVNF_CPU ,PN ) ) ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,MDR ) ) * Min( ( DDR * Const ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( DS * RCSe ) ) + ( MLU - Max( DS,( ( CS / RCSe ) * Max( MUC,Max( Min( RMSe ,Max( RCSe,MLU ) ),MLU ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6113317375789231}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( CRS ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) ) * Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Min( RMSe ,( Max( RCSe,MUC ) + DS ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RCSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.45985401459854014, "obj2": 0.5166265979430197}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( DS * MLU ) ) ) )", "obj1": 0.5401459854014599, "obj2": 0.38528806806189153}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( ( MDR / BR ) * BR ) - FirstVNF_Mem_Server ) ) * FirstVNF_Mem_Server ) - ( PN - MDR ) ) + Min( Max( BR,DDR ) ,PN ) )", "choosing": "( ( MLU - ( ( DS * ( MUC - Min( RMSe ,DS ) ) ) / DS ) ) + ( MUC / ( DS * RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5455254012037615}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / FirstVNF_CPU_Server ),RRS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.30533937773292386}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( ( ( FirstVNF_CPU * PN ) + ( CRS / MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) * ( FirstVNF_Mem_Server / MRS ) ) / MDR ) ,( ( ( CRS * ( RRS * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) / MDR ) ) )", "choosing": "( ( MUM + MUR ) + ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( DS + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) )", "obj1": 0.8704379562043796, "obj2": 0.0576933700217704}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) * MDR ) * BR ) * ( Const * MDR ) ) ,( ( ( Max( BR,( ( FirstVNF_Mem_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Max( MDR,( MDR - FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( Min( MUR ,Min( RCSe ,( MUC - ( ( MUM + RRSe ) / ( DS + RMSe ) ) ) ) ) * MLU ) * ( Max( MUC,( RMSe - MLU ) ) - MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6209613042832636}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + ( ( ( BR + ( ( ( MDR + BR ) - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * PN ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - MLU ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.9452554744525548, "obj2": 0.015934849486953555}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * Min( MUM ,RRSe ) ) ) ) / ( RRSe * ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ) ) ) + ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( RRSe / MUM ) ) )", "obj1": 0.5675182481751825, "obj2": 0.3365310327052935}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( ARS / BR ) - Min( MRS ,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( ( ( RRSe / MUM ) + MLU ) - MLU ) ),( ( CS / Min( ( RCSe / MUR ) ,( CS + MUR ) ) ) / RRSe ) ) ) / ( ( ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( MLU + MUR ) ) - RCSe ),DS ) ) )", "obj1": 0.6222627737226277, "obj2": 0.26857424088300885}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + ( Max( CRS,BR ) + BR ) ) ) * FirstVNF_RAM ) ) + Min( ( ( Min( Min( AMS ,Max( DDR,ACS ) ) ,( ( ( MRS * Const ) - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) + ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( MDR - ( FirstVNF_CPU / MDR ) ) ) )", "choosing": "( ( Max( DS,MUR ) + RRSe ) + ( ( Min( DS ,DS ) * Max( RRSe,Max( Min( ( MUM - ( MUC - DS ) ) ,RRSe ),MUR ) ) ) - ( ( ( ( Min( DS ,( MUC / CS ) ) + ( Max( MUM,MUR ) + RRSe ) ) - RRSe ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - ( ( Max( DS,RRSe ) - ( CS - MUC ) ) * MUC ) ) ,Min( Min( ( CS + MLU ) ,DS ) ,( Max( MUC,MUR ) + RRSe ) ) ) ) ) )", "obj1": 0.9361313868613139, "obj2": 0.021037658706304856}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( Const + Max( ( ARS / RRS ),BR ) ) - ACS ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + ( ( ARS - FirstVNF_CPU_Server ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + ( ( ( ( RRSe * CS ) - ( MLU + Max( ( RRSe * CS ),MUR ) ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) * ( MUR * MUC ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4575221502541406}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Max( ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ),Min( ( FirstVNF_Mem / MDR ) ,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / ( Const + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( DDR / PN ) ) ) ) ,( AMS - BR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( ( CS / RCSe ) * MLU ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( ( ( CRS + PN ) * ( RRS / ( FirstVNF_Mem / PN ) ) ) - Max( PN,MDR ) ) + Min( ( ( RRS - Const ) + FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_Mem,DDR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( DS ,Max( CS,( MUM / MUC ) ) ) / MUC ) * ( Min( ( ( DS - MLU ) - MUR ) ,Max( DS,( MLU - DS ) ) ) - MUR ) ) + ( Min( ( MLU * MLU ) ,( MLU * CS ) ) - ( ( RRSe - ( RRSe - ( Min( ( MUC * RCSe ) ,MLU ) / Max( CS,MLU ) ) ) ) + ( CS * MUR ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.40670677624697654}, {"determining": "( FirstVNF_RAM_Server + ( ( Max( ( ( ACS - Max( RRS,FirstVNF_Mem ) ) - ACS ),Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * BR ) * MDR ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( Max( RRSe,RRSe ) - MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.3886861313868613, "obj2": 0.6583719041321215}, {"determining": "( ( ( PN * RRS ) + ( PN - MDR ) ) + Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + Max( Min( MUM ,DS ),Max( ( MUR * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / Max( ( Max( ( ( MUC * MLU ) / MUC ),Max( CS,MUC ) ) * MUC ),( RCSe - Max( ( MUM * Min( RMSe ,MLU ) ),( MLU * DS ) ) ) ) ),( ( ( MUC - RCSe ) * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + MLU ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.011569668305391287}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( ( Min( FirstVNF_CPU ,ARS ) * ARS ) + BR ) ),( ( DDR + FirstVNF_RAM_Server ) - MDR ) ) + Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * Min( RMSe ,CS ) ) ) ) - ( ( ( ( ( MLU - ( RCSe + RMSe ) ) / ( ( MUM + CS ) - MUR ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.595989557812868}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - Max( RRS,AMS ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( RRS ,Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,DS ) + RRSe ) + ( RCSe - ( DS + MLU ) ) )", "obj1": 0.7481751824817519, "obj2": 0.1402615498242008}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - ( MDR / ( CRS / ( ( FirstVNF_CPU + Max( FirstVNF_Mem,( DDR + FirstVNF_RAM_Server ) ) ) * MDR ) ) ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( DS + CS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),( ( DS / Min( RMSe ,CS ) ) - MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6000862591395966}, {"determining": "( Min( FirstVNF_RAM_Server ,Min( Const ,MDR ) ) + Min( ( ( ( ARS * ( AMS * PN ) ) * BR ) * MDR ) ,( ( Min( ( Max( Min( FirstVNF_CPU ,CRS ),FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,BR ) ) ) ,( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe * ( Min( CS ,DS ) / ( RCSe + MLU ) ) ) ) / ( RCSe - CS ) ) / ( RRSe * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / DS ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( CS ,MUC ) ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8558394160583942, "obj2": 0.06190143025553726}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_RAM_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( ( ( ( ( MDR + ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,MRS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - MUM ) / ( MUR - ( RCSe * Min( MUM ,MUM ) ) ) ) / ( RRSe * ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ) ) ) + ( ( MUR - ( Min( ( CS - RRSe ) ,CS ) + ( DS / CS ) ) ) - ( RRSe / MUM ) ) )", "obj1": 0.7299270072992701, "obj2": 0.1561325650853995}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( Max( ( Const / FirstVNF_CPU ),FirstVNF_Mem ) - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_Mem - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( Min( ( BR / ACS ) ,ACS ) - ( FirstVNF_RAM_Server - AMS ) ) ) * ( MDR + BR ) ) ) ,Max( Max( ( BR - ( ARS - Max( RRS,FirstVNF_CPU_Server ) ) ),ACS ),ARS ) ) )", "choosing": "( MUC + Min( DS ,RCSe ) )", "obj1": 0.47992700729927007, "obj2": 0.4875276581106457}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS + MUC ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.5291970802919708, "obj2": 0.3975462911290833}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( Max( MDR,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,RRS ) ) ) + ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( CS / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( DS + MUC ) ),RMSe ) ) / ( MUR * ( MUR * MUR ) ) ) + Max( ( Min( Min( DS ,CS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * Min( DS ,DS ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6405109489051095, "obj2": 0.2483954620091577}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ACS ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( ( Max( CRS,FirstVNF_RAM_Server ) - PN ) + ( Min( RRS ,FirstVNF_Mem_Server ) / DDR ) ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - DDR ) ,( ( ( ( BR + Max( MDR,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS * ( PN + FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( MLU + ( ( CS / ( MUR * MLU ) ) / Min( ( MUM - MLU ) ,Max( MUM,( RMSe * MUR ) ) ) ) ),Max( MUR,( ( RMSe + Max( Max( RRSe,DS ),Max( MUC,RMSe ) ) ) - MUM ) ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7116788321167883, "obj2": 0.17591911961781034}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,ARS ) + FirstVNF_RAM_Server ) ) / MDR ) * Max( ARS,( PN + Min( Const ,( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ) ) ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server / ( ( PN / FirstVNF_CPU ) * ( ARS - FirstVNF_Mem_Server ) ) ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - Max( MUM,RRSe ) ) + ( MUC * MUC ) ) / ( ( DS - Max( ( DS + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) + MUM ) )", "obj1": 0.4708029197080292, "obj2": 0.49829722313659125}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) + ( PN - MDR ) ) + Min( ( ( ( PN * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - ( FirstVNF_RAM_Server * AMS ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + MDR ) ),RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + DS ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / Max( ( MLU / MUM ),( MUR * MUM ) ) ) - ( DS * DS ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) ) )", "obj1": 0.8941605839416058, "obj2": 0.04362003190892363}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( FirstVNF_Mem * AMS ) )", "choosing": "( ( MUC / ( ( ( ( ( DS - Max( DS,MUR ) ) + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS / RMSe ) )", "obj1": 0.6678832116788321, "obj2": 0.2235087860950485}, {"determining": "( Min( ( Min( ( ( ACS + Min( ( RRS / MRS ) ,BR ) ) - ACS ) ,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( ( MUR + ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + DS ) ) + ( ( ( Max( MUR,MUM ) - ( MLU + Max( MUR,( RRSe * CS ) ) ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.5817390245261118}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ,RRS ) - FirstVNF_Mem ) ,( ( ( Min( Max( CRS,FirstVNF_Mem ) ,( RRS + Min( RRS ,FirstVNF_CPU_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( RCSe * RRSe ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + Min( Min( DS ,DS ) ,RMSe ) ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) * MUM ) )", "obj1": 0.7007299270072993, "obj2": 0.1854078889491354}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - FirstVNF_Mem ) )", "choosing": "( ( Min( CS ,Min( RCSe ,( MUC - Min( ( DS * MUR ) ,( MUM + ( RMSe + RCSe ) ) ) ) ) ) * MLU ) * ( Max( MUC,( MUM / Min( MLU ,MUM ) ) ) - MUR ) )", "obj1": 0.3978102189781022, "obj2": 0.6320716753181514}, {"determining": "( ( ( ( FirstVNF_RAM_Server - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( ( ( ( Min( AMS ,AMS ) + ( Max( ARS,MDR ) * ( MDR / DDR ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( MUC - MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - Min( CS ,RRSe ) ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "( ( ( FirstVNF_RAM_Server * ( PN - MDR ) ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( ( MRS * ( Max( ARS,AMS ) + FirstVNF_RAM_Server ) ) - Min( RRS ,( FirstVNF_CPU_Server - ACS ) ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( ( ( ( MUM + Min( ( DS + RCSe ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( CS - MUR ) ) ) ) + ( CS + RMSe ) )", "obj1": 0.8795620437956204, "obj2": 0.052580729237024684}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6468993802843437}, {"determining": "Max( ( Const / PN ),Min( ( Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ARS - ( MDR * FirstVNF_Mem ) ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( DDR * ARS ),FirstVNF_RAM ) / MRS ) ) ) ,( ( ( Max( PN,( MRS + MDR ) ) * Min( AMS ,FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - AMS ) * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ) ) )", "choosing": "( Max( ( Min( CS ,RCSe ) / Min( ( MUM / DS ) ,MUC ) ),RCSe ) * ( ( MUC * MLU ) * DS ) )", "obj1": 0.4744525547445255, "obj2": 0.4904355250929441}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / MDR ) ) + Min( ( MDR * MDR ) ,( Min( ( FirstVNF_CPU + BR ) ,MRS ) - Max( RRS,( Max( RRS,AMS ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( CS * ( RMSe * CS ) ) + ( CS + ( ( Max( ( ( MLU - CS ) * ( MUC + RCSe ) ),MLU ) + MUM ) + DS ) ) ) + MUC )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ) * MDR ) * MDR ) ,( ( ( ( BR + ( MRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( Max( MUC,( Min( ( ( RMSe + DS ) - CS ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.5529197080291971, "obj2": 0.3621868660592402}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - BR ) ) ,( ( ( ( BR + ( ( MDR - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( ARS * MDR ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + ( RCSe * MUM ) ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * RRSe ) ) ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6952554744525548, "obj2": 0.1951482549027235}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( Max( ARS,ACS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6861313868613139, "obj2": 0.20133922293976056}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / Const ) ) ,RRS ) ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( ( BR - AMS ) ,FirstVNF_CPU ) ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( Min( MLU ,( MUM - Min( MUC ,CS ) ) ),Max( ( MUR * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / Max( ( Max( Max( CS,MUC ),( ( MUC * RCSe ) / MUC ) ) * MUC ),( RCSe - Max( ( MUM * Min( RMSe ,MLU ) ),( MLU * DS ) ) ) ) ),( ( Max( ( DS / MUC ),DS ) * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + MUC ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.7773722627737226, "obj2": 0.1118643912964067}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( DDR ,AMS ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,DS ) + CS ) / MUR ) ,DS ) - ( RMSe / RMSe ) ) / MUM ) - ( MUM - Min( DS ,( RMSe - ( ( RMSe * DS ) + RCSe ) ) ) ) ) * Min( Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( RCSe / MLU ) ) ) ) ) ) ,( CS + RCSe ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4150512120717833}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( AMS - Max( FirstVNF_RAM_Server,ACS ) ) ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( ( ( CS + RMSe ) - RMSe ) ,RCSe ) * MLU ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6605839416058394, "obj2": 0.2268763980845105}, {"determining": "( ( ( PN - MDR ) + ( FirstVNF_RAM_Server * ( ( DDR / ( FirstVNF_Mem + MDR ) ) * MDR ) ) ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( RCSe + ( ( CS * ( ( MUR + RCSe ) + ( Max( DS,( RMSe / CS ) ) + Min( MUM ,Min( RRSe ,MUM ) ) ) ) ) + DS ) ) + MUC )", "obj1": 0.6441605839416058, "obj2": 0.24135252208660948}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( ACS + Max( ( RRS / ARS ),BR ) ) - ACS ) ) * DDR ) ,( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,CRS ) ) ) * ( Min( ( DDR / ACS ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + ( MUM + CS ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( ( Max( MUC,MUM ) * DS ) + DS ) - RRSe ) + ( ( MLU - Min( MUM ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.1721368891019028}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,DS ) + CS ) / MUR ) ,( CS + ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( RMSe / RMSe ) ) / MUM ) - ( MUM - Min( DS ,( RMSe - ( ( RMSe * DS ) + RCSe ) ) ) ) ) * Min( Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ,( MUM + Min( MUC ,( RCSe / DS ) ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4150512120717833}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( ACS / FirstVNF_Mem_Server ) - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + FirstVNF_RAM_Server ) * MDR ) ,( MDR / ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( MRS + Const ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( MUC,( Min( CS ,MUM ) / ( CS + Max( ( RRSe + RCSe ),Min( ( RRSe * MLU ) ,MUC ) ) ) ) ) + MLU )", "obj1": 0.49635036496350365, "obj2": 0.4522558692545822}, {"determining": "Max( ( Const / PN ),Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ( MDR * FirstVNF_Mem ) - ARS ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ,( ( ( Max( PN,( MRS + MDR ) ) * Min( AMS ,FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - AMS ) * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ) ) )", "choosing": "( ( ( ( RCSe * ( Min( RRSe ,RRSe ) + MUC ) ) / DS ) / DS ) * ( ( MUC * MLU ) * MLU ) )", "obj1": 0.45255474452554745, "obj2": 0.5271088147134937}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( Min( ( ( Max( ARS,MRS ) * MDR ) * BR ) ,MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - AMS ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( RCSe + ( ( MLU * ( MUC + ( Max( DS,( RMSe / CS ) ) + Min( MLU ,Max( CS,CS ) ) ) ) ) + DS ) ) + MUC )", "obj1": 0.6806569343065694, "obj2": 0.2124594794686291}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) - ( PN - MDR ) ) + Min( ( Min( MRS ,Const ) * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / FirstVNF_CPU_Server ),RRS ) ) * Min( FirstVNF_CPU ,ACS ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / ( Min( MUM ,DS ) / ( Min( DS ,DS ) + MLU ) ) ),( Max( ( ( MUR / CS ) * ( MUC / Max( RMSe,DS ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ) )", "obj1": 0.9708029197080292, "obj2": 0.007461295861498702}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ) * MDR ) * MDR ) ,( ( ( ( BR + ( MRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,DS ) + CS ) / MUR ) ,( Max( MUC,MUR ) / RRSe ) ) - ( MUC / RMSe ) ) / MUM ) - ( DS * MUC ) ) * Min( ( MUM + Min( MUC ,( RCSe / DS ) ) ) ,Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.5529197080291971, "obj2": 0.3621868660592402}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( Max( ARS,ACS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.20736533557809528}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( Max( AMS,Max( CRS,FirstVNF_CPU_Server ) ) ,( MDR + ( ( FirstVNF_RAM + CRS ) - MRS ) ) ) )", "choosing": "( RCSe + Max( MUC,( Min( Min( ( Max( RRSe,RMSe ) + ( ( RMSe * MUM ) + ( DS - MLU ) ) ) ,( RRSe - ( ( CS / CS ) - RCSe ) ) ) ,MUM ) / RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.46780391853973996}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ARS ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Max( DS,( MLU * DS ) ) + MUC )", "obj1": 0.5036496350364964, "obj2": 0.4390958254016413}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( Max( ( Const / FirstVNF_CPU ),FirstVNF_Mem ) - MDR ) ) + Min( ( MDR * ( ( ( BR + ( Min( Const ,FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( CRS * FirstVNF_RAM_Server ) * PN ) + ( Max( ( ( ACS - Max( RRS,FirstVNF_Mem ) ) - ACS ),Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ) ) )", "choosing": "( MUC + ( ( ( RMSe - Min( CS ,( MLU - ( MUR * Max( MUM,MUC ) ) ) ) ) + RRSe ) + Min( ( ( ( MUM * ( Max( MUR,MUR ) - MUC ) ) / MUM ) / CS ) ,( MUC + DS ) ) ) )", "obj1": 0.6715328467153284, "obj2": 0.2164716767214464}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * MRS ) ,( ( ( MRS - Min( ( FirstVNF_RAM_Server / MDR ) ,RRS ) ) * ( ( Min( AMS ,Max( MRS,BR ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( Min( RMSe ,DS ) + ( ( MUC - MLU ) - CS ) ) ) + ( ( MLU + Max( MUR,( RRSe * CS ) ) ) + RMSe ) )", "obj1": 0.6587591240875912, "obj2": 0.2324785261623008}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( ( RRSe - ( MLU + ( DS * DS ) ) ) - RRSe ) ) + MUC )", "obj1": 0.48175182481751827, "obj2": 0.4754243933561681}, {"determining": "( FirstVNF_RAM_Server + ( ( ( ( ( Min( MRS ,AMS ) * ( ( DDR - FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_CPU ) ) ) + FirstVNF_CPU ) / ( ( Const - BR ) / Max( Min( CRS ,( BR + Const ) ),MDR ) ) ) * BR ) * MDR ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( ( ( RRSe / MUM ) + MLU ) - MLU ) ),( ( CS / Min( ( RCSe / MUR ) ,( CS + MUR ) ) ) / RRSe ) ) ) / ( ( ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( MLU + MUR ) ) - RCSe ),DS ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6468993802843437}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_Mem + RRS ) ) + Min( ( CRS / ARS ) ,( ( ( ( RRS - FirstVNF_Mem ) / ARS ) * ( ( MRS * FirstVNF_RAM_Server ) - ( ( DDR - RRS ) + RRS ) ) ) / ARS ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,Max( ( MLU + MLU ),MUM ) ),( MLU - ( Max( RRSe,MUM ) + MLU ) ) ),RMSe ) ) / ( ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) + ( DS - ( ( Min( ( MLU * MUM ) ,DS ) + MUM ) * RCSe ) ) ) ) + Max( ( Min( Max( RRSe,Max( RRSe,RMSe ) ) ,( Max( MUC,MUR ) / ( ( RRSe - RRSe ) + ( ( RMSe + RCSe ) + DS ) ) ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - Max( MUR,RRSe ) ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5985401459854015, "obj2": 0.29039472458042853}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + ( PN - FirstVNF_RAM ) ) + Min( ( ARS / AMS ) ,( ( ( ARS * MDR ) * ( ( ( MDR + Min( MRS ,ARS ) ) + MRS ) * ( BR + FirstVNF_CPU ) ) ) * MDR ) ) )", "choosing": "Max( ( Max( Max( CS,( ( ( ( RMSe * DS ) + CS ) * CS ) / MUC ) ),( ( RRSe - MLU ) + ( ( RCSe + RMSe ) / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ) ) - MUM ),( RRSe / ( Min( MLU ,DS ) + ( ( ( CS + CS ) + Max( RCSe,MUC ) ) / ( ( Max( DS,( MUC * CS ) ) / RRSe ) - ( CS - ( ( MUR * CS ) - RMSe ) ) ) ) ) ) )", "obj1": 0.6295620437956204, "obj2": 0.25738544919477524}, {"determining": "Max( ( RRS + ( MDR / FirstVNF_RAM_Server ) ),Min( ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - ( CRS - ACS ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( AMS * ARS ) ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * PN ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( MLU * DS ) + ( ( ( MUC * ( ( MUM - DS ) * ( Max( ( RRSe / MLU ),( MUR / MUC ) ) / ( ( MUC * CS ) + MLU ) ) ) ) + MLU ) - MLU ) )", "obj1": 0.39963503649635035, "obj2": 0.6314882633665565}, {"determining": "( ( ( ( BR + ( ( DDR - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / BR ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( FirstVNF_CPU_Server / BR ) ,MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM - FirstVNF_RAM ) - MDR ) ) )", "choosing": "( ( ( MUR - ( MLU + ( DS / Min( MUR ,Max( ( MUC / MUC ),MUC ) ) ) ) ) + ( RRSe + ( Min( MUM ,MUR ) + RRSe ) ) ) * ( DS + ( Max( DS,Max( RCSe,MUM ) ) + Min( Max( CS,CS ) ,MLU ) ) ) )", "obj1": 0.8759124087591241, "obj2": 0.05539817586653941}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( Min( FirstVNF_CPU ,ACS ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( FirstVNF_RAM_Server + Const ) / FirstVNF_CPU_Server ),RRS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + ( ( ( MUM + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.9817518248175182, "obj2": 0.002539456200860402}, {"determining": "( ( ( ( FirstVNF_RAM_Server + MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) * ( Min( ACS ,( FirstVNF_RAM_Server / ACS ) ) + Max( MRS,AMS ) ) ) * Min( Max( MDR,FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( Max( MUC,( Min( ( ( RMSe / RCSe ) * ( ( Min( MUM ,DS ) + ( DS * MUC ) ) * RMSe ) ) ,MUM ) / ( MUC - ( ( RRSe / MUC ) * ( MUR + ( ( CS - RMSe ) * ( MUC * DS ) ) ) ) ) ) ) + ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) )", "obj1": 0.7062043795620438, "obj2": 0.18283561808453183}, {"determining": "( ( ( ( AMS - Max( PN,BR ) ) * ( AMS + FirstVNF_CPU ) ) / ( Min( Max( ( ACS * Const ),( ( DDR / Max( RRS,CRS ) ) / FirstVNF_RAM ) ) ,CRS ) - MDR ) ) + Max( MRS,MRS ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( ( CS / MUR ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,Min( Min( Min( ( RCSe * Max( Max( DS,MUM ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) ,( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4333090978110347}, {"determining": "( ( ( ( PN - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) * PN ) + ( ( FirstVNF_RAM_Server * ( CRS * ACS ) ) + ( PN - MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),Max( MLU,Max( RMSe,MUC ) ) ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC * MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / ( ( Min( CS ,DS ) + CS ) / MUR ) ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.9744525547445255, "obj2": 0.003989515013352384}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( FirstVNF_RAM_Server / ACS ) * DDR ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + RRSe ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Min( RMSe ,MUR ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.6204379562043796, "obj2": 0.2740273451441658}, {"determining": "( ( ( FirstVNF_RAM_Server / ( MRS / FirstVNF_RAM ) ) + AMS ) + ( ( PN - MDR ) + ( ( FirstVNF_RAM_Server / MDR ) * PN ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( Min( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) ,Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( MLU * ( MUR * RCSe ) ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5271088147134937}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( MRS ,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( FirstVNF_Mem * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( DS + MLU ) ) ) ) - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.635036496350365, "obj2": 0.2541048039573933}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( Max( ARS,ACS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6751824817518248, "obj2": 0.21483534606343008}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( FirstVNF_Mem * ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( MUC / ( ( ( ( ( DS - DS ) + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS / RMSe ) )", "obj1": 0.6094890510948905, "obj2": 0.28344833089235605}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( MLU + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) + MUC )", "obj1": 0.4854014598540146, "obj2": 0.47063913979514416}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( ACS + Max( ( RRS / ARS ),BR ) ) - ACS ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,CRS ) ) ) * ( Min( ( DDR / ACS ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( ( Max( MUC,MUM ) * DS ) + DS ) - RRSe ) + ( ( MLU - Min( MUM ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( FirstVNF_Mem + ( BR + CRS ) ) ,Const ) + BR ) ) * PN ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - MLU ) + ( ( MUR / RRSe ) * MUC ) ) ) ) )", "obj1": 0.718978102189781, "obj2": 0.16534685258316}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( BR * ( ARS * MDR ) ) * MDR ) ,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( ( FirstVNF_Mem + ( BR + CRS ) ) ,( MRS - ( ( FirstVNF_CPU / Const ) / FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( MUR / RRSe ) + Max( ( RMSe + RCSe ),Max( Min( RRSe ,CS ),( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - MLU ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.10478130148114113}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) + ( MDR - PN ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( PN - MDR ) - ( MDR - FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) / ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + MDR ) ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( ( ( Min( RMSe ,DS ) + Max( DS,CS ) ) + ( Min( RMSe ,MUR ) - ( MUR - MUM ) ) ) / Max( RRSe,MLU ) ) - MUC ) - ( MUR - RRSe ) ),RRSe ) + ( ( ( CS + MLU ) * MUR ) - ( ( ( Min( DS ,DS ) - ( MUM / ( ( RCSe - RRSe ) + DS ) ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) ) )", "obj1": 0.7828467153284672, "obj2": 0.10782336963180424}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( MDR + BR ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) - ( RMSe / RMSe ) ) / MUM ) - ( MUM - Min( DS ,( RMSe - ( ( RMSe * DS ) + RCSe ) ) ) ) ) * Min( Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ,( MUM + Min( MUC ,( RCSe / DS ) ) ) ) )", "obj1": 0.6551094890510949, "obj2": 0.2371117087674043}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( ( ( BR * ( ARS * MDR ) ) * MDR ) + ( ( Min( ( FirstVNF_Mem + ( BR + CRS ) ) ,( MRS - ( ( FirstVNF_CPU / Const ) / FirstVNF_Mem ) ) ) * ( Min( FirstVNF_CPU_Server ,MDR ) * Max( Const,BR ) ) ) / MDR ) ) )", "choosing": "( ( MUR / RRSe ) + Max( Max( Min( DS ,CS ),( ( CS / ( ( Min( DS ,MUM ) / MUR ) * ( DS - ( RRSe / MUM ) ) ) ) + RMSe ) ),( RMSe + RCSe ) ) )", "obj1": 0.8540145985401459, "obj2": 0.06291402060942072}], "50": [{"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( ACS + Max( ( RRS / ARS ),BR ) ) - ACS ) ) * DDR ) ,( ( ( PN + ( PN - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,CRS ) ) ) * ( Min( ( DDR / ACS ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + ( MUM + CS ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( ( Max( MUC,MUM ) * DS ) + DS ) - RRSe ) + ( ( MLU - Min( MUM ,( MUM * RCSe ) ) ) * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_Mem_Server - ( ACS / FirstVNF_Mem ) ) * ACS ) + ( FirstVNF_CPU + AMS ) ) ) * DDR ) ,( ( BR * ( ( Const / Min( DDR ,( AMS / PN ) ) ) / ARS ) ) * MRS ) ) + ( ( ( ( DDR - FirstVNF_CPU_Server ) - ( MRS + MRS ) ) - MDR ) + CRS ) )", "choosing": "( ( Max( ( MUC * RMSe ),MUM ) + RRSe ) + ( Min( ( RCSe + MUR ) ,RMSe ) + Max( ( ( Max( MUR,( ( MLU / RRSe ) + ( DS * MLU ) ) ) - ( MLU + Max( MUM,DS ) ) ) + Max( ( DS + Min( ( CS + RCSe ) ,( MLU * RCSe ) ) ),MLU ) ),( MUR * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server + ( ( FirstVNF_Mem / ( FirstVNF_Mem - Min( ACS ,FirstVNF_Mem_Server ) ) ) * MDR ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),( RMSe - RCSe ) ) - MUM ),( MUM / ( ( Min( MUC ,CS ) + MLU ) + ( Min( DS ,DS ) + MLU ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6734831640889946}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( ( MDR * RRS ),CRS ) / ( ( Const * DDR ) - BR ) ) ,Min( ARS ,BR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( RMSe * Min( Max( MUR,MUR ) ,RMSe ) ) ) ) - ( ( ( ( ( MUR - ( MUM + CS ) ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5602189781021898, "obj2": 0.34750945858811483}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Max( Const,PN ) - Min( FirstVNF_CPU ,BR ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MLU + Max( Min( ( ( ( RMSe / RMSe ) + MLU ) * Max( MLU,DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) ) / Max( ( MLU / ( MUR + ( RCSe - RRSe ) ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MUM ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + ( ( ( DS + DS ) * ( ( ( ( ( MUM + MLU ) - ( RRSe - MUC ) ) - Min( MLU ,Min( CS ,RCSe ) ) ) - ( RCSe + MLU ) ) - MUC ) ) / ( RMSe - RCSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_RAM_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( ( ( ( ( MDR + ( MDR - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * Min( MUM ,MUM ) ) ) ) / ( RRSe * ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,( DS - MLU ) ) ),RMSe ) ) ) ) + ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( RRSe / MUM ) ) )", "obj1": 0.7427007299270073, "obj2": 0.1472538140594407}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( Max( PN,DDR ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( ( DDR - AMS ) ,FirstVNF_CPU ) ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( Min( MUM ,DS ),Max( ( MUR * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / Max( ( Max( Max( CS,MUC ),( ( MUC * RCSe ) / MUC ) ) * MUC ),( RCSe - Max( ( MUM * Min( RMSe ,MLU ) ),( MLU * DS ) ) ) ) ),( ( Max( ( DS / MUC ),DS ) * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + MLU ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08041118845267595}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( BR * ( ARS * MDR ) ) * MDR ) ,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( ( FirstVNF_Mem + ( BR + CRS ) ) ,( MRS - ( ( FirstVNF_CPU / Const ) / FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( MUR / RRSe ) + Max( ( RMSe + RCSe ),Max( Min( RRSe ,CS ),( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - MLU ) ) ) )", "obj1": 0.791970802919708, "obj2": 0.10478130148114113}, {"determining": "( Min( ( Min( ( ( ACS + Min( ( RRS / MRS ) ,BR ) ) - ACS ) ,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( ( MUR + ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + DS ) ) + ( ( ( Max( MUR,MUM ) - ( MLU + Max( MUR,( RRSe * CS ) ) ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.5817390245261118}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( ( MDR / BR ) * BR ) - FirstVNF_Mem_Server ) ) * FirstVNF_Mem_Server ) - ( PN - MDR ) ) + Min( Max( BR,DDR ) ,PN ) )", "choosing": "( ( MLU - ( ( DS * ( MUC - Min( RMSe ,DS ) ) ) / DS ) ) + ( MUC / ( DS * RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5455254012037615}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( ( ( MLU * DS ) + MUC ) ,RCSe ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.4489051094890511, "obj2": 0.5337817627924759}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - BR ) ) ,( ( ( ( BR + ( ( MDR - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( ARS * MDR ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + ( RCSe * MUM ) ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * RRSe ) ) ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6952554744525548, "obj2": 0.1951482549027235}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( ( CS - ( MUC - MUR ) ) - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.5675182481751825, "obj2": 0.3365310327052935}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( FirstVNF_Mem - Max( ARS,FirstVNF_RAM_Server ) ) - RRS ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( RRS + ( MDR - Min( FirstVNF_CPU ,PN ) ) ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,MDR ) ) * Min( ( DDR * Const ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( DS * RCSe ) ) + ( MLU - Max( DS,( ( CS / RCSe ) * Max( MUC,Max( Min( RMSe ,Max( RCSe,MLU ) ),MLU ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6113317375789231}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( ( ( Max( MDR,ACS ) - FirstVNF_Mem ) + Max( ( MDR / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) ) / ( RRS - BR ) ) ,( FirstVNF_CPU_Server - MDR ) ) + Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "Max( RMSe,( MUR - ( ( MUR + ( Max( MLU,DS ) / MUR ) ) - ( ( ( CS / DS ) - RCSe ) - CS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08607328129706897}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) * ( ( Min( AMS ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + ( DS * MLU ) ) ) )", "obj1": 0.5401459854014599, "obj2": 0.38528806806189153}, {"determining": "( FirstVNF_RAM_Server + ( ( Max( ( ( ACS - Max( RRS,FirstVNF_Mem ) ) - ACS ),Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * BR ) * MDR ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( Max( RRSe,RRSe ) - MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.3886861313868613, "obj2": 0.6583719041321215}, {"determining": "( ( ( ( ( PN - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) * PN ) + Max( ( ( Const - FirstVNF_Mem ) * FirstVNF_Mem_Server ),CRS ) ) + Min( Max( BR,DDR ) ,PN ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,DS ) + CS ) / MUR ) ,( Max( MUC,MUR ) / RRSe ) ) - Min( MUC ,RMSe ) ) / MUM ) - ( DS * MUC ) ) * Min( ( MUM + Min( MUC ,( RCSe / DS ) ) ) ,Min( Min( ( ( MUC / RRSe ) * MLU ) ,RCSe ) ,( ( MUM + ( DS * MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7518248175182481, "obj2": 0.13346019513124177}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / FirstVNF_CPU_Server ),RRS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.30533937773292386}, {"determining": "( ( ( ( CRS + PN ) * ( RRS / ( FirstVNF_Mem / PN ) ) ) - Max( PN,MDR ) ) + Min( ( ( RRS - Const ) + FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_Mem,DDR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( DS ,Max( CS,( MUM / MUC ) ) ) / MUC ) * ( Min( ( ( DS - MLU ) - MUR ) ,Max( DS,( MLU - DS ) ) ) - MUR ) ) + ( Min( ( MLU * MLU ) ,( MLU * CS ) ) - ( ( RRSe - ( RRSe - ( Min( ( MUC * RCSe ) ,MLU ) / Max( CS,MLU ) ) ) ) + ( CS * MUR ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.40670677624697654}, {"determining": "( ( ( FirstVNF_CPU * PN ) + ( CRS / MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) * ( FirstVNF_Mem_Server / MRS ) ) / MDR ) ,( ( ( CRS * ( RRS * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) / MDR ) ) )", "choosing": "( ( MUM + MUR ) + ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( DS + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) )", "obj1": 0.8704379562043796, "obj2": 0.0576933700217704}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) * MDR ) * BR ) * ( Const * MDR ) ) ,( ( ( Max( BR,( ( FirstVNF_Mem_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Max( MDR,( MDR - FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( Min( MUR ,Min( RCSe ,( MUC - ( ( MUM + RRSe ) / ( DS + RMSe ) ) ) ) ) * MLU ) * ( Max( MUC,( RMSe - MLU ) ) - MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6209613042832636}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + ( Max( CRS,BR ) + BR ) ) ) * FirstVNF_RAM ) ) + Min( ( ( Min( Min( AMS ,Max( DDR,ACS ) ) ,( ( ( MRS * Const ) - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) + ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( MDR - ( FirstVNF_CPU / MDR ) ) ) )", "choosing": "( ( Max( DS,MUR ) + RRSe ) + ( ( Min( DS ,DS ) * Max( RRSe,Max( Min( ( MUM - ( MUC - DS ) ) ,RRSe ),MUR ) ) ) - ( ( ( ( Min( DS ,( MUC / CS ) ) + ( Max( MUM,MUR ) + RRSe ) ) - RRSe ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - ( ( Max( DS,RRSe ) - ( CS - MUC ) ) * MUC ) ) ,Min( Min( ( CS + MLU ) ,DS ) ,( Max( MUC,MUR ) + RRSe ) ) ) ) ) )", "obj1": 0.9361313868613139, "obj2": 0.021037658706304856}, {"determining": "( ( ( PN - MDR ) + ( FirstVNF_RAM_Server * ( ( DDR / ( FirstVNF_Mem + MDR ) ) * MDR ) ) ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( RCSe + ( ( CS * ( ( MUR + RCSe ) + ( Max( DS,( RMSe / CS ) ) + Min( MUM ,Min( RRSe ,MUM ) ) ) ) ) + DS ) ) + MUC )", "obj1": 0.6441605839416058, "obj2": 0.24135252208660948}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( MDR + BR ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) - ( RMSe / RMSe ) ) / MUM ) - ( MUM - Min( DS ,( RMSe - ( ( RMSe * DS ) + RCSe ) ) ) ) ) * Min( Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ,( MUM + Min( MUC ,( RCSe / DS ) ) ) ) )", "obj1": 0.6551094890510949, "obj2": 0.2371117087674043}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + AMS ) + ( ( FirstVNF_RAM_Server - AMS ) * Min( ( BR / BR ) ,FirstVNF_CPU ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * RRSe ) ) ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( Min( MUR ,MLU ) - Min( MLU ,RCSe ) ) ) - Min( RCSe ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5675182481751825, "obj2": 0.3365310327052935}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_CPU_Server - ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) * PN ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / ( ( Min( CS ,DS ) + CS ) / MUR ) ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.7609489051094891, "obj2": 0.12461180450972237}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ACS ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( ( Max( CRS,FirstVNF_RAM_Server ) - PN ) + ( Min( RRS ,FirstVNF_Mem_Server ) / DDR ) ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - DDR ) ,( ( ( ( BR + Max( MDR,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS * ( PN + FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( MLU + ( ( CS / ( MUR * MLU ) ) / Min( ( MUM - MLU ) ,Max( MUM,( RMSe * MUR ) ) ) ) ),Max( MUR,( ( RMSe + Max( Max( RRSe,DS ),Max( MUC,RMSe ) ) ) - MUM ) ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7116788321167883, "obj2": 0.17591911961781034}, {"determining": "( Max( ( FirstVNF_Mem_Server * ARS ),( MDR - ( MRS - FirstVNF_Mem_Server ) ) ) + Min( ( MRS - ACS ) ,RRS ) )", "choosing": "( ( ( RRSe * MUR ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) + ( Max( MUM,DS ) + RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5723157656738803}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( Const + Max( ( ARS / RRS ),BR ) ) - ACS ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + ( ( ARS - FirstVNF_CPU_Server ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + ( ( ( ( RRSe * CS ) - ( MLU + Max( ( RRSe * CS ),MUR ) ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) * ( MUR * MUC ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4575221502541406}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + ( ( ( BR + ( ( ( MDR + BR ) - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * PN ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - MLU ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.9452554744525548, "obj2": 0.01593484948695355}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / MDR ) ) + Min( ( MDR * MDR ) ,( Min( ( FirstVNF_CPU + BR ) ,MRS ) - Max( RRS,( Max( RRS,AMS ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( CS * ( RMSe * CS ) ) + ( CS + ( ( Max( ( ( MLU - CS ) * ( MUC + RCSe ) ),MLU ) + MUM ) + DS ) ) ) + MUC )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( FirstVNF_CPU + BR ) * ( ARS * MDR ) ) * MDR ) ,( ( ( ( BR + Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,( FirstVNF_CPU - AMS ) ) ) * Max( Const,BR ) ) * Min( ( FirstVNF_Mem + ( BR + CRS ) ) ,( MRS - ( ( FirstVNF_CPU / Const ) / FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( MUR / RRSe ) + Max( ( RMSe + RCSe ),Max( ( ( RCSe + RMSe ) / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ),( ( CS / ( ( MUM / MUR ) * ( DS - ( RRSe / MUM ) ) ) ) + RMSe ) ) ) )", "obj1": 0.8521897810218978, "obj2": 0.064910084014711}, {"determining": "( Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ( MDR * FirstVNF_Mem ) - ARS ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * ARS ),FirstVNF_RAM ) / MRS ) ) ) ,( ( ( Max( PN,( MRS + MDR ) ) * Min( AMS ,FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - AMS ) * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,CRS ) ) ) * ( Min( ( DDR / ACS ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,( RCSe * ( Min( RRSe ,RRSe ) + MUC ) ) ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( ( Max( MUC,MUM ) * DS ) + DS ) - RRSe ) + ( ( MLU - Min( MUM ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.5959198663888494}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - Max( RRS,AMS ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( RRS ,Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,DS ) + RRSe ) + ( RCSe - ( DS + MLU ) ) )", "obj1": 0.7481751824817519, "obj2": 0.1402615498242008}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - ( MDR / ( CRS / ( ( FirstVNF_CPU + Max( FirstVNF_Mem,( DDR + FirstVNF_RAM_Server ) ) ) * MDR ) ) ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( DS + CS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),( ( DS / Min( RMSe ,CS ) ) - MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6000862591395966}, {"determining": "( Min( FirstVNF_RAM_Server ,Min( Const ,MDR ) ) + Min( ( ( ( ARS * ( AMS * PN ) ) * BR ) * MDR ) ,( ( Min( ( Max( Min( FirstVNF_CPU ,CRS ),FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,BR ) ) ) ,( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe * ( Min( CS ,DS ) / ( RCSe + MLU ) ) ) ) / ( RCSe - CS ) ) / ( RRSe * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / DS ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( CS ,MUC ) ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8558394160583942, "obj2": 0.06190143025553726}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_RAM_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( ( ( ( ( MDR + ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( ( FirstVNF_RAM_Server / ACS ) ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * Min( MUM ,MUM ) ) ) ) / ( MLU * DS ) ) + ( ( MUR - ( MLU + ( DS / CS ) ) ) - ( RRSe / MUM ) ) )", "obj1": 0.7299270072992701, "obj2": 0.1561325650853995}, {"determining": "( ( ( ( BR + ( ( DDR - AMS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) * MDR ) * Min( ( FirstVNF_CPU_Server / BR ) ,MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( MUR - ( MLU + ( DS / Min( MUR ,( ( DS / DS ) + ( MUM - MUC ) ) ) ) ) ) + ( RRSe + ( Min( MUM ,MUR ) + RRSe ) ) ) * ( Min( RCSe ,( MUC - Min( ( DS * MUR ) ,( MUM + ( RMSe + RCSe ) ) ) ) ) + ( Max( DS,Max( RCSe,MUM ) ) + Min( Max( CS,RRSe ) ,MLU ) ) ) )", "obj1": 0.8138686131386861, "obj2": 0.0908074263838452}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( ( RRSe - ( MLU + ( DS * DS ) ) ) - RRSe ) ) + MUC )", "obj1": 0.48175182481751827, "obj2": 0.4754243933561681}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( Max( MDR,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,RRS ) ) ) + ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( CS / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( DS + MUC ) ),RMSe ) ) / ( MUR * ( MUR * MUR ) ) ) + Max( ( Min( Min( DS ,CS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * Min( DS ,DS ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6405109489051095, "obj2": 0.2483954620091577}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) + ( PN - MDR ) ) + Min( ( ( ( PN * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - ( FirstVNF_RAM_Server * AMS ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + MDR ) ),RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + DS ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / Max( ( MLU / MUM ),( MUR * MUM ) ) ) - ( DS * DS ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) ) )", "obj1": 0.8941605839416058, "obj2": 0.04362003190892363}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( FirstVNF_Mem * AMS ) )", "choosing": "( ( MUC / ( ( ( ( ( DS - Max( DS,MUR ) ) + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS / RMSe ) )", "obj1": 0.6678832116788321, "obj2": 0.2235087860950485}, {"determining": "( ( ( ( FirstVNF_RAM_Server - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( ( ( ( Min( AMS ,AMS ) + ( Max( ARS,MDR ) * ( MDR / DDR ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( MUC - MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - Min( CS ,RRSe ) ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( CRS ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) ) * Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Min( RMSe ,( Max( RCSe,MUC ) + DS ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RCSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.45985401459854014, "obj2": 0.5166265979430197}, {"determining": "( ( Min( ( CRS * Const ) ,CRS ) + ( PN - MDR ) ) + Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( RRS / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem_Server ,( Max( AMS,ARS ) + BR ) ) + ( ( PN - MDR ) - MDR ) ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / MDR ) ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM - Max( Max( Min( CS ,( RMSe + MUM ) ),( MLU - ( ( RRSe / MUC ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + ( MUC + MUR ) )", "obj1": 0.7645985401459854, "obj2": 0.12094156345758214}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_RAM_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( ( ( ( ( MDR + ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,MRS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - MUM ) / ( MUR - ( RCSe * Min( MUM ,MUM ) ) ) ) / ( RRSe * ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ),RMSe ) ) ) ) + ( ( MUR - ( Min( ( CS - RRSe ) ,CS ) + ( DS / CS ) ) ) - ( RRSe / MUM ) ) )", "obj1": 0.7299270072992701, "obj2": 0.1561325650853995}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ) * MDR ) * MDR ) ,( ( ( ( BR + ( MRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( Max( MUC,( Min( ( ( RMSe + DS ) - CS ) ,MUM ) / RRSe ) ) + RCSe )", "obj1": 0.5529197080291971, "obj2": 0.3621868660592402}, {"determining": "( Max( MDR,( ( FirstVNF_CPU + FirstVNF_CPU ) * ( ( FirstVNF_CPU * DDR ) / BR ) ) ) / ( Max( FirstVNF_RAM_Server,BR ) + Const ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Max( RCSe,( ( Max( MUM,MUR ) - RCSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( Max( DS,RCSe ) ,( MLU + Max( ( MUC - MUC ),( RRSe - ( MUC - RMSe ) ) ) ) ) ) ) - ( ( ( ( ( MUC / MUC ) - MUR ) + ( RCSe / ( RCSe / MUC ) ) ) * MUC ) + Max( MLU,DS ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5623306320022182}, {"determining": "Max( ( RRS + ( MDR / FirstVNF_RAM_Server ) ),Min( ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) ,Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - AMS ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * PN ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( MLU * DS ) + MUC )", "obj1": 0.4635036496350365, "obj2": 0.5054602823307038}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ( FirstVNF_CPU_Server * AMS ) ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( MUM / ( ( RCSe - RRSe ) + ( CS / MLU ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS + MUC ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.09328609638246858}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( MRS ,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( Min( FirstVNF_CPU ,ACS ) ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( FirstVNF_Mem * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( DS + MLU ) ) ) ) - ( Min( CS ,( ( MLU + MLU ) + MUM ) ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6277372262773723, "obj2": 0.2641150770253627}, {"determining": "( ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) + Min( ( FirstVNF_CPU_Server + Max( PN,FirstVNF_Mem ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( MUR * ( MUM / MUC ) ) + DS ) + RRSe ) + ( ( RRSe + Max( MUM,MUR ) ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / RCSe ) ) - MLU ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.6420970516020782}, {"determining": "( ( ( ( FirstVNF_RAM_Server + MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) * ( Min( ACS ,( FirstVNF_RAM_Server / ACS ) ) + Max( MRS,AMS ) ) ) * Min( Max( MDR,FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( Max( MUC,( Min( ( ( RMSe / RCSe ) * ( ( Min( MUM ,DS ) + ( DS * MUC ) ) * RMSe ) ) ,MUM ) / ( MUC - ( ( RRSe / MUC ) * ( MUR + ( ( CS - RMSe ) * ( MUC * DS ) ) ) ) ) ) ) + ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) )", "obj1": 0.7062043795620438, "obj2": 0.18283561808453183}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,ARS ) + FirstVNF_RAM_Server ) ) / MDR ) * Max( ARS,( PN + Min( Const ,( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ) ) ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server / ( ( PN / FirstVNF_CPU ) * ( ARS - FirstVNF_Mem_Server ) ) ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - Max( MUM,RRSe ) ) + ( MUC * MUC ) ) / ( ( DS - Max( ( DS + MUM ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) + MUM ) )", "obj1": 0.4708029197080292, "obj2": 0.49829722313659125}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( ACS + Max( ( RRS / ARS ),BR ) ) - ACS ) ) * DDR ) ,( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,CRS ) ) ) * ( Min( ( DDR / ACS ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + ( MUM + CS ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( ( Max( MUC,MUM ) * DS ) + DS ) - RRSe ) + ( ( MLU - Min( MUM ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.16845665729467252}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ,RRS ) - FirstVNF_Mem ) ,( ( ( Min( Max( CRS,FirstVNF_Mem ) ,( RRS + Min( RRS ,FirstVNF_CPU_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( RCSe * RRSe ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + Min( Min( DS ,DS ) ,RMSe ) ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) * MUM ) )", "obj1": 0.7007299270072993, "obj2": 0.1854078889491354}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ( FirstVNF_CPU_Server * AMS ) ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( MUM / ( ( RCSe - RRSe ) + ( CS / MLU ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS + MUC ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.8065693430656934, "obj2": 0.09328609638246858}, {"determining": "( ( ( PN * RRS ) + ( PN - MDR ) ) + Min( ( FirstVNF_Mem_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( Max( PN,DDR ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS / DDR ) ) - Min( ( DDR - AMS ) ,FirstVNF_CPU ) ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( Min( MUM ,DS ),Max( ( RCSe * MLU ),( MUR * CS ) ) ) ) - Max( ( Min( MLU ,DS ) / Max( ( Max( Max( CS,MUC ),( ( MUC * MLU ) / MUC ) ) * MUC ),( RCSe - Max( ( MUM * Min( RMSe ,MLU ) ),( MLU * DS ) ) ) ) ),( ( Max( ( DS / MUC ),DS ) * Min( Min( CS ,RMSe ) ,( ( RRSe - MUC ) + ( Min( RRSe ,MLU ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.011569668305391287}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_Mem + RRS ) ) + Min( ( CRS / ARS ) ,( ( ( ( RRS - FirstVNF_Mem ) / ARS ) * ( ( MRS * FirstVNF_RAM_Server ) - ( ( DDR - RRS ) + RRS ) ) ) / ARS ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,Max( ( MLU + MLU ),MUM ) ),( MLU - ( Max( RRSe,MUM ) + MLU ) ) ),RMSe ) ) / ( ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) + ( DS - ( ( Min( ( MLU * MUM ) ,DS ) + MUM ) * RCSe ) ) ) ) + Max( ( Min( Max( RRSe,Max( RRSe,RMSe ) ) ,( Max( MUC,MUR ) / ( ( RRSe - RRSe ) + ( ( RMSe + RCSe ) + DS ) ) ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - Max( MUR,RRSe ) ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5985401459854015, "obj2": 0.29039472458042853}, {"determining": "( ( ( PN * RRS ) + ( PN - MDR ) ) + Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + Max( Min( MUM ,DS ),Max( ( MUR * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / Max( ( Max( ( ( MUC * MLU ) / MUC ),Max( CS,MUC ) ) * MUC ),( RCSe - Max( ( MUM * Min( RMSe ,MLU ) ),( MLU * DS ) ) ) ) ),( ( ( MUC - RCSe ) * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + MLU ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.011569668305391287}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( ACS / FirstVNF_Mem_Server ) - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + FirstVNF_RAM_Server ) * MDR ) ,( MDR / ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - ( MRS + Const ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( MUC,( Min( CS ,MUM ) / ( CS + Max( ( RRSe + RCSe ),Min( ( RRSe * MLU ) ,MUC ) ) ) ) ) + MLU )", "obj1": 0.49635036496350365, "obj2": 0.4522558692545822}, {"determining": "( Min( BR ,PN ) + Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( ( MUR + ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + DS ) ) + ( ( ( Max( MUR,MUM ) - ( MLU + Max( MUR,( RRSe * CS ) ) ) ) + ( CS + MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5694469255539111}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( ARS / BR ) - Min( MRS ,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( ( ( RRSe / MUM ) + MLU ) - MLU ) ),( ( CS / Min( ( RCSe / MUR ) ,( CS + MUR ) ) ) / RRSe ) ) ) / ( ( ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( MLU + MUR ) ) - RCSe ),DS ) ) )", "obj1": 0.6222627737226277, "obj2": 0.26857424088300885}, {"determining": "( FirstVNF_RAM_Server + ( ( Min( FirstVNF_CPU ,CRS ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / DS ) ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.3905109489051095, "obj2": 0.6497273829272394}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ) * MDR ) * MDR ) ,( ( ( ( BR + ( MRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.5529197080291971, "obj2": 0.3621868660592402}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( Max( AMS,Max( CRS,FirstVNF_CPU_Server ) ) ,( MDR + ( ( FirstVNF_RAM + CRS ) - MRS ) ) ) )", "choosing": "( RCSe + Max( MUC,( Min( Min( ( Max( RRSe,RMSe ) + ( ( RMSe * MUM ) + ( DS - MLU ) ) ) ,( RRSe - ( ( CS / CS ) - RCSe ) ) ) ,MUM ) / RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.46780391853973996}, {"determining": "Max( ( Const / PN ),Min( ( Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ARS - ( MDR * FirstVNF_Mem ) ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( DDR * ARS ),FirstVNF_RAM ) / MRS ) ) ) ,( ( ( Max( PN,( MRS + MDR ) ) * Min( AMS ,FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - AMS ) * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ) ) )", "choosing": "( Max( ( Min( CS ,RCSe ) / Min( ( MUM / DS ) ,MUC ) ),RCSe ) * ( ( MUC * MLU ) * DS ) )", "obj1": 0.4744525547445255, "obj2": 0.4904355250929441}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( Max( ( Const / FirstVNF_CPU ),FirstVNF_Mem ) - MDR ) ) + Min( ( MDR * ( ( ( BR + ( Min( Const ,FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( CRS * FirstVNF_RAM_Server ) * PN ) + ( Max( ( ( ACS - Max( RRS,FirstVNF_Mem ) ) - ACS ),Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ) ) )", "choosing": "( MUC + ( ( ( RMSe - Min( CS ,( MLU - ( MUR * Max( MUM,MUC ) ) ) ) ) + RRSe ) + Min( ( ( ( MUM * ( Max( MUR,MUR ) - MUC ) ) / MUM ) / CS ) ,( MUC + DS ) ) ) )", "obj1": 0.6715328467153284, "obj2": 0.2164716767214464}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( AMS - Max( FirstVNF_RAM_Server,ACS ) ) ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( ( ( CS + RMSe ) - RMSe ) ,RCSe ) * MLU ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6605839416058394, "obj2": 0.2268763980845105}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + Min( Min( DS ,RRSe ) ,RMSe ) ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) + MUM ) )", "obj1": 0.6587591240875912, "obj2": 0.23010591737059288}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ) * MDR ) * MDR ) ,( ( ( ( BR + ( MRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( DDR + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( Max( MUC,( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + RCSe )", "obj1": 0.5328467153284672, "obj2": 0.39297195909973587}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( Max( ARS,ACS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6861313868613139, "obj2": 0.20133922293976056}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "Max( ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.6021897810218978, "obj2": 0.2878721631365925}, {"determining": "( ( ( ( FirstVNF_Mem_Server * AMS ) * FirstVNF_Mem_Server ) + ( ( Min( ( ( FirstVNF_Mem_Server + PN ) / ACS ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) - MDR ) ) + Max( Max( BR,DDR ),PN ) )", "choosing": "( ( RRSe * RMSe ) + ( MUC / ( RMSe * RCSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5558486133723582}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Max( ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ),Min( ( FirstVNF_Mem / MDR ) ,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / ( Const + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( DDR / PN ) ) ) ) ,( AMS - BR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( ( CS / RCSe ) * MLU ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( ( FirstVNF_RAM + Max( Const,Max( ( FirstVNF_RAM + Min( MRS ,PN ) ),MRS ) ) ) + ( PN - AMS ) ) + Min( ( MDR * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( FirstVNF_CPU_Server,DDR ) + PN ) ) * ( ( Min( MDR ,Max( DDR,BR ) ) + ( FirstVNF_Mem_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - Max( RMSe,( DS + Min( MLU ,MUR ) ) ) ) ) + Min( CS ,RRSe ) ) ) - ( MUC / ( ( MUM - CS ) - ( DS * MLU ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.391440898081791}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( FirstVNF_RAM_Server / ACS ) * DDR ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + RRSe ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Min( RMSe ,MUR ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.6204379562043796, "obj2": 0.2740273451441658}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) - ( PN - MDR ) ) + Min( ( Min( MRS ,Const ) * MDR ) ,( ( ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / FirstVNF_CPU_Server ),RRS ) ) * Min( FirstVNF_CPU ,ACS ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / ( Min( MUM ,DS ) / ( Min( DS ,DS ) + MLU ) ) ),( Max( ( ( MUR / CS ) * ( MUC / Max( RMSe,DS ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ) )", "obj1": 0.9708029197080292, "obj2": 0.007461295861498702}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( ( ( Min( RMSe ,DS ) + Max( DS,CS ) ) + ( Min( RMSe ,MUR ) - ( MUR - MUM ) ) ) / Max( RRSe,MLU ) ) - MUC ) - ( MUR - RRSe ) ),RRSe ) + ( ( ( CS + MLU ) * MUR ) - ( ( ( Min( DS ,DS ) - ( MUM / ( ( RCSe - RRSe ) + DS ) ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4150512120717833}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + AMS ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( AMS - Max( FirstVNF_RAM_Server,ACS ) ) ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( Min( RMSe ,( MUM * RCSe ) ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6167883211678832, "obj2": 0.2779078992122371}, {"determining": "Max( ( RRS + ( MDR / FirstVNF_RAM_Server ) ),Min( ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - ( CRS - ACS ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( AMS * ARS ) ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * PN ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( MLU * DS ) + ( ( ( MUC * ( ( MUM - DS ) * ( Max( ( RRSe / MLU ),( MUR / MUC ) ) / ( ( MUC * CS ) + MLU ) ) ) ) + MLU ) - MLU ) )", "obj1": 0.39963503649635035, "obj2": 0.6314882633665565}, {"determining": "( ( ( ( BR + ( ( DDR - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / BR ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( FirstVNF_CPU_Server / BR ) ,MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM - FirstVNF_RAM ) - MDR ) ) )", "choosing": "( ( ( MUR - ( MLU + ( DS / Min( MUR ,Max( ( MUC / MUC ),MUC ) ) ) ) ) + ( RRSe + ( Min( MUM ,MUR ) + RRSe ) ) ) * ( DS + ( Max( DS,Max( RCSe,MUM ) ) + Min( Max( CS,CS ) ,MLU ) ) ) )", "obj1": 0.8759124087591241, "obj2": 0.05539817586653941}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( FirstVNF_Mem + ( BR + CRS ) ) ,Const ) + BR ) ) * PN ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS + MUC ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.718978102189781, "obj2": 0.16534685258316}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( BR * ( ARS * MDR ) ) * MDR ) ,( ( ( ( BR + Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,AMS ) ) ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * Min( ( FirstVNF_Mem + ( BR + CRS ) ) ,( Min( ( FirstVNF_CPU_Server / BR ) ,MDR ) - ( ( FirstVNF_CPU / Const ) / FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( Max( CS,CS ) + Max( ( RMSe + RCSe ),Max( Min( RRSe ,CS ),( ( CS / ( ( MUR / ( CS + DS ) ) * ( DS - ( RRSe / MUM ) ) ) ) + RMSe ) ) ) )", "obj1": 0.9434306569343066, "obj2": 0.020727783264683237}, {"determining": "( ( ( ( AMS - Max( PN,BR ) ) * ( AMS + FirstVNF_CPU ) ) / ( Min( Max( ( ACS * Const ),( ( DDR / Max( RRS,CRS ) ) / FirstVNF_RAM ) ) ,CRS ) - MDR ) ) + Max( MRS,MRS ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( ( CS / MUR ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,Min( Min( Min( ( RCSe * Max( Max( DS,MUM ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) ,( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4333090978110347}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - FirstVNF_Mem ) )", "choosing": "( ( Min( CS ,Min( RCSe ,( MUC - Min( ( DS * MUR ) ,( MUM + ( RMSe + RCSe ) ) ) ) ) ) * MLU ) * ( Max( MUC,( MUM / Min( MLU ,MUM ) ) ) - MUR ) )", "obj1": 0.3978102189781022, "obj2": 0.6320716753181514}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( PN - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( Max( ( ( ( RMSe + DS ) - CS ) + Min( Min( DS ,DS ) ,RMSe ) ),Max( MUM,MUR ) ) - ( RCSe * ( Min( MLU ,MUM ) / ( MLU + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) + MUC )", "obj1": 0.5182481751824818, "obj2": 0.41466455195843505}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( Max( ( Const / FirstVNF_CPU ),FirstVNF_Mem ) - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_Mem - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( Min( ( BR / ACS ) ,ACS ) - ( FirstVNF_RAM_Server - AMS ) ) ) * ( MDR + BR ) ) ) ,Max( Max( ( BR - ( ARS - Max( RRS,FirstVNF_CPU_Server ) ) ),ACS ),ARS ) ) )", "choosing": "( MUC + Min( DS ,RCSe ) )", "obj1": 0.47992700729927007, "obj2": 0.4875276581106457}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( Max( ARS,ACS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6751824817518248, "obj2": 0.21483534606343008}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( MLU + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) + MUC )", "obj1": 0.4854014598540146, "obj2": 0.47063913979514416}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,CRS ) ) ) * ( Min( ( DDR / ACS ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( Max( ARS,ACS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - Max( MUC,MUR ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.614963503649635, "obj2": 0.28324344136454654}], "51": [{"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( MDR + BR ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( ( ( ( ( MDR + ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,MRS ) ) ) * ( Min( FirstVNF_RAM ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( ( ( ( RCSe - MUM ) / ( MUR - ( RCSe * Min( MUM ,MUM ) ) ) ) / ( RRSe * ( MUC - Max( Min( ( MLU + MUR ) ,Min( Min( MUM ,DS ) ,RMSe ) ),RMSe ) ) ) ) + ( ( MUR - ( Min( ( CS - RRSe ) ,CS ) + ( DS / CS ) ) ) - ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( ACS + Max( ( RRS / ARS ),BR ) ) - ACS ) ) * DDR ) ,( ( ( PN + ( PN - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,CRS ) ) ) * ( Min( ( DDR / ACS ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + ( MUM + CS ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( ( Max( MUC,MUM ) * DS ) + DS ) - RRSe ) + ( ( MLU - Min( MUM ,( MUM * RCSe ) ) ) * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server + ( ( FirstVNF_Mem / ( FirstVNF_Mem - Min( ACS ,FirstVNF_Mem_Server ) ) ) * MDR ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),( RMSe - RCSe ) ) - MUM ),( MUM / ( ( Min( MUC ,CS ) + MLU ) + ( Min( DS ,DS ) + MLU ) ) ) )", "obj1": 0.38503649635036497, "obj2": 0.6734831640889946}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( Max( ARS,ACS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6861313868613139, "obj2": 0.20133922293976056}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( Max( MDR,( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,RRS ) ) ) + ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( CS / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( DS + MUC ) ),RMSe ) ) / ( MUR * ( MUR * MUR ) ) ) + Max( ( Min( Min( DS ,CS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * Min( DS ,DS ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6405109489051095, "obj2": 0.2483954620091577}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * RRSe ) ) ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5766423357664233, "obj2": 0.32517452695527366}, {"determining": "( ( ( ( FirstVNF_Mem_Server * AMS ) * FirstVNF_Mem_Server ) + ( ( Min( ( DDR / ACS ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) - MDR ) ) + Min( Max( BR,DDR ) ,( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_RAM_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) )", "choosing": "( ( MLU - Max( ( DS * ( MUC - Max( RCSe,MLU ) ) ),DS ) ) + ( MUC / ( DS * RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5335735407263975}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ) * MDR ) * MDR ) ,( ( ( ( BR + ( MRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( DDR + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( RMSe * Min( Max( MUR,MUR ) ,RMSe ) ) ) ) - ( ( ( ( ( MUR - ( MUM + CS ) ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5383211678832117, "obj2": 0.38221422392862914}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MDR + FirstVNF_RAM_Server ) ) * BR ) * ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( AMS * RRS ) ) + ( Min( Min( AMS ,Max( FirstVNF_Mem,MRS ) ) ,DDR ) + ( ARS - MDR ) ) )", "choosing": "( ( MUR + MUR ) + ( MLU * Max( MUC,( RCSe + RCSe ) ) ) )", "obj1": 0.9142335766423357, "obj2": 0.02925590545692747}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + ( ( ( DS + DS ) * ( ( ( ( ( MUM + MLU ) - ( RRSe - MUC ) ) - Min( MLU ,Min( CS ,RCSe ) ) ) - ( RCSe + MLU ) ) - MUC ) ) / ( RMSe - RCSe ) ) )", "obj1": 0.8996350364963503, "obj2": 0.03813229563298418}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Max( Const,PN ) - Min( FirstVNF_CPU ,BR ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( MLU + Max( Min( ( ( ( RMSe / RMSe ) + MLU ) * Max( MLU,DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) ) / Max( ( MLU / ( MUR + ( RCSe - RRSe ) ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MUM ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5474452554744526, "obj2": 0.37131860279688705}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * Max( ( FirstVNF_Mem + MDR ),Min( Max( ARS,ACS ) ,CRS ) ) ) * MDR ) * MDR ) ,( ( ( ( BR + ( MRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( DDR + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( Max( MUC,( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + RCSe )", "obj1": 0.5328467153284672, "obj2": 0.39297195909973587}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( Min( FirstVNF_Mem ,ACS ),MDR ) ) + ( PN - MDR ) ) + Min( ( ( ( ( ARS / Min( FirstVNF_RAM ,AMS ) ) * ( BR + ( ( MDR / DDR ) * RRS ) ) ) * FirstVNF_Mem_Server ) / ( Const + Min( Min( ARS ,( DDR / ( RRS / MDR ) ) ) ,Max( PN,MRS ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Min( ( MUC / CS ) ,Min( ( DS - MLU ) ,( ( MUR + RMSe ) * MLU ) ) ) + ( ( MLU - Min( ( MUC * Min( RMSe ,( Max( DS,RRSe ) + RCSe ) ) ) ,MUR ) ) * Min( CS ,DS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.07327396837505598}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + Min( BR ,( ( ( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem ) + PN ) / AMS ) ) ) + ( ARS / Const ) )", "choosing": "( ( MUC + Max( DS,MUC ) ) + ( Max( RMSe,( RCSe + Max( MUC,MUC ) ) ) / ( Max( MUC,MUR ) + RMSe ) ) )", "obj1": 0.5821167883211679, "obj2": 0.3134683870217914}, {"determining": "( ( ( MDR * PN ) + ( PN - MDR ) ) + Min( Max( RRS,FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - AMS ) + MRS ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MLU ) + ( MLU + Min( RRSe ,RCSe ) ) ) + ( Min( MUM ,( DS - DS ) ) - ( ( CS * MUC ) + ( RRSe - ( ( RMSe + CS ) - Max( ( RMSe - ( RCSe * RRSe ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.7737226277372263, "obj2": 0.11768888886107921}, {"determining": "( Max( MRS,DDR ) + Max( CRS,( Min( ( Const + ( BR - Const ) ) ,Min( MDR ,ACS ) ) / RRS ) ) )", "choosing": "( ( MUR / MUR ) * ( ( Max( ( RRSe / ( RRSe - Max( CS,Max( MUR,MUR ) ) ) ),MUC ) * CS ) + RCSe ) )", "obj1": 0.9233576642335767, "obj2": 0.026587606048830127}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( Max( ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ),Min( ( FirstVNF_Mem / MDR ) ,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / ( Const + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( DDR / PN ) ) ) ) ,( AMS - BR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + Min( ( Min( MUM ,CS ) - MUC ) ,( ( RMSe * ( ( CS / RCSe ) * MLU ) ) / ( RCSe - RCSe ) ) ) ) - Min( Min( DS ,DS ) ,MUM ) ) )", "obj1": 0.8868613138686131, "obj2": 0.046564408405395205}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem + ( FirstVNF_RAM_Server / MDR ) ),Min( Max( ARS,ACS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MUC + DS ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) ),Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6751824817518248, "obj2": 0.21483534606343008}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - PN ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( ( ( MLU * DS ) + MUC ) ,RCSe ) ) ),Max( ( ( DS * CS ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5247929067965547}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( ( FirstVNF_Mem - Max( ARS,FirstVNF_RAM_Server ) ) - RRS ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MDR ) * BR ) * MDR ) ,( ( ( ( RRS + ( MDR - Min( FirstVNF_CPU ,PN ) ) ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,MDR ) ) * Min( ( DDR * Const ) ,( MDR / FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( DS * RCSe ) ) + ( MLU - Max( DS,( ( CS / RCSe ) * Max( MUC,Max( Min( RMSe ,Max( RCSe,MLU ) ),MLU ) ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6113317375789231}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( ( ( Max( MDR,ACS ) - FirstVNF_Mem ) + Max( ( MDR / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) * ( AMS + BR ) ) ) / ( RRS - BR ) ) ,( FirstVNF_CPU_Server - MDR ) ) + Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "Max( RMSe,( MUR - ( ( MUR + ( Max( MLU,DS ) / MUR ) ) - ( ( ( CS / DS ) - RCSe ) - CS ) ) ) )", "obj1": 0.8211678832116789, "obj2": 0.08607328129706897}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Max( AMS,BR ) ) - Min( FirstVNF_RAM ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / PN ) ,Const ) + FirstVNF_RAM_Server ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( DS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Min( ( ( ( MUC / ( DS - MLU ) ) * RCSe ) - Min( ( ( Max( ( CS + MUC ),( MLU + RCSe ) ) * RMSe ) - ( MUC - MUR ) ) ,RRSe ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.4282674509490539}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( Const + Max( ( ARS / RRS ),BR ) ) - ACS ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + ( ( ARS - FirstVNF_CPU_Server ) + ( PN - MDR ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( Min( Min( DS ,DS ) ,RMSe ) + ( ( ( ( RRSe * CS ) - ( MLU + Max( ( RRSe * CS ),MUR ) ) ) + Max( ( ( ( RRSe - RCSe ) * DS ) + DS ),MLU ) ) * ( MUR * MUC ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4575221502541406}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( ( MDR * RRS ),CRS ) / ( ( Const * DDR ) - BR ) ) ,Min( ARS ,BR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( RMSe * Min( Max( MUR,MUR ) ,RMSe ) ) ) ) - ( ( ( ( ( MUR - ( MUM + CS ) ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5602189781021898, "obj2": 0.34750945858811483}, {"determining": "( ( ( ( ( PN - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) * PN ) + Max( ( ( Const - FirstVNF_Mem ) * FirstVNF_Mem_Server ),CRS ) ) + Min( Max( BR,DDR ) ,PN ) )", "choosing": "( ( ( ( Min( ( ( Min( CS ,DS ) + CS ) / MUR ) ,( Max( MUC,MUR ) / RRSe ) ) - Min( MUC ,RMSe ) ) / MUM ) - ( DS * MUC ) ) * Min( ( MUM + Min( MUC ,( RCSe / DS ) ) ) ,Min( Min( ( ( MUC / RRSe ) * MLU ) ,RCSe ) ,( ( MUM + ( DS * MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7518248175182481, "obj2": 0.13346019513124177}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( Max( PN,DDR ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( ( DDR - MRS ) ,FirstVNF_CPU ) ) ) ) - MDR ) ) )", "choosing": "( ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( MLU + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) - Max( ( Min( MLU ,DS ) / Max( ( Max( Max( CS,MUC ),( ( MUC * RCSe ) / MUC ) ) * MUC ),( RCSe - Max( ( MUM * Min( RMSe ,MLU ) ),( MLU * DS ) ) ) ) ),( ( Max( ( DS / MUC ),DS ) * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + MLU ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.0012697281004302012}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( MRS + Const ) / FirstVNF_CPU_Server ),RRS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) - MUM ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.30533937773292386}, {"determining": "( ( ( ( BR + ( ( DDR - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / BR ) ,FirstVNF_RAM_Server ) + BR ) ) * Min( ( FirstVNF_CPU_Server / BR ) ,MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM - FirstVNF_RAM ) - MDR ) ) )", "choosing": "( ( ( MUR - ( MLU + ( DS / Min( MUR ,Max( ( MUC / MUC ),MUC ) ) ) ) ) + ( RRSe + ( Min( MUM ,MUR ) + RRSe ) ) ) * ( DS + ( Max( DS,Max( RCSe,MUM ) ) + Min( Max( CS,CS ) ,MLU ) ) ) )", "obj1": 0.8759124087591241, "obj2": 0.05539817586653941}, {"determining": "( ( ( FirstVNF_CPU * PN ) + ( CRS / MDR ) ) + Min( ( ( ( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) * ( FirstVNF_Mem_Server / MRS ) ) / MDR ) ,( ( ( CRS * ( RRS * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) / MDR ) ) )", "choosing": "( ( MUM + MUR ) + ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( DS + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) )", "obj1": 0.8704379562043796, "obj2": 0.0576933700217704}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + Min( ( ( ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) * MDR ) * BR ) * ( Const * MDR ) ) ,( ( ( Max( BR,( ( FirstVNF_Mem_Server - AMS ) - Min( FirstVNF_CPU ,PN ) ) ) * ( Max( CRS,BR ) + BR ) ) * Max( MDR,( MDR - FirstVNF_CPU ) ) ) / MDR ) ) )", "choosing": "( ( Min( MUR ,Min( RCSe ,( MUC - ( ( MUM + RRSe ) / ( DS + RMSe ) ) ) ) ) * MLU ) * ( Max( MUC,( RMSe - MLU ) ) - MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6209613042832636}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + ( Max( CRS,BR ) + BR ) ) ) * FirstVNF_RAM ) ) + Min( ( ( Min( Min( AMS ,Max( DDR,ACS ) ) ,( ( ( MRS * Const ) - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) + ( Const / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( MDR - ( FirstVNF_CPU / MDR ) ) ) )", "choosing": "( ( Max( DS,MUR ) + RRSe ) + ( ( Min( DS ,DS ) * Max( RRSe,Max( Min( ( MUM - ( MUC - DS ) ) ,RRSe ),MUR ) ) ) - ( ( ( ( Min( DS ,( MUC / CS ) ) + ( Max( MUM,MUR ) + RRSe ) ) - RRSe ) - RRSe ) + Min( ( Min( RMSe ,MUR ) - ( ( Max( DS,RRSe ) - ( CS - MUC ) ) * MUC ) ) ,Min( Min( ( CS + MLU ) ,DS ) ,( Max( MUC,MUR ) + RRSe ) ) ) ) ) )", "obj1": 0.9361313868613139, "obj2": 0.021037658706304856}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( ( FirstVNF_CPU + BR ) * ( ARS * MDR ) ) * MDR ) ,( ( ( ( BR + Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,( FirstVNF_CPU - AMS ) ) ) * Max( Const,BR ) ) * Min( ( FirstVNF_Mem + ( BR + CRS ) ) ,( MRS - ( ( FirstVNF_CPU / Const ) / FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( MUR / RRSe ) + Max( ( RMSe + RCSe ),Max( ( ( RCSe + RMSe ) / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ),( ( CS / ( ( MUM / MUR ) * ( DS - ( RRSe / MUM ) ) ) ) + RMSe ) ) ) )", "obj1": 0.8521897810218978, "obj2": 0.064910084014711}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ARS ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( CRS ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) ) * Min( ( ( CRS + MRS ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Min( RMSe ,( Max( RCSe,MUC ) + DS ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RCSe ) ) - ( Max( ( Min( MLU ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.45985401459854014, "obj2": 0.5166265979430197}, {"determining": "( Min( FirstVNF_RAM_Server ,Min( Const ,MDR ) ) + Min( ( ( ( ARS * ( AMS * PN ) ) * BR ) * MDR ) ,( ( Min( ( Max( Min( FirstVNF_CPU ,CRS ),FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU ,BR ) ) ) ,( FirstVNF_Mem_Server / CRS ) ) * Min( ( ACS + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( PN - MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe * ( Min( CS ,DS ) / ( RCSe + MLU ) ) ) ) / ( RCSe - CS ) ) / ( RRSe * ( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / DS ) / Max( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( CS ,MUC ) ) ),Max( MUC,MUR ) ) ) ) ) + MUC )", "obj1": 0.8558394160583942, "obj2": 0.06190143025553726}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( ( ( FirstVNF_CPU_Server - ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) * PN ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / Max( ( ( RRSe - MLU ) + ( MLU / Min( Max( Min( RRSe ,CS ),MLU ) ,RCSe ) ) ),Max( ( ( ( ( RMSe * RCSe ) + CS ) * CS ) / RRSe ),CS ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / ( ( Min( CS ,DS ) + CS ) / MUR ) ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.7609489051094891, "obj2": 0.12461180450972237}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ACS ) ) + Min( ( Min( ( FirstVNF_Mem_Server - ( ( Max( CRS,FirstVNF_RAM_Server ) - PN ) + ( Min( RRS ,FirstVNF_Mem_Server ) / DDR ) ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - DDR ) ,( ( ( ( BR + Max( MDR,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS * ( PN + FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( ( MLU + ( ( CS / ( MUR * MLU ) ) / Min( ( MUM - MLU ) ,Max( MUM,( RMSe * MUR ) ) ) ) ),Max( MUR,( ( RMSe + Max( Max( RRSe,DS ),Max( MUC,RMSe ) ) ) - MUM ) ) ) ) + ( Min( MUC ,MUM ) - RMSe ) )", "obj1": 0.7116788321167883, "obj2": 0.17591911961781034}, {"determining": "( Max( ( FirstVNF_Mem_Server * ARS ),( MDR - ( MRS - FirstVNF_Mem_Server ) ) ) + Min( ( MRS - ACS ) ,RRS ) )", "choosing": "( ( ( RRSe * MUR ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) + ( Max( MUM,DS ) + RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.5723157656738803}, {"determining": "( ( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( MRS ,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( Min( FirstVNF_CPU ,ACS ) ,ARS ) ) ) * ( MDR + BR ) ) + ( PN - MDR ) ) + Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( RRS / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem_Server ,( Max( AMS,ARS ) + BR ) ) + ( ( PN - MDR ) - MDR ) ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / MDR ) ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM - Max( Max( Min( CS ,( RMSe + MUM ) ),( MLU - ( ( RRSe / MUC ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + ( MUC + MUR ) )", "obj1": 0.9762773722627737, "obj2": 0.0033012930611185216}, {"determining": "( ( ( ( FirstVNF_CPU / MDR ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( PN - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( Max( MUM,MUR ) + MUC )", "obj1": 0.5291970802919708, "obj2": 0.4067010018834847}, {"determining": "( ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) + Min( ( FirstVNF_CPU_Server + Max( PN,FirstVNF_Mem ) ) ,( ( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( MUR * ( MUM / MUC ) ) + DS ) + RRSe ) + ( ( RRSe + Max( MUM,MUR ) ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / RCSe ) ) - MLU ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.395985401459854, "obj2": 0.6420970516020782}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( Max( ( ( ( ( ( Min( RMSe ,DS ) + Max( DS,CS ) ) + ( Min( RMSe ,MUR ) - ( MUR - MUM ) ) ) / Max( RRSe,MLU ) ) - MUC ) - ( MUR - RRSe ) ),RRSe ) + ( ( ( CS + MLU ) * MUR ) - ( ( ( Min( DS ,DS ) - ( MUM / ( ( RCSe - RRSe ) + DS ) ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4150512120717833}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( Max( ( ( ( RMSe + DS ) - CS ) + Min( Min( DS ,DS ) ,RMSe ) ),Max( MUM,MUR ) ) - ( RCSe * ( Min( MLU ,MUM ) / ( MLU + Max( RMSe,RRSe ) ) ) ) ) ) - ( DS * MUC ) ) + MUC )", "obj1": 0.49635036496350365, "obj2": 0.4479139277372449}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + ( ( ( BR + ( ( ( MDR + BR ) - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / PN ) ,Const ) + BR ) ) * PN ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( DS - Max( MUM,MUC ) ) ) ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - MLU ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.9452554744525548, "obj2": 0.01593484948695355}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN / MDR ) ) + Min( ( MDR * MDR ) ,( Min( ( FirstVNF_CPU + BR ) ,MRS ) - Max( RRS,( Max( RRS,AMS ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( CS * ( RMSe * CS ) ) + ( CS + ( ( Max( ( ( MLU - CS ) * ( MUC + RCSe ) ),MLU ) + MUM ) + DS ) ) ) + MUC )", "obj1": 0.593065693430657, "obj2": 0.2962151066927162}, {"determining": "( ( ( ( FirstVNF_RAM_Server - MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Max( PN,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( ( ( ( Min( AMS ,AMS ) + ( Max( ARS,MDR ) * ( MDR / DDR ) ) ) * ( PN + FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_RAM_Server / MDR ) * RRS ) * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe + Max( MUM,MUR ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( ( MUC - MUR ) ,MUM ) - ( ( ( RRSe - ( ( DS / RMSe ) / MUM ) ) - Min( CS ,RRSe ) ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.44217830840158506}, {"determining": "( Min( ( Max( ( ( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ( MDR * FirstVNF_Mem ) - ARS ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( MRS + Const ) ,( ( ( Max( PN,( MRS + MDR ) ) * Min( AMS ,FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - AMS ) * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,CRS ) ) ) * ( Min( ( DDR / ACS ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( ( Max( MUC,MUM ) * DS ) + DS ) - RRSe ) + ( ( MLU - Min( MUM ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.5950853086505729}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - ( MDR / ( CRS / ( ( FirstVNF_CPU + Max( FirstVNF_Mem,( DDR + FirstVNF_RAM_Server ) ) ) * MDR ) ) ) ) )", "choosing": "( ( MUC / ( ( CS - ( MUC - MUR ) ) + ( DS - Max( ( ( ( DS + CS ) - CS ) + ( ( MUM + CS ) * RCSe ) ),Max( MUM,MUR ) ) ) ) ) + Max( ( MUC - RRSe ),( ( DS / Min( RMSe ,CS ) ) - MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6000862591395966}, {"determining": "( ( ( ( AMS - Max( PN,BR ) ) * ( AMS + FirstVNF_CPU ) ) / ( Min( Max( ( ACS * Const ),( ( DDR / Max( RRS,CRS ) ) / FirstVNF_RAM ) ) ,CRS ) - MDR ) ) + Max( MRS,MRS ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( ( CS / MUR ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,Min( Min( Min( ( RCSe * Max( Max( DS,MUM ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) ,( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4333090978110347}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( FirstVNF_Mem_Server - Max( RRS,AMS ) ) ,RRS ) - DDR ) ,( ( ( ( BR + ( RRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_RAM_Server * PN ),FirstVNF_RAM_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( RRS ,Const ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,DS ) + RRSe ) + ( RCSe - ( DS + MLU ) ) )", "obj1": 0.7481751824817519, "obj2": 0.1402615498242008}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( FirstVNF_Mem + ( BR + CRS ) ) ,Const ) + BR ) ) * PN ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( RRSe - ( ( CS + MUC ) / MUM ) ) - RRSe ) + ( ( MLU - Min( RMSe ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.718978102189781, "obj2": 0.16534685258316}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * RRSe ) ) ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MUC * DS ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5583941605839416, "obj2": 0.36062813924716075}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) + ( PN - MDR ) ) + Min( ( ( ( PN * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - ( FirstVNF_RAM_Server * AMS ) ) ) * ( FirstVNF_CPU + BR ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + MDR ) ),RRS ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + DS ) + ( Min( Min( DS ,DS ) ,MUM ) - ( ( ( ( MUM / Max( ( MLU / MUM ),( MUR * MUM ) ) ) - ( DS * DS ) ) - RRSe ) + ( MLU * Max( Min( MUC ,DS ),MLU ) ) ) ) )", "obj1": 0.8941605839416058, "obj2": 0.04362003190892363}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + ( FirstVNF_Mem * AMS ) )", "choosing": "( ( MUC / ( ( ( ( ( DS - Max( DS,MUR ) ) + Min( ( MUM + MLU ) ,DS ) ) + RCSe ) - DS ) + ( CS - ( MUC - MUR ) ) ) ) + ( CS / RMSe ) )", "obj1": 0.6678832116788321, "obj2": 0.2235087860950485}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( PN - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( Max( ( ( ( RMSe + DS ) - CS ) + Min( Min( DS ,DS ) ,RMSe ) ),Max( MUM,MUR ) ) - ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) * ( Min( MLU ,MUM ) / ( MLU + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) + MUC )", "obj1": 0.4708029197080292, "obj2": 0.4969638699582519}, {"determining": "( ( ( PN * RRS ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( MRS ,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( Min( FirstVNF_CPU ,ACS ) ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( FirstVNF_Mem * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( DS + MLU ) ) ) ) - ( Min( CS ,( ( MLU + MLU ) + MUM ) ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( ( RRSe + MLU ) + DS ) ) - RRSe ),DS ) ) )", "obj1": 0.7992700729927007, "obj2": 0.09775280508284234}, {"determining": "( ( ( ( BR + ( ( DDR - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / BR ) ,( ( MRS * FirstVNF_RAM_Server ) - Min( ( ACS - DDR ) ,RRS ) ) ) + BR ) ) * Min( ( FirstVNF_CPU_Server / BR ) ,MDR ) ) + ( ( FirstVNF_RAM_Server * PN ) + ( ( FirstVNF_RAM - FirstVNF_RAM ) - MDR ) ) )", "choosing": "( ( ( MUR - ( MLU + ( DS / Min( ( RMSe + CS ) ,Max( ( MUC / MUC ),MUC ) ) ) ) ) + ( RRSe + ( Min( MUM ,MUR ) + RRSe ) ) ) * ( DS + ( Max( DS,Max( RCSe,MUM ) ) + Min( Max( CS,CS ) ,MLU ) ) ) )", "obj1": 0.7883211678832117, "obj2": 0.10443023359017685}, {"determining": "( Min( ( Min( ( ( ACS + Min( ( RRS / MRS ) ,BR ) ) - ACS ) ,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ,( ( BR * ( ( CRS - FirstVNF_CPU ) / ARS ) ) * MRS ) ) + Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU + Max( Min( ( ( ( RMSe / RMSe ) + MLU ) * Max( MLU,DS ) ) ,Max( MUR,( MUR * RRSe ) ) ),Min( Min( RMSe ,RCSe ) ,( CS * MUR ) ) ) ) / Max( ( MLU / ( MUR + ( RCSe - RRSe ) ) ),( MUR + ( MUC - MUR ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Max( ( Min( MUM ,DS ) - ( RRSe / MUM ) ),RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.41605839416058393, "obj2": 0.5817390245261118}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_RAM_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( ( ( ( ( MDR + ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,ARS ) ) ) * ( Min( ( FirstVNF_RAM_Server / ACS ) ,AMS ) / ARS ) ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Max( PN,DDR ) ) ) ) ,( BR - MDR ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * Max( RCSe,( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( Max( DS,RCSe ) ,( Max( ( MUC - MUC ),( RRSe - ( MUC - RMSe ) ) ) + MLU ) ) ) ) - ( ( ( ( ( MUC / MUC ) - MUR ) + ( RCSe * ( RCSe / MUC ) ) ) * MUC ) + Max( MLU,DS ) ) )", "obj1": 0.7281021897810219, "obj2": 0.1573720756330531}, {"determining": "( ( Min( ( CRS * Const ) ,CRS ) + ( PN - MDR ) ) + Min( ( ( ( BR + ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( RRS / PN ) ,Const ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem_Server ,( Max( AMS,ARS ) + BR ) ) + ( ( PN - MDR ) - MDR ) ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / MDR ) ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM - Max( Max( Min( CS ,( RMSe + MUM ) ),( MLU - ( ( RRSe / MUC ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + ( MUC + MUR ) )", "obj1": 0.7645985401459854, "obj2": 0.12094156345758214}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - MDR ) ) + Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( Max( PN,DDR ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( ( DDR - AMS ) ,FirstVNF_CPU ) ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( Min( MUM ,DS ),Max( ( MUR * Min( ( DS / RMSe ) ,Min( DS ,( CS + MUC ) ) ) ),( RCSe * MLU ) ) ) ) - Max( ( Min( MLU ,DS ) / Max( ( Max( Max( CS,MUC ),( ( MUC * RCSe ) / MUC ) ) * MUC ),( RCSe - Max( ( MUM * Min( RMSe ,MLU ) ),( MLU * DS ) ) ) ) ),( ( Max( ( DS / MUC ),DS ) * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + MLU ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.8321167883211679, "obj2": 0.08041118845267595}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + AMS ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( AMS - Max( FirstVNF_RAM_Server,ACS ) ) ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( Min( RMSe ,( MUM * RCSe ) ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6076642335766423, "obj2": 0.2820270404488975}, {"determining": "( ( ( PN - MDR ) + ( FirstVNF_RAM_Server * ( ( DDR / ( FirstVNF_Mem + MDR ) ) * MDR ) ) ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( RCSe + ( ( CS * ( ( MUR + RCSe ) + ( Max( DS,( RMSe / CS ) ) + Min( MUM ,Min( RRSe ,MUM ) ) ) ) ) + DS ) ) + MUC )", "obj1": 0.6441605839416058, "obj2": 0.24135252208660948}, {"determining": "( ( ( PN * RRS ) + ( ( ( FirstVNF_Mem * PN ) + ( PN - MDR ) ) - MDR ) ) + Min( ( FirstVNF_Mem_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( Max( PN,DDR ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( ( DDR - AMS ) ,FirstVNF_CPU ) ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( Min( MUM ,DS ),Max( ( MUR * CS ),( RCSe * MLU ) ) ) ) - Max( ( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ) / Max( ( Max( Max( CS,MUC ),( ( MUC * MLU ) / MUC ) ) * MUC ),( RCSe - Max( ( MUM * Min( RMSe ,MLU ) ),( MLU * DS ) ) ) ) ),( ( Max( ( DS / MUC ),DS ) * Min( RCSe ,( ( RRSe - MUC ) + ( ( RRSe + MLU ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.968978102189781, "obj2": 0.007056482866410658}, {"determining": "( ( ( ( CRS + PN ) * ( RRS / ( FirstVNF_Mem / PN ) ) ) - Max( PN,MDR ) ) + Min( ( ( RRS - Const ) + FirstVNF_CPU ) ,( ( FirstVNF_Mem / Max( FirstVNF_Mem,DDR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( DS ,Max( CS,( MUM / MUC ) ) ) / MUC ) * ( Min( ( ( DS - MLU ) - MUR ) ,Max( DS,( MLU - DS ) ) ) - MUR ) ) + ( Min( ( MLU * MLU ) ,( MLU * CS ) ) - ( ( RRSe - ( RRSe - ( Min( ( MUC * RCSe ) ,MLU ) / Max( CS,MLU ) ) ) ) + ( CS * MUR ) ) ) )", "obj1": 0.5218978102189781, "obj2": 0.40670677624697654}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( MDR * RRS ) + CRS ) / ( ( Const * DDR ) - BR ) ) ,( ( ( ( BR + ( ( MDR - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( ARS * MDR ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + ( RCSe * MUM ) ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * RRSe ) ) ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6952554744525548, "obj2": 0.1951482549027235}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( Min( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( AMS + BR ) ) ,RRS ) - FirstVNF_Mem ) ,( ( ( Min( Max( CRS,FirstVNF_Mem ) ,( RRS + Min( RRS ,FirstVNF_CPU_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( RCSe * RRSe ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + Min( Min( DS ,DS ) ,RMSe ) ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) * MUM ) )", "obj1": 0.7007299270072993, "obj2": 0.1854078889491354}, {"determining": "( Min( BR ,PN ) + Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,MUM ) + RRSe ) + ( ( MUR + ( ( ( RRSe - ( MLU + MUR ) ) - RRSe ) + DS ) ) + ( ( ( Max( MUR,MUM ) - ( MLU + Max( MUR,( RRSe * CS ) ) ) ) + ( CS + MLU ) ) + ( MUR * MUC ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5694469255539111}, {"determining": "( FirstVNF_RAM_Server + ( ( Min( FirstVNF_CPU ,CRS ) * BR ) * MDR ) )", "choosing": "( Max( ( Min( MLU ,DS ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / DS ) ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.4635036496350365, "obj2": 0.5054602823307038}, {"determining": "( FirstVNF_RAM_Server + Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ARS - ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( Min( CS ,RCSe ) / Min( ( MUM / DS ) ,MUC ) ) / ( RCSe + MLU ) ),( ( RRSe * ( RCSe - ( ( RRSe - RRSe ) + ( ( MUM + RMSe ) + DS ) ) ) ) + Min( ( ( MUC * ( ( RRSe - DS ) - MUR ) ) / DS ) ,RRSe ) ) ) - ( MUR + Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.38686131386861317, "obj2": 0.6623003303001977}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - ( ( MRS * FirstVNF_RAM_Server ) - Min( ( FirstVNF_CPU_Server - ACS ) ,RRS ) ) ) ) ) )", "choosing": "( ( RCSe + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * RRSe ) ) ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.5656934306569343, "obj2": 0.33886151285289107}, {"determining": "( Min( ( Min( ( MDR + ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( ( ACS + Max( ( RRS / ARS ),BR ) ) - ACS ) ) * DDR ) ,( ( ( PN + ( FirstVNF_RAM_Server - ACS ) ) * ( Const / Min( ( MDR / ( ARS / FirstVNF_CPU_Server ) ) ,Max( PN,DDR ) ) ) ) - ( FirstVNF_RAM / Min( AMS ,AMS ) ) ) ) + Min( PN ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,CRS ) ) ) * ( Min( ( DDR / ACS ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + ( MUM + CS ) ) + ( ( Max( MUM,MUR ) + RRSe ) + ( Min( Max( MUC,MUR ) ,MUM ) - ( ( ( ( Max( MUC,MUM ) * DS ) + DS ) - RRSe ) + ( ( MLU - Min( MUM ,CS ) ) * MUC ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.16845665729467252}, {"determining": "( ( ( PN * RRS ) + ( PN - MDR ) ) + Min( ( FirstVNF_Mem_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( Max( PN,DDR ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS / DDR ) ) - Min( ( DDR - AMS ) ,FirstVNF_CPU ) ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( Min( MUM ,DS ),Max( ( RCSe * MLU ),( MUR * CS ) ) ) ) - Max( ( Min( MLU ,DS ) / Max( ( Max( Max( CS,MUC ),( ( MUC * MLU ) / MUC ) ) * MUC ),( RCSe - Max( ( MUM * Min( RMSe ,MLU ) ),( MLU * DS ) ) ) ) ),( ( Max( ( DS / MUC ),DS ) * Min( Min( CS ,RMSe ) ,( ( RRSe - MUC ) + ( Min( RRSe ,MLU ) + DS ) ) ) ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.011569668305391287}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( Max( ( Const / FirstVNF_CPU ),FirstVNF_Mem ) - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_Mem - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( Min( ( BR / ACS ) ,ACS ) - ( FirstVNF_RAM_Server - AMS ) ) ) * ( MDR + BR ) ) ) ,Max( Max( ( BR - ( ARS - Max( RRS,FirstVNF_CPU_Server ) ) ),ACS ),ARS ) ) )", "choosing": "( MUC + Min( DS ,RCSe ) )", "obj1": 0.47992700729927007, "obj2": 0.4875276581106457}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( MDR + BR ) + ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,( ARS / FirstVNF_CPU_Server ) ) ) ) * ( AMS + BR ) ) ) ,( ( MDR * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( DDR - ACS ) ,RRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),Min( MUM ,RRSe ) ) - ( RMSe / RMSe ) ) / MUM ) - ( MUM - Min( DS ,( RMSe - ( ( RMSe * DS ) + RCSe ) ) ) ) ) * Min( Min( Min( RCSe ,RCSe ) ,( ( MUM + Min( CS ,MUM ) ) - ( ( MUC / DS ) / ( RRSe + ( ( RRSe / DS ) / ( MLU / RCSe ) ) ) ) ) ) ,( MUM + Min( MUC ,( RCSe / DS ) ) ) ) )", "obj1": 0.6551094890510949, "obj2": 0.2371117087674043}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( MRS ,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( Min( FirstVNF_CPU ,ACS ) ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( FirstVNF_Mem * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( DS + MLU ) ) ) ) - ( Min( CS ,( ( MLU + MLU ) + MUM ) ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( MLU + MUR ) ) - RRSe ),DS ) ) )", "obj1": 0.6277372262773723, "obj2": 0.2641150770253627}, {"determining": "( ( ( ( FirstVNF_RAM_Server + MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) * ( Min( ACS ,( FirstVNF_RAM_Server / ACS ) ) + Max( MRS,AMS ) ) ) * Min( Max( MDR,FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( Max( MUC,( Min( ( ( RMSe / RCSe ) * ( ( Min( MUM ,DS ) + ( DS * MUC ) ) * RMSe ) ) ,MUM ) / ( MUC - ( ( RRSe / MUC ) * ( MUR + ( ( CS - RMSe ) * ( MUC * DS ) ) ) ) ) ) ) + ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) )", "obj1": 0.7062043795620438, "obj2": 0.18283561808453183}, {"determining": "( ( ( ( FirstVNF_Mem_Server * AMS ) * FirstVNF_Mem_Server ) + ( ( Min( ( ( FirstVNF_Mem_Server + PN ) / ACS ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) - MDR ) ) + Max( Max( BR,DDR ),PN ) )", "choosing": "( ( RRSe * RMSe ) + ( MUC / ( RMSe * RCSe ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5562196718902611}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( Max( AMS,Max( CRS,FirstVNF_CPU_Server ) ) ,( MDR + ( ( FirstVNF_RAM + CRS ) - MRS ) ) ) )", "choosing": "( RCSe + Max( MUC,( Min( Min( ( Max( RRSe,RMSe ) + ( ( RMSe * MUM ) + ( DS - MLU ) ) ) ,( RRSe - ( ( CS / CS ) - RCSe ) ) ) ,MUM ) / RRSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.46780391853973996}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( Max( ( Const / FirstVNF_CPU ),FirstVNF_Mem ) - MDR ) ) + Min( ( MDR * ( ( ( BR + ( Min( Const ,FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( MDR + BR ) ) ) ,( ( ( CRS * FirstVNF_RAM_Server ) * PN ) + ( Max( ( ( ACS - Max( RRS,FirstVNF_Mem ) ) - ACS ),Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * DDR ) ) ) )", "choosing": "( MUC + ( ( ( RMSe - Min( CS ,( MLU - ( MUR * Max( MUM,MUC ) ) ) ) ) + RRSe ) + Min( ( ( ( MUM * ( Max( MUR,MUR ) - MUC ) ) / MUM ) / CS ) ,( MUC + DS ) ) ) )", "obj1": 0.6715328467153284, "obj2": 0.2164716767214464}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( ( ( BR + ( ( MDR - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( BR + AMS ) ) * ( ( MRS * FirstVNF_RAM_Server ) - Min( ( AMS - Max( FirstVNF_RAM_Server,ACS ) ) ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( ( ( ( Min( ( ( CS + RMSe ) - RMSe ) ,RCSe ) * MLU ) + MUC ) * Max( MLU,DS ) ) - ( ( ( ( ( MUR + RCSe ) / MUR ) - Min( MUM ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.6605839416058394, "obj2": 0.2268763980845105}, {"determining": "( FirstVNF_RAM_Server + ( ( Max( ( ( ACS - Max( RRS,FirstVNF_Mem ) ) - ACS ),Max( FirstVNF_RAM,( CRS - FirstVNF_RAM ) ) ) * BR ) * MDR ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( ( Min( Min( DS ,DS ) ,( Max( MUC,MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( Max( RRSe,RRSe ) - MUM ) ) - RCSe ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.3886861313868613, "obj2": 0.6583719041321215}, {"determining": "( ( ( PN * RRS ) + ( PN - MDR ) ) + Min( ( FirstVNF_Mem_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,( ( Max( PN,DDR ) * ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( ( DDR - AMS ) ,FirstVNF_CPU ) ) ) ) - MDR ) ) )", "choosing": "( ( ( ( MLU / Min( ( MUC / Min( Max( MUR,CS ) ,RMSe ) ) ,Min( RMSe ,RMSe ) ) ) - ( RMSe * MUR ) ) * MUR ) + Max( MUC,( Min( Min( ( RCSe * Max( Max( MUM,DS ),MUR ) ) ,DS ) ,( Max( Min( RRSe ,DS ),MUR ) / RRSe ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - RCSe ) + ( CS * ( RRSe / ( DS + Min( RCSe ,DS ) ) ) ) ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.011569668305391287}, {"determining": "( Max( Min( RRS ,ACS ),Min( ( ( BR + ( ( FirstVNF_RAM_Server - BR ) - Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( AMS + BR ) ) ,( Min( ( FirstVNF_Mem_Server - ( PN + FirstVNF_Mem ) ) ,Min( ( MRS / FirstVNF_CPU_Server ) ,( ( MRS / ARS ) + FirstVNF_Mem ) ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( MUC - Max( RMSe,Min( ( MLU + MUR ) ,Min( Min( MUM ,MUR ) ,RMSe ) ) ) ),Max( MLU,Min( MLU ,( MUM - Min( MUC ,CS ) ) ) ) ) + ( ( ( ( RMSe + DS ) - MUR ) + Min( Max( MUC,Min( ( ( RCSe - MUM ) * ( CS + MLU ) ) ,DS ) ) ,( ( MLU * RMSe ) / MUR ) ) ) / ( Max( ( ( ( CS - RCSe ) / ( ( CS + MUM ) / MUM ) ) / ( RRSe / RCSe ) ),( ( RRSe * Max( RRSe,MUC ) ) + ( CS + MUC ) ) ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5524061801819283}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( ( BR + AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) + BR ) ) ,( ( ( ( BR + ( MDR - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( ( PN - MDR ),FirstVNF_CPU_Server ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,( ( PN + FirstVNF_Mem ) * AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,RCSe ) - ( MLU + MUR ) ) - RRSe ) + ( MUC * MUC ) ) / ( ( DS - Max( ( ( ( RMSe + DS ) - CS ) + Min( Min( DS ,RRSe ) ,RMSe ) ),Max( MUM,MUR ) ) ) + ( CS - ( MUC - MUR ) ) ) ) + ( ( ( RMSe + DS ) - CS ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.6514598540145985, "obj2": 0.24006962869471493}, {"determining": "( ( Max( CRS,Max( FirstVNF_CPU_Server,( MDR * ACS ) ) ) + ( PN - MDR ) ) + Min( ( ( Min( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) ,MDR ) * MDR ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) / ( ( RRSe - ( MLU + ( DS * ( ( RMSe + DS ) - CS ) ) ) ) - RRSe ) ) + MUC )", "obj1": 0.48175182481751827, "obj2": 0.4754243933561681}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ,( ( ( FirstVNF_RAM_Server / ACS ) * DDR ) / MDR ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( MLU - ( ( RRSe / MUM ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + RRSe ) ) + Max( ( Min( ( CS * MUC ) ,( Max( MUC,MUR ) / RRSe ) ) - ( Min( RMSe ,MUR ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.6021897810218978, "obj2": 0.2871010326597152}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( ( MDR / BR ) * BR ) - FirstVNF_Mem_Server ) ) * FirstVNF_Mem_Server ) - ( PN - MDR ) ) + Min( Max( BR,DDR ) ,PN ) )", "choosing": "( ( MLU - ( ( DS * ( MUC - Min( RMSe ,DS ) ) ) / DS ) ) + ( MUC / ( DS * RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5455254012037615}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( MRS ,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( Min( FirstVNF_CPU ,ACS ) ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( FirstVNF_Mem * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM - Max( Max( Min( CS ,( RMSe + MUM ) ),( MLU - ( ( RRSe / MUC ) + MLU ) ) ),RMSe ) ) / ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + ( MUC + MUR ) )", "obj1": 0.6277372262773723, "obj2": 0.2641150770253627}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - MDR ) ) + Min( FirstVNF_CPU_Server ,( ( ( ( BR + ( MRS - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) / MDR ) ) )", "choosing": "( Max( MUC,( ( RCSe - CS ) / ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) ) ) + RCSe )", "obj1": 0.5529197080291971, "obj2": 0.3621868660592402}, {"determining": "Max( ( RRS + ( MDR / FirstVNF_RAM_Server ) ),Min( ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - ( CRS - ACS ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) ,Min( ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,( AMS * ARS ) ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * PN ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( MLU * DS ) + ( ( ( MUC * ( ( MUM - DS ) * ( Max( ( RRSe / MLU ),( MUR / MUC ) ) / ( ( MUC * CS ) + MLU ) ) ) ) + MLU ) - MLU ) )", "obj1": 0.39963503649635035, "obj2": 0.6314882633665565}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( PN - MDR ) ) + Min( ( ( BR * ( ARS * MDR ) ) * MDR ) ,( ( ( ( BR + Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,AMS ) ) ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * Min( ( FirstVNF_Mem + ( BR + CRS ) ) ,( Min( ( FirstVNF_CPU_Server / BR ) ,MDR ) - ( ( FirstVNF_CPU / Const ) / FirstVNF_Mem ) ) ) ) / MDR ) ) )", "choosing": "( Max( CS,CS ) + Max( ( RMSe + RCSe ),Max( Min( RRSe ,CS ),( ( CS / ( ( MUR / ( CS + DS ) ) * ( DS - ( RRSe / MUM ) ) ) ) + RMSe ) ) ) )", "obj1": 0.9434306569343066, "obj2": 0.02072778326468323}, {"determining": "( ( ( ( FirstVNF_Mem_Server * AMS ) * FirstVNF_Mem_Server ) + ( PN - MDR ) ) + Min( Max( BR,DDR ) ,PN ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + ( Min( Min( DS ,DS ) ,( MUM + ( CS * RRSe ) ) ) - ( ( ( ( ( ( MUM + CS ) - MUR ) / ( MLU - Min( MLU ,RCSe ) ) ) - Min( DS ,DS ) ) - RRSe ) + ( CS * MUC ) ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5455254012037615}, {"determining": "Max( ( RRS + ( MDR / FirstVNF_RAM_Server ) ),Min( ( Max( ( ( ( ( FirstVNF_Mem / MDR ) - ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),RRS ) + ( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU + BR ) ) ) ,Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - AMS ) ) ,( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( CRS * PN ),FirstVNF_RAM ) / MRS ) ) ) ) ) )", "choosing": "( ( MLU * DS ) + MUC )", "obj1": 0.3905109489051095, "obj2": 0.6497273829272394}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) * PN ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) - MDR ) ) + ( FirstVNF_CPU - FirstVNF_Mem ) )", "choosing": "( ( Min( CS ,Min( RCSe ,( MUC - Min( ( DS * MUR ) ,( MUM + ( RMSe + RCSe ) ) ) ) ) ) * MLU ) * ( Max( MUC,( MUM / Min( MLU ,MUM ) ) ) - MUR ) )", "obj1": 0.3978102189781022, "obj2": 0.6320716753181514}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( PN - MDR ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( Max( ( ( ( RMSe + DS ) - CS ) + Min( Min( DS ,DS ) ,RMSe ) ),Max( MUM,MUR ) ) - ( RCSe * ( Min( MLU ,MUM ) / ( MLU + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) + MUC )", "obj1": 0.5182481751824818, "obj2": 0.41466455195843505}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( MDR * ( ( ( BR + ( ( ARS / BR ) - Min( MRS ,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ARS ) ) ) * ( MDR + BR ) ) ) ,( ( ( FirstVNF_RAM / MDR ) * PN ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,( ( MLU + MLU ) + MUM ) ),( ( ( RRSe / MUM ) + MLU ) - MLU ) ),( ( CS / Min( ( RCSe / MUR ) ,( CS + MUR ) ) ) / RRSe ) ) ) / ( ( ( MUR - ( RCSe * ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) ) - ( ( Min( ( MUR * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) ) ) + Max( MUR,Max( ( ( RRSe - ( MLU + MUR ) ) - RCSe ),DS ) ) )", "obj1": 0.6222627737226277, "obj2": 0.26857424088300885}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( FirstVNF_Mem + RRS ) ) + Min( ( CRS / ARS ) ,( ( ( ( RRS - FirstVNF_Mem ) / ARS ) * ( ( MRS * FirstVNF_RAM_Server ) - ( ( DDR - RRS ) + RRS ) ) ) / ARS ) ) )", "choosing": "( ( ( MUM / Max( Max( Min( CS ,Max( ( MLU + MLU ),MUM ) ),( MLU - ( Max( RRSe,MUM ) + MLU ) ) ),RMSe ) ) / ( ( CS - ( MUC - Min( Min( DS ,DS ) ,( MUC / MUR ) ) ) ) + ( DS - ( ( Min( ( MLU * MUM ) ,DS ) + MUM ) * RCSe ) ) ) ) + Max( ( Min( Max( RRSe,Max( RRSe,RMSe ) ) ,( Max( MUC,MUR ) / ( ( RRSe - RRSe ) + ( ( RMSe + RCSe ) + DS ) ) ) ) - ( ( ( Min( MLU ,DS ) - ( RRSe / MUM ) ) - Max( MUR,RRSe ) ) + ( CS * MUC ) ) ),MUC ) )", "obj1": 0.5985401459854015, "obj2": 0.29039472458042853}, {"determining": "( ( ( FirstVNF_RAM_Server * PN ) + ( PN - MDR ) ) + Min( ( ( ( ARS * MDR ) * BR ) * MDR ) ,( ( Min( AMS ,AMS ) + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,ACS ) ) ) * Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "Max( ( ( DS - ( ( Min( ( RCSe * MUM ) ,DS ) + MUM ) * RCSe ) ) + ( CS - ( MUC - Min( Min( DS ,( ( RRSe / MUM ) + MLU ) ) ,( MUC / MUR ) ) ) ) ),( MUM / ( Min( MLU ,DS ) / ( RCSe + MLU ) ) ) )", "obj1": 0.614963503649635, "obj2": 0.28055767523004127}, {"determining": "Max( ( Const / PN ),Min( ( Max( ( ( ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / MRS ) ) + FirstVNF_RAM ),( ARS - ( MDR * FirstVNF_Mem ) ) ) + Min( AMS ,Min( DDR ,BR ) ) ) ,Min( ( PN * Min( ( Const / FirstVNF_RAM_Server ) ,( Max( ( DDR * ARS ),FirstVNF_RAM ) / MRS ) ) ) ,( ( ( Max( PN,( MRS + MDR ) ) * Min( AMS ,FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - AMS ) * ( Min( FirstVNF_RAM_Server ,Const ) / ACS ) ) ) * MDR ) ) ) )", "choosing": "( Max( ( Min( CS ,RCSe ) / Min( ( MUM / DS ) ,MUC ) ),RCSe ) * ( ( MUC * MLU ) * DS ) )", "obj1": 0.4744525547445255, "obj2": 0.4904355250929441}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MDR ) * PN ) + ( PN - BR ) ) + Min( ( ( ( FirstVNF_RAM * ARS ) + Const ) * MDR ) ,( ( ( ( BR + ( ( FirstVNF_RAM_Server - AMS ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ACS ) ) + BR ) ) * Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( MLU ,DS ) / ( RCSe + MLU ) ) - CS ) / ( MUR - ( RCSe * ( Min( MLU ,MUM ) / ( MLU + Max( RMSe,RRSe ) ) ) ) ) ) - ( RMSe + CS ) ) + MUC )", "obj1": 0.4854014598540146, "obj2": 0.47063913979514416}]}