{"1": [{"determining": "Max( ( FirstVNF_Mem_Server - ARS ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / DS ) + ( MLU - CS ) )", "obj1": 0.1339622641509434, "obj2": 0.768233423447714}, {"determining": "Max( Max( ( ACS + Min( ACS ,FirstVNF_CPU_Server ) ),BR ),( ( FirstVNF_CPU / ACS ) * Const ) )", "choosing": "( Min( MLU ,Max( MUC,( RRSe / MLU ) ) ) + Max( MLU,( MUM - RMSe ) ) )", "obj1": 0.7433962264150943, "obj2": 0.1879614575090804}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / ( MLU / MUC ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "( ( PN / FirstVNF_CPU ) * Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( MUM / DS ) - ( RCSe / RMSe ) )", "obj1": 0.10566037735849057, "obj2": 0.7835864402212401}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) * ( ACS / Const ) )", "choosing": "( ( RRSe - MUR ) * Min( DS ,MUC ) )", "obj1": 0.3490566037735849, "obj2": 0.5791699780754357}, {"determining": "( ( ( FirstVNF_RAM * PN ) * CRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( CS * RRSe ) ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_CPU ) - Min( Const ,( ( MRS + FirstVNF_CPU_Server ) - ( MDR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + MUC ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( MUR + RRSe ) / ( ( MUR * ( ( ( MLU / ( Max( MUM,MUM ) / RCSe ) ) * DS ) / DS ) ) + MUC ) )", "obj1": 0.29056603773584905, "obj2": 0.6133302173055211}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( FirstVNF_CPU,ACS ) ) )", "choosing": "Min( ( RCSe - ( ( Max( Min( RRSe ,Min( RCSe ,RRSe ) ),( ( RMSe - RMSe ) - MUM ) ) / RRSe ) / RMSe ) ) ,Max( MUM,MLU ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "( Max( FirstVNF_CPU_Server,( MDR - FirstVNF_Mem ) ) - ( Const / Const ) )", "choosing": "( ( CS / CS ) / Min( DS ,( RCSe * Max( MLU,MUC ) ) ) )", "obj1": 0.5188679245283019, "obj2": 0.4354823064269744}, {"determining": "( ( AMS - FirstVNF_Mem ) - ( BR + MRS ) )", "choosing": "( ( MUC + ( DS / MUM ) ) * ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) / ( ( FirstVNF_Mem_Server + ARS ) / ( Const * MDR ) ) )", "choosing": "( ( MUR / ( ( ( ( MLU / MLU ) / MUM ) * ( Min( RMSe ,( RMSe - ( CS - RMSe ) ) ) - Min( Min( MUR ,MUM ) ,Min( MUM ,CS ) ) ) ) / RRSe ) ) - ( RCSe * Min( RMSe ,MLU ) ) )", "obj1": 0.37924528301886795, "obj2": 0.49519833035411526}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( AMS - MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( ( CS / Max( MUM,( ( ( RMSe - MUR ) * RMSe ) * Min( MUM ,( MUM / CS ) ) ) ) ) + RRSe ) ) )", "obj1": 0.37169811320754714, "obj2": 0.4985723275626436}, {"determining": "( Min( ( ARS * FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,( ( Const * MRS ) / ACS ) ) ) * ( ( FirstVNF_CPU * BR ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUC - MUM ) ,( DS / DS ) ) + Min( ( MUC - MUR ) ,Max( MLU,Min( RRSe ,CS ) ) ) )", "obj1": 0.3283018867924528, "obj2": 0.5872849471027951}, {"determining": "( ( DDR * BR ) - ( FirstVNF_RAM - Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + MUC ) * ( MLU / DS ) )", "obj1": 0.5622641509433962, "obj2": 0.3709421407863846}, {"determining": "Max( ( ( CRS / PN ) * ( FirstVNF_CPU + PN ) ),( ( FirstVNF_RAM * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( MUM * MUR ) * ( RCSe / DS ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) )", "obj1": 0.14150943396226415, "obj2": 0.7638206102876814}, {"determining": "( ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) + ( ( CRS / FirstVNF_CPU ) + ( FirstVNF_RAM + ( ACS - RRS ) ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC + Min( RMSe ,( MLU / CS ) ) ) ) / ( Max( CS,MLU ) * Min( MUR ,RRSe ) ) )", "obj1": 0.360377358490566, "obj2": 0.56655115132628}, {"determining": "Min( ( MRS * ( ACS - BR ) ) ,( ARS + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * MUC ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7264150943396226, "obj2": 0.20796103120215642}, {"determining": "( Max( ( MRS + FirstVNF_CPU ),( ACS - DDR ) ) * Max( ( BR / FirstVNF_Mem_Server ),( FirstVNF_Mem / PN ) ) )", "choosing": "( ( ( MUC + DS ) - ( RCSe + MUC ) ) + ( ( RRSe / MUM ) * ( DS + DS ) ) )", "obj1": 0.4849056603773585, "obj2": 0.4492607129413254}, {"determining": "( ( Min( ARS ,RRS ) * ( FirstVNF_CPU_Server + Const ) ) + ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "( ( Max( MUR,RRSe ) * Min( CS ,MUC ) ) + Min( Max( DS,CS ) ,Min( RRSe ,DS ) ) )", "obj1": 0.5056603773584906, "obj2": 0.43959161645377237}, {"determining": "( Min( ( ACS * RRS ) ,( ( ( DDR / FirstVNF_RAM_Server ) + Min( Min( FirstVNF_RAM_Server ,MRS ) ,PN ) ) * Max( ACS,( Const + Const ) ) ) ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU - AMS ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) / MUR ) + Max( DS,MUR ) ) - ( ( MUR + MUR ) + ( RMSe + CS ) ) )", "obj1": 0.9245283018867925, "obj2": 0.07868853083573585}, {"determining": "( ( Max( Const,( DDR + FirstVNF_RAM_Server ) ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MUC - MUM ) + RMSe ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "( ( Max( Max( ( BR - Min( ( ( FirstVNF_RAM_Server * DDR ) / CRS ) ,AMS ) ),( Const - MRS ) ),ACS ) + FirstVNF_CPU_Server ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( MUR,MUR ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MUR + MLU ) - ( CS + CS ) ),( Min( MUR ,RMSe ) + ( MUR * MUM ) ) )", "obj1": 0.4339622641509434, "obj2": 0.48726661111337416}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( ARS ,CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ),( Max( AMS,FirstVNF_RAM_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( Min( RRSe ,MUR ) * RCSe ) ) / ( ( RRSe - RCSe ) * ( MLU - RCSe ) ) )", "obj1": 0.25660377358490566, "obj2": 0.6654496425143182}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + Min( Max( MRS,MDR ) ,( ( ( FirstVNF_RAM_Server / AMS ) + FirstVNF_RAM ) + MDR ) ) ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( ACS * FirstVNF_Mem_Server ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + ( ( RRSe - RCSe ) + ( MUR - Min( ( RMSe * RMSe ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( ACS + ARS ) ) - ( PN - DDR ) )", "choosing": "( Min( ( Max( MUR,RCSe ) * Max( RMSe,RCSe ) ) ,( ( RMSe - MLU ) - Max( MLU,RRSe ) ) ) + ( Max( ( MUM / MLU ),Min( CS ,DS ) ) / Max( Min( RRSe ,MUM ),Max( RRSe,MUC ) ) ) )", "obj1": 0.24528301886792453, "obj2": 0.6807093699066564}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU_Server ) ,DDR ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( ( CS + ( ( ( CS + ( MUM + RRSe ) ) * ( MUM * ( DS * RMSe ) ) ) - ( RMSe - MLU ) ) ) - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( CRS,MRS ) ) ) ,Min( DDR ,ACS ) )", "choosing": "Min( ( ( RMSe / MUR ) + DS ) ,( Min( Min( Max( MUM,MLU ) ,( ( CS + MUR ) - ( MUR - MLU ) ) ) ,( ( MUR * Max( DS,Min( ( RMSe + RRSe ) ,RCSe ) ) ) - ( ( RRSe / RMSe ) + RMSe ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( CRS / Const ) + FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( DS / RMSe ) * ( MUR + MUC ) ) + ( MUM - DS ) ) + Max( ( ( ( MLU - ( ( ( MUC * MUC ) + MUR ) * Max( ( RRSe - RRSe ),MUM ) ) ) * ( RMSe / Min( ( MLU * ( RCSe - MUC ) ) ,Min( MUC ,MUR ) ) ) ) * ( MUM / MUR ) ),Min( Min( MUC ,DS ) ,( MUC - RCSe ) ) ) )", "obj1": 0.5679245283018868, "obj2": 0.36675247715321546}, {"determining": "Max( ( ( ( CRS / FirstVNF_Mem_Server ) * ( CRS - FirstVNF_CPU ) ) + ( Min( ACS ,RRS ) + Min( MRS ,FirstVNF_Mem ) ) ),Max( Max( Min( CRS ,ACS ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ),Min( Min( FirstVNF_Mem ,MRS ) ,Max( MDR,RRS ) ) ) )", "choosing": "Max( Min( Min( ( CS - MUM ) ,( RRSe - RMSe ) ) ,Max( Min( CS ,MUM ),( RMSe / RRSe ) ) ),Max( ( ( RRSe * MLU ) * ( RRSe - MLU ) ),( ( RCSe - RMSe ) + ( MUR / RMSe ) ) ) )", "obj1": 0.32452830188679244, "obj2": 0.6015544526339333}, {"determining": "( ( ( MDR / ARS ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( ( ( ( MLU / MUR ) / ( MUM + ( CS - RMSe ) ) ) * MLU ) / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / Min( MRS ,PN ) ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.31069605138687245}, {"determining": "( ( ( Max( CRS,PN ) / ( MDR * BR ) ) - Max( ( ARS - FirstVNF_Mem_Server ),Min( AMS ,PN ) ) ) + ( Min( Max( FirstVNF_CPU,ARS ) ,( MDR * FirstVNF_Mem_Server ) ) - ( ( AMS + ACS ) / Min( MRS ,RRS ) ) ) )", "choosing": "Min( Min( ( ( MUC * MLU ) / ( MUC / MUR ) ) ,( ( MUR - RCSe ) * ( DS * RMSe ) ) ) ,( Max( ( RRSe * RRSe ),Min( MUC ,DS ) ) / ( ( DS + RRSe ) - Max( MUC,DS ) ) ) )", "obj1": 0.35283018867924526, "obj2": 0.576464599446187}, {"determining": "Min( ( BR * MRS ) ,Min( ( MDR + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( RRSe / RMSe ),( MUR - CS ) ) - ( ( RMSe + MUC ) / ( DS - MUM ) ) ) ,( Min( ( MUR / MUC ) ,( MLU + RRSe ) ) - Min( ( MUM - MUM ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.35471698113207545, "obj2": 0.5695113418073122}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "( ( MDR * BR ) * Min( Max( FirstVNF_RAM_Server,ACS ) ,MRS ) )", "choosing": "Min( ( MUC + Max( DS,( DS * DS ) ) ) ,Min( MUC ,MUR ) )", "obj1": 0.4509433962264151, "obj2": 0.47928585981894867}, {"determining": "( Max( Min( CRS ,ACS ),( FirstVNF_CPU_Server - Max( PN,AMS ) ) ) / ( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) / FirstVNF_RAM_Server ) + Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),CRS ) ) - ARS ) )", "choosing": "( ( ( Max( RCSe,RRSe ) * ( MLU - MLU ) ) + ( ( MUM + MLU ) - ( MUM * MUM ) ) ) - ( RCSe / MLU ) )", "obj1": 0.9188679245283019, "obj2": 0.10092744706923497}, {"determining": "( Min( ARS ,CRS ) + ( Max( ( RRS * MRS ),( ARS - FirstVNF_Mem_Server ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RRSe - MUM ) - ( CS - Min( Max( Max( Max( RRSe,DS ),CS ),DS ) ,CS ) ) ) * RRSe ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( MDR / Min( FirstVNF_CPU ,Min( Max( ACS,DDR ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,( ( Min( MUC ,MLU ) + ( ( MUR * MUC ) - MUR ) ) + MLU ) ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( BR * FirstVNF_CPU ) * ( ACS * FirstVNF_RAM ) ) ,( ( Const - FirstVNF_RAM ) + ( ACS * ARS ) ) ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - MUR ) ,DS ),RRSe ) ,Min( ( ( RMSe - MUC ) - Min( MUR ,DS ) ) ,( MLU * Max( RCSe,CS ) ) ) )", "obj1": 0.1811320754716981, "obj2": 0.7203255601468851}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( DS + RRSe ) )", "obj1": 0.8924528301886793, "obj2": 0.10884045909444658}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( Min( CRS ,ARS ) - ( FirstVNF_RAM_Server - BR ) ) ),( ( Max( Const,PN ) + ( FirstVNF_RAM_Server - Const ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( Max( ( MUR * RCSe ),( MUM - RCSe ) ) * ( ( CS * RRSe ) - ( MUM / RRSe ) ) ) + ( ( ( CS - RCSe ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.6313499839911025}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}], "2": [{"determining": "Max( ( FirstVNF_Mem_Server - ARS ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / DS ) + ( MLU - CS ) )", "obj1": 0.1339622641509434, "obj2": 0.768233423447714}, {"determining": "Max( Max( ( ACS + Min( ACS ,FirstVNF_CPU_Server ) ),BR ),( ( FirstVNF_CPU / ACS ) * Const ) )", "choosing": "( Min( MLU ,Max( MUC,( RRSe / MLU ) ) ) + Max( MLU,( MUM - RMSe ) ) )", "obj1": 0.7433962264150943, "obj2": 0.1879614575090804}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / ( MLU / MUC ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "( ( PN / FirstVNF_CPU ) * Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( MUM / DS ) - ( RCSe / RMSe ) )", "obj1": 0.10566037735849057, "obj2": 0.7835864402212401}, {"determining": "( ( ( FirstVNF_RAM * PN ) * CRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( CS * RRSe ) ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_CPU ) - Min( Const ,( ( MRS + FirstVNF_CPU_Server ) - ( MDR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + MUC ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( FirstVNF_CPU,ACS ) ) )", "choosing": "Min( ( RCSe - ( ( Max( Min( RRSe ,Min( RCSe ,RRSe ) ),( ( RMSe - RMSe ) - MUM ) ) / RRSe ) / RMSe ) ) ,Max( MUM,MLU ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "( ( AMS - FirstVNF_Mem ) - ( BR + MRS ) )", "choosing": "( ( MUC + ( DS / MUM ) ) * ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) / ( ( FirstVNF_Mem_Server + ARS ) / ( Const * MDR ) ) )", "choosing": "( ( MUR / ( ( ( ( MLU / MLU ) / MUM ) * ( Min( RMSe ,( RMSe - ( CS - RMSe ) ) ) - Min( Min( MUR ,MUM ) ,Min( MUM ,CS ) ) ) ) / RRSe ) ) - ( RCSe * Min( RMSe ,MLU ) ) )", "obj1": 0.37924528301886795, "obj2": 0.49519833035411526}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( AMS - MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( ( CS / Max( MUM,( ( ( RMSe - MUR ) * RMSe ) * Min( MUM ,( MUM / CS ) ) ) ) ) + RRSe ) ) )", "obj1": 0.37169811320754714, "obj2": 0.4985723275626436}, {"determining": "( ( DDR * BR ) - ( FirstVNF_RAM - Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + MUC ) * ( MLU / DS ) )", "obj1": 0.5622641509433962, "obj2": 0.3709421407863846}, {"determining": "Max( ( ( CRS / PN ) * ( FirstVNF_CPU + PN ) ),( ( FirstVNF_RAM * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( MUM * MUR ) * ( RCSe / DS ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) )", "obj1": 0.14150943396226415, "obj2": 0.7638206102876814}, {"determining": "Min( ( MRS * ( ACS - BR ) ) ,( ARS + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * MUC ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7264150943396226, "obj2": 0.20796103120215642}, {"determining": "( Max( ( MRS + FirstVNF_CPU ),( ACS - DDR ) ) * Max( ( BR / FirstVNF_Mem_Server ),( FirstVNF_Mem / PN ) ) )", "choosing": "( ( ( MUC + DS ) - ( RCSe + MUC ) ) + ( ( RRSe / MUM ) * ( DS + DS ) ) )", "obj1": 0.4849056603773585, "obj2": 0.4492607129413254}, {"determining": "( Min( ( ACS * RRS ) ,( ( ( DDR / FirstVNF_RAM_Server ) + Min( Min( FirstVNF_RAM_Server ,MRS ) ,PN ) ) * Max( ACS,( Const + Const ) ) ) ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU - AMS ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) / MUR ) + Max( DS,MUR ) ) - ( ( MUR + MUR ) + ( RMSe + CS ) ) )", "obj1": 0.9245283018867925, "obj2": 0.07868853083573585}, {"determining": "( ( Max( Const,( DDR + FirstVNF_RAM_Server ) ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MUC - MUM ) + RMSe ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "( ( Max( Max( ( BR - Min( ( ( FirstVNF_RAM_Server * DDR ) / CRS ) ,AMS ) ),( Const - MRS ) ),ACS ) + FirstVNF_CPU_Server ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( MUR,MUR ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MUR + MLU ) - ( CS + CS ) ),( Min( MUR ,RMSe ) + ( MUR * MUM ) ) )", "obj1": 0.4339622641509434, "obj2": 0.48726661111337416}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( ARS ,CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ),( Max( AMS,FirstVNF_RAM_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( Min( RRSe ,MUR ) * RCSe ) ) / ( ( RRSe - RCSe ) * ( MLU - RCSe ) ) )", "obj1": 0.25660377358490566, "obj2": 0.6654496425143182}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + Min( Max( MRS,MDR ) ,( ( ( FirstVNF_RAM_Server / AMS ) + FirstVNF_RAM ) + MDR ) ) ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( ACS * FirstVNF_Mem_Server ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + ( ( RRSe - RCSe ) + ( MUR - Min( ( RMSe * RMSe ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU_Server ) ,DDR ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( ( CS + ( ( ( CS + ( MUM + RRSe ) ) * ( MUM * ( DS * RMSe ) ) ) - ( RMSe - MLU ) ) ) - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( CRS,MRS ) ) ) ,Min( DDR ,ACS ) )", "choosing": "Min( ( ( RMSe / MUR ) + DS ) ,( Min( Min( Max( MUM,MLU ) ,( ( CS + MUR ) - ( MUR - MLU ) ) ) ,( ( MUR * Max( DS,Min( ( RMSe + RRSe ) ,RCSe ) ) ) - ( ( RRSe / RMSe ) + RMSe ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( CRS / Const ) + FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( DS / RMSe ) * ( MUR + MUC ) ) + ( MUM - DS ) ) + Max( ( ( ( MLU - ( ( ( MUC * MUC ) + MUR ) * Max( ( RRSe - RRSe ),MUM ) ) ) * ( RMSe / Min( ( MLU * ( RCSe - MUC ) ) ,Min( MUC ,MUR ) ) ) ) * ( MUM / MUR ) ),Min( Min( MUC ,DS ) ,( MUC - RCSe ) ) ) )", "obj1": 0.5679245283018868, "obj2": 0.36675247715321546}, {"determining": "( ( ( MDR / ARS ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( ( ( ( MLU / MUR ) / ( MUM + ( CS - RMSe ) ) ) * MLU ) / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / Min( MRS ,PN ) ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.31069605138687245}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "( Max( Min( CRS ,ACS ),( FirstVNF_CPU_Server - Max( PN,AMS ) ) ) / ( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) / FirstVNF_RAM_Server ) + Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),CRS ) ) - ARS ) )", "choosing": "( ( ( Max( RCSe,RRSe ) * ( MLU - MLU ) ) + ( ( MUM + MLU ) - ( MUM * MUM ) ) ) - ( RCSe / MLU ) )", "obj1": 0.9188679245283019, "obj2": 0.10092744706923497}, {"determining": "( Min( ARS ,CRS ) + ( Max( ( RRS * MRS ),( ARS - FirstVNF_Mem_Server ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RRSe - MUM ) - ( CS - Min( Max( Max( Max( RRSe,DS ),CS ),DS ) ,CS ) ) ) * RRSe ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( MDR / Min( FirstVNF_CPU ,Min( Max( ACS,DDR ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,( ( Min( MUC ,MLU ) + ( ( MUR * MUC ) - MUR ) ) + MLU ) ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( BR * FirstVNF_CPU ) * ( ACS * FirstVNF_RAM ) ) ,( ( Const - FirstVNF_RAM ) + ( ACS * ARS ) ) ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - MUR ) ,DS ),RRSe ) ,Min( ( ( RMSe - MUC ) - Min( MUR ,DS ) ) ,( MLU * Max( RCSe,CS ) ) ) )", "obj1": 0.1811320754716981, "obj2": 0.7203255601468851}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( DS + RRSe ) )", "obj1": 0.8924528301886793, "obj2": 0.10884045909444658}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}, {"determining": "( Max( CRS,BR ) + ( Min( MDR ,Min( ( FirstVNF_Mem / Max( ACS,DDR ) ) ,Const ) ) / RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( MUC / CS ) )", "obj1": 0.40943396226415096, "obj2": 0.4921665149915977}, {"determining": "Max( ( FirstVNF_CPU + CRS ),( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( ( Max( MUR,MUC ) * CS ) - MUC ) / ( ( ( MLU - RRSe ) - ( RCSe * MUR ) ) + ( ( MLU - MLU ) + ( MLU * DS ) ) ) )", "obj1": 0.5, "obj2": 0.3944601028191519}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( ( MUC - CS ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.4377358490566038, "obj2": 0.45994672831818323}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( ( ( Const + ( ACS + ARS ) ) - ( PN - DDR ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( ( Max( MUR,RCSe ) * Max( RMSe,RCSe ) ) ,( ( RMSe - MLU ) - Max( MLU,RRSe ) ) ) + ( Max( ( MUM / MLU ),Min( CS ,DS ) ) / Max( Min( RRSe ,MUM ),Max( RRSe,MUC ) ) ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( CRS / FirstVNF_Mem_Server ) * ( CRS - FirstVNF_CPU ) ) + ( Min( ACS ,RRS ) + Min( MRS ,FirstVNF_Mem ) ) ),Max( Max( Min( CRS ,ACS ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ),Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),Min( FirstVNF_RAM ,Const ) ) ) )", "choosing": "Max( Min( Min( ( CS - MUM ) ,( RRSe - RMSe ) ) ,Max( Min( CS ,MUM ),( RMSe / RRSe ) ) ),Max( ( ( RRSe * MLU ) * ( RRSe - MLU ) ),( ( RCSe - MLU ) + ( MUR / RMSe ) ) ) )", "obj1": 0.2622641509433962, "obj2": 0.6418623990555479}, {"determining": "Min( Max( BR,( ( ACS - FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) ,CRS )", "choosing": "( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( ( RRSe / ( Min( ( RRSe * MUR ) ,( ( MUM * ( RRSe / CS ) ) - DS ) ) + MLU ) ) / MUC ) )", "obj1": 0.5283018867924528, "obj2": 0.38707970193604135}, {"determining": "( ( FirstVNF_RAM - FirstVNF_CPU ) - Max( Const,Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUC,Min( ( Max( ( DS * MUC ),( RMSe + MUR ) ) + ( ( MUM + RCSe ) * ( RRSe * MLU ) ) ) ,( ( ( MLU - MLU ) * Max( MLU,RRSe ) ) * Max( ( RMSe - MUC ),( DS / MUR ) ) ) ) ) - ( Min( RMSe ,MUR ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / BR ),Const ) ,Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM_Server ) ) - ( Const / Const ) )", "choosing": "( ( CS / ( Max( Min( MUC ,MUC ),( DS * MUM ) ) * Min( Max( RRSe,MLU ) ,( MUR / MUR ) ) ) ) / Min( DS ,( RCSe * Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( BR * FirstVNF_CPU ) * ( ACS * FirstVNF_RAM ) ) ,( ( Const - FirstVNF_RAM ) + ( ACS * ARS ) ) ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ( FirstVNF_CPU_Server * Const ) ) + Max( Max( CRS,FirstVNF_RAM_Server ),( CRS * ARS ) ) ) + ( DDR * ACS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - MUR ) ,DS ),RRSe ) ,Min( ( ( RMSe - MUC ) - Min( MUR ,DS ) ) ,Max( ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) + ( ( RRSe * CS ) * Max( MUR,RCSe ) ) ),( Min( ( CS - RCSe ) ,( MUM + RMSe ) ) - ( ( RMSe + RMSe ) - ( CS / MLU ) ) ) ) ) )", "obj1": 0.19622641509433963, "obj2": 0.7152576361740434}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( FirstVNF_CPU,ACS ) ) )", "choosing": "Min( ( RCSe - ( ( Max( Min( RRSe ,Min( RCSe ,RRSe ) ),( ( RMSe - RMSe ) - MUM ) ) / RRSe ) / RMSe ) ) ,Max( MUM,MLU ) )", "obj1": 0.28679245283018867, "obj2": 0.5776662351764416}, {"determining": "Max( ( ( CRS - BR ) - FirstVNF_CPU ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( ( MUM * MLU ) - Max( DS,CS ) ) * ( DS + MLU ) )", "obj1": 0.22452830188679246, "obj2": 0.6704645686899946}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( BR * ARS ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( RMSe - ( RCSe - ( Min( RMSe ,Max( Min( MLU ,CS ),( CS / MUC ) ) ) + MUC ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server * ( DDR - BR ) ) ) ,( FirstVNF_Mem_Server * DDR ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + Max( MUC,( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / MDR ) * Max( FirstVNF_RAM,ARS ) ) + ( Min( AMS ,ACS ) - ( MDR - MRS ) ) ) - ( CRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( CS,RCSe ) ,( MUR + RRSe ) ) / Max( ( MUC + MUM ),( ( RMSe + DS ) - ( CS / RCSe ) ) ) )", "obj1": 0.32452830188679244, "obj2": 0.557936451628518}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( FirstVNF_RAM + ( FirstVNF_Mem + Min( ( FirstVNF_Mem / MDR ) ,MRS ) ) ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( CS ,Min( ( MUR / MUC ) ,CS ) ) )", "obj1": 0.49056603773584906, "obj2": 0.4467916380443233}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( PN + ACS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,Min( DS ,CS ) )", "obj1": 0.769811320754717, "obj2": 0.1650902046254109}, {"determining": "Min( ( FirstVNF_CPU + Max( AMS,FirstVNF_Mem ) ) ,( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Min( PN ,DDR ) ) ) )", "choosing": "( ( MUR - ( ( ( RMSe - CS ) / MUR ) * MUR ) ) / Max( CS,( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Min( AMS ,ARS ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( CS,( ( MUC - MUC ) / MUR ) ) / MUR ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / Const ) + ( Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( Min( FirstVNF_Mem ,Max( Const,BR ) ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) ) / Min( Const ,Min( Min( ARS ,( Const + ( ( ARS + ARS ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ,DDR ) ) ) )", "choosing": "( Max( MLU,RCSe ) / ( RMSe - ( RCSe / ( ( MUR * RRSe ) - ( DS + ( Max( CS,MUM ) - ( ( MUM * RCSe ) / Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / ( Max( DS,CS ) - Min( RRSe ,MUM ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9679245283018868, "obj2": 0.008024541790508892}, {"determining": "( ( CRS - MRS ) / ( ( Const - AMS ) - Min( DDR ,RRS ) ) )", "choosing": "( ( ( Max( RCSe,DS ) * ( MUM + MLU ) ) * Max( Max( DS,MUC ),RCSe ) ) + ( Min( ( RRSe * RRSe ) ,( MUR / RMSe ) ) + ( ( MLU + ( CS - DS ) ) * ( MLU / RMSe ) ) ) )", "obj1": 0.969811320754717, "obj2": 0.00755615299151343}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,( ( RRSe * CS ) * Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( CRS,PN ) / ( MDR * BR ) ) - Max( ( ARS - FirstVNF_Mem_Server ),Min( AMS ,PN ) ) ) + ( Min( Max( FirstVNF_CPU,ARS ) ,( MDR * FirstVNF_Mem_Server ) ) - ( ( AMS + ACS ) / Min( MRS ,DDR ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( RCSe ,MUR ) ) ,( Max( ( RRSe * RRSe ),Min( MUC ,DS ) ) / ( ( DS + RRSe ) - Max( MUC,DS ) ) ) )", "obj1": 0.9509433962264151, "obj2": 0.03962684513775597}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( MDR + BR ) + ( CRS * RRS ) ) ) )", "choosing": "Max( ( MUM / Min( CS ,MUM ) ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Const ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / RCSe ) / Min( DS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - ( MLU / MUC ) ) ) )", "obj1": 0.7113207547169811, "obj2": 0.21865913300413695}, {"determining": "( Min( BR ,( ( ( FirstVNF_Mem / DDR ) + ( ACS + FirstVNF_RAM ) ) - ( ( Const - MRS ) * ( ACS / FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( CRS ,ACS ),( FirstVNF_CPU_Server - Min( ( ( MRS + BR ) * Const ) ,DDR ) ) ) / ( ( ( AMS - FirstVNF_Mem ) - Min( ACS ,FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( ( MUM + ( ( MUM + ( ( RCSe * MUM ) - MLU ) ) - ( MUM * MUM ) ) ) - ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Min( AMS ,Min( FirstVNF_RAM ,Const ) ) ) / Max( RRS,FirstVNF_Mem ) )", "choosing": "( Min( Min( ( ( DS + MUR ) + ( ( ( MLU - ( CS + RRSe ) ) + DS ) - ( MUM + Max( ( RCSe * MUM ),( DS / CS ) ) ) ) ) ,DS ) ,MUR ) - Min( MUR ,RRSe ) )", "obj1": 0.33962264150943394, "obj2": 0.5440712940270832}, {"determining": "( ( ( Max( DDR,BR ) / FirstVNF_Mem ) * ( FirstVNF_CPU_Server + ( PN * Max( FirstVNF_Mem_Server,ACS ) ) ) ) + ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( Max( MUR,RRSe ) * Max( RMSe,Min( MLU ,MUR ) ) ) + ( CS - MLU ) )", "obj1": 0.6226415094339622, "obj2": 0.29953056982418624}, {"determining": "Max( Min( Min( ( Min( ( BR + ARS ) ,AMS ) - Min( CRS ,FirstVNF_Mem ) ) ,CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ),( ( Const / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( MLU * DS ) )", "obj1": 0.0830188679245283, "obj2": 0.7922595871699566}, {"determining": "( ( DDR * BR ) - Max( ( DDR + FirstVNF_RAM ),Min( FirstVNF_RAM ,Const ) ) )", "choosing": "( ( ( ( RCSe / MLU ) - MUR ) * ( DS + MLU ) ) * ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / ( ( ( CRS - MRS ) + DDR ) / FirstVNF_RAM ) ) / Max( ACS,( BR - BR ) ) ) ) ,Min( DDR ,ACS ) )", "choosing": "Min( ( ( RMSe / MUR ) + DS ) ,Min( ( RRSe / MUR ) ,( Min( ( ( MUM / MUC ) / ( ( RMSe * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * PN ) * CRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( CS * RRSe ) ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( ( Min( ( BR + ARS ) ,AMS ) - Min( CRS ,FirstVNF_Mem ) ) ,CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ),( ( Const / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( MLU * DS ) )", "obj1": 0.0830188679245283, "obj2": 0.7922595871699566}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( DS + RRSe ) )", "obj1": 0.8924528301886793, "obj2": 0.10884045909444658}, {"determining": "( ( ( MDR / ARS ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( ( ( ( MLU / MUR ) / ( MUM + ( CS - RMSe ) ) ) * MLU ) / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server - Max( PN,AMS ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( DDR / AMS ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( ( MUM + MLU ) - ( MUM * MUM ) ) ),RCSe ) + ( Min( RMSe ,MUC ) + ( MUR - Min( RCSe ,MLU ) ) ) )", "obj1": 0.49056603773584906, "obj2": 0.4428312088965995}, {"determining": "Max( Const,Min( Max( Min( Max( AMS,FirstVNF_CPU ) ,FirstVNF_Mem ),Min( Min( AMS ,FirstVNF_RAM ) ,BR ) ) ,( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( ( RCSe - MLU ) - ( MUM / ( Max( Max( RCSe,MUR ),( DS / RMSe ) ) / CS ) ) ) * ( ( RRSe + ( MLU * ( RMSe + MUC ) ) ) + MUC ) )", "obj1": 0.25660377358490566, "obj2": 0.6071292797019415}, {"determining": "( Max( Const,( BR - BR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUR / CS ) - ( RCSe * Min( RMSe ,( Min( ( ( MUM / MUC ) / ( ( MUM * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) ) )", "obj1": 0.4320754716981132, "obj2": 0.44450228317771845}, {"determining": "( Min( ( MRS * ( Min( MRS ,FirstVNF_Mem ) - BR ) ) ,( ARS + MDR ) ) * ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( MUR + RRSe ) / ( ( MUR * ( ( ( MLU / ( Min( DS ,CS ) / RCSe ) ) * DS ) / DS ) ) + MUC ) )", "obj1": 0.6339622641509434, "obj2": 0.2758543137407534}, {"determining": "Max( ( FirstVNF_CPU + CRS ),( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( ( Max( MUR,MUC ) * CS ) - MUC ) / ( ( ( MLU - RRSe ) - ( RCSe * MUR ) ) + ( ( MLU - MLU ) + ( MLU * DS ) ) ) )", "obj1": 0.5, "obj2": 0.3944601028191519}, {"determining": "( ( ( Max( CRS,PN ) / ( MDR * BR ) ) - Max( ( ARS - FirstVNF_Mem_Server ),Min( AMS ,PN ) ) ) + ( Min( Max( FirstVNF_CPU,ARS ) ,( MDR * FirstVNF_Mem_Server ) ) - ( ( AMS + ACS ) / Min( MRS ,DDR ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( RCSe ,MUR ) ) ,( Max( ( RRSe * RRSe ),Min( MUC ,DS ) ) / ( ( DS + RRSe ) - Max( MUC,DS ) ) ) )", "obj1": 0.9509433962264151, "obj2": 0.03962684513775597}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),Min( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) ,BR ) )", "choosing": "( ( RCSe - ( ( MLU + ( Max( MLU,RCSe ) / MUR ) ) * ( RCSe + MUR ) ) ) * ( DS + MLU ) )", "obj1": 0.16037735849056603, "obj2": 0.7357497427109285}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( FirstVNF_CPU,ACS ) ) )", "choosing": "Min( ( RCSe - ( ( Max( Min( RRSe ,Min( RCSe ,RRSe ) ),( ( RMSe - RMSe ) - MUM ) ) / RRSe ) / RMSe ) ) ,Max( MUM,MLU ) )", "obj1": 0.28679245283018867, "obj2": 0.5776662351764416}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( MUR + RRSe ) / ( ( MUR * ( ( ( MLU / ( Max( MUM,MUM ) / RCSe ) ) * DS ) / DS ) ) + MUC ) )", "obj1": 0.42641509433962266, "obj2": 0.4857986919187981}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) * ( PN / AMS ) )", "choosing": "( ( MUR + RRSe ) / ( ( MLU - RMSe ) * MUR ) )", "obj1": 0.2509433962264151, "obj2": 0.6525364174463866}, {"determining": "Max( Min( ( ( BR * FirstVNF_CPU ) * ( ACS * FirstVNF_RAM ) ) ,( ( Const - FirstVNF_RAM ) + ( ACS * ARS ) ) ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - MUR ) ,DS ),RRSe ) ,Min( ( ( RMSe - MUC ) - Min( MUR ,DS ) ) ,( MLU * Max( RCSe,CS ) ) ) )", "obj1": 0.1811320754716981, "obj2": 0.7203255601468851}, {"determining": "Min( ( FirstVNF_CPU + Max( AMS,FirstVNF_Mem ) ) ,( FirstVNF_RAM - ACS ) )", "choosing": "( ( MUR - ( ( MLU / MUR ) * MUR ) ) / Max( CS,( CS / RRSe ) ) )", "obj1": 0.9264150943396227, "obj2": 0.061973690680064746}, {"determining": "Max( Const,Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,Const ) )", "choosing": "( ( ( RCSe - MLU ) - Max( Min( ( MUM * CS ) ,( MUC * DS ) ),CS ) ) * ( DS + MLU ) )", "obj1": 0.18679245283018867, "obj2": 0.6942939539113239}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( Min( CRS ,ARS ) - ( FirstVNF_RAM_Server - BR ) ) ),( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( CS - RCSe ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.35471698113207545, "obj2": 0.516073686842115}, {"determining": "( Max( Min( CRS ,ACS ),( FirstVNF_CPU_Server - Max( PN,AMS ) ) ) / ( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) / FirstVNF_RAM_Server ) + Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),CRS ) ) - ARS ) )", "choosing": "( ( ( Max( RCSe,RRSe ) * ( MLU - MLU ) ) + ( ( MUM + MLU ) - ( MUM * MUM ) ) ) - ( RCSe / MLU ) )", "obj1": 0.9188679245283019, "obj2": 0.10092744706923497}, {"determining": "( ( Const * Min( AMS ,Min( Min( Max( Const,FirstVNF_RAM ) ,Max( AMS,( ARS + ( BR * FirstVNF_CPU ) ) ) ) ,Const ) ) ) / Max( RRS,FirstVNF_Mem ) )", "choosing": "( Min( Min( ( ( DS + MUR ) + ( MUC + RRSe ) ) ,( Max( Max( Max( Max( RCSe,RRSe ),DS ),RMSe ),( RCSe + RMSe ) ) + RCSe ) ) ,MUR ) - MUM )", "obj1": 0.33584905660377357, "obj2": 0.5262382140953541}, {"determining": "( Min( Const ,ACS ) - ( ( Min( DDR ,FirstVNF_RAM ) + ( ( ARS - Max( ( Const + DDR ),ACS ) ) - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) )", "choosing": "( ( RCSe - MLU ) - Max( MUR,( ( Max( ( MUR + MUR ),Max( Max( RCSe,MUR ),RRSe ) ) / MUR ) * MUR ) ) )", "obj1": 0.19622641509433963, "obj2": 0.6718570576411237}, {"determining": "Max( ( ( CRS / PN ) * ( FirstVNF_CPU + PN ) ),( ( FirstVNF_RAM * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( MUM * MUR ) * ( RCSe / DS ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) )", "obj1": 0.14150943396226415, "obj2": 0.7638206102876814}, {"determining": "( ( DDR * BR ) - ( FirstVNF_RAM - Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + MUC ) * ( MLU / DS ) )", "obj1": 0.5622641509433962, "obj2": 0.3709421407863846}, {"determining": "( ( ( Max( DDR,BR ) / FirstVNF_Mem ) * ( FirstVNF_CPU_Server + ( PN * Max( FirstVNF_Mem_Server,ACS ) ) ) ) + ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( Max( MUR,RRSe ) * Max( RMSe,Min( MLU ,MUR ) ) ) + ( CS - MLU ) )", "obj1": 0.6226415094339622, "obj2": 0.29953056982418624}, {"determining": "Max( ( FirstVNF_Mem_Server - ARS ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / DS ) + ( MLU - CS ) )", "obj1": 0.1339622641509434, "obj2": 0.768233423447714}, {"determining": "Max( ( ( CRS - BR ) - FirstVNF_CPU ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( ( MUM * MLU ) - Max( DS,CS ) ) * ( DS + MLU ) )", "obj1": 0.22452830188679246, "obj2": 0.6704645686899946}, {"determining": "( Max( CRS,BR ) + ( Min( MDR ,Min( ( FirstVNF_Mem / Max( ACS,DDR ) ) ,Const ) ) / RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( MUC / CS ) )", "obj1": 0.40943396226415096, "obj2": 0.4921665149915977}, {"determining": "( ( ( ( FirstVNF_Mem / CRS ) / ( CRS / FirstVNF_Mem ) ) + ( Min( AMS ,ACS ) - RRS ) ) - ( CRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( CS,RCSe ) ,( MUR + RRSe ) ) / Max( ( ( RRSe * CS ) * Max( CS,RMSe ) ),( ( Min( Max( Max( ( RCSe + DS ),MUC ),RCSe ) ,( DS + CS ) ) + DS ) - ( CS / RCSe ) ) ) )", "obj1": 0.2981132075471698, "obj2": 0.5713605672764925}, {"determining": "Min( Max( BR,( ( ACS - FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) ,CRS )", "choosing": "( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( ( RRSe / ( Min( ( RRSe * MUR ) ,( ( MUM * ( RRSe / CS ) ) - DS ) ) + MLU ) ) / MUC ) )", "obj1": 0.5283018867924528, "obj2": 0.38707970193604135}, {"determining": "( ( PN / FirstVNF_CPU ) * Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( MUM / DS ) - ( RCSe / RMSe ) )", "obj1": 0.10566037735849057, "obj2": 0.7835864402212401}, {"determining": "( ( ( MRS + ( Min( ARS ,FirstVNF_RAM_Server ) - AMS ) ) + ( ( ( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( MRS - Max( BR,CRS ) ) ) ) - FirstVNF_CPU ) + BR ) ) * ( RRS / ACS ) )", "choosing": "Min( Max( Max( ( RCSe + DS ),MUC ),RCSe ) ,( ( DS * CS ) / ( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( MLU / MUC ) ) ) )", "obj1": 0.5849056603773585, "obj2": 0.33616015151551254}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( PN + ACS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,Min( DS ,CS ) )", "obj1": 0.769811320754717, "obj2": 0.1650902046254109}, {"determining": "Min( Max( ARS,ARS ) ,( ( BR - FirstVNF_RAM ) + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * Max( ( ( Max( MLU,CS ) * MUR ) * MUR ),Max( ( ( RRSe * MLU ) * ( RRSe - MLU ) ),( ( RCSe - RMSe ) + ( MUR / RMSe ) ) ) ) ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7528301886792453, "obj2": 0.18564935939169389}, {"determining": "( Min( ( ACS * RRS ) ,( ( ( DDR / FirstVNF_RAM_Server ) + Min( Min( FirstVNF_RAM_Server ,MRS ) ,PN ) ) * Max( ACS,( Const + Const ) ) ) ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU - AMS ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) / MUR ) + Max( DS,MUR ) ) - ( ( MUR + MUR ) + ( RMSe + CS ) ) )", "obj1": 0.9245283018867925, "obj2": 0.07868853083573585}, {"determining": "Max( ( ( ( RRS + MDR ) + ARS ) * CRS ),( FirstVNF_RAM_Server - Min( Min( ( MRS * ( ACS - BR ) ) ,( ARS + MDR ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( DS / RMSe ) * ( MUR + MUC ) ) + ( ( ( MUM + MUR ) - RMSe ) + ( RCSe * RRSe ) ) ) + Max( ( ( MUR - CS ) * ( MUM / MUR ) ),Min( DS ,CS ) ) )", "obj1": 0.5811320754716981, "obj2": 0.34767614866669305}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / Min( MRS ,PN ) ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.31069605138687245}, {"determining": "Max( Min( Max( AMS,FirstVNF_CPU ) ,Min( FirstVNF_RAM ,Min( ( FirstVNF_CPU / PN ) ,FirstVNF_CPU_Server ) ) ),Min( FirstVNF_RAM ,BR ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * CS ) ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * Max( ( RRSe + MUC ),RMSe ) )", "obj1": 0.32075471698113206, "obj2": 0.5440869777922479}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM - Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + MUC ) * Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.24150943396226415, "obj2": 0.6605278606516328}, {"determining": "Max( ( ( CRS / Const ) + FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( DS / RMSe ) * ( MUR + MUC ) ) + ( MUM - DS ) ) + Max( ( ( ( MLU - ( ( ( MUC * MUC ) + MUR ) * Max( ( RRSe - RRSe ),MUM ) ) ) * ( RMSe / Min( ( MLU * ( RCSe - MUC ) ) ,Min( MUC ,MUR ) ) ) ) * ( MUM / MUR ) ),Min( Min( MUC ,DS ) ,( MUC - RCSe ) ) ) )", "obj1": 0.5679245283018868, "obj2": 0.36675247715321546}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( AMS - MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( ( CS / Max( MUM,( ( ( RMSe - MUR ) * RMSe ) * Min( MUM ,( MUM / CS ) ) ) ) ) + RRSe ) ) )", "obj1": 0.37169811320754714, "obj2": 0.4985723275626436}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( FirstVNF_CPU,ACS ) ) )", "choosing": "Min( ( RCSe - ( ( Max( Min( RRSe ,Min( RCSe ,RRSe ) ),( ( RMSe - RMSe ) - MUM ) ) / RRSe ) / RMSe ) ) ,Max( MUM,MLU ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "( ( ( Max( RRS,FirstVNF_CPU ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM / Const ) ) * FirstVNF_RAM ) / ( ( ( Min( ( AMS / PN ) ,CRS ) * PN ) + PN ) / Const ) ) + ( ( BR / FirstVNF_RAM_Server ) - BR ) ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Max( CS,( RMSe - ( RRSe - ( ( ( Max( MLU,MLU ) * RMSe ) * ( CS / Max( DS,MUR ) ) ) * ( Max( Max( RCSe,CS ),( RRSe * CS ) ) * Max( RMSe,( RCSe + DS ) ) ) ) ) ) ) )", "obj1": 0.9622641509433962, "obj2": 0.008150963360287642}, {"determining": "Min( ( MDR + Const ) ,FirstVNF_Mem )", "choosing": "Min( ( MUM * CS ) ,( Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUC ) ,RCSe ) ) ) * DS ) )", "obj1": 0.7358490566037735, "obj2": 0.2025820591666944}, {"determining": "( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - ( MLU / MUC ) ) ) )", "obj1": 0.7113207547169811, "obj2": 0.21865913300413695}, {"determining": "( ( Min( ACS ,ACS ) / ( RRS / DDR ) ) + ( ( Min( RRS ,AMS ) * ( MRS * ARS ) ) + ( Max( ARS,AMS ) - Max( Max( ( MDR - ( BR + FirstVNF_Mem ) ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ),Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),Min( FirstVNF_RAM ,Const ) ) ) ) ) )", "choosing": "( Max( ( MUC + MUC ),( ( RRSe * MLU ) * ( RRSe - MLU ) ) ) + ( RMSe / ( RMSe - ( Max( MUR,Max( Min( ( RRSe - RCSe ) ,( RCSe + MLU ) ),DS ) ) - RCSe ) ) ) )", "obj1": 0.7113207547169811, "obj2": 0.21865913300413695}, {"determining": "( Max( ACS,Const ) / ( ( FirstVNF_Mem_Server + ARS ) / ( Const * MDR ) ) )", "choosing": "( ( MUR / ( ( ( ( MLU / MLU ) / MUM ) * ( Min( RMSe ,( RMSe - ( CS - RMSe ) ) ) - Min( Min( MUR ,MUM ) ,Min( MUM ,CS ) ) ) ) / RRSe ) ) - ( RCSe * Min( RMSe ,MLU ) ) )", "obj1": 0.37924528301886795, "obj2": 0.49519833035411526}, {"determining": "Min( ( MRS * ( ACS - BR ) ) ,( ARS + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * MUC ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7264150943396226, "obj2": 0.20796103120215642}, {"determining": "( ( DDR * BR ) - ( RRS / FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) ) + MUC ) * ( RCSe + MUR ) )", "obj1": 0.5264150943396226, "obj2": 0.3879418354608071}, {"determining": "Max( Max( ( ACS + Min( ACS ,FirstVNF_CPU_Server ) ),BR ),( ( FirstVNF_CPU / ACS ) * Const ) )", "choosing": "( Min( MLU ,Max( MUC,( RRSe / MLU ) ) ) + Max( MLU,( MUM - RMSe ) ) )", "obj1": 0.7433962264150943, "obj2": 0.1879614575090804}, {"determining": "Min( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( MRS - Max( BR,AMS ) ) ) ) ) ,CRS )", "choosing": "( ( DS * ( ( RMSe + Max( Max( ( RCSe + DS ),MUC ),RCSe ) ) - ( CS / RCSe ) ) ) / ( MLU / MUC ) )", "obj1": 0.6037735849056604, "obj2": 0.30407990970274057}, {"determining": "( ( Max( Const,( DDR + FirstVNF_RAM_Server ) ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MUC - MUM ) + RMSe ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( Min( RRSe ,( Max( DS,CS ) - Min( RRSe ,MUM ) ) ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( MUR - ( CS / RCSe ) ) ) ) ) - ( MLU + Min( RRSe ,CS ) ) ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5523333406634632}, {"determining": "( ( Min( ACS ,ACS ) / FirstVNF_CPU ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( Max( ARS,AMS ) - ( BR + AMS ) ) ) )", "choosing": "( Max( ( Min( DS ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - Min( Min( CS ,MUC ) ,DS ) ) ) )", "obj1": 0.7150943396226415, "obj2": 0.2169256296750088}, {"determining": "Min( ( Max( MRS,ACS ) / FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( MUR - ( MUC / RCSe ) ) ) ) ) - ( MLU + Min( RRSe ,CS ) ) ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5523333406634632}, {"determining": "Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / CRS ) ) )", "choosing": "Max( ( MUC / DS ),( Min( MUR ,RMSe ) + ( MUR * MUM ) ) )", "obj1": 0.08679245283018867, "obj2": 0.7919941577803645}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * MRS )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / ( RMSe - Min( RRSe ,MUM ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9830188679245283, "obj2": 0.003974755771779307}, {"determining": "( ( CRS - MRS ) / ( ( Const - AMS ) - Min( DDR ,RRS ) ) )", "choosing": "( ( ( Max( RCSe,DS ) * ( MUM + MLU ) ) * Max( Max( DS,MUC ),RCSe ) ) + ( Min( ( RRSe * RRSe ) ,( MUR / RMSe ) ) + ( ( MLU + ( CS - DS ) ) * ( MLU / RMSe ) ) ) )", "obj1": 0.969811320754717, "obj2": 0.00755615299151343}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / ( MLU / MUC ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( BR * ARS ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( RMSe - ( RCSe - ( Min( RMSe ,Max( Min( MLU ,CS ),( CS / MUC ) ) ) + MUC ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( BR * ARS ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( RMSe - ( RCSe - ( Min( RMSe ,Max( Min( MLU ,CS ),( CS / MUC ) ) ) + MUC ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.9622641509433962, "obj2": 0.008150963360287642}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / ( Max( DS,CS ) - Min( RRSe ,MUM ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9679245283018868, "obj2": 0.008024541790508892}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "( ( ACS + FirstVNF_CPU ) - Min( Const ,( ( MRS + FirstVNF_CPU_Server ) - ( MDR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + MUC ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - ( BR + MRS ) )", "choosing": "( ( MUC + ( DS / MUM ) ) * ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( BR - Min( ( ( FirstVNF_RAM_Server * DDR ) / CRS ) ,AMS ) ),( Const - MRS ) ),ACS ) + FirstVNF_CPU_Server ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( MUR,MUR ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + Min( Max( MRS,MDR ) ,( ( ( FirstVNF_RAM_Server / AMS ) + FirstVNF_RAM ) + MDR ) ) ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( ACS * FirstVNF_Mem_Server ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + ( ( RRSe - RCSe ) + ( MUR - Min( ( RMSe * RMSe ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU_Server ) ,DDR ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( ( CS + ( ( ( CS + ( MUM + RRSe ) ) * ( MUM * ( DS * RMSe ) ) ) - ( RMSe - MLU ) ) ) - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( CRS,MRS ) ) ) ,Min( DDR ,ACS ) )", "choosing": "Min( ( ( RMSe / MUR ) + DS ) ,( Min( Min( Max( MUM,MLU ) ,( ( CS + MUR ) - ( MUR - MLU ) ) ) ,( ( MUR * Max( DS,Min( ( RMSe + RRSe ) ,RCSe ) ) ) - ( ( RRSe / RMSe ) + RMSe ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,CRS ) + ( Max( ( RRS * MRS ),( ARS - FirstVNF_Mem_Server ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RRSe - MUM ) - ( CS - Min( Max( Max( Max( RRSe,DS ),CS ),DS ) ,CS ) ) ) * RRSe ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( MDR / Min( FirstVNF_CPU ,Min( Max( ACS,DDR ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,( ( Min( MUC ,MLU ) + ( ( MUR * MUC ) - MUR ) ) + MLU ) ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( ( ( Const + ( ACS + ARS ) ) - ( PN - DDR ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( ( Max( MUR,RCSe ) * Max( RMSe,RCSe ) ) ,( ( RMSe - MLU ) - Max( MLU,RRSe ) ) ) + ( Max( ( MUM / MLU ),Min( CS ,DS ) ) / Max( Min( RRSe ,MUM ),Max( RRSe,MUC ) ) ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_CPU ) - Max( Const,Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUC,Min( ( Max( ( DS * MUC ),( RMSe + MUR ) ) + ( ( MUM + RCSe ) * ( RRSe * MLU ) ) ) ,( ( ( MLU - MLU ) * Max( MLU,RRSe ) ) * Max( ( RMSe - MUC ),( DS / MUR ) ) ) ) ) - ( Min( RMSe ,MUR ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / BR ),Const ) ,Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM_Server ) ) - ( Const / Const ) )", "choosing": "( ( CS / ( Max( Min( MUC ,MUC ),( DS * MUM ) ) * Min( Max( RRSe,MLU ) ,( MUR / MUR ) ) ) ) / Min( DS ,( RCSe * Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server * ( DDR - BR ) ) ) ,( FirstVNF_Mem_Server * DDR ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + Max( MUC,( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + Max( AMS,FirstVNF_Mem ) ) ,( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Min( PN ,DDR ) ) ) )", "choosing": "( ( MUR - ( ( ( RMSe - CS ) / MUR ) * MUR ) ) / Max( CS,( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Min( AMS ,ARS ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( CS,( ( MUC - MUC ) / MUR ) ) / MUR ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / Const ) + ( Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( Min( FirstVNF_Mem ,Max( Const,BR ) ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) ) / Min( Const ,Min( Min( ARS ,( Const + ( ( ARS + ARS ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ,DDR ) ) ) )", "choosing": "( Max( MLU,RCSe ) / ( RMSe - ( RCSe / ( ( MUR * RRSe ) - ( DS + ( Max( CS,MUM ) - ( ( MUM * RCSe ) / Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,( ( RRSe * CS ) * Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( MDR + BR ) + ( CRS * RRS ) ) ) )", "choosing": "Max( ( MUM / Min( CS ,MUM ) ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Const ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / RCSe ) / Min( DS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( ( FirstVNF_Mem / DDR ) + ( ACS + FirstVNF_RAM ) ) - ( ( Const - MRS ) * ( ACS / FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( CRS ,ACS ),( FirstVNF_CPU_Server - Min( ( ( MRS + BR ) * Const ) ,DDR ) ) ) / ( ( ( AMS - FirstVNF_Mem ) - Min( ACS ,FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( ( MUM + ( ( MUM + ( ( RCSe * MUM ) - MLU ) ) - ( MUM * MUM ) ) ) - ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) - Max( ( DDR + FirstVNF_RAM ),Min( FirstVNF_RAM ,Const ) ) )", "choosing": "( ( ( ( RCSe / MLU ) - MUR ) * ( DS + MLU ) ) * ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) ) ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,( MLU * Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / ( MRS / MDR ) ) - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( MUM / RCSe ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,ACS ) - ( MDR + AMS ) ) - Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),Min( FirstVNF_RAM ,Const ) ) )", "choosing": "( ( ( RCSe - MUR ) * ( ( RCSe - MLU ) - Max( DS,CS ) ) ) * ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) - ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) )", "choosing": "( ( MLU + RRSe ) * ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( Min( Const ,ACS ) - ( MDR + AMS ) ) )", "choosing": "( ( Max( DS,CS ) * MUM ) / ( MLU / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( CRS,FirstVNF_RAM_Server ),( CRS * ARS ) ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / Max( MUR,RCSe ) ) / Min( DS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( ( FirstVNF_Mem / DDR ) + ( ( ( BR - FirstVNF_RAM ) / ( ARS - ( DDR - ARS ) ) ) + FirstVNF_RAM ) ) - ( ( Const - MRS ) * ( ACS / FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( ( CS * ( RRSe / ( Min( MLU ,MLU ) * RMSe ) ) ) * Min( MUR ,( RRSe - MUM ) ) ) * ( MUR + MUR ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,( BR + Min( Min( ( MDR + Const ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) ,FirstVNF_Mem ) ) ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( MUR - ( MUC * DS ) ) / RMSe ),Max( MUR,Min( ( MLU - MUC ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( ( CRS / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - CS ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( ( MDR + BR ) + ( CRS * RRS ) ) ) - Const )", "choosing": "( ( RCSe - MLU ) - Max( MUR,( MUM / Min( CS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Min( ARS ,CRS ) + ( Max( ( RRS * MRS ),( ARS - FirstVNF_Mem_Server ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RRSe - MUM ) - ( CS - Min( Max( Max( Max( RRSe,DS ),CS ),DS ) ,CS ) ) ) * RRSe ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / ( ( ( CRS - MRS ) + DDR ) / FirstVNF_RAM ) ) / Max( ACS,( BR - BR ) ) ) ) ,Min( DDR ,ACS ) )", "choosing": "Min( ( ( RMSe / MUR ) + DS ) ,Min( ( RRSe / MUR ) ,( Min( ( ( MUM / MUC ) / ( ( RMSe * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( ( Min( ( BR + ARS ) ,AMS ) - Min( CRS ,FirstVNF_Mem ) ) ,CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ),( ( Const / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( MLU * DS ) )", "obj1": 0.0830188679245283, "obj2": 0.7922595871699566}, {"determining": "( ( Max( ( CRS - CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem ) * ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( MLU + RRSe ) * ( RCSe + MUR ) ) / ( MUM * RCSe ) )", "obj1": 0.8433962264150944, "obj2": 0.11682413460891657}, {"determining": "( Max( Const,( BR - BR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUR / CS ) - ( RCSe * Min( RMSe ,( Min( ( ( MUM / MUC ) / ( ( MUM * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) ) )", "obj1": 0.4320754716981132, "obj2": 0.44450228317771845}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server - Max( PN,AMS ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( DDR / AMS ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( ( MUM + MLU ) - ( MUM * MUM ) ) ),RCSe ) + ( Min( RMSe ,MUC ) + ( MUR - Min( RCSe ,MLU ) ) ) )", "obj1": 0.49056603773584906, "obj2": 0.4428312088965995}, {"determining": "Max( Const,Min( Max( Min( Max( AMS,FirstVNF_CPU ) ,FirstVNF_Mem ),Min( Min( AMS ,FirstVNF_RAM ) ,BR ) ) ,( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( ( RCSe - MLU ) - ( MUM / ( Max( Max( RCSe,MUR ),( DS / RMSe ) ) / CS ) ) ) * ( ( RRSe + ( MLU * ( RMSe + MUC ) ) ) + MUC ) )", "obj1": 0.25660377358490566, "obj2": 0.6071292797019415}, {"determining": "( ( ( MDR / ARS ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( ( ( ( MLU / MUR ) / ( MUM + ( CS - RMSe ) ) ) * MLU ) / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}, {"determining": "Max( Min( Min( ARS ,CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ),( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / Max( ARS,( Min( Max( FirstVNF_CPU,ARS ) ,( MDR * FirstVNF_Mem_Server ) ) - ( ( AMS + ACS ) / Min( MRS ,DDR ) ) ) ) ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( Min( Max( ( RRSe - MUM ),Min( RCSe ,MUR ) ) ,( Max( ( RRSe * RRSe ),Min( MUC ,DS ) ) / ( ( DS + RRSe ) - Max( MUC,DS ) ) ) ) + ( ( MLU - MLU ) + ( MLU * DS ) ) ) )", "obj1": 0.12830188679245283, "obj2": 0.7623852066562495}, {"determining": "Max( ( FirstVNF_CPU + CRS ),( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( ( Max( MUR,MUC ) * CS ) - MUC ) / ( ( ( MLU - RRSe ) - ( RCSe * MUR ) ) + ( ( MLU - MLU ) + ( MLU * DS ) ) ) )", "obj1": 0.5, "obj2": 0.3944601028191519}, {"determining": "( ( ( Max( CRS,PN ) / ( MDR * BR ) ) - Max( ( ARS - FirstVNF_Mem_Server ),Min( AMS ,PN ) ) ) + ( Min( Max( FirstVNF_CPU,ARS ) ,( MDR * FirstVNF_Mem_Server ) ) - ( ( AMS + ACS ) / Min( MRS ,DDR ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( RCSe ,MUR ) ) ,( Max( ( RRSe * RRSe ),Min( MUC ,DS ) ) / ( ( DS + RRSe ) - Max( MUC,DS ) ) ) )", "obj1": 0.9509433962264151, "obj2": 0.03962684513775597}, {"determining": "( ( Min( ACS ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) ) ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( ( MLU - MUC ) + DS ) ),RRSe ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) )", "obj1": 0.6169811320754717, "obj2": 0.27171309672418703}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( FirstVNF_CPU,ACS ) ) )", "choosing": "Min( ( RCSe - ( ( Max( Min( RRSe ,Min( RCSe ,RRSe ) ),( ( RMSe - RMSe ) - MUM ) ) / RRSe ) / RMSe ) ) ,Max( MUM,MLU ) )", "obj1": 0.28679245283018867, "obj2": 0.5776662351764416}, {"determining": "Min( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem - MRS ) + ( Max( Min( ( ( BR * FirstVNF_CPU ) * ( ACS * FirstVNF_RAM ) ) ,( ( Const - FirstVNF_RAM ) + ( ACS * ARS ) ) ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) ) * ( MRS - Max( BR,AMS ) ) ) ) ) ,CRS )", "choosing": "( ( DS * ( ( RMSe + Max( Max( ( RCSe + DS ),MUC ),RCSe ) ) - ( CS / RCSe ) ) ) / ( RRSe + MUR ) )", "obj1": 0.6566037735849056, "obj2": 0.2658614023226595}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) * ( PN / AMS ) )", "choosing": "( ( MUR + RRSe ) / ( ( MLU - RMSe ) * MUR ) )", "obj1": 0.2509433962264151, "obj2": 0.6525364174463866}, {"determining": "Max( Min( ( ( BR * FirstVNF_CPU ) * ( ACS * FirstVNF_RAM ) ) ,( ( Const - FirstVNF_RAM ) + ( ACS * ARS ) ) ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - MUR ) ,DS ),RRSe ) ,Min( ( ( RMSe - MUC ) - Min( MUR ,DS ) ) ,( MLU * Max( RCSe,CS ) ) ) )", "obj1": 0.1811320754716981, "obj2": 0.7203255601468851}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( Min( CRS ,ARS ) - ( FirstVNF_RAM_Server - BR ) ) ),( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ARS ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( CS - RCSe ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( ( MLU + ( Max( MLU,RCSe ) / MUR ) ) + RCSe ) ) ) )", "obj1": 0.4, "obj2": 0.4742904643741652}, {"determining": "Min( ( FirstVNF_CPU + Max( AMS,FirstVNF_Mem ) ) ,( FirstVNF_RAM - ACS ) )", "choosing": "( ( MUR - ( ( MLU / MUR ) * MUR ) ) / Max( CS,( CS / RRSe ) ) )", "obj1": 0.9264150943396227, "obj2": 0.061973690680064746}, {"determining": "Max( Const,Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,Const ) )", "choosing": "( ( ( RCSe - MLU ) - Max( Min( ( MUM * CS ) ,( MUC * DS ) ),CS ) ) * ( DS + MLU ) )", "obj1": 0.18679245283018867, "obj2": 0.6942939539113239}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( Min( CRS ,ARS ) - ( FirstVNF_RAM_Server - BR ) ) ),( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( CS - RCSe ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.35471698113207545, "obj2": 0.516073686842115}, {"determining": "( ( ( ( ( FirstVNF_CPU + DDR ) + ( ( ACS + MRS ) - PN ) ) - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,Min( FirstVNF_RAM ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( Max( DS,CS ) * Max( ( Min( Min( ( ( MUR - MLU ) / Min( RRSe ,DS ) ) ,MUM ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) )", "obj1": 0.9056603773584906, "obj2": 0.09286245237806358}, {"determining": "( ( Const * Min( AMS ,Min( Min( Max( Const,FirstVNF_RAM ) ,Max( AMS,( ARS + ( BR * FirstVNF_CPU ) ) ) ) ,Const ) ) ) / Max( RRS,FirstVNF_Mem ) )", "choosing": "( Min( Min( ( ( DS + MUR ) + ( MUC + RRSe ) ) ,( Max( Max( Max( Max( RCSe,RRSe ),DS ),RMSe ),( RCSe + RMSe ) ) + RCSe ) ) ,MUR ) - MUM )", "obj1": 0.33584905660377357, "obj2": 0.5262382140953541}, {"determining": "( Min( Const ,ACS ) - ( ( Min( DDR ,FirstVNF_RAM ) + ( ( ARS - Max( ( Const + DDR ),ACS ) ) - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) )", "choosing": "( ( RCSe - MLU ) - Max( MUR,( ( Max( ( MUR + MUR ),Max( Max( RCSe,MUR ),RRSe ) ) / MUR ) * MUR ) ) )", "obj1": 0.19622641509433963, "obj2": 0.6718570576411237}, {"determining": "( Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),( BR - BR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( Max( ( Min( DS ,MUC ) + ( MUR + DS ) ),( ( RRSe * MLU ) * ( RRSe - MLU ) ) ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) ) - ( RCSe * Min( RMSe ,( Min( ( ( MUM / MUC ) / ( ( MUM * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) ) )", "obj1": 0.5754716981132075, "obj2": 0.32592558278887457}, {"determining": "Max( Min( Min( ARS ,Max( FirstVNF_RAM_Server,AMS ) ) ,FirstVNF_CPU ),Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( ( ( ( ( ( RCSe / Min( RCSe ,RMSe ) ) * MUC ) + MUR ) - RRSe ) - ( RCSe * MUR ) ) + ( ( MLU - MLU ) + ( MLU * DS ) ) ) )", "obj1": 0.15849056603773584, "obj2": 0.7357875614679673}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,CRS )", "choosing": "( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( MLU / ( MUM / RMSe ) ) )", "obj1": 0.5452830188679245, "obj2": 0.3635216900763196}, {"determining": "Max( ( ( CRS - BR ) - FirstVNF_CPU ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( ( MUM * MLU ) - Max( DS,CS ) ) * ( DS + MLU ) )", "obj1": 0.22452830188679246, "obj2": 0.6704645686899946}, {"determining": "( ( Max( Max( ( BR - RRS ),( ( ACS - DDR ) - MRS ) ),ACS ) + FirstVNF_CPU_Server ) - ( ( Max( Const,Const ) * AMS ) / ( FirstVNF_RAM * DDR ) ) )", "choosing": "Min( Max( MUR,MUR ) ,( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( RCSe,Min( RRSe ,( CS + ( RMSe + ( RMSe + MLU ) ) ) ) ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.879245283018868, "obj2": 0.1129002630743953}, {"determining": "( ( PN / FirstVNF_CPU ) * Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( MUM / DS ) - ( RCSe / RMSe ) )", "obj1": 0.10566037735849057, "obj2": 0.7835864402212401}, {"determining": "( Min( ( ACS * RRS ) ,( ( ( DDR / FirstVNF_RAM_Server ) + Min( Min( FirstVNF_RAM_Server ,MRS ) ,PN ) ) * Max( ACS,( Const + Const ) ) ) ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU - AMS ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) / MUR ) + Max( DS,MUR ) ) - ( ( MUR + MUR ) + ( RMSe + CS ) ) )", "obj1": 0.9245283018867925, "obj2": 0.07868853083573585}, {"determining": "( ( ( Max( Max( CRS,FirstVNF_RAM_Server ),( CRS * ARS ) ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( ( ( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( MRS - Max( BR,CRS ) ) ) ) - FirstVNF_CPU ) + BR ) ) * ( RRS / ACS ) )", "choosing": "Min( Max( Max( ( ( MUM / Max( MUR,RCSe ) ) + DS ),MUC ),RCSe ) ,( ( DS * CS ) / ( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( MLU / MUC ) ) ) )", "obj1": 0.6037735849056604, "obj2": 0.302753988575483}, {"determining": "Max( Min( Max( AMS,FirstVNF_CPU ) ,Min( FirstVNF_RAM ,Min( ( FirstVNF_CPU / PN ) ,FirstVNF_CPU_Server ) ) ),Min( FirstVNF_RAM ,BR ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * CS ) ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * Max( ( RRSe + MUC ),RMSe ) )", "obj1": 0.32075471698113206, "obj2": 0.5440869777922479}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( DS + RRSe ) )", "obj1": 0.8924528301886793, "obj2": 0.10884045909444658}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM - Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + MUC ) * Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.24150943396226415, "obj2": 0.6605278606516328}, {"determining": "Min( Max( BR,( ( ACS - FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) ,CRS )", "choosing": "( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( ( RRSe / ( Min( ( RRSe * MUR ) ,( ( MUM * ( RRSe / CS ) ) - DS ) ) + MLU ) ) / MUC ) )", "obj1": 0.5283018867924528, "obj2": 0.38707970193604135}, {"determining": "Max( Min( Max( AMS,FirstVNF_CPU ) ,Min( FirstVNF_RAM ,( ( MDR - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) ) ),Min( FirstVNF_RAM ,BR ) )", "choosing": "( ( MLU - ( Max( DS,CS ) * Max( ( Min( Min( ( MUR / MLU ) ,MUM ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * Max( ( RRSe + MUC ),RMSe ) )", "obj1": 0.39622641509433965, "obj2": 0.4765918713721008}, {"determining": "( Max( ACS,Const ) / ( ( FirstVNF_Mem_Server + ARS ) / ( Const * MDR ) ) )", "choosing": "( ( MUR / ( ( ( ( MLU / MLU ) / MUM ) * ( Min( RMSe ,( RMSe - ( CS - RMSe ) ) ) - Min( Min( MUR ,MUM ) ,Min( MUM ,CS ) ) ) ) / RRSe ) ) - ( RCSe * Min( RMSe ,MLU ) ) )", "obj1": 0.37924528301886795, "obj2": 0.49519833035411526}, {"determining": "( ( Min( ARS ,RRS ) * ( FirstVNF_CPU_Server + Const ) ) + ( ( FirstVNF_CPU_Server / ACS ) - Min( ACS ,BR ) ) )", "choosing": "( ( Max( MUR,RRSe ) * MUC ) + Min( ( Min( DS ,MUC ) + ( MUR + DS ) ) ,Min( RRSe ,DS ) ) )", "obj1": 0.5584905660377358, "obj2": 0.3616228308683037}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( AMS - MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( ( CS / Max( MUM,( ( ( RMSe - MUR ) * RMSe ) * Min( MUM ,( MUM / CS ) ) ) ) ) + RRSe ) ) )", "obj1": 0.37169811320754714, "obj2": 0.4985723275626436}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( FirstVNF_CPU,ACS ) ) )", "choosing": "Min( ( RCSe - ( ( Max( Min( RRSe ,Min( RCSe ,RRSe ) ),( ( RMSe - RMSe ) - MUM ) ) / RRSe ) / RMSe ) ) ,Max( MUM,MLU ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "Max( Max( ( ACS + Min( ACS ,DDR ) ),BR ),( MDR * ACS ) )", "choosing": "( Min( MLU ,DS ) + Max( MLU,RMSe ) )", "obj1": 0.7603773584905661, "obj2": 0.17786847795328634}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),Min( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) ,BR ) )", "choosing": "( ( RCSe - ( ( MLU + ( Max( MLU,RCSe ) / MUR ) ) * ( RCSe + MUR ) ) ) * ( DS + MLU ) )", "obj1": 0.16037735849056603, "obj2": 0.7357497427109285}, {"determining": "Min( ( MDR + Const ) ,FirstVNF_Mem )", "choosing": "Min( ( MUM * CS ) ,( Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUC ) ,RCSe ) ) ) * DS ) )", "obj1": 0.7358490566037735, "obj2": 0.2025820591666944}, {"determining": "( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - ( MLU / MUC ) ) ) )", "obj1": 0.7113207547169811, "obj2": 0.21865913300413695}, {"determining": "( ( Min( ACS ,ACS ) / ( RRS / DDR ) ) + ( ( Min( RRS ,AMS ) * ( MRS * ARS ) ) + ( Max( ARS,AMS ) - Max( Max( ( MDR - ( BR + FirstVNF_Mem ) ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ),Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),Min( FirstVNF_RAM ,Const ) ) ) ) ) )", "choosing": "( Max( ( MUC + MUC ),( ( RRSe * MLU ) * ( RRSe - MLU ) ) ) + ( RMSe / ( RMSe - ( Max( MUR,Max( Min( ( RRSe - RCSe ) ,( RCSe + MLU ) ),DS ) ) - RCSe ) ) ) )", "obj1": 0.7113207547169811, "obj2": 0.21865913300413695}, {"determining": "Max( MRS,( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( CS - RCSe ) + Max( ( Max( CS,RCSe ) / MUR ),RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.3113207547169811, "obj2": 0.5657451683419571}, {"determining": "( ( ( ( FirstVNF_Mem / CRS ) / ( CRS / FirstVNF_Mem ) ) + ( Min( AMS ,ACS ) - RRS ) ) - ( CRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( CS,RCSe ) ,( MUR + RRSe ) ) / Max( ( ( RRSe * CS ) * Max( CS,RMSe ) ),( ( Min( Max( Max( ( RCSe + DS ),MUC ),RCSe ) ,( DS + CS ) ) + DS ) - ( CS / RCSe ) ) ) )", "obj1": 0.2981132075471698, "obj2": 0.5713605672764925}, {"determining": "( ( ( Max( RRS,FirstVNF_CPU ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM / Const ) ) * FirstVNF_RAM ) / ( ( ( Min( ( AMS / PN ) ,CRS ) * PN ) + PN ) / Const ) ) + ( ( BR / FirstVNF_RAM_Server ) - BR ) ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Max( CS,( RMSe - ( RRSe - ( ( ( Max( MLU,MLU ) * RMSe ) * ( CS / Max( DS,MUR ) ) ) * ( Max( Max( RCSe,CS ),( RRSe * CS ) ) * Max( RMSe,( RCSe + DS ) ) ) ) ) ) ) )", "obj1": 0.9622641509433962, "obj2": 0.008150963360287642}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( PN + ACS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,Min( DS ,CS ) )", "obj1": 0.769811320754717, "obj2": 0.1650902046254109}, {"determining": "Min( ( MRS * ( ACS - BR ) ) ,( ARS + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * MUC ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7264150943396226, "obj2": 0.20796103120215642}, {"determining": "( ( DDR * BR ) - ( RRS / FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) ) + MUC ) * ( RCSe + MUR ) )", "obj1": 0.5264150943396226, "obj2": 0.3879418354608071}, {"determining": "Max( Max( ( ACS + Min( ACS ,FirstVNF_CPU_Server ) ),BR ),( ( FirstVNF_CPU / ACS ) * Const ) )", "choosing": "( Min( MLU ,Max( MUC,( RRSe / MLU ) ) ) + Max( MLU,( MUM - RMSe ) ) )", "obj1": 0.7433962264150943, "obj2": 0.1879614575090804}, {"determining": "( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - ( MLU / MUC ) ) ) )", "obj1": 0.5660377358490566, "obj2": 0.34369614156683675}, {"determining": "Min( Max( ARS,ARS ) ,( ( BR - FirstVNF_RAM ) + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * Max( ( ( Max( MLU,CS ) * MUR ) * MUR ),Max( ( ( RRSe * MLU ) * ( RRSe - MLU ) ),( ( RCSe - RMSe ) + ( MUR / RMSe ) ) ) ) ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7528301886792453, "obj2": 0.18564935939169389}, {"determining": "( ( Max( Const,( DDR + FirstVNF_RAM_Server ) ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MUC - MUM ) + RMSe ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - ( MLU / MUC ) ) ) )", "obj1": 0.5660377358490566, "obj2": 0.34369614156683675}, {"determining": "( ( Min( ACS ,ACS ) / FirstVNF_CPU ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( Max( ARS,AMS ) - ( BR + AMS ) ) ) )", "choosing": "( Max( ( Min( DS ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - Min( Min( CS ,MUC ) ,DS ) ) ) )", "obj1": 0.7150943396226415, "obj2": 0.2169256296750088}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),Min( DDR ,BR ) )", "choosing": "( Min( Min( ( ( MUM + Min( MLU ,Max( DS,DS ) ) ) - MUM ) ,RCSe ) ,RCSe ) / ( ( ( MUC / MUC ) / Min( Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) ) ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.31069605138687245}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / Min( MRS ,PN ) ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.31069605138687245}, {"determining": "( ( CRS - MRS ) / ( ( ( FirstVNF_Mem * DDR ) - AMS ) - Min( DDR ,RRS ) ) )", "choosing": "( ( ( Max( RCSe,DS ) * ( MUM + MLU ) ) * Max( Max( DS,MUC ),RCSe ) ) + MUR )", "obj1": 0.969811320754717, "obj2": 0.006730278872373563}, {"determining": "Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / CRS ) ) )", "choosing": "Max( ( MUC / DS ),( Min( MUR ,RMSe ) + ( MUR * MUM ) ) )", "obj1": 0.08679245283018867, "obj2": 0.7919941577803645}, {"determining": "Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( PN / AMS ) )", "choosing": "Min( Min( RRSe ,( Max( DS,CS ) - Min( RRSe ,MUM ) ) ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( MUR / Min( MLU ,RCSe ) ) ,( MUR - ( CS / RCSe ) ) ) ) ) - ( MLU + Min( RRSe ,CS ) ) ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5523333406634632}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * MRS )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / ( RMSe - Min( RRSe ,MUM ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9830188679245283, "obj2": 0.003974755771779307}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / ( MLU / MUC ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * ( RCSe + DS ) ) ),( Min( RMSe ,Max( Min( MLU ,CS ),( RMSe / MUC ) ) ) + MUC ) ) )", "obj1": 0.9905660377358491, "obj2": 0.0022054446298258278}, {"determining": "Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( Min( RRSe ,( Max( DS,CS ) - Min( RRSe ,MUM ) ) ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( MUR - ( CS / RCSe ) ) ) ) ) - ( MLU + Min( RRSe ,CS ) ) ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5523333406634632}, {"determining": "( ( ( Max( RRS,FirstVNF_CPU ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM / Const ) ) * FirstVNF_RAM ) / ( ( ( Min( ( AMS / PN ) ,CRS ) * PN ) + PN ) / Const ) ) + ( ( BR / FirstVNF_RAM_Server ) - BR ) ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Max( CS,( RMSe - ( RRSe - ( ( ( Max( MLU,MLU ) * RMSe ) * ( CS / Max( DS,MUR ) ) ) * ( Max( Max( RCSe,CS ),( RRSe * CS ) ) * Max( RMSe,( RCSe + DS ) ) ) ) ) ) ) )", "obj1": 0.9622641509433962, "obj2": 0.008150963360287642}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - Min( Const ,RRS ) ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( BR * ARS ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / ( MUC / RRSe ) ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( MUR * RRSe ) )", "obj1": 0.9641509433962264, "obj2": 0.00796161448405005}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( BR * ARS ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( RMSe - ( RCSe - ( Min( RMSe ,Max( Min( MLU ,CS ),( CS / MUC ) ) ) + MUC ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "( ( ( FirstVNF_RAM * PN ) * CRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( CS * RRSe ) ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_CPU ) - Min( Const ,( ( MRS + FirstVNF_CPU_Server ) - ( MDR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + MUC ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - ( BR + MRS ) )", "choosing": "( ( MUC + ( DS / MUM ) ) * ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( BR - Min( ( ( FirstVNF_RAM_Server * DDR ) / CRS ) ,AMS ) ),( Const - MRS ) ),ACS ) + FirstVNF_CPU_Server ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( MUR,MUR ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + Min( Max( MRS,MDR ) ,( ( ( FirstVNF_RAM_Server / AMS ) + FirstVNF_RAM ) + MDR ) ) ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( ACS * FirstVNF_Mem_Server ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + ( ( RRSe - RCSe ) + ( MUR - Min( ( RMSe * RMSe ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU_Server ) ,DDR ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( ( CS + ( ( ( CS + ( MUM + RRSe ) ) * ( MUM * ( DS * RMSe ) ) ) - ( RMSe - MLU ) ) ) - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( CRS,MRS ) ) ) ,Min( DDR ,ACS ) )", "choosing": "Min( ( ( RMSe / MUR ) + DS ) ,( Min( Min( Max( MUM,MLU ) ,( ( CS + MUR ) - ( MUR - MLU ) ) ) ,( ( MUR * Max( DS,Min( ( RMSe + RRSe ) ,RCSe ) ) ) - ( ( RRSe / RMSe ) + RMSe ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,CRS ) + ( Max( ( RRS * MRS ),( ARS - FirstVNF_Mem_Server ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RRSe - MUM ) - ( CS - Min( Max( Max( Max( RRSe,DS ),CS ),DS ) ,CS ) ) ) * RRSe ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( MDR / Min( FirstVNF_CPU ,Min( Max( ACS,DDR ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,( ( Min( MUC ,MLU ) + ( ( MUR * MUC ) - MUR ) ) + MLU ) ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( ( ( Const + ( ACS + ARS ) ) - ( PN - DDR ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( ( Max( MUR,RCSe ) * Max( RMSe,RCSe ) ) ,( ( RMSe - MLU ) - Max( MLU,RRSe ) ) ) + ( Max( ( MUM / MLU ),Min( CS ,DS ) ) / Max( Min( RRSe ,MUM ),Max( RRSe,MUC ) ) ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_CPU ) - Max( Const,Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUC,Min( ( Max( ( DS * MUC ),( RMSe + MUR ) ) + ( ( MUM + RCSe ) * ( RRSe * MLU ) ) ) ,( ( ( MLU - MLU ) * Max( MLU,RRSe ) ) * Max( ( RMSe - MUC ),( DS / MUR ) ) ) ) ) - ( Min( RMSe ,MUR ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / BR ),Const ) ,Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM_Server ) ) - ( Const / Const ) )", "choosing": "( ( CS / ( Max( Min( MUC ,MUC ),( DS * MUM ) ) * Min( Max( RRSe,MLU ) ,( MUR / MUR ) ) ) ) / Min( DS ,( RCSe * Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server * ( DDR - BR ) ) ) ,( FirstVNF_Mem_Server * DDR ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + Max( MUC,( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + Max( AMS,FirstVNF_Mem ) ) ,( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Min( PN ,DDR ) ) ) )", "choosing": "( ( MUR - ( ( ( RMSe - CS ) / MUR ) * MUR ) ) / Max( CS,( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Min( AMS ,ARS ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( CS,( ( MUC - MUC ) / MUR ) ) / MUR ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / Const ) + ( Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( Min( FirstVNF_Mem ,Max( Const,BR ) ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) ) / Min( Const ,Min( Min( ARS ,( Const + ( ( ARS + ARS ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ,DDR ) ) ) )", "choosing": "( Max( MLU,RCSe ) / ( RMSe - ( RCSe / ( ( MUR * RRSe ) - ( DS + ( Max( CS,MUM ) - ( ( MUM * RCSe ) / Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,( ( RRSe * CS ) * Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( MDR + BR ) + ( CRS * RRS ) ) ) )", "choosing": "Max( ( MUM / Min( CS ,MUM ) ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Const ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / RCSe ) / Min( DS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( ( FirstVNF_Mem / DDR ) + ( ACS + FirstVNF_RAM ) ) - ( ( Const - MRS ) * ( ACS / FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( CRS ,ACS ),( FirstVNF_CPU_Server - Min( ( ( MRS + BR ) * Const ) ,DDR ) ) ) / ( ( ( AMS - FirstVNF_Mem ) - Min( ACS ,FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( ( MUM + ( ( MUM + ( ( RCSe * MUM ) - MLU ) ) - ( MUM * MUM ) ) ) - ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) - Max( ( DDR + FirstVNF_RAM ),Min( FirstVNF_RAM ,Const ) ) )", "choosing": "( ( ( ( RCSe / MLU ) - MUR ) * ( DS + MLU ) ) * ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) ) ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,( MLU * Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / ( MRS / MDR ) ) - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( MUM / RCSe ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ( Min( FirstVNF_RAM ,( Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ,( CRS - Const ) ) ) * ACS ) ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( ( BR - BR ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUR - ( CS - Min( Max( Max( Max( MUR,DS ),CS ),MUC ) ,CS ) ) ) * ( ( RMSe - ( ( ( ( MUC / RCSe ) + DS ) * ( ( DS + RCSe ) * ( RRSe / MUM ) ) ) * MUR ) ) - Min( MUR ,MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,CRS ) + ( Max( ( RRS * MRS ),( ARS - FirstVNF_Mem_Server ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RRSe - MUM ) - ( CS - Min( Max( Max( Max( RRSe,DS ),CS ),DS ) ,CS ) ) ) * RRSe ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( ( Min( ( BR + ARS ) ,AMS ) - Min( CRS ,FirstVNF_Mem ) ) ,CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ),( ( Const / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( MLU * DS ) )", "obj1": 0.0830188679245283, "obj2": 0.7922595871699566}, {"determining": "Max( FirstVNF_CPU_Server,Min( FirstVNF_RAM ,BR ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * CS ) ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * ( ( MUM / RCSe ) / Min( DS ,RCSe ) ) )", "obj1": 0.17547169811320754, "obj2": 0.6645061599466487}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM - Max( Const,Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,Const ) ) ) )", "choosing": "( ( MLU + MUC ) * ( ( RCSe - MLU ) - Max( Min( ( MUM * CS ) ,( MUC * DS ) ),CS ) ) )", "obj1": 0.2188679245283019, "obj2": 0.6379438896911946}, {"determining": "Max( Const,Min( Max( Min( Max( AMS,FirstVNF_CPU ) ,FirstVNF_Mem ),Min( Min( AMS ,FirstVNF_RAM ) ,BR ) ) ,( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( ( RCSe - MLU ) - ( MUM / ( Max( Max( RCSe,MUR ),( DS / RMSe ) ) / CS ) ) ) * ( ( RRSe + ( MLU * ( RMSe + MUC ) ) ) + MUC ) )", "obj1": 0.25660377358490566, "obj2": 0.6071292797019415}, {"determining": "( ( Max( ( CRS - CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem ) * ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( MLU + RRSe ) * ( RCSe + MUR ) ) / ( MUM * RCSe ) )", "obj1": 0.8433962264150944, "obj2": 0.11682413460891657}, {"determining": "( ( ( MDR / ARS ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( ( ( ( MLU / MUR ) / ( MUM + ( CS - RMSe ) ) ) * MLU ) / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "Max( Const,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MLU ) - Max( DS,CS ) ) * ( DS + ( DS * RMSe ) ) )", "obj1": 0.10943396226415095, "obj2": 0.7530904301215544}, {"determining": "Min( Max( FirstVNF_RAM_Server,( Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( Min( FirstVNF_Mem ,Max( Const,BR ) ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) ) / ACS ) ) ,CRS )", "choosing": "( ( DS * ( RCSe - ( CS / RCSe ) ) ) / ( MLU / MUC ) )", "obj1": 0.4641509433962264, "obj2": 0.4231632132872052}, {"determining": "Min( ( Max( MRS,ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( BR * ARS ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( MUR - ( CS / RCSe ) ) ) ) ) - CS ) ) )", "obj1": 0.7094339622641509, "obj2": 0.1969479422300271}, {"determining": "( ( Min( ACS ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) ) ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( ( MLU - MUC ) + DS ) ),RRSe ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) )", "obj1": 0.6169811320754717, "obj2": 0.27171309672418703}, {"determining": "( ( ( Max( CRS,PN ) / ( MDR * BR ) ) - Max( ( ARS - FirstVNF_Mem_Server ),Min( AMS ,PN ) ) ) + ( Min( Max( FirstVNF_CPU,ARS ) ,( MDR * FirstVNF_Mem_Server ) ) - ( ( AMS + ACS ) / Min( MRS ,DDR ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( RCSe ,MUR ) ) ,( Max( ( RRSe * RRSe ),Min( MUC ,DS ) ) / ( ( DS + RRSe ) - Max( MUC,DS ) ) ) )", "obj1": 0.9509433962264151, "obj2": 0.03962684513775597}, {"determining": "( ( FirstVNF_CPU + BR ) * ( Const / AMS ) )", "choosing": "( ( MUM - ( Min( ( ( MUR * DS ) + RMSe ) ,RRSe ) - ( ( ( MUM / MLU ) * ( RCSe + Min( MUC ,MUR ) ) ) * Min( ( RCSe * ( Max( MLU,DS ) / ( MUM - DS ) ) ) ,DS ) ) ) ) / ( Max( MLU,( RCSe - MLU ) ) * MUR ) )", "obj1": 0.1641509433962264, "obj2": 0.7186920960520989}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MUM ) ) ) / ( ( ( MUC / MUC ) / Min( Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) ) ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.6962264150943396, "obj2": 0.2363574764263799}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( FirstVNF_CPU,ACS ) ) )", "choosing": "Min( ( RCSe - ( ( Max( Min( RRSe ,Min( RCSe ,RRSe ) ),( ( RMSe - RMSe ) - MUM ) ) / RRSe ) / RMSe ) ) ,Max( MUM,MLU ) )", "obj1": 0.28679245283018867, "obj2": 0.5776662351764416}, {"determining": "( ( AMS - ACS ) / FirstVNF_CPU_Server )", "choosing": "( ( MUR / CS ) - ( Min( RRSe ,MUM ) * Min( RMSe ,( Min( ( ( MUM / MUC ) / ( ( MUM * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) ) )", "obj1": 0.49433962264150944, "obj2": 0.3872476395434563}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( Min( CRS ,ARS ) - ( FirstVNF_RAM_Server - BR ) ) ),( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( RMSe - Min( RRSe ,MUM ) ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.3905660377358491, "obj2": 0.46696943763633963}, {"determining": "Max( Max( PN,( RRS / Min( FirstVNF_RAM ,Const ) ) ),( MDR - FirstVNF_RAM ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),MLU ) ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.6566037735849056, "obj2": 0.2599416694967378}, {"determining": "Max( Min( Min( ARS ,Max( FirstVNF_RAM_Server,AMS ) ) ,FirstVNF_CPU ),Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( ( ( ( ( ( RCSe / Min( RCSe ,RMSe ) ) * MUC ) + MUR ) - RRSe ) - ( RCSe * MUR ) ) + ( ( MLU - MLU ) + ( MLU * DS ) ) ) )", "obj1": 0.15849056603773584, "obj2": 0.7357875614679673}, {"determining": "( ( ( ( ( FirstVNF_CPU + DDR ) + ( ( ACS + MRS ) - PN ) ) - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,Min( FirstVNF_RAM ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( Max( DS,CS ) * Max( ( Min( Min( ( ( MUR - MLU ) / Min( RRSe ,DS ) ) ,MUM ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) )", "obj1": 0.9056603773584906, "obj2": 0.09286245237806358}, {"determining": "( Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),( BR - BR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( Max( ( Min( DS ,MUC ) + ( MUR + DS ) ),( ( RRSe * MLU ) * ( RRSe - MLU ) ) ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) ) - ( RCSe * Min( RMSe ,( Min( ( ( MUM / MUC ) / ( ( MUM * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) ) )", "obj1": 0.5754716981132075, "obj2": 0.32592558278887457}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( Min( CRS ,ARS ) - ( FirstVNF_RAM_Server - BR ) ) ),( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( CS - RCSe ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.35471698113207545, "obj2": 0.516073686842115}, {"determining": "Min( ( FirstVNF_CPU + Max( AMS,FirstVNF_Mem ) ) ,( FirstVNF_RAM - ACS ) )", "choosing": "( ( MUR - ( ( MLU / MUR ) * MUR ) ) / Max( CS,( CS / RRSe ) ) )", "obj1": 0.9264150943396227, "obj2": 0.061973690680064746}, {"determining": "Max( ( ( CRS - BR ) - FirstVNF_CPU ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( ( MUM * MLU ) - Max( DS,CS ) ) * ( DS + MLU ) )", "obj1": 0.43018867924528303, "obj2": 0.4661962766879987}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}, {"determining": "Max( MRS,( Max( ( RRS / FirstVNF_Mem ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( CS - RCSe ) + Max( ( Max( CS,RCSe ) / MUR ),( ( MLU / MUR ) / ( MUM + ( CS - RMSe ) ) ) ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.2962264150943396, "obj2": 0.5585028579555528}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) ) ) ) * ( Const + ( ( BR / FirstVNF_RAM_Server ) - BR ) ) )", "choosing": "( ( ( DS / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( RMSe - ( RCSe - ( Min( RMSe ,MUC ) + MUC ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.4509433962264151, "obj2": 0.4429545494154522}, {"determining": "Min( ( FirstVNF_CPU + Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( CRS,MRS ) ),FirstVNF_Mem ) ) ,( FirstVNF_RAM - ACS ) )", "choosing": "( ( MUR - ( ( MLU / MUR ) * MUR ) ) / Max( CS,( CS / ( CS + MUR ) ) ) )", "obj1": 0.9188679245283019, "obj2": 0.07037792436051273}, {"determining": "Max( Max( ( ACS + Min( ACS ,FirstVNF_CPU_Server ) ),BR ),( ( FirstVNF_CPU / ACS ) * Const ) )", "choosing": "( Min( MLU ,Max( MUC,( RRSe / MLU ) ) ) + Max( MLU,( MUM - RMSe ) ) )", "obj1": 0.7433962264150943, "obj2": 0.1879614575090804}, {"determining": "( ( ( Max( Max( CRS,FirstVNF_RAM_Server ),( CRS * ARS ) ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( ( ( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( MRS - Max( BR,CRS ) ) ) ) - FirstVNF_CPU ) + BR ) ) * ( RRS / ACS ) )", "choosing": "Min( Max( Max( ( ( MUM / Max( MUR,RCSe ) ) + DS ),MUC ),RCSe ) ,( ( DS * CS ) / ( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( MLU / MUC ) ) ) )", "obj1": 0.6037735849056604, "obj2": 0.302753988575483}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( DS + RRSe ) )", "obj1": 0.8924528301886793, "obj2": 0.10884045909444658}, {"determining": "( Max( ACS,Const ) / ( ( FirstVNF_Mem_Server + ARS ) / ( Const * MDR ) ) )", "choosing": "( ( MUR / ( ( ( ( MLU / MLU ) / MUM ) * ( Min( RMSe ,( RMSe - ( CS - RMSe ) ) ) - Min( Min( MUR ,MUM ) ,Min( MUM ,CS ) ) ) ) / RRSe ) ) - ( RCSe * Min( RMSe ,MLU ) ) )", "obj1": 0.37924528301886795, "obj2": 0.49519833035411526}, {"determining": "( ( Min( ACS ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( ( RRS / FirstVNF_Mem ) * Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) ) ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( MUM / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( ( MLU - MUC ) + DS ) ),RRSe ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.30770318507264394}, {"determining": "( ( PN / FirstVNF_CPU ) * Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( MUM / DS ) - ( RCSe / RMSe ) )", "obj1": 0.10566037735849057, "obj2": 0.7835864402212401}, {"determining": "( Max( Const,( BR - BR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUR / CS ) - ( RCSe * Min( RMSe ,( Min( ( ( MUM / MUC ) / ( ( MUM * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) ) )", "obj1": 0.4320754716981132, "obj2": 0.44450228317771845}, {"determining": "( ( Min( ARS ,RRS ) * ( FirstVNF_CPU_Server + Const ) ) + ( ( FirstVNF_CPU_Server / ACS ) - Min( ACS ,BR ) ) )", "choosing": "( ( Max( MUR,RRSe ) * MUC ) + Min( ( Min( DS ,MUC ) + ( MUR + DS ) ) ,Min( RRSe ,DS ) ) )", "obj1": 0.5584905660377358, "obj2": 0.3616228308683037}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( AMS - MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( ( CS / Max( MUM,( ( ( RMSe - MUR ) * RMSe ) * Min( MUM ,( MUM / CS ) ) ) ) ) + RRSe ) ) )", "obj1": 0.37169811320754714, "obj2": 0.4985723275626436}, {"determining": "Min( Max( BR,( ( ACS - FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) ,CRS )", "choosing": "( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( ( RRSe / ( Min( ( RRSe * MUR ) ,( ( MUM * ( RRSe / CS ) ) - DS ) ) + MLU ) ) / MUC ) )", "obj1": 0.5169811320754717, "obj2": 0.38091141104606036}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( FirstVNF_CPU,ACS ) ) )", "choosing": "Min( ( RCSe - ( ( Max( Min( RRSe ,Min( RCSe ,RRSe ) ),( ( RMSe - RMSe ) - MUM ) ) / RRSe ) / RMSe ) ) ,Max( MUM,MLU ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "Max( Max( ( ACS + Min( ACS ,DDR ) ),BR ),( MDR * ACS ) )", "choosing": "( Min( MLU ,DS ) + Max( MLU,RMSe ) )", "obj1": 0.7603773584905661, "obj2": 0.17786847795328634}, {"determining": "( ( Max( Max( ( BR - RRS ),( ( ACS - DDR ) - MRS ) ),ACS ) + FirstVNF_CPU_Server ) - ( ( Max( Const,Const ) * AMS ) / ( FirstVNF_RAM * DDR ) ) )", "choosing": "Min( Max( MUR,MUR ) ,( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( RCSe,Min( RRSe ,( CS + ( RMSe + ( RMSe + MLU ) ) ) ) ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.879245283018868, "obj2": 0.1129002630743953}, {"determining": "( ( Const * Min( AMS ,Min( Min( Max( Const,FirstVNF_RAM ) ,Max( AMS,( ARS + ( BR * FirstVNF_CPU ) ) ) ) ,Const ) ) ) / Max( RRS,FirstVNF_Mem ) )", "choosing": "( Min( Min( ( ( DS + MUR ) + ( MUC + RRSe ) ) ,( Max( Max( Max( Max( RCSe,RRSe ),DS ),RMSe ),( RCSe + RMSe ) ) + RCSe ) ) ,MUR ) - MUM )", "obj1": 0.33584905660377357, "obj2": 0.5262382140953541}, {"determining": "Max( Min( Max( AMS,FirstVNF_CPU ) ,Min( FirstVNF_RAM ,Min( ( FirstVNF_CPU / PN ) ,FirstVNF_CPU_Server ) ) ),Min( FirstVNF_RAM ,BR ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * CS ) ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * Max( ( RRSe + MUC ),RMSe ) )", "obj1": 0.32075471698113206, "obj2": 0.5440869777922479}, {"determining": "( ( ( Max( RRS,FirstVNF_CPU ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM / Const ) ) * FirstVNF_RAM ) / ( ( ( Min( ( AMS / PN ) ,CRS ) * PN ) + PN ) / Const ) ) + ( ( BR / FirstVNF_RAM_Server ) - BR ) ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Max( CS,( RMSe - ( RRSe - ( ( ( Max( MLU,MLU ) * RMSe ) * ( CS / Max( DS,MUR ) ) ) * ( Max( Max( RCSe,CS ),( RRSe * CS ) ) * Max( RMSe,( RCSe + DS ) ) ) ) ) ) ) )", "obj1": 0.9622641509433962, "obj2": 0.008150963360287642}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( PN + ACS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,Min( DS ,CS ) )", "obj1": 0.769811320754717, "obj2": 0.1650902046254109}, {"determining": "Min( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - DDR ) + ( Max( Min( ( ( AMS + ACS ) * ( ACS * FirstVNF_RAM ) ) ,( ( Const - FirstVNF_RAM ) + ( ACS * ARS ) ) ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) ) * ( MRS - Max( BR,AMS ) ) ) ) ) ,CRS )", "choosing": "( ( DS * ( ( RMSe + Max( Max( ( ( MUC / DS ) + DS ),MUC ),RCSe ) ) - ( CS / RCSe ) ) ) / Max( RCSe,CS ) )", "obj1": 0.5339622641509434, "obj2": 0.3707799104885795}, {"determining": "( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - ( MLU / MUC ) ) ) )", "obj1": 0.5660377358490566, "obj2": 0.34369614156683675}, {"determining": "Max( MRS,( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( Max( ARS,AMS ) - ( BR + AMS ) ) ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + Min( Min( CS ,MUC ) ,DS ) )", "obj1": 0.5075471698113208, "obj2": 0.38448775876288593}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,CRS )", "choosing": "( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( MLU / ( MUM / RMSe ) ) )", "obj1": 0.5452830188679245, "obj2": 0.3635216900763196}, {"determining": "Min( Max( ARS,ARS ) ,( ( BR - FirstVNF_RAM ) + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * Max( ( ( Max( MLU,CS ) * MUR ) * MUR ),Max( ( ( RRSe * MLU ) * ( RRSe - MLU ) ),( ( RCSe - RMSe ) + ( MUR / RMSe ) ) ) ) ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7528301886792453, "obj2": 0.18564935939169389}, {"determining": "( ( Max( Const,( DDR + FirstVNF_RAM_Server ) ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MUC - MUM ) + RMSe ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - ( MLU / MUC ) ) ) )", "obj1": 0.5660377358490566, "obj2": 0.34369614156683675}, {"determining": "Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( PN / AMS ) )", "choosing": "Min( Min( RRSe ,( Max( DS,CS ) - Min( RRSe ,MUM ) ) ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( MUR / Min( MLU ,RCSe ) ) ,( MUR - ( CS / RCSe ) ) ) ) ) - ( MLU + Min( RRSe ,CS ) ) ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5523333406634632}, {"determining": "( ( Const * Min( AMS ,Min( Min( Max( Const,FirstVNF_RAM ) ,Max( AMS,( ARS + ( BR * FirstVNF_CPU ) ) ) ) ,Const ) ) ) / Max( RRS,FirstVNF_Mem ) )", "choosing": "( Min( Min( ( ( DS + MUR ) + ( MUC + RRSe ) ) ,( Max( Max( Max( Max( RCSe,RRSe ),DS ),RMSe ),( RCSe + RMSe ) ) + RCSe ) ) ,MUR ) - MUM )", "obj1": 0.33584905660377357, "obj2": 0.5262382140953541}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),Min( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) ,BR ) )", "choosing": "( ( RCSe - ( ( MLU + ( Max( MLU,RCSe ) / MUR ) ) * ( RCSe + MUR ) ) ) * ( DS + MLU ) )", "obj1": 0.16037735849056603, "obj2": 0.7357497427109285}, {"determining": "Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / CRS ) ) )", "choosing": "Max( ( MUC / DS ),( Min( MUR ,RMSe ) + ( MUR * MUM ) ) )", "obj1": 0.08679245283018867, "obj2": 0.7919941577803645}, {"determining": "( ( CRS - MRS ) / ( ( ( FirstVNF_Mem * DDR ) - AMS ) - Min( DDR ,RRS ) ) )", "choosing": "( ( ( Max( RCSe,DS ) * ( MUM + MLU ) ) * Max( Max( DS,MUC ),RCSe ) ) + MUR )", "obj1": 0.969811320754717, "obj2": 0.006730278872373563}, {"determining": "( ( Min( ACS ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( Min( Max( MRS,FirstVNF_Mem ) ,Min( FirstVNF_RAM ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ARS ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( RCSe / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) )", "obj1": 0.539622641509434, "obj2": 0.37059688599618174}, {"determining": "( ( Max( Max( ( BR - RRS ),( ( MDR + BR ) + ( CRS * RRS ) ) ),ACS ) + FirstVNF_CPU_Server ) - ( ACS / ( FirstVNF_RAM * DDR ) ) )", "choosing": "Min( Max( ( MUM / Min( CS ,MUM ) ),( MUC - MUR ) ) ,( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.879245283018868, "obj2": 0.1129002630743953}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / ( MLU / MUC ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * ( RCSe + DS ) ) ),( Min( RMSe ,Max( Min( MLU ,CS ),( RMSe / MUC ) ) ) + MUC ) ) )", "obj1": 0.9905660377358491, "obj2": 0.0022054446298258278}, {"determining": "Max( AMS,Min( FirstVNF_RAM ,BR ) )", "choosing": "( ( MLU - ( Max( DS,CS ) * Max( ( Min( Min( ( MUR / MLU ) ,MUM ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * Max( ( RRSe + Max( CS,( CS / RRSe ) ) ),RMSe ) )", "obj1": 0.31886792452830187, "obj2": 0.5453494941155721}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * MRS )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / ( RMSe - Min( RRSe ,MUM ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9830188679245283, "obj2": 0.003974755771779307}, {"determining": "( ( ( Max( RRS,FirstVNF_CPU ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM / Const ) ) * FirstVNF_RAM ) / ( ( ( Min( ( AMS / PN ) ,CRS ) * PN ) + PN ) / Const ) ) + ( ( BR / FirstVNF_RAM_Server ) - BR ) ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Max( CS,( RMSe - ( RRSe - ( ( ( Max( MLU,MLU ) * RMSe ) * ( CS / Max( DS,MUR ) ) ) * ( Max( Max( RCSe,CS ),( RRSe * CS ) ) * Max( RMSe,( RCSe + DS ) ) ) ) ) ) ) )", "obj1": 0.9622641509433962, "obj2": 0.008150963360287642}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( Min( RRSe ,( Max( DS,CS ) - Min( RRSe ,MUM ) ) ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( MUR - ( CS / RCSe ) ) ) ) ) - ( MLU + Min( RRSe ,CS ) ) ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5523333406634632}, {"determining": "( ( MDR / FirstVNF_Mem ) * ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( RRSe * RRSe ) )", "obj1": 0.9830188679245283, "obj2": 0.003974755771779307}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( BR * ( MRS + ( MDR - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( Const + FirstVNF_CPU ) ),( Max( MRS,ACS ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( MLU + Min( Max( ( MUR - ( RRSe / RRSe ) ),RMSe ) ,( Max( MUM,( MUR - RMSe ) ) / Max( MUM,MUC ) ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.9660377358490566, "obj2": 0.007455814455875285}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( BR * ARS ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( RMSe - ( RCSe - ( Min( RMSe ,Max( Min( MLU ,CS ),( CS / MUC ) ) ) + MUC ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( Const + ( ( ( Max( Const,( DDR + FirstVNF_RAM_Server ) ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) - BR ) ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( RMSe - ( RCSe - ( MUC - MUM ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.9641509433962264, "obj2": 0.0077355139624761225}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / ( ( ( CRS - MRS ) + DDR ) / FirstVNF_RAM ) ) / Max( ACS,( BR - BR ) ) ) ) ,Min( DDR ,ACS ) )", "choosing": "Min( ( ( RMSe / MUR ) + DS ) ,Min( ( RRSe / MUR ) ,( Min( ( ( MUM / MUC ) / ( ( RMSe * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * PN ) * CRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( CS * RRSe ) ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_CPU ) - Min( Const ,( ( MRS + FirstVNF_CPU_Server ) - ( MDR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + MUC ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - ( BR + MRS ) )", "choosing": "( ( MUC + ( DS / MUM ) ) * ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( BR - Min( ( ( FirstVNF_RAM_Server * DDR ) / CRS ) ,AMS ) ),( Const - MRS ) ),ACS ) + FirstVNF_CPU_Server ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( MUR,MUR ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + Min( Max( MRS,MDR ) ,( ( ( FirstVNF_RAM_Server / AMS ) + FirstVNF_RAM ) + MDR ) ) ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( ACS * FirstVNF_Mem_Server ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + ( ( RRSe - RCSe ) + ( MUR - Min( ( RMSe * RMSe ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU_Server ) ,DDR ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( ( CS + ( ( ( CS + ( MUM + RRSe ) ) * ( MUM * ( DS * RMSe ) ) ) - ( RMSe - MLU ) ) ) - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( CRS,MRS ) ) ) ,Min( DDR ,ACS ) )", "choosing": "Min( ( ( RMSe / MUR ) + DS ) ,( Min( Min( Max( MUM,MLU ) ,( ( CS + MUR ) - ( MUR - MLU ) ) ) ,( ( MUR * Max( DS,Min( ( RMSe + RRSe ) ,RCSe ) ) ) - ( ( RRSe / RMSe ) + RMSe ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,CRS ) + ( Max( ( RRS * MRS ),( ARS - FirstVNF_Mem_Server ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RRSe - MUM ) - ( CS - Min( Max( Max( Max( RRSe,DS ),CS ),DS ) ,CS ) ) ) * RRSe ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( MDR / Min( FirstVNF_CPU ,Min( Max( ACS,DDR ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,( ( Min( MUC ,MLU ) + ( ( MUR * MUC ) - MUR ) ) + MLU ) ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( ( ( Const + ( ACS + ARS ) ) - ( PN - DDR ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( ( Max( MUR,RCSe ) * Max( RMSe,RCSe ) ) ,( ( RMSe - MLU ) - Max( MLU,RRSe ) ) ) + ( Max( ( MUM / MLU ),Min( CS ,DS ) ) / Max( Min( RRSe ,MUM ),Max( RRSe,MUC ) ) ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_CPU ) - Max( Const,Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUC,Min( ( Max( ( DS * MUC ),( RMSe + MUR ) ) + ( ( MUM + RCSe ) * ( RRSe * MLU ) ) ) ,( ( ( MLU - MLU ) * Max( MLU,RRSe ) ) * Max( ( RMSe - MUC ),( DS / MUR ) ) ) ) ) - ( Min( RMSe ,MUR ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / BR ),Const ) ,Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM_Server ) ) - ( Const / Const ) )", "choosing": "( ( CS / ( Max( Min( MUC ,MUC ),( DS * MUM ) ) * Min( Max( RRSe,MLU ) ,( MUR / MUR ) ) ) ) / Min( DS ,( RCSe * Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server * ( DDR - BR ) ) ) ,( FirstVNF_Mem_Server * DDR ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + Max( MUC,( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + Max( AMS,FirstVNF_Mem ) ) ,( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Min( PN ,DDR ) ) ) )", "choosing": "( ( MUR - ( ( ( RMSe - CS ) / MUR ) * MUR ) ) / Max( CS,( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Min( AMS ,ARS ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( CS,( ( MUC - MUC ) / MUR ) ) / MUR ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / Const ) + ( Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( Min( FirstVNF_Mem ,Max( Const,BR ) ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) ) / Min( Const ,Min( Min( ARS ,( Const + ( ( ARS + ARS ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ,DDR ) ) ) )", "choosing": "( Max( MLU,RCSe ) / ( RMSe - ( RCSe / ( ( MUR * RRSe ) - ( DS + ( Max( CS,MUM ) - ( ( MUM * RCSe ) / Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,( ( RRSe * CS ) * Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( MDR + BR ) + ( CRS * RRS ) ) ) )", "choosing": "Max( ( MUM / Min( CS ,MUM ) ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Const ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / RCSe ) / Min( DS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( ( FirstVNF_Mem / DDR ) + ( ACS + FirstVNF_RAM ) ) - ( ( Const - MRS ) * ( ACS / FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( CRS ,ACS ),( FirstVNF_CPU_Server - Min( ( ( MRS + BR ) * Const ) ,DDR ) ) ) / ( ( ( AMS - FirstVNF_Mem ) - Min( ACS ,FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( ( MUM + ( ( MUM + ( ( RCSe * MUM ) - MLU ) ) - ( MUM * MUM ) ) ) - ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) - Max( ( DDR + FirstVNF_RAM ),Min( FirstVNF_RAM ,Const ) ) )", "choosing": "( ( ( ( RCSe / MLU ) - MUR ) * ( DS + MLU ) ) * ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) ) ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,( MLU * Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( RRS * CRS ) - ( Min( ACS ,FirstVNF_CPU_Server ) * ( ( MDR + BR ) + ( CRS * RRS ) ) ) )", "choosing": "Max( ( MUM / Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,( Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ,( CRS - Const ) ) ) * ACS ) ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( ( BR - BR ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUR - ( CS - Min( Max( Max( Max( MUR,DS ),CS ),MUC ) ,CS ) ) ) * ( ( RMSe - ( ( ( ( MUC / RCSe ) + DS ) * ( ( DS + RCSe ) * ( RRSe / MUM ) ) ) * MUR ) ) - Min( MUR ,MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( ( Min( ( BR + ARS ) ,AMS ) - Min( CRS ,FirstVNF_Mem ) ) ,CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ),( ( Const / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( MLU * DS ) )", "obj1": 0.0830188679245283, "obj2": 0.7922595871699566}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM - Max( Const,Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,Const ) ) ) )", "choosing": "( ( MLU + MUC ) * ( ( RCSe - MLU ) - Max( Min( ( MUM * CS ) ,( MUC * DS ) ),CS ) ) )", "obj1": 0.2188679245283019, "obj2": 0.6379438896911946}, {"determining": "Max( Min( Min( ARS ,Max( FirstVNF_RAM_Server,AMS ) ) ,FirstVNF_CPU ),Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( ( ( ( ( ( RCSe / Min( RCSe ,RMSe ) ) * MUC ) + MUR ) - RRSe ) - ( RCSe * MUR ) ) + ( ( MLU - MLU ) + ( MLU * DS ) ) ) )", "obj1": 0.15849056603773584, "obj2": 0.7357875614679673}, {"determining": "( ( Max( ( CRS - CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem ) * ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( MLU + RRSe ) * ( RCSe + MUR ) ) / ( MUM * RCSe ) )", "obj1": 0.8433962264150944, "obj2": 0.11682413460891657}, {"determining": "( ( ( MDR / ARS ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( ( ( ( MLU / MUR ) / ( MUM + ( CS - RMSe ) ) ) * MLU ) / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "Max( Const,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MLU ) - Max( DS,CS ) ) * ( DS + ( DS * RMSe ) ) )", "obj1": 0.10943396226415095, "obj2": 0.7530904301215544}, {"determining": "Min( Max( FirstVNF_RAM_Server,( Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( Min( FirstVNF_Mem ,Max( Const,BR ) ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) ) / ACS ) ) ,CRS )", "choosing": "( ( DS * ( RCSe - ( CS / RCSe ) ) ) / ( MLU / MUC ) )", "obj1": 0.4641509433962264, "obj2": 0.4231632132872052}, {"determining": "( Max( ACS,Const ) / ( ( ( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( MRS - Max( BR,CRS ) ) ) ) - FirstVNF_CPU ) / ( Const * MDR ) ) )", "choosing": "( ( MUR / CS ) - ( RCSe * Min( ( ( RMSe + DS ) - ( CS / RCSe ) ) ,MLU ) ) )", "obj1": 0.6132075471698113, "obj2": 0.2531809868505431}, {"determining": "Min( ( Max( MRS,ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( BR * ARS ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( MUR - ( CS / RCSe ) ) ) ) ) - CS ) ) )", "obj1": 0.7094339622641509, "obj2": 0.1969479422300271}, {"determining": "Max( Const,Min( Max( Min( Max( AMS,FirstVNF_CPU ) ,FirstVNF_Mem ),Min( Min( AMS ,FirstVNF_RAM ) ,BR ) ) ,( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( ( RCSe - MLU ) - ( MUM / ( Max( Max( RCSe,MUR ),( DS / RMSe ) ) / CS ) ) ) * ( ( RRSe + ( MLU * ( RMSe + MUC ) ) ) + MUC ) )", "obj1": 0.25660377358490566, "obj2": 0.6071292797019415}, {"determining": "Max( FirstVNF_CPU_Server,Min( FirstVNF_RAM ,BR ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * CS ) ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * ( ( MUM / RCSe ) / Min( DS ,RCSe ) ) )", "obj1": 0.17547169811320754, "obj2": 0.6645061599466487}, {"determining": "Max( ( ( ( FirstVNF_Mem * DDR ) - AMS ) - Min( DDR ,RRS ) ),Min( FirstVNF_RAM ,BR ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * MUM ) ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * ( ( MUM / RCSe ) / Min( DS ,RCSe ) ) )", "obj1": 0.16037735849056603, "obj2": 0.6753272419308193}, {"determining": "( ( ( Max( CRS,PN ) / ( MDR * BR ) ) - Max( ( ARS - FirstVNF_Mem_Server ),Min( AMS ,PN ) ) ) + ( Min( Max( FirstVNF_CPU,ARS ) ,( MDR * FirstVNF_Mem_Server ) ) - ( ( AMS + ACS ) / Min( MRS ,DDR ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( RCSe ,MUR ) ) ,( Max( ( RRSe * RRSe ),Min( MUC ,DS ) ) / ( ( DS + RRSe ) - Max( MUC,DS ) ) ) )", "obj1": 0.9509433962264151, "obj2": 0.03962684513775597}, {"determining": "( ( AMS - ACS ) / FirstVNF_CPU_Server )", "choosing": "( ( MUR / CS ) - ( Min( RRSe ,MUM ) * Min( RMSe ,( Min( ( ( MUM / MUC ) / ( ( MUM * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) ) )", "obj1": 0.49433962264150944, "obj2": 0.3872476395434563}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( Min( CRS ,ARS ) - ( FirstVNF_RAM_Server - BR ) ) ),( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( RMSe - Min( RRSe ,MUM ) ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.3905660377358491, "obj2": 0.46696943763633963}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MUM ) ) ) / ( ( ( MUC / MUC ) / Min( Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) ) ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.6962264150943396, "obj2": 0.2363574764263799}, {"determining": "Min( ( FirstVNF_CPU + Max( ( Const + DDR ),FirstVNF_Mem ) ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - ( ( ( CS * MLU ) * CS ) * MUR ) ) / Max( CS,( MUR * Max( DS,Min( ( RMSe + RRSe ) ,RCSe ) ) ) ) )", "obj1": 0.9037735849056604, "obj2": 0.08152680569027597}, {"determining": "( Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),( BR - BR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( Max( ( Min( DS ,MUC ) + ( MUR + DS ) ),( ( RRSe * MLU ) * ( RRSe - MLU ) ) ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) ) - ( RCSe * Min( RMSe ,( Min( ( ( MUM / MUC ) / ( ( MUM * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) ) )", "obj1": 0.5754716981132075, "obj2": 0.32592558278887457}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( Min( CRS ,ARS ) - ( FirstVNF_RAM_Server - BR ) ) ),( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( CS - RCSe ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.35471698113207545, "obj2": 0.516073686842115}, {"determining": "Max( ( ( CRS - BR ) - FirstVNF_CPU ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( ( MUM * MLU ) - Max( DS,CS ) ) * ( DS + MLU ) )", "obj1": 0.43018867924528303, "obj2": 0.4661962766879987}, {"determining": "Min( ( FirstVNF_CPU + Max( AMS,FirstVNF_Mem ) ) ,( FirstVNF_RAM - ACS ) )", "choosing": "( ( MUR - ( ( MLU / MUR ) * MUR ) ) / Max( CS,( CS / RRSe ) ) )", "obj1": 0.9264150943396227, "obj2": 0.061973690680064746}, {"determining": "( ( Min( ACS ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( ARS * Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) ) ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( ( MLU - MUC ) + DS ) ),RRSe ) + ( RMSe / ( RMSe - Min( Min( ( RRSe * MLU ) ,MUC ) ,DS ) ) ) )", "obj1": 0.6094339622641509, "obj2": 0.2851004322122119}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( FirstVNF_CPU,ACS ) ) )", "choosing": "Min( ( RCSe - ( ( Max( Min( RRSe ,Min( RCSe ,RRSe ) ),( ( RMSe - RMSe ) - MUM ) ) / RRSe ) / RMSe ) ) ,Max( MUM,MLU ) )", "obj1": 0.28679245283018867, "obj2": 0.5776662351764416}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( ( ( Min( MRS ,MRS ) - ( MDR - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * ( FirstVNF_RAM_Server - BR ) ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( ( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / ( RMSe - Min( RRSe ,RCSe ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( ( CS - MUR ) - ( CS / RCSe ) ) ) ) ) - ( ( ( ( DS * MLU ) - Max( ( MUC / RRSe ),Max( RRSe,MUR ) ) ) - MUC ) + Min( RRSe ,CS ) ) ) ) )", "obj1": 0.2641509433962264, "obj2": 0.5878366394206377}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( DS + RRSe ) )", "obj1": 0.8924528301886793, "obj2": 0.10884045909444658}, {"determining": "Max( MRS,( Max( ( RRS / FirstVNF_Mem ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( CS - RCSe ) + Max( ( Max( CS,RCSe ) / MUR ),( ( MLU / MUR ) / ( MUM + ( CS - RMSe ) ) ) ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.2962264150943396, "obj2": 0.5585028579555528}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) ) ) ) * ( Const + ( ( BR / FirstVNF_RAM_Server ) - BR ) ) )", "choosing": "( ( ( DS / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( RMSe - ( RCSe - ( Min( RMSe ,MUC ) + MUC ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.4509433962264151, "obj2": 0.4429545494154522}, {"determining": "Max( Max( PN,Min( Max( ( FirstVNF_CPU_Server / BR ),Const ) ,Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( ( CS / ( Max( Min( MUC ,MUC ),( DS * MUM ) ) * Min( Max( RRSe,MLU ) ,( MUR / MUR ) ) ) ) / Min( DS ,( RCSe * Max( MLU,MUC ) ) ) ) ),( ( RMSe + CS ) / ( CS * MUM ) ) ) / ( ( ( MUC / MUC ) / Min( Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) ) ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.7433962264150943, "obj2": 0.1863555182706255}, {"determining": "( Max( ACS,Const ) / ( ( FirstVNF_Mem_Server + ARS ) / ( Const * MDR ) ) )", "choosing": "( ( MUR / ( ( ( ( MLU / MLU ) / MUM ) * ( Min( RMSe ,( RMSe - ( CS - RMSe ) ) ) - Min( Min( MUR ,MUM ) ,Min( MUM ,CS ) ) ) ) / RRSe ) ) - ( RCSe * Min( RMSe ,MLU ) ) )", "obj1": 0.37924528301886795, "obj2": 0.49519833035411526}, {"determining": "( ( Min( ACS ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( ( RRS / FirstVNF_Mem ) * Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) ) ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( MUM / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( ( MLU - MUC ) + DS ) ),RRSe ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.30770318507264394}, {"determining": "( ( PN / FirstVNF_CPU ) * Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( MUM / DS ) - ( RCSe / RMSe ) )", "obj1": 0.10566037735849057, "obj2": 0.7835864402212401}, {"determining": "( Max( Const,( BR - BR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUR / CS ) - ( RCSe * Min( RMSe ,( Min( ( ( MUM / MUC ) / ( ( MUM * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) ) )", "obj1": 0.4320754716981132, "obj2": 0.44450228317771845}, {"determining": "Min( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) + ACS ) ,Const ) + Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( CRS,MRS ) ),FirstVNF_Mem ) ) ,( FirstVNF_RAM - ACS ) )", "choosing": "( ( MUR - ( ( MLU / MUR ) * MUR ) ) / Max( CS,( CS / ( CS + DS ) ) ) )", "obj1": 0.9188679245283019, "obj2": 0.06988285302697034}, {"determining": "Min( Max( BR,( ( ACS - FirstVNF_CPU_Server ) + ( RRS - FirstVNF_CPU_Server ) ) ) ,CRS )", "choosing": "( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( Min( RMSe ,MUC ) + ( MUR - Min( RCSe ,MLU ) ) ) )", "obj1": 0.5566037735849056, "obj2": 0.35146257672656056}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( AMS - MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( ( CS / Max( MUM,( ( ( RMSe - MUR ) * RMSe ) * Min( MUM ,( MUM / CS ) ) ) ) ) + RRSe ) ) )", "obj1": 0.37169811320754714, "obj2": 0.4985723275626436}, {"determining": "( ( Min( ACS ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( Const,( BR - BR ) ) ) ) ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( ( MLU - MUC ) + DS ) ),( MUR / CS ) ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) )", "obj1": 0.5113207547169811, "obj2": 0.3754014953100495}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( FirstVNF_CPU,ACS ) ) )", "choosing": "Min( ( RCSe - ( ( Max( Min( RRSe ,Min( RCSe ,RRSe ) ),( ( RMSe - RMSe ) - MUM ) ) / RRSe ) / RMSe ) ) ,Max( MUM,MLU ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "( ( Max( Max( ( BR - RRS ),Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) ) ),ACS ) + FirstVNF_CPU_Server ) - ( ACS / ( FirstVNF_RAM * DDR ) ) )", "choosing": "Min( ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) ,( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.8754716981132076, "obj2": 0.11622286010188843}, {"determining": "( ( Const * Min( AMS ,Min( Min( Max( Const,FirstVNF_RAM ) ,Max( AMS,( ARS + ( BR * FirstVNF_CPU ) ) ) ) ,Const ) ) ) / Max( RRS,FirstVNF_Mem ) )", "choosing": "( Min( Min( ( ( DS + MUR ) + ( MUC + RRSe ) ) ,( Max( Max( Max( Max( RCSe,RRSe ),DS ),RMSe ),( RCSe + RMSe ) ) + RCSe ) ) ,MUR ) - MUM )", "obj1": 0.33584905660377357, "obj2": 0.5262382140953541}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,CRS )", "choosing": "( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( MLU / ( MUM / RMSe ) ) )", "obj1": 0.5452830188679245, "obj2": 0.3635216900763196}, {"determining": "Max( Min( Max( AMS,FirstVNF_CPU ) ,Min( FirstVNF_RAM ,Min( ( FirstVNF_CPU / PN ) ,FirstVNF_CPU_Server ) ) ),Min( FirstVNF_RAM ,BR ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * CS ) ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * Max( ( RRSe + MUC ),RMSe ) )", "obj1": 0.32075471698113206, "obj2": 0.5440869777922479}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( MRS,( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( Max( ARS,AMS ) - ( BR + AMS ) ) ) ) ) ) )", "choosing": "( ( ( MLU / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( RMSe - ( RCSe - ( Min( RMSe ,MUC ) + MUC ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.9622641509433962, "obj2": 0.008150963360287642}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,( Max( ( RRS * MRS ),( ARS - FirstVNF_Mem_Server ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( MUR,RRSe ) )", "obj1": 0.690566037735849, "obj2": 0.2443609045892914}, {"determining": "Min( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - DDR ) + ( Max( Min( ( ( AMS + ACS ) * ( ACS * FirstVNF_RAM ) ) ,( ( Const - FirstVNF_RAM ) + ( ACS * ARS ) ) ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) ) * ( MRS - Max( BR,AMS ) ) ) ) ) ,CRS )", "choosing": "( ( DS * ( ( RMSe + Max( Max( ( ( MUC / DS ) + DS ),MUC ),RCSe ) ) - ( CS / RCSe ) ) ) / Max( RCSe,CS ) )", "obj1": 0.5339622641509434, "obj2": 0.3707799104885795}, {"determining": "( ( ( Max( Max( CRS,FirstVNF_RAM_Server ),( CRS * ARS ) ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( ( ( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( MRS - Max( BR,CRS ) ) ) ) - FirstVNF_CPU ) + BR ) ) * ( RRS / ACS ) )", "choosing": "Min( Max( Max( ( ( MUM / Max( MUR,RCSe ) ) + DS ),MUC ),RCSe ) ,( ( DS * CS ) / ( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( MLU / MUC ) ) ) )", "obj1": 0.6037735849056604, "obj2": 0.302753988575483}, {"determining": "( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - ( MLU / MUC ) ) ) )", "obj1": 0.5660377358490566, "obj2": 0.34369614156683675}, {"determining": "( ( Max( Const,( DDR + FirstVNF_RAM_Server ) ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MUC - MUM ) + RMSe ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( PN + ACS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,Min( DS ,CS ) )", "obj1": 0.769811320754717, "obj2": 0.1650902046254109}, {"determining": "Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( PN / AMS ) )", "choosing": "Min( Min( RRSe ,( Max( DS,CS ) - Min( RRSe ,MUM ) ) ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( MUR / Min( MLU ,RCSe ) ) ,( MUR - ( CS / RCSe ) ) ) ) ) - ( MLU + Min( RRSe ,CS ) ) ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5523333406634632}, {"determining": "( ( Const * Min( AMS ,Min( Min( Max( Const,FirstVNF_RAM ) ,Max( AMS,( ARS + ( BR * FirstVNF_CPU ) ) ) ) ,Const ) ) ) / Max( RRS,FirstVNF_Mem ) )", "choosing": "( Min( Min( ( ( DS + MUR ) + ( MUC + RRSe ) ) ,( Max( Max( Max( Max( RCSe,RRSe ),DS ),RMSe ),( RCSe + RMSe ) ) + RCSe ) ) ,MUR ) - MUM )", "obj1": 0.33584905660377357, "obj2": 0.5262382140953541}, {"determining": "Min( Max( ARS,ARS ) ,( ( BR - FirstVNF_RAM ) + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * Max( ( ( Max( MLU,CS ) * MUR ) * MUR ),Max( ( ( RRSe * MLU ) * ( RRSe - MLU ) ),( ( RCSe - RMSe ) + ( MUR / RMSe ) ) ) ) ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7528301886792453, "obj2": 0.18564935939169389}, {"determining": "Max( Max( ( ACS + Min( ACS ,DDR ) ),BR ),( MDR * ACS ) )", "choosing": "( Min( MLU ,DS ) + Max( MLU,RMSe ) )", "obj1": 0.7603773584905661, "obj2": 0.17786847795328634}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( Max( Const,( BR - BR ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,Min( RMSe ,( Min( ( ( MUM / MUC ) / ( ( MUM * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) ) ,Min( DS ,CS ) )", "obj1": 0.7641509433962265, "obj2": 0.17273478010920681}, {"determining": "Max( MRS,( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( Max( ARS,AMS ) - ( BR + AMS ) ) ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + Min( Min( CS ,MUC ) ,DS ) )", "obj1": 0.5075471698113208, "obj2": 0.38448775876288593}, {"determining": "Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / CRS ) ) )", "choosing": "Max( ( MUC / DS ),( Min( MUR ,RMSe ) + ( MUR * MUM ) ) )", "obj1": 0.08679245283018867, "obj2": 0.7919941577803645}, {"determining": "( ( Min( ACS ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( Min( Max( MRS,FirstVNF_Mem ) ,Min( FirstVNF_RAM ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ARS ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( RCSe / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) )", "obj1": 0.539622641509434, "obj2": 0.37059688599618174}, {"determining": "( ( CRS - MRS ) / ( ( ( FirstVNF_Mem * DDR ) - AMS ) - Min( DDR ,RRS ) ) )", "choosing": "( ( ( Max( RCSe,DS ) * ( MUM + MLU ) ) * Max( Max( DS,MUC ),RCSe ) ) + MUR )", "obj1": 0.969811320754717, "obj2": 0.006730278872373563}, {"determining": "( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - ( MLU / MUC ) ) ) )", "obj1": 0.5660377358490566, "obj2": 0.34369614156683675}, {"determining": "( ( Max( Max( Max( MRS,( Max( ( RRS / FirstVNF_Mem ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) ),( Const - MRS ) ),ACS ) + FirstVNF_CPU_Server ) - ( ACS / ( FirstVNF_RAM * DDR ) ) )", "choosing": "Min( Max( MUR,MUR ) ,( ( MUR + MLU ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.879245283018868, "obj2": 0.1129002630743953}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / ( MLU / MUC ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "Max( AMS,Min( FirstVNF_RAM ,BR ) )", "choosing": "( ( MLU - ( Max( DS,CS ) * Max( ( Min( Min( ( MUR / MLU ) ,MUM ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * Max( ( RRSe + Max( CS,( CS / RRSe ) ) ),RMSe ) )", "obj1": 0.31886792452830187, "obj2": 0.5453494941155721}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * MRS )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / ( RMSe - Min( RRSe ,MUM ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9830188679245283, "obj2": 0.003974755771779307}, {"determining": "( ( ( Max( RRS,FirstVNF_CPU ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM / Const ) ) * FirstVNF_RAM ) / ( ( ( Min( ( AMS / PN ) ,CRS ) * PN ) + PN ) / Const ) ) + ( ( BR / FirstVNF_RAM_Server ) - BR ) ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Max( CS,( RMSe - ( RRSe - ( ( ( Max( MLU,MLU ) * RMSe ) * ( CS / Max( DS,MUR ) ) ) * ( Max( Max( RCSe,CS ),( RRSe * CS ) ) * Max( RMSe,( RCSe + DS ) ) ) ) ) ) ) )", "obj1": 0.9622641509433962, "obj2": 0.008150963360287642}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "Min( ( Max( Min( Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server * ( DDR - BR ) ) ) ,( FirstVNF_Mem_Server * DDR ) ) ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( PN / AMS ) )", "choosing": "Min( Min( RRSe ,( Max( DS,CS ) - Min( RRSe ,MUM ) ) ) ,Min( DS ,( Max( MLU,( Max( DS,( ( MUR * CS ) * ( MLU - MUC ) ) ) * Min( ( MUR / Min( MLU ,RCSe ) ) ,( MUR - ( CS / RCSe ) ) ) ) ) - ( MLU + Min( RRSe ,CS ) ) ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5523333406634632}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( ( ( ( AMS - FirstVNF_Mem ) - Min( ACS ,FirstVNF_RAM_Server ) ) - ARS ),ARS ) ) ) ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,( MUM + ( ( MUM + MLU ) - ( MUM * MUM ) ) ) )", "obj1": 0.9905660377358491, "obj2": 0.0022054446298258278}, {"determining": "( ( Max( Max( ( BR - RRS ),( ( ACS - DDR ) - MRS ) ),ACS ) + FirstVNF_CPU_Server ) - ( ( Max( Const,Const ) * AMS ) / ( FirstVNF_RAM * DDR ) ) )", "choosing": "Min( Max( MUR,MUR ) ,( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( RCSe,Min( RRSe ,( CS + ( RMSe + ( RMSe + MLU ) ) ) ) ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.879245283018868, "obj2": 0.1129002630743953}, {"determining": "( ( CRS - MRS ) / ( ( ( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) * DDR ) - AMS ) - Min( DDR ,RRS ) ) )", "choosing": "( ( ( Max( RCSe,DS ) * ( MUM + MLU ) ) * Max( Max( DS,MUC ),RCSe ) ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.0030910362983060597}, {"determining": "Max( MRS,( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( ( ( ARS + ACS ) * ( Const + ( ( BR / FirstVNF_RAM_Server ) - BR ) ) ) + ( Max( ARS,AMS ) - ( BR + AMS ) ) ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + Min( Min( CS ,( RMSe - ( RCSe - ( Min( RMSe ,MUC ) + MUC ) ) ) ) ,DS ) )", "obj1": 0.5075471698113208, "obj2": 0.38448775876288593}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * ( RCSe + DS ) ) ),( Min( RMSe ,Max( Min( MLU ,CS ),( RMSe / MUC ) ) ) + MUC ) ) )", "obj1": 0.9905660377358491, "obj2": 0.0022054446298258278}, {"determining": "( ( MDR / FirstVNF_Mem ) * ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( RRSe * RRSe ) )", "obj1": 0.9830188679245283, "obj2": 0.003974755771779307}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( Const + ( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) ) ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) )", "obj1": 0.9849056603773585, "obj2": 0.0035541542204333564}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( Const + ( ( ( Max( Const,( DDR + FirstVNF_RAM_Server ) ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) - BR ) ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( RMSe - ( RCSe - ( MUC - MUM ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.9641509433962264, "obj2": 0.0077355139624761225}, {"determining": "( ( CRS - MRS ) / ( ( Min( FirstVNF_RAM ,BR ) - AMS ) - Min( DDR ,RRS ) ) )", "choosing": "( ( ( Max( RCSe,DS ) * ( MUM + MLU ) ) * ( ( MUR - RMSe ) * ( MUR * CS ) ) ) + MUR )", "obj1": 0.9679245283018868, "obj2": 0.007060946425910447}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - Min( ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),ACS ) / FirstVNF_CPU_Server ) ,Min( ARS ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( ( ( RRSe / ( MLU - RMSe ) ) + Max( MLU,MUR ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( ( CS - MUR ) - ( CS / RCSe ) ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9660377358490566, "obj2": 0.0072846325847856575}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( ( ( FirstVNF_RAM * PN ) * CRS ) * ( MRS + ( MDR - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( Const + FirstVNF_CPU ) ),( Max( MRS,ACS ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( MLU + Min( Max( ( MUR - ( RRSe / RRSe ) ),RMSe ) ,( MUC - MUR ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.9660377358490566, "obj2": 0.0072846325847856575}, {"determining": "( Min( ARS ,CRS ) + ( Max( ( RRS * MRS ),( ARS - FirstVNF_Mem_Server ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RRSe - MUM ) - ( CS - Min( Max( Max( Max( RRSe,DS ),CS ),DS ) ,CS ) ) ) * RRSe ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / ( ( ( CRS - MRS ) + DDR ) / FirstVNF_RAM ) ) / Max( ACS,( BR - BR ) ) ) ) ,Min( DDR ,ACS ) )", "choosing": "Min( ( ( RMSe / MUR ) + DS ) ,Min( ( RRSe / MUR ) ,( Min( ( ( MUM / MUC ) / ( ( RMSe * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * PN ) * CRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( CS * RRSe ) ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_CPU ) - Min( Const ,( ( MRS + FirstVNF_CPU_Server ) - ( MDR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + MUC ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - ( BR + MRS ) )", "choosing": "( ( MUC + ( DS / MUM ) ) * ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( BR - Min( ( ( FirstVNF_RAM_Server * DDR ) / CRS ) ,AMS ) ),( Const - MRS ) ),ACS ) + FirstVNF_CPU_Server ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( MUR,MUR ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + Min( Max( MRS,MDR ) ,( ( ( FirstVNF_RAM_Server / AMS ) + FirstVNF_RAM ) + MDR ) ) ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( ACS * FirstVNF_Mem_Server ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + ( ( RRSe - RCSe ) + ( MUR - Min( ( RMSe * RMSe ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU_Server ) ,DDR ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( ( CS + ( ( ( CS + ( MUM + RRSe ) ) * ( MUM * ( DS * RMSe ) ) ) - ( RMSe - MLU ) ) ) - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( CRS,MRS ) ) ) ,Min( DDR ,ACS ) )", "choosing": "Min( ( ( RMSe / MUR ) + DS ) ,( Min( Min( Max( MUM,MLU ) ,( ( CS + MUR ) - ( MUR - MLU ) ) ) ,( ( MUR * Max( DS,Min( ( RMSe + RRSe ) ,RCSe ) ) ) - ( ( RRSe / RMSe ) + RMSe ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,CRS ) + ( Max( ( RRS * MRS ),( ARS - FirstVNF_Mem_Server ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RRSe - MUM ) - ( CS - Min( Max( Max( Max( RRSe,DS ),CS ),DS ) ,CS ) ) ) * RRSe ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( MDR / Min( FirstVNF_CPU ,Min( Max( ACS,DDR ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,( ( Min( MUC ,MLU ) + ( ( MUR * MUC ) - MUR ) ) + MLU ) ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( ( ( Const + ( ACS + ARS ) ) - ( PN - DDR ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( ( Max( MUR,RCSe ) * Max( RMSe,RCSe ) ) ,( ( RMSe - MLU ) - Max( MLU,RRSe ) ) ) + ( Max( ( MUM / MLU ),Min( CS ,DS ) ) / Max( Min( RRSe ,MUM ),Max( RRSe,MUC ) ) ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_CPU ) - Max( Const,Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUC,Min( ( Max( ( DS * MUC ),( RMSe + MUR ) ) + ( ( MUM + RCSe ) * ( RRSe * MLU ) ) ) ,( ( ( MLU - MLU ) * Max( MLU,RRSe ) ) * Max( ( RMSe - MUC ),( DS / MUR ) ) ) ) ) - ( Min( RMSe ,MUR ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / BR ),Const ) ,Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM_Server ) ) - ( Const / Const ) )", "choosing": "( ( CS / ( Max( Min( MUC ,MUC ),( DS * MUM ) ) * Min( Max( RRSe,MLU ) ,( MUR / MUR ) ) ) ) / Min( DS ,( RCSe * Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server * ( DDR - BR ) ) ) ,( FirstVNF_Mem_Server * DDR ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + Max( MUC,( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + Max( AMS,FirstVNF_Mem ) ) ,( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Min( PN ,DDR ) ) ) )", "choosing": "( ( MUR - ( ( ( RMSe - CS ) / MUR ) * MUR ) ) / Max( CS,( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Min( AMS ,ARS ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( CS,( ( MUC - MUC ) / MUR ) ) / MUR ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ( ( FirstVNF_RAM - FirstVNF_CPU ) - Max( Const,Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( Const + ( ( ( Max( Const,( DDR + FirstVNF_RAM_Server ) ) / Min( MDR ,AMS ) ) * ( Max( AMS,FirstVNF_Mem ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) - BR ) ) )", "choosing": "( ( ( MUM / ( MLU * MUM ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( RMSe - ( RCSe - ( MUC - MUM ) ) ) / ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( Min( ACS ,FirstVNF_CPU_Server ) * ( ( MDR + BR ) + ( CRS * RRS ) ) ) )", "choosing": "Max( ( MUM / Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_Mem * DDR ) - AMS ) - Min( DDR ,RRS ) ),( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * MUM ) ) ,( MLU - RRSe ) ) / RCSe ),Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ) ) ) * ( ( MUM / RCSe ) / Min( DS ,RCSe ) ) )", "obj1": 0.08113207547169811, "obj2": 0.7922972008982477}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM - Max( Const,Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,Const ) ) ) )", "choosing": "( ( MLU + MUC ) * ( ( RCSe - MLU ) - Max( Min( ( MUM * CS ) ,( MUC * DS ) ),CS ) ) )", "obj1": 0.2188679245283019, "obj2": 0.6379438896911946}, {"determining": "Max( Min( Min( ARS ,Max( FirstVNF_RAM_Server,AMS ) ) ,FirstVNF_CPU ),Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( ( ( ( ( ( RCSe / Min( RCSe ,RMSe ) ) * MUC ) + MUR ) - RRSe ) - ( RCSe * MUR ) ) + ( ( MLU - MLU ) + ( MLU * DS ) ) ) )", "obj1": 0.15849056603773584, "obj2": 0.7357875614679673}, {"determining": "( ( ( MDR / ARS ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( ( ( ( MLU / MUR ) / ( MUM + ( CS - RMSe ) ) ) * MLU ) / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "( ( Max( ( CRS - CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem ) * ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( MLU + RRSe ) * ( RCSe + MUR ) ) / ( MUM * RCSe ) )", "obj1": 0.8433962264150944, "obj2": 0.11682413460891657}, {"determining": "Max( Const,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MLU ) - Max( DS,CS ) ) * ( DS + ( DS * RMSe ) ) )", "obj1": 0.10943396226415095, "obj2": 0.7530904301215544}, {"determining": "( Max( ACS,Const ) / ( ( ( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( MRS - Max( BR,CRS ) ) ) ) - FirstVNF_CPU ) / ( Const * MDR ) ) )", "choosing": "( ( MUR / CS ) - ( RCSe * Min( ( ( RMSe + DS ) - ( CS / RCSe ) ) ,MLU ) ) )", "obj1": 0.6132075471698113, "obj2": 0.2531809868505431}, {"determining": "Max( Const,Min( Max( Min( Max( AMS,FirstVNF_CPU ) ,FirstVNF_Mem ),Min( Min( AMS ,FirstVNF_RAM ) ,BR ) ) ,( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( ( RCSe - MLU ) - ( MUM / ( Max( Max( RCSe,MUR ),( DS / RMSe ) ) / CS ) ) ) * ( ( RRSe + ( MLU * ( RMSe + MUC ) ) ) + MUC ) )", "obj1": 0.25660377358490566, "obj2": 0.6071292797019415}, {"determining": "Max( FirstVNF_CPU_Server,Min( FirstVNF_RAM ,BR ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * CS ) ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * ( ( MUM / RCSe ) / Min( DS ,RCSe ) ) )", "obj1": 0.17547169811320754, "obj2": 0.6645061599466487}, {"determining": "Max( ( ( ( FirstVNF_Mem * DDR ) - AMS ) - Min( DDR ,RRS ) ),Min( FirstVNF_RAM ,BR ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * MUM ) ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * ( ( MUM / RCSe ) / Min( DS ,RCSe ) ) )", "obj1": 0.16037735849056603, "obj2": 0.6753272419308193}, {"determining": "Min( Max( FirstVNF_RAM_Server,( Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( Min( FirstVNF_Mem ,Max( Const,BR ) ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) ) / ACS ) ) ,CRS )", "choosing": "( ( DS * ( RCSe - ( CS / RCSe ) ) ) / ( MLU / MUC ) )", "obj1": 0.4641509433962264, "obj2": 0.4231632132872052}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( Min( CRS ,ARS ) - ( FirstVNF_RAM_Server - BR ) ) ),( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( RMSe - Min( RRSe ,MUM ) ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.3905660377358491, "obj2": 0.46696943763633963}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_RAM_Server - BR ) ) ),( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( ( MUR * RRSe ) - Min( RRSe ,MUM ) ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.4320754716981132, "obj2": 0.44037832401516774}, {"determining": "( ( ( Max( CRS,PN ) / ( MDR * BR ) ) - Max( ( ARS - FirstVNF_Mem_Server ),Min( AMS ,PN ) ) ) + ( Min( Max( FirstVNF_CPU,ARS ) ,( MDR * FirstVNF_Mem_Server ) ) - ( ( AMS + ACS ) / Min( MRS ,DDR ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( RCSe ,MUR ) ) ,( Max( ( RRSe * RRSe ),Min( MUC ,DS ) ) / ( ( DS + RRSe ) - Max( MUC,DS ) ) ) )", "obj1": 0.9509433962264151, "obj2": 0.03962684513775597}, {"determining": "Min( ( Max( MRS,ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( BR * ARS ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( MUR - ( CS / RCSe ) ) ) ) ) - CS ) ) )", "obj1": 0.7094339622641509, "obj2": 0.1969479422300271}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( DS + RRSe ) )", "obj1": 0.8924528301886793, "obj2": 0.10884045909444658}, {"determining": "( ( Max( CRS,Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( Max( ( RMSe - MUC ),( DS / MUR ) ) - CS ) - Max( DS,MLU ) )", "obj1": 0.6924528301886792, "obj2": 0.22221478938012434}, {"determining": "Max( MRS,( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( AMS + FirstVNF_CPU ) ) ) - BR ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + Min( Min( CS ,( RMSe - ( RRSe - MUR ) ) ) ,DS ) )", "obj1": 0.5283018867924528, "obj2": 0.36240458638957324}, {"determining": "Max( ( ( CRS - BR ) - FirstVNF_CPU ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( ( MUM * MLU ) - Max( DS,CS ) ) * ( DS + MLU ) )", "obj1": 0.43018867924528303, "obj2": 0.4661962766879987}, {"determining": "( ( Min( ACS ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( ARS * Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) ) ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( ( MLU - MUC ) + DS ) ),RRSe ) + ( RMSe / ( RMSe - Min( Min( ( RRSe * MLU ) ,MUC ) ,DS ) ) ) )", "obj1": 0.6094339622641509, "obj2": 0.2851004322122119}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( ( ( Min( MRS ,MRS ) - ( MDR - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * ( FirstVNF_RAM_Server - BR ) ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( ( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / ( RMSe - Min( RRSe ,RCSe ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( ( CS - MUR ) - ( CS / RCSe ) ) ) ) ) - ( ( ( ( DS * MLU ) - Max( ( MUC / RRSe ),Max( RRSe,MUR ) ) ) - MUC ) + Min( RRSe ,CS ) ) ) ) )", "obj1": 0.2641509433962264, "obj2": 0.5878366394206377}, {"determining": "Max( MRS,( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( Max( ARS,AMS ) - Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - CS ) - ( CS + CS ) ) + Min( Min( CS ,MUC ) ,DS ) )", "obj1": 0.4811320754716981, "obj2": 0.3973598615078741}, {"determining": "Min( Max( BR,( ( ACS - FirstVNF_CPU_Server ) + ( RRS - FirstVNF_CPU_Server ) ) ) ,CRS )", "choosing": "( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( Min( RMSe ,MUC ) + ( MUR - Min( RCSe ,MLU ) ) ) )", "obj1": 0.5566037735849056, "obj2": 0.35146257672656056}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( AMS - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Max( ( ( MUM * RMSe ) + ( MUR + DS ) ),RRSe ) )", "obj1": 0.8603773584905661, "obj2": 0.10979556032886176}, {"determining": "Min( ( Max( MRS,ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ( ( Min( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( BR * ARS ) * FirstVNF_RAM ) + ( ( FirstVNF_Mem + PN ) / BR ) ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,Min( DS ,( Max( Min( Min( RCSe ,MUR ) ,Max( RMSe,Min( Max( RMSe,RMSe ) ,MUM ) ) ),( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( MUR - ( CS / RCSe ) ) ) ) ) - CS ) ) )", "obj1": 0.7566037735849057, "obj2": 0.16508346027149756}, {"determining": "Max( MRS,( Max( ( RRS / FirstVNF_Mem ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( CS - RCSe ) + Max( ( Max( CS,RCSe ) / MUR ),( ( MLU / MUR ) / ( MUM + ( CS - RMSe ) ) ) ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.2962264150943396, "obj2": 0.5585028579555528}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,( Max( ( RRS * MRS ),( ARS - FirstVNF_Mem_Server ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( MUR,RRSe ) )", "obj1": 0.690566037735849, "obj2": 0.2443609045892914}, {"determining": "Min( ( ( Min( Max( ( FirstVNF_CPU_Server / BR ),Const ) ,Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM_Server ) ) - ( Const / Const ) ) + Max( AMS,FirstVNF_Mem ) ) ,( FirstVNF_RAM - ACS ) )", "choosing": "( ( MUR - ( ( MLU / MUR ) * Max( Min( MUC ,MUC ),( DS * MUM ) ) ) ) / Max( CS,( CS / RRSe ) ) )", "obj1": 0.9358490566037736, "obj2": 0.056882580007892744}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,( Min( ACS ,ACS ) / ( RRS / DDR ) ) ) ) ) ) * Max( MRS,( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( ( ( ARS + ACS ) * ( ACS - FirstVNF_Mem_Server ) ) + ( Max( ARS,AMS ) - ( BR + AMS ) ) ) ) ) ) )", "choosing": "( ( ( MLU / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Min( Max( ( RRSe * Min( MLU ,CS ) ),( MUM / MUR ) ) ,Min( Min( RRSe ,MUR ) ,MUR ) ) )", "obj1": 0.9622641509433962, "obj2": 0.008145273460998768}, {"determining": "( Max( ACS,Const ) / ( ( FirstVNF_Mem_Server + ARS ) / ( Const * MDR ) ) )", "choosing": "( ( MUR / ( ( ( ( MLU / MLU ) / MUM ) * ( Min( RMSe ,( RMSe - ( CS - RMSe ) ) ) - Min( Min( MUR ,MUM ) ,Min( MUM ,CS ) ) ) ) / RRSe ) ) - ( RCSe * Min( RMSe ,MLU ) ) )", "obj1": 0.37924528301886795, "obj2": 0.49519833035411526}, {"determining": "( ( Min( ACS ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( ( RRS / FirstVNF_Mem ) * Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) ) ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( MUM / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( ( MLU - MUC ) + DS ) ),RRSe ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.30770318507264394}, {"determining": "( ( PN / FirstVNF_CPU ) * Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( MUM / DS ) - ( RCSe / RMSe ) )", "obj1": 0.10566037735849057, "obj2": 0.7835864402212401}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( Min( CRS ,ARS ) - ( FirstVNF_RAM_Server - BR ) ) ),( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( CS - RCSe ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.35471698113207545, "obj2": 0.516073686842115}, {"determining": "( ( Min( ACS ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( Const,( BR - BR ) ) ) ) ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( ( MLU - MUC ) + DS ) ),( MUR / CS ) ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) )", "obj1": 0.5113207547169811, "obj2": 0.3754014953100495}, {"determining": "Min( Max( PN,( RRS / FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / ( ( MUC / MUC ) / Min( Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) ) ,DS ) ) )", "obj1": 0.7377358490566037, "obj2": 0.19334798279811502}, {"determining": "( Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),( BR - BR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( Max( ( Min( DS ,MUC ) + ( MUR + DS ) ),( ( RRSe * MLU ) * ( RRSe - MLU ) ) ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) ) - ( RCSe * Min( RMSe ,( Min( ( ( MUM / MUC ) / ( ( MUM * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) ) )", "obj1": 0.5754716981132075, "obj2": 0.32592558278887457}, {"determining": "Min( ( ( ( ( FirstVNF_RAM * PN ) * CRS ) * ( MRS + ( MDR - FirstVNF_Mem ) ) ) + Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( CRS,MRS ) ),FirstVNF_Mem ) ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - ( ( MLU / MUR ) * MUR ) ) / Max( CS,( MLU * Max( DS,Min( ( RMSe + RRSe ) ,RCSe ) ) ) ) )", "obj1": 0.9037735849056604, "obj2": 0.08152680569027597}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( FirstVNF_CPU,ACS ) ) )", "choosing": "Min( ( RCSe - ( ( Max( Min( RRSe ,Min( RCSe ,RRSe ) ),( ( RMSe - RMSe ) - MUM ) ) / RRSe ) / RMSe ) ) ,Max( MUM,MLU ) )", "obj1": 0.28679245283018867, "obj2": 0.5776662351764416}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( FirstVNF_CPU,ACS ) ) )", "choosing": "Min( ( RCSe - ( ( Max( Min( RRSe ,Min( RCSe ,RRSe ) ),( ( RMSe - RMSe ) - MUM ) ) / RRSe ) / RMSe ) ) ,Max( MUM,MLU ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "Min( Max( ARS,ARS ) ,( ( BR - FirstVNF_RAM ) + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * Max( ( ( Max( MLU,CS ) * MUR ) * MUR ),Max( ( ( RRSe * MLU ) * ( RRSe - MLU ) ),( ( RCSe - RMSe ) + ( MUR / RMSe ) ) ) ) ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7528301886792453, "obj2": 0.18564935939169389}, {"determining": "( ( Const * Min( AMS ,Min( Min( Max( Const,FirstVNF_RAM ) ,Max( AMS,( ARS + ( BR * FirstVNF_CPU ) ) ) ) ,Const ) ) ) / Max( RRS,FirstVNF_Mem ) )", "choosing": "( Min( Min( ( ( DS + MUR ) + ( MUC + RRSe ) ) ,( Max( Max( Max( Max( RCSe,RRSe ),DS ),RMSe ),( RCSe + RMSe ) ) + RCSe ) ) ,MUR ) - MUM )", "obj1": 0.33584905660377357, "obj2": 0.5262382140953541}, {"determining": "( ( ( Max( Max( CRS,FirstVNF_RAM_Server ),( CRS * ARS ) ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( ( ( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( MRS - Max( BR,CRS ) ) ) ) - FirstVNF_CPU ) + BR ) ) * ( RRS / ACS ) )", "choosing": "Min( Max( Max( ( ( MUM / Max( MUR,RCSe ) ) + DS ),MUC ),RCSe ) ,( ( DS * CS ) / ( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( MLU / MUC ) ) ) )", "obj1": 0.6037735849056604, "obj2": 0.302753988575483}, {"determining": "Max( Const,Min( Max( Min( Max( AMS,FirstVNF_CPU ) ,FirstVNF_Mem ),Min( Min( AMS ,FirstVNF_RAM ) ,BR ) ) ,( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( ( RCSe - MLU ) - ( MUM / ( Max( Max( RCSe,MUR ),( DS / RMSe ) ) / CS ) ) ) * ( ( RRSe + ( MLU * ( RMSe + MUC ) ) ) + MUC ) )", "obj1": 0.29056603773584905, "obj2": 0.5765985434686957}, {"determining": "Max( Const,Min( Max( Min( Max( ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),ACS ) / FirstVNF_CPU_Server ),FirstVNF_CPU ) ,FirstVNF_Mem ),Min( FirstVNF_RAM ,BR ) ) ,( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( ( RCSe - MLU ) - Max( DS,CS ) ) * ( ( RRSe + ( ( CS / Min( MLU ,RCSe ) ) * ( RMSe + MUC ) ) ) + MUC ) )", "obj1": 0.330188679245283, "obj2": 0.5384519720432968}, {"determining": "( ( ( Max( Max( CRS,FirstVNF_RAM_Server ),( CRS * ( ( CRS - BR ) - FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( ( ( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( MRS - Max( BR,CRS ) ) ) ) - FirstVNF_CPU ) + BR ) ) * ( RRS / ACS ) )", "choosing": "Min( Max( Max( ( ( MUM / Max( MUR,RCSe ) ) + DS ),MUC ),RCSe ) ,( DS / ( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( MLU / MUC ) ) ) )", "obj1": 0.5716981132075472, "obj2": 0.3278684766953477}, {"determining": "( ( Max( Const,( DDR + FirstVNF_RAM_Server ) ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MUC - MUM ) + RMSe ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "Min( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) + ACS ) ,Const ) + Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( FirstVNF_RAM,MRS ) ),FirstVNF_Mem ) ) ,( FirstVNF_RAM - ACS ) )", "choosing": "( ( MUR - ( MUC * MUR ) ) / Max( CS,( CS / ( CS + DS ) ) ) )", "obj1": 0.9132075471698113, "obj2": 0.07176153649022995}, {"determining": "( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - ( MLU / MUC ) ) ) )", "obj1": 0.5660377358490566, "obj2": 0.34369614156683675}, {"determining": "( ( AMS - ACS ) / FirstVNF_CPU_Server )", "choosing": "( ( MUR / CS ) - ( Min( RRSe ,MUM ) * Min( RMSe ,( Min( ( ( MUM / MUC ) / ( ( MUM * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) ) )", "obj1": 0.49433962264150944, "obj2": 0.3872476395434563}, {"determining": "Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( PN / AMS ) )", "choosing": "Min( Min( RRSe ,( Max( DS,CS ) - Min( RRSe ,MUM ) ) ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( MUR / Min( MLU ,RCSe ) ) ,( MUR - ( CS / RCSe ) ) ) ) ) - ( MLU + Min( RRSe ,CS ) ) ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5523333406634632}, {"determining": "Max( FirstVNF_CPU_Server,Min( FirstVNF_RAM ,Min( Min( Min( RRS ,BR ) ,Max( AMS,( ARS + ( BR * FirstVNF_CPU ) ) ) ) ,Const ) ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * CS ) ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * ( ( MUM / RCSe ) / Max( Max( Max( RCSe,RRSe ),DS ),RMSe ) ) )", "obj1": 0.360377358490566, "obj2": 0.5056974082315542}, {"determining": "( ( Min( ACS ,ACS ) / ( Max( Max( FirstVNF_CPU,( PN - ( PN * Const ) ) ),ACS ) / FirstVNF_CPU_Server ) ) + ( ( ( ARS + ACS ) * ( MRS * Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( Const,( BR - BR ) ) ) ) ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - MLU ) ,MUC ) + ( ( MLU - MUC ) + DS ) ),( MUR / CS ) ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) )", "obj1": 0.49245283018867925, "obj2": 0.39488847321874193}, {"determining": "Max( Max( PN,Min( Max( ( FirstVNF_CPU_Server / BR ),Const ) ,Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( ( CS / ( Max( Min( MUC ,MUC ),( DS * MUM ) ) * Min( Max( RRSe,MLU ) ,( MUR / MUR ) ) ) ) / Min( DS ,( RCSe * Max( MLU,MUC ) ) ) ) ),( ( RMSe + CS ) / ( CS * MUM ) ) ) / ( ( ( MUC / MUC ) / Min( Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) ) ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.7433962264150943, "obj2": 0.1863555182706255}, {"determining": "Max( MRS,( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( Max( ARS,AMS ) - ( BR + AMS ) ) ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + Min( Min( CS ,MUC ) ,DS ) )", "obj1": 0.5075471698113208, "obj2": 0.38448775876288593}, {"determining": "Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / CRS ) ) )", "choosing": "Max( ( MUC / DS ),( Min( MUR ,RMSe ) + ( MUR * MUM ) ) )", "obj1": 0.08679245283018867, "obj2": 0.7919941577803645}, {"determining": "Min( ( FirstVNF_CPU + Max( ( Const + DDR ),FirstVNF_Mem ) ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - ( ( ( CS * MLU ) * CS ) * MUR ) ) / Max( CS,( MUR * Max( DS,Min( ( RMSe + RRSe ) ,RCSe ) ) ) ) )", "obj1": 0.9037735849056604, "obj2": 0.08152680569027597}, {"determining": "Min( ( FirstVNF_CPU + Max( AMS,FirstVNF_Mem ) ) ,( FirstVNF_RAM - ACS ) )", "choosing": "( ( MUR - ( ( MLU / MUR ) * MUR ) ) / Max( CS,( CS / RRSe ) ) )", "obj1": 0.9264150943396227, "obj2": 0.061973690680064746}, {"determining": "( ( ( Min( MRS ,( Min( Max( ( FirstVNF_CPU_Server / BR ),Const ) ,Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM_Server ) ) - ( Const / Const ) ) ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) ) ) ) * ( Const + ( ( BR / FirstVNF_RAM_Server ) - BR ) ) )", "choosing": "( ( ( DS / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( MUR / MUR ) )", "obj1": 0.3641509433962264, "obj2": 0.5019816329273878}, {"determining": "Min( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) + ACS ) ,Const ) + Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( CRS,MRS ) ),FirstVNF_Mem ) ) ,( FirstVNF_RAM - ACS ) )", "choosing": "( ( MUR - ( ( MLU / MUR ) * MUR ) ) / Max( CS,( CS / ( CS + DS ) ) ) )", "obj1": 0.9188679245283019, "obj2": 0.06988285302697034}, {"determining": "( ( CRS - MRS ) / ( ( ( FirstVNF_Mem * DDR ) - AMS ) - Min( DDR ,RRS ) ) )", "choosing": "( ( ( Max( RCSe,DS ) * ( MUM + MLU ) ) * Max( Max( DS,MUC ),RCSe ) ) + MUR )", "obj1": 0.969811320754717, "obj2": 0.006730278872373563}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( AMS - MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( ( CS / Max( MUM,( ( ( RMSe - MUR ) * RMSe ) * Min( MUM ,( MUM / CS ) ) ) ) ) + RRSe ) ) )", "obj1": 0.37169811320754714, "obj2": 0.4985723275626436}, {"determining": "( ( Const * Min( AMS ,Min( Min( Max( Const,FirstVNF_RAM ) ,Max( AMS,( ARS + ( BR * FirstVNF_CPU ) ) ) ) ,Const ) ) ) / Max( RRS,FirstVNF_Mem ) )", "choosing": "( Min( Min( ( ( DS + MUR ) + ( MUC + RRSe ) ) ,( Max( Max( Max( Max( RCSe,RRSe ),DS ),RMSe ),( RCSe + RMSe ) ) + RCSe ) ) ,MUR ) - MUM )", "obj1": 0.33584905660377357, "obj2": 0.5262382140953541}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / ( MLU / MUC ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( PN + ACS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,Min( DS ,( MUM / RMSe ) ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "Min( ( ( CRS * FirstVNF_Mem_Server ) + Const ) ,( FirstVNF_RAM - ACS ) )", "choosing": "( ( MUR - ( ( MLU / MUR ) * MUR ) ) / Max( CS,( DS / ( CS + DS ) ) ) )", "obj1": 0.9226415094339623, "obj2": 0.06313964491573834}, {"determining": "Min( ( Max( Max( MRS,ACS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( Min( MLU ,RMSe ) ,Min( DS ,( Max( Min( DS ,MLU ),( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( ( CS - MUR ) - ( CS / RCSe ) ) ) ) ) - ( MLU + Min( RRSe ,CS ) ) ) ) )", "obj1": 0.32452830188679244, "obj2": 0.5432654699510541}, {"determining": "Max( AMS,Min( FirstVNF_RAM ,BR ) )", "choosing": "( ( MLU - ( Max( DS,CS ) * Max( ( Min( Min( ( MUR / MLU ) ,MUM ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * Max( ( RRSe + Max( CS,( CS / RRSe ) ) ),RMSe ) )", "obj1": 0.31886792452830187, "obj2": 0.5453494941155721}, {"determining": "( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - ( MLU / MUC ) ) ) )", "obj1": 0.5660377358490566, "obj2": 0.34369614156683675}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * MRS )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / ( RMSe - Min( RRSe ,MUM ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9830188679245283, "obj2": 0.003974755771779307}, {"determining": "Min( ( Max( Min( Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server * ( DDR - BR ) ) ) ,( FirstVNF_Mem_Server * DDR ) ) ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( PN / AMS ) )", "choosing": "Min( Min( RRSe ,( Max( DS,CS ) - Min( RRSe ,MUM ) ) ) ,Min( DS ,( Max( MLU,( Max( DS,( ( MUR * CS ) * ( MLU - MUC ) ) ) * Min( ( MUR / Min( MLU ,RCSe ) ) ,( MUR - ( CS / RCSe ) ) ) ) ) - ( MLU + Min( RRSe ,CS ) ) ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5523333406634632}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * ( RCSe + DS ) ) ),( Min( RMSe ,Max( Min( MLU ,CS ),( RMSe / MUC ) ) ) + MUC ) ) )", "obj1": 0.9905660377358491, "obj2": 0.0022054446298258278}, {"determining": "Max( Min( Max( AMS,FirstVNF_CPU ) ,Min( FirstVNF_RAM ,Min( ( FirstVNF_CPU / PN ) ,FirstVNF_CPU_Server ) ) ),Min( FirstVNF_RAM ,BR ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * CS ) ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * Max( ( RRSe + MUC ),RMSe ) )", "obj1": 0.32075471698113206, "obj2": 0.5440869777922479}, {"determining": "( ( CRS - MRS ) / ( ( ( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) * DDR ) - AMS ) - Min( DDR ,RRS ) ) )", "choosing": "( ( ( Max( RCSe,DS ) * ( MUM + MLU ) ) * Max( Max( DS,MUC ),RCSe ) ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.0030910362983060597}, {"determining": "Max( MRS,( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( ( ( ARS + ACS ) * ( Const + ( ( BR / FirstVNF_RAM_Server ) - BR ) ) ) + ( Max( ARS,AMS ) - ( BR + AMS ) ) ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + Min( Min( CS ,( RMSe - ( RCSe - ( Min( RMSe ,MUC ) + MUC ) ) ) ) ,DS ) )", "obj1": 0.5075471698113208, "obj2": 0.38448775876288593}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( ( ( ( AMS - FirstVNF_Mem ) - Min( ACS ,FirstVNF_RAM_Server ) ) - ARS ),ARS ) ) ) ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,( MUM + ( ( MUM + MLU ) - ( MUM * MUM ) ) ) )", "obj1": 0.9905660377358491, "obj2": 0.0022054446298258278}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server * ( DDR - BR ) ) ) ,( FirstVNF_Mem_Server * DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( Max( DS,( ( MUR * CS ) * ( MLU - MUC ) ) ),MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "Max( Min( Min( ( Min( ( BR + ARS ) ,AMS ) - Min( CRS ,FirstVNF_Mem ) ) ,CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ),( ( Const / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( MLU * DS ) )", "obj1": 0.0830188679245283, "obj2": 0.7922595871699566}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "( ( MDR / FirstVNF_Mem ) * ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( RRSe * RRSe ) )", "obj1": 0.9830188679245283, "obj2": 0.003974755771779307}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( Const + ( ( ( Max( Const,( DDR + FirstVNF_RAM_Server ) ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) - BR ) ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( RMSe - ( RCSe - ( MUC - MUM ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.9641509433962264, "obj2": 0.0077355139624761225}, {"determining": "( ( CRS - MRS ) / ( ( Min( FirstVNF_RAM ,BR ) - AMS ) - Min( DDR ,RRS ) ) )", "choosing": "( ( ( Max( RCSe,DS ) * ( MUM + MLU ) ) * ( ( MUR - RMSe ) * ( MUR * CS ) ) ) + MUR )", "obj1": 0.9679245283018868, "obj2": 0.007060946425910447}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( Const + ( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) ) ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) )", "obj1": 0.9849056603773585, "obj2": 0.0035541542204333564}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( ( ( FirstVNF_RAM * PN ) * CRS ) * ( MRS + ( MDR - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) + FirstVNF_CPU ) ),( Max( MRS,ACS ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( MLU + Min( Max( ( MUM - ( RRSe / RRSe ) ),RMSe ) ,( MUC - MUR ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.9660377358490566, "obj2": 0.0072846325847856575}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( Const + ( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ( ACS / ( FirstVNF_RAM * DDR ) ) + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) ) ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( Min( Max( MUR,MUR ) ,( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) ) - MLU ) / ( MUC + MLU ) ) ) + Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) )", "obj1": 0.9849056603773585, "obj2": 0.0035541542204333564}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - Min( ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),ACS ) / FirstVNF_CPU_Server ) ,Min( ARS ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( ( ( RRSe / ( MLU - RMSe ) ) + Max( MLU,MUR ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( ( CS - MUR ) - ( CS / RCSe ) ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9660377358490566, "obj2": 0.0072846325847856575}, {"determining": "( ( ( Min( FirstVNF_RAM ,( Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ,( CRS - Const ) ) ) * ACS ) ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( ( BR - BR ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUR - ( CS - Min( Max( Max( Max( MUR,DS ),CS ),MUC ) ,CS ) ) ) * ( ( RMSe - ( ( ( ( MUC / RCSe ) + DS ) * ( ( DS + RCSe ) * ( RRSe / MUM ) ) ) * MUR ) ) - Min( MUR ,MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,CRS ) + ( Max( ( RRS * MRS ),( ARS - FirstVNF_Mem_Server ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RRSe - MUM ) - ( CS - Min( Max( Max( Max( RRSe,DS ),CS ),DS ) ,CS ) ) ) * RRSe ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / ( ( ( CRS - MRS ) + DDR ) / FirstVNF_RAM ) ) / Max( ACS,( BR - BR ) ) ) ) ,Min( DDR ,ACS ) )", "choosing": "Min( ( ( RMSe / MUR ) + DS ) ,Min( ( RRSe / MUR ) ,( Min( ( ( MUM / MUC ) / ( ( RMSe * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * PN ) * CRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( CS * RRSe ) ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_CPU ) - Min( Const ,( ( MRS + FirstVNF_CPU_Server ) - ( MDR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + MUC ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - ( BR + MRS ) )", "choosing": "( ( MUC + ( DS / MUM ) ) * ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( BR - Min( ( ( FirstVNF_RAM_Server * DDR ) / CRS ) ,AMS ) ),( Const - MRS ) ),ACS ) + FirstVNF_CPU_Server ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( MUR,MUR ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + Min( Max( MRS,MDR ) ,( ( ( FirstVNF_RAM_Server / AMS ) + FirstVNF_RAM ) + MDR ) ) ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( ACS * FirstVNF_Mem_Server ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + ( ( RRSe - RCSe ) + ( MUR - Min( ( RMSe * RMSe ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU_Server ) ,DDR ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( ( CS + ( ( ( CS + ( MUM + RRSe ) ) * ( MUM * ( DS * RMSe ) ) ) - ( RMSe - MLU ) ) ) - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( Min( Const ,ACS ) - ( MDR + Const ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,( ( ( ( ( DS / MLU ) * MUC ) + MUR ) - RRSe ) - ( RCSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ( ( FirstVNF_RAM - FirstVNF_CPU ) - Max( Const,Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( Const + ( ( ( Max( Const,( DDR + FirstVNF_RAM_Server ) ) / Min( MDR ,AMS ) ) * ( Max( AMS,FirstVNF_Mem ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) - BR ) ) )", "choosing": "( ( ( MUM / ( MLU * MUM ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( RMSe - ( RCSe - ( MUC - MUM ) ) ) / ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_Mem * DDR ) - AMS ) - Min( DDR ,RRS ) ),( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * MUM ) ) ,( MLU - RRSe ) ) / RCSe ),Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ) ) ) * ( ( MUM / RCSe ) / Min( DS ,RCSe ) ) )", "obj1": 0.08113207547169811, "obj2": 0.7922972008982477}, {"determining": "Max( Const,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MLU ) - Max( DS,CS ) ) * ( DS + ( DS * RMSe ) ) )", "obj1": 0.10943396226415095, "obj2": 0.7530904301215544}, {"determining": "Max( FirstVNF_CPU_Server,Min( FirstVNF_RAM ,( Min( ACS ,ACS ) / ( RRS / DDR ) ) ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * RRSe ) ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * ( ( MUM / RCSe ) / Min( DS ,RCSe ) ) )", "obj1": 0.1509433962264151, "obj2": 0.6784183893618658}, {"determining": "( ( ( MDR / ARS ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( ( ( ( MLU / MUR ) / ( MUM + ( CS - RMSe ) ) ) * MLU ) / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "( ( Max( ( CRS - CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem ) * ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( MLU + RRSe ) * ( RCSe + MUR ) ) / ( MUM * RCSe ) )", "obj1": 0.8433962264150944, "obj2": 0.11682413460891657}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM - Max( Const,Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,Const ) ) ) )", "choosing": "( ( MLU + MUC ) * ( ( RCSe - MLU ) - Max( Min( ( MUM * CS ) ,( MUC * DS ) ),CS ) ) )", "obj1": 0.2188679245283019, "obj2": 0.6379438896911946}, {"determining": "Max( FirstVNF_CPU_Server,( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( Min( FirstVNF_Mem ,Max( Const,BR ) ) / Max( CRS,MRS ) ) ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * CS ) ) ,( MLU - RRSe ) ) / ( RCSe - ( CS / RCSe ) ) ),MUC ) ) ) * ( ( MUM / RCSe ) / Min( DS ,RCSe ) ) )", "obj1": 0.17358490566037735, "obj2": 0.6615755955431815}, {"determining": "Min( Max( FirstVNF_RAM_Server,( Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( Min( FirstVNF_Mem ,Max( Const,BR ) ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) ) / ACS ) ) ,CRS )", "choosing": "( ( DS * ( RCSe - ( CS / RCSe ) ) ) / ( MLU / MUC ) )", "obj1": 0.4641509433962264, "obj2": 0.4231632132872052}, {"determining": "( ( ( Max( CRS,PN ) / ( MDR * BR ) ) - Max( ( ARS - FirstVNF_Mem_Server ),Min( AMS ,PN ) ) ) + ( Min( Max( FirstVNF_CPU,ARS ) ,( MDR * FirstVNF_Mem_Server ) ) - ( ( AMS + ACS ) / Min( MRS ,DDR ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( RCSe ,MUR ) ) ,( Max( ( RRSe * RRSe ),Min( MUC ,DS ) ) / ( ( DS + RRSe ) - Max( MUC,DS ) ) ) )", "obj1": 0.9509433962264151, "obj2": 0.03962684513775597}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_RAM_Server - BR ) ) ),( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( ( MUR * RRSe ) - Min( RRSe ,MUM ) ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.4320754716981132, "obj2": 0.44037832401516774}, {"determining": "( Max( ACS,Const ) / ( ( ( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( MRS - Max( BR,CRS ) ) ) ) - FirstVNF_CPU ) / ( Const * MDR ) ) )", "choosing": "( ( MUR / CS ) - ( RCSe * Min( ( ( RMSe + DS ) - ( CS / RCSe ) ) ,MLU ) ) )", "obj1": 0.6132075471698113, "obj2": 0.2531809868505431}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( DS + RRSe ) )", "obj1": 0.8924528301886793, "obj2": 0.10884045909444658}, {"determining": "( ( Max( CRS,Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( Max( ( RMSe - MUC ),( DS / MUR ) ) - CS ) - Max( DS,MLU ) )", "obj1": 0.6924528301886792, "obj2": 0.22221478938012434}, {"determining": "Max( Const,Min( Max( Min( Max( ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ),FirstVNF_CPU ) ,FirstVNF_Mem ),Min( FirstVNF_RAM ,BR ) ) ,( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( ( RCSe - MLU ) - Max( DS,CS ) ) * ( ( RRSe + ( Max( ( Max( CS,RCSe ) / MUR ),( ( MLU / MUR ) / ( MUM + ( CS - RMSe ) ) ) ) * ( RMSe + MUC ) ) ) + MUC ) )", "obj1": 0.24528301886792453, "obj2": 0.6313695962573203}, {"determining": "Min( ( Max( MRS,ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( BR * ARS ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( MUR - ( CS / RCSe ) ) ) ) ) - CS ) ) )", "obj1": 0.7094339622641509, "obj2": 0.1969479422300271}, {"determining": "Max( Const,Min( Max( Min( Max( AMS,FirstVNF_CPU ) ,FirstVNF_Mem ),Min( Min( AMS ,FirstVNF_RAM ) ,BR ) ) ,( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( ( RCSe - MLU ) - ( MUM / ( Max( Max( RCSe,MUR ),( DS / RMSe ) ) / CS ) ) ) * ( ( RRSe + ( MLU * ( RMSe + MUC ) ) ) + MUC ) )", "obj1": 0.25660377358490566, "obj2": 0.6071292797019415}, {"determining": "Max( ( Max( CRS,Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server ),( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + MUR ) ) + ( ( ( CS - RCSe ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.6490566037735849, "obj2": 0.2494046834354457}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( Min( CRS ,ARS ) - ( FirstVNF_RAM_Server - BR ) ) ),( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( RMSe - Min( RRSe ,MUM ) ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.3905660377358491, "obj2": 0.46696943763633963}, {"determining": "( ( Min( ACS ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( ARS * Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) ) ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( ( MLU - MUC ) + DS ) ),RRSe ) + ( RMSe / ( RMSe - Min( Min( ( RRSe * MLU ) ,MUC ) ,DS ) ) ) )", "obj1": 0.6094339622641509, "obj2": 0.2851004322122119}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( ( ( Min( MRS ,MRS ) - ( MDR - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * ( FirstVNF_RAM_Server - BR ) ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( ( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / ( RMSe - Min( RRSe ,RCSe ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( ( CS - MUR ) - ( CS / RCSe ) ) ) ) ) - ( ( ( ( DS * MLU ) - Max( ( MUC / RRSe ),Max( RRSe,MUR ) ) ) - MUC ) + Min( RRSe ,CS ) ) ) ) )", "obj1": 0.2641509433962264, "obj2": 0.5878366394206377}, {"determining": "Max( MRS,( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( Max( ARS,AMS ) - Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - CS ) - ( CS + CS ) ) + Min( Min( CS ,MUC ) ,DS ) )", "obj1": 0.4811320754716981, "obj2": 0.3973598615078741}, {"determining": "Min( ( FirstVNF_CPU + Max( ACS,FirstVNF_Mem ) ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RRSe ,MUM ) - ( ( ( CS * MLU ) * CS ) * MUR ) ) / Max( CS,( MUR * Max( DS,Min( ( RMSe + RRSe ) ,RCSe ) ) ) ) )", "obj1": 0.9169811320754717, "obj2": 0.05566266756212442}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( AMS - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Max( ( ( MUM * RMSe ) + ( MUR + DS ) ),RRSe ) )", "obj1": 0.8603773584905661, "obj2": 0.10979556032886176}, {"determining": "Max( MRS,( Max( ( RRS / FirstVNF_Mem ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( CS - RCSe ) + Max( ( Max( CS,RCSe ) / MUR ),( ( MLU / MUR ) / ( MUM + ( CS - RMSe ) ) ) ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.2962264150943396, "obj2": 0.5585028579555528}, {"determining": "Max( ( ( CRS - BR ) - FirstVNF_CPU ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( ( MUM * MLU ) - Max( DS,CS ) ) * ( DS + MLU ) )", "obj1": 0.43018867924528303, "obj2": 0.4661962766879987}, {"determining": "( Max( ACS,Const ) / ( ( FirstVNF_Mem_Server + ARS ) / ( Const * MDR ) ) )", "choosing": "( ( MUR / ( ( ( ( MLU / MLU ) / MUM ) * ( Min( RMSe ,( RMSe - ( CS - RMSe ) ) ) - Min( Min( MUR ,MUM ) ,Min( MUM ,CS ) ) ) ) / RRSe ) ) - ( RCSe * Min( RMSe ,MLU ) ) )", "obj1": 0.37924528301886795, "obj2": 0.49519833035411526}, {"determining": "( ( PN / FirstVNF_CPU ) * Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( MUM / DS ) - ( RCSe / RMSe ) )", "obj1": 0.10566037735849057, "obj2": 0.7835864402212401}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( Min( CRS ,ARS ) - ( FirstVNF_RAM_Server - BR ) ) ),( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( ( ( CS - RCSe ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.35471698113207545, "obj2": 0.516073686842115}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( ( ( FirstVNF_RAM * PN ) * CRS ) * ( MRS + ( MDR - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) + FirstVNF_CPU ) ),( Max( MRS,ACS ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - ( ( ( CS + ( MUM + RRSe ) ) * ( MUM * ( DS * RMSe ) ) ) - ( RMSe - MLU ) ) ) / ( MUC + MLU ) ) ) + ( ( MLU + Min( Max( ( MUM - ( RRSe / RRSe ) ),RMSe ) ,( MUC - MUR ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.9547169811320755, "obj2": 0.009564430424144437}, {"determining": "Max( MRS,( Max( ( RRS / ( FirstVNF_RAM - MDR ) ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( Max( ARS,AMS ) - ( BR + AMS ) ) ) ) ) )", "choosing": "( ( ( DS * MUM ) / ( MLU / MUC ) ) + Min( Min( CS ,MUC ) ,DS ) )", "obj1": 0.6716981132075471, "obj2": 0.24471229768303365}, {"determining": "Max( Const,Min( Max( Min( Max( ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),ACS ) / FirstVNF_CPU_Server ),FirstVNF_CPU ) ,FirstVNF_Mem ),Min( ( Max( Const,( DDR + FirstVNF_RAM_Server ) ) / Min( MDR ,AMS ) ) ,BR ) ) ,( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( ( RCSe - MLU ) - Max( ( ( ( MUM / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( RMSe - ( RCSe - ( MUC - MUM ) ) ) / Max( RCSe,RRSe ) ) ),CS ) ) * ( ( RRSe + ( ( CS / Min( MLU ,RCSe ) ) * ( RMSe + MUC ) ) ) + MUC ) )", "obj1": 0.3169811320754717, "obj2": 0.536586202482544}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,( Max( ( RRS * MRS ),( ARS - FirstVNF_Mem_Server ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( MUR,RRSe ) )", "obj1": 0.690566037735849, "obj2": 0.2443609045892914}, {"determining": "Max( MRS,( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( AMS + FirstVNF_CPU ) ) ) - BR ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + Min( Min( CS ,( RMSe - ( RRSe - MUR ) ) ) ,DS ) )", "obj1": 0.5283018867924528, "obj2": 0.36240458638957324}, {"determining": "( ( Min( ACS ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( Const,( BR - BR ) ) ) ) ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( ( MLU - MUC ) + DS ) ),( MUR / CS ) ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) )", "obj1": 0.5113207547169811, "obj2": 0.3754014953100495}, {"determining": "Max( ( ( ( FirstVNF_Mem * DDR ) - AMS ) - Min( DDR ,RRS ) ),( Max( Max( ( BR - Min( ( ( FirstVNF_RAM_Server * DDR ) / CRS ) ,AMS ) ),( Const - MRS ) ),ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * MUM ) ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * ( ( MUM / RCSe ) / Min( MUR ,RCSe ) ) )", "obj1": 0.3132075471698113, "obj2": 0.5474588686639212}, {"determining": "( Max( ( Min( ACS ,ACS ) / ( ( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * MRS ) / DDR ) ),( BR - BR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( Max( ( Min( DS ,MUC ) + ( MUR + DS ) ),( ( RRSe * MLU ) * ( RRSe - MLU ) ) ) + ( RMSe / ( RMSe - Min( Min( RMSe ,( RMSe - Min( RRSe ,MUM ) ) ) ,DS ) ) ) ) - ( RCSe * Min( RMSe ,( Min( ( ( MUM / MUC ) / ( ( MUM * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) ) )", "obj1": 0.5754716981132075, "obj2": 0.3142436427948057}, {"determining": "( ( ( Max( Max( CRS,FirstVNF_RAM_Server ),( CRS * ( ( CRS - BR ) - FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( ( ( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( MRS - Max( BR,CRS ) ) ) ) - FirstVNF_CPU ) + BR ) ) * ( RRS / ACS ) )", "choosing": "Min( Max( Max( ( ( MUM / Max( MUR,RCSe ) ) + DS ),MUC ),RCSe ) ,( DS / ( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( MLU / MUC ) ) ) )", "obj1": 0.5716981132075472, "obj2": 0.3278684766953477}, {"determining": "Min( ( Max( MRS,ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ( ( Min( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( BR * ARS ) * FirstVNF_RAM ) + ( ( FirstVNF_Mem + PN ) / BR ) ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,Min( DS ,( Max( Min( Min( RCSe ,MUR ) ,Max( RMSe,Min( Max( RMSe,RMSe ) ,MUM ) ) ),( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( MUR - ( CS / RCSe ) ) ) ) ) - CS ) ) )", "obj1": 0.7566037735849057, "obj2": 0.16508346027149756}, {"determining": "Max( ( ( ( FirstVNF_Mem * DDR ) - AMS ) - Min( DDR ,RRS ) ),Min( FirstVNF_RAM ,BR ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * MUM ) ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * ( ( MUM / RCSe ) / Min( DS ,RCSe ) ) )", "obj1": 0.16037735849056603, "obj2": 0.6753272419308193}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( Min( CRS ,ARS ) - ( FirstVNF_RAM_Server - BR ) ) ),( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * Max( MRS,( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( AMS + FirstVNF_CPU ) ) ) - BR ) ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + ( MUR - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.41320754716981134, "obj2": 0.4667419496788613}, {"determining": "Min( ( Max( MRS,ARS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ( ( Min( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( BR * ARS ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) ) ) - CS ) ) )", "obj1": 0.7716981132075472, "obj2": 0.15992113284024173}, {"determining": "Min( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( FirstVNF_CPU,ACS ) ) )", "choosing": "Min( ( RCSe - ( ( Max( Min( RRSe ,Min( RCSe ,RRSe ) ),( ( RMSe - RMSe ) - MUM ) ) / RRSe ) / RMSe ) ) ,Max( MUM,MLU ) )", "obj1": 0.28679245283018867, "obj2": 0.5776662351764416}, {"determining": "Min( Max( ARS,ARS ) ,( ( BR - FirstVNF_RAM ) + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * Max( ( ( Max( MLU,CS ) * MUR ) * MUR ),Max( ( ( RRSe * MLU ) * ( RRSe - MLU ) ),( ( RCSe - RMSe ) + ( MUR / RMSe ) ) ) ) ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7528301886792453, "obj2": 0.18564935939169389}, {"determining": "Min( ( ( ( ( FirstVNF_RAM * PN ) * CRS ) * ( MRS + ( MDR - FirstVNF_Mem ) ) ) + Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( CRS,FirstVNF_Mem ) ),FirstVNF_Mem ) ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - ( ( MLU / MUR ) * MUR ) ) / Max( CS,( MLU * Max( DS,Min( ( DS + RRSe ) ,RCSe ) ) ) ) )", "obj1": 0.9056603773584906, "obj2": 0.07673967383233422}, {"determining": "Min( ( FirstVNF_CPU + Max( ( Const + DDR ),FirstVNF_Mem ) ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - ( ( ( CS * MLU ) * CS ) * MUR ) ) / Max( CS,( MUR * Max( DS,Min( ( RMSe + RRSe ) ,RCSe ) ) ) ) )", "obj1": 0.9132075471698113, "obj2": 0.057419545642796346}, {"determining": "( ( Min( ACS ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( ( RRS / FirstVNF_Mem ) * Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) ) ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( MUM / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( ( MLU - MUC ) + DS ) ),RRSe ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.30770318507264394}, {"determining": "Min( ( FirstVNF_CPU + Max( ( ( ( FirstVNF_RAM - ACS ) / FirstVNF_RAM ) / Max( CRS,MRS ) ),FirstVNF_Mem ) ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - ( ( MLU / MUR ) * MUR ) ) / Max( CS,( MUR * ( MLU / MUR ) ) ) )", "obj1": 0.9037735849056604, "obj2": 0.08152680569027597}, {"determining": "Min( ( ( ( MDR / FirstVNF_Mem ) * ( FirstVNF_RAM_Server - BR ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( BR * ARS ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) ) ) - CS ) ) )", "obj1": 0.730188679245283, "obj2": 0.19449749567042451}, {"determining": "( ( ( Max( Max( CRS,FirstVNF_RAM_Server ),( CRS * ARS ) ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( ( ( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( MRS - Max( BR,CRS ) ) ) ) - FirstVNF_CPU ) + BR ) ) * ( RRS / ACS ) )", "choosing": "Min( Max( Max( ( ( MUM / Max( MUR,RCSe ) ) + DS ),MUC ),RCSe ) ,( ( DS * CS ) / ( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( MLU / MUC ) ) ) )", "obj1": 0.6037735849056604, "obj2": 0.302753988575483}, {"determining": "( ( ( ( Min( ACS ,FirstVNF_CPU_Server ) * ( ( MDR + BR ) + ( CRS * RRS ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( ( ( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( MRS - Max( BR,CRS ) ) ) ) - FirstVNF_CPU ) + BR ) ) * ( RRS / ACS ) )", "choosing": "Min( Max( Max( ( ( MUM / Max( MUR,RCSe ) ) + DS ),MUC ),RCSe ) ,( ( DS * ( MUM / Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ) ) / ( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( MLU / MUC ) ) ) )", "obj1": 0.539622641509434, "obj2": 0.35974120950505045}, {"determining": "Max( Const,Min( Max( Min( Max( AMS,FirstVNF_CPU ) ,FirstVNF_Mem ),Min( Min( AMS ,FirstVNF_RAM ) ,BR ) ) ,( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( ( RCSe - MLU ) - ( MUM / ( Max( Max( RCSe,MUR ),( DS / RMSe ) ) / CS ) ) ) * ( ( RRSe + ( MLU * ( RMSe + MUC ) ) ) + MUC ) )", "obj1": 0.29056603773584905, "obj2": 0.5765985434686957}, {"determining": "( ( Const * Min( AMS ,Min( Min( Max( Const,FirstVNF_RAM ) ,Max( AMS,( ARS + ( BR * FirstVNF_CPU ) ) ) ) ,Const ) ) ) / Max( RRS,FirstVNF_Mem ) )", "choosing": "( Min( Min( ( ( DS + MUR ) + ( MUC + RRSe ) ) ,( Max( Max( Max( Max( RCSe,RRSe ),DS ),RMSe ),( RCSe + RMSe ) ) + RCSe ) ) ,MUR ) - MUM )", "obj1": 0.33584905660377357, "obj2": 0.5262382140953541}, {"determining": "( ( Const * Min( AMS ,Min( Min( Max( Const,FirstVNF_RAM ) ,Max( AMS,( ARS + ( BR * FirstVNF_CPU ) ) ) ) ,Const ) ) ) / Max( RRS,FirstVNF_Mem ) )", "choosing": "( Min( Min( ( ( DS + MUR ) + ( MUC + RRSe ) ) ,( Max( Max( Max( Max( RCSe,RRSe ),DS ),RMSe ),( RCSe + RMSe ) ) + RCSe ) ) ,MUR ) - MUM )", "obj1": 0.33584905660377357, "obj2": 0.5262382140953541}, {"determining": "( ( Max( Const,( DDR + FirstVNF_RAM_Server ) ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MUC - MUM ) + RMSe ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - ( MLU / MUC ) ) ) )", "obj1": 0.5660377358490566, "obj2": 0.34369614156683675}, {"determining": "Min( Max( BR,( ( ACS - FirstVNF_CPU_Server ) + ( RRS - FirstVNF_CPU_Server ) ) ) ,CRS )", "choosing": "( ( DS * ( ( RMSe + DS ) - ( CS / RCSe ) ) ) / ( Min( RMSe ,MUC ) + ( MUR - Min( RCSe ,MLU ) ) ) )", "obj1": 0.5566037735849056, "obj2": 0.35146257672656056}, {"determining": "( ( AMS - ACS ) / FirstVNF_CPU_Server )", "choosing": "( ( MUR / CS ) - ( Min( RRSe ,MUM ) * Min( RMSe ,( Min( ( ( MUM / MUC ) / ( ( MUM * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) ) )", "obj1": 0.49433962264150944, "obj2": 0.3872476395434563}, {"determining": "( ( Min( ACS ,ACS ) / ( Max( Max( FirstVNF_CPU,( PN - ( PN * Const ) ) ),ACS ) / FirstVNF_CPU_Server ) ) + ( ( ( ARS + ACS ) * ( MRS * Min( ( ARS - FirstVNF_Mem_Server ) ,( FirstVNF_RAM + Max( Const,( BR - BR ) ) ) ) ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - MLU ) ,MUC ) + ( ( MLU - MUC ) + DS ) ),( MUR / CS ) ) + ( RMSe / ( RMSe - Min( Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( MUR,RRSe ) ) ,DS ) ) ) )", "obj1": 0.5490566037735849, "obj2": 0.35295058108234156}, {"determining": "Max( FirstVNF_CPU_Server,Min( FirstVNF_RAM ,Min( Min( Min( RRS ,BR ) ,Max( AMS,( ARS + ( BR * FirstVNF_CPU ) ) ) ) ,Const ) ) )", "choosing": "( ( RCSe - ( Max( DS,CS ) * Max( ( Min( ( ( MUR - RMSe ) * ( MUR * CS ) ) ,( MLU - RRSe ) ) / RCSe ),MUC ) ) ) * ( ( MUM / RCSe ) / Max( Max( Max( RCSe,RRSe ),DS ),RMSe ) ) )", "obj1": 0.360377358490566, "obj2": 0.5056974082315542}, {"determining": "( ( Min( ACS ,ACS ) / ( Max( Max( FirstVNF_CPU,( PN - ( PN * Const ) ) ),ACS ) / FirstVNF_CPU_Server ) ) + ( ( ( ARS + ACS ) * ( MRS * Min( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Max( Const,( BR - BR ) ) ) ) ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - MLU ) ,MUC ) + ( ( MLU - MUC ) + DS ) ),( MUR / CS ) ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) )", "obj1": 0.49245283018867925, "obj2": 0.39488847321874193}, {"determining": "Max( Max( PN,Min( Max( ( FirstVNF_CPU_Server / BR ),Const ) ,Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( ( CS / ( Max( Min( MUC ,MUC ),( DS * MUM ) ) * Min( Max( RRSe,MLU ) ,( MUR / MUR ) ) ) ) / Min( DS ,( RCSe * Max( MLU,MUC ) ) ) ) ),( ( RMSe + CS ) / ( CS * MUM ) ) ) / ( ( ( MUC / MUC ) / Min( Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) ) ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.7433962264150943, "obj2": 0.1863555182706255}, {"determining": "Max( MRS,( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( Max( ARS,AMS ) - ( BR + AMS ) ) ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + Min( Min( CS ,MUC ) ,DS ) )", "obj1": 0.5075471698113208, "obj2": 0.38448775876288593}, {"determining": "Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / CRS ) ) )", "choosing": "Max( ( MUC / DS ),( Min( MUR ,RMSe ) + ( MUR * MUM ) ) )", "obj1": 0.08679245283018867, "obj2": 0.7919941577803645}, {"determining": "Min( Max( PN,( RRS / FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / ( ( MUC / MUC ) / Min( Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) ) ,DS ) ) )", "obj1": 0.7377358490566037, "obj2": 0.19334798279811502}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( Min( ( Min( ( BR + ARS ) ,AMS ) - Min( CRS ,FirstVNF_Mem ) ) ,CRS ) ,( Max( ( RRS * MRS ),( ARS - FirstVNF_Mem_Server ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( DS ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( MUR,RRSe ) )", "obj1": 0.769811320754717, "obj2": 0.16316010640929227}, {"determining": "( ( ( Min( MRS ,( Min( Max( ( FirstVNF_CPU_Server / BR ),Const ) ,Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM_Server ) ) - ( Const / Const ) ) ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) ) ) ) * ( Const + ( ( BR / FirstVNF_RAM_Server ) - BR ) ) )", "choosing": "( ( ( DS / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( MUR / MUR ) )", "obj1": 0.3641509433962264, "obj2": 0.5019816329273878}, {"determining": "( ( CRS - MRS ) / ( ( ( FirstVNF_Mem * DDR ) - AMS ) - Min( DDR ,RRS ) ) )", "choosing": "( ( ( Max( RCSe,DS ) * ( MUM + MLU ) ) * Max( Max( DS,MUC ),RCSe ) ) + MUR )", "obj1": 0.969811320754717, "obj2": 0.006730278872373563}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( AMS - MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( ( CS / Max( MUM,( ( ( RMSe - MUR ) * RMSe ) * Min( MUM ,( MUM / CS ) ) ) ) ) + RRSe ) ) )", "obj1": 0.37169811320754714, "obj2": 0.4985723275626436}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / ( MLU / MUC ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "Min( ( ( ( ( FirstVNF_RAM * PN ) * CRS ) * ( MRS + ( MDR - FirstVNF_Mem ) ) ) + Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( CRS,MRS ) ),FirstVNF_Mem ) ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - ( ( MLU / MUR ) * MUR ) ) / Max( CS,( MLU * Max( DS,Min( ( RMSe + RRSe ) ,RCSe ) ) ) ) )", "obj1": 0.9037735849056604, "obj2": 0.08152680569027597}, {"determining": "( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) )", "choosing": "( Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - ( MLU / MUC ) ) ) )", "obj1": 0.5660377358490566, "obj2": 0.34369614156683675}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * MRS )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / ( RMSe - Min( RRSe ,MUM ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9830188679245283, "obj2": 0.003974755771779307}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,( Min( ACS ,ACS ) / ( RRS / DDR ) ) ) ) ) ) * Max( MRS,( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( ( ( ARS + ACS ) * ( ACS - FirstVNF_Mem_Server ) ) + ( Max( ARS,AMS ) - ( BR + AMS ) ) ) ) ) ) )", "choosing": "( ( ( MLU / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Min( Max( ( RRSe * Min( MLU ,CS ) ),( MUM / MUR ) ) ,Min( Min( RRSe ,MUR ) ,MUR ) ) )", "obj1": 0.9622641509433962, "obj2": 0.008145273460998768}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( FirstVNF_RAM / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) )", "choosing": "Min( Min( Max( ( CS / Min( MLU ,RCSe ) ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * ( RCSe + DS ) ) ),( Min( RMSe ,Max( Min( MLU ,CS ),( RMSe / MUC ) ) ) + MUC ) ) )", "obj1": 0.9905660377358491, "obj2": 0.0022054446298258278}, {"determining": "Max( MRS,( Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( ( ( ARS + ACS ) * ( Const + ( ( BR / FirstVNF_RAM_Server ) - BR ) ) ) + ( Max( ARS,AMS ) - ( BR + AMS ) ) ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS + CS ) ) + Min( Min( CS ,( RMSe - ( RCSe - ( Min( RMSe ,MUC ) + MUC ) ) ) ) ,DS ) )", "obj1": 0.5075471698113208, "obj2": 0.38448775876288593}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * ( RCSe + DS ) ) ),( Min( RMSe ,Max( Min( MLU ,CS ),( RMSe / MUC ) ) ) + MUC ) ) )", "obj1": 0.9905660377358491, "obj2": 0.0022054446298258278}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "Max( Min( Min( ( Min( ( BR + ARS ) ,AMS ) - Min( CRS ,FirstVNF_Mem ) ) ,CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ),( ( Const / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( MLU * DS ) )", "obj1": 0.0830188679245283, "obj2": 0.7922595871699566}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server * ( DDR - BR ) ) ) ,( FirstVNF_Mem_Server * DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( Max( DS,( ( MUR * CS ) * ( MLU - MUC ) ) ),MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "( ( MDR / FirstVNF_Mem ) * ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( RRSe * RRSe ) )", "obj1": 0.9830188679245283, "obj2": 0.003974755771779307}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( Const + ( ( ( Max( Const,( DDR + FirstVNF_RAM_Server ) ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) - BR ) ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( RMSe - ( RCSe - ( MUC - MUM ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.9641509433962264, "obj2": 0.0077355139624761225}, {"determining": "( ( CRS - MRS ) / ( ( Min( FirstVNF_RAM ,BR ) - AMS ) - Min( DDR ,RRS ) ) )", "choosing": "( ( ( Max( RCSe,DS ) * ( MUM + MLU ) ) * ( ( MUR - RMSe ) * ( MUR * CS ) ) ) + MUR )", "obj1": 0.9679245283018868, "obj2": 0.007060946425910447}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,( Min( ACS ,ACS ) / ( RRS / DDR ) ) ) ) ) ) * Max( ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),ACS ) / FirstVNF_CPU_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( MLU / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Min( Max( ( RRSe * Min( MLU ,CS ) ),( MUM / MUR ) ) ,Min( Min( DS ,MUR ) ,MUR ) ) )", "obj1": 0.9867924528301887, "obj2": 0.0030910362983060597}, {"determining": "( ( CRS - MRS ) / ( ( ( ( Max( Min( MRS ,MRS ),ACS ) / FirstVNF_CPU_Server ) * DDR ) - AMS ) - Min( DDR ,RRS ) ) )", "choosing": "( ( ( Max( RCSe,DS ) * ( MUM + MLU ) ) * Max( Max( DS,MUC ),RCSe ) ) + ( RMSe / ( RMSe - Min( Min( RMSe ,MUC ) ,DS ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.0030910362983060597}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( Const + ( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,ACS ) / ( RRS / DDR ) ) + ( ( ( ARS + ACS ) * ( MRS * ARS ) ) + ( MDR / RRS ) ) ) ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - RRSe ) ,MUC ) + ( MUR + DS ) ),RRSe ) )", "obj1": 0.9849056603773585, "obj2": 0.0035541542204333564}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - Min( ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),ACS ) / FirstVNF_CPU_Server ) ,Min( ARS ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( ( ( RRSe / ( MLU - RMSe ) ) + Max( MLU,MUR ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( Max( MLU,( Max( DS,( ( RMSe * CS ) * ( MLU - MUC ) ) ) * Min( ( CS / Min( MLU ,RCSe ) ) ,( ( CS - MUR ) - ( CS / RCSe ) ) ) ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9660377358490566, "obj2": 0.0072846325847856575}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * ( Const + Max( Const,( BR - BR ) ) ) )", "choosing": "( ( ( MUM / RMSe ) * ( ( Min( Max( MUR,MUR ) ,( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) ) - MLU ) / ( MUC + MLU ) ) ) + Max( ( Min( ( Max( ( ( CS / MUM ) / ( RRSe - CS ) ),( ( CS / MUR ) * Max( MUR,MUC ) ) ) - ( ( CS / MUR ) * Max( MUR,MUC ) ) ) ,MUC ) + ( MUR + DS ) ),RRSe ) )", "obj1": 0.9849056603773585, "obj2": 0.0035541542204333564}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - Max( FirstVNF_CPU,ARS ) ) ) ) * Max( ( ( ( ( ( ( FirstVNF_RAM * PN ) * CRS ) * ( MRS + ( MDR - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) + ( PN / BR ) ) * ( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_Mem ) ),ACS ) / FirstVNF_CPU_Server ) + FirstVNF_CPU ) ),( Max( MRS,ACS ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( MLU + Min( Max( ( MUM - ( RRSe / RRSe ) ),RMSe ) ,( MUC - MUR ) ) ) / Max( RCSe,RRSe ) ) )", "obj1": 0.9660377358490566, "obj2": 0.0072846325847856575}, {"determining": "( ( RRS * CRS ) - ( Min( ACS ,FirstVNF_CPU_Server ) * ( ( MDR + BR ) + ( CRS * RRS ) ) ) )", "choosing": "Max( ( MUM / Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,( Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ,( CRS - Const ) ) ) * ACS ) ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( ( BR - BR ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUR - ( CS - Min( Max( Max( Max( MUR,DS ),CS ),MUC ) ,CS ) ) ) * ( ( RMSe - ( ( ( ( MUC / RCSe ) + DS ) * ( ( DS + RCSe ) * ( RRSe / MUM ) ) ) * MUR ) ) - Min( MUR ,MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,CRS ) + ( Max( ( RRS * MRS ),( ARS - FirstVNF_Mem_Server ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RRSe - MUM ) - ( CS - Min( Max( Max( Max( RRSe,DS ),CS ),DS ) ,CS ) ) ) * RRSe ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / ( ( ( CRS - MRS ) + DDR ) / FirstVNF_RAM ) ) / Max( ACS,( BR - BR ) ) ) ) ,Min( DDR ,ACS ) )", "choosing": "Min( ( ( RMSe / MUR ) + DS ) ,Min( ( RRSe / MUR ) ,( Min( ( ( MUM / MUC ) / ( ( RMSe * DS ) + MLU ) ) ,RRSe ) * Min( CS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * PN ) * CRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( CS * RRSe ) ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_CPU ) - Min( Const ,( ( MRS + FirstVNF_CPU_Server ) - ( MDR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + MUC ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - ( BR + MRS ) )", "choosing": "( ( MUC + ( DS / MUM ) ) * ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( BR - Min( ( ( FirstVNF_RAM_Server * DDR ) / CRS ) ,AMS ) ),( Const - MRS ) ),ACS ) + FirstVNF_CPU_Server ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( MUR,MUR ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}]}