{"1": [{"determining": "Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS / ARS ) )", "choosing": "( Max( RRSe,MUC ) * ( RCSe / DS ) )", "obj1": 0.1320754716981132, "obj2": 0.7679918210236351}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( RCSe + MUR ) + ( MUM * RMSe ) )", "obj1": 0.42452830188679247, "obj2": 0.5107182503193833}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Min( CS ,RCSe ) / ( RMSe - MUM ) )", "obj1": 0.7132075471698113, "obj2": 0.27611375063396926}, {"determining": "( ( MDR + MDR ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( MUR + MUR ) * Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( PN + FirstVNF_CPU ),( Const + AMS ) )", "choosing": "( ( DS + CS ) * Max( MUC,DS ) )", "obj1": 0.5113207547169811, "obj2": 0.4527190466394442}, {"determining": "( Max( ACS,FirstVNF_Mem ) / ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + MUC ) * ( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "Max( ( RMSe - DS ),( MUC / DS ) )", "obj1": 0.11509433962264151, "obj2": 0.774687751500611}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( RMSe / MUR ) - ( DS - MLU ) )", "obj1": 0.3905660377358491, "obj2": 0.5363622800660739}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.39245283018867927, "obj2": 0.5110067691043119}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,Min( PN ,PN ) ) + Min( Max( Const,FirstVNF_RAM_Server ) ,Min( CRS ,RRS ) ) )", "choosing": "Max( ( ( MUC * DS ) * ( MUM - CS ) ),( ( DS - MUC ) * Max( MUC,MUM ) ) )", "obj1": 0.44339622641509435, "obj2": 0.45851311855433635}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Max( AMS,RRS ) / ( BR + DDR ) ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( MUR + DS ) + MUC ) )", "obj1": 0.5867924528301887, "obj2": 0.3355333022637175}, {"determining": "( Min( CRS ,AMS ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}, {"determining": "( ( FirstVNF_RAM_Server + RRS ) + ( CRS / MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( Min( RMSe ,RMSe ) * Max( RRSe,RCSe ) ) )", "obj1": 0.29245283018867924, "obj2": 0.6570405557154982}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server / ACS ) ) + ( Min( CRS ,PN ) / ( FirstVNF_Mem_Server + ARS ) ) )", "choosing": "Max( ( MUR + Min( MUC ,RRSe ) ),( Max( CS,RCSe ) - MLU ) )", "obj1": 0.4320754716981132, "obj2": 0.5052407396570108}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( RRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( MUM,CS ) ) )", "obj1": 0.35094339622641507, "obj2": 0.5389241394137455}, {"determining": "Min( ( ( FirstVNF_Mem_Server / DDR ) - ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( BR / MRS ) ) )", "choosing": "Min( ( Max( RMSe,RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.6031099476521541}, {"determining": "( ( ( FirstVNF_Mem_Server * ACS ) - ( FirstVNF_Mem_Server / CRS ) ) / ( ( FirstVNF_RAM / CRS ) / Min( RRS ,RRS ) ) )", "choosing": "( ( MUC / MLU ) / Max( ( RRSe + MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.2358490566037736, "obj2": 0.6789067363807962}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUC ) ,( RCSe + DS ) )", "obj1": 0.5566037735849056, "obj2": 0.3624940870037373}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU_Server ) * ( MRS / MDR ) ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( ( ( MDR + MRS ) + ( ACS - MRS ) ) * Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( FirstVNF_Mem * BR ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - RCSe ) / ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( Min( FirstVNF_CPU_Server ,BR ) * ( CRS / FirstVNF_CPU_Server ) ) ) - Max( Max( ( ACS + FirstVNF_Mem ),Min( RRS ,FirstVNF_Mem ) ),( ( AMS / ACS ) * Max( CRS,MRS ) ) ) )", "choosing": "( ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,Const ),( MRS - ACS ) ) + ( ( FirstVNF_RAM * MRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / Min( Min( ( FirstVNF_CPU - AMS ) ,( BR + PN ) ) ,( Max( ARS,FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU / RMSe ) + ( MUC * MUC ) ) ,Min( Min( RMSe ,MUR ) ,( CS * RCSe ) ) ) * Max( ( ( RCSe / MUC ) - ( DS - RRSe ) ),Min( ( MUM / RRSe ) ,Max( CS,CS ) ) ) )", "obj1": 0.6924528301886792, "obj2": 0.28659533006115967}, {"determining": "Min( ( Max( ( ARS - DDR ),Max( MRS,AMS ) ) * Max( Max( MRS,FirstVNF_CPU ),Max( Const,Const ) ) ) ,( ( ( MDR * FirstVNF_CPU_Server ) * Max( MRS,MRS ) ) - ( ( FirstVNF_CPU + BR ) / ( BR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC / RRSe ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( MRS,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) - Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( FirstVNF_Mem ,CRS ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,MUC ) ,Min( RRSe ,MUR ) ) ,( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUR ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) )", "obj1": 0.2509433962264151, "obj2": 0.6788421896440237}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( ARS / ARS ) ) / ( Max( CRS,FirstVNF_RAM ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) / Max( ( ( ACS + PN ) * ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,MRS ) + Max( FirstVNF_CPU_Server,MDR ) ) ) )", "choosing": "Min( Min( MUR ,( ( MLU - RCSe ) / RCSe ) ) ,Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),Max( DS,RMSe ) ) ) )", "obj1": 0.7962264150943397, "obj2": 0.13731721947997294}, {"determining": "( Min( Min( DDR ,( Const + PN ) ) ,FirstVNF_RAM ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( Min( MUC ,MUC ),( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,RMSe ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( CS * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7584018956611637}, {"determining": "( ( ( ( ACS + BR ) - ( BR / DDR ) ) + Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_RAM / AMS ),( CRS + MDR ) ) + Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( RMSe,( DS - RCSe ) ),( DS + Min( ( DS * RRSe ) ,MLU ) ) )", "obj1": 0.42641509433962266, "obj2": 0.508490847910814}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) / ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( MUR ,RCSe ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5951483456452916}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( BR - FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_Mem ) ) ) - ( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( DS - MLU ) - ( DS + RMSe ) ),Max( Min( MLU ,MUR ),( MUM - RMSe ) ) ) / ( Max( ( CS * DS ),Min( MLU ,MUR ) ) + Min( ( DS * MUM ) ,( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( MRS / MDR ) ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( ( ( MDR + MRS ) + ( ACS - MRS ) ) * Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( FirstVNF_Mem * BR ) ) ) ) + MDR ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Min( ( MUC + MLU ) ,Max( RCSe,RRSe ) ) ,( ( MLU - RCSe ) / ( CS * MUR ) ) ) ) * Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + MDR ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( MUR + MUR ) * Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.11132075471698114, "obj2": 0.7702845105397901}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),Max( DS,RMSe ) ) ) )", "obj1": 0.7962264150943397, "obj2": 0.13731721947997294}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( Min( CS ,RCSe ) / ( RCSe - MUM ) )", "obj1": 0.7245283018867924, "obj2": 0.2555217126301878}, {"determining": "Max( MDR,( AMS / ARS ) )", "choosing": "( Max( RRSe,( ( MUR + MUC ) * ( DS - RRSe ) ) ) * ( RCSe / RMSe ) )", "obj1": 0.1811320754716981, "obj2": 0.740763420391977}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.47924528301886793, "obj2": 0.39594195466211246}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( ( ( FirstVNF_CPU + BR ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( ( ( MDR + MRS ) * ( ACS - MRS ) ) * Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( FirstVNF_Mem * BR ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) + ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Min( ( MUC + MLU ) ,Max( RCSe,RRSe ) ) ,RCSe ) )", "obj1": 0.8867924528301887, "obj2": 0.11631022890074515}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,Min( PN ,PN ) ) + Min( Max( Const,FirstVNF_RAM_Server ) ,Min( CRS ,RRS ) ) )", "choosing": "Max( ( ( MUC * DS ) * ( MUM - CS ) ),( ( DS - MUC ) * Max( MUC,MUM ) ) )", "obj1": 0.44339622641509435, "obj2": 0.45851311855433635}, {"determining": "( ( ( FirstVNF_Mem_Server * ACS ) - ( FirstVNF_Mem_Server / CRS ) ) / ( ( FirstVNF_RAM / CRS ) / Min( RRS ,RRS ) ) )", "choosing": "( ( MUC / MLU ) / Max( ( RRSe + MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.2358490566037736, "obj2": 0.6789067363807962}, {"determining": "( ( ACS - DDR ) - Min( ARS ,Const ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9509433962264151, "obj2": 0.02130310006825133}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUC ) ,( RCSe + DS ) )", "obj1": 0.5377358490566038, "obj2": 0.3839846033191195}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( MUR + DS ) * MUC ) )", "obj1": 0.8415094339622642, "obj2": 0.13533009877524924}, {"determining": "Min( ( ( Max( Min( AMS ,Const ),( MRS - ACS ) ) + ( ( FirstVNF_RAM * MRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / Min( Min( ( FirstVNF_CPU - AMS ) ,( BR + PN ) ) ,( Max( ARS,FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem_Server ) ) ) ) ,Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( Min( ( Min( ( ( MLU / RMSe ) + ( MUC * MUC ) ) ,Min( Min( RMSe ,MUR ) ,( CS * RCSe ) ) ) * Max( ( ( RCSe / MUC ) - ( DS - RRSe ) ),Min( ( MUM / RRSe ) ,Max( CS,CS ) ) ) ) ,MLU ) / ( MUM / MUC ) )", "obj1": 0.6886792452830188, "obj2": 0.28645271526353266}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Min( CS ,RCSe ) / ( RMSe - MUM ) )", "obj1": 0.9188679245283019, "obj2": 0.06928179548763631}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.39245283018867927, "obj2": 0.5110067691043119}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Max( AMS,RRS ) / ( BR + DDR ) ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( MUR + DS ) + MUC ) )", "obj1": 0.5867924528301887, "obj2": 0.3355333022637175}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Min( CS ,RCSe ) / ( RMSe - MUM ) )", "obj1": 0.9150943396226415, "obj2": 0.06943460114545952}, {"determining": "( Min( Min( DDR ,( Const + PN ) ) ,FirstVNF_RAM ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( Min( MUC ,MUC ),( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,RMSe ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( CS * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7584018956611637}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUC ) ,( RCSe + DS ) )", "obj1": 0.5566037735849056, "obj2": 0.3624940870037373}, {"determining": "( ( FirstVNF_RAM_Server + RRS ) + ( Max( Max( ( ACS + FirstVNF_Mem ),Min( RRS ,FirstVNF_Mem ) ),( ( AMS / ACS ) * Max( CRS,MRS ) ) ) / MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) )", "obj1": 0.2943396226415094, "obj2": 0.6236318776691897}, {"determining": "Min( ( ACS / BR ) ,( Max( Max( AMS,Const ),DDR ) / Min( Max( Const,FirstVNF_RAM_Server ) ,Min( CRS ,RRS ) ) ) )", "choosing": "Max( Max( ( ( MLU * DS ) * ( MUM - CS ) ),( ( DS - MUC ) * Max( MUC,MUM ) ) ),( ( Min( MUC ,DS ) + ( RMSe * RMSe ) ) - ( ( MUC * MLU ) + ( MUC * RCSe ) ) ) )", "obj1": 0.4169811320754717, "obj2": 0.47841769453649496}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( RRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( MUM,CS ) ) )", "obj1": 0.35094339622641507, "obj2": 0.5389241394137455}, {"determining": "( Min( CRS ,AMS ) / Max( RRS,Const ) )", "choosing": "( ( RRSe / MUM ) * Max( ( MUR / CS ),( RCSe - MLU ) ) )", "obj1": 0.38113207547169814, "obj2": 0.5249907339641596}, {"determining": "( Min( CRS ,AMS ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}, {"determining": "( ( ( PN / ARS ) - ( Const * DDR ) ) / Max( Min( ACS ,CRS ),( ACS / PN ) ) )", "choosing": "Min( Max( ( MUC * MUC ),( MLU * RRSe ) ) ,( Max( CS,RCSe ) + ( CS * MUM ) ) )", "obj1": 0.9811320754716981, "obj2": 0.007482417767263771}, {"determining": "( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( MRS,FirstVNF_CPU_Server ) / ( RRS + ( CRS + ( PN * FirstVNF_RAM_Server ) ) ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) - Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) )", "choosing": "( ( Min( Min( RMSe ,MUC ) ,Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / DS ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.6742229237113996}, {"determining": "( ( FirstVNF_RAM_Server + RRS ) + ( CRS / MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( Min( RMSe ,RMSe ) * Max( RRSe,RCSe ) ) )", "obj1": 0.29245283018867924, "obj2": 0.6570405557154982}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( Max( Const,PN ),( RRS * CRS ) ),RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.3264150943396226, "obj2": 0.541574286309587}, {"determining": "( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( MRS,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) - Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( FirstVNF_Mem ,CRS ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,MUC ) ,Min( RRSe ,MUR ) ) ,( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUR ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) )", "obj1": 0.2509433962264151, "obj2": 0.6788421896440237}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) / ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( MUR ,RCSe ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5951483456452916}, {"determining": "( ( Max( Min( AMS ,Const ),( MRS - ACS ) ) + ( ( FirstVNF_RAM * MRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( MRS / MDR ) ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( ( ( MDR + MRS ) * ( ACS - MRS ) ) * Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( FirstVNF_Mem * BR ) ) ) ) )", "choosing": "( ( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) + ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Min( ( MUC + MLU ) ,Max( RCSe,RRSe ) ) ,( ( MLU - RCSe ) / ( CS * MUR ) ) ) ) * Max( ( ( RCSe / MUC ) - ( DS - RRSe ) ),Min( ( MUM / RMSe ) ,Max( CS,CS ) ) ) )", "obj1": 0.7, "obj2": 0.2787349761442281}, {"determining": "( ( Max( Min( AMS ,Const ),( MRS - ACS ) ) + ( ( FirstVNF_RAM * MRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / Min( Min( ( FirstVNF_CPU - AMS ) ,( BR + PN ) ) ,( Max( ARS,FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU / RMSe ) + ( MUC * MUC ) ) ,Min( Min( RMSe ,MUR ) ,( CS * RCSe ) ) ) * Max( ( ( RCSe / MUC ) - ( DS - RRSe ) ),Min( ( MUM / RRSe ) ,Max( CS,CS ) ) ) )", "obj1": 0.7094339622641509, "obj2": 0.258541425902472}, {"determining": "( ( ( ( MDR + MRS ) * ( ACS - MRS ) ) * Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( FirstVNF_Mem * BR ) ) ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( ( ( MLU - RCSe ) / ( CS / MUR ) ) - MLU ) )", "obj1": 0.42452830188679247, "obj2": 0.47381932186150194}, {"determining": "Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS / ARS ) )", "choosing": "( Max( RRSe,MUC ) * ( RCSe / DS ) )", "obj1": 0.1320754716981132, "obj2": 0.7679918210236351}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "Min( ( Max( RMSe,RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.6031099476521541}, {"determining": "( ( ACS * Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUR + RCSe ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9962264150943396, "obj2": 0.0014265573066122262}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( Max( CS,MUR ) ,( RCSe + DS ) )", "obj1": 0.5849056603773585, "obj2": 0.3474215556665058}, {"determining": "Min( ( ( FirstVNF_Mem_Server / DDR ) - ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( BR / MRS ) ) )", "choosing": "Min( ( Max( RMSe,RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.6031099476521541}, {"determining": "( Max( ACS,FirstVNF_Mem ) / ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + MUC ) * ( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU_Server ) * ( MRS / MDR ) ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( ( ( MDR + MRS ) + ( ACS - MRS ) ) * Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( FirstVNF_Mem * BR ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - RCSe ) / ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( Min( FirstVNF_CPU_Server ,BR ) * ( CRS / FirstVNF_CPU_Server ) ) ) - Max( Max( ( ACS + FirstVNF_Mem ),Min( RRS ,FirstVNF_Mem ) ),( ( AMS / ACS ) * Max( CRS,MRS ) ) ) )", "choosing": "( ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ARS - DDR ),Max( MRS,AMS ) ) * Max( Max( MRS,FirstVNF_CPU ),Max( Const,Const ) ) ) ,( ( ( MDR * FirstVNF_CPU_Server ) * Max( MRS,MRS ) ) - ( ( FirstVNF_CPU + BR ) / ( BR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC / RRSe ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( ARS / ARS ) ) / ( Max( CRS,FirstVNF_RAM ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) / Max( ( ( ACS + PN ) * ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,MRS ) + Max( FirstVNF_CPU_Server,MDR ) ) ) )", "choosing": "Min( Min( MUR ,( ( MLU - RCSe ) / RCSe ) ) ,Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( BR - FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_Mem ) ) ) - ( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( DS - MLU ) - ( DS + RMSe ) ),Max( Min( MLU ,MUR ),( MUM - RMSe ) ) ) / ( Max( ( CS * DS ),Min( MLU ,MUR ) ) + Min( ( DS * MUM ) ,( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( ARS / ARS ) ) / ( Max( CRS,FirstVNF_RAM ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) / Max( ( Min( CRS ,PN ) * ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,MRS ) + Max( FirstVNF_CPU_Server,MDR ) ) ) )", "choosing": "Min( Min( MUR ,( ( MLU - Max( ( MUR + Min( MUC ,RRSe ) ),( Max( CS,RCSe ) - MLU ) ) ) / RCSe ) ) ,Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( ARS / ARS ) ) / ( Max( CRS,FirstVNF_RAM ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) / Max( ( ( ACS + PN ) * ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,MRS ) + Max( FirstVNF_CPU_Server,MDR ) ) ) )", "choosing": "Max( ( MUR + Min( MUC ,RRSe ) ),( Max( CS,RCSe ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( Min( FirstVNF_CPU_Server ,BR ) * ( CRS / FirstVNF_CPU_Server ) ) ) - Max( Max( ( ACS + FirstVNF_Mem ),Min( Const ,FirstVNF_Mem ) ),( ( AMS / ACS ) * Max( CRS,MRS ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) * ( DS - RRSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Min( RRS ,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server - CRS ) / Max( FirstVNF_RAM,ARS ) ) )", "choosing": "Min( ( ( MUC - MUC ) + Max( MUR,MLU ) ) ,( ( MLU * RMSe ) / ( RRSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Max( ACS,FirstVNF_Mem ) / ( MDR - FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( MRS / MDR ) ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( ( ( MDR + MRS ) + ( ACS - MRS ) ) * Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( FirstVNF_Mem * BR ) ) ) ) + MDR ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Min( ( MUC + MLU ) ,Max( RCSe,RRSe ) ) ,( ( MLU - RCSe ) / ( CS * MUR ) ) ) ) * Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,BR ) - Min( ( AMS - ACS ) ,CRS ) )", "choosing": "( ( MLU / DS ) - Min( RCSe ,RMSe ) )", "obj1": 0.10943396226415095, "obj2": 0.7855564371972491}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / Max( ( MUC + RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / RCSe ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7811320754716982, "obj2": 0.11102808604624954}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Min( CS ,RCSe ) / ( RCSe - MUM ) )", "obj1": 0.9150943396226415, "obj2": 0.06484683770263899}, {"determining": "( ( ( ARS + RRS ) / ( BR * ACS ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) * Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe + MUR ) - ( DS - DS ) ) ) + Max( MUC,Max( Max( MUR,MLU ),Max( DS,RMSe ) ) ) )", "obj1": 0.7452830188679245, "obj2": 0.17696186836907504}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( FirstVNF_Mem_Server * ACS ) - ( FirstVNF_RAM / CRS ) ) ) ) )", "choosing": "Min( ( CS + MUR ) ,RMSe )", "obj1": 0.6377358490566037, "obj2": 0.2829540938436493}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.47924528301886793, "obj2": 0.39594195466211246}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( MUR + DS ) + MUC ) )", "obj1": 0.690566037735849, "obj2": 0.2271274787143957}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUC ) ,( RCSe + DS ) )", "obj1": 0.5377358490566038, "obj2": 0.3839846033191195}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU_Server ) * ( MRS / MDR ) ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.4509433962264151, "obj2": 0.43400846851054564}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( Max( RRS,Const ) + Min( ACS ,Min( Min( DDR ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.19811320754716982, "obj2": 0.6987498872353973}, {"determining": "( ( FirstVNF_RAM_Server + RRS ) + ( Max( ( FirstVNF_RAM_Server + ARS ),( ( AMS / ACS ) * Max( CRS,MRS ) ) ) / MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) / ( Min( MUR ,RCSe ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.2660377358490566, "obj2": 0.6328550600217336}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( Min( Const ,FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "Min( ( CS + DS ) ,( RCSe + Min( DS ,RRSe ) ) )", "obj1": 0.7169811320754716, "obj2": 0.2017425249846429}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Max( AMS,RRS ) / ( BR + DDR ) ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( MUR + DS ) + MUC ) )", "obj1": 0.5867924528301887, "obj2": 0.3355333022637175}, {"determining": "( Min( ACS ,DDR ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( MUR / MLU ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.9339622641509434, "obj2": 0.029574570710345333}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUC ) ,( RCSe + DS ) )", "obj1": 0.5566037735849056, "obj2": 0.3624940870037373}, {"determining": "( ( ( FirstVNF_Mem_Server * ACS ) - ( FirstVNF_Mem_Server / CRS ) ) / ( ( FirstVNF_RAM / CRS ) / Min( RRS ,RRS ) ) )", "choosing": "( ( MUC / MLU ) / Max( ( RRSe + MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.2358490566037736, "obj2": 0.6789067363807962}, {"determining": "( ( ( FirstVNF_Mem_Server * ACS ) - ( FirstVNF_RAM / CRS ) ) / ( ( FirstVNF_RAM / CRS ) * Min( DDR ,RRS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 0.2849056603773585, "obj2": 0.6099101242317562}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( RRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( MUM,CS ) ) )", "obj1": 0.35094339622641507, "obj2": 0.5389241394137455}, {"determining": "( Min( CRS ,AMS ) / Max( RRS,Const ) )", "choosing": "( ( RRSe / MUM ) * Max( ( MUR / CS ),( RCSe - MLU ) ) )", "obj1": 0.38113207547169814, "obj2": 0.5249907339641596}, {"determining": "( ( Const + PN ) + Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Max( ( CS / CS ),MUM )", "obj1": 0.4358490566037736, "obj2": 0.45562019396241343}, {"determining": "( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( MRS,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) - Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) )", "choosing": "( ( Min( Min( RMSe ,MUC ) ,Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUR ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) )", "obj1": 0.25471698113207547, "obj2": 0.6642315270843768}, {"determining": "Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( Const + PN ) )", "choosing": "( Max( ( ( Max( Min( MUC ,MUC ),( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,RMSe ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ),MUC ) * ( RCSe / DS ) )", "obj1": 0.18679245283018867, "obj2": 0.7216978263627346}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( Max( Const,PN ),( RRS * CRS ) ),RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.3264150943396226, "obj2": 0.541574286309587}, {"determining": "( ( MRS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Min( CS ,RCSe ) / ( RRSe - MUM ) )", "obj1": 0.9207547169811321, "obj2": 0.06445669249828685}, {"determining": "Max( MDR,( RRS / ( MRS - MRS ) ) )", "choosing": "( Max( RRSe,Min( ( Max( RMSe,RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) ) ) * ( RCSe / DS ) )", "obj1": 0.16226415094339622, "obj2": 0.7497332041532793}, {"determining": "Max( MDR,( AMS / ARS ) )", "choosing": "( Max( RRSe,( ( MUR + MUC ) * ( DS - RRSe ) ) ) * ( RCSe / RMSe ) )", "obj1": 0.1811320754716981, "obj2": 0.740763420391977}, {"determining": "( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( MRS,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Min( ( ( Max( Min( AMS ,Const ),( MRS - ACS ) ) + ( ( FirstVNF_RAM * MRS ) - Min( DDR ,FirstVNF_Mem ) ) ) / Min( Min( ( FirstVNF_CPU - AMS ) ,( BR + PN ) ) ,( Max( ARS,FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem_Server ) ) ) ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) )", "choosing": "( ( Min( Min( RMSe ,MUC ) ,Min( RRSe ,MUR ) ) / ( Min( ( ( MLU / RMSe ) + ( MUC * MUC ) ) ,Min( Min( RMSe ,MUR ) ,( CS * RCSe ) ) ) * Max( ( ( RCSe / MUC ) - ( DS - RRSe ) ),Min( ( MUM / RRSe ) ,Max( CS,CS ) ) ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUR ) ) + ( ( RCSe - MLU ) - Min( CS ,RRSe ) ) ) )", "obj1": 0.7056603773584905, "obj2": 0.2221086776843577}, {"determining": "( ( ACS - DDR ) - Min( ARS ,Const ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9509433962264151, "obj2": 0.02130310006825133}, {"determining": "( Min( Min( DDR ,( Const + PN ) ) ,FirstVNF_RAM ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( Min( MUC ,MUC ),( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,RMSe ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( CS * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7584018956611637}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) / ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( MUR ,RCSe ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5951483456452916}, {"determining": "( Max( Min( DDR ,( Const + FirstVNF_CPU_Server ) ),AMS ) * Max( ACS,RRS ) )", "choosing": "( ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.11886792452830189, "obj2": 0.758450161071984}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "( ( ( ( MDR + MRS ) * ( ACS - MRS ) ) * Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( FirstVNF_Mem * BR ) ) ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( ( ( MLU - RCSe ) / ( CS / MUR ) ) - MLU ) )", "obj1": 0.42452830188679247, "obj2": 0.47381932186150194}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.11132075471698114, "obj2": 0.7702845105397901}, {"determining": "( Min( CRS ,AMS ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}, {"determining": "( Min( CRS ,AMS ) / ( ( ACS * Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) ) - ( DDR - PN ) ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MUR ) - Max( RRSe,CS ) ) )", "obj1": 0.969811320754717, "obj2": 0.01257208055226328}, {"determining": "( Min( Min( DDR ,( FirstVNF_CPU + PN ) ) ,( ( MDR + MRS ) * ( ACS - MRS ) ) ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,RMSe ) ) ) + ( ( ( ( ( MLU - RCSe ) / ( CS / MUR ) ) - MLU ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.3169811320754717, "obj2": 0.5679664627311649}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.39245283018867927, "obj2": 0.5110067691043119}, {"determining": "( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( MRS,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) - Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( FirstVNF_Mem ,CRS ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,MUC ) ,Min( RRSe ,MUR ) ) ,( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUR ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) )", "obj1": 0.2509433962264151, "obj2": 0.6788421896440237}, {"determining": "Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "Min( ( Max( RMSe,RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.6031099476521541}, {"determining": "( Min( CRS ,AMS ) / Max( AMS,Const ) )", "choosing": "( ( RRSe / RRSe ) * Max( ( RRSe / CS ),( RCSe - MLU ) ) )", "obj1": 0.4056603773584906, "obj2": 0.492649226808565}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.40943396226415096, "obj2": 0.4880281449557928}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( Max( CS,MUR ) ,( RCSe + DS ) )", "obj1": 0.5849056603773585, "obj2": 0.3474215556665058}, {"determining": "( Min( FirstVNF_Mem ,Const ) + Min( Max( Const,FirstVNF_RAM_Server ) ,Min( CRS ,RRS ) ) )", "choosing": "Max( ( Min( CS ,RCSe ) * ( MUM - CS ) ),( ( DS - MUC ) * Max( MUC,MUM ) ) )", "obj1": 0.39811320754716983, "obj2": 0.5040600792860525}, {"determining": "( ( ( PN / ARS ) - ( Const * DDR ) ) / Max( Min( ACS ,CRS ),( ACS / PN ) ) )", "choosing": "( ( MUC / RRSe ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.9886792452830189, "obj2": 0.0034311963735491995}, {"determining": "Min( ( ACS / BR ) ,( Max( Max( AMS,Const ),DDR ) / Min( Max( Const,FirstVNF_RAM_Server ) ,Min( CRS ,RRS ) ) ) )", "choosing": "Max( Max( ( ( MLU * DS ) * ( MUM - CS ) ),( ( DS - MUC ) * Max( MUC,MUM ) ) ),( ( Min( MUC ,DS ) + ( RMSe * RMSe ) ) - ( ( MUC * MLU ) + ( MUC * RCSe ) ) ) )", "obj1": 0.4169811320754717, "obj2": 0.47841769453649496}, {"determining": "Min( ( ( FirstVNF_Mem_Server / DDR ) - ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( BR / MRS ) ) )", "choosing": "Min( ( Max( RMSe,RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.6031099476521541}, {"determining": "( ( MRS * Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) ) - ( DDR - PN ) )", "choosing": "Min( ( ( MUC - MUC ) + Max( MUR,MLU ) ) ,( ( MLU * RMSe ) / ( RRSe - MUC ) ) )", "obj1": 0.9754716981132076, "obj2": 0.009628296825189366}], "4": [{"determining": "( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,FirstVNF_Mem ) / ( MDR - FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,BR ) - Min( ( AMS - ACS ) ,CRS ) )", "choosing": "( ( MLU / DS ) - Min( RCSe ,RMSe ) )", "obj1": 0.10943396226415095, "obj2": 0.7855564371972491}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / Max( ( MUC + RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / RCSe ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7811320754716982, "obj2": 0.11102808604624954}, {"determining": "( PN - ( DDR * PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( RRSe * RCSe ) - Min( DS ,( ( MUC / CS ) + ( RMSe / MUR ) ) ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9018867924528302, "obj2": 0.038721697834571356}, {"determining": "( ( ( ARS + RRS ) / ( BR * ACS ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) * Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe + MUR ) - ( DS - DS ) ) ) + Max( MUC,Max( Max( MUR,MLU ),Max( DS,RMSe ) ) ) )", "obj1": 0.7452830188679245, "obj2": 0.17696186836907504}, {"determining": "( ( Min( Max( ( ( ( ( FirstVNF_Mem * BR ) - Max( PN,AMS ) ) + ( ( FirstVNF_CPU + ACS ) * ( MRS + Const ) ) ) * Max( ( ( DDR - DDR ) - Max( BR,FirstVNF_RAM ) ),( ( FirstVNF_CPU * ARS ) / Max( RRS,CRS ) ) ) ),( Max( Max( ( FirstVNF_Mem_Server * AMS ),( MDR * PN ) ),Min( ( CRS + Const ) ,( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) + ( ( ( Const - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ,( Max( ( Min( Min( AMS ,FirstVNF_Mem_Server ) ,( MRS + AMS ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) + Max( RRS,RRS ) ) ),( Min( Max( ACS,ACS ) ,( CRS + PN ) ) + ( ( MRS / Const ) * Max( DDR,FirstVNF_CPU_Server ) ) ) ) * ( ( Min( Max( AMS,PN ) ,( FirstVNF_Mem / ARS ) ) / ( ( ACS / PN ) / Min( PN ,BR ) ) ) + Min( ( Min( Const ,Const ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) ,( ( MRS - CRS ) - Min( FirstVNF_CPU ,ARS ) ) ) ) ) ) + Max( Min( ( ( Min( Max( ACS,MRS ) ,( BR * CRS ) ) - Max( Min( FirstVNF_RAM ,ARS ),( CRS - FirstVNF_Mem_Server ) ) ) * ( Max( ( DDR + FirstVNF_Mem ),Max( DDR,PN ) ) + ( Max( PN,AMS ) - ( FirstVNF_CPU - DDR ) ) ) ) ,( Min( ( ( BR * CRS ) / ( AMS + MDR ) ) ,( ( ARS * AMS ) - Max( MDR,BR ) ) ) / ( Max( ( FirstVNF_CPU + AMS ),Max( RRS,FirstVNF_CPU_Server ) ) / Max( ( CRS - Const ),( CRS - FirstVNF_CPU ) ) ) ) ),( ( Min( Max( ( MDR * MRS ),Min( AMS ,ACS ) ) ,Min( Max( CRS,Const ) ,( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( MRS,CRS ) ,( FirstVNF_RAM_Server / ACS ) ) * ( ( MDR - PN ) - ( Const / ARS ) ) ) ) * ( Max( ( ( ARS + FirstVNF_Mem_Server ) + ( Const - FirstVNF_RAM ) ),Min( ( DDR + CRS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) / ( ( Min( ARS ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_Mem ) ) - ( ( Const / BR ) / ( BR - FirstVNF_CPU_Server ) ) ) ) ) ) ) - ( ( ( ( ( ( Min( FirstVNF_RAM ,ACS ) / ( RRS / FirstVNF_Mem ) ) - ( ( AMS + ARS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) - ( Max( ( BR * FirstVNF_Mem_Server ),( CRS * CRS ) ) - Max( ( ACS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) + ( ( Max( ( RRS / FirstVNF_Mem_Server ),( PN - DDR ) ) - Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,( ACS * PN ) ) ) - ( ( Min( RRS ,FirstVNF_RAM_Server ) * Min( BR ,FirstVNF_RAM ) ) * Min( ( CRS * FirstVNF_Mem ) ,( DDR * FirstVNF_Mem ) ) ) ) ) / ( ( ( Min( Max( FirstVNF_Mem_Server,AMS ) ,( BR - AMS ) ) / ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU * BR ) ) ) - ( Min( Max( RRS,MDR ) ,( Const - AMS ) ) - ( ( DDR - DDR ) * Max( BR,ACS ) ) ) ) - ( Max( Max( ( Const + FirstVNF_Mem ),Max( FirstVNF_RAM,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) / ( ( ( CRS - ARS ) + ( FirstVNF_Mem_Server - MDR ) ) * Max( ( FirstVNF_CPU_Server / CRS ),( BR + Const ) ) ) ) ) ) - Min( ( ( ( ( ( MDR + MDR ) - Max( RRS,ACS ) ) * ( ( Const * ACS ) / ( ACS - FirstVNF_Mem ) ) ) / Min( ( ( MRS / BR ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( ( ACS + FirstVNF_CPU ) * Min( FirstVNF_RAM ,ARS ) ) ) ) + ( ( ( ( PN / ARS ) - ( RRS - FirstVNF_CPU_Server ) ) * Min( ( DDR / MRS ) ,Max( MRS,RRS ) ) ) / ( ( Min( RRS ,FirstVNF_Mem ) - Max( MDR,CRS ) ) / ( ( FirstVNF_RAM + FirstVNF_Mem ) / ( DDR * FirstVNF_CPU ) ) ) ) ) ,( ( Max( Max( Min( MDR ,DDR ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ),( ( FirstVNF_RAM_Server + ARS ) * Max( MDR,Const ) ) ) - ( ( ( PN / PN ) * Max( FirstVNF_Mem_Server,BR ) ) / Min( Max( ARS,Const ) ,Min( Const ,ACS ) ) ) ) - Min( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - ACS ) / ( FirstVNF_RAM_Server / AMS ) ) ) ,( ( ( FirstVNF_CPU * CRS ) + ( PN - FirstVNF_CPU ) ) + ( Min( PN ,MDR ) + ( AMS - AMS ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - CS ) * ( RRSe - RMSe ) ) * ( ( RCSe - CS ) * ( DS * MUM ) ) ) + ( Max( Max( RRSe,CS ),( DS + RRSe ) ) - ( ( RCSe / CS ) * Min( RMSe ,RRSe ) ) ) ) / Max( ( Max( ( CS - DS ),Max( MUM,RMSe ) ) + ( Min( CS ,MLU ) * ( MUM + RCSe ) ) ),Max( Min( ( MUM - RCSe ) ,( MUR - RRSe ) ),( Max( DS,RRSe ) / ( RMSe / MUR ) ) ) ) ) * ( Max( ( ( ( RRSe + DS ) * ( DS / DS ) ) - ( ( MUM * DS ) - ( DS + MUR ) ) ),( ( ( MUR - MUC ) - ( MUC / MLU ) ) + ( ( MUM - RCSe ) * Max( RMSe,MUM ) ) ) ) + ( ( ( ( CS * MUC ) + Max( CS,RMSe ) ) * ( ( DS - CS ) / ( MUM / RRSe ) ) ) - ( ( ( RMSe + MUR ) + ( DS / MLU ) ) + ( Min( MUC ,RMSe ) / ( MUC * DS ) ) ) ) ) ) / ( ( ( ( Min( ( CS - DS ) ,( RRSe * RCSe ) ) - Max( ( DS + MLU ),( MUC / RMSe ) ) ) + ( ( ( MUM + RRSe ) / Max( MUC,MUM ) ) + Max( Max( CS,RCSe ),( MUR / RMSe ) ) ) ) / ( Min( ( ( MLU - RRSe ) * ( CS / MUM ) ) ,( Min( RCSe ,RMSe ) + ( DS + RCSe ) ) ) / Max( ( ( DS * MUC ) + ( MUC - MLU ) ),( ( MUR + RCSe ) / Max( MUR,MUM ) ) ) ) ) / ( Max( ( Min( ( MLU - CS ) ,Min( CS ,MUR ) ) * ( Min( MLU ,DS ) + ( RMSe * MUC ) ) ),Max( Min( ( RMSe / MUM ) ,( RRSe + MUC ) ),Min( Min( DS ,RMSe ) ,( MUM * MUR ) ) ) ) - Max( ( Max( ( CS - MUC ),Min( DS ,RCSe ) ) - Max( ( MLU + MUR ),( RCSe - RMSe ) ) ),( ( ( RMSe * MLU ) / ( RMSe + CS ) ) / ( ( CS + RMSe ) + ( MUC / DS ) ) ) ) ) ) ) ,Max( ( Max( ( ( ( ( RMSe / DS ) / ( RMSe * MUM ) ) - ( ( MLU - CS ) * ( RCSe - DS ) ) ) / Min( Max( ( CS + DS ),( RMSe - CS ) ) ,( Min( RRSe ,MUC ) * Max( MLU,RRSe ) ) ) ),( Max( Max( Max( MUC,MUC ),Max( RCSe,MLU ) ),( ( RMSe + RMSe ) + Min( CS ,MLU ) ) ) + ( Max( ( MLU - RMSe ),Min( RCSe ,MLU ) ) - ( ( RRSe / CS ) / ( MLU / RMSe ) ) ) ) ) / Min( Max( ( ( ( MUC * MLU ) * Min( DS ,RRSe ) ) - Max( Max( MLU,DS ),( RMSe + RRSe ) ) ),( ( ( RCSe * DS ) / ( MUC / MUR ) ) + ( ( RCSe / DS ) + ( MUC + RCSe ) ) ) ) ,( ( Min( Max( RCSe,RCSe ) ,( RMSe + CS ) ) - ( ( CS * DS ) / ( MLU / CS ) ) ) + ( ( ( DS * MUR ) - ( MUM / MLU ) ) / ( ( MLU * MUM ) - ( CS + RRSe ) ) ) ) ) ),( ( ( Min( ( Max( RCSe,MUR ) + ( DS / RMSe ) ) ,( Min( MLU ,MUR ) + Min( MUM ,MUR ) ) ) - Max( Max( Min( CS ,MUR ),( CS * CS ) ),( ( RCSe / RMSe ) - ( RMSe / RMSe ) ) ) ) + Max( Min( ( Min( RCSe ,RMSe ) * ( MLU + DS ) ) ,( ( RMSe / DS ) + Max( MUR,CS ) ) ),Max( ( Min( MUC ,RCSe ) * Min( CS ,MUR ) ),( Max( RCSe,CS ) / Min( MUM ,RCSe ) ) ) ) ) + ( ( ( Min( ( RMSe + MLU ) ,( DS * DS ) ) * Min( ( MLU - DS ) ,( CS - MLU ) ) ) / ( Max( Min( RRSe ,MUR ),Min( MLU ,RMSe ) ) * ( ( MLU - RRSe ) + ( CS / CS ) ) ) ) - ( ( ( Max( MLU,MLU ) / Min( DS ,RMSe ) ) / ( ( CS + CS ) - ( CS - MLU ) ) ) * Max( ( Min( RCSe ,MUR ) + ( MUR + MLU ) ),( Min( RMSe ,RMSe ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.620754716981132, "obj2": 0.27409136528656214}, {"determining": "( Min( ( ( ( ( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server - PN ) ) + ( Min( ACS ,PN ) / Min( FirstVNF_RAM ,AMS ) ) ) + ( Max( Min( DDR ,FirstVNF_RAM ),( ARS - FirstVNF_CPU_Server ) ) - ( Min( AMS ,CRS ) + ( BR + Const ) ) ) ) - ( Min( ( ( FirstVNF_CPU_Server / MDR ) - ( RRS / FirstVNF_CPU_Server ) ) ,( ( PN / RRS ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) + ( Min( Min( MRS ,AMS ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( FirstVNF_Mem_Server,ARS ) / Min( RRS ,DDR ) ) ) ) ) / Max( Min( Min( ( Max( PN,Const ) + ( PN + FirstVNF_CPU_Server ) ) ,Max( Min( ARS ,CRS ),Max( FirstVNF_CPU,MDR ) ) ) ,( ( ( ACS + AMS ) * Min( MRS ,ARS ) ) * ( ( CRS * MRS ) - ( FirstVNF_CPU + AMS ) ) ) ),Min( Max( Max( Min( BR ,RRS ),( FirstVNF_RAM - FirstVNF_RAM ) ),( Min( BR ,MDR ) * ( CRS * FirstVNF_Mem_Server ) ) ) ,Min( Max( ( PN - DDR ),( ARS + FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( FirstVNF_Mem_Server - MRS ) ) ) ) ) ) ,( ( ( Max( ( Max( PN,MDR ) * ( MDR * BR ) ),( ( CRS / FirstVNF_CPU_Server ) - ( ARS - FirstVNF_CPU ) ) ) + ( Max( Min( FirstVNF_Mem ,FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,MRS ) ) / ( ( DDR * AMS ) / ( FirstVNF_CPU_Server / MRS ) ) ) ) - ( ( Max( Min( FirstVNF_Mem ,FirstVNF_RAM ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( Min( PN ,MRS ) / ( DDR - MDR ) ) ) + Min( ( ( CRS + MRS ) * Max( FirstVNF_Mem,CRS ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,Min( PN ,BR ) ) ) ) ) * ( ( Max( ( ( BR - Const ) / ( DDR / FirstVNF_CPU_Server ) ),( ( FirstVNF_CPU * FirstVNF_RAM ) + Max( FirstVNF_Mem,BR ) ) ) - ( Min( ( FirstVNF_Mem_Server / ARS ) ,Max( AMS,ARS ) ) - ( ( ACS - PN ) - ( Const * DDR ) ) ) ) / ( Min( ( Min( ACS ,MDR ) - ( FirstVNF_Mem - RRS ) ) ,Max( Min( PN ,FirstVNF_CPU_Server ),( RRS * AMS ) ) ) + Min( Max( ( AMS / DDR ),Min( RRS ,DDR ) ) ,( Min( ARS ,FirstVNF_CPU ) + Min( BR ,FirstVNF_RAM ) ) ) ) ) ) ) / ( Max( ( ( ( Max( ( FirstVNF_CPU * MDR ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU + ARS ) - ( DDR + DDR ) ) ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + ( BR * FirstVNF_RAM ) ) / ( Min( ACS ,BR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) * Max( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( MDR - ACS ) ) + ( ( FirstVNF_RAM - PN ) * ( FirstVNF_RAM + CRS ) ) ),Min( ( ( CRS * FirstVNF_RAM ) + Min( DDR ,AMS ) ) ,( ( MDR - FirstVNF_RAM ) * ( MDR / FirstVNF_CPU_Server ) ) ) ) ),( ( ( ( ( Const + FirstVNF_Mem_Server ) - Min( ACS ,AMS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),( PN + FirstVNF_RAM ) ) - Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) - Max( ( ( ( FirstVNF_RAM * RRS ) - ( Const + AMS ) ) / ( ( FirstVNF_CPU_Server * AMS ) / ( PN * ACS ) ) ),( ( ( FirstVNF_Mem / FirstVNF_CPU ) - Max( FirstVNF_Mem,ACS ) ) * ( Max( BR,DDR ) + Max( MRS,PN ) ) ) ) ) ) * Max( ( Min( ( ( ( DDR / DDR ) / Min( RRS ,PN ) ) * Max( ( Const * FirstVNF_RAM ),Max( AMS,Const ) ) ) ,( ( ( ACS + FirstVNF_Mem_Server ) * ( ACS + CRS ) ) * ( ( FirstVNF_CPU * RRS ) + ( FirstVNF_Mem - ARS ) ) ) ) * ( Max( Max( Max( MRS,ACS ),( FirstVNF_RAM_Server * BR ) ),( ( AMS * FirstVNF_Mem_Server ) / Min( RRS ,Const ) ) ) + ( Max( ( FirstVNF_CPU - MRS ),Min( FirstVNF_CPU ,ARS ) ) + ( ( RRS / Const ) - ( FirstVNF_CPU_Server / PN ) ) ) ) ),Max( Max( ( ( Max( ACS,Const ) - Min( DDR ,ACS ) ) / ( ( MDR / FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,Const ) ) ),Max( ( Min( ACS ,FirstVNF_Mem ) + ( BR - MDR ) ),( ( MDR / FirstVNF_CPU ) + Min( DDR ,ACS ) ) ) ),Min( ( ( Max( AMS,FirstVNF_RAM_Server ) - ( BR - FirstVNF_Mem ) ) * Max( ( ACS / MDR ),Min( FirstVNF_Mem_Server ,MRS ) ) ) ,( Min( Min( PN ,DDR ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / Min( ( BR - FirstVNF_CPU_Server ) ,Max( MDR,Const ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR * ( Min( ( ( ( ( MUR - MUR ) * ( RMSe - MLU ) ) + RRSe ) / RRSe ) ,Min( MUR ,RRSe ) ) + Max( RCSe,RRSe ) ) ),( Max( MLU,( ( RRSe / MUC ) * RMSe ) ) - MLU ) )", "obj1": 0.6773584905660377, "obj2": 0.22347015367494974}, {"determining": "( ( ( FirstVNF_Mem_Server * ACS ) - ( FirstVNF_RAM / CRS ) ) / ( ( FirstVNF_RAM / ( DDR - PN ) ) * Min( DDR ,RRS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * MUC ) ) )", "obj1": 0.2339622641509434, "obj2": 0.6729128214135757}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( ( ACS - DDR ) - ( DDR - PN ) ) ) )", "choosing": "Min( ( CS + MUC ) ,( RCSe + Max( RCSe,MUC ) ) )", "obj1": 0.5830188679245283, "obj2": 0.33432764035921453}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5226415094339623, "obj2": 0.35331880021718154}, {"determining": "( ( ACS - ( MRS * FirstVNF_Mem ) ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( RMSe / MLU ) / Max( CS,Min( RCSe ,RMSe ) ) )", "obj1": 0.2509433962264151, "obj2": 0.639870101257009}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( Min( Const ,FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "Min( ( CS + DS ) ,( RCSe + Min( DS ,RRSe ) ) )", "obj1": 0.7169811320754716, "obj2": 0.2017425249846429}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU_Server ) * ( MRS / MDR ) ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.4641509433962264, "obj2": 0.418237862432496}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU_Server ) * ( MRS / MDR ) ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.4509433962264151, "obj2": 0.43400846851054564}, {"determining": "( ( ACS - DDR ) - Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),Min( Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( MUM,CS ) ) ) ,RMSe ) ) )", "obj1": 0.16792452830188678, "obj2": 0.7213312212297707}, {"determining": "( ( FirstVNF_RAM_Server + RRS ) + ( Max( ( FirstVNF_RAM_Server + ARS ),RRS ) / MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) / ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.30566037735849055, "obj2": 0.6007554911868714}, {"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( Max( Const,PN ),( RRS * CRS ) ),RRS ) ) / Max( Min( ACS ,CRS ),( ACS / PN ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.20943396226415095, "obj2": 0.6806862640011779}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.47924528301886793, "obj2": 0.39594195466211246}, {"determining": "Max( MDR,( AMS / ARS ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.35660377358490564, "obj2": 0.5161914456771632}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( Max( Const,PN ),( RRS * CRS ) ),RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.3264150943396226, "obj2": 0.541574286309587}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUC ) ,( RCSe + DS ) )", "obj1": 0.5679245283018868, "obj2": 0.35298134273607357}, {"determining": "( ( Const + PN ) + Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Max( ( CS / CS ),MUM )", "obj1": 0.4358490566037736, "obj2": 0.45562019396241343}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( ( CRS - DDR ) - ( ARS - ( DDR - PN ) ) )", "choosing": "( ( ( Max( ( ( Max( DS,MUR ) - ( ( RCSe - MLU ) / ( RRSe - MUR ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / Min( Max( RCSe,MUC ) ,Min( MUM ,CS ) ) ) )", "obj1": 0.5056603773584906, "obj2": 0.36777891590928363}, {"determining": "( Max( Min( DDR ,( Const + FirstVNF_CPU_Server ) ),AMS ) * Max( ACS,RRS ) )", "choosing": "( ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.11886792452830189, "obj2": 0.758450161071984}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) / ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( MRS,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Min( ( ( Max( Min( AMS ,Const ),( MRS - ACS ) ) + ( ( FirstVNF_RAM * MRS ) - Min( DDR ,FirstVNF_Mem ) ) ) / Min( Min( ( FirstVNF_CPU - AMS ) ,( BR + PN ) ) ,( Max( ARS,FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem_Server ) ) ) ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) )", "choosing": "( ( Min( Min( RMSe ,MUC ) ,Min( RRSe ,MUR ) ) / ( Min( ( ( MLU / RMSe ) + ( MUC * MUC ) ) ,Min( Min( RMSe ,MUR ) ,( CS * RCSe ) ) ) * Max( ( ( RCSe / MUC ) - ( DS - RRSe ) ),Min( ( MUM / RRSe ) ,Max( CS,CS ) ) ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUR ) ) + ( ( RCSe - MLU ) - Min( CS ,RRSe ) ) ) )", "obj1": 0.7056603773584905, "obj2": 0.2221086776843577}, {"determining": "( Max( RRS,Const ) + Min( ACS ,Min( Min( DDR ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.19811320754716982, "obj2": 0.6987498872353973}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( Max( Const,PN ),( RRS * CRS ) ),RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.30754716981132074, "obj2": 0.5698499061795067}, {"determining": "( Min( Min( DDR ,( Const + Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - FirstVNF_Mem ) ) ) ) ,AMS ) * Max( ACS,RRS ) )", "choosing": "( ( ( ( RCSe - MLU ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * ( Min( RMSe ,MUC ) - Min( RRSe ,MUR ) ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7534124435875369}, {"determining": "( Min( ACS ,DDR ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( MUR / MLU ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.9339622641509434, "obj2": 0.029574570710345333}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( RRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( MUM,CS ) ) )", "obj1": 0.38113207547169814, "obj2": 0.5117718696519927}, {"determining": "( Min( Min( DDR ,( FirstVNF_CPU + PN ) ) ,( ( MDR + MRS ) * ( ACS - MRS ) ) ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,RMSe ) ) ) + ( ( ( ( ( MLU - RCSe ) / ( CS / MUR ) ) - MLU ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.269811320754717, "obj2": 0.6188396031822163}, {"determining": "Max( MDR,( RRS / ( MRS - MRS ) ) )", "choosing": "( Max( RRSe,Min( ( Max( RMSe,RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) ) ) * ( RCSe / DS ) )", "obj1": 0.16226415094339622, "obj2": 0.7497332041532793}, {"determining": "( ( FirstVNF_RAM_Server + RRS ) + ( Max( ( FirstVNF_RAM_Server + ARS ),( ( AMS / ACS ) * Max( CRS,MRS ) ) ) / MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) / ( Min( MUR ,RCSe ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.2660377358490566, "obj2": 0.6328550600217336}, {"determining": "( ( ACS - DDR ) - Min( ARS ,Const ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9509433962264151, "obj2": 0.02130310006825133}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.11132075471698114, "obj2": 0.7702845105397901}, {"determining": "( Min( CRS ,AMS ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}, {"determining": "( Min( CRS ,AMS ) / ( ( ACS * ( ( ( FirstVNF_RAM * ARS ) * Const ) * Const ) ) - ( DDR - PN ) ) )", "choosing": "( MUR * ( Max( DS,MUC ) - Max( RRSe,CS ) ) )", "obj1": 0.49433962264150944, "obj2": 0.3904047983416431}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( RRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.18679245283018867, "obj2": 0.7093385223764546}, {"determining": "( Min( CRS ,AMS ) / ( ( ACS * Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) ) - ( DDR - PN ) ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MUR ) - Max( RRSe,CS ) ) )", "obj1": 0.969811320754717, "obj2": 0.01257208055226328}, {"determining": "( ( MDR / ARS ) - ( ( MDR / AMS ) + ( RRS / MDR ) ) )", "choosing": "( ( ( Max( ( MUR + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUC ) ) ) - ( ( ( MUC / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.4981132075471698, "obj2": 0.37795466625911117}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( RRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( MUM,CS ) ) )", "obj1": 0.35094339622641507, "obj2": 0.5389241394137455}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "Min( ( CS + MUC ) ,( RCSe + Min( DS ,DS ) ) )", "obj1": 0.7113207547169811, "obj2": 0.21029704242964964}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MLU / RCSe ) ),( ( RRSe + RRSe ) / Max( MUM,CS ) ) )", "obj1": 0.43018867924528303, "obj2": 0.4665288356012633}, {"determining": "Min( ( ACS / BR ) ,( Max( Max( AMS,Const ),DDR ) / Min( Max( Const,FirstVNF_RAM_Server ) ,Min( CRS ,RRS ) ) ) )", "choosing": "Max( Max( ( ( MLU * DS ) * ( MUM - CS ) ),( ( DS - MUC ) * Max( MUC,MUM ) ) ),( ( Min( MUC ,DS ) + ( RMSe * RMSe ) ) - ( ( MUC * MLU ) + ( MUC * RCSe ) ) ) )", "obj1": 0.4169811320754717, "obj2": 0.47841769453649496}, {"determining": "Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 0.2849056603773585, "obj2": 0.6099101242317562}, {"determining": "( Min( CRS ,AMS ) / Max( AMS,Const ) )", "choosing": "( ( RRSe / RRSe ) * Max( ( RRSe / CS ),( RCSe - MLU ) ) )", "obj1": 0.4056603773584906, "obj2": 0.492649226808565}, {"determining": "( ( MRS * Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) ) - ( DDR - PN ) )", "choosing": "Min( ( ( MUC - MUC ) + Max( MUR,MLU ) ) ,( ( MLU * RMSe ) / ( RRSe - MUC ) ) )", "obj1": 0.9754716981132076, "obj2": 0.009628296825189366}, {"determining": "( ( AMS / ARS ) - Min( ARS ,Const ) )", "choosing": "( ( ( Max( ( ( ( ( RCSe / RMSe ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.3490566037735849, "obj2": 0.5403174646259489}], "5": [{"determining": "( ( ACS - DDR ) - Min( ARS ,Max( Max( AMS,Const ),DDR ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( MLU ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,( Const + FirstVNF_CPU_Server ) ),AMS ) * Max( ACS,RRS ) )", "choosing": "( ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.09811320754716982, "obj2": 0.7758673044361805}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / Max( ( MUC + RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / RCSe ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7811320754716982, "obj2": 0.11102808604624954}, {"determining": "( PN - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,( ( MUC / CS ) + ( RMSe / MUR ) ) ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.8962264150943396, "obj2": 0.040990097958464845}, {"determining": "( ( ACS - DDR ) - ( ( FirstVNF_CPU_Server / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / MUC ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.7415094339622641, "obj2": 0.15168986992610395}, {"determining": "( Min( ( ( ( ( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server - PN ) ) + ( Min( ACS ,PN ) / Min( FirstVNF_RAM ,AMS ) ) ) + ( Max( Min( DDR ,FirstVNF_RAM ),( ARS - FirstVNF_CPU_Server ) ) - ( Min( AMS ,CRS ) + ( BR + Const ) ) ) ) - ( Min( ( ( FirstVNF_CPU_Server / MDR ) - ( RRS / FirstVNF_CPU_Server ) ) ,( ( PN / RRS ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) + ( Min( Min( MRS ,AMS ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( FirstVNF_Mem_Server,ARS ) / Min( RRS ,DDR ) ) ) ) ) / Max( Min( Min( ( Max( PN,Const ) + ( PN + FirstVNF_CPU_Server ) ) ,Max( Min( ARS ,CRS ),Max( FirstVNF_CPU,MDR ) ) ) ,( ( ( ACS + AMS ) * Min( MRS ,ARS ) ) * ( ( CRS * MRS ) - ( FirstVNF_CPU + AMS ) ) ) ),Min( Max( Max( Min( BR ,RRS ),( FirstVNF_RAM - FirstVNF_RAM ) ),( Min( BR ,MDR ) * ( CRS * FirstVNF_Mem_Server ) ) ) ,Min( Max( ( PN - DDR ),( ARS + FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( FirstVNF_Mem_Server - MRS ) ) ) ) ) ) ,( ( ( Max( ( Max( PN,MDR ) * ( MDR * BR ) ),( ( CRS / FirstVNF_CPU_Server ) - ( ARS - FirstVNF_CPU ) ) ) + ( Max( Min( FirstVNF_Mem ,FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,MRS ) ) / ( ( DDR * AMS ) / ( FirstVNF_CPU_Server / MRS ) ) ) ) - ( ( Max( Min( FirstVNF_Mem ,FirstVNF_RAM ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( Min( PN ,MRS ) / ( DDR - MDR ) ) ) + Min( ( ( CRS + MRS ) * Max( FirstVNF_Mem,CRS ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,Min( PN ,BR ) ) ) ) ) * ( ( Max( ( ( BR - Const ) / ( DDR / FirstVNF_CPU_Server ) ),( ( FirstVNF_CPU * FirstVNF_RAM ) + Max( FirstVNF_Mem,BR ) ) ) - ( Min( ( FirstVNF_Mem_Server / ARS ) ,Max( AMS,ARS ) ) - ( ( ACS - PN ) - ( Const * DDR ) ) ) ) / ( Min( ( Min( ACS ,MDR ) - ( FirstVNF_Mem - RRS ) ) ,Max( Min( PN ,FirstVNF_CPU_Server ),( RRS * AMS ) ) ) + Min( Max( ( AMS / DDR ),Min( RRS ,DDR ) ) ,( Min( ARS ,FirstVNF_CPU ) + Min( BR ,FirstVNF_RAM ) ) ) ) ) ) ) / ( Max( ( ( ( Max( ( FirstVNF_CPU * MDR ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU + ARS ) - ( DDR + DDR ) ) ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + ( BR * FirstVNF_RAM ) ) / ( Min( ACS ,BR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) * Max( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( MDR - ACS ) ) + ( ( FirstVNF_RAM - PN ) * ( FirstVNF_RAM + CRS ) ) ),Min( ( ( CRS * FirstVNF_RAM ) + Min( DDR ,AMS ) ) ,( ( MDR - FirstVNF_RAM ) * ( MDR / FirstVNF_CPU_Server ) ) ) ) ),( ( ( ( ( Const + FirstVNF_Mem_Server ) - Min( ACS ,AMS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),( PN + FirstVNF_RAM ) ) - Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) - Max( ( ( ( FirstVNF_RAM * RRS ) - ( Const + AMS ) ) / ( ( FirstVNF_CPU_Server * AMS ) / ( PN * ACS ) ) ),( ( ( FirstVNF_Mem / FirstVNF_CPU ) - Max( FirstVNF_Mem,ACS ) ) * ( Max( BR,DDR ) + Max( MRS,PN ) ) ) ) ) ) * Max( ( Min( ( ( ( DDR / DDR ) / Min( RRS ,PN ) ) * Max( ( Const * FirstVNF_RAM ),Max( AMS,Const ) ) ) ,( ( ( ACS + FirstVNF_Mem_Server ) * ( ACS + CRS ) ) * ( ( FirstVNF_CPU * RRS ) + ( FirstVNF_Mem - ARS ) ) ) ) * ( Max( Max( Max( MRS,ACS ),( FirstVNF_RAM_Server * BR ) ),( ( AMS * FirstVNF_Mem_Server ) / Min( RRS ,Const ) ) ) + ( Max( ( FirstVNF_CPU - MRS ),Min( FirstVNF_CPU ,ARS ) ) + ( ( RRS / Const ) - ( FirstVNF_CPU_Server / PN ) ) ) ) ),Max( Max( ( ( Max( ACS,Const ) - Min( DDR ,ACS ) ) / ( ( MDR / FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,Const ) ) ),Max( ( Min( ACS ,FirstVNF_Mem ) + ( BR - MDR ) ),( ( MDR / FirstVNF_CPU ) + Min( DDR ,ACS ) ) ) ),Min( ( ( Max( AMS,FirstVNF_RAM_Server ) - ( BR - FirstVNF_Mem ) ) * Max( ( ACS / MDR ),Min( FirstVNF_Mem_Server ,MRS ) ) ) ,( Min( Min( PN ,DDR ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / Min( ( BR - FirstVNF_CPU_Server ) ,Max( MDR,Const ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR * ( Min( ( ( ( ( MUR - MUR ) * ( RMSe - MLU ) ) + RRSe ) / RRSe ) ,Min( MUR ,RRSe ) ) + Max( RCSe,RRSe ) ) ),( Max( MLU,( ( RRSe / MUC ) * RMSe ) ) - MLU ) )", "obj1": 0.6773584905660377, "obj2": 0.22347015367494974}, {"determining": "( ( Min( Max( ( ( ( ( FirstVNF_Mem * BR ) - Max( PN,AMS ) ) + ( ( FirstVNF_CPU + ACS ) * ( MRS + Const ) ) ) * Max( ( ( DDR - DDR ) - Max( BR,FirstVNF_RAM ) ),( ( FirstVNF_CPU * ARS ) / Max( RRS,CRS ) ) ) ),( Max( Max( ( FirstVNF_Mem_Server * AMS ),( MDR * PN ) ),Min( ( CRS + Const ) ,( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) + ( ( ( Const - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ,( Max( ( Min( Min( AMS ,FirstVNF_Mem_Server ) ,( MRS + AMS ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) + Max( RRS,RRS ) ) ),( Min( Max( ACS,ACS ) ,( CRS + PN ) ) + ( ( MRS / Const ) * Max( DDR,FirstVNF_CPU_Server ) ) ) ) * ( ( Min( Max( AMS,PN ) ,( FirstVNF_Mem / ARS ) ) / ( ( ACS / PN ) / Min( PN ,BR ) ) ) + Min( ( Min( Const ,Const ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) ,( ( MRS - CRS ) - Min( FirstVNF_CPU ,ARS ) ) ) ) ) ) + Max( Min( ( ( Min( Max( ACS,MRS ) ,( BR * CRS ) ) - Max( Min( FirstVNF_RAM ,ARS ),( CRS - FirstVNF_Mem_Server ) ) ) * ( Max( ( DDR + FirstVNF_Mem ),Max( DDR,PN ) ) + ( Max( PN,AMS ) - ( FirstVNF_CPU - DDR ) ) ) ) ,( Min( ( ( BR * CRS ) / ( AMS + MDR ) ) ,( ( ARS * AMS ) - Max( MDR,BR ) ) ) / ( Max( ( FirstVNF_CPU + AMS ),Max( RRS,FirstVNF_CPU_Server ) ) / Max( ( CRS - Const ),( CRS - FirstVNF_CPU ) ) ) ) ),( ( Min( Max( ( MDR * MRS ),Min( AMS ,ACS ) ) ,Min( Max( CRS,Const ) ,( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( MRS,CRS ) ,( FirstVNF_RAM_Server / ACS ) ) * ( ( MDR - PN ) - ( Const / ARS ) ) ) ) * ( Max( ( ( ARS + FirstVNF_Mem_Server ) + ( Const - FirstVNF_RAM ) ),Min( ( DDR + CRS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) / ( ( Min( ARS ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_Mem ) ) - ( ( Const / BR ) / ( BR - FirstVNF_CPU_Server ) ) ) ) ) ) ) - ( ( ( ( ( ( Min( FirstVNF_RAM ,ACS ) / ( RRS / FirstVNF_Mem ) ) - ( ( AMS + ARS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) - ( Max( ( BR * FirstVNF_Mem_Server ),( CRS * CRS ) ) - Max( ( ACS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) + ( ( Max( ( RRS / FirstVNF_Mem_Server ),( PN - DDR ) ) - Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,( ACS * PN ) ) ) - ( ( Min( RRS ,FirstVNF_RAM_Server ) * Min( BR ,FirstVNF_RAM ) ) * Min( ( CRS * FirstVNF_Mem ) ,( DDR * FirstVNF_Mem ) ) ) ) ) / ( ( ( Min( Max( FirstVNF_Mem_Server,AMS ) ,( BR - AMS ) ) / ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU * BR ) ) ) - ( Min( Max( RRS,MDR ) ,( Const - AMS ) ) - ( ( DDR - DDR ) * Max( BR,ACS ) ) ) ) - ( Max( Max( ( Const + FirstVNF_Mem ),Max( FirstVNF_RAM,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) / ( ( ( CRS - ARS ) + ( FirstVNF_Mem_Server - MDR ) ) * Max( ( FirstVNF_CPU_Server / CRS ),( BR + Const ) ) ) ) ) ) - Min( ( ( ( ( ( MDR + MDR ) - Max( RRS,ACS ) ) * ( ( Const * ACS ) / ( ACS - FirstVNF_Mem ) ) ) / Min( ( ( MRS / BR ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( ( ACS + FirstVNF_CPU ) * Min( FirstVNF_RAM ,ARS ) ) ) ) + ( ( ( ( PN / ARS ) - ( RRS - FirstVNF_CPU_Server ) ) * Min( ( DDR / MRS ) ,Max( MRS,RRS ) ) ) / ( ( Min( RRS ,FirstVNF_Mem ) - Max( MDR,CRS ) ) / ( ( FirstVNF_RAM + FirstVNF_Mem ) / ( DDR * FirstVNF_CPU ) ) ) ) ) ,( ( Max( Max( Min( MDR ,DDR ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ),( ( FirstVNF_RAM_Server + ARS ) * Max( MDR,Const ) ) ) - ( ( ( PN / PN ) * Max( FirstVNF_Mem_Server,BR ) ) / Min( Max( ARS,Const ) ,Min( Const ,ACS ) ) ) ) - Min( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - ACS ) / ( FirstVNF_RAM_Server / AMS ) ) ) ,( ( ( FirstVNF_CPU * CRS ) + ( PN - FirstVNF_CPU ) ) + ( Min( PN ,MDR ) + ( AMS - AMS ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - CS ) * ( RRSe - RMSe ) ) * ( ( RCSe - CS ) * ( DS * MUM ) ) ) + ( Max( Max( RRSe,CS ),( DS + RRSe ) ) - ( ( RCSe / CS ) * Min( RMSe ,RRSe ) ) ) ) / Max( ( Max( ( CS - DS ),Max( MUM,RMSe ) ) + ( Min( CS ,MLU ) * ( MUM + RCSe ) ) ),Max( Min( ( MUM - RCSe ) ,( MUR - RRSe ) ),( Max( DS,RRSe ) / ( RMSe / MUR ) ) ) ) ) * ( Max( ( ( ( RRSe + DS ) * ( DS / DS ) ) - ( ( MUM * DS ) - ( DS + MUR ) ) ),( ( ( MUR - MUC ) - ( MUC / MLU ) ) + ( ( MUM - RCSe ) * Max( RMSe,MUM ) ) ) ) + ( ( ( ( CS * MUC ) + Max( CS,RMSe ) ) * ( ( DS - CS ) / ( MUM / RRSe ) ) ) - ( ( ( RMSe + MUR ) + ( DS / MLU ) ) + ( Min( MUC ,RMSe ) / ( MUC * DS ) ) ) ) ) ) / ( ( ( ( Min( ( CS - DS ) ,( RRSe * RCSe ) ) - Max( ( DS + MLU ),( MUC / RMSe ) ) ) + ( ( ( MUM + RRSe ) / Max( MUC,MUM ) ) + Max( Max( CS,RCSe ),( MUR / RMSe ) ) ) ) / ( Min( ( ( MLU - RRSe ) * ( CS / MUM ) ) ,( Min( RCSe ,RMSe ) + ( DS + RCSe ) ) ) / Max( ( ( DS * MUC ) + ( MUC - MLU ) ),( ( MUR + RCSe ) / Max( MUR,MUM ) ) ) ) ) / ( Max( ( Min( ( MLU - CS ) ,Min( CS ,MUR ) ) * ( Min( MLU ,DS ) + ( RMSe * MUC ) ) ),Max( Min( ( RMSe / MUM ) ,( RRSe + MUC ) ),Min( Min( DS ,RMSe ) ,( MUM * MUR ) ) ) ) - Max( ( Max( ( CS - MUC ),Min( DS ,RCSe ) ) - Max( ( MLU + MUR ),( RCSe - RMSe ) ) ),( ( ( RMSe * MLU ) / ( RMSe + CS ) ) / ( ( CS + RMSe ) + ( MUC / DS ) ) ) ) ) ) ) ,Max( ( Max( ( ( ( ( RMSe / DS ) / ( RMSe * MUM ) ) - ( ( MLU - CS ) * ( RCSe - DS ) ) ) / Min( Max( ( CS + DS ),( RMSe - CS ) ) ,( Min( RRSe ,MUC ) * Max( MLU,RRSe ) ) ) ),( Max( Max( Max( MUC,MUC ),Max( RCSe,MLU ) ),( ( RMSe + RMSe ) + Min( CS ,MLU ) ) ) + ( Max( ( MLU - RMSe ),Min( RCSe ,MLU ) ) - ( ( RRSe / CS ) / ( MLU / RMSe ) ) ) ) ) / Min( Max( ( ( ( MUC * MLU ) * Min( DS ,RRSe ) ) - Max( Max( MLU,DS ),( RMSe + RRSe ) ) ),( ( ( RCSe * DS ) / ( MUC / MUR ) ) + ( ( RCSe / DS ) + ( MUC + RCSe ) ) ) ) ,( ( Min( Max( RCSe,RCSe ) ,( RMSe + CS ) ) - ( ( CS * DS ) / ( MLU / CS ) ) ) + ( ( ( DS * MUR ) - ( MUM / MLU ) ) / ( ( MLU * MUM ) - ( CS + RRSe ) ) ) ) ) ),( ( ( Min( ( Max( RCSe,MUR ) + ( DS / RMSe ) ) ,( Min( MLU ,MUR ) + Min( MUM ,MUR ) ) ) - Max( Max( Min( CS ,MUR ),( CS * CS ) ),( ( RCSe / RMSe ) - ( RMSe / RMSe ) ) ) ) + Max( Min( ( Min( RCSe ,RMSe ) * ( MLU + DS ) ) ,( ( RMSe / DS ) + Max( MUR,CS ) ) ),Max( ( Min( MUC ,RCSe ) * Min( CS ,MUR ) ),( Max( RCSe,CS ) / Min( MUM ,RCSe ) ) ) ) ) + ( ( ( Min( ( RMSe + MLU ) ,( DS * DS ) ) * Min( ( MLU - DS ) ,( CS - MLU ) ) ) / ( Max( Min( RRSe ,MUR ),Min( MLU ,RMSe ) ) * ( ( MLU - RRSe ) + ( CS / CS ) ) ) ) - ( ( ( Max( MLU,MLU ) / Min( DS ,RMSe ) ) / ( ( CS + CS ) - ( CS - MLU ) ) ) * Max( ( Min( RCSe ,MUR ) + ( MUR + MLU ) ),( Min( RMSe ,RMSe ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.620754716981132, "obj2": 0.27409136528656214}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / Max( ( MUC + RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / RCSe ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5754716981132075, "obj2": 0.32190245870233297}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( Min( Const ,FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "Min( ( CS + DS ) ,( RCSe + Min( DS ,RRSe ) ) )", "obj1": 0.7169811320754716, "obj2": 0.2017425249846429}, {"determining": "( ( AMS / ARS ) - ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5283018867924528, "obj2": 0.34166637993505555}, {"determining": "( ( RRS / Const ) + Min( ACS ,Min( Min( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Max( ( MUR - ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.13773584905660377, "obj2": 0.7295048724612438}, {"determining": "Min( ( ACS / BR ) ,( Max( Max( AMS,Const ),DDR ) / Min( Max( Const,FirstVNF_RAM_Server ) ,Min( CRS ,RRS ) ) ) )", "choosing": "Max( Max( ( ( MLU * DS ) * ( MUM - CS ) ),( ( DS - MUC ) * Max( MUC,MUM ) ) ),( ( Min( MUC ,DS ) + ( RMSe * RMSe ) ) - ( ( MUC * MLU ) + ( MUC * RCSe ) ) ) )", "obj1": 0.4169811320754717, "obj2": 0.47841769453649496}, {"determining": "( ( ACS - ( MRS * FirstVNF_Mem ) ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( RMSe / MLU ) / Max( CS,Min( RCSe ,RMSe ) ) )", "obj1": 0.2509433962264151, "obj2": 0.639870101257009}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU_Server ) * ( MRS / MDR ) ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( Min( ( ARS - ACS ) ,Max( FirstVNF_CPU,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + CS ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.37358490566037733, "obj2": 0.4906701091524983}, {"determining": "Max( MDR,( AMS / ARS ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.35660377358490564, "obj2": 0.5161914456771632}, {"determining": "( Max( Min( DDR ,( Const + FirstVNF_CPU_Server ) ),AMS ) * Max( ACS,RRS ) )", "choosing": "( ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.11886792452830189, "obj2": 0.758450161071984}, {"determining": "( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.44716981132075473, "obj2": 0.42765971244414785}, {"determining": "( ( ( FirstVNF_Mem_Server * ACS ) - ( FirstVNF_RAM / CRS ) ) / ( ( FirstVNF_RAM / ( DDR - PN ) ) * Min( DDR ,RRS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * MUC ) ) )", "obj1": 0.2339622641509434, "obj2": 0.6729128214135757}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) + ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.9339622641509434, "obj2": 0.028108802782443678}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU_Server ) * ( MRS / MDR ) ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.4641509433962264, "obj2": 0.418237862432496}, {"determining": "( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) / ( ( ACS * Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) ) - ( DDR - PN ) ) )", "choosing": "( ( Max( RCSe,RRSe ) / MUM ) * ( Max( DS,MUR ) - Max( RRSe,CS ) ) )", "obj1": 0.6, "obj2": 0.31012276481364837}, {"determining": "( ( Const + PN ) + Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Max( ( CS / CS ),MUM )", "obj1": 0.4358490566037736, "obj2": 0.45562019396241343}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.33584905660377357, "obj2": 0.5386014313162719}, {"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) ) / Max( Min( ACS ,CRS ),( ACS / PN ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + RCSe ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.19811320754716982, "obj2": 0.6930575969173339}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.47924528301886793, "obj2": 0.39594195466211246}, {"determining": "( Max( RRS,Const ) + Min( ACS ,Min( Min( DDR ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.30377358490566037, "obj2": 0.5834153510351697}, {"determining": "( ( CRS - DDR ) - ( ARS - ( DDR - PN ) ) )", "choosing": "( ( ( Max( ( ( Max( DS,MUR ) - ( ( RCSe - MLU ) / ( RRSe - MUR ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / Min( Max( RCSe,MUC ) ,Min( MUM ,CS ) ) ) )", "obj1": 0.5056603773584906, "obj2": 0.36777891590928363}, {"determining": "( Max( RRS,Const ) + Min( ACS ,Min( PN ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( MUR * RCSe ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.2830188679245283, "obj2": 0.5975730972759132}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5226415094339623, "obj2": 0.35331880021718154}, {"determining": "( PN - ( DDR * PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( RRSe * RCSe ) - Min( DS ,( ( MUC / CS ) + ( RMSe / MUR ) ) ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9018867924528302, "obj2": 0.038721697834571356}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( Max( Const,PN ),( RRS * RRS ) ),RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( Min( MLU ,CS ) * MUC ) ) + ( MUM * RRSe ) ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5545690943456939}, {"determining": "( ( ( ARS + RRS ) / ( BR * ACS ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( ARS ,Const ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) * ( ( RRSe + MUR ) - ( DS - DS ) ) ) + Max( MUC,Max( Max( MUR,MLU ),Max( DS,RMSe ) ) ) )", "obj1": 0.7056603773584905, "obj2": 0.21861539340429603}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( RRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.18679245283018867, "obj2": 0.7093385223764546}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.36981132075471695, "obj2": 0.5031977172159785}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MLU / RCSe ) ),( ( RRSe + RRSe ) / Max( MUM,CS ) ) )", "obj1": 0.43018867924528303, "obj2": 0.4665288356012633}, {"determining": "( ( FirstVNF_RAM_Server + RRS ) + ( Max( ( FirstVNF_RAM_Server + ARS ),( ( AMS / ACS ) * Max( CRS,MRS ) ) ) / MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) / ( Min( MUR ,RCSe ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.2660377358490566, "obj2": 0.6328550600217336}, {"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( Max( Const,PN ),( RRS * CRS ) ),RRS ) ) / Max( Min( ACS ,CRS ),( ACS / PN ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.20943396226415095, "obj2": 0.6806862640011779}, {"determining": "( Min( Min( DDR ,( FirstVNF_CPU + PN ) ) ,( ( MDR + MRS ) * ( ACS - MRS ) ) ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,RMSe ) ) ) + ( ( ( ( ( MLU - RCSe ) / ( CS / MUR ) ) - MLU ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.269811320754717, "obj2": 0.6188396031822163}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.11132075471698114, "obj2": 0.7702845105397901}, {"determining": "( ( ACS - DDR ) - Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),Min( Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( MUM / RCSe ) ) ,RMSe ) ) )", "obj1": 0.1641509433962264, "obj2": 0.7230466789859694}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 0.27169811320754716, "obj2": 0.6015548136188483}, {"determining": "( ( MDR / ARS ) - ( ( MDR / AMS ) + ( RRS / MDR ) ) )", "choosing": "( ( ( Max( ( MUR + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUC ) ) ) - ( ( ( MUC / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.4981132075471698, "obj2": 0.37795466625911117}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( Max( Const,PN ),( RRS * CRS ) ),RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.3264150943396226, "obj2": 0.541574286309587}, {"determining": "( ( ( FirstVNF_Mem_Server * ACS ) - ( FirstVNF_RAM / CRS ) ) / ( ( FirstVNF_RAM / ( DDR - PN ) ) * Min( DDR ,RRS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * MUC ) ) )", "obj1": 0.22075471698113208, "obj2": 0.6754419424643751}, {"determining": "( ( ACS - DDR ) - ( ACS - DDR ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),Min( Max( ( ( ( ( RRSe + RRSe ) / Max( MUM,CS ) ) / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( MUM,CS ) ) ) ,RMSe ) ) )", "obj1": 0.17169811320754716, "obj2": 0.7118067580106138}, {"determining": "( Min( CRS ,AMS ) / ( ( ACS * Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) ) - ( DDR - PN ) ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MUR ) - Max( RRSe,CS ) ) )", "obj1": 0.969811320754717, "obj2": 0.01257208055226328}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( Max( Const,PN ),( RRS * CRS ) ),RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.30754716981132074, "obj2": 0.5698499061795067}, {"determining": "( ( ACS - DDR ) - Min( ARS ,Const ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9509433962264151, "obj2": 0.02130310006825133}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MUR * RCSe ) - Min( DS ,( ( MUC / CS ) + ( RMSe / MUR ) ) ) ) + MUC ) ,( RCSe + Min( DS ,DS ) ) )", "obj1": 0.7075471698113207, "obj2": 0.20597220452544607}], "6": [{"determining": "( ( CRS - DDR ) - ( ARS - ( DDR - PN ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - DDR ) - Min( ARS ,Max( Max( AMS,Const ),DDR ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( MLU ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,Max( Const,FirstVNF_CPU_Server ) ),AMS ) * Max( MRS,RRS ) )", "choosing": "( Max( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ),( ( RCSe - RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * MUR ) + ( MUM * RRSe ) ) ) )", "obj1": 0.07735849056603773, "obj2": 0.7949434110881185}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( RMSe / MLU ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) ) )", "obj1": 0.8471698113207548, "obj2": 0.10639128041835082}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / Max( ( MUC + RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / RCSe ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7811320754716982, "obj2": 0.11102808604624954}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( Min( ARS ,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( RMSe,CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.35283018867924526, "obj2": 0.4860039421228901}, {"determining": "( PN - ( DDR - MDR ) )", "choosing": "( ( RMSe / MLU ) / Max( ( MUC * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.8566037735849057, "obj2": 0.06074777231895149}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.44716981132075473, "obj2": 0.40587809248280277}, {"determining": "( ( ARS - ( DDR - PN ) ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * ( Max( DS,MUR ) - ( ( RCSe - MLU ) / ( RRSe - MUR ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.6132075471698113, "obj2": 0.26939005213971245}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( MLU,MLU ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.6679245283018868, "obj2": 0.21023203846345143}, {"determining": "( ( Const + PN ) + Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Max( ( CS / CS ),MUM )", "obj1": 0.4358490566037736, "obj2": 0.45562019396241343}, {"determining": "( ( RRS / Const ) + Min( ACS ,Min( Min( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Max( ( MUR - ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.13773584905660377, "obj2": 0.7295048724612438}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( CS + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ) / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7584905660377359, "obj2": 0.1307314028406601}, {"determining": "( ( ( ACS - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( MLU,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7245283018867924, "obj2": 0.17140339309094377}, {"determining": "( Min( ( ( ( ( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server - PN ) ) + ( Min( ACS ,PN ) / Min( FirstVNF_RAM ,AMS ) ) ) + ( Max( Min( DDR ,FirstVNF_RAM ),( ARS - FirstVNF_CPU_Server ) ) - ( Min( AMS ,CRS ) + ( BR + Const ) ) ) ) - ( Min( Max( ( FirstVNF_CPU_Server / MDR ),( RRS / FirstVNF_CPU_Server ) ) ,( ( PN / RRS ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) + ( Min( Min( MRS ,AMS ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( FirstVNF_Mem_Server,ARS ) / Min( RRS ,DDR ) ) ) ) ) / Max( Min( Min( ( Max( PN,Const ) + ( PN + FirstVNF_CPU_Server ) ) ,Max( Min( ARS ,CRS ),Max( FirstVNF_CPU,MDR ) ) ) ,( ( ( ACS + AMS ) * Min( MRS ,ARS ) ) * ( ( CRS * MRS ) - ( FirstVNF_CPU + AMS ) ) ) ),Min( Max( Max( Min( BR ,RRS ),( FirstVNF_RAM - FirstVNF_RAM ) ),( Min( BR ,MDR ) * ( CRS * FirstVNF_Mem_Server ) ) ) ,Min( Max( ( PN - DDR ),( ARS + FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( FirstVNF_Mem_Server - MRS ) ) ) ) ) ) ,( ( ( Max( ( Max( PN,MDR ) * ( MDR * BR ) ),( ( CRS / FirstVNF_CPU_Server ) - ( ARS - FirstVNF_CPU ) ) ) + ( Max( Min( FirstVNF_Mem ,FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,MRS ) ) / ( ( DDR * AMS ) / ( FirstVNF_CPU_Server / MRS ) ) ) ) - ( ( Max( Min( FirstVNF_Mem ,FirstVNF_RAM ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( Min( PN ,MRS ) / ( DDR - MDR ) ) ) + Min( ( ( CRS + MRS ) * Max( FirstVNF_Mem,CRS ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,Min( PN ,BR ) ) ) ) ) * ( ( Max( ( ( BR - Const ) / ( DDR / FirstVNF_CPU_Server ) ),( ( FirstVNF_CPU * FirstVNF_RAM ) + Max( FirstVNF_Mem,BR ) ) ) - ( Min( ( FirstVNF_Mem_Server / ARS ) ,Max( AMS,ARS ) ) - ( ( ACS - PN ) - ( Const * DDR ) ) ) ) / ( Min( ( Min( ACS ,MDR ) - ( FirstVNF_Mem - RRS ) ) ,Max( Min( PN ,FirstVNF_CPU_Server ),( RRS * AMS ) ) ) + Min( Max( ( AMS / DDR ),Min( RRS ,DDR ) ) ,( Min( ARS ,FirstVNF_CPU ) + Min( BR ,FirstVNF_RAM ) ) ) ) ) ) ) / ( Max( ( ( ( Max( ( FirstVNF_CPU * MDR ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU + ARS ) - ( DDR + DDR ) ) ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + ( BR * FirstVNF_RAM ) ) / ( Min( ACS ,BR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) * Max( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( MDR - ACS ) ) + ( ( FirstVNF_RAM - PN ) * ( FirstVNF_RAM + CRS ) ) ),Min( ( ( CRS * FirstVNF_RAM ) + Min( DDR ,AMS ) ) ,( ( MDR - FirstVNF_RAM ) * ( MDR / FirstVNF_CPU_Server ) ) ) ) ),( ( ( ( ( Const + FirstVNF_Mem_Server ) - Min( ACS ,AMS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),( PN + FirstVNF_RAM ) ) - Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) - Max( ( ( ( FirstVNF_RAM * RRS ) - ( Const + AMS ) ) / ( ( FirstVNF_CPU_Server * AMS ) / ( PN * ACS ) ) ),( ( ( FirstVNF_Mem / FirstVNF_CPU ) - Max( FirstVNF_Mem,ACS ) ) * ( Max( BR,DDR ) + Max( MRS,PN ) ) ) ) ) ) * Max( ( Min( ( ( ( DDR / DDR ) / Min( RRS ,PN ) ) * Max( ( Const * FirstVNF_RAM ),Max( AMS,Const ) ) ) ,( ( ( ACS + FirstVNF_Mem_Server ) * ( ACS + CRS ) ) * ( ( FirstVNF_CPU * RRS ) + ( FirstVNF_Mem - ARS ) ) ) ) * ( Max( Max( Max( MRS,ACS ),( FirstVNF_RAM_Server * BR ) ),( ( AMS * FirstVNF_Mem_Server ) / Min( RRS ,Const ) ) ) + ( Max( ( FirstVNF_CPU - MRS ),Min( FirstVNF_CPU ,ARS ) ) + ( ( RRS / Const ) - ( FirstVNF_CPU_Server / PN ) ) ) ) ),Max( Max( ( ( Max( ACS,Const ) - Min( DDR ,ACS ) ) / ( ( MDR / FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,Const ) ) ),Max( ( Min( ACS ,FirstVNF_Mem ) + ( BR - MDR ) ),( ( MDR / FirstVNF_CPU ) + Min( DDR ,ACS ) ) ) ),Min( ( ( Max( AMS,FirstVNF_RAM_Server ) - ( BR - FirstVNF_Mem ) ) * Max( ( ACS / MDR ),Min( FirstVNF_Mem_Server ,MRS ) ) ) ,( Min( Min( PN ,DDR ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / Min( ( BR - FirstVNF_CPU_Server ) ,Max( MDR,Const ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR * ( Min( ( ( ( ( MUR - MUR ) * ( RMSe - MLU ) ) + RRSe ) / RRSe ) ,Min( DS ,RRSe ) ) + Max( RCSe,RRSe ) ) ),( Max( MLU,( ( RRSe / MUC ) * RMSe ) ) - MLU ) )", "obj1": 0.6641509433962264, "obj2": 0.25045964197956083}, {"determining": "Min( ( ACS / BR ) ,( Max( Max( AMS,Const ),DDR ) / Min( Max( Const,FirstVNF_RAM_Server ) ,Min( CRS ,RRS ) ) ) )", "choosing": "Max( Max( ( ( MLU * DS ) * ( MUM - CS ) ),( ( DS - MUC ) * Max( MUC,MUM ) ) ),( ( Min( MUC ,DS ) + ( RMSe * RMSe ) ) - ( ( MUC * MLU ) + ( MUC * RCSe ) ) ) )", "obj1": 0.4169811320754717, "obj2": 0.47841769453649496}, {"determining": "( ( ACS - DDR ) - ( ( FirstVNF_CPU_Server / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / MUC ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.7415094339622641, "obj2": 0.15168986992610395}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,Max( Const,RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,DS ) + ( MUM + MUM ) ) ) )", "obj1": 0.33773584905660375, "obj2": 0.5021133986189483}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( ( Const - RRS ),( RRS - FirstVNF_Mem ) ),RRS ) )", "choosing": "( ( Max( Min( MUC ,MUC ),( RRSe * MUM ) ) / ( ( RCSe * RMSe ) / Min( Max( RMSe,MLU ) ,( RCSe * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) / ( MUM * RRSe ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.5698976763020852}, {"determining": "( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) / ( ( ACS * Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) ) - ( DDR - PN ) ) )", "choosing": "( ( Max( RCSe,RRSe ) / MUM ) * ( Max( DS,MUR ) - Max( RRSe,CS ) ) )", "obj1": 0.6, "obj2": 0.31012276481364837}, {"determining": "( Max( Min( DDR ,( Const + FirstVNF_CPU_Server ) ),AMS ) * Max( ACS,RRS ) )", "choosing": "( ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.11886792452830189, "obj2": 0.758450161071984}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( RRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) )", "choosing": "( Min( DS ,( ( MUC / CS ) + ( RMSe / MUR ) ) ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.6528301886792452, "obj2": 0.2683249766544529}, {"determining": "( ( AMS / ARS ) - ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5283018867924528, "obj2": 0.34166637993505555}, {"determining": "( ( ACS - DDR ) - Min( ( CRS - DDR ) ,Const ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) / ( ( CS + MUC ) * ( MUM - MLU ) ) ) ) )", "obj1": 0.2528301886792453, "obj2": 0.6364048825509803}, {"determining": "( ( Min( Max( ( ( ( ( FirstVNF_Mem * BR ) - Max( PN,AMS ) ) + ( ( FirstVNF_CPU + ACS ) * ( MRS + Const ) ) ) * Max( ( ( DDR - DDR ) - Max( BR,FirstVNF_RAM ) ),( ( FirstVNF_CPU * ARS ) / Max( RRS,CRS ) ) ) ),( Max( Max( ( FirstVNF_Mem_Server * AMS ),( MDR * PN ) ),Min( ( CRS + Const ) ,( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) + ( ( ( Const - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ,( Max( ( Min( Min( AMS ,FirstVNF_Mem_Server ) ,( MRS + AMS ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) + Max( RRS,RRS ) ) ),( Min( Max( ACS,ACS ) ,( CRS + PN ) ) + ( ( MRS / Const ) * Max( DDR,FirstVNF_CPU_Server ) ) ) ) * ( ( Min( Max( AMS,PN ) ,( FirstVNF_Mem / ARS ) ) / ( ( ACS / PN ) / Min( PN ,BR ) ) ) + Min( ( Min( Const ,Const ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) ,( ( MRS - CRS ) - Min( FirstVNF_CPU ,ARS ) ) ) ) ) ) + Max( Min( ( ( Min( Max( ACS,MRS ) ,( BR * CRS ) ) - Max( Min( FirstVNF_RAM ,ARS ),( CRS - FirstVNF_Mem_Server ) ) ) * ( Max( ( DDR + FirstVNF_Mem ),Max( DDR,PN ) ) + ( Max( PN,AMS ) - ( FirstVNF_CPU - DDR ) ) ) ) ,( Min( ( ( BR * CRS ) / ( AMS + MDR ) ) ,( ( ARS * AMS ) - Max( MDR,BR ) ) ) / ( Max( ( FirstVNF_CPU + AMS ),Max( RRS,FirstVNF_CPU_Server ) ) / Max( ( CRS - Const ),( CRS - FirstVNF_CPU ) ) ) ) ),( ( Min( Max( ( MDR * MRS ),Min( AMS ,ACS ) ) ,Min( Max( CRS,Const ) ,( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( MRS,CRS ) ,( FirstVNF_RAM_Server / ACS ) ) * ( ( MDR - PN ) - ( Const / ARS ) ) ) ) * ( Max( ( ( ARS + FirstVNF_Mem_Server ) + ( Const - FirstVNF_RAM ) ),Min( ( DDR + CRS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) / ( ( Min( ARS ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_Mem ) ) - ( ( Const / BR ) / ( BR - FirstVNF_CPU_Server ) ) ) ) ) ) ) - ( ( ( ( ( ( Min( FirstVNF_RAM ,ACS ) / ( RRS / FirstVNF_Mem ) ) - ( ( AMS + ARS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) - ( Max( ( BR * FirstVNF_Mem_Server ),( CRS * CRS ) ) - Max( ( ACS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) + ( ( Max( ( RRS / FirstVNF_Mem_Server ),( PN - DDR ) ) - Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,( ACS * PN ) ) ) - ( ( Min( RRS ,FirstVNF_RAM_Server ) * Min( BR ,FirstVNF_RAM ) ) * Min( ( CRS * FirstVNF_Mem ) ,( DDR * FirstVNF_Mem ) ) ) ) ) / ( ( ( Min( Max( FirstVNF_Mem_Server,AMS ) ,( BR - AMS ) ) / ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU * BR ) ) ) - ( Min( Max( RRS,MDR ) ,( Const - AMS ) ) - ( ( DDR - DDR ) * Max( BR,ACS ) ) ) ) - ( Max( Max( ( Const + FirstVNF_Mem ),Max( FirstVNF_RAM,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) / ( ( ( CRS - ARS ) + ( FirstVNF_Mem_Server - MDR ) ) * Max( ( FirstVNF_CPU_Server / CRS ),( BR + Const ) ) ) ) ) ) - Min( ( ( ( ( ( MDR + MDR ) - Max( RRS,ACS ) ) * ( ( Const * ACS ) / ( ACS - FirstVNF_Mem ) ) ) / Min( ( ( MRS / BR ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( ( ACS + FirstVNF_CPU ) * Min( FirstVNF_RAM ,ARS ) ) ) ) + ( ( ( ( PN / ARS ) - ( RRS - FirstVNF_CPU_Server ) ) * Min( ( DDR / MRS ) ,Max( MRS,RRS ) ) ) / ( ( Min( RRS ,FirstVNF_Mem ) - Max( MDR,CRS ) ) / ( ( FirstVNF_RAM + FirstVNF_Mem ) / ( DDR * FirstVNF_CPU ) ) ) ) ) ,( ( Max( Max( Min( MDR ,DDR ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ),( ( FirstVNF_RAM_Server + ARS ) * Max( MDR,Const ) ) ) - ( ( ( PN / PN ) * Max( FirstVNF_Mem_Server,BR ) ) / Min( Max( ARS,Const ) ,Min( Const ,ACS ) ) ) ) - Min( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - ACS ) / ( FirstVNF_RAM_Server / AMS ) ) ) ,( ( ( FirstVNF_CPU * CRS ) + ( PN - FirstVNF_CPU ) ) + ( Min( PN ,MDR ) + ( AMS - AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.560377358490566, "obj2": 0.3232431765920132}, {"determining": "( Max( Min( AMS ,( Const + FirstVNF_CPU_Server ) ),AMS ) * Max( ACS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RRSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( Min( RCSe ,CS ) * MUC ) ) + ( MUM * RRSe ) ) ) )", "obj1": 0.30377358490566037, "obj2": 0.5501166314196715}, {"determining": "( PN - ( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,RCSe ) - Max( RRSe,CS ) ) )", "obj1": 0.8811320754716981, "obj2": 0.04588307194540187}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) + ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.9339622641509434, "obj2": 0.028108802782443678}, {"determining": "( ( Min( ( DDR + Const ) ,AMS ) * Max( Max( Max( Const,PN ),( RRS * CRS ) ),RRS ) ) / Max( Min( ACS ,CRS ),( ACS / DDR ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * ( MUM + DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.2660377358490566, "obj2": 0.6048675779887951}, {"determining": "( ( MDR / ARS ) - ( ( MDR / AMS ) + ( RRS / MDR ) ) )", "choosing": "( ( ( Max( ( MUR + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUC ) ) ) - ( ( ( MUC / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.4981132075471698, "obj2": 0.37795466625911117}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MUR * RCSe ) - Min( DS ,( ( MUC / CS ) + ( RMSe / MUR ) ) ) ) + MUC ) ,( RCSe + Min( DS ,DS ) ) )", "obj1": 0.7075471698113207, "obj2": 0.20597220452544607}, {"determining": "( ( ACS - ( MRS * FirstVNF_Mem ) ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.330188679245283, "obj2": 0.5351707420240515}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( Min( Const ,FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "Min( ( CS + DS ) ,( RCSe + Min( DS ,RRSe ) ) )", "obj1": 0.7169811320754716, "obj2": 0.2017425249846429}, {"determining": "Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( Max( RRS,Const ) + Min( ACS ,Min( PN ,AMS ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( ( MLU * CS ) + ( MUM * RRSe ) ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 0.22264150943396227, "obj2": 0.653358917923994}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + Min( ACS ,Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.15471698113207547, "obj2": 0.7142913920664796}, {"determining": "( Max( RRS,Const ) + Min( ACS ,Min( PN ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( MUR * RCSe ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.2830188679245283, "obj2": 0.5975730972759132}, {"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) ) / Max( Min( ACS ,CRS ),( ACS / PN ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + RCSe ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.19811320754716982, "obj2": 0.6930575969173339}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.47924528301886793, "obj2": 0.39594195466211246}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_Mem,ACS ) ) ) ) ) ) )", "choosing": "( ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( Min( MUC ,CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.23018867924528302, "obj2": 0.6365633734911258}, {"determining": "( PN - ( DDR * PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( RRSe * RCSe ) - Min( DS ,( ( MUC / CS ) + ( RMSe / MUR ) ) ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9018867924528302, "obj2": 0.038721697834571356}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU_Server ) * ( MRS / MDR ) ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( Min( ( ARS - ACS ) ,Min( ( ( ARS / ARS ) - ( ( MDR / AMS ) + ( FirstVNF_CPU / MDR ) ) ) ,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( ( MUC / DS ) - ( RMSe / MUR ) ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.47547169811320755, "obj2": 0.4016435836923244}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( RRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.18679245283018867, "obj2": 0.7093385223764546}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / Max( ( MUC + RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / RCSe ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5754716981132075, "obj2": 0.32190245870233297}, {"determining": "( Max( Min( DDR ,( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( Max( Const,PN ),( RRS * RRS ) ),RRS ) ) + FirstVNF_CPU_Server ) ),AMS ) * Max( ACS,RRS ) )", "choosing": "( ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.09433962264150944, "obj2": 0.7854231518686864}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU_Server ) * ( MRS / MDR ) ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( Max( ( ( ( Max( ( FirstVNF_CPU * MDR ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU + ARS ) - ( DDR + DDR ) ) ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + ( BR * FirstVNF_RAM ) ) / ( Min( ACS ,BR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) * Max( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( MDR - ACS ) ) + ( ( FirstVNF_RAM - PN ) * ( FirstVNF_RAM + CRS ) ) ),Min( ( ( CRS * FirstVNF_RAM ) + Min( DDR ,AMS ) ) ,( ( MDR - FirstVNF_RAM ) * ( MDR / FirstVNF_CPU_Server ) ) ) ) ),( ( ( ( ( Const + FirstVNF_Mem_Server ) - Min( ACS ,AMS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),( PN + FirstVNF_RAM ) ) - Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) - Max( ( ( ( FirstVNF_RAM * RRS ) - ( Const + AMS ) ) / ( ( FirstVNF_CPU_Server * AMS ) / ( PN * ACS ) ) ),( ( ( FirstVNF_Mem / FirstVNF_CPU ) - Max( FirstVNF_Mem,ACS ) ) * ( Max( BR,DDR ) + Max( MRS,PN ) ) ) ) ) ) * Max( ( Min( ( ( ( DDR / DDR ) / Min( RRS ,PN ) ) * Max( ( Const * FirstVNF_RAM ),Max( AMS,Const ) ) ) ,( ( ( ACS + FirstVNF_Mem_Server ) * ( ACS + CRS ) ) * ( ( FirstVNF_CPU * RRS ) + ( FirstVNF_Mem - ARS ) ) ) ) * ( Max( Max( Max( MRS,ACS ),( FirstVNF_RAM_Server * BR ) ),( ( AMS * BR ) / Min( RRS ,Const ) ) ) + ( Max( ( FirstVNF_CPU - MRS ),Min( FirstVNF_CPU ,ARS ) ) + ( ( RRS / Const ) - ( FirstVNF_CPU_Server / PN ) ) ) ) ),Max( Max( ( ( Max( ACS,Const ) - Min( DDR ,ACS ) ) / ( ( MDR / FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,Const ) ) ),Max( ( Min( ACS ,FirstVNF_Mem ) + ( BR - MDR ) ),( ( MDR / FirstVNF_CPU ) + Min( DDR ,ACS ) ) ) ),Min( ( ( Max( AMS,FirstVNF_RAM_Server ) - ( BR - FirstVNF_Mem ) ) * Max( ( ACS / MDR ),Min( FirstVNF_Mem_Server ,MRS ) ) ) ,( Min( Min( PN ,DDR ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / Min( ( BR - FirstVNF_CPU_Server ) ,Max( MDR,Const ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + DS ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( RRSe / MUC ) * RMSe ) ) )", "obj1": 0.5962264150943396, "obj2": 0.3185048418357045}, {"determining": "( ( ( FirstVNF_Mem_Server * ACS ) - ( FirstVNF_RAM / CRS ) ) / ( ( FirstVNF_RAM / ( DDR - PN ) ) * Min( DDR ,RRS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * MUC ) ) )", "obj1": 0.22075471698113208, "obj2": 0.6754419424643751}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5226415094339623, "obj2": 0.35331880021718154}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MLU / RCSe ) ),( ( RRSe + RRSe ) / Max( MUM,CS ) ) )", "obj1": 0.43018867924528303, "obj2": 0.4665288356012633}, {"determining": "( ( CRS - DDR ) - ( ARS - ( DDR - PN ) ) )", "choosing": "( ( ( Max( ( ( Max( DS,MUR ) - ( ( RCSe - MLU ) / ( RRSe - MUR ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / Min( Max( RCSe,MUC ) ,Min( MUM ,CS ) ) ) )", "obj1": 0.5056603773584906, "obj2": 0.36777891590928363}, {"determining": "( Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,( ( MUC / CS ) + ( RMSe / MUR ) ) ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( Max( ( ( MLU / RRSe ) / ( MLU / RCSe ) ),( ( RRSe + RRSe ) / Max( MUM,CS ) ) ) ,CS ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.006279168824472598}, {"determining": "( ( ACS - DDR ) - ( DDR / PN ) )", "choosing": "( ( ( Max( RCSe,MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5188679245283019, "obj2": 0.36549901086003883}], "7": [{"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - DDR ) - ( ARS - ( DDR - PN ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,Max( Const,FirstVNF_CPU_Server ) ),AMS ) * Max( MRS,RRS ) )", "choosing": "( Max( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ),( ( RCSe - RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * MUR ) + ( MUM * RRSe ) ) ) )", "obj1": 0.07735849056603773, "obj2": 0.7949434110881185}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.3867924528301887, "obj2": 0.45373308326482814}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( MLU,MLU ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.6679245283018868, "obj2": 0.21023203846345143}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) + ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.9339622641509434, "obj2": 0.028108802782443678}, {"determining": "( Max( RRS,ACS ) + Min( ACS ,Min( Min( Min( Min( DDR ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.11132075471698114, "obj2": 0.7416522545504768}, {"determining": "( ( Min( ( DDR + Const ) ,AMS ) * Max( Max( Max( Const,PN ),( RRS * CRS ) ),RRS ) ) / Max( Min( ACS ,CRS ),( ACS / DDR ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * ( MUM + DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.4339622641509434, "obj2": 0.4432428739512843}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( Min( ARS ,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( RMSe,CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.35283018867924526, "obj2": 0.4860039421228901}, {"determining": "( ( ACS - FirstVNF_RAM ) - Min( ARS ,( ( AMS / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) - ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,CS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.7037735849056603, "obj2": 0.1702622099892809}, {"determining": "( ( ( ACS - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) )", "choosing": "( ( ( Max( MLU,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + ( RRSe * DS ) ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.8339622641509434, "obj2": 0.06998579437593752}, {"determining": "( PN - ( DDR - PN ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.7962264150943397, "obj2": 0.09789076207151064}, {"determining": "( Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,( ( MUC / CS ) + ( RMSe / MUR ) ) ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( Max( ( ( MLU / RRSe ) / ( MLU / RCSe ) ),( ( RRSe + RRSe ) / Max( MUM,CS ) ) ) ,CS ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.006279168824472598}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 0.32264150943396225, "obj2": 0.5301484266338505}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( CS + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ) / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7584905660377359, "obj2": 0.1307314028406601}, {"determining": "( Max( Min( DDR ,( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( Max( Const,PN ),( RRS * RRS ) ),RRS ) ) + FirstVNF_CPU_Server ) ),AMS ) * Max( ACS,RRS ) )", "choosing": "( ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.09433962264150944, "obj2": 0.7854231518686864}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.47547169811320755, "obj2": 0.3920507065738987}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( MLU,MLU ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.6566037735849056, "obj2": 0.23778923432652388}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_Mem,ACS ) ) ) ) ) ) )", "choosing": "( ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( Min( MUC ,CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.23018867924528302, "obj2": 0.6365633734911258}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,Max( Const,RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,DS ) + ( MUM + MUM ) ) ) )", "obj1": 0.33773584905660375, "obj2": 0.5021133986189483}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( RRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) )", "choosing": "( Min( DS ,( ( MUC / CS ) + ( RMSe / MUR ) ) ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.6528301886792452, "obj2": 0.2683249766544529}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe - MLU ) )", "obj1": 0.2490566037735849, "obj2": 0.5944059931845049}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( ( Const - RRS ),( RRS - FirstVNF_Mem ) ),RRS ) )", "choosing": "( ( Max( Min( MUC ,MUC ),( RRSe * MUM ) ) / ( ( RCSe * RMSe ) / Min( Max( RMSe,MLU ) ,( RCSe * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) / ( MUM * RRSe ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.5698976763020852}, {"determining": "( PN - ( DDR - FirstVNF_CPU ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( ( MUC / DS ) + ( RMSe / MUR ) ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( Max( MLU,DS ) / ( CS * MUR ) ) ) )", "obj1": 0.9, "obj2": 0.03295099759865825}, {"determining": "( Max( Min( AMS ,( Const + FirstVNF_CPU_Server ) ),AMS ) * Max( ACS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RRSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( Min( RCSe ,CS ) * MUC ) ) + ( MUM * RRSe ) ) ) )", "obj1": 0.30377358490566037, "obj2": 0.5501166314196715}, {"determining": "( Max( ( ACS - PN ),Max( BR,( Max( ( RRS / FirstVNF_Mem_Server ),( PN - DDR ) ) - Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,( ACS * PN ) ) ) ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.24528301886792453, "obj2": 0.602425531479853}, {"determining": "( Max( RRS,Const ) + Min( ACS ,Min( Min( Min( Max( Max( Max( MRS,ACS ),( FirstVNF_RAM_Server * BR ) ),( ( AMS * FirstVNF_Mem_Server ) / Min( RRS ,Const ) ) ) ,AMS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( RRSe ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.13773584905660377, "obj2": 0.7280689002916889}, {"determining": "( ( ACS - DDR ) - ( ( FirstVNF_CPU_Server / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / MUC ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.7415094339622641, "obj2": 0.15168986992610395}, {"determining": "( PN - ( DDR - MDR ) )", "choosing": "( ( RMSe / MLU ) / Max( ( MUC * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.8566037735849057, "obj2": 0.06074777231895149}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.44528301886792454, "obj2": 0.41277342548728735}, {"determining": "( ( AMS / ARS ) - ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5283018867924528, "obj2": 0.34166637993505555}, {"determining": "Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( Max( RRS,Const ) + Min( ACS ,Min( PN ,AMS ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( ( MLU * CS ) + ( MUM * RRSe ) ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 0.22264150943396227, "obj2": 0.653358917923994}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.44716981132075473, "obj2": 0.40587809248280277}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.5509433962264151, "obj2": 0.33060056613244015}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / Max( ( MUC + RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / RCSe ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7811320754716982, "obj2": 0.11102808604624954}, {"determining": "( PN - ( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,RCSe ) - Max( RRSe,CS ) ) )", "obj1": 0.8811320754716981, "obj2": 0.04588307194540187}, {"determining": "( ( ARS - ( DDR - PN ) ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * ( Max( DS,MUR ) - ( ( RCSe - MLU ) / ( RRSe - MUR ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.6132075471698113, "obj2": 0.26939005213971245}, {"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) ) / Max( Min( ACS ,CRS ),( ACS / PN ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + RCSe ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.19811320754716982, "obj2": 0.6930575969173339}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + Min( ACS ,Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.15471698113207547, "obj2": 0.7142913920664796}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( RRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.18679245283018867, "obj2": 0.7093385223764546}, {"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) ) / Max( Min( ACS ,CRS ),( ACS / PN ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + RCSe ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.21320754716981133, "obj2": 0.6814406524307149}, {"determining": "( ( ( FirstVNF_Mem_Server * ACS ) - ( FirstVNF_RAM / CRS ) ) / ( ( FirstVNF_RAM / ( DDR - PN ) ) * Min( DDR ,RRS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * MUC ) ) )", "obj1": 0.22075471698113208, "obj2": 0.6754419424643751}, {"determining": "( ( MDR / ARS ) - ( ( MDR / AMS ) + ( RRS / MDR ) ) )", "choosing": "( ( ( Max( ( MUR + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUC ) ) ) - ( ( ( MUC / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.4981132075471698, "obj2": 0.37795466625911117}, {"determining": "( PN - ( DDR / PN ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),Min( MUC ,RMSe ) ) )", "obj1": 0.8716981132075472, "obj2": 0.05354341276660706}, {"determining": "( PN - ( DDR - ( ( ACS - PN ) - ( DDR - PN ) ) ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MUR ) - Min( ( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ,CS ) ) )", "obj1": 0.7150943396226415, "obj2": 0.16129965162090326}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU_Server ) * ( MRS / MDR ) ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( Max( ( ( ( Max( ( FirstVNF_CPU * MDR ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU + ARS ) - ( DDR + DDR ) ) ) * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + ( BR * FirstVNF_RAM ) ) / ( Min( ACS ,BR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) * Max( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( MDR - ACS ) ) + ( ( FirstVNF_RAM - PN ) * ( FirstVNF_RAM + CRS ) ) ),Min( ( ( CRS * FirstVNF_RAM ) + Min( DDR ,AMS ) ) ,( ( MDR - FirstVNF_RAM ) * ( MDR / FirstVNF_CPU_Server ) ) ) ) ),( ( ( ( ( Const + FirstVNF_Mem_Server ) - Min( ACS ,AMS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),( PN + FirstVNF_RAM ) ) - Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) - Max( ( ( ( FirstVNF_RAM * RRS ) - ( Const + AMS ) ) / ( ( FirstVNF_CPU_Server * AMS ) / ( PN * ACS ) ) ),( ( ( FirstVNF_Mem / FirstVNF_CPU ) - Max( FirstVNF_Mem,ACS ) ) * ( Max( BR,DDR ) + Max( MRS,PN ) ) ) ) ) ) * Max( ( Min( ( ( ( DDR / DDR ) / Min( RRS ,PN ) ) * Max( ( Const * FirstVNF_RAM ),Max( AMS,Const ) ) ) ,( ( ( ACS + FirstVNF_Mem_Server ) * ( ACS + CRS ) ) * ( ( FirstVNF_CPU * RRS ) + ( FirstVNF_Mem - ARS ) ) ) ) * ( Max( Max( Max( MRS,ACS ),( FirstVNF_RAM_Server * BR ) ),( ( AMS * FirstVNF_Mem_Server ) / Min( RRS ,Const ) ) ) + ( Max( ( FirstVNF_CPU - MRS ),Min( FirstVNF_CPU ,ARS ) ) + ( ( RRS / Const ) - ( FirstVNF_CPU_Server / PN ) ) ) ) ),Max( Max( ( ( Max( ACS,Const ) - Min( DDR ,ACS ) ) / ( ( MDR / FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,Const ) ) ),Max( ( Min( ACS ,FirstVNF_Mem ) + ( BR - MDR ) ),( ( MDR / FirstVNF_CPU ) + Min( DDR ,ACS ) ) ) ),Min( ( ( Max( AMS,FirstVNF_RAM_Server ) - ( BR - FirstVNF_Mem ) ) * Max( ( ACS / MDR ),Min( FirstVNF_Mem_Server ,MRS ) ) ) ,( Min( Min( PN ,DDR ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) / Min( ( BR - FirstVNF_CPU_Server ) ,Max( MDR,Const ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( RRSe / MUC ) * RMSe ) ) )", "obj1": 0.6037735849056604, "obj2": 0.30410762680165543}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( ( Const - RRS ),( RRS - FirstVNF_Mem ) ),RRS ) )", "choosing": "( ( Max( Min( MUC ,MUC ),( RRSe * MUM ) ) / ( ( RCSe * RMSe ) / Min( Max( RMSe,MLU ) ,( RCSe * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) / ( MUM * RRSe ) ) ) )", "obj1": 0.2962264150943396, "obj2": 0.5688876055089498}, {"determining": "( ( ARS - ( DDR - PN ) ) - Min( ACS ,Const ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * ( Max( DS,MUR ) - ( ( RCSe - MLU ) / ( RRSe - MUR ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) * Min( MUM ,CS ) ) ) )", "obj1": 0.6056603773584905, "obj2": 0.2797944829746268}, {"determining": "( ( ( ACS - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( MLU,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7320754716981132, "obj2": 0.15943715906466435}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5226415094339623, "obj2": 0.35331880021718154}, {"determining": "( ( ACS - DDR ) - ( DDR / PN ) )", "choosing": "( ( ( Max( RCSe,MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5188679245283019, "obj2": 0.36549901086003883}], "8": [{"determining": "Min( Min( Min( ( ( ( ( Max( FirstVNF_RAM,CRS ) - ( PN - ARS ) ) * ( Min( FirstVNF_Mem ,MRS ) - Min( AMS ,ACS ) ) ) - ( ( Max( MDR,DDR ) + Min( FirstVNF_CPU_Server ,Const ) ) + ( ( MDR / RRS ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) + ( ( ( Max( FirstVNF_RAM_Server,BR ) + ( FirstVNF_CPU + DDR ) ) + ( ( FirstVNF_Mem_Server * AMS ) + ( BR / CRS ) ) ) * ( ( ( ARS + ACS ) - Min( Const ,RRS ) ) + ( ( BR / ACS ) - ( FirstVNF_CPU_Server - Const ) ) ) ) ) ,( Max( Min( ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM + BR ) ) ,( ( ACS * PN ) - ( PN * Const ) ) ),( ( Max( MDR,FirstVNF_Mem_Server ) * Min( AMS ,FirstVNF_CPU_Server ) ) - ( ( ACS - AMS ) - ( Const / BR ) ) ) ) + Min( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) - ( MDR + CRS ) ) * Max( ( PN / DDR ),( Const / AMS ) ) ) ,Max( ( ( FirstVNF_Mem + DDR ) + Min( FirstVNF_Mem ,ACS ) ),( Max( CRS,BR ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) ) ) ) ,( Max( ( Max( ( ( FirstVNF_RAM * MDR ) * ( FirstVNF_RAM - BR ) ),( ( FirstVNF_Mem / MDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( Max( Min( RRS ,DDR ),( PN * FirstVNF_Mem_Server ) ) - Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_CPU_Server / ARS ) ) ) ),( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( MDR,MRS ) ) + Min( ( FirstVNF_RAM - AMS ) ,Max( FirstVNF_Mem,AMS ) ) ) + ( ( ( DDR - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + Max( Min( FirstVNF_Mem ,FirstVNF_Mem ),( MDR / ARS ) ) ) ) ) / ( ( ( ( ( ACS / PN ) + Max( MDR,MRS ) ) - Min( ( FirstVNF_Mem * CRS ) ,Max( RRS,ARS ) ) ) * ( ( ( MRS - RRS ) - ( Const - MDR ) ) - ( Min( ACS ,FirstVNF_RAM ) + ( CRS * BR ) ) ) ) + ( Max( ( ( MDR / FirstVNF_Mem ) + Max( MDR,MDR ) ),( Max( MRS,CRS ) * ( FirstVNF_Mem_Server / ARS ) ) ) - Min( ( Max( BR,BR ) * ( BR / FirstVNF_Mem_Server ) ) ,( ( RRS / DDR ) / ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) ) ) ) ,Max( ( ( Max( ( ( Max( FirstVNF_Mem,MRS ) + ( FirstVNF_Mem_Server + ARS ) ) * Min( Min( CRS ,BR ) ,( FirstVNF_RAM_Server - CRS ) ) ),( Max( ( CRS / ACS ),( ACS / CRS ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) + ( MDR / PN ) ) ) ) * ( Min( ( ( AMS - ARS ) / ( FirstVNF_Mem_Server * ARS ) ) ,Max( ( BR * ARS ),Max( RRS,PN ) ) ) + Max( ( ( FirstVNF_CPU / MDR ) / Max( CRS,AMS ) ),( ( FirstVNF_CPU / FirstVNF_RAM_Server ) - Max( AMS,PN ) ) ) ) ) + ( ( ( Min( Min( AMS ,PN ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) - ( Min( Min( FirstVNF_RAM ,FirstVNF_CPU ) ,Min( BR ,FirstVNF_CPU ) ) * Max( Max( BR,DDR ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) / Min( Min( ( Max( FirstVNF_CPU,ARS ) / ( AMS + FirstVNF_Mem_Server ) ) ,Min( ( FirstVNF_CPU_Server / RRS ) ,( FirstVNF_CPU - BR ) ) ) ,Max( ( Min( AMS ,FirstVNF_Mem_Server ) / ( DDR + FirstVNF_Mem ) ),( Min( MDR ,AMS ) / ( DDR * DDR ) ) ) ) ) ),Max( ( ( ( Max( Max( FirstVNF_CPU_Server,AMS ),Min( ARS ,MRS ) ) - ( ( FirstVNF_RAM_Server / MDR ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) + ( ( Min( ACS ,RRS ) + Max( RRS,RRS ) ) * Max( ( BR + FirstVNF_RAM_Server ),( FirstVNF_RAM - RRS ) ) ) ) * ( ( ( ( FirstVNF_Mem + Const ) * ( CRS - FirstVNF_RAM_Server ) ) + Max( ( FirstVNF_Mem / RRS ),Max( FirstVNF_CPU_Server,MDR ) ) ) * Max( Max( ( FirstVNF_CPU_Server + AMS ),Max( ARS,FirstVNF_RAM ) ),( Max( ACS,MRS ) / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ),Max( Min( ( Max( Max( PN,DDR ),( ACS * FirstVNF_CPU_Server ) ) / Min( Max( RRS,MRS ) ,( FirstVNF_CPU_Server * MDR ) ) ) ,( ( ( CRS / Const ) - ( FirstVNF_RAM_Server * CRS ) ) + ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MRS ) ) ) ),( Max( Min( ( ARS * FirstVNF_CPU ) ,( ARS / FirstVNF_Mem ) ),( ( FirstVNF_CPU_Server * ARS ) / ( PN / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server - DDR ) * ( AMS * FirstVNF_Mem ) ) ,Max( Max( FirstVNF_RAM,PN ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MUR + MUM ) - ( MUC / RCSe ) ) / Min( Max( CS,CS ) ,( MLU - MUC ) ) ) + ( ( Min( MUM ,RMSe ) / Max( MUM,MUR ) ) - ( ( RMSe / RRSe ) - ( DS + DS ) ) ) ) + ( ( ( ( MUC * RRSe ) + ( MUR / MLU ) ) * ( ( MUC + DS ) * ( CS * CS ) ) ) + Min( Min( ( RMSe + DS ) ,( CS + MUM ) ) ,( ( RRSe / CS ) - ( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( ( RRSe * CS ) ,( MLU - RMSe ) ) - ( Min( RRSe ,DS ) + Max( MUM,MLU ) ) ) * ( ( ( RRSe - MLU ) + ( RRSe * MUC ) ) * ( ( RCSe / CS ) / ( RCSe - CS ) ) ) ),( ( ( Max( RCSe,RRSe ) / Max( RRSe,MUC ) ) + Max( ( MUM - CS ),( MLU + MUC ) ) ) / ( ( Min( RCSe ,MLU ) + ( MUM - MLU ) ) - ( ( MUM * RRSe ) + ( RMSe - DS ) ) ) ) ) ) - Min( ( ( ( ( ( CS - MUC ) + Max( RCSe,MUM ) ) / Min( ( RRSe * CS ) ,Max( RRSe,RRSe ) ) ) - ( ( ( RMSe + RMSe ) - Min( RCSe ,MUR ) ) + Min( ( CS / CS ) ,( RCSe / RRSe ) ) ) ) * ( ( Min( ( RRSe / DS ) ,Max( MUR,DS ) ) - ( ( CS - RCSe ) - ( MUM - DS ) ) ) * ( Min( ( MLU - DS ) ,( MUC * MUC ) ) / ( ( RCSe / MUC ) * ( RCSe / DS ) ) ) ) ) ,( ( ( ( ( DS * MLU ) - ( RCSe * MUC ) ) / ( ( RMSe / RRSe ) * ( MUM * RRSe ) ) ) - ( Min( ( RCSe * CS ) ,( MUR + RMSe ) ) / Min( ( CS - RMSe ) ,Max( MLU,MUR ) ) ) ) - Max( ( ( Max( MUC,MUC ) - ( MUR - MLU ) ) * Max( Max( MUR,RCSe ),( RMSe / MUC ) ) ),( Min( Min( CS ,MUR ) ,Min( MUC ,MUM ) ) / ( Max( RCSe,DS ) - Max( MUM,MUR ) ) ) ) ) ) ) ,( ( Min( Min( ( ( Min( MUC ,MUC ) / ( RRSe * CS ) ) * ( ( RMSe / CS ) * ( CS - RMSe ) ) ) ,( ( ( MLU / DS ) * Min( DS ,RRSe ) ) / Max( ( RCSe - MUC ),Min( RMSe ,CS ) ) ) ) ,( ( Max( ( RMSe + MLU ),( MUM - MUR ) ) + ( ( MUC + CS ) * ( MUC - MLU ) ) ) + ( ( ( RRSe / MUR ) + ( MUM - RCSe ) ) / ( ( MUR / RCSe ) - ( RMSe - MUR ) ) ) ) ) / ( ( Min( ( Max( CS,MUC ) + ( MUC * RMSe ) ) ,( Min( MUR ,RCSe ) - Min( CS ,MUR ) ) ) / ( ( ( MUR / MUC ) - ( RCSe - RRSe ) ) - ( ( DS * MUM ) + ( MUC + MUC ) ) ) ) / ( ( Min( Min( RCSe ,RMSe ) ,( RRSe * CS ) ) + ( Max( MUR,RRSe ) * ( MLU / MUC ) ) ) - Max( ( Min( DS ,CS ) + ( RMSe - MLU ) ),Min( Min( RCSe ,MUR ) ,Max( MUC,RCSe ) ) ) ) ) ) / Max( Min( ( ( ( ( RRSe - DS ) + ( RMSe + RMSe ) ) - ( Max( RMSe,RMSe ) - ( MUR * DS ) ) ) - Min( ( ( MUM / DS ) * ( MLU - RMSe ) ) ,Min( Max( RCSe,MLU ) ,Max( RRSe,CS ) ) ) ) ,( ( Min( ( MUC - RRSe ) ,( MUM * MUC ) ) - Min( ( RMSe * MUR ) ,( CS / MUR ) ) ) + Max( ( ( MUR - MLU ) + ( MUR - CS ) ),( ( MUR / MUC ) * Min( RMSe ,DS ) ) ) ) ),( ( Max( ( ( RRSe + RMSe ) / ( MUC / RRSe ) ),( Min( RCSe ,DS ) / ( CS + MUR ) ) ) - Max( ( ( MUC + CS ) / Min( RRSe ,CS ) ),Max( ( MUC * RMSe ),( RRSe * RCSe ) ) ) ) + Min( ( Min( ( MUM - MUM ) ,( MUR / MUR ) ) + ( ( RMSe - MLU ) * ( RRSe - RMSe ) ) ) ,( ( ( DS + MUR ) - ( RMSe - RCSe ) ) * ( ( RRSe / MUR ) - Min( DS ,CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,Max( Const,FirstVNF_CPU_Server ) ),AMS ) * Max( MRS,RRS ) )", "choosing": "( Max( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ),( ( RCSe - RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * MUR ) + ( MUM * RRSe ) ) ) )", "obj1": 0.07735849056603773, "obj2": 0.7949434110881185}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.17547169811320754, "obj2": 0.652460857899411}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_Mem,ACS ) ) ) ) ) ) )", "choosing": "( ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( Min( MUC ,CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.22264150943396227, "obj2": 0.6337393046206677}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * Min( MUM ,DS ) ) ) ) + ( RCSe * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.5622641509433962, "obj2": 0.3023047743611106}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( Min( ARS ,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( RMSe,CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.35283018867924526, "obj2": 0.4860039421228901}, {"determining": "( ( ACS * DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( MLU,RRSe ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR + RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.6509433962264151, "obj2": 0.23652348352701363}, {"determining": "( ( ARS - ( DDR - PN ) ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * ( Max( DS,MUR ) - ( ( RCSe - MLU ) / ( RRSe - MUR ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.6132075471698113, "obj2": 0.26939005213971245}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + Min( ACS ,Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.15660377358490565, "obj2": 0.7017508093120922}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4, "obj2": 0.44294519512616853}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.44528301886792454, "obj2": 0.41277342548728735}, {"determining": "( ( MDR / ( ( ACS - DDR ) - ( DDR - PN ) ) ) - ( ( MDR / AMS ) + ( RRS / MDR ) ) )", "choosing": "( ( ( Max( ( MUR + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,( ( RCSe - MLU ) + Max( RRSe,MUM ) ) ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUC ) ) ) - ( ( ( MUC / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.3169811320754717, "obj2": 0.530063478070261}, {"determining": "( ( ARS - ( DDR - PN ) ) - Min( ACS ,Const ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * ( Max( DS,MUR ) - ( ( RCSe - MLU ) / ( RRSe - MUR ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) * Min( MUM ,CS ) ) ) )", "obj1": 0.6056603773584905, "obj2": 0.2797944829746268}, {"determining": "( ( ACS - FirstVNF_RAM ) - Min( ARS ,( ( AMS / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) - ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,CS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.7037735849056603, "obj2": 0.1702622099892809}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,Max( Const,RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,DS ) + ( MUM + MUM ) ) ) )", "obj1": 0.33773584905660375, "obj2": 0.5021133986189483}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( Max( ARS,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( ( ( RRSe * DS ) * ( MUC - MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4509433962264151, "obj2": 0.38669906093449}, {"determining": "( ( ( ACS - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) )", "choosing": "( ( ( Max( MLU,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + ( RRSe * DS ) ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.8339622641509434, "obj2": 0.06998579437593752}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.21014100960692209}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( ( ( CS + MUC ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ) / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5471698113207547, "obj2": 0.32529210249590496}, {"determining": "( ( MDR / ARS ) - ( ( MDR / AMS ) + ( RRS / MDR ) ) )", "choosing": "( ( ( Max( ( MUR + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUC ) ) ) - ( ( ( MUC / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.4981132075471698, "obj2": 0.37795466625911117}, {"determining": "( Max( RRS,( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) / AMS ) ) + Min( ACS ,Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * Min( MUM ,MUM ) ) ) ) ),( RCSe - ( MUC * ( Min( MLU ,CS ) * MUC ) ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7189559230938527}, {"determining": "( Max( ( ACS - PN ),Max( BR,( Max( ( RRS / FirstVNF_Mem_Server ),( PN - DDR ) ) - Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,( ACS * PN ) ) ) ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.24528301886792453, "obj2": 0.602425531479853}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - Max( ( DDR * CRS ),( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * Min( ( MUC * CS ) ,Max( MUM,RRSe ) ) ) )", "obj1": 0.3849056603773585, "obj2": 0.45434961098044224}, {"determining": "( Max( RRS,ACS ) + Min( ACS ,Min( Min( Min( Min( DDR ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.11132075471698114, "obj2": 0.7416522545504768}, {"determining": "( Max( Min( DDR ,( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( Max( Const,PN ),( RRS * RRS ) ),Max( ( ACS - CRS ),( ACS / PN ) ) ) ) + FirstVNF_CPU_Server ) ),AMS ) * Max( ACS,RRS ) )", "choosing": "( ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,MUC ) ) ) + ( ( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + RCSe ) ) ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.09245283018867924, "obj2": 0.7787100850128358}, {"determining": "( PN - ( DDR - ( ( MRS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( Max( RCSe,RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.25660377358490566, "obj2": 0.5899135668775385}, {"determining": "( Max( Min( AMS ,( Const + FirstVNF_CPU_Server ) ),AMS ) * Max( ACS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RRSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( Min( RCSe ,CS ) * MUC ) ) + ( MUM * RRSe ) ) ) )", "obj1": 0.30377358490566037, "obj2": 0.5501166314196715}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( ( Const - RRS ),( RRS - FirstVNF_Mem ) ),RRS ) )", "choosing": "( ( Max( Min( MUC ,MUC ),( RRSe * MUM ) ) / ( ( RCSe * RMSe ) / Min( Max( RMSe,MLU ) ,( RCSe * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) / ( MUM * RRSe ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.5698976763020852}, {"determining": "( Max( Max( Max( MRS,ACS ),( FirstVNF_RAM_Server * AMS ) ),( ( AMS * FirstVNF_Mem_Server ) / Min( RRS ,Const ) ) ) - ( ( MDR / AMS ) * ( RRS / MDR ) ) )", "choosing": "( ( ( Max( ( ( RRSe * DS ) + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) + Min( DS ,MUC ) ) ) - ( ( ( RCSe / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.1, "obj2": 0.7544091452033177}, {"determining": "( ( ( Max( ( Min( ( Max( CRS,BR ) / ( BR / DDR ) ) ,( Min( RRS ,DDR ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) + ( ( ( ARS + FirstVNF_RAM_Server ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) * ( ( CRS - AMS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_Mem + MDR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) / Max( Min( Min( PN ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * FirstVNF_Mem ) ),( Max( RRS,BR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( Min( Min( ( ( AMS / Const ) * ( FirstVNF_RAM / AMS ) ) ,( Min( ARS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,RRS ) ) ) ,Max( ( ( Const + FirstVNF_RAM ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem ) * ( ACS * Const ) ) ) ) * Min( ( ( ( FirstVNF_CPU * ARS ) * ( MRS * FirstVNF_Mem ) ) / Max( ( PN * FirstVNF_CPU ),( MRS + ACS ) ) ) ,Min( ( ( MDR / FirstVNF_RAM ) * ( MRS * FirstVNF_Mem_Server ) ) ,Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * DDR ) ) ) ) ) ) / ( ( ( Max( ( Max( Const,FirstVNF_CPU_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,ARS ) - Min( DDR ,FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_RAM - CRS ) - ( ACS / DDR ) ) - ( ( PN - CRS ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) + ( ( ( Max( FirstVNF_RAM,DDR ) + Min( RRS ,FirstVNF_CPU_Server ) ) / Max( Min( ARS ,AMS ),Min( ARS ,FirstVNF_CPU ) ) ) + ( Min( ( DDR * DDR ) ,( CRS * FirstVNF_RAM ) ) + ( ( MDR * ARS ) - ( CRS - MRS ) ) ) ) ) / ( Max( ( Max( ( PN * DDR ),Min( CRS ,AMS ) ) * Max( Min( AMS ,DDR ),Min( FirstVNF_RAM ,PN ) ) ),( ( Max( PN,CRS ) - ( FirstVNF_CPU + RRS ) ) - ( Max( MRS,RRS ) + Min( DDR ,BR ) ) ) ) - ( ( Max( Max( FirstVNF_CPU_Server,RRS ),Min( MRS ,FirstVNF_RAM ) ) / ( Max( PN,FirstVNF_Mem_Server ) - ( ARS * MDR ) ) ) / ( ( ( CRS * Const ) + ( MDR / Const ) ) * ( Min( Const ,ACS ) + ( Const - RRS ) ) ) ) ) ) ) + ( Max( Min( Max( ( ( ( FirstVNF_CPU_Server - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( MDR + AMS ) - Max( RRS,AMS ) ) ),Max( ( Min( DDR ,CRS ) / Min( FirstVNF_Mem ,ARS ) ),Max( Min( CRS ,FirstVNF_CPU ),( ACS / ACS ) ) ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( PN / FirstVNF_RAM ) ) - ( ( Const * FirstVNF_RAM_Server ) + ( Const + FirstVNF_RAM_Server ) ) ) + ( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( PN / BR ) ) / ( ( RRS * FirstVNF_Mem ) - ( CRS * PN ) ) ) ) ),Min( Max( ( Max( ( FirstVNF_RAM + Const ),Min( RRS ,PN ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( BR / RRS ) ) ),( ( ( FirstVNF_Mem_Server + ACS ) + Max( FirstVNF_CPU_Server,Const ) ) + ( ( AMS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / AMS ),( CRS - MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,Max( RRS,ARS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem - AMS ) ) ) ) ) ) / ( Max( ( Min( ( ( FirstVNF_Mem + Const ) - ( FirstVNF_CPU_Server - BR ) ) ,( Min( AMS ,MRS ) - ( BR / FirstVNF_CPU_Server ) ) ) + ( ( Max( FirstVNF_CPU_Server,BR ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) + Min( ( ACS / PN ) ,( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ),Min( ( ( ( DDR - FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) / ( ( FirstVNF_RAM_Server - Const ) - ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ,Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( MRS / FirstVNF_RAM ) ) ) ) ) - ( ( ( ( ( RRS / DDR ) * ( FirstVNF_Mem_Server * ARS ) ) - Min( Min( FirstVNF_RAM_Server ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) ) / Min( Min( ( PN + RRS ) ,Min( FirstVNF_CPU ,Const ) ) ,Max( ( MRS / FirstVNF_CPU_Server ),Max( CRS,MRS ) ) ) ) + ( Min( ( ( FirstVNF_CPU + MRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,( ( Const + FirstVNF_CPU ) * Min( ACS ,RRS ) ) ) / ( ( ( FirstVNF_CPU - CRS ) * ( CRS / RRS ) ) / ( Max( BR,MRS ) - ( Const * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,MUM ) / CS ) + ( MLU / ( ( ( MUR * ( ( MUC - Max( MUM,DS ) ) - DS ) ) * MUR ) + RRSe ) ) )", "obj1": 0.8169811320754717, "obj2": 0.09101264398878292}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) + ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.9339622641509434, "obj2": 0.028108802782443678}, {"determining": "( ( AMS / ARS ) - ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5283018867924528, "obj2": 0.34166637993505555}, {"determining": "( FirstVNF_CPU_Server - ( DDR - PN ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,MUR ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.8566037735849057, "obj2": 0.05392220442323968}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( CS + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ) / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7584905660377359, "obj2": 0.1307314028406601}, {"determining": "( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ) / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9452830188679245, "obj2": 0.022703028223360334}, {"determining": "( ( ACS - DDR ) - ( ( FirstVNF_CPU_Server / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / MUC ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.7415094339622641, "obj2": 0.15168986992610395}, {"determining": "( PN - ( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,RCSe ) - Max( RRSe,CS ) ) )", "obj1": 0.8811320754716981, "obj2": 0.04588307194540187}, {"determining": "( PN - Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) )", "choosing": "Max( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ),( RCSe - MLU ) )", "obj1": 0.969811320754717, "obj2": 0.012708184807127989}, {"determining": "( PN - ( DDR - FirstVNF_CPU ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( ( MUC / DS ) + ( RMSe / MUR ) ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( Max( MLU,DS ) / ( CS * MUR ) ) ) )", "obj1": 0.6641509433962264, "obj2": 0.225186121613024}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + Min( ACS ,Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.15471698113207547, "obj2": 0.7142913920664796}, {"determining": "( PN - ( DDR - PN ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.7962264150943397, "obj2": 0.09789076207151064}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( ( Const - RRS ),( RRS - FirstVNF_Mem ) ),RRS ) )", "choosing": "( ( Max( Min( MUC ,MUC ),( RRSe * MUM ) ) / ( ( RCSe * RMSe ) / Min( Max( RMSe,MLU ) ,( RCSe * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) / ( MUM * RRSe ) ) ) )", "obj1": 0.2962264150943396, "obj2": 0.5688876055089498}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5226415094339623, "obj2": 0.35331880021718154}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.44716981132075473, "obj2": 0.40587809248280277}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / Max( ( MUC + RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / RCSe ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7811320754716982, "obj2": 0.11102808604624954}, {"determining": "( MDR - ( DDR / ACS ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + MUR ) ) / ( ( ( MUC / DS ) - ( RMSe / MUR ) ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( RCSe * MUR ) ) ) )", "obj1": 0.9, "obj2": 0.03295099759865825}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5094339622641509, "obj2": 0.36967871025573834}, {"determining": "( PN - ( DDR - PN ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.8981132075471698, "obj2": 0.034352745490279175}, {"determining": "( PN - ( DDR / PN ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),Min( MUC ,RMSe ) ) )", "obj1": 0.8716981132075472, "obj2": 0.05354341276660706}, {"determining": "( ( ( Max( Min( BR ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) / ( ( CS + MUC ) - ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.7641509433962265, "obj2": 0.12330207216563135}], "9": [{"determining": "( PN - ( DDR - ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( MDR / AMS ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,RRSe ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( ( ( ( Max( FirstVNF_RAM,CRS ) - ( PN - ARS ) ) * ( Min( FirstVNF_Mem ,MRS ) - Min( AMS ,ACS ) ) ) - ( ( Max( MDR,DDR ) + Min( FirstVNF_CPU_Server ,Const ) ) + ( ( MDR / RRS ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) + ( ( ( Max( FirstVNF_RAM_Server,BR ) + ( FirstVNF_CPU + DDR ) ) + ( ( FirstVNF_Mem_Server * AMS ) + ( BR / CRS ) ) ) * ( ( ( ARS + ACS ) - Min( Const ,RRS ) ) + ( ( BR / ACS ) - ( FirstVNF_CPU_Server - Const ) ) ) ) ) ,( Max( Min( ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM + BR ) ) ,( ( ACS * PN ) - ( PN * Const ) ) ),( ( Max( MDR,FirstVNF_Mem_Server ) * Min( AMS ,FirstVNF_CPU_Server ) ) - ( ( ACS - AMS ) - ( Const / BR ) ) ) ) + Min( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) - ( MDR + CRS ) ) * Max( ( PN / DDR ),( Const / AMS ) ) ) ,Max( ( ( FirstVNF_Mem + DDR ) + Min( FirstVNF_Mem ,ACS ) ),( Max( CRS,BR ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) ) ) ) ,( Max( ( Max( ( ( FirstVNF_RAM * MDR ) * ( FirstVNF_RAM - BR ) ),( ( FirstVNF_Mem / MDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( Max( Min( RRS ,DDR ),( PN * FirstVNF_Mem_Server ) ) - Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_CPU_Server / ARS ) ) ) ),( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( MDR,MRS ) ) + Min( ( FirstVNF_RAM - AMS ) ,Max( FirstVNF_Mem,AMS ) ) ) + ( ( ( DDR - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + Max( Min( FirstVNF_Mem ,FirstVNF_Mem ),( MDR / ARS ) ) ) ) ) / ( ( ( ( ( ACS / PN ) + Max( MDR,MRS ) ) - Min( ( FirstVNF_Mem * CRS ) ,Max( RRS,ARS ) ) ) * ( ( ( MRS - RRS ) - ( Const - MDR ) ) - ( Min( ACS ,FirstVNF_RAM ) + ( CRS * BR ) ) ) ) + ( Max( ( ( MDR / FirstVNF_Mem ) + Max( MDR,MDR ) ),( Max( MRS,CRS ) * ( FirstVNF_Mem_Server / ARS ) ) ) - Min( ( Max( BR,BR ) * ( BR / FirstVNF_Mem_Server ) ) ,( ( RRS / DDR ) / ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) ) ) ) ,Max( ( ( Max( ( ( Max( FirstVNF_Mem,MRS ) + ( FirstVNF_Mem_Server + ARS ) ) * Min( Min( CRS ,BR ) ,( FirstVNF_RAM_Server - CRS ) ) ),( Max( ( CRS / ACS ),( ACS / CRS ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) + ( MDR / PN ) ) ) ) * ( Min( ( ( AMS - ARS ) / ( FirstVNF_Mem_Server * ARS ) ) ,Max( ( BR * ARS ),Max( RRS,PN ) ) ) + Max( ( ( FirstVNF_CPU / MDR ) / Max( CRS,AMS ) ),( ( FirstVNF_CPU / FirstVNF_RAM_Server ) - Max( AMS,PN ) ) ) ) ) + ( ( ( Min( Min( AMS ,PN ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) - ( Min( Min( FirstVNF_RAM ,FirstVNF_CPU ) ,Min( BR ,FirstVNF_CPU ) ) * Max( Max( BR,DDR ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) / Min( Min( ( Max( FirstVNF_CPU,ARS ) / ( AMS + FirstVNF_Mem_Server ) ) ,Min( ( FirstVNF_CPU_Server / RRS ) ,( FirstVNF_CPU - BR ) ) ) ,Max( ( Min( AMS ,FirstVNF_Mem_Server ) / ( DDR + FirstVNF_Mem ) ),( Min( MDR ,AMS ) / ( DDR * DDR ) ) ) ) ) ),Max( ( ( ( Max( Max( FirstVNF_CPU_Server,AMS ),Min( ARS ,MRS ) ) - ( ( FirstVNF_RAM_Server / MDR ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) + ( ( Min( ACS ,RRS ) + Max( RRS,RRS ) ) * Max( ( BR + FirstVNF_RAM_Server ),( FirstVNF_RAM - RRS ) ) ) ) * ( ( ( ( FirstVNF_Mem + Const ) * ( CRS - FirstVNF_RAM_Server ) ) + Max( ( FirstVNF_Mem / RRS ),Max( FirstVNF_CPU_Server,MDR ) ) ) * Max( Max( ( FirstVNF_CPU_Server + AMS ),Max( ARS,FirstVNF_RAM ) ),( Max( ACS,MRS ) / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ),Max( Min( ( Max( Max( PN,DDR ),( ACS * FirstVNF_CPU_Server ) ) / Min( Max( RRS,MRS ) ,( FirstVNF_CPU_Server * MDR ) ) ) ,( ( ( CRS / Const ) - ( FirstVNF_RAM_Server * CRS ) ) + ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MRS ) ) ) ),( Max( Min( ( ARS * FirstVNF_CPU ) ,( ARS / FirstVNF_Mem ) ),( ( FirstVNF_CPU_Server * ARS ) / ( PN / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server - DDR ) * ( AMS * FirstVNF_Mem ) ) ,Max( Max( FirstVNF_RAM,PN ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MUR + MUM ) - ( MUC / RCSe ) ) / Min( Max( CS,CS ) ,( MLU - MUC ) ) ) + ( ( Min( MUM ,RMSe ) / Max( MUM,MUR ) ) - ( ( RMSe / RRSe ) - ( DS + DS ) ) ) ) + ( ( ( ( MUC * RRSe ) + ( MUR / MLU ) ) * ( ( MUC + DS ) * ( CS * CS ) ) ) + Min( Min( ( RMSe + DS ) ,( CS + MUM ) ) ,( ( RRSe / CS ) - ( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( ( RRSe * CS ) ,( MLU - RMSe ) ) - ( Min( RRSe ,DS ) + Max( MUM,MLU ) ) ) * ( ( ( RRSe - MLU ) + ( RRSe * MUC ) ) * ( ( RCSe / CS ) / ( RCSe - CS ) ) ) ),( ( ( Max( RCSe,RRSe ) / Max( RRSe,MUC ) ) + Max( ( MUM - CS ),( MLU + MUC ) ) ) / ( ( Min( RCSe ,MLU ) + ( MUM - MLU ) ) - ( ( MUM * RRSe ) + ( RMSe - DS ) ) ) ) ) ) - Min( ( ( ( ( ( CS - MUC ) + Max( RCSe,MUM ) ) / Min( ( RRSe * CS ) ,Max( RRSe,RRSe ) ) ) - ( ( ( RMSe + RMSe ) - Min( RCSe ,MUR ) ) + Min( ( CS / CS ) ,( RCSe / RRSe ) ) ) ) * ( ( Min( ( RRSe / DS ) ,Max( MUR,DS ) ) - ( ( CS - RCSe ) - ( MUM - DS ) ) ) * ( Min( ( MLU - DS ) ,( MUC * MUC ) ) / ( ( RCSe / MUC ) * ( RCSe / DS ) ) ) ) ) ,( ( ( ( ( DS * MLU ) - ( RCSe * MUC ) ) / ( ( RMSe / RRSe ) * ( MUM * RRSe ) ) ) - ( Min( ( RCSe * CS ) ,( MUR + RMSe ) ) / Min( ( CS - RMSe ) ,Max( MLU,MUR ) ) ) ) - Max( ( ( Max( MUC,MUC ) - ( MUR - MLU ) ) * Max( Max( MUR,RCSe ),( RMSe / MUC ) ) ),( Min( Min( CS ,MUR ) ,Min( MUC ,MUM ) ) / ( Max( RCSe,DS ) - Max( MUM,MUR ) ) ) ) ) ) ) ,( ( Min( Min( ( ( Min( MUC ,MUC ) / ( RRSe * CS ) ) * ( ( RMSe / CS ) * ( CS - RMSe ) ) ) ,( ( ( MLU / DS ) * Min( DS ,RRSe ) ) / Max( ( RCSe - MUC ),Min( RMSe ,CS ) ) ) ) ,( ( Max( ( RMSe + MLU ),( MUM - MUR ) ) + ( ( MUC + CS ) * ( MUC - MLU ) ) ) + ( ( ( RRSe / MUR ) + ( MUM - RCSe ) ) / ( ( MUR / RCSe ) - ( RMSe - MUR ) ) ) ) ) / ( ( Min( ( Max( CS,MUC ) + ( MUC * RMSe ) ) ,( Min( MUR ,RCSe ) - Min( CS ,MUR ) ) ) / ( ( ( MUR / MUC ) - ( RCSe - RRSe ) ) - ( ( DS * MUM ) + ( MUC + MUC ) ) ) ) / ( ( Min( Min( RCSe ,RMSe ) ,( RRSe * CS ) ) + ( Max( MUR,RRSe ) * ( MLU / MUC ) ) ) - Max( ( Min( DS ,CS ) + ( RMSe - MLU ) ),Min( Min( RCSe ,MUR ) ,Max( MUC,RCSe ) ) ) ) ) ) / Max( Min( ( ( ( ( RRSe - DS ) + ( RMSe + RMSe ) ) - ( Max( RMSe,RMSe ) - ( MUR * DS ) ) ) - Min( ( ( MUM / DS ) * ( MLU - RMSe ) ) ,Min( Max( RCSe,MLU ) ,Max( RRSe,CS ) ) ) ) ,( ( Min( ( MUC - RRSe ) ,( MUM * MUC ) ) - Min( ( RMSe * MUR ) ,( CS / MUR ) ) ) + Max( ( ( MUR - MLU ) + ( MUR - CS ) ),( ( MUR / MUC ) * Min( RMSe ,DS ) ) ) ) ),( ( Max( ( ( RRSe + RMSe ) / ( MUC / RRSe ) ),( Min( RCSe ,DS ) / ( CS + MUR ) ) ) - Max( ( ( MUC + CS ) / Min( RRSe ,CS ) ),Max( ( MUC * RMSe ),( RRSe * RCSe ) ) ) ) + Min( ( Min( ( MUM - MUM ) ,( MUR / MUR ) ) + ( ( RMSe - MLU ) * ( RRSe - RMSe ) ) ) ,( ( ( DS + MUR ) - ( RMSe - RCSe ) ) * ( ( RRSe / MUR ) - Min( DS ,CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,Max( Const,FirstVNF_CPU_Server ) ),AMS ) * Max( MRS,RRS ) )", "choosing": "( Max( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ),( ( RCSe - RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * MUR ) + ( MUM * RRSe ) ) ) )", "obj1": 0.07735849056603773, "obj2": 0.7949434110881185}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.17547169811320754, "obj2": 0.652460857899411}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_Mem,ACS ) ) ) ) ) ) )", "choosing": "( ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( Min( MUC ,CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.22264150943396227, "obj2": 0.6337393046206677}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,RRS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS - CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5113207547169811, "obj2": 0.3350975656567516}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + MDR ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * MUM ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.47547169811320755, "obj2": 0.3680950681783036}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + Min( ACS ,Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.15660377358490565, "obj2": 0.7017508093120922}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * Min( MUM ,DS ) ) ) ) + ( RCSe * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.5622641509433962, "obj2": 0.3023047743611106}, {"determining": "( ( ARS - ( DDR - PN ) ) - Min( ACS ,Const ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * ( Max( DS,MUR ) - ( ( RCSe - MLU ) / ( RRSe - MUR ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) * Min( MUM ,CS ) ) ) )", "obj1": 0.6056603773584905, "obj2": 0.2797944829746268}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( Min( ARS ,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( RMSe,CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.35283018867924526, "obj2": 0.4860039421228901}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.6981132075471698, "obj2": 0.17649160699165495}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4, "obj2": 0.44294519512616853}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.6622641509433962, "obj2": 0.20892363592233928}, {"determining": "( ( ACS * DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( MLU,RRSe ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR + RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.6509433962264151, "obj2": 0.23652348352701363}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( Const ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) ) * ( ( MUC * DS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.43018867924528303, "obj2": 0.42031477382828053}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( Max( ARS,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( ( ( RRSe * DS ) * ( MUC - MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4509433962264151, "obj2": 0.38669906093449}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.2528301886792453, "obj2": 0.5858667233557018}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5358490566037736, "obj2": 0.3154976328116365}, {"determining": "( ( ACS - DDR ) - ( ( FirstVNF_CPU_Server / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / MUC ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.7415094339622641, "obj2": 0.15168986992610395}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( Min( ARS ,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( MRS / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( MUR,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.37924528301886795, "obj2": 0.46306707932685415}, {"determining": "( ( ACS * DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( MLU,RRSe ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR + RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.6283018867924528, "obj2": 0.25638502608747404}, {"determining": "( Max( Min( AMS ,( Const + FirstVNF_CPU_Server ) ),AMS ) * Max( ACS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RRSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( Min( RCSe ,CS ) * MUC ) ) + ( MUM * RRSe ) ) ) )", "obj1": 0.30377358490566037, "obj2": 0.5501166314196715}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,Max( Const,RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,DS ) + ( MUM + MUM ) ) ) )", "obj1": 0.33773584905660375, "obj2": 0.5021133986189483}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / Max( ( MUC + RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / RCSe ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7811320754716982, "obj2": 0.11102808604624954}, {"determining": "( ( MDR / ( ( ACS - DDR ) - ( DDR - PN ) ) ) - ( ( MDR / AMS ) + ( RRS / MDR ) ) )", "choosing": "( ( ( Max( ( MUR + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,( ( RCSe - MLU ) + Max( RRSe,MUM ) ) ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUC ) ) ) - ( ( ( MUC / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.3169811320754717, "obj2": 0.530063478070261}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR / AMS ) + ( FirstVNF_CPU / BR ) ) ) )", "choosing": "( ( ( Max( ( MUR + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + DS ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUC ) ) ) - ( ( ( MUC / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7150943396226415, "obj2": 0.15279953220882267}, {"determining": "( PN - ( DDR - ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.24150943396226415, "obj2": 0.6047316066186091}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) + ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.9339622641509434, "obj2": 0.028108802782443678}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( CS + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ) / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7584905660377359, "obj2": 0.1307314028406601}, {"determining": "( Max( RRS,ACS ) + Min( ACS ,Min( Min( Min( Min( DDR ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.11132075471698114, "obj2": 0.7416522545504768}, {"determining": "( ( ( Max( ( Min( ( Max( CRS,BR ) / ( BR / DDR ) ) ,( Min( RRS ,DDR ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) + ( ( ( ARS + FirstVNF_RAM_Server ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) * ( ( CRS - AMS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_Mem + MDR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) / Max( Min( Min( PN ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * FirstVNF_Mem ) ),( Max( RRS,BR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( Min( Min( ( ( AMS / Const ) * ( FirstVNF_RAM / AMS ) ) ,( Min( ARS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,RRS ) ) ) ,Max( ( ( Const + FirstVNF_RAM ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem ) * ( ACS * Const ) ) ) ) * Min( ( ( ( FirstVNF_CPU * ARS ) * ( MRS * FirstVNF_Mem ) ) / Max( ( PN * FirstVNF_CPU ),( MRS + ACS ) ) ) ,Min( ( ( MDR / FirstVNF_RAM ) * ( MRS * FirstVNF_Mem_Server ) ) ,Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * DDR ) ) ) ) ) ) / ( ( ( Max( ( Max( Const,FirstVNF_CPU_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,ARS ) - Min( DDR ,FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_RAM - CRS ) - ( ACS / DDR ) ) - ( ( PN - CRS ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) + ( ( ( Max( FirstVNF_RAM,DDR ) + Min( RRS ,FirstVNF_CPU_Server ) ) / Max( Min( ARS ,AMS ),Min( ARS ,FirstVNF_CPU ) ) ) + ( Min( ( DDR * DDR ) ,( CRS * FirstVNF_RAM ) ) + ( ( MDR * ARS ) - ( CRS - MRS ) ) ) ) ) / ( Max( ( Max( ( PN * DDR ),Min( CRS ,AMS ) ) * Max( Min( AMS ,DDR ),Min( FirstVNF_RAM ,PN ) ) ),( ( Max( PN,CRS ) - ( FirstVNF_CPU + RRS ) ) - ( Max( MRS,RRS ) - Min( DDR ,BR ) ) ) ) - ( ( Max( Max( FirstVNF_CPU_Server,RRS ),Min( MRS ,FirstVNF_RAM ) ) / ( Max( PN,FirstVNF_Mem_Server ) - ( ARS * MDR ) ) ) / ( ( ( CRS * Const ) + ( MDR / Const ) ) * ( Min( Const ,ACS ) + ( Const - RRS ) ) ) ) ) ) ) + ( Max( Min( Max( ( ( ( FirstVNF_CPU_Server - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( MDR + AMS ) - Max( RRS,AMS ) ) ),Max( ( Min( DDR ,CRS ) / Min( FirstVNF_Mem ,ARS ) ),Max( Min( CRS ,FirstVNF_CPU ),( ACS / ACS ) ) ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( PN / FirstVNF_RAM ) ) - ( ( Const * FirstVNF_RAM_Server ) + ( Const + FirstVNF_RAM_Server ) ) ) + ( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( PN / BR ) ) / ( ( RRS * FirstVNF_Mem ) - ( CRS * PN ) ) ) ) ),Min( Max( ( Max( ( FirstVNF_RAM + Const ),Min( RRS ,PN ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( BR / RRS ) ) ),( ( ( FirstVNF_Mem_Server + ACS ) + Max( FirstVNF_CPU_Server,Const ) ) + ( ( AMS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / AMS ),( CRS - MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,Max( RRS,ARS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem - AMS ) ) ) ) ) ) / ( Max( ( Min( ( ( FirstVNF_Mem + MDR ) - ( FirstVNF_CPU_Server - BR ) ) ,( Min( AMS ,MRS ) - ( BR / FirstVNF_CPU_Server ) ) ) + ( ( Max( FirstVNF_CPU_Server,BR ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) + Min( ( ACS / PN ) ,( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ),Min( ( ( ( DDR - FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) / ( ( FirstVNF_RAM_Server - Const ) - ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ,Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( MRS / FirstVNF_RAM ) ) ) ) ) - ( ( ( ( ( RRS / DDR ) * ( FirstVNF_Mem_Server * ARS ) ) - Min( Min( FirstVNF_RAM_Server ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) ) / Min( Min( ( PN + RRS ) ,Min( FirstVNF_CPU ,Const ) ) ,Max( ( MRS / FirstVNF_CPU_Server ),Max( CRS,MRS ) ) ) ) + ( Min( ( ( FirstVNF_CPU + MRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,( ( Const + FirstVNF_CPU ) * Min( ACS ,RRS ) ) ) / ( ( ( FirstVNF_CPU - CRS ) * ( CRS / RRS ) ) / ( Max( BR,MRS ) - ( Const * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,MUM ) / CS ) + ( MLU / ( ( ( MUR * ( ( MUR - Max( MUM,RMSe ) ) - DS ) ) * MUR ) + RRSe ) ) )", "obj1": 0.8169811320754717, "obj2": 0.08708664885091348}, {"determining": "( FirstVNF_CPU_Server - ( DDR - PN ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,MUR ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.2830188679245283, "obj2": 0.5752399355520291}, {"determining": "( PN - ( DDR - ( ( ARS + RRS ) / ( BR * CRS ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUR ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.09056603773584905, "obj2": 0.7655884679167032}, {"determining": "( Max( Max( Max( MRS,ACS ),( FirstVNF_RAM_Server * AMS ) ),( ( AMS * FirstVNF_Mem_Server ) / Min( RRS ,Const ) ) ) - ( ( MDR / AMS ) * ( RRS / MDR ) ) )", "choosing": "( ( ( Max( ( ( RRSe * DS ) + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) + Min( DS ,MUC ) ) ) - ( ( ( RCSe / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.1, "obj2": 0.7544091452033177}, {"determining": "( PN - ( DDR - PN ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.7962264150943397, "obj2": 0.09789076207151064}, {"determining": "( Max( Min( DDR ,( ( DDR - PN ) + FirstVNF_CPU_Server ) ),AMS ) * Max( ACS,RRS ) )", "choosing": "( ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( RCSe * RMSe ) * Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) ) ) + ( ( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + RCSe ) ) ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.08867924528301886, "obj2": 0.7891145853334596}, {"determining": "( ( ( ACS - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) )", "choosing": "( ( ( Max( MLU,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + ( RRSe * DS ) ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.8339622641509434, "obj2": 0.06998579437593752}, {"determining": "( PN - ( FirstVNF_CPU - MDR ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * RCSe ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) - Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.1509433962264151, "obj2": 0.7118214165605997}, {"determining": "( ( ( Max( Min( BR ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) / ( ( CS + MUC ) - ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.7641509433962265, "obj2": 0.12330207216563135}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( ACS - Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( RRSe ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.12452830188679245, "obj2": 0.7276671951822116}, {"determining": "( Max( RRS,( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) / AMS ) ) + Min( ACS ,Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * Min( MUM ,MUM ) ) ) ) ),( RCSe - ( MUC * ( Min( MLU ,CS ) * MUC ) ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7189559230938527}, {"determining": "( ( ACS - FirstVNF_RAM ) - Min( ARS ,( ( AMS / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) - ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,CS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.7037735849056603, "obj2": 0.1702622099892809}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - Max( ( DDR * CRS ),( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * Min( ( MUC * CS ) ,Max( MUM,RRSe ) ) ) )", "obj1": 0.3849056603773585, "obj2": 0.45434961098044224}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( ( ACS - DDR ) - ( DDR - PN ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( MUC / CS ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.44528301886792454, "obj2": 0.4030374038412433}, {"determining": "( ( ACS / DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( RRSe + MUM ) ) ) )", "obj1": 0.6584905660377358, "obj2": 0.213299237268371}, {"determining": "( MDR - ( DDR / ACS ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + MUR ) ) / ( ( ( MUC / DS ) - ( RMSe / MUR ) ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( RCSe * MUR ) ) ) )", "obj1": 0.9, "obj2": 0.03295099759865825}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( ( ACS - RRS ),Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,CS ) ,( MUR / CS ) ) ),MUR ) * ( ( ( CS + MUC ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ) / RRSe ) ) - ( Min( MUR ,RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5566037735849056, "obj2": 0.3144699151923303}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Max( ( Const - RRS ),( RRS - FirstVNF_Mem ) ),RRS ) )", "choosing": "( ( Max( Min( MUC ,MUC ),( RRSe * MUM ) ) / ( ( RCSe * RMSe ) / Min( Max( RMSe,MLU ) ,( RCSe * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) / ( MUM * RRSe ) ) ) )", "obj1": 0.2962264150943396, "obj2": 0.5688876055089498}, {"determining": "( ( MDR / ( ( ACS - DDR ) - ( DDR - PN ) ) ) + Min( ACS ,Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( RRSe / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.3320754716981132, "obj2": 0.523248983618917}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),( FirstVNF_CPU - Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * RRSe ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9490566037735849, "obj2": 0.020932005620704273}], "10": [{"determining": "( ( ACS - DDR ) - ( ( FirstVNF_CPU_Server / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / MUC ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( DDR - ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( MDR / AMS ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,RRSe ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,Max( Const,FirstVNF_CPU_Server ) ),AMS ) * Max( MRS,RRS ) )", "choosing": "( Max( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ),( ( RCSe - RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * MUR ) + ( MUM * RRSe ) ) ) )", "obj1": 0.07735849056603773, "obj2": 0.7949434110881185}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.17547169811320754, "obj2": 0.652460857899411}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / FirstVNF_Mem ) / ( ( ( MDR / AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( MLU,MLU ) * Max( RCSe,RRSe ) ) - ( ( MUR + RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / RCSe ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7679245283018868, "obj2": 0.08246808953799611}, {"determining": "( MDR - ( DDR / ACS ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + MUR ) ) / ( ( ( MUC / DS ) - ( RMSe / MUR ) ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( RCSe * MUR ) ) ) )", "obj1": 0.9, "obj2": 0.03295099759865825}, {"determining": "Max( ( ( MRS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( FirstVNF_Mem_Server ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( Min( MUR ,( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( DS ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.22075471698113208, "obj2": 0.618303054457343}, {"determining": "( ( ( Max( ( Min( ( Max( CRS,BR ) / ( BR / DDR ) ) ,( Min( RRS ,DDR ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) + ( ( ( ARS + FirstVNF_RAM_Server ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) * ( ( CRS - AMS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_Mem + MDR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) / Max( Min( Min( PN ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * FirstVNF_Mem ) ),( Max( RRS,BR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( Min( Min( ( ( AMS / Const ) * ( FirstVNF_RAM / AMS ) ) ,( Min( ARS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,RRS ) ) ) ,Max( ( ( Const + FirstVNF_RAM ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem ) * ( ACS * Const ) ) ) ) * Min( ( ( ( FirstVNF_CPU * ARS ) * ( MRS * FirstVNF_Mem ) ) / Max( ( PN * FirstVNF_CPU ),( MRS + ACS ) ) ) ,Min( ( ( MDR / FirstVNF_RAM ) * ( MRS * FirstVNF_Mem_Server ) ) ,Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * DDR ) ) ) ) ) ) / ( ( ( Max( ( Max( Const,FirstVNF_CPU_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,ARS ) - Min( DDR ,FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_RAM - CRS ) - ( ACS / DDR ) ) - ( ( PN - CRS ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) + ( ( ( Max( FirstVNF_RAM,DDR ) + Min( RRS ,FirstVNF_CPU_Server ) ) / Max( Min( ARS ,AMS ),Min( ARS ,FirstVNF_CPU ) ) ) + ( Min( ( DDR * DDR ) ,( CRS * FirstVNF_RAM ) ) + ( ( MDR * ARS ) - ( CRS - MRS ) ) ) ) ) / ( Max( ( Max( ( PN * DDR ),Min( CRS ,AMS ) ) * Max( Min( AMS ,DDR ),Min( FirstVNF_RAM ,PN ) ) ),( ( Max( PN,CRS ) - ( FirstVNF_CPU + RRS ) ) - ( Max( MRS,RRS ) + Min( DDR ,BR ) ) ) ) - ( ( Max( Max( FirstVNF_CPU_Server,RRS ),Min( MRS ,FirstVNF_RAM ) ) / ( Max( PN,FirstVNF_Mem_Server ) - ( ARS * MDR ) ) ) / ( ( ( CRS * Const ) + ( MDR / Const ) ) * ( Min( Const ,ACS ) + ( Const - RRS ) ) ) ) ) ) ) + ( Max( Min( Max( ( ( ( FirstVNF_CPU_Server - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( MDR + AMS ) - Max( RRS,AMS ) ) ),Max( ( Min( DDR ,CRS ) / Min( FirstVNF_Mem ,ARS ) ),Max( Min( CRS ,FirstVNF_CPU ),( ACS / ACS ) ) ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( PN / FirstVNF_RAM ) ) - ( ( Const * FirstVNF_RAM_Server ) + ( Const + FirstVNF_RAM_Server ) ) ) + Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ),Min( Max( ( Max( ( FirstVNF_RAM + Const ),Min( RRS ,PN ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( BR / RRS ) ) ),( ( ( FirstVNF_Mem_Server + ACS ) + Max( FirstVNF_CPU_Server,Const ) ) + ( ( AMS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / AMS ),( CRS - MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,Max( RRS,ARS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem - AMS ) ) ) ) ) ) / ( Max( ( Min( ( ( FirstVNF_Mem + MDR ) - ( FirstVNF_CPU_Server - BR ) ) ,( Min( AMS ,MRS ) - ( BR / FirstVNF_CPU_Server ) ) ) + ( ( Max( FirstVNF_CPU_Server,BR ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) + Min( ( ACS / PN ) ,( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ),Min( ( ( ( DDR - FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) / ( ( FirstVNF_RAM_Server - Const ) - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) ,Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( MRS / FirstVNF_RAM ) ) ) ) ) - ( ( ( ( ( RRS / DDR ) * ( FirstVNF_Mem_Server * ARS ) ) - Min( Min( FirstVNF_RAM_Server ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) ) / Min( Min( ( PN + RRS ) ,Min( FirstVNF_CPU ,Const ) ) ,Max( ( MRS / FirstVNF_CPU_Server ),Max( CRS,MRS ) ) ) ) + ( Min( ( ( FirstVNF_CPU + MRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,( ( Const + FirstVNF_CPU ) * Min( ACS ,RRS ) ) ) / ( ( ( FirstVNF_CPU - CRS ) * ( CRS / RRS ) ) / ( Max( BR,MRS ) - ( Const * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / CS ) + ( RRSe / ( ( ( MUR * ( ( MUR - Max( MUM,DS ) ) - DS ) ) * MUR ) + RRSe ) ) )", "obj1": 0.8566037735849057, "obj2": 0.06558652770796525}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,RRS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS - CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5113207547169811, "obj2": 0.3350975656567516}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + Min( ACS ,Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.15660377358490565, "obj2": 0.7017508093120922}, {"determining": "( ( ( ACS - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) )", "choosing": "( ( ( Max( MLU,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + ( RRSe * DS ) ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.8339622641509434, "obj2": 0.06998579437593752}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4, "obj2": 0.44294519512616853}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( Max( ( ARS + FirstVNF_CPU ),( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( RCSe * MUM ) ) ) )", "obj1": 0.4188679245283019, "obj2": 0.4070567962308574}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( Min( ARS ,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( RMSe,CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.35283018867924526, "obj2": 0.4860039421228901}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.6981132075471698, "obj2": 0.17649160699165495}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.6622641509433962, "obj2": 0.20892363592233928}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( Max( ARS,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( ( ( RRSe * DS ) * ( MUC - MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4509433962264151, "obj2": 0.38669906093449}, {"determining": "( ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) + ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) )", "obj1": 0.4830188679245283, "obj2": 0.3677456410320062}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),( FirstVNF_CPU - Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * RRSe ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9490566037735849, "obj2": 0.020932005620704273}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( Min( ARS ,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( MRS / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( MUR,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.37924528301886795, "obj2": 0.46306707932685415}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.2660377358490566, "obj2": 0.5730551670380969}, {"determining": "( ( ARS - ( DDR - PN ) ) - Min( ACS ,Const ) )", "choosing": "( ( ( Max( ( ( ( ( DS + CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * ( Max( DS,MUR ) - ( ( RCSe - MLU ) / ( RRSe - MUR ) ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) * Min( MUM ,CS ) ) ) )", "obj1": 0.6056603773584905, "obj2": 0.2797944829746268}, {"determining": "( ( ( Max( Min( BR ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) / ( ( CS + MUC ) - ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.7641509433962265, "obj2": 0.12330207216563135}, {"determining": "( PN - ( DDR - ( ACS - DDR ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( MUC / CS ) )", "obj1": 0.29056603773584905, "obj2": 0.5597536812483732}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) + ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.9339622641509434, "obj2": 0.028108802782443678}, {"determining": "( ( Const + DDR ) - ( DDR + CRS ) )", "choosing": "( ( RMSe / ( ( ( RRSe / DS ) * Min( MUC ,MLU ) ) * Max( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * RRSe ) ) ),( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.5622641509433962, "obj2": 0.2920931770087035}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.2528301886792453, "obj2": 0.5858667233557018}, {"determining": "( ( MDR / ( ( ACS - DDR ) - ( DDR - PN ) ) ) - ( ( MDR / AMS ) + ( RRS / MDR ) ) )", "choosing": "( ( ( Max( ( MUR + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,( ( RCSe - MLU ) + Max( RRSe,MUM ) ) ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUC ) ) ) - ( ( ( MUC / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.3169811320754717, "obj2": 0.530063478070261}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.5849056603773585, "obj2": 0.2878350575134194}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.4377358490566038, "obj2": 0.4006435006087135}, {"determining": "( Max( RRS,ACS ) + Min( ACS ,Min( Min( Min( Min( DDR ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.11132075471698114, "obj2": 0.7416522545504768}, {"determining": "( ( ACS * DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( MLU,RRSe ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + DS ) + MUC ) ) ) ) - ( ( MUR + RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.6433962264150943, "obj2": 0.25565551458546626}, {"determining": "( PN - ( DDR - MRS ) )", "choosing": "Max( ( MUR / ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * MUM ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) ),( RCSe - MLU ) )", "obj1": 0.9811320754716981, "obj2": 0.009036247695953513}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + MDR ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * MUM ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.47547169811320755, "obj2": 0.3680950681783036}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR / AMS ) + ( FirstVNF_CPU / BR ) ) ) )", "choosing": "( ( ( Max( ( MUR + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + DS ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUC ) ) ) - ( ( ( MUC / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7150943396226415, "obj2": 0.15279953220882267}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.3264150943396226, "obj2": 0.508203286858787}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.6471698113207547, "obj2": 0.2250177330586013}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,Max( Const,RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,DS ) + ( MUM + MUM ) ) ) )", "obj1": 0.33773584905660375, "obj2": 0.5021133986189483}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / CRS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( RRSe * MLU ) + ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.6226415094339622, "obj2": 0.2618175195483498}, {"determining": "( Max( Max( Max( MRS,ACS ),( FirstVNF_RAM_Server * AMS ) ),( ( AMS * FirstVNF_Mem_Server ) / Min( RRS ,Const ) ) ) - ( ( MDR / AMS ) * ( RRS / MDR ) ) )", "choosing": "( ( ( Max( ( ( RRSe * DS ) + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) + Min( DS ,MUC ) ) ) - ( ( ( RCSe / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.1, "obj2": 0.7544091452033177}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + Min( ACS ,Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.08490566037735849, "obj2": 0.7735327282806951}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,RRS ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RCSe ) ) ) )", "obj1": 0.5320754716981132, "obj2": 0.32659193750572996}, {"determining": "( PN - ( FirstVNF_CPU - MDR ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * RCSe ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) - Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.1509433962264151, "obj2": 0.7118214165605997}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( ACS - Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( RRSe ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.12452830188679245, "obj2": 0.7276671951822116}, {"determining": "( Max( RRS,( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) / AMS ) ) + Min( ACS ,Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * Min( MUM ,MUM ) ) ) ) ),( RCSe - ( MUC * ( Min( MLU ,CS ) * MUC ) ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7189559230938527}, {"determining": "( ( ACS - FirstVNF_RAM ) - Min( ARS ,( ( AMS / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) - ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,CS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.7037735849056603, "obj2": 0.1702622099892809}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - Max( ( DDR * CRS ),( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * Min( ( MUC * CS ) ,Max( MUM,RRSe ) ) ) )", "obj1": 0.3849056603773585, "obj2": 0.45434961098044224}, {"determining": "( PN - ( DDR - ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.24150943396226415, "obj2": 0.6047316066186091}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.5509433962264151, "obj2": 0.3120467357886118}, {"determining": "( ( ACS - DDR ) - ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.7433962264150943, "obj2": 0.1368694388027642}, {"determining": "( PN - ( DDR - ( ( ARS + RRS ) / ( BR * CRS ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUR ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.09056603773584905, "obj2": 0.7655884679167032}], "11": [{"determining": "( MDR - ( DDR - RRS ) )", "choosing": "( Min( MUM ,DS ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - DDR ) - ( ( FirstVNF_CPU_Server / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / MUC ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,Max( Const,FirstVNF_CPU_Server ) ),AMS ) * Max( MRS,RRS ) )", "choosing": "( Max( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ),( ( RCSe - RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * MUR ) + ( MUM * RRSe ) ) ) )", "obj1": 0.07735849056603773, "obj2": 0.7949434110881185}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( MDR / AMS ) - Min( DDR ,FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUM / ( ( ( RRSe * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.7094339622641509, "obj2": 0.11343451921480893}, {"determining": "Max( ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) / CS ) )", "obj1": 0.3754716981132076, "obj2": 0.4317686460351788}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.17547169811320754, "obj2": 0.652460857899411}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.2509433962264151, "obj2": 0.5575757447228966}, {"determining": "Max( ( ( MRS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( FirstVNF_Mem_Server ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( Min( MUR ,( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( DS ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.22075471698113208, "obj2": 0.618303054457343}, {"determining": "( MDR - ( DDR / ACS ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + MUR ) ) / ( ( ( MUC / DS ) - ( RMSe / MUR ) ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( RCSe * MUR ) ) ) )", "obj1": 0.9, "obj2": 0.03295099759865825}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( Max( ACS,DDR ) - ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC / MLU ) / Max( RMSe,( Min( MLU ,CS ) * ( RCSe + MUM ) ) ) )", "obj1": 0.660377358490566, "obj2": 0.20738699549771517}, {"determining": "( PN - ( DDR - ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.24150943396226415, "obj2": 0.6047316066186091}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( Max( ( ARS + FirstVNF_CPU ),( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( RCSe * MUM ) ) ) )", "obj1": 0.4188679245283019, "obj2": 0.4070567962308574}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / DDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( MLU,MLU ) * Max( CS,RRSe ) ) - ( ( RCSe - MLU ) - Max( DS,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7660377358490567, "obj2": 0.0832179456712175}, {"determining": "( ( ( Max( ( Min( ( Max( CRS,BR ) / ( BR / DDR ) ) ,( Min( RRS ,DDR ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) + ( ( ( ARS + FirstVNF_RAM_Server ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) * ( ( CRS - AMS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_Mem + MDR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) / Max( Min( Min( PN ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * FirstVNF_Mem ) ),( Max( RRS,BR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( Min( Min( ( ( AMS / Const ) * ( FirstVNF_RAM / AMS ) ) ,( Min( ARS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,RRS ) ) ) ,Max( ( ( Const + FirstVNF_RAM ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem ) * ( ACS * Const ) ) ) ) * Min( ( ( ( FirstVNF_CPU * ARS ) * ( MRS * FirstVNF_Mem ) ) / Max( ( PN * FirstVNF_CPU ),( MRS + ACS ) ) ) ,Min( ( ( MDR / FirstVNF_RAM ) * ( MRS * FirstVNF_Mem_Server ) ) ,Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * DDR ) ) ) ) ) ) / ( ( ( Max( ( Max( Const,FirstVNF_CPU_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,ARS ) - Min( DDR ,FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_RAM - CRS ) - ( ACS / DDR ) ) - ( ( PN - CRS ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) + ( ( ( Max( FirstVNF_RAM,DDR ) + Min( RRS ,FirstVNF_CPU_Server ) ) / Max( Min( ARS ,AMS ),Min( ARS ,FirstVNF_CPU ) ) ) + ( Min( ( DDR * DDR ) ,( CRS * FirstVNF_RAM ) ) + ( ( MDR * ARS ) - ( CRS - MRS ) ) ) ) ) / ( Max( ( Max( ( PN * DDR ),Min( CRS ,AMS ) ) * Max( Min( AMS ,DDR ),Min( FirstVNF_RAM ,PN ) ) ),( ( Max( PN,CRS ) - ( FirstVNF_CPU + RRS ) ) - ( Max( MRS,RRS ) + Min( DDR ,BR ) ) ) ) - ( ( Max( Max( FirstVNF_CPU_Server,RRS ),Min( MRS ,FirstVNF_RAM ) ) / ( Max( PN,FirstVNF_Mem_Server ) - ( ARS * MDR ) ) ) / ( ( ( CRS * Const ) + ( MDR / Const ) ) * ( Min( Const ,ACS ) + ( Const - RRS ) ) ) ) ) ) ) + ( Max( Min( Max( ( ( ( FirstVNF_CPU_Server - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( MDR + AMS ) - Max( RRS,AMS ) ) ),Max( ( Min( DDR ,CRS ) / Min( FirstVNF_Mem ,ARS ) ),Max( Min( CRS ,FirstVNF_CPU ),( ACS / ACS ) ) ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( PN / FirstVNF_RAM ) ) - ( ( Const * FirstVNF_RAM_Server ) + ( Const + FirstVNF_RAM_Server ) ) ) + Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ),Min( Max( ( Max( ( FirstVNF_RAM + Const ),Min( RRS ,PN ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( BR / RRS ) ) ),( ( ( FirstVNF_Mem_Server + ACS ) + Max( FirstVNF_CPU_Server,Const ) ) + ( ( AMS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / AMS ),( CRS - MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,Max( RRS,ARS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem - AMS ) ) ) ) ) ) / ( Max( ( Min( ( ( FirstVNF_Mem + MDR ) - ( FirstVNF_CPU_Server - BR ) ) ,( Min( AMS ,MRS ) - ( BR / FirstVNF_CPU_Server ) ) ) + ( ( Max( FirstVNF_CPU_Server,BR ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) + Min( ( ACS / PN ) ,( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ),Min( ( ( ( DDR - FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) / ( ( FirstVNF_RAM_Server - Const ) - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) ,Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( MRS / FirstVNF_RAM ) ) ) ) ) - ( ( ( ( ( RRS / DDR ) * ( FirstVNF_Mem_Server * ARS ) ) - Min( Min( FirstVNF_RAM_Server ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) ) / Min( Min( ( PN + RRS ) ,Min( FirstVNF_CPU ,Const ) ) ,Max( ( MRS / FirstVNF_CPU_Server ),Max( CRS,MRS ) ) ) ) + ( Min( ( ( FirstVNF_CPU + MRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,( ( Const + FirstVNF_CPU ) * Min( ACS ,RRS ) ) ) / ( ( ( FirstVNF_CPU - CRS ) * ( CRS / RRS ) ) / ( Max( BR,MRS ) - ( Const * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / CS ) + ( RRSe / ( ( ( MUR * ( ( MUR - Max( MUM,DS ) ) - DS ) ) * MUR ) + RRSe ) ) )", "obj1": 0.8566037735849057, "obj2": 0.06558652770796525}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR - AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUR ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.6962264150943396, "obj2": 0.17612715016738467}, {"determining": "( ( ( ACS - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) )", "choosing": "( ( ( Max( MLU,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + ( RRSe * DS ) ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.8339622641509434, "obj2": 0.06998579437593752}, {"determining": "( ( ACS - FirstVNF_RAM ) - Min( ARS ,( ( AMS / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) - ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,CS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.7037735849056603, "obj2": 0.1702622099892809}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.35471698113207545, "obj2": 0.48418281722161144}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,RRS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS - CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5113207547169811, "obj2": 0.3350975656567516}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.1641509433962264, "obj2": 0.686262168169034}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( MDR / AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( MLU,MLU ) * Max( RCSe,RRSe ) ) - ( ( MUR + RCSe ) - Max( DS,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7754716981132076, "obj2": 0.07917052066231542}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.5509433962264151, "obj2": 0.3120467357886118}, {"determining": "( ( Const - DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.6377358490566037, "obj2": 0.23081665772442933}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / CRS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( RRSe * MLU ) + ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.6226415094339622, "obj2": 0.2618175195483498}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5207547169811321, "obj2": 0.3234281527536369}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - ( ( ACS - DDR ) - ( DDR - PN ) ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * RMSe ) + ( MUM * RRSe ) ) ) )", "obj1": 0.4849056603773585, "obj2": 0.36624562508780617}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) + ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.9339622641509434, "obj2": 0.028108802782443678}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( Min( ARS ,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( MRS / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( MUR,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.28867924528301886, "obj2": 0.5395106727553509}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.4377358490566038, "obj2": 0.4006435006087135}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,Max( Const,RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,DS ) + ( MUM + MUM ) ) ) )", "obj1": 0.33773584905660375, "obj2": 0.5021133986189483}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.6471698113207547, "obj2": 0.2250177330586013}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + Min( ACS ,Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.08490566037735849, "obj2": 0.7735327282806951}, {"determining": "( PN - ( FirstVNF_CPU - MDR ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * RCSe ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) - Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.1509433962264151, "obj2": 0.7118214165605997}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.5849056603773585, "obj2": 0.2878350575134194}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( ACS - Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( RRSe ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.12452830188679245, "obj2": 0.7276671951822116}, {"determining": "( Max( RRS,( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) / AMS ) ) + Min( ACS ,Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * Min( MUM ,MUM ) ) ) ) ),( RCSe - ( MUC * ( Min( MLU ,CS ) * MUC ) ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7189559230938527}, {"determining": "( Max( RRS,ACS ) + Min( ACS ,Min( Min( Min( Min( DDR ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.11132075471698114, "obj2": 0.7416522545504768}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + Min( ACS ,Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.15660377358490565, "obj2": 0.7017508093120922}, {"determining": "( ( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( MDR / DDR ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) - ( DDR - MRS ) )", "choosing": "Max( ( MUR / ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * MUM ) * Min( Max( RMSe,MLU ) ,( CS * RMSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) ),( ( RCSe - MLU ) / ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) )", "obj1": 0.9641509433962264, "obj2": 0.014293961643974862}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( MUM * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4641509433962264, "obj2": 0.37830455402273655}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,RRSe ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.6150943396226415, "obj2": 0.26881246250068086}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( Min( ARS ,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( RMSe,CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.35283018867924526, "obj2": 0.4860039421228901}, {"determining": "( PN - ( DDR - ( ( ARS + RRS ) / ( BR * CRS ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUR ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.09056603773584905, "obj2": 0.7655884679167032}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( Min( MUC ,MLU ) + MUM ) ) ) )", "obj1": 0.3132075471698113, "obj2": 0.5308799440236988}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( Max( ARS,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( ( ( RRSe * DS ) * ( MUC - MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4509433962264151, "obj2": 0.38669906093449}, {"determining": "( ( Const + DDR ) - ( DDR + CRS ) )", "choosing": "( ( RMSe / ( ( ( RRSe / DS ) * Min( MUC ,MLU ) ) * Max( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * RRSe ) ) ),( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.5622641509433962, "obj2": 0.2920931770087035}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.3264150943396226, "obj2": 0.508203286858787}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( MRS / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.31886792452830187, "obj2": 0.516451789020411}, {"determining": "( ARS - ( DDR - MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - CS ) / ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.9811320754716981, "obj2": 0.006424124384605518}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( RCSe + MUM ) ) ) )", "obj1": 0.29056603773584905, "obj2": 0.5393536065378186}, {"determining": "( Max( Max( Max( MRS,ACS ),( FirstVNF_RAM_Server * AMS ) ),( ( AMS * FirstVNF_Mem_Server ) / Min( RRS ,Const ) ) ) - ( ( MDR / AMS ) * ( RRS / MDR ) ) )", "choosing": "( ( ( Max( ( ( RRSe * DS ) + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) + Min( DS ,MUC ) ) ) - ( ( ( RCSe / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.1, "obj2": 0.7544091452033177}], "12": [{"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ACS - DDR ) - ( ( ( ( ARS + RRS ) / ( BR * CRS ) ) / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( RMSe,( ( MLU * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR - ( DDR - RRS ) )", "choosing": "( Min( MUM ,DS ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,Max( Const,FirstVNF_CPU_Server ) ),AMS ) * Max( MRS,RRS ) )", "choosing": "( Max( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ),( ( RCSe - RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * MUR ) + ( MUM * RRSe ) ) ) )", "obj1": 0.07735849056603773, "obj2": 0.7949434110881185}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( MDR / AMS ) - Min( DDR ,FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUM / ( ( ( RRSe * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.7094339622641509, "obj2": 0.11343451921480893}, {"determining": "Max( ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) / CS ) )", "obj1": 0.3754716981132076, "obj2": 0.4317686460351788}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.2509433962264151, "obj2": 0.5575757447228966}, {"determining": "( MDR - ( DDR / ACS ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + MUR ) ) / ( ( ( MUC / DS ) - ( RMSe / MUR ) ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( RCSe * MUR ) ) ) )", "obj1": 0.9, "obj2": 0.03295099759865825}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( Max( ACS,DDR ) - ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC / MLU ) / Max( RMSe,( Min( MLU ,CS ) * ( RCSe + MUM ) ) ) )", "obj1": 0.660377358490566, "obj2": 0.20738699549771517}, {"determining": "( ( ( Max( ( Min( ( Max( CRS,BR ) / ( BR / DDR ) ) ,( Min( RRS ,DDR ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) + ( ( ( ARS + FirstVNF_RAM_Server ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) * ( ( CRS - AMS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_Mem + MDR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) / Max( Min( Min( PN ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * FirstVNF_Mem ) ),( Max( RRS,BR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( Min( Min( ( ( AMS / Const ) * ( FirstVNF_RAM / AMS ) ) ,( Min( ARS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,RRS ) ) ) ,Max( ( ( Const + FirstVNF_RAM ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem ) * ( ACS * Const ) ) ) ) * Min( ( ( ( FirstVNF_CPU * ARS ) * ( MRS * FirstVNF_Mem ) ) / Max( ( PN * FirstVNF_CPU ),( MRS + ACS ) ) ) ,Min( ( ( MDR / FirstVNF_RAM ) * ( MRS * FirstVNF_Mem_Server ) ) ,Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * DDR ) ) ) ) ) ) / ( ( ( Max( ( Max( Const,FirstVNF_CPU_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,ARS ) - Min( DDR ,FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_RAM - CRS ) - ( ACS / DDR ) ) - ( ( PN - CRS ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) + ( ( ( Max( FirstVNF_RAM,DDR ) + Min( RRS ,FirstVNF_CPU_Server ) ) / Max( Min( ARS ,AMS ),Min( ARS ,FirstVNF_CPU ) ) ) + ( Min( ( DDR * DDR ) ,( CRS * FirstVNF_RAM ) ) + ( ( MDR * ARS ) - ( CRS - MRS ) ) ) ) ) / ( Max( ( Max( ( PN * DDR ),Min( CRS ,AMS ) ) * Max( Min( AMS ,DDR ),Min( FirstVNF_RAM ,PN ) ) ),( ( Max( PN,CRS ) - ( FirstVNF_CPU + RRS ) ) - ( Max( MRS,RRS ) + Min( DDR ,BR ) ) ) ) - ( ( Max( Max( FirstVNF_CPU_Server,RRS ),Min( MRS ,FirstVNF_RAM ) ) / ( Max( PN,FirstVNF_Mem_Server ) - ( ARS * MDR ) ) ) / ( ( ( CRS * Const ) + ( MDR / Const ) ) * ( Min( Const ,ACS ) + ( Const - RRS ) ) ) ) ) ) ) + ( Max( Min( Max( ( ( ( FirstVNF_CPU_Server - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( MDR + AMS ) - Max( RRS,AMS ) ) ),Max( ( Min( DDR ,CRS ) / Min( FirstVNF_Mem ,ARS ) ),Max( Min( CRS ,FirstVNF_CPU ),( ACS / ACS ) ) ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( PN / FirstVNF_RAM ) ) - ( ( Const * FirstVNF_RAM_Server ) + ( Const + FirstVNF_RAM_Server ) ) ) + Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ),Min( Max( ( Max( ( FirstVNF_RAM + Const ),Min( RRS ,PN ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( BR / RRS ) ) ),( ( ( FirstVNF_Mem_Server + ACS ) + Max( FirstVNF_CPU_Server,Const ) ) + ( ( AMS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / AMS ),( CRS - MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,Max( RRS,ARS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem - AMS ) ) ) ) ) ) / ( Max( ( Min( ( ( FirstVNF_Mem + MDR ) - ( FirstVNF_CPU_Server - BR ) ) ,( Min( AMS ,MRS ) - ( BR / FirstVNF_CPU_Server ) ) ) + ( ( Max( FirstVNF_CPU_Server,BR ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) + Min( ( ACS / PN ) ,( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ),Min( ( ( ( DDR - FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) / ( ( FirstVNF_RAM_Server - Const ) - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) ,Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( MRS / FirstVNF_RAM ) ) ) ) ) - ( ( ( ( ( RRS / DDR ) * ( FirstVNF_Mem_Server * ARS ) ) - Min( Min( FirstVNF_RAM_Server ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) ) / Min( Min( ( PN + RRS ) ,Min( FirstVNF_CPU ,Const ) ) ,Max( ( MRS / FirstVNF_CPU_Server ),Max( CRS,MRS ) ) ) ) + ( Min( ( ( FirstVNF_CPU + MRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,( ( Const + FirstVNF_CPU ) * Min( ACS ,RRS ) ) ) / ( ( ( FirstVNF_CPU - CRS ) * ( CRS / RRS ) ) / ( Max( BR,MRS ) - ( Const * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / CS ) + ( RRSe / ( ( ( MUR * ( ( MUR - Max( MUM,DS ) ) - DS ) ) * MUR ) + RRSe ) ) )", "obj1": 0.8566037735849057, "obj2": 0.06558652770796525}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.17547169811320754, "obj2": 0.652460857899411}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / DDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( MLU,MLU ) * Max( CS,RRSe ) ) - ( ( RCSe - MLU ) - Max( DS,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.7660377358490567, "obj2": 0.0832179456712175}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.2943396226415094, "obj2": 0.5042268992070182}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR - AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUR ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.6962264150943396, "obj2": 0.17612715016738467}, {"determining": "( ( ACS - FirstVNF_RAM ) - Min( ARS ,( ( AMS / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) - ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,CS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.7037735849056603, "obj2": 0.1702622099892809}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.35471698113207545, "obj2": 0.48418281722161144}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( Max( Min( CRS ,Const ),Max( RRS,Const ) ) * ( MRS / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) - ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS + MUC ) ) ) )", "obj1": 0.21509433962264152, "obj2": 0.636718519827242}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - ( ( ACS - DDR ) - ( DDR - PN ) ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * RMSe ) + ( MUM * RRSe ) ) ) )", "obj1": 0.4849056603773585, "obj2": 0.36624562508780617}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.5849056603773585, "obj2": 0.2878350575134194}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,Max( Const,RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,DS ) + ( MUM + MUM ) ) ) )", "obj1": 0.33773584905660375, "obj2": 0.5021133986189483}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.5509433962264151, "obj2": 0.3120467357886118}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,RRSe ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.6150943396226415, "obj2": 0.26881246250068086}, {"determining": "( PN - ( DDR - ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.24150943396226415, "obj2": 0.6047316066186091}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( RCSe + MUM ) ) ) )", "obj1": 0.41132075471698115, "obj2": 0.42553840957429057}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.16226415094339622, "obj2": 0.6779955977090752}, {"determining": "( Min( ACS ,DDR ) - ( Min( MDR ,AMS ) / ( ( ( MDR / AMS ) * Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / ( Max( ( RRSe * DS ),Min( MUC ,MLU ) ) * ( ( MUC * ( ( Min( RCSe ,MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.7830188679245284, "obj2": 0.07138366751872599}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.6188679245283019, "obj2": 0.2521466004196682}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5207547169811321, "obj2": 0.3234281527536369}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( MUM * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( MLU * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5, "obj2": 0.33878413279473707}, {"determining": "( ( Const + DDR ) - ( DDR + CRS ) )", "choosing": "( ( RMSe / ( ( ( RRSe / DS ) * Min( MUC ,MLU ) ) * Max( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * RRSe ) ) ),( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.5622641509433962, "obj2": 0.2920931770087035}, {"determining": "( ( Const - DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.6377358490566037, "obj2": 0.23081665772442933}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( Min( ARS ,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( MRS / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( MUR,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.28867924528301886, "obj2": 0.5395106727553509}, {"determining": "( ( ( ACS - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) )", "choosing": "( ( ( Max( MLU,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + ( RRSe * DS ) ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.8339622641509434, "obj2": 0.06998579437593752}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( MUM * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4641509433962264, "obj2": 0.37830455402273655}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.4377358490566038, "obj2": 0.4006435006087135}, {"determining": "( Max( RRS,ACS ) + Min( ACS ,Min( Min( Min( Min( DDR ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.11132075471698114, "obj2": 0.7416522545504768}, {"determining": "Max( ( ( MRS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( FirstVNF_Mem_Server ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( Min( MUR ,( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( DS ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.22075471698113208, "obj2": 0.618303054457343}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( Max( ( ARS + FirstVNF_CPU ),( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( RCSe * MUM ) ) ) )", "obj1": 0.4188679245283019, "obj2": 0.4070567962308574}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( Max( ARS,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( ( ( RRSe * DS ) * ( MUC - MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4509433962264151, "obj2": 0.38669906093449}, {"determining": "( Min( ACS ,DDR ) - ( Max( MDR,AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * DS ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.6452830188679245, "obj2": 0.2224389020998171}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR / AMS ) + ( ( ( ACS - DDR ) - ( ARS * ( ( MDR / AMS ) + ( FirstVNF_CPU / RRS ) ) ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR - ( ( ( RRSe / DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) ) )", "obj1": 0.0830188679245283, "obj2": 0.7673230819076938}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( RCSe + MUM ) ) ) )", "obj1": 0.29056603773584905, "obj2": 0.5393536065378186}, {"determining": "( PN - ( FirstVNF_CPU - MDR ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * RCSe ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) - Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.1509433962264151, "obj2": 0.7118214165605997}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( ACS - Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( RRSe ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.12452830188679245, "obj2": 0.7276671951822116}, {"determining": "( Max( RRS,( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) / AMS ) ) + Min( ACS ,Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * Min( MUM ,MUM ) ) ) ) ),( RCSe - ( MUC * ( Min( MLU ,CS ) * MUC ) ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7189559230938527}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) + ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.9339622641509434, "obj2": 0.028108802782443678}, {"determining": "( Max( Max( Max( MRS,ACS ),( FirstVNF_RAM_Server * AMS ) ),( ( AMS * FirstVNF_Mem_Server ) / Min( RRS ,Const ) ) ) - ( ( MDR / AMS ) * ( RRS / MDR ) ) )", "choosing": "( ( ( Max( ( ( RRSe * DS ) + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) + Min( DS ,MUC ) ) ) - ( ( ( RCSe / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.1, "obj2": 0.7544091452033177}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( ( MDR - ( DDR - PN ) ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( RCSe + MLU ) ) ) )", "obj1": 0.9226415094339623, "obj2": 0.031016766738752928}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,RRS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Max( ( ( ( ( DS - CS ) * ( DS + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( MUR / CS ) ) ),MUR ) * ( RRSe / RRSe ) ) - ( ( RMSe * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RRSe / DS ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.5113207547169811, "obj2": 0.3350975656567516}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( Min( ARS ,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( RMSe,CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.35283018867924526, "obj2": 0.4860039421228901}, {"determining": "( Max( ( ( Const - DDR ) - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe / DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * RRSe ) ) ) + ( MUM * RRSe ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.23773584905660378, "obj2": 0.6085315912113304}, {"determining": "( ARS - ( DDR - MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - CS ) / ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.9811320754716981, "obj2": 0.006424124384605518}], "13": [{"determining": "( ( ACS - FirstVNF_RAM ) - Min( ARS ,( ( AMS / AMS ) + ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) - CS ) / ( ( RCSe * RMSe ) * Min( MUM ,CS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ACS - DDR ) - ( ( ( ( ARS + RRS ) / ( BR * CRS ) ) / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( RMSe,( ( MLU * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,Max( Const,FirstVNF_CPU_Server ) ),AMS ) * Max( MRS,RRS ) )", "choosing": "( Max( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ),( ( RCSe - RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * MUR ) + ( MUM * RRSe ) ) ) )", "obj1": 0.07735849056603773, "obj2": 0.7949434110881185}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / MDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe + MUM ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS + MUC ) ) ) )", "obj1": 0.6981132075471698, "obj2": 0.10880650511941183}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR - AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUR ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.6962264150943396, "obj2": 0.17612715016738467}, {"determining": "( ( ( Max( ( Min( ( Max( CRS,BR ) / ( BR / DDR ) ) ,( Min( RRS ,DDR ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) + ( ( ( ARS + FirstVNF_RAM_Server ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) * ( ( CRS - AMS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_Mem + MDR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) / Max( Min( Min( PN ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * FirstVNF_Mem ) ),( Max( RRS,BR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( Min( Min( ( ( AMS / Const ) * ( FirstVNF_RAM / AMS ) ) ,( Min( ARS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,RRS ) ) ) ,Max( ( ( Const + FirstVNF_RAM ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem ) * ( ACS * Const ) ) ) ) * Min( ( ( ( FirstVNF_CPU * ARS ) * ( MRS * FirstVNF_Mem ) ) / Max( ( PN * FirstVNF_CPU ),( MRS + ACS ) ) ) ,Min( ( ( MDR / FirstVNF_RAM ) * ( MRS * FirstVNF_Mem_Server ) ) ,Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * DDR ) ) ) ) ) ) / ( ( ( Max( ( Max( Const,FirstVNF_CPU_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,ARS ) - Min( DDR ,FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_RAM - CRS ) - ( ACS / DDR ) ) - ( ( PN - CRS ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) + ( ( ( Max( FirstVNF_RAM,DDR ) + Min( RRS ,FirstVNF_CPU_Server ) ) / Max( Min( ARS ,AMS ),Min( ARS ,FirstVNF_CPU ) ) ) + ( Min( ( DDR * DDR ) ,( CRS * FirstVNF_RAM ) ) + ( ( MDR * ARS ) - ( CRS - MRS ) ) ) ) ) / ( Max( ( Max( ( PN * DDR ),Min( CRS ,AMS ) ) * Max( Min( AMS ,DDR ),Min( FirstVNF_RAM ,PN ) ) ),( ( Max( PN,CRS ) - ( FirstVNF_CPU + RRS ) ) - ( Max( MRS,RRS ) + Min( DDR ,BR ) ) ) ) - ( ( Max( Max( FirstVNF_CPU_Server,RRS ),Min( MRS ,FirstVNF_RAM ) ) / ( Max( PN,FirstVNF_Mem_Server ) - ( ARS * MDR ) ) ) / ( ( ( CRS * Const ) + ( MDR / Const ) ) * ( Min( Const ,ACS ) + ( Const - RRS ) ) ) ) ) ) ) + ( Max( Min( Max( ( ( ( FirstVNF_CPU_Server - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( MDR + AMS ) - Max( RRS,AMS ) ) ),Max( ( Min( DDR ,CRS ) / Min( FirstVNF_Mem ,ARS ) ),Max( Min( CRS ,FirstVNF_CPU ),( ACS / ACS ) ) ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( PN / FirstVNF_RAM ) ) - ( ( Const * FirstVNF_RAM_Server ) + ( Const + FirstVNF_RAM_Server ) ) ) + Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ),Min( Max( ( Max( ( FirstVNF_RAM + Const ),Min( RRS ,PN ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( BR / RRS ) ) ),( ( ( FirstVNF_Mem_Server + ACS ) + Max( FirstVNF_CPU_Server,Const ) ) + ( ( AMS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / AMS ),( CRS - MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,Max( RRS,ARS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem - AMS ) ) ) ) ) ) / ( Max( ( Min( ( ( FirstVNF_Mem + MDR ) - ( FirstVNF_CPU_Server - BR ) ) ,( Min( AMS ,MRS ) - ( BR / FirstVNF_CPU_Server ) ) ) + ( ( Max( FirstVNF_CPU_Server,BR ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) + Min( ( ACS / PN ) ,( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ),Min( ( ( ( DDR - FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) / ( ( FirstVNF_RAM_Server - Const ) - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) ,Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( MRS / FirstVNF_RAM ) ) ) ) ) - ( ( ( ( ( RRS / DDR ) * ( FirstVNF_Mem_Server * ARS ) ) - Min( Min( FirstVNF_RAM_Server ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) ) / Min( Min( ( PN + RRS ) ,Min( FirstVNF_CPU ,Const ) ) ,Max( ( MRS / FirstVNF_CPU_Server ),Max( CRS,MRS ) ) ) ) + ( Min( ( ( FirstVNF_CPU + MRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,( ( Const + FirstVNF_CPU ) * Min( ACS ,RRS ) ) ) / ( ( ( FirstVNF_CPU - CRS ) * ( CRS / RRS ) ) / ( Max( BR,MRS ) - ( Const * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / CS ) + ( RRSe / ( ( ( MUR * ( ( MUR - Max( MUM,DS ) ) - DS ) ) * MUR ) + RRSe ) ) )", "obj1": 0.8566037735849057, "obj2": 0.06558652770796525}, {"determining": "( MDR - ( DDR / ACS ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + MUR ) ) / ( ( ( MUC / DS ) - ( RMSe / MUR ) ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( RCSe * MUR ) ) ) )", "obj1": 0.9, "obj2": 0.03295099759865825}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / DDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / ARS ) ) )", "choosing": "( ( RRSe / MLU ) / Max( RMSe,( ( MLU * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.7377358490566037, "obj2": 0.08918989144368814}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.17547169811320754, "obj2": 0.652460857899411}, {"determining": "Max( ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) / CS ) )", "obj1": 0.3754716981132076, "obj2": 0.4317686460351788}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),( Min( ACS ,ACS ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUR ) + ( RRSe * MUM ) ) / ( ( RCSe * RRSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.2358490566037736, "obj2": 0.5914471356999678}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( Max( Min( CRS ,Const ),Max( RRS,Const ) ) * ( MRS / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) - ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS + MUC ) ) ) )", "obj1": 0.21509433962264152, "obj2": 0.636718519827242}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_CPU - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.2943396226415094, "obj2": 0.5042268992070182}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - ( ( ACS - DDR ) - ( DDR - PN ) ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * RMSe ) + ( MUM * RRSe ) ) ) )", "obj1": 0.469811320754717, "obj2": 0.3590946888221949}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( ( MLU * CS ) + MUM ) ) ) )", "obj1": 0.3641509433962264, "obj2": 0.4570123980482578}, {"determining": "( ARS - ( DDR - MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - CS ) / ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.9811320754716981, "obj2": 0.006424124384605518}, {"determining": "( ( ( ACS - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) )", "choosing": "( ( ( Max( MLU,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) * ( RRSe / Max( Min( MUC ,RMSe ),( ( MUR + ( RRSe * DS ) ) + MUC ) ) ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,RRSe ) - Min( MUM ,CS ) ) ) )", "obj1": 0.8339622641509434, "obj2": 0.06998579437593752}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,Max( Const,RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,DS ) + ( MUM + MUM ) ) ) )", "obj1": 0.33773584905660375, "obj2": 0.5021133986189483}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.5849056603773585, "obj2": 0.2878350575134194}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5490566037735849, "obj2": 0.3075806600710129}, {"determining": "( Min( ACS ,DDR ) - ( Min( MDR ,AMS ) / ( ( ( MDR / AMS ) * Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / ( Max( ( RRSe * DS ),Min( MUC ,MLU ) ) * ( ( MUC * ( ( Min( RCSe ,MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.7830188679245284, "obj2": 0.07138366751872599}, {"determining": "( ( ACS - DDR ) - ( DDR - PN ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MLU * CS ) + ( MUM * RRSe ) ) / CS ) )", "obj1": 0.6094339622641509, "obj2": 0.26518028524865944}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( ( ( MUC * CS ) + ( MUM * RRSe ) ) * MLU ),( Min( MLU ,CS ) * ( RCSe + MLU ) ) ) )", "obj1": 0.9339622641509434, "obj2": 0.024270317587654914}, {"determining": "Max( ( ( MRS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( FirstVNF_Mem_Server ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( Min( MUR ,( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( DS ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.22075471698113208, "obj2": 0.618303054457343}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ACS - CRS ) - ( ( FirstVNF_CPU_Server + AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe / MLU ) / Min( RMSe ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 0.6754716981132075, "obj2": 0.194866087983861}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) - ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,CS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.40943396226415096, "obj2": 0.4113500947076641}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR / AMS ) + ( ( ( ACS - DDR ) - ( ARS * ( ( MDR / AMS ) + ( FirstVNF_CPU / RRS ) ) ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR - ( ( ( RRSe / DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) ) )", "obj1": 0.0830188679245283, "obj2": 0.7673230819076938}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( MUM * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( MLU * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5, "obj2": 0.33878413279473707}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.6188679245283019, "obj2": 0.2521466004196682}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.2509433962264151, "obj2": 0.5575757447228966}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( MDR / AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.7660377358490567, "obj2": 0.07691025862573032}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5207547169811321, "obj2": 0.3234281527536369}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( Max( ACS,DDR ) - ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC / MLU ) / Max( RMSe,( Min( MLU ,CS ) * ( RCSe + MUM ) ) ) )", "obj1": 0.660377358490566, "obj2": 0.20738699549771517}, {"determining": "( ( Const - DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.6377358490566037, "obj2": 0.23081665772442933}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( Min( ARS ,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( MRS / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( MUR,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.28867924528301886, "obj2": 0.5395106727553509}, {"determining": "( ( Const + DDR ) - ( DDR + CRS ) )", "choosing": "( ( RMSe / ( ( ( RRSe / DS ) * Min( MUC ,MLU ) ) * Max( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * RRSe ) ) ),( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.5622641509433962, "obj2": 0.2920931770087035}, {"determining": "( Max( Max( Max( MRS,ACS ),( FirstVNF_RAM_Server * AMS ) ),( ( AMS * FirstVNF_Mem_Server ) / Min( RRS ,Const ) ) ) - ( ( MDR / AMS ) * ( RRS / MDR ) ) )", "choosing": "( ( ( Max( ( ( RRSe * DS ) + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) + Min( DS ,MUC ) ) ) - ( ( ( RCSe / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.1, "obj2": 0.7544091452033177}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,Min( MRS ,AMS ) ) ,( FirstVNF_Mem_Server - ARS ) ) )", "choosing": "Max( ( MUR / ( ( ( MUC * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( RRSe * MUM ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.2490566037735849, "obj2": 0.5630250871678589}, {"determining": "( Min( ACS ,DDR ) - ( Max( MDR,AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * DS ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.6452830188679245, "obj2": 0.2224389020998171}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( RCSe + MUM ) ) ) )", "obj1": 0.29056603773584905, "obj2": 0.5393536065378186}, {"determining": "( ( ACS - DDR ) - ( ( ( MDR / AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( ( RCSe * RMSe ) ,DS ) ) ) ,MLU ) ) ) )", "obj1": 0.15849056603773584, "obj2": 0.6981942287283497}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.35471698113207545, "obj2": 0.48418281722161144}, {"determining": "( Max( RRS,( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) / AMS ) ) + Min( ACS ,Min( MRS ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * Min( MUM ,MUM ) ) ) ) ),( RCSe - ( MUC * ( Min( MLU ,CS ) * MUC ) ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7189559230938527}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( Max( ARS,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( ( ( RRSe * DS ) * ( MUC - MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4509433962264151, "obj2": 0.38669906093449}, {"determining": "( Max( RRS,ACS ) + Min( ACS ,Min( Min( Min( Min( DDR ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.11132075471698114, "obj2": 0.7416522545504768}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( Min( ARS ,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( RMSe,CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.35283018867924526, "obj2": 0.4860039421228901}, {"determining": "Max( ( ( ACS - DDR ) - ( FirstVNF_RAM_Server - Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) + Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.16226415094339622, "obj2": 0.6779955977090752}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.4377358490566038, "obj2": 0.4006435006087135}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( MUM * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4641509433962264, "obj2": 0.37830455402273655}, {"determining": "( PN - ( FirstVNF_CPU - MDR ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * RCSe ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) - Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.1509433962264151, "obj2": 0.7118214165605997}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( Max( ( ARS + FirstVNF_CPU ),( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( RCSe * MUM ) ) ) )", "obj1": 0.4188679245283019, "obj2": 0.4070567962308574}], "14": [{"determining": "( Min( ACS ,DDR ) - ( Min( MDR ,AMS ) / ( ( ( MDR / AMS ) * Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / ( Max( ( RRSe * DS ),Min( MUC ,MLU ) ) * ( ( MUC * ( ( Min( RCSe ,MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - FirstVNF_RAM ) - Min( ARS ,( ( AMS / AMS ) + ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) - CS ) / ( ( RCSe * RMSe ) * Min( MUM ,CS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,Max( Const,FirstVNF_CPU_Server ) ),AMS ) * Max( MRS,RRS ) )", "choosing": "( Max( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ),( ( RCSe - RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * MUR ) + ( MUM * RRSe ) ) ) )", "obj1": 0.07735849056603773, "obj2": 0.7949434110881185}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR - AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUR ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.6962264150943396, "obj2": 0.17612715016738467}, {"determining": "( ( ( Max( ( Min( ( Max( CRS,BR ) / ( BR / DDR ) ) ,( Min( RRS ,DDR ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) + ( ( ( ARS + FirstVNF_RAM_Server ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) * ( ( CRS - AMS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_Mem + MDR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) / Max( Min( Min( PN ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * FirstVNF_Mem ) ),( Max( RRS,BR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( Min( Min( ( ( AMS / Const ) * ( FirstVNF_RAM / AMS ) ) ,( Min( ARS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,RRS ) ) ) ,Max( ( ( Const + FirstVNF_RAM ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem ) * ( ACS * Const ) ) ) ) * Min( ( ( ( FirstVNF_CPU * ARS ) * ( MRS * FirstVNF_Mem ) ) / Max( ( PN * FirstVNF_CPU ),( MRS + ACS ) ) ) ,Min( ( ( MDR / FirstVNF_RAM ) * ( MRS * FirstVNF_Mem_Server ) ) ,Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * DDR ) ) ) ) ) ) / ( ( ( Max( ( Max( Const,FirstVNF_CPU_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,ARS ) - Min( DDR ,FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_RAM - CRS ) - ( ACS / DDR ) ) - ( ( PN - CRS ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) + ( ( ( Max( FirstVNF_RAM,DDR ) + Min( RRS ,FirstVNF_CPU_Server ) ) / Max( Min( ARS ,AMS ),Min( ARS ,FirstVNF_CPU ) ) ) + ( Min( ( DDR * DDR ) ,( CRS * FirstVNF_RAM ) ) + ( ( MDR * ARS ) - ( CRS - MRS ) ) ) ) ) / ( Max( ( Max( ( PN * DDR ),Min( CRS ,AMS ) ) * Max( Min( AMS ,DDR ),Min( FirstVNF_RAM ,PN ) ) ),( ( Max( PN,CRS ) - ( FirstVNF_CPU + RRS ) ) - ( Max( MRS,RRS ) + Min( DDR ,BR ) ) ) ) - ( ( Max( Max( FirstVNF_CPU_Server,RRS ),Min( MRS ,FirstVNF_RAM ) ) / ( Max( PN,FirstVNF_Mem_Server ) - ( ARS * MDR ) ) ) / ( ( ( CRS * Const ) + ( MDR / Const ) ) * ( Min( Const ,ACS ) + ( Const - RRS ) ) ) ) ) ) ) + ( Max( Min( Max( ( ( ( FirstVNF_CPU_Server - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( MDR + AMS ) - Max( RRS,AMS ) ) ),Max( ( Min( DDR ,CRS ) / Min( FirstVNF_Mem ,ARS ) ),Max( Min( CRS ,FirstVNF_CPU ),( ACS / ACS ) ) ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( PN / FirstVNF_RAM ) ) - ( ( Const * FirstVNF_RAM_Server ) + ( Const + FirstVNF_RAM_Server ) ) ) + Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ),Min( Max( ( Max( ( FirstVNF_RAM + Const ),Min( RRS ,PN ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( BR / RRS ) ) ),( ( ( FirstVNF_Mem_Server + ACS ) + Max( FirstVNF_CPU_Server,Const ) ) + ( ( AMS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / AMS ),( CRS - MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,Max( RRS,ARS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem - AMS ) ) ) ) ) ) / ( Max( ( Min( ( ( FirstVNF_Mem + MDR ) - ( FirstVNF_CPU_Server - BR ) ) ,( Min( AMS ,MRS ) - ( BR / FirstVNF_CPU_Server ) ) ) + ( ( Max( FirstVNF_CPU_Server,BR ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) + Min( ( ACS / PN ) ,( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ),Min( ( ( ( DDR - FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) / ( ( FirstVNF_RAM_Server - Const ) - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) ,Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( MRS / FirstVNF_RAM ) ) ) ) ) - ( ( ( ( ( RRS / DDR ) * ( FirstVNF_Mem_Server * ARS ) ) - Min( Min( FirstVNF_RAM_Server ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) ) / Min( Min( ( PN + RRS ) ,Min( FirstVNF_CPU ,Const ) ) ,Max( ( MRS / FirstVNF_CPU_Server ),Max( CRS,MRS ) ) ) ) + ( Min( ( ( FirstVNF_CPU + MRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,( ( Const + FirstVNF_CPU ) * Min( ACS ,RRS ) ) ) / ( ( ( FirstVNF_CPU - CRS ) * ( CRS / RRS ) ) / ( Max( BR,MRS ) - ( Const * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / CS ) + ( RRSe / ( ( ( MUR * ( ( MUR - Max( MUM,DS ) ) - DS ) ) * MUR ) + RRSe ) ) )", "obj1": 0.8566037735849057, "obj2": 0.06558652770796525}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( Max( Min( CRS ,Const ),Max( RRS,Const ) ) * ( MRS / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) - ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS + MUC ) ) ) )", "obj1": 0.21509433962264152, "obj2": 0.636718519827242}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / MDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe + MUM ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS + MUC ) ) ) )", "obj1": 0.6981132075471698, "obj2": 0.10880650511941183}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.32452830188679244, "obj2": 0.4823996771203799}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.17547169811320754, "obj2": 0.652460857899411}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_CPU - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.2943396226415094, "obj2": 0.5042268992070182}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR - AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUR ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.13018867924528302, "obj2": 0.7103266580767705}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / ACS ) / ( ( ( ACS - DDR ) - Min( DDR ,( ACS - DDR ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( Min( MUC ,MUC ),( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( RCSe * MUM ) ) ) ) )", "obj1": 0.8981132075471698, "obj2": 0.033359026727153164}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / DDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / ARS ) ) )", "choosing": "( ( RRSe / MLU ) / Max( RMSe,( ( MLU * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.7377358490566037, "obj2": 0.08918989144368814}, {"determining": "Max( ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) / CS ) )", "obj1": 0.3754716981132076, "obj2": 0.4317686460351788}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,Min( MRS ,AMS ) ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( RRSe * MUM ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.22075471698113208, "obj2": 0.5937897209904388}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ACS - CRS ) - ( ( FirstVNF_CPU_Server + AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe / MLU ) / Min( RMSe ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 0.6754716981132075, "obj2": 0.194866087983861}, {"determining": "( ARS - ( DDR - MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - CS ) / ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.9811320754716981, "obj2": 0.006424124384605518}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),( ( Const - DDR ) - ( DDR - PN ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( ( RRSe * MLU ),( ( ( MUC * CS ) + ( MUM * RRSe ) ) * ( ( MLU * CS ) + MUM ) ) ) )", "obj1": 0.6113207547169811, "obj2": 0.25082651164167785}, {"determining": "Max( ( ( ACS - DDR ) - ( FirstVNF_RAM_Server - Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) + Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.16226415094339622, "obj2": 0.6779955977090752}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR / AMS ) + ( ( ( ACS - DDR ) - ( ARS * ( ( MDR / AMS ) + ( FirstVNF_CPU / RRS ) ) ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR - ( ( ( RRSe / DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) ) )", "obj1": 0.0830188679245283, "obj2": 0.7673230819076938}, {"determining": "( ( ACS - DDR ) - ( ( ( MDR / AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( ( RCSe * RMSe ) ,DS ) ) ) ,MLU ) ) ) )", "obj1": 0.15849056603773584, "obj2": 0.6981942287283497}, {"determining": "Max( ( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( ( Min( ( Const + FirstVNF_RAM ) ,Min( DDR ,PN ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( ( ( MUC * CS ) + ( MUM * RRSe ) ) * MLU ),( Min( MLU ,CS ) * ( RCSe - MLU ) ) ) )", "obj1": 0.3584905660377358, "obj2": 0.47055319217096625}, {"determining": "( ( Const - DDR ) - ( FirstVNF_RAM + PN ) )", "choosing": "( ( MUC / ( ( ( RRSe / DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( Max( RCSe,RRSe ) / ( ( DS * RMSe ) * RRSe ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.9566037735849057, "obj2": 0.023387095274452197}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( ( ( MUC * CS ) + ( MUM * RRSe ) ) * MLU ),( Min( MLU ,CS ) * ( RCSe + MLU ) ) ) )", "obj1": 0.9339622641509434, "obj2": 0.024270317587654914}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.2509433962264151, "obj2": 0.5575757447228966}, {"determining": "( ( Const - DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.6358490566037736, "obj2": 0.2275213011795767}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( MUM * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( MLU * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5, "obj2": 0.33878413279473707}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),( Min( ACS ,ACS ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUR ) + ( RRSe * MUM ) ) / ( ( RCSe * RRSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.2358490566037736, "obj2": 0.5914471356999678}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( MDR / AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( ( RCSe * RMSe ) ,DS ) ) ) ,MLU ) ) ) )", "obj1": 0.7188679245283018, "obj2": 0.10627072194584614}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( Max( ACS,DDR ) - ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC / MLU ) / Max( RMSe,( Min( MLU ,CS ) * ( RCSe + MUM ) ) ) )", "obj1": 0.660377358490566, "obj2": 0.20738699549771517}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( ( MLU * CS ) + MUM ) ) ) )", "obj1": 0.3641509433962264, "obj2": 0.4570123980482578}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( Min( ARS ,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( MRS / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( MUR,RRSe ) ) ,( ( MLU - DS ) / ( CS * MUR ) ) ) )", "obj1": 0.28867924528301886, "obj2": 0.5395106727553509}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5490566037735849, "obj2": 0.3075806600710129}, {"determining": "( ( Const + DDR ) - ( DDR + CRS ) )", "choosing": "( ( RMSe / ( ( ( RRSe / DS ) * Min( MUC ,MLU ) ) * Max( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * RRSe ) ) ),( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.5622641509433962, "obj2": 0.2920931770087035}, {"determining": "( Min( ACS ,DDR ) - Max( ( MDR / AMS ),( ( ( MDR / AMS ) - Min( DDR ,Const ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / MUC ) / Max( RMSe,( Min( MLU ,CS ) * ( MUM - MUM ) ) ) )", "obj1": 0.7622641509433963, "obj2": 0.07622194171867032}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - ( ( ACS - DDR ) - ( DDR - PN ) ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * RMSe ) + ( MUM * RRSe ) ) ) )", "obj1": 0.469811320754717, "obj2": 0.3590946888221949}, {"determining": "Max( ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( CS ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) / CS ) )", "obj1": 0.39622641509433965, "obj2": 0.42062931563098377}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5207547169811321, "obj2": 0.3234281527536369}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( Max( DDR,CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.4377358490566038, "obj2": 0.4006435006087135}, {"determining": "( Max( RRS,ACS ) + ( ACS * Min( Min( Min( Min( DDR ,( FirstVNF_RAM + RRS ) ) ,AMS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( MLU * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / MUM ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.12264150943396226, "obj2": 0.7388267921812549}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,Min( MRS ,AMS ) ) ,( FirstVNF_Mem_Server - ARS ) ) )", "choosing": "Max( ( MUR / ( ( ( MUC * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( RRSe * MUM ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.2490566037735849, "obj2": 0.5630250871678589}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) / ( BR * ( ( Min( ( Min( DDR ,PN ) + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( MUM * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( MLU * ( ( MUC * ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4867924528301887, "obj2": 0.351152238013981}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - ( ( ACS - DDR ) - ( DDR - PN ) ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * RMSe ) + ( MUM * RRSe ) ) ) )", "obj1": 0.4547169811320755, "obj2": 0.37324858277156714}, {"determining": "( Max( Max( Max( MRS,ACS ),( FirstVNF_RAM_Server * AMS ) ),( ( AMS * FirstVNF_Mem_Server ) / Min( RRS ,Const ) ) ) - ( ( MDR / AMS ) * ( RRS / MDR ) ) )", "choosing": "( ( ( Max( ( ( RRSe * DS ) + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) + Min( DS ,MUC ) ) ) - ( ( ( RCSe / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.1, "obj2": 0.7544091452033177}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( Max( ARS,RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( ( ( RRSe * DS ) * ( MUC - MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4509433962264151, "obj2": 0.38669906093449}, {"determining": "( Min( ACS ,DDR ) - ( Max( MDR,AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * DS ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.6452830188679245, "obj2": 0.2224389020998171}, {"determining": "( ( ( FirstVNF_Mem - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * ( MUM / DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.8245283018867925, "obj2": 0.06791959949668086}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5320754716981132, "obj2": 0.31818219267752074}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( RCSe + MUM ) ) ) )", "obj1": 0.29056603773584905, "obj2": 0.5393536065378186}, {"determining": "( MDR - ( DDR / ACS ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + MUR ) ) / ( ( ( MUC / DS ) - ( RMSe / MUR ) ) + ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( RCSe * MUR ) ) ) )", "obj1": 0.9, "obj2": 0.03295099759865825}, {"determining": "Max( ( ( ACS - DDR ) - Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( ( ( ( ACS - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) ) * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) * RRSe ) ) ) )", "obj1": 0.8150943396226416, "obj2": 0.0706055074752724}], "15": [{"determining": "Min( ( RRS - ( FirstVNF_Mem_Server - Const ) ) ,( CRS / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,DS ) * Max( RRSe,( MUC * Min( ( MLU + MUC ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,DDR ) - ( Min( MDR ,AMS ) / ( ( ( MDR / AMS ) * Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / ( Max( ( RRSe * DS ),Min( MUC ,MLU ) ) * ( ( MUC * ( ( Min( RCSe ,MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,Max( Const,FirstVNF_CPU_Server ) ),AMS ) * Max( MRS,RRS ) )", "choosing": "( Max( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ),( ( RCSe - RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * MUR ) + ( MUM * RRSe ) ) ) )", "obj1": 0.07735849056603773, "obj2": 0.7949434110881185}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.3150943396226415, "obj2": 0.46942668153545275}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_CPU - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.2943396226415094, "obj2": 0.5042268992070182}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR - AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUR ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.6962264150943396, "obj2": 0.17612715016738467}, {"determining": "( ( ( Max( ( Min( ( Max( CRS,BR ) / ( BR / DDR ) ) ,( Min( RRS ,DDR ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) + ( ( ( ARS + FirstVNF_RAM_Server ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) * ( ( CRS - AMS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_Mem + MDR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) / Max( Min( Min( PN ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * FirstVNF_Mem ) ),( Max( RRS,BR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( Min( Min( ( ( AMS / Const ) * ( FirstVNF_RAM / AMS ) ) ,( Min( ARS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,RRS ) ) ) ,Max( ( ( Const + FirstVNF_RAM ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem ) * ( ACS * Const ) ) ) ) * Min( ( ( ( FirstVNF_CPU * ARS ) * ( MRS * FirstVNF_Mem ) ) / Max( ( PN * FirstVNF_CPU ),( MRS + ACS ) ) ) ,Min( ( ( MDR / FirstVNF_RAM ) * ( MRS * FirstVNF_Mem_Server ) ) ,Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * DDR ) ) ) ) ) ) / ( ( ( Max( ( Max( Const,FirstVNF_CPU_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,ARS ) - Min( DDR ,FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_RAM - CRS ) - ( ACS / DDR ) ) - ( ( PN - CRS ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) + ( ( ( Max( FirstVNF_RAM,DDR ) + Min( RRS ,FirstVNF_CPU_Server ) ) / Max( Min( ARS ,AMS ),Min( ARS ,FirstVNF_CPU ) ) ) + ( Min( ( DDR * DDR ) ,( CRS * FirstVNF_RAM ) ) + ( ( MDR * ARS ) - ( CRS - MRS ) ) ) ) ) / ( Max( ( Max( ( PN * DDR ),Min( CRS ,AMS ) ) * Max( Min( AMS ,DDR ),Min( FirstVNF_RAM ,PN ) ) ),( ( Max( PN,CRS ) - ( FirstVNF_CPU + RRS ) ) - ( Max( MRS,RRS ) + Min( DDR ,BR ) ) ) ) - ( ( Max( Max( FirstVNF_CPU_Server,RRS ),Min( MRS ,FirstVNF_RAM ) ) / ( Max( PN,FirstVNF_Mem_Server ) - ( ARS * MDR ) ) ) / ( ( ( CRS * Const ) + ( MDR / Const ) ) * ( Min( Const ,ACS ) + ( Const - RRS ) ) ) ) ) ) ) + ( Max( Min( Max( ( ( ( FirstVNF_CPU_Server - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( MDR + AMS ) - Max( RRS,AMS ) ) ),Max( ( Min( DDR ,CRS ) / Min( FirstVNF_Mem ,ARS ) ),Max( Min( CRS ,FirstVNF_CPU ),( ACS / ACS ) ) ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( PN / FirstVNF_RAM ) ) - ( ( Const * FirstVNF_RAM_Server ) + ( Const + FirstVNF_RAM_Server ) ) ) + Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ),Min( Max( ( Max( ( FirstVNF_RAM + Const ),Min( RRS ,PN ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( BR / RRS ) ) ),( ( ( FirstVNF_Mem_Server + ACS ) + Max( FirstVNF_CPU_Server,Const ) ) + ( ( AMS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / AMS ),( CRS - MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,Max( RRS,ARS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem - AMS ) ) ) ) ) ) / ( Max( ( Min( ( ( FirstVNF_Mem + MDR ) - ( FirstVNF_CPU_Server - BR ) ) ,( Min( AMS ,MRS ) - ( BR / FirstVNF_CPU_Server ) ) ) + ( ( Max( FirstVNF_CPU_Server,BR ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) + Min( ( ACS / PN ) ,( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ),Min( ( ( ( DDR - FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) / ( ( FirstVNF_RAM_Server - Const ) - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) ,Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( MRS / FirstVNF_RAM ) ) ) ) ) - ( ( ( ( ( RRS / DDR ) * ( FirstVNF_Mem_Server * ARS ) ) - Min( Min( FirstVNF_RAM_Server ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) ) / Min( Min( ( PN + RRS ) ,Min( FirstVNF_CPU ,Const ) ) ,Max( ( MRS / FirstVNF_CPU_Server ),Max( CRS,MRS ) ) ) ) + ( Min( ( ( FirstVNF_CPU + MRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,( ( Const + FirstVNF_CPU ) * Min( ACS ,RRS ) ) ) / ( ( ( FirstVNF_CPU - CRS ) * ( CRS / RRS ) ) / ( Max( BR,MRS ) - ( Const * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / CS ) + ( RRSe / ( ( ( MUR * ( ( MUR - Max( MUM,DS ) ) - DS ) ) * MUR ) + RRSe ) ) )", "obj1": 0.8566037735849057, "obj2": 0.06558652770796525}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( Max( Min( CRS ,Const ),Max( RRS,Const ) ) * ( MRS / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) - ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS + MUC ) ) ) )", "obj1": 0.21509433962264152, "obj2": 0.636718519827242}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / MDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe + MUM ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS + MUC ) ) ) )", "obj1": 0.6981132075471698, "obj2": 0.10880650511941183}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Max( ( ( RRSe * DS ) + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) + Min( DS ,MUC ) ) ) - ( ( ( RCSe / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.27169811320754716, "obj2": 0.5391952354050584}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( ( MLU * CS ) + MUM ) ) ) )", "obj1": 0.3641509433962264, "obj2": 0.4570123980482578}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.17547169811320754, "obj2": 0.652460857899411}, {"determining": "Max( ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( CS ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) / CS ) )", "obj1": 0.39622641509433965, "obj2": 0.42062931563098377}, {"determining": "Max( ( ( ( Min( ARS ,( ( MDR + AMS ) + ( FirstVNF_CPU / RRS ) ) ) - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * ( MUM - DS ) ) ) ) + Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) ) ) + ( ( ( MUR - CS ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) / CS ) )", "obj1": 0.42452830188679247, "obj2": 0.3885461527187372}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / ACS ) / ( ( ( ACS - DDR ) - Min( DDR ,( ACS - DDR ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( Min( MUC ,MUC ),( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( RCSe * MUM ) ) ) ) )", "obj1": 0.8981132075471698, "obj2": 0.033359026727153164}, {"determining": "Max( ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) / CS ) )", "obj1": 0.3754716981132076, "obj2": 0.4317686460351788}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,Min( MRS ,AMS ) ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( RRSe * MUM ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.22075471698113208, "obj2": 0.5937897209904388}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),( ( Const - DDR ) - ( DDR - PN ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( ( RRSe * MLU ),( ( ( MUC * CS ) + ( MUM * RRSe ) ) * ( ( MLU * CS ) + MUM ) ) ) )", "obj1": 0.6113207547169811, "obj2": 0.25082651164167785}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ACS - CRS ) - ( ( FirstVNF_CPU_Server + AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe / MLU ) / Min( RMSe ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 0.6754716981132075, "obj2": 0.194866087983861}, {"determining": "Max( ( ( ACS - DDR ) - Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( ( ( ( ACS - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) ) * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) * RRSe ) ) ) )", "obj1": 0.8150943396226416, "obj2": 0.0706055074752724}, {"determining": "Max( ( ( ACS - DDR ) - ( FirstVNF_RAM_Server - Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) + Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.16226415094339622, "obj2": 0.6779955977090752}, {"determining": "( ( ACS - DDR ) - ( ( ( MDR / AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( ( RCSe * RMSe ) ,DS ) ) ) ,MLU ) ) ) )", "obj1": 0.15849056603773584, "obj2": 0.6981942287283497}, {"determining": "( ( Const - DDR ) - ( FirstVNF_RAM + PN ) )", "choosing": "( ( MUC / ( ( ( RRSe / DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( Max( RCSe,RRSe ) / ( ( DS * RMSe ) * RRSe ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.9566037735849057, "obj2": 0.023387095274452197}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR - AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUR ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.13018867924528302, "obj2": 0.7103266580767705}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( MUM * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( MLU * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5, "obj2": 0.33878413279473707}, {"determining": "( Min( ACS ,DDR ) - Max( ( MDR / AMS ),( ( ( MDR / AMS ) - Min( DDR ,Const ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / MUC ) / Max( RMSe,( Min( MLU ,CS ) * ( MUM - MUM ) ) ) )", "obj1": 0.7622641509433963, "obj2": 0.07622194171867032}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),( Min( ACS ,ACS ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUR ) + ( RRSe * MUM ) ) / ( ( RCSe * RRSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.2358490566037736, "obj2": 0.5914471356999678}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( Max( ACS,DDR ) - ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC / MLU ) / Max( RMSe,( Min( MLU ,CS ) * ( RCSe + MUM ) ) ) )", "obj1": 0.660377358490566, "obj2": 0.20738699549771517}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - ( ( ACS - DDR ) - ( DDR - PN ) ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * RMSe ) + ( MUM * RRSe ) ) ) )", "obj1": 0.4547169811320755, "obj2": 0.37324858277156714}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR / AMS ) + ( ( ( ACS - DDR ) - ( ARS * ( ( MDR / AMS ) + ( FirstVNF_CPU / RRS ) ) ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR - ( ( ( RRSe / DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) ) )", "obj1": 0.0830188679245283, "obj2": 0.7673230819076938}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - ( ( ACS - DDR ) - ( DDR - PN ) ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * RMSe ) + ( MUM * RRSe ) ) ) )", "obj1": 0.469811320754717, "obj2": 0.3590946888221949}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5207547169811321, "obj2": 0.3234281527536369}, {"determining": "( ARS - ( DDR - MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - CS ) / ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.9811320754716981, "obj2": 0.006424124384605518}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,Min( MRS ,AMS ) ) ,( FirstVNF_Mem_Server - ARS ) ) )", "choosing": "Max( ( MUR / ( ( ( MUC * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( RRSe * MUM ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.2490566037735849, "obj2": 0.5630250871678589}, {"determining": "( ( ( ACS - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( MUM * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( MLU * ( ( MUC * ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) ) + Max( MUM,RRSe ) ) ) ) )", "obj1": 0.5641509433962264, "obj2": 0.2785379656668711}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) / ( BR * ( ( Min( ( Min( DDR ,PN ) + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( MUM * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( MLU * ( ( MUC * ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4867924528301887, "obj2": 0.351152238013981}, {"determining": "( ( Const - DDR ) - ( DDR - DDR ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * MLU ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.6320754716981132, "obj2": 0.2374377739722601}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / MDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe + MUM ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS + MUC ) ) ) )", "obj1": 0.7150943396226415, "obj2": 0.10162863195340244}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.2509433962264151, "obj2": 0.5575757447228966}, {"determining": "( ( Const + DDR ) - ( DDR + CRS ) )", "choosing": "( ( RMSe / ( ( ( RRSe / DS ) * Min( MUC ,MLU ) ) * Max( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * RRSe ) ) ),( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.5622641509433962, "obj2": 0.2920931770087035}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.43018867924528303, "obj2": 0.3776307572973775}, {"determining": "( Min( ACS ,DDR ) - ( Max( MDR,AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * DS ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.6452830188679245, "obj2": 0.2224389020998171}, {"determining": "( ( ( FirstVNF_Mem - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * ( MUM / DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.8245283018867925, "obj2": 0.06791959949668086}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / DDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / ARS ) ) )", "choosing": "( ( RRSe / MLU ) / Max( RMSe,( ( MLU * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.7377358490566037, "obj2": 0.08918989144368814}, {"determining": "( ( ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( MRS / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) )", "choosing": "( ( MUR / ( MUR * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.9283018867924528, "obj2": 0.029136111426016728}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - ( ( ACS - DDR ) - ( DDR - PN ) ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / ( ( ( RRSe / DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * RRSe ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.5962264150943396, "obj2": 0.2748214889079082}, {"determining": "( ( Const - DDR ) - ( DDR + CRS ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.6018867924528302, "obj2": 0.27385936363732943}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5490566037735849, "obj2": 0.3075806600710129}, {"determining": "( Max( Max( Max( MRS,ACS ),( FirstVNF_RAM_Server * AMS ) ),( ( AMS * FirstVNF_Mem_Server ) / Min( RRS ,Const ) ) ) - ( ( MDR / AMS ) * ( RRS / MDR ) ) )", "choosing": "( ( ( Max( ( ( RRSe * DS ) + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) + Min( DS ,MUC ) ) ) - ( ( ( RCSe / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.11320754716981132, "obj2": 0.7429211481861381}, {"determining": "Max( ( ( ACS - MDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( ( MUC / MUC ) + Min( MUM ,DS ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.12830188679245283, "obj2": 0.7300436485107716}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / DDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.7584905660377359, "obj2": 0.07794115865711725}], "16": [{"determining": "( Min( ACS ,DDR ) - ( Min( MDR ,AMS ) / ( ( ( MDR / AMS ) * Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( ( RCSe * RMSe ) ,DS ) ) ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( FirstVNF_Mem_Server - Const ) ) ,( CRS / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,DS ) * Max( RRSe,( MUC * Min( ( MLU + MUC ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,Max( Const,FirstVNF_CPU_Server ) ),AMS ) * Max( MRS,RRS ) )", "choosing": "( Max( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ),( ( RCSe - RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * MUR ) + ( MUM * RRSe ) ) ) )", "obj1": 0.07735849056603773, "obj2": 0.7949434110881185}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.3150943396226415, "obj2": 0.46942668153545275}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_CPU - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.2943396226415094, "obj2": 0.5042268992070182}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR - AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUR ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.6962264150943396, "obj2": 0.17612715016738467}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / MDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe + MUM ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS + MUC ) ) ) )", "obj1": 0.6981132075471698, "obj2": 0.10880650511941183}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Max( ( ( RRSe * DS ) + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) + Min( DS ,MUC ) ) ) - ( ( ( RCSe / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.27169811320754716, "obj2": 0.5391952354050584}, {"determining": "( ( ( Max( ( Min( ( Max( CRS,BR ) / ( BR / DDR ) ) ,( Min( RRS ,DDR ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) + ( ( ( ARS + FirstVNF_RAM_Server ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) * ( ( CRS - AMS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_Mem + MDR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) / Max( Min( Min( PN ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * FirstVNF_Mem ) ),( Max( RRS,BR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( Min( Min( ( ( AMS / Const ) * ( FirstVNF_RAM / AMS ) ) ,( Min( ARS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,RRS ) ) ) ,Max( ( ( Const + FirstVNF_RAM ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem ) * ( ACS * Const ) ) ) ) * Min( ( ( ( FirstVNF_CPU * ARS ) * ( MRS * FirstVNF_Mem ) ) / Max( ( PN * FirstVNF_CPU ),( MRS + ACS ) ) ) ,Min( ( ( MDR / FirstVNF_RAM ) * ( MRS * FirstVNF_Mem_Server ) ) ,Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * DDR ) ) ) ) ) ) / ( ( ( Max( ( Max( Const,FirstVNF_CPU_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,ARS ) - Min( DDR ,FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_RAM - CRS ) - ( ACS / DDR ) ) - ( ( PN - CRS ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) + ( ( ( Max( FirstVNF_RAM,DDR ) + Min( RRS ,FirstVNF_CPU_Server ) ) / Max( Min( ARS ,AMS ),Min( ARS ,FirstVNF_CPU ) ) ) + ( Min( ( DDR * DDR ) ,( CRS * FirstVNF_RAM ) ) + ( ( MDR * ARS ) - ( CRS - MRS ) ) ) ) ) / ( Max( ( Max( ( PN * DDR ),Min( CRS ,AMS ) ) * Max( Min( AMS ,DDR ),Min( FirstVNF_RAM ,PN ) ) ),( ( Max( PN,CRS ) - ( FirstVNF_CPU + RRS ) ) - ( Max( MRS,RRS ) + Min( DDR ,BR ) ) ) ) - ( ( Max( Max( FirstVNF_CPU_Server,RRS ),Min( MRS ,FirstVNF_RAM ) ) / ( Max( PN,FirstVNF_Mem_Server ) - ( ARS * MDR ) ) ) / ( ( ( CRS * Const ) + ( MDR / Const ) ) * ( Min( Const ,ACS ) + ( Const - RRS ) ) ) ) ) ) ) + ( Max( Min( Max( ( ( ( FirstVNF_CPU_Server - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( MDR + AMS ) - Max( RRS,AMS ) ) ),Max( ( Min( DDR ,CRS ) / Min( FirstVNF_Mem ,ARS ) ),Max( Min( CRS ,FirstVNF_CPU ),( ACS / ACS ) ) ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( PN / FirstVNF_RAM ) ) - ( ( Const * FirstVNF_RAM_Server ) + ( Const + FirstVNF_RAM_Server ) ) ) + Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ),Min( Max( ( Max( ( FirstVNF_RAM + Const ),Min( RRS ,PN ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( BR / RRS ) ) ),( ( ( FirstVNF_Mem_Server + ACS ) + Max( FirstVNF_CPU_Server,Const ) ) + ( ( AMS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / AMS ),( CRS - MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,Max( RRS,ARS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem - AMS ) ) ) ) ) ) / ( Max( ( Min( ( ( FirstVNF_Mem + MDR ) - ( FirstVNF_CPU_Server - BR ) ) ,( Min( AMS ,MRS ) - ( BR / FirstVNF_CPU_Server ) ) ) + ( ( Max( FirstVNF_CPU_Server,BR ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) + Min( ( ACS / PN ) ,( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ),Min( ( ( ( DDR - FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) / ( ( FirstVNF_RAM_Server - Const ) - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) ,Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( MRS / FirstVNF_RAM ) ) ) ) ) - ( ( ( ( ( RRS / DDR ) * ( FirstVNF_Mem_Server * ARS ) ) - Min( Min( FirstVNF_RAM_Server ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) ) / Min( Min( ( PN + RRS ) ,Min( FirstVNF_CPU ,Const ) ) ,Max( ( MRS / FirstVNF_CPU_Server ),Max( CRS,MRS ) ) ) ) + ( Min( ( ( FirstVNF_CPU + MRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,( ( Const + FirstVNF_CPU ) * Min( ACS ,RRS ) ) ) / ( ( ( FirstVNF_CPU - CRS ) * ( CRS / RRS ) ) / ( Max( BR,MRS ) - ( Const * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / CS ) + ( RRSe / ( ( ( MUR * ( ( MUR - Max( MUM,DS ) ) - DS ) ) * MUR ) + RRSe ) ) )", "obj1": 0.8566037735849057, "obj2": 0.06558652770796525}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( ( MLU * CS ) + MUM ) ) ) )", "obj1": 0.3641509433962264, "obj2": 0.4570123980482578}, {"determining": "Max( ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( CS ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) / CS ) )", "obj1": 0.39622641509433965, "obj2": 0.42062931563098377}, {"determining": "Max( ( ( ( Min( ARS ,( ( MDR + AMS ) + ( FirstVNF_CPU / RRS ) ) ) - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * ( MUM - DS ) ) ) ) + Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) ) ) + ( ( ( MUR - CS ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) / CS ) )", "obj1": 0.42452830188679247, "obj2": 0.3885461527187372}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.17547169811320754, "obj2": 0.652460857899411}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / ACS ) / ( ( ( ACS - DDR ) - Min( DDR ,( ACS - DDR ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( Min( MUC ,MUC ),( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( RCSe * MUM ) ) ) ) )", "obj1": 0.8924528301886793, "obj2": 0.035996677633041346}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR / AMS ) + ( ( ( ACS - DDR ) - ( ARS * ( ( MDR / AMS ) + ( FirstVNF_CPU / RRS ) ) ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR - ( ( ( RRSe / DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) ) )", "obj1": 0.0830188679245283, "obj2": 0.7673230819076938}, {"determining": "( Max( ( ACS - MDR ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( Max( Min( CRS ,Const ),Max( RRS,Const ) ) * ( MRS / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) - ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS + MUC ) ) ) )", "obj1": 0.21509433962264152, "obj2": 0.636718519827242}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,ARS ) ),Min( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( DS * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.9490566037735849, "obj2": 0.02200891504633493}, {"determining": "Max( ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) / CS ) )", "obj1": 0.3754716981132076, "obj2": 0.4317686460351788}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,Min( MRS ,AMS ) ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( RRSe * MUM ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.22075471698113208, "obj2": 0.5937897209904388}, {"determining": "Max( ( ( ACS - DDR ) - Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( ( ( ( ACS - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) ) * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( ( ( MUR * RCSe ) - Min( MLU ,MUR ) ) * RRSe ) ) ) )", "obj1": 0.8150943396226416, "obj2": 0.0706055074752724}, {"determining": "Max( ( ( ACS - DDR ) - ( FirstVNF_RAM_Server - Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) + Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.16226415094339622, "obj2": 0.6779955977090752}, {"determining": "( ( ACS - DDR ) - ( ( ( MDR / AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( ( RCSe * RMSe ) ,DS ) ) ) ,MLU ) ) ) )", "obj1": 0.15849056603773584, "obj2": 0.6981942287283497}, {"determining": "( ( Const - DDR ) - ( DDR - DDR ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * MLU ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.6320754716981132, "obj2": 0.2374377739722601}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( MUM * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( MLU * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5, "obj2": 0.33878413279473707}, {"determining": "( ARS - ( DDR - MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - CS ) / ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.9811320754716981, "obj2": 0.006424124384605518}, {"determining": "( Min( ACS ,DDR ) - Max( ( MDR / AMS ),( ( ( MDR / AMS ) - Min( DDR ,Const ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / MUC ) / Max( RMSe,( Min( MLU ,CS ) * ( MUM - MUM ) ) ) )", "obj1": 0.7622641509433963, "obj2": 0.07622194171867032}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),( Min( ACS ,ACS ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUR ) + ( RRSe * MUM ) ) / ( ( RCSe * RRSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.2358490566037736, "obj2": 0.5914471356999678}, {"determining": "( Min( ACS ,DDR ) - ( Max( MDR,AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * DS ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.6452830188679245, "obj2": 0.2224389020998171}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / MDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe + MUM ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS + MUC ) ) ) )", "obj1": 0.7150943396226415, "obj2": 0.10162863195340244}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - ( ( ACS - DDR ) - ( DDR - PN ) ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * RMSe ) + ( MUM * RRSe ) ) ) )", "obj1": 0.4547169811320755, "obj2": 0.37324858277156714}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5490566037735849, "obj2": 0.3075806600710129}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( ( RCSe * RMSe ) ,DS ) ) ) ,MLU ) ) ) )", "obj1": 0.11132075471698114, "obj2": 0.7564639635386131}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( FirstVNF_CPU ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,RRSe ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.20754716981132076, "obj2": 0.647929969583687}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - ( ( ACS - DDR ) - ( DDR - PN ) ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * RMSe ) + ( MUM * RRSe ) ) ) )", "obj1": 0.469811320754717, "obj2": 0.3590946888221949}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ACS - CRS ) - ( ( FirstVNF_CPU_Server + AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe / MLU ) / Min( RMSe ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 0.6754716981132075, "obj2": 0.194866087983861}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),( ( Const - DDR ) - ( DDR - PN ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( ( RRSe * MLU ),( ( ( MUC * CS ) + ( MUM * RRSe ) ) * ( ( MLU * CS ) + MUM ) ) ) )", "obj1": 0.6113207547169811, "obj2": 0.25082651164167785}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR - AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUR ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.13018867924528302, "obj2": 0.7103266580767705}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5207547169811321, "obj2": 0.3234281527536369}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,Min( MRS ,AMS ) ) ,( FirstVNF_Mem_Server - ARS ) ) )", "choosing": "Max( ( MUR / ( ( ( MUC * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( RRSe * MUM ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.2490566037735849, "obj2": 0.5630250871678589}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) / ( BR * ( ( Min( ( Min( DDR ,PN ) + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( MUM * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( MLU * ( ( MUC * ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4867924528301887, "obj2": 0.351152238013981}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.2509433962264151, "obj2": 0.5575757447228966}, {"determining": "( ( Const + DDR ) - ( DDR + CRS ) )", "choosing": "( ( RMSe / ( ( ( RRSe / DS ) * Min( MUC ,MLU ) ) * Max( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( DS * RMSe ) * RRSe ) ) ),( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 0.5622641509433962, "obj2": 0.2920931770087035}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.43018867924528303, "obj2": 0.3776307572973775}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( Max( ACS,DDR ) - ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC / MLU ) / Max( RMSe,( Min( MLU ,CS ) * ( RCSe + MUM ) ) ) )", "obj1": 0.660377358490566, "obj2": 0.20738699549771517}, {"determining": "( ( ( FirstVNF_Mem - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * ( MUM / DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.8245283018867925, "obj2": 0.06791959949668086}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5339622641509434, "obj2": 0.3196666957381186}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / ACS ) / ( ( ( ACS - DDR ) - Min( DDR ,( ACS - DDR ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( Min( MUC ,MUC ),( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( RMSe / MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( RCSe * MUM ) ) ) ) )", "obj1": 0.8981132075471698, "obj2": 0.033359026727153164}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / DDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / ARS ) ) )", "choosing": "( ( RRSe / MLU ) / Max( RMSe,( ( MLU * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.7377358490566037, "obj2": 0.08918989144368814}, {"determining": "( ( ACS + DDR ) - ( ( ( ACS - DDR ) - ( ( ( MDR / AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RMSe + MUM ) * ( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( ( RCSe * RMSe ) ,DS ) ) ) ,MLU ) ) )", "obj1": 0.5981132075471698, "obj2": 0.2570918509214254}, {"determining": "( ( ( ACS - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( MUM * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( MLU * ( ( MUC * ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) ) + Max( MUM,RRSe ) ) ) ) )", "obj1": 0.5641509433962264, "obj2": 0.2785379656668711}, {"determining": "( ( ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( MRS / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) )", "choosing": "( ( MUR / ( MUR * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.9283018867924528, "obj2": 0.029136111426016728}], "17": [{"determining": "( Min( ACS ,DDR ) - Max( ( MDR / AMS ),( ( ( MDR / AMS ) - Min( DDR ,Const ) ) / ( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( RMSe / MUC ) / Max( RMSe,( Min( MLU ,CS ) * ( ( RRSe * DS ) + Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,DDR ) - ( Min( MDR ,AMS ) / ( ( ( MDR / AMS ) * Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( ( RCSe * RMSe ) ,DS ) ) ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,Max( Const,FirstVNF_CPU_Server ) ),AMS ) * Max( MRS,RRS ) )", "choosing": "( Max( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ),( ( RCSe - RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * MUR ) + ( MUM * RRSe ) ) ) )", "obj1": 0.07735849056603773, "obj2": 0.7949434110881185}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.3150943396226415, "obj2": 0.46942668153545275}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_CPU - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.2943396226415094, "obj2": 0.5042268992070182}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / DDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / ( ACS - DDR ) ) ) )", "choosing": "( ( RRSe / MLU ) / Max( ( RMSe + CS ),( RRSe + RCSe ) ) )", "obj1": 0.6811320754716981, "obj2": 0.1708666074151722}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / MDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe + MUM ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS + MUC ) ) ) )", "obj1": 0.6981132075471698, "obj2": 0.10880650511941183}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Max( ( ( RRSe * DS ) + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) + Min( DS ,MUC ) ) ) - ( ( ( RCSe / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.27169811320754716, "obj2": 0.5391952354050584}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( ( MLU * CS ) + MUM ) ) ) )", "obj1": 0.3641509433962264, "obj2": 0.4570123980482578}, {"determining": "( ( ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( MRS / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) )", "choosing": "( ( RRSe / MLU ) / Max( RMSe,( ( MLU * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.8924528301886793, "obj2": 0.03329441877761763}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR - AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUR ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.13018867924528302, "obj2": 0.7103266580767705}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( Min( FirstVNF_RAM_Server ,Const ) ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( Min( MLU ,CS ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.21132075471698114, "obj2": 0.6114187872448372}, {"determining": "( ( ACS - DDR ) - Min( ARS ,( ( MDR / AMS ) + ( ( ( ACS - DDR ) - ( ARS * ( ( MDR / AMS ) + ( FirstVNF_CPU / RRS ) ) ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUR - ( ( ( RRSe / DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) ) )", "obj1": 0.0830188679245283, "obj2": 0.7673230819076938}, {"determining": "Max( ( ( ACS - DDR ) - ( FirstVNF_RAM_Server - Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Max( ( ( RRSe * DS ) + MUC ),MUR ) * ( RRSe / Max( Min( MUC ,RMSe ),( Min( MUR ,DS ) + MUC ) ) ) ) - ( ( MUR * RCSe ) + Min( DS ,MUC ) ) ) - ( ( ( RCSe / DS ) + ( RMSe / MUR ) ) / ( ( RCSe - MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.12264150943396226, "obj2": 0.7461566598040225}, {"determining": "Max( ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) / CS ) )", "obj1": 0.3754716981132076, "obj2": 0.4317686460351788}, {"determining": "( ( ( Max( ( Min( ( Max( CRS,BR ) / ( BR / DDR ) ) ,( Min( RRS ,DDR ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) + ( ( ( ARS + FirstVNF_RAM_Server ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) * ( ( CRS - AMS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_Mem + MDR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) / Max( Min( Min( PN ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * FirstVNF_Mem ) ),( Max( RRS,BR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( Min( Min( ( ( AMS / Const ) * ( FirstVNF_RAM / AMS ) ) ,( Min( ARS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,RRS ) ) ) ,Max( ( ( Const + FirstVNF_RAM ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem ) * ( ACS * Const ) ) ) ) * Min( ( ( ( FirstVNF_CPU * ARS ) * ( MRS * FirstVNF_Mem ) ) / Max( ( PN * FirstVNF_CPU ),( MRS + ACS ) ) ) ,Min( ( ( MDR / FirstVNF_RAM ) * ( MRS * FirstVNF_Mem_Server ) ) ,Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * DDR ) ) ) ) ) ) / ( ( ( Max( ( Max( Const,FirstVNF_CPU_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,ARS ) - Min( DDR ,FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_RAM - CRS ) - ( ACS / DDR ) ) - ( ( PN - CRS ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) + ( ( ( Max( FirstVNF_RAM,DDR ) + Min( RRS ,FirstVNF_CPU_Server ) ) / Max( Min( ARS ,AMS ),Min( ARS ,FirstVNF_CPU ) ) ) + ( Min( ( DDR * DDR ) ,( CRS * FirstVNF_RAM ) ) + ( ( MDR * ARS ) - ( CRS - MRS ) ) ) ) ) / ( Max( ( Max( ( PN * DDR ),Min( CRS ,AMS ) ) * Max( Min( AMS ,DDR ),Min( FirstVNF_RAM ,PN ) ) ),( ( Max( PN,CRS ) - ( FirstVNF_CPU + RRS ) ) - ( Max( MRS,RRS ) + Min( DDR ,BR ) ) ) ) - ( ( Max( Max( FirstVNF_CPU_Server,RRS ),Min( MRS ,FirstVNF_RAM ) ) / ( Max( PN,FirstVNF_Mem_Server ) - ( ARS * MDR ) ) ) / ( ( ( CRS * Const ) + ( MDR / Const ) ) * ( Min( Const ,ACS ) + ( Const - RRS ) ) ) ) ) ) ) + ( Max( Min( Max( ( ( ( FirstVNF_CPU_Server - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( MDR + AMS ) - Max( RRS,AMS ) ) ),Max( ( Min( DDR ,CRS ) / Min( FirstVNF_Mem ,ARS ) ),Max( Min( CRS ,FirstVNF_CPU ),( ACS / ACS ) ) ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( PN / FirstVNF_RAM ) ) - ( ( Const * FirstVNF_RAM_Server ) + ( Const + FirstVNF_RAM_Server ) ) ) + Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ),Min( Max( ( Max( ( FirstVNF_RAM + Const ),Min( RRS ,PN ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( BR / RRS ) ) ),( ( ( FirstVNF_Mem_Server + ACS ) + Max( FirstVNF_CPU_Server,Const ) ) + ( ( AMS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / AMS ),( CRS - MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,Max( RRS,ARS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem - AMS ) ) ) ) ) ) / ( Max( ( Min( ( ( FirstVNF_Mem + MDR ) - ( FirstVNF_CPU_Server - BR ) ) ,( Min( AMS ,MRS ) - ( BR / FirstVNF_CPU_Server ) ) ) + ( ( Max( FirstVNF_CPU_Server,BR ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) + Min( ( ACS / PN ) ,( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ),Min( ( ( ( DDR - FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) / ( ( FirstVNF_RAM_Server - Const ) - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) ,Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( MRS / FirstVNF_RAM ) ) ) ) ) - ( ( ( ( ( RRS / DDR ) * ( FirstVNF_Mem_Server * ARS ) ) - Min( Min( FirstVNF_RAM_Server ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) ) / Min( Min( ( PN + RRS ) ,Min( FirstVNF_CPU ,Const ) ) ,Max( ( MRS / FirstVNF_CPU_Server ),Max( CRS,MRS ) ) ) ) + ( Min( ( ( FirstVNF_CPU + MRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,( ( Const + FirstVNF_CPU ) * Min( ACS ,RRS ) ) ) / ( ( ( FirstVNF_CPU - CRS ) * ( CRS / RRS ) ) / ( Max( BR,MRS ) - ( Const * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / CS ) + ( RRSe / ( ( ( MUR * ( ( MUR - Max( MUM,DS ) ) - DS ) ) * MUR ) + RRSe ) ) )", "obj1": 0.8660377358490566, "obj2": 0.05820451149223348}, {"determining": "Max( ( ( ACS - DDR ) - ( FirstVNF_RAM_Server - Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) + Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.16226415094339622, "obj2": 0.6779955977090752}, {"determining": "( ( ACS - DDR ) - ( ( ( MDR / AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( ( RCSe * RMSe ) ,DS ) ) ) ,MLU ) ) ) )", "obj1": 0.15849056603773584, "obj2": 0.6981942287283497}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.17547169811320754, "obj2": 0.652460857899411}, {"determining": "( ( Const - DDR ) - ( DDR - DDR ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * MLU ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.6320754716981132, "obj2": 0.2374377739722601}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( MUM * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( MLU * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5, "obj2": 0.33878413279473707}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4169811320754717, "obj2": 0.4112774615901224}, {"determining": "( Min( ACS ,DDR ) - Max( ( MDR / AMS ),( ( ( MDR / AMS ) - Min( DDR ,Const ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / MUC ) / Max( RMSe,( Min( MLU ,CS ) * ( MUM - MUM ) ) ) )", "obj1": 0.7622641509433963, "obj2": 0.07622194171867032}, {"determining": "Max( ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( CS ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) / CS ) )", "obj1": 0.39622641509433965, "obj2": 0.42062931563098377}, {"determining": "Max( ( ( ACS - DDR ) - Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUR ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( MUM * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.10566037735849057, "obj2": 0.7539511157976325}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),( Min( ACS ,ACS ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUR ) + ( RRSe * MUM ) ) / ( ( RCSe * RRSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.2358490566037736, "obj2": 0.5914471356999678}, {"determining": "( Min( ACS ,DDR ) - ( Max( MDR,AMS ) / ( ( ( ACS - DDR ) - ( DDR - PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * DS ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RCSe,MUC ) - Min( MUM ,CS ) ) ) ) ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.6452830188679245, "obj2": 0.2224389020998171}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( ( ACS - CRS ) - ( ( FirstVNF_CPU_Server + AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe / MLU ) / Min( RMSe ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 0.6754716981132075, "obj2": 0.194866087983861}, {"determining": "( ( ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( MRS / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) )", "choosing": "( ( MUR / ( MUR * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.9283018867924528, "obj2": 0.029136111426016728}, {"determining": "( Max( ( ACS - PN ),Max( BR,FirstVNF_Mem ) ) + ( Max( ACS,DDR ) - ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC / MLU ) / Max( RMSe,( Min( MLU ,CS ) * ( RCSe + MUM ) ) ) )", "obj1": 0.660377358490566, "obj2": 0.20738699549771517}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / AMS ) / ( ( ( ACS - DDR ) - ( DDR - ( ( ACS - DDR ) - ( DDR - PN ) ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * RMSe ) + ( MUM * RRSe ) ) ) )", "obj1": 0.4547169811320755, "obj2": 0.37324858277156714}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / DDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / ARS ) ) )", "choosing": "( ( MUR / ( MUR * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.8037735849056604, "obj2": 0.07438708475589118}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( FirstVNF_CPU ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,RRSe ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.20754716981132076, "obj2": 0.647929969583687}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5207547169811321, "obj2": 0.3234281527536369}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5490566037735849, "obj2": 0.3075806600710129}, {"determining": "( ( ( FirstVNF_Mem - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / DDR ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.9471698113207547, "obj2": 0.018000475099220512}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,Min( MRS ,AMS ) ) ,( FirstVNF_Mem_Server - ARS ) ) )", "choosing": "Max( ( MUR / ( ( ( MUC * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( RRSe * MUM ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.2490566037735849, "obj2": 0.5630250871678589}, {"determining": "Max( ( ( ( Min( ARS ,( ( MDR + AMS ) + ( FirstVNF_CPU / RRS ) ) ) - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * ( ( ( RCSe - MLU ) + Max( RRSe,MUM ) ) / ( ( MUM * RMSe ) * ( MUM - DS ) ) ) ) + Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) ) ) + ( ( ( MUR - CS ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) / CS ) )", "obj1": 0.42452830188679247, "obj2": 0.3885461527187372}, {"determining": "Max( ( ( ACS - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ),Min( Min( ACS ,ACS ) ,( CRS * AMS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,RCSe ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( MLU * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.2509433962264151, "obj2": 0.5575757447228966}, {"determining": "( ( ( Max( ( Min( ( Max( CRS,BR ) / ( BR / DDR ) ) ,( Min( RRS ,DDR ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) + ( ( ( ARS + FirstVNF_RAM_Server ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) * ( ( CRS - AMS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_Mem + MDR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) / Max( Min( Min( PN ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * FirstVNF_Mem ) ),( Max( RRS,BR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( Min( Min( ( ( AMS / Const ) * ( FirstVNF_RAM / AMS ) ) ,( Min( ARS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,RRS ) ) ) ,Max( ( ( Const + FirstVNF_RAM ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem ) * ( ACS * Const ) ) ) ) * Min( ( ( ( FirstVNF_CPU * ARS ) * ( MRS * FirstVNF_Mem ) ) / Max( ( PN * FirstVNF_CPU ),( MRS + ACS ) ) ) ,Min( ( ( MDR / FirstVNF_RAM ) * ( MRS * FirstVNF_Mem_Server ) ) ,Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * DDR ) ) ) ) ) ) / ( ( ( Max( ( Max( Const,FirstVNF_CPU_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,ARS ) - Min( DDR ,FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_RAM - CRS ) - ( ACS / DDR ) ) - ( ( PN - CRS ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) + ( ( ( Max( FirstVNF_RAM,DDR ) + Min( RRS ,FirstVNF_CPU_Server ) ) / Max( Min( ARS ,AMS ),Min( ARS ,FirstVNF_CPU ) ) ) + ( Min( ( DDR * DDR ) ,( CRS * FirstVNF_RAM ) ) + ( ( MDR * ARS ) - ( CRS - MRS ) ) ) ) ) / ( Max( ( Max( ( PN * DDR ),Min( CRS ,AMS ) ) * Max( Min( AMS ,DDR ),Min( FirstVNF_RAM ,PN ) ) ),( ( Max( PN,CRS ) - ( FirstVNF_CPU + RRS ) ) - ( Max( MRS,RRS ) + Min( DDR ,BR ) ) ) ) - ( ( Max( Max( FirstVNF_CPU_Server,RRS ),Min( MRS ,FirstVNF_RAM ) ) / ( Max( PN,FirstVNF_Mem_Server ) - ( ARS * MDR ) ) ) / ( ( ( CRS * Const ) + ( MDR / Const ) ) * ( Min( Const ,ACS ) + ( Const - RRS ) ) ) ) ) ) ) + ( Max( Min( Max( ( ( ( FirstVNF_CPU_Server - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( MDR + AMS ) - Max( RRS,AMS ) ) ),Max( ( Min( DDR ,CRS ) / Min( FirstVNF_Mem ,ARS ) ),Max( Min( CRS ,FirstVNF_CPU ),( ACS / ACS ) ) ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( PN / FirstVNF_RAM ) ) - ( ( Const * FirstVNF_RAM_Server ) + ( Const + FirstVNF_RAM_Server ) ) ) + Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ),Min( Max( ( Max( ( FirstVNF_RAM + Const ),Min( RRS ,PN ) ) - ( Min( MDR ,FirstVNF_RAM ) * ( BR / RRS ) ) ),( ( ( FirstVNF_Mem_Server + ACS ) + Max( FirstVNF_CPU_Server,Const ) ) + ( ( AMS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / AMS ),( CRS - MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,Max( RRS,ARS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem - AMS ) ) ) ) ) ) / ( Max( ( Min( ( ( FirstVNF_Mem + MDR ) - ( FirstVNF_CPU_Server - BR ) ) ,( Min( AMS ,MRS ) - ( BR / FirstVNF_CPU_Server ) ) ) + ( ( Max( FirstVNF_CPU_Server,BR ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) + Min( ( ACS / PN ) ,( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ),Min( ( ( ( DDR - FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) / ( ( FirstVNF_RAM_Server - Const ) - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) ,Min( ( ( MDR * AMS ) * ( ACS / CRS ) ) ,Min( ( BR - Const ) ,( MRS / FirstVNF_RAM ) ) ) ) ) - ( ( ( ( ( RRS / DDR ) * ( FirstVNF_Mem_Server * ARS ) ) - Min( Min( FirstVNF_RAM_Server ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) ) / Min( Min( ( PN + RRS ) ,Min( FirstVNF_CPU ,Const ) ) ,Max( ( MRS / FirstVNF_CPU_Server ),Max( CRS,MRS ) ) ) ) + ( Min( ( ( FirstVNF_CPU + MRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,( ( Const + FirstVNF_CPU ) * Min( ACS ,RRS ) ) ) / ( ( ( FirstVNF_CPU - CRS ) * ( CRS / RRS ) ) / ( Max( BR,MRS ) - ( Const * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / CS ) + ( RRSe / ( ( ( MUR * ( ( MUR - Max( MUM,DS ) ) - DS ) ) * MUR ) + RRSe ) ) )", "obj1": 0.8566037735849057, "obj2": 0.06558652770796525}, {"determining": "( Max( ( ACS - PN ),Max( FirstVNF_RAM,ACS ) ) + ( ( ( ( ACS - DDR ) - ( DDR - PN ) ) / ( BR * ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) / ( BR * ( ( Min( ( Min( DDR ,PN ) + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * ( BR / FirstVNF_CPU ) ) ) - ( ( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( MUM * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( MLU * ( ( MUC * ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.4867924528301887, "obj2": 0.351152238013981}, {"determining": "Max( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * MUM ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.43018867924528303, "obj2": 0.3776307572973775}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),Min( Min( ACS ,Min( MRS ,AMS ) ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( ( MUC / MUC ) + ( RRSe * MUM ) ) / ( RRSe * MUM ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ),( RCSe - MLU ) )", "obj1": 0.22075471698113208, "obj2": 0.5937897209904388}, {"determining": "( ( ( Max( Min( CRS ,Const ),Max( AMS,Const ) ) - Min( FirstVNF_CPU ,Const ) ) / ARS ) - ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( RMSe,MLU ) ,( CS * RRSe ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.5339622641509434, "obj2": 0.3196666957381186}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),( ( Const - DDR ) - ( DDR - PN ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( ( RRSe * MLU ),( ( ( MUC * CS ) + ( MUM * RRSe ) ) * ( ( MLU * CS ) + MUM ) ) ) )", "obj1": 0.6113207547169811, "obj2": 0.25082651164167785}, {"determining": "( ARS - ( DDR - MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - CS ) / ( ( CS + MUC ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.9811320754716981, "obj2": 0.006424124384605518}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / MDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe + MUM ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) * Min( Max( ( MUC + MLU ),Max( RCSe,RRSe ) ) ,( ( MLU - DS ) / ( CS + MUC ) ) ) )", "obj1": 0.7150943396226415, "obj2": 0.10162863195340244}, {"determining": "( ( ( ACS - DDR ) - ( DDR - PN ) ) - ( ( MDR / AMS ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) * Min( ( ( Min( MUC ,MUC ) + Min( RRSe ,MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * ( ( MLU * CS ) + ( RMSe * RRSe ) ) ) ) + ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( MUM * Min( Max( RMSe,MLU ) ,( CS * MUC ) ) ) ) + ( MLU * ( ( MUC * ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) / ( ( RRSe + DS ) / ( RRSe / MLU ) ) ) ) + Max( MUM,RRSe ) ) ) ) )", "obj1": 0.5641509433962264, "obj2": 0.2785379656668711}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ),( ( Const - DDR ) - ( DDR - PN ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( ( RRSe * MLU ),( ( ( MUC * CS ) + ( MUM * RRSe ) ) * ( ( MLU * CS ) + MUM ) ) ) )", "obj1": 0.5830188679245283, "obj2": 0.27611122899964985}, {"determining": "Max( ( ( ( ACS - DDR ) - Min( FirstVNF_RAM_Server ,Const ) ) - Min( ( RRS - ( FirstVNF_Mem_Server - Const ) ) ,( CRS / FirstVNF_Mem_Server ) ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) )", "choosing": "( ( MUC / ( ( ( RRSe * DS ) * Min( CS ,MLU ) ) * ( ( MUC * ( DS / ( ( MUM * RMSe ) * Min( MUM ,DS ) ) ) ) + ( MUM * RRSe ) ) ) ) + ( ( ( MUR - CS ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) ) / CS ) )", "obj1": 0.2, "obj2": 0.6521898601532222}, {"determining": "( Min( ACS ,DDR ) - ( ( MDR / MDR ) / ( ( ( MDR * AMS ) - Min( DDR ,PN ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR / ( ( ( RRSe * DS ) * Min( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ,MLU ) ) * Max( ( RRSe * MLU ),( Min( MLU ,CS ) * ( MUM + MUM ) ) ) ) ),( RCSe * MLU ) )", "obj1": 0.7283018867924528, "obj2": 0.0996775427451879}]}