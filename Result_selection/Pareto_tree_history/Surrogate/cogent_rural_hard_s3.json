{"1": [{"determining": "( Max( ARS,Min( ACS ,( Const * BR ) ) ) / ( ARS - AMS ) )", "choosing": "Min( ( MUR / MUM ) ,Max( RRSe,( Min( RMSe ,( Max( Min( Min( RCSe ,MUC ) ,Min( MLU ,MUM ) ),MUM ) + RRSe ) ) * RCSe ) ) )", "obj1": 0.8875, "obj2": 0.09699055360198221}, {"determining": "( ( DDR / FirstVNF_Mem ) - Min( MRS ,MDR ) )", "choosing": "Max( ( DS * DS ),( CS / RRSe ) )", "obj1": 0.7229166666666667, "obj2": 0.1910590350458094}, {"determining": "( ( CRS / Min( FirstVNF_CPU_Server ,BR ) ) / Max( ( FirstVNF_Mem * DDR ),AMS ) )", "choosing": "( ( ( ( CS * ( ( MUC + CS ) / RMSe ) ) + Max( MUR,MLU ) ) + CS ) - ( CS - RRSe ) )", "obj1": 0.7208333333333333, "obj2": 0.19207016300928137}, {"determining": "( Min( PN ,Const ) * Max( FirstVNF_CPU_Server,ACS ) )", "choosing": "( ( RCSe + DS ) + ( RMSe + MUC ) )", "obj1": 0.7979166666666667, "obj2": 0.15710745104455343}, {"determining": "Min( ( Max( ( FirstVNF_Mem - RRS ),FirstVNF_RAM ) + FirstVNF_CPU_Server ) ,( DDR - ACS ) )", "choosing": "Max( Max( MUR,( ( MLU * RRSe ) * Max( RRSe,MUC ) ) ),( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ARS ) - Max( ( FirstVNF_CPU_Server * MDR ),Const ) )", "choosing": "( Max( ( MUR * CS ),MUM ) / ( RCSe - ( RRSe - ( RRSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem ) + Min( RRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( CS - MUC ) / Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - BR ) / ( DDR - Min( MRS ,MRS ) ) )", "choosing": "( ( RCSe + RCSe ) / ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * RRS ) + AMS ) - FirstVNF_CPU_Server ) - ( ( MDR * AMS ) + MRS ) )", "choosing": "( Min( ( MLU - RRSe ) ,Max( MUC,MUR ) ) + Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,ACS ) ,( RRS - ( Max( ( ( MRS * ( ( DDR / FirstVNF_Mem_Server ) + ( BR * AMS ) ) ) * ( FirstVNF_Mem_Server / AMS ) ),PN ) * ACS ) ) )", "choosing": "( ( ( RRSe / DS ) + MUC ) / ( ( RRSe + Max( DS,( ( RMSe / ( ( RMSe - MUR ) - MUR ) ) + Max( RCSe,Max( MLU,( RMSe * MUR ) ) ) ) ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( RRS,MDR ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( Min( ( CS + RRSe ) ,( MLU + RMSe ) ) + ( CS * MUR ) )", "obj1": 0.9333333333333333, "obj2": 0.05494618024010775}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) - ( MDR + BR ) ) ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + Max( CS,MUC ) ) - ( Min( RMSe ,MUC ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR / FirstVNF_CPU ) ,( Min( ( RRS / ( FirstVNF_Mem / Const ) ) ,PN ) + MDR ) ) - ( ( FirstVNF_Mem_Server * CRS ) + Const ) )", "choosing": "( Min( ( MUM - MUM ) ,( ( MUM + ( DS + CS ) ) * CS ) ) - ( Max( MUM,MUR ) - ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( FirstVNF_Mem + MRS ) )", "choosing": "Max( Min( DS ,( CS * MUC ) ),Min( ( RRSe / MLU ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,PN ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_CPU + ( ARS + PN ) ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( ( ( CS - ( DS * RRSe ) ) + MUM ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_Mem_Server ) - AMS ) + ( ( RRS - AMS ) - ( MRS / MRS ) ) )", "choosing": "Max( Max( RCSe,RMSe ),Max( RCSe,( ( DS / MLU ) * ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( AMS / FirstVNF_CPU ),( BR * ARS ) ) - Max( ( BR + FirstVNF_RAM_Server ),( MRS + FirstVNF_Mem_Server ) ) ) ,Min( ( ( FirstVNF_CPU_Server * DDR ) - Max( FirstVNF_Mem_Server,ACS ) ) ,Max( ( FirstVNF_Mem + RRS ),( BR * AMS ) ) ) )", "choosing": "( ( ( ( RMSe / RMSe ) * Max( DS,MUM ) ) / ( ( DS * MUM ) / ( RRSe / MLU ) ) ) * ( Min( ( MUM + MUC ) ,Max( MLU,MLU ) ) + Min( ( MUM + MUM ) ,Min( DS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( DDR,FirstVNF_CPU_Server ) - ( PN + PN ) ),( ( FirstVNF_RAM - AMS ) - ( FirstVNF_RAM_Server / MDR ) ) ) - ( Max( ( AMS * FirstVNF_CPU ),( ARS * RRS ) ) / ( Max( AMS,CRS ) / ( Const + ACS ) ) ) )", "choosing": "( Max( Max( ( MUM - RMSe ),( MUR * DS ) ),( Max( RMSe,RCSe ) * ( MLU - RRSe ) ) ) - ( ( ( CS + MUR ) / Min( MUM ,MLU ) ) * ( ( CS - RCSe ) - ( CS / MUM ) ) ) )", "obj1": 0.9083333333333333, "obj2": 0.08283444556742736}, {"determining": "( ( ( FirstVNF_RAM - AMS ) - MRS ) * ( ACS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RCSe ,DS ) * ( RCSe - MUC ) ) + ( Min( RCSe ,RMSe ) * Min( RRSe ,CS ) ) ) * ( Min( ( MLU - MUM ) ,( RRSe - RCSe ) ) + Max( ( DS * MUM ),Max( MUM,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Const ) - Max( ARS,MDR ) )", "choosing": "Max( Min( ( Max( MUM,RMSe ) * ( MUC + MUM ) ) ,( Max( RMSe,CS ) - ( RRSe / RMSe ) ) ),( Max( ( DS * RCSe ),Max( MUR,RRSe ) ) + ( ( RRSe * CS ) - Max( RRSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_Mem_Server / Const ) * ( MDR * FirstVNF_RAM ) ) - ( ( ACS * MRS ) - ( CRS + RRS ) ) ),Max( Max( ( ARS + MRS ),( ACS * MRS ) ),( ( MRS - DDR ) + Max( ARS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / MUR ) / ( ( RCSe * MLU ) + ( MUM / DS ) ) )", "obj1": 0.7625, "obj2": 0.16836925466931862}, {"determining": "( ( ( ( DDR / FirstVNF_CPU_Server ) * Min( BR ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem ,RRS ),Min( RRS ,FirstVNF_CPU ) ) ) * ( Max( ( FirstVNF_CPU_Server / Const ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + ( ( BR / BR ) / ( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) / ( RCSe + DS ) ) + ( Min( RCSe ,MLU ) - Max( MUM,MUM ) ) ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) * ( DDR - AMS ) ) * ( Max( AMS,FirstVNF_Mem_Server ) + ( MRS * RRS ) ) ) / Min( ( Max( FirstVNF_RAM_Server,MRS ) + ( PN + FirstVNF_Mem ) ) ,( ( DDR / CRS ) + Max( BR,ACS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) / ( CS / MUM ) ) + MLU ) / ( MUC + ( DS / ( MUR - RCSe ) ) ) )", "obj1": 0.75625, "obj2": 0.17223956928637732}, {"determining": "( ( ( ( DDR * MRS ) + Min( FirstVNF_RAM ,RRS ) ) - ( Max( AMS,Const ) * ( DDR - RRS ) ) ) * ( ( Min( MDR ,( Min( Const ,RRS ) * RRS ) ) - ( PN * FirstVNF_RAM_Server ) ) - ( ( Const - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( Min( ( CS + Max( RCSe,CS ) ) ,DS ) / Max( Min( RMSe ,RMSe ),( MLU * ( Min( DS ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + Max( ( ( CRS + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,ARS ) ),( Max( FirstVNF_Mem,FirstVNF_CPU ) + Max( RRS,RRS ) ) ) )", "choosing": "Min( ( ( Max( CS,RMSe ) + CS ) * ( CS + MUR ) ) ,( Max( ( DS - CS ),Max( RRSe,MUR ) ) * RMSe ) )", "obj1": 0.8166666666666667, "obj2": 0.12413711798826835}, {"determining": "( ( ( ARS + CRS ) * ( FirstVNF_RAM_Server + Max( Max( ACS,FirstVNF_CPU_Server ),MDR ) ) ) - ( AMS + MRS ) )", "choosing": "( Min( Min( RMSe ,DS ) ,CS ) / Min( MLU ,MUR ) )", "obj1": 0.775, "obj2": 0.16062105470997404}, {"determining": "( Max( CRS,( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server + BR ) ) ) * ( AMS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + Max( CS,MUC ) ) / Max( MUC,Max( CS,MUR ) ) ) / ( CS - MUM ) )", "obj1": 0.8645833333333334, "obj2": 0.10658363251543719}, {"determining": "Min( ( RRS * Const ) ,( ( FirstVNF_Mem_Server * Min( ( MRS + PN ) ,Const ) ) - ACS ) )", "choosing": "( ( ( ( RRSe / MUC ) + Max( RCSe,MUM ) ) + MUR ) / Max( ( MUR / RRSe ),Min( MUC ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( Min( PN ,Const ) * Max( FirstVNF_CPU_Server,ACS ) )", "choosing": "( ( RCSe + DS ) + ( RMSe + MUC ) )", "obj1": 0.7979166666666667, "obj2": 0.15710745104455343}, {"determining": "Min( ( Max( ( FirstVNF_Mem - RRS ),FirstVNF_RAM ) + FirstVNF_CPU_Server ) ,( DDR - ACS ) )", "choosing": "Max( Max( MUR,( ( MLU * RRSe ) * Max( RRSe,MUC ) ) ),( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ARS ) - Max( ( FirstVNF_CPU_Server * MDR ),Const ) )", "choosing": "( Max( ( MUR * CS ),MUM ) / ( RCSe - ( RRSe - ( RRSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem ) + Min( RRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( CS - MUC ) / Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - BR ) / ( DDR - Min( MRS ,MRS ) ) )", "choosing": "( ( RCSe + RCSe ) / ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * RRS ) + AMS ) - FirstVNF_CPU_Server ) - ( ( MDR * AMS ) + MRS ) )", "choosing": "( Min( ( MLU - RRSe ) ,Max( MUC,MUR ) ) + Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,ACS ) ,( RRS - ( Max( ( ( MRS * ( ( DDR / FirstVNF_Mem_Server ) + ( BR * AMS ) ) ) * ( FirstVNF_Mem_Server / AMS ) ),PN ) * ACS ) ) )", "choosing": "( ( ( RRSe / DS ) + MUC ) / ( ( RRSe + Max( DS,( ( RMSe / ( ( RMSe - MUR ) - MUR ) ) + Max( RCSe,Max( MLU,( RMSe * MUR ) ) ) ) ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( RRS,MDR ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( Min( ( CS + RRSe ) ,( MLU + RMSe ) ) + ( CS * MUR ) )", "obj1": 0.9333333333333333, "obj2": 0.05494618024010775}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) - ( MDR + BR ) ) ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + Max( CS,MUC ) ) - ( Min( RMSe ,MUC ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR / FirstVNF_CPU ) ,( Min( ( RRS / ( FirstVNF_Mem / Const ) ) ,PN ) + MDR ) ) - ( ( FirstVNF_Mem_Server * CRS ) + Const ) )", "choosing": "( Min( ( MUM - MUM ) ,( ( MUM + ( DS + CS ) ) * CS ) ) - ( Max( MUM,MUR ) - ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( FirstVNF_Mem + MRS ) )", "choosing": "Max( Min( DS ,( CS * MUC ) ),Min( ( RRSe / MLU ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,PN ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_CPU + ( ARS + PN ) ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( ( ( CS - ( DS * RRSe ) ) + MUM ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_Mem_Server ) - AMS ) + ( ( RRS - AMS ) - ( MRS / MRS ) ) )", "choosing": "Max( Max( RCSe,RMSe ),Max( RCSe,( ( DS / MLU ) * ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( AMS / FirstVNF_CPU ),( BR * ARS ) ) - Max( ( BR + FirstVNF_RAM_Server ),( MRS + FirstVNF_Mem_Server ) ) ) ,Min( ( ( FirstVNF_CPU_Server * DDR ) - Max( FirstVNF_Mem_Server,ACS ) ) ,Max( ( FirstVNF_Mem + RRS ),( BR * AMS ) ) ) )", "choosing": "( ( ( ( RMSe / RMSe ) * Max( DS,MUM ) ) / ( ( DS * MUM ) / ( RRSe / MLU ) ) ) * ( Min( ( MUM + MUC ) ,Max( MLU,MLU ) ) + Min( ( MUM + MUM ) ,Min( DS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( DDR,FirstVNF_CPU_Server ) - ( PN + PN ) ),( ( FirstVNF_RAM - AMS ) - ( FirstVNF_RAM_Server / MDR ) ) ) - ( Max( ( AMS * FirstVNF_CPU ),( ARS * RRS ) ) / ( Max( AMS,CRS ) / ( Const + ACS ) ) ) )", "choosing": "( Max( Max( ( MUM - RMSe ),( MUR * DS ) ),( Max( RMSe,RCSe ) * ( MLU - RRSe ) ) ) - ( ( ( CS + MUR ) / Min( MUM ,MLU ) ) * ( ( CS - RCSe ) - ( CS / MUM ) ) ) )", "obj1": 0.9083333333333333, "obj2": 0.08283444556742736}, {"determining": "( ( ( FirstVNF_RAM - AMS ) - MRS ) * ( ACS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RCSe ,DS ) * ( RCSe - MUC ) ) + ( Min( RCSe ,RMSe ) * Min( RRSe ,CS ) ) ) * ( Min( ( MLU - MUM ) ,( RRSe - RCSe ) ) + Max( ( DS * MUM ),Max( MUM,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Const ) - Max( ARS,MDR ) )", "choosing": "Max( Min( ( Max( MUM,RMSe ) * ( MUC + MUM ) ) ,( Max( RMSe,CS ) - ( RRSe / RMSe ) ) ),( Max( ( DS * RCSe ),Max( MUR,RRSe ) ) + ( ( RRSe * CS ) - Max( RRSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_Mem_Server / Const ) * ( MDR * FirstVNF_RAM ) ) - ( ( ACS * MRS ) - ( CRS + RRS ) ) ),Max( Max( ( ARS + MRS ),( ACS * MRS ) ),( ( MRS - DDR ) + Max( ARS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / MUR ) / ( ( RCSe * MLU ) + ( MUM / DS ) ) )", "obj1": 0.7625, "obj2": 0.16836925466931862}, {"determining": "( ( ( ( DDR / FirstVNF_CPU_Server ) * Min( BR ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem ,RRS ),Min( RRS ,FirstVNF_CPU ) ) ) * ( Max( ( FirstVNF_CPU_Server / Const ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + ( ( BR / BR ) / ( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) / ( RCSe + DS ) ) + ( Min( RCSe ,MLU ) - Max( MUM,MUM ) ) ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) * ( DDR - AMS ) ) * ( Max( AMS,FirstVNF_Mem_Server ) + ( MRS * RRS ) ) ) / Min( ( Max( FirstVNF_RAM_Server,MRS ) + ( PN + FirstVNF_Mem ) ) ,( ( DDR / CRS ) + Max( BR,ACS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) / ( CS / MUM ) ) + MLU ) / ( MUC + ( DS / ( MUR - RCSe ) ) ) )", "obj1": 0.75625, "obj2": 0.17223956928637732}, {"determining": "( ( ( ( DDR * MRS ) + Min( FirstVNF_RAM ,RRS ) ) - ( Max( AMS,Const ) * ( DDR - RRS ) ) ) * ( ( Min( MDR ,( Min( Const ,RRS ) * RRS ) ) - ( PN * FirstVNF_RAM_Server ) ) - ( ( Const - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( Min( ( CS + Max( RCSe,CS ) ) ,DS ) / Max( Min( RMSe ,RMSe ),( MLU * ( Min( DS ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + Max( ( ( CRS + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,ARS ) ),( Max( FirstVNF_Mem,FirstVNF_CPU ) + Max( RRS,RRS ) ) ) )", "choosing": "Min( ( ( Max( CS,RMSe ) + CS ) * ( CS + MUR ) ) ,( Max( ( DS - CS ),Max( RRSe,MUR ) ) * RMSe ) )", "obj1": 0.8166666666666667, "obj2": 0.12413711798826835}, {"determining": "( ( ( ARS + CRS ) * ( FirstVNF_RAM_Server + Max( Max( ACS,FirstVNF_CPU_Server ),MDR ) ) ) - ( AMS + MRS ) )", "choosing": "( Min( Min( RMSe ,DS ) ,CS ) / Min( MLU ,MUR ) )", "obj1": 0.775, "obj2": 0.16062105470997404}, {"determining": "Min( ( RRS * Const ) ,( ( FirstVNF_Mem_Server * Min( ( MRS + PN ) ,Const ) ) - ACS ) )", "choosing": "( ( ( ( RRSe / MUC ) + Max( RCSe,MUM ) ) + MUR ) / Max( ( MUR / RRSe ),Min( MUC ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem ) + Min( ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + Max( ( ( CRS + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,ARS ) ),( Max( FirstVNF_Mem,FirstVNF_CPU ) + Max( RRS,RRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( CS,RMSe ) + CS ) * ( CS + MUR ) ) ,( Max( ( DS - CS ),Max( RRSe,MUR ) ) * RMSe ) ) / Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Min( RRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( CS - Max( Max( ( MUM - DS ),Max( ( RRSe - DS ),( DS * MUC ) ) ),Min( Min( RRSe ,MUR ) ,DS ) ) ) / Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,PN ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_CPU + ( ARS + PN ) ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( ( ( CS - ( DS * RRSe ) ) + MUM ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,( ( CRS * FirstVNF_RAM ) + ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem_Server ,BR ) ) / FirstVNF_Mem ) ) ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_Mem * ( FirstVNF_RAM - Const ) ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( MLU / ( ( DS - ( DS + MUM ) ) + Max( Max( MUR,MUC ),( MUC * MUM ) ) ) ) ,( ( ( CS - ( DS * RMSe ) ) + MUM ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( ( Max( ( MUM * DS ),Max( RRSe,CS ) ) + ( ( RRSe + MLU ) * ( MUC * MUC ) ) ) / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 0.7958333333333333, "obj2": 0.15730452412347382}, {"determining": "Min( ( Min( FirstVNF_RAM ,PN ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_CPU + ( ARS + PN ) ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( ( ( CS - ( DS * RRSe ) ) + MUM ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "Max( Min( DS ,( CS * MUC ) ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / ( FirstVNF_Mem / AMS ) ) - Min( MRS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( CS / RRSe ) )", "obj1": 0.7208333333333333, "obj2": 0.18751743415482758}, {"determining": "Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server + CRS ) * MRS ) )", "choosing": "Max( Max( MUR,MUR ),( ( Min( MUM ,( ( RCSe * ( DS + Min( CS ,MUC ) ) ) - Min( MLU ,RMSe ) ) ) - Min( MLU ,MUC ) ) * ( MUM / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + Max( ( ( CRS + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,ARS ) ),( Max( FirstVNF_Mem,FirstVNF_CPU ) + ( ( PN - Const ) - ( FirstVNF_Mem + MRS ) ) ) ) )", "choosing": "Min( Min( ( RRSe / MLU ) ,MLU ) ,( Max( ( DS - CS ),Max( RRSe,MUR ) ) * RMSe ) )", "obj1": 0.8541666666666666, "obj2": 0.08669707835352715}, {"determining": "( ( ( Min( ACS ,BR ) + ( ACS - ( RRS - AMS ) ) ) / FirstVNF_RAM ) + Max( ARS,FirstVNF_Mem ) )", "choosing": "( Max( Min( ( MUC / RMSe ) ,( RCSe * MUM ) ),( Max( DS,MUM ) * ( MUM + DS ) ) ) / ( ( ( MLU / MUM ) / ( DS - DS ) ) + Min( Max( RCSe,( ( DS / MLU ) * ( MUC / DS ) ) ) ,( MUM * MUR ) ) ) )", "obj1": 0.80625, "obj2": 0.1514978819582795}, {"determining": "Max( Min( AMS ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ),( ( MRS * ( FirstVNF_Mem_Server + ( BR * AMS ) ) ) * ( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "( ( MLU / ( RRSe + Max( DS,( ( RMSe / ( ( DS - MUR ) - MUR ) ) + Max( RCSe,Max( MLU,( RMSe * MUR ) ) ) ) ) ) ) + Max( MUM,Max( CS,MUC ) ) )", "obj1": 0.7375, "obj2": 0.18061613892113276}, {"determining": "( ( ( ( DDR / FirstVNF_CPU_Server ) * Min( BR ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem ,RRS ),Max( MRS,FirstVNF_Mem ) ) ) * ( Max( ( FirstVNF_CPU_Server / Const ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + ( ( BR / BR ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) / ( RCSe + DS ) ) + ( Min( RCSe ,MLU ) - Max( MUM,MUM ) ) ) * ( ( Min( MLU ,MUR ) / ( MLU - MUM ) ) * ( ( MUR - RMSe ) - ( CS / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + ( ( CRS - FirstVNF_Mem ) + Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Max( CS,RMSe ) + Min( ( DS / MLU ) ,MUC ) ) * ( CS + MUR ) ) ,( Max( ( ( CS - MUC ) / Min( MUM ,RMSe ) ),Max( RRSe,MUR ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + CRS ) / ( BR + AMS ) ) * ( Max( MDR,AMS ) - ( ( ACS / ACS ) - CRS ) ) )", "choosing": "( ( ( MUM * RMSe ) * ( MUC * CS ) ) / Min( ( Max( DS,MLU ) * ( MLU / MUR ) ) ,( ( RMSe + DS ) / ( MLU / CS ) ) ) )", "obj1": 0.8520833333333333, "obj2": 0.11221977029657036}, {"determining": "( ( ACS - ARS ) * ( FirstVNF_Mem / FirstVNF_Mem ) )", "choosing": "( Min( CS ,CS ) + ( ( DS / RCSe ) * DS ) )", "obj1": 0.9541666666666667, "obj2": 0.04328566149880331}, {"determining": "Min( MRS ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + Max( CS,MUC ) ) - ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS * Const ) ,( ( FirstVNF_Mem_Server * MRS ) - ACS ) )", "choosing": "( ( ( ( RRSe / MUC ) + Max( Min( RCSe ,MLU ),MUM ) ) + MUR ) / Max( MLU,Min( MUC ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,Min( ACS ,( Const * BR ) ) ) / ( ARS - AMS ) )", "choosing": "Min( ( MUR / MUM ) ,Max( RRSe,( Min( RMSe ,( Max( Min( Min( RCSe ,MUC ) ,Min( MLU ,MUM ) ),MUM ) + RRSe ) ) * RCSe ) ) )", "obj1": 0.8458333333333333, "obj2": 0.12199181357128534}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + Max( ( ( ( AMS - ( ACS + PN ) ) + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,ARS ) ),( Max( FirstVNF_Mem,FirstVNF_CPU ) + Max( RRS,RRS ) ) ) ) - ( FirstVNF_Mem + MRS ) )", "choosing": "Max( Min( DS ,( CS * MUC ) ),Min( ( ( Max( ( DS - CS ),Max( Max( ( MUM + MUC ),MUM ),MUR ) ) * RMSe ) / MLU ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,CRS ) - ( Max( CRS,( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server + BR ) ) ) * ( AMS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS - Max( MUC,Max( CS,MUR ) ) ) * ( RCSe * MUM ) )", "obj1": 0.7541666666666667, "obj2": 0.17465706511417214}, {"determining": "( ( CRS * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem + MRS ) )", "choosing": "Max( Min( DS ,( CS * MUC ) ),Min( ( RRSe / MLU ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( FirstVNF_Mem + Max( BR,CRS ) ) )", "choosing": "Max( MUM,Min( ( RRSe / MLU ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server * MRS ) ) - Min( MRS ,MDR ) )", "choosing": "Max( ( ( MUC * Min( ( MLU - CS ) ,( ( ( RRSe - Min( RRSe ,MUR ) ) / RCSe ) - Min( ( MUR * DS ) ,MLU ) ) ) ) * DS ),Max( CS,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - Min( PN ,Const ) )", "choosing": "Max( ( DS * ( MUM + MUC ) ),( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( ( Max( ( FirstVNF_Mem - RRS ),FirstVNF_RAM ) + FirstVNF_CPU_Server ) ,( DDR - ACS ) )", "choosing": "Max( Max( MUR,( ( MLU * RRSe ) * Max( RRSe,MUC ) ) ),( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ARS ) - Max( ( FirstVNF_CPU_Server * MDR ),Const ) )", "choosing": "( Max( ( MUR * CS ),MUM ) / ( RCSe - ( RRSe - ( RRSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem ) + Min( RRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( CS - MUC ) / Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - BR ) / ( DDR - Min( MRS ,MRS ) ) )", "choosing": "( ( RCSe + RCSe ) / ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * RRS ) + AMS ) - FirstVNF_CPU_Server ) - ( ( MDR * AMS ) + MRS ) )", "choosing": "( Min( ( MLU - RRSe ) ,Max( MUC,MUR ) ) + Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,ACS ) ,( RRS - ( Max( ( ( MRS * ( ( DDR / FirstVNF_Mem_Server ) + ( BR * AMS ) ) ) * ( FirstVNF_Mem_Server / AMS ) ),PN ) * ACS ) ) )", "choosing": "( ( ( RRSe / DS ) + MUC ) / ( ( RRSe + Max( DS,( ( RMSe / ( ( RMSe - MUR ) - MUR ) ) + Max( RCSe,Max( MLU,( RMSe * MUR ) ) ) ) ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( RRS,MDR ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( Min( ( CS + RRSe ) ,( MLU + RMSe ) ) + ( CS * MUR ) )", "obj1": 0.9333333333333333, "obj2": 0.05494618024010775}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) - ( MDR + BR ) ) ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + Max( CS,MUC ) ) - ( Min( RMSe ,MUC ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR / FirstVNF_CPU ) ,( Min( ( RRS / ( FirstVNF_Mem / Const ) ) ,PN ) + MDR ) ) - ( ( FirstVNF_Mem_Server * CRS ) + Const ) )", "choosing": "( Min( ( MUM - MUM ) ,( ( MUM + ( DS + CS ) ) * CS ) ) - ( Max( MUM,MUR ) - ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( FirstVNF_Mem + MRS ) )", "choosing": "Max( Min( DS ,( CS * MUC ) ),Min( ( RRSe / MLU ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,PN ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_CPU + ( ARS + PN ) ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( ( ( CS - ( DS * RRSe ) ) + MUM ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_Mem_Server ) - AMS ) + ( ( RRS - AMS ) - ( MRS / MRS ) ) )", "choosing": "Max( Max( RCSe,RMSe ),Max( RCSe,( ( DS / MLU ) * ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( AMS / FirstVNF_CPU ),( BR * ARS ) ) - Max( ( BR + FirstVNF_RAM_Server ),( MRS + FirstVNF_Mem_Server ) ) ) ,Min( ( ( FirstVNF_CPU_Server * DDR ) - Max( FirstVNF_Mem_Server,ACS ) ) ,Max( ( FirstVNF_Mem + RRS ),( BR * AMS ) ) ) )", "choosing": "( ( ( ( RMSe / RMSe ) * Max( DS,MUM ) ) / ( ( DS * MUM ) / ( RRSe / MLU ) ) ) * ( Min( ( MUM + MUC ) ,Max( MLU,MLU ) ) + Min( ( MUM + MUM ) ,Min( DS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - AMS ) - MRS ) * ( ACS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RCSe ,DS ) * ( RCSe - MUC ) ) + ( Min( RCSe ,RMSe ) * Min( RRSe ,CS ) ) ) * ( Min( ( MLU - MUM ) ,( RRSe - RCSe ) ) + Max( ( DS * MUM ),Max( MUM,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Const ) - Max( ARS,MDR ) )", "choosing": "Max( Min( ( Max( MUM,RMSe ) * ( MUC + MUM ) ) ,( Max( RMSe,CS ) - ( RRSe / RMSe ) ) ),( Max( ( DS * RCSe ),Max( MUR,RRSe ) ) + ( ( RRSe * CS ) - Max( RRSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_Mem_Server / Const ) * ( MDR * FirstVNF_RAM ) ) - ( ( ACS * MRS ) - ( CRS + RRS ) ) ),Max( Max( ( ARS + MRS ),( ACS * MRS ) ),( ( MRS - DDR ) + Max( ARS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / MUR ) / ( ( RCSe * MLU ) + ( MUM / DS ) ) )", "obj1": 0.7625, "obj2": 0.16836925466931862}, {"determining": "( ( ( ( DDR / FirstVNF_CPU_Server ) * Min( BR ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem ,RRS ),Min( RRS ,FirstVNF_CPU ) ) ) * ( Max( ( FirstVNF_CPU_Server / Const ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + ( ( BR / BR ) / ( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) / ( RCSe + DS ) ) + ( Min( RCSe ,MLU ) - Max( MUM,MUM ) ) ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) * ( DDR - AMS ) ) * ( Max( AMS,FirstVNF_Mem_Server ) + ( MRS * RRS ) ) ) / Min( ( Max( FirstVNF_RAM_Server,MRS ) + ( PN + FirstVNF_Mem ) ) ,( ( DDR / CRS ) + Max( BR,ACS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) / ( CS / MUM ) ) + MLU ) / ( MUC + ( DS / ( MUR - RCSe ) ) ) )", "obj1": 0.75625, "obj2": 0.17223956928637732}, {"determining": "( ( ( ( DDR * MRS ) + Min( FirstVNF_RAM ,RRS ) ) - ( Max( AMS,Const ) * ( DDR - RRS ) ) ) * ( ( Min( MDR ,( Min( Const ,RRS ) * RRS ) ) - ( PN * FirstVNF_RAM_Server ) ) - ( ( Const - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( Min( ( CS + Max( RCSe,CS ) ) ,DS ) / Max( Min( RMSe ,RMSe ),( MLU * ( Min( DS ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + Max( ( ( CRS + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,ARS ) ),( Max( FirstVNF_Mem,FirstVNF_CPU ) + Max( RRS,RRS ) ) ) )", "choosing": "Min( ( ( Max( CS,RMSe ) + CS ) * ( CS + MUR ) ) ,( Max( ( DS - CS ),Max( RRSe,MUR ) ) * RMSe ) )", "obj1": 0.8166666666666667, "obj2": 0.12413711798826835}, {"determining": "( ( ( ARS + CRS ) * ( FirstVNF_RAM_Server + Max( Max( ACS,FirstVNF_CPU_Server ),MDR ) ) ) - ( AMS + MRS ) )", "choosing": "( Min( Min( RMSe ,DS ) ,CS ) / Min( MLU ,MUR ) )", "obj1": 0.775, "obj2": 0.16062105470997404}, {"determining": "Min( ( RRS * Const ) ,( ( FirstVNF_Mem_Server * Min( ( MRS + PN ) ,Const ) ) - ACS ) )", "choosing": "( ( ( ( RRSe / MUC ) + Max( RCSe,MUM ) ) + MUR ) / Max( ( MUR / RRSe ),Min( MUC ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem ) + Min( ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + Max( ( ( CRS + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,ARS ) ),( Max( FirstVNF_Mem,FirstVNF_CPU ) + Max( RRS,RRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( CS,RMSe ) + CS ) * ( CS + MUR ) ) ,( Max( ( DS - CS ),Max( RRSe,MUR ) ) * RMSe ) ) / Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Min( RRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( CS - Max( Max( ( MUM - DS ),Max( ( RRSe - DS ),( DS * MUC ) ) ),Min( Min( RRSe ,MUR ) ,DS ) ) ) / Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,PN ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_CPU + ( ARS + PN ) ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( ( ( CS - ( DS * RRSe ) ) + MUM ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,PN ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_CPU + ( ARS + PN ) ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( ( ( CS - ( DS * RRSe ) ) + MUM ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "Max( Min( DS ,( CS * MUC ) ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / ( FirstVNF_Mem / AMS ) ) - Min( MRS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( CS / RRSe ) )", "obj1": 0.7208333333333333, "obj2": 0.18751743415482758}, {"determining": "Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server + CRS ) * MRS ) )", "choosing": "Max( Max( MUR,MUR ),( ( Min( MUM ,( ( RCSe * ( DS + Min( CS ,MUC ) ) ) - Min( MLU ,RMSe ) ) ) - Min( MLU ,MUC ) ) * ( MUM / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + Max( ( ( CRS + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,ARS ) ),( Max( FirstVNF_Mem,FirstVNF_CPU ) + ( ( PN - Const ) - ( FirstVNF_Mem + MRS ) ) ) ) )", "choosing": "Min( Min( ( RRSe / MLU ) ,MLU ) ,( Max( ( DS - CS ),Max( RRSe,MUR ) ) * RMSe ) )", "obj1": 0.8541666666666666, "obj2": 0.08669707835352715}, {"determining": "Max( Min( AMS ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ),( ( MRS * ( FirstVNF_Mem_Server + ( BR * AMS ) ) ) * ( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "( ( MLU / ( RRSe + Max( DS,( ( RMSe / ( ( DS - MUR ) - MUR ) ) + Max( RCSe,Max( MLU,( RMSe * MUR ) ) ) ) ) ) ) + Max( MUM,Max( CS,MUC ) ) )", "obj1": 0.7375, "obj2": 0.18061613892113276}, {"determining": "( ( ( ( DDR / FirstVNF_CPU_Server ) * Min( BR ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem ,RRS ),Max( MRS,FirstVNF_Mem ) ) ) * ( Max( ( FirstVNF_CPU_Server / Const ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + ( ( BR / BR ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) / ( RCSe + DS ) ) + ( Min( RCSe ,MLU ) - Max( MUM,MUM ) ) ) * ( ( Min( MLU ,MUR ) / ( MLU - MUM ) ) * ( ( MUR - RMSe ) - ( CS / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + ( ( CRS - FirstVNF_Mem ) + Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Max( CS,RMSe ) + Min( ( DS / MLU ) ,MUC ) ) * ( CS + MUR ) ) ,( Max( ( ( CS - MUC ) / Min( MUM ,RMSe ) ),Max( RRSe,MUR ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ARS ) * ( FirstVNF_Mem / FirstVNF_Mem ) )", "choosing": "( Min( CS ,CS ) + ( ( DS / RCSe ) * DS ) )", "obj1": 0.9541666666666667, "obj2": 0.04328566149880331}, {"determining": "Min( MRS ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + Max( CS,MUC ) ) - ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS * Const ) ,( ( FirstVNF_Mem_Server * MRS ) - ACS ) )", "choosing": "( ( ( ( RRSe / MUC ) + Max( Min( RCSe ,MLU ),MUM ) ) + MUR ) / Max( MLU,Min( MUC ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + Max( ( ( ( AMS - ( ACS + PN ) ) + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,ARS ) ),( Max( FirstVNF_Mem,FirstVNF_CPU ) + Max( RRS,RRS ) ) ) ) - ( FirstVNF_Mem + MRS ) )", "choosing": "Max( Min( DS ,( CS * MUC ) ),Min( ( ( Max( ( DS - CS ),Max( Max( ( MUM + MUC ),MUM ),MUR ) ) * RMSe ) / MLU ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,CRS ) - ( Max( CRS,( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server + BR ) ) ) * ( AMS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS - Max( MUC,Max( CS,MUR ) ) ) * ( RCSe * MUM ) )", "obj1": 0.7541666666666667, "obj2": 0.17465706511417214}, {"determining": "( ( CRS * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem + MRS ) )", "choosing": "Max( Min( DS ,( CS * MUC ) ),Min( ( RRSe / MLU ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( FirstVNF_Mem + Max( BR,CRS ) ) )", "choosing": "Max( MUM,Min( ( RRSe / MLU ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server * MRS ) ) - Min( MRS ,MDR ) )", "choosing": "Max( ( ( MUC * Min( ( MLU - CS ) ,( ( ( RRSe - Min( RRSe ,MUR ) ) / RCSe ) - Min( ( MUR * DS ) ,MLU ) ) ) ) * DS ),Max( CS,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - Min( PN ,Const ) )", "choosing": "Max( ( DS * ( MUM + MUC ) ),( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * MRS ) + ( ( DDR / FirstVNF_Mem ) - Min( MRS ,MDR ) ) ) - ( Max( AMS,Const ) * ( DDR - RRS ) ) ) * ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( PN * FirstVNF_RAM_Server ) ) - ( ( Const - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( ( DS * DS ) / Max( Min( RMSe ,RMSe ),( MLU * ( RMSe / DS ) ) ) )", "obj1": 0.7875, "obj2": 0.14874708434787415}, {"determining": "( ( ( ( DDR * MRS ) + Min( FirstVNF_RAM ,RRS ) ) - ( Max( AMS,Const ) * ( DDR - RRS ) ) ) * ( ( Min( MDR ,( Min( Const ,RRS ) * RRS ) ) - ( PN * FirstVNF_RAM_Server ) ) - ( ( Const - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( Min( ( CS + Max( RCSe,CS ) ) ,DS ) / Max( Min( RMSe ,RMSe ),( MLU * ( Min( DS ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( Max( ( FirstVNF_CPU_Server / Const ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + ( ( BR / BR ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) - FirstVNF_CPU_Server ) - ( ( MDR * AMS ) + MRS ) )", "choosing": "( Min( ( ( ( ( MUM / MUM ) / ( RCSe + DS ) ) + ( Min( RCSe ,MLU ) - Max( MUM,MUM ) ) ) * ( ( Min( MLU ,MUR ) / ( MLU - MUM ) ) * ( ( MUR - RMSe ) - ( CS / CS ) ) ) ) ,Max( MUC,MUR ) ) + ( ( RMSe + RCSe ) * ( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * MRS ) - ACS ) - CRS ) - FirstVNF_CPU_Server ) - ( ( MDR * AMS ) + MRS ) )", "choosing": "( Min( ( MLU - RRSe ) ,Max( Max( MLU,Min( MUC ,MUC ) ),MUR ) ) + ( ( RMSe + RCSe ) * ( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * MRS ) + Min( FirstVNF_RAM ,RRS ) ) - ( Max( AMS,Const ) * ( DDR - RRS ) ) ) * ( ( Min( ( CRS * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) - ( PN * FirstVNF_RAM_Server ) ) - ( ( Const - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( Min( MUR ,RMSe ) / Max( Min( RMSe ,Max( Min( DS ,( CS * MUC ) ),Min( ( RRSe / MLU ) ,MLU ) ) ),( MLU * ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,CRS ) - ( MDR + BR ) ) ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + Max( CS,MUC ) ) - ( Min( RMSe ,MUC ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS * FirstVNF_RAM ),( DDR - ( FirstVNF_RAM_Server - BR ) ) ) ,( ( FirstVNF_Mem * ( FirstVNF_RAM - Const ) ) - ( Min( ACS ,BR ) + ( ACS - MRS ) ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( Max( Min( ( MUC / RMSe ) ,( RCSe * MUM ) ),( Max( DS,MUM ) * ( MUM + DS ) ) ) / ( ( ( MLU / MUM ) / ( DS - DS ) ) + Min( ( RCSe + DS ) ,( MUM * MUR ) ) ) ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS * Const ) ,( ACS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe / MUC ) + Max( RCSe,MUM ) ) + MUR ) / ( ( ( RMSe / RMSe ) * Max( DS,MUM ) ) / ( ( DS * MUM ) / ( RRSe / ( MUC + CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( Min( ( RRS * Const ) ,( ( FirstVNF_Mem_Server * MRS ) - ACS ) ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + Max( CS,MUC ) ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_Mem_Server ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + Max( Min( RCSe ,MLU ),MUM ) ) - ( Min( RMSe ,MUC ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,( ( CRS * FirstVNF_RAM ) + ( MDR / Max( PN,( ( ARS + AMS ) * ( FirstVNF_Mem / ACS ) ) ) ) ) ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_Mem * ( FirstVNF_RAM - Const ) ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( ( MLU * MUR ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( ( Max( ( MUM * DS ),Max( RRSe,CS ) ) + ( ( RRSe + MLU ) * ( MUC * MUC ) ) ) / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - CRS ) - FirstVNF_CPU_Server ) - ( ( MDR * AMS ) + Min( ( Max( FirstVNF_RAM_Server,MRS ) + ( PN + FirstVNF_Mem ) ) ,( ( DDR / CRS ) + Max( BR,ACS ) ) ) ) )", "choosing": "( Min( ( MLU - RRSe ) ,Max( MUC,MUR ) ) + ( ( RMSe + RCSe ) * ( ( ( ( MUC + MUR ) / ( CS / MUM ) ) + MLU ) / ( MUC + ( DS / ( MUR - RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,PN ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( ( ( DS - ( DS * RRSe ) ) + MUM ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS * Const ) ,( ( FirstVNF_Mem_Server * Min( ( Min( FirstVNF_RAM ,( ( CRS * FirstVNF_RAM ) + ( MDR / FirstVNF_Mem ) ) ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_Mem * ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) - Const ) ) - ( ( RRS / MRS ) - MRS ) ) ) ) - ACS ) )", "choosing": "( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) / ( MUC * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,( ( CRS * FirstVNF_RAM ) + ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem_Server ,BR ) ) / FirstVNF_Mem ) ) ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_Mem * ( FirstVNF_RAM - Const ) ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( MLU / ( ( DS - ( DS + MUM ) ) + Max( Max( MUR,MUC ),( MUC * MUM ) ) ) ) ,( ( ( CS - ( DS * RMSe ) ) + MUM ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( ( Max( ( MUM * DS ),Max( RRSe,CS ) ) + ( ( RRSe + MLU ) * ( MUC * MUC ) ) ) / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + Max( ( ( CRS + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,ARS ) ),( Max( FirstVNF_Mem,FirstVNF_CPU ) + Max( RRS,RRS ) ) ) ) - ( ( Min( ( ARS / RRS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( Min( FirstVNF_CPU ,FirstVNF_Mem ) / ( AMS / MRS ) ) ) + MRS ) )", "choosing": "Max( Min( DS ,( MUM * MUC ) ),Min( ( ( Max( ( DS - CS ),Max( RRSe,MUR ) ) * RMSe ) / MLU ) ,MLU ) )", "obj1": 0.8416666666666667, "obj2": 0.11485190135526405}, {"determining": "Min( Max( FirstVNF_CPU,ACS ) ,( RRS - ( Max( ( ( MRS * ( ( DDR / FirstVNF_Mem_Server ) + ( BR * AMS ) ) ) * ( FirstVNF_Mem_Server / AMS ) ),PN ) * ACS ) ) )", "choosing": "( ( ( RRSe / DS ) + MUC ) / ( ( RRSe + Max( DS,( ( RMSe / ( ( RMSe - MUR ) - MUR ) ) + Max( RCSe,Max( MLU,( RMSe * MUR ) ) ) ) ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ACS ) - ( ( MDR * Min( DDR ,FirstVNF_Mem ) ) + MRS ) )", "choosing": "( ( RRSe + Min( ( RMSe / Max( ( MUM * ( Max( DS,CS ) + Max( RMSe,RMSe ) ) ),( MUM - MUR ) ) ) ,Min( RMSe ,RCSe ) ) ) + ( Min( CS ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MDR,Const ) ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( Max( CS,MUC ) + Max( CS,MUC ) ) - ( Min( RMSe ,MUC ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS * FirstVNF_RAM ),( DDR - ( FirstVNF_RAM_Server - BR ) ) ) ,( ( FirstVNF_Mem * ( FirstVNF_RAM - Const ) ) - ( ( ( BR + RRS ) / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( ( MLU + ( Min( DS ,MUC ) + RCSe ) ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 0.9916666666666667, "obj2": 0.008619401546552623}, {"determining": "( ( ( MDR * FirstVNF_RAM ) / ( FirstVNF_Mem / AMS ) ) - Min( MRS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( ( ( MLU / MUR ) / ( ( RCSe * MLU ) + ( MUM / DS ) ) ) / RRSe ) )", "obj1": 0.71875, "obj2": 0.19055133263633095}, {"determining": "( Min( ( BR / FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,FirstVNF_RAM ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) ) - ( FirstVNF_Mem + Const ) )", "choosing": "( Min( ( Min( ( CS + RRSe ) ,( MLU + RMSe ) ) + ( ( CS / MUM ) / ( MUC + RMSe ) ) ) ,( RMSe * DS ) ) - ( Max( MUM,MUR ) - ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR / FirstVNF_CPU ) ,FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem_Server * CRS ) + Const ) )", "choosing": "( Min( ( MUM - MUM ) ,( ( MUM + ( DS + CS ) ) * CS ) ) - ( Max( Max( Max( RCSe,RMSe ),Max( RCSe,( ( DS / MLU ) * ( MUC / DS ) ) ) ),MUR ) - ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_Mem + Max( BR,Min( ( MRS / RRS ) ,( Const + RRS ) ) ) ) )", "choosing": "Max( MUM,Min( ( Min( Min( DS ,RRSe ) ,MUC ) - Min( MUM ,( RMSe * ( MUR / MUR ) ) ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN + Const ) / ( FirstVNF_RAM_Server / MRS ) ) + ( Max( FirstVNF_RAM_Server,AMS ) * ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + ( ( Max( ( MUC - MUR ),Min( MLU ,MLU ) ) - ( ( RRSe / MLU ) + Min( RCSe ,RCSe ) ) ) + ( RRSe - RRSe ) ) ) - ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) * ( ( ACS - ( RRS - AMS ) ) - AMS ) )", "choosing": "Min( ( ( DS * RRSe ) * ( Max( Min( ( MUC / RMSe ) ,( RCSe * MUM ) ),( Max( DS,MUM ) * ( MUM + DS ) ) ) / ( ( ( MLU / MUM ) / ( DS - DS ) ) + Min( Max( RCSe,( ( DS / MLU ) * ( MUC / DS ) ) ) ,( MUM * MUR ) ) ) ) ) ,( ( MUR / MUR ) - ( MLU - RRSe ) ) )", "obj1": 0.8041666666666667, "obj2": 0.145647130077521}, {"determining": "( ( FirstVNF_Mem_Server / Const ) - ( ACS / BR ) )", "choosing": "( ( MLU / RMSe ) / ( ( ( MLU + ( MUR / ( RRSe - RCSe ) ) ) * MUM ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ARS / ( DDR - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - RMSe ) / Min( CS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN / Const ) ,Min( ACS ,DDR ) ) * ( Max( Min( RRS ,FirstVNF_CPU ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) + ( Const * DDR ) ) )", "choosing": "( ( ( MUM / DS ) - ( ( ( RMSe + CS ) + ( MUC + CS ) ) + ( Max( RRSe,RMSe ) * Max( RRSe,MLU ) ) ) ) - ( MUR * ( MLU + RRSe ) ) )", "obj1": 0.7166666666666667, "obj2": 0.22672716665691892}, {"determining": "( ( ( ( DDR / FirstVNF_CPU_Server ) * Min( BR ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem ,RRS ),Max( MRS,FirstVNF_Mem ) ) ) * ( ( ( MDR * AMS ) + MRS ) + ( ( BR / BR ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Min( ( MLU - RRSe ) ,Max( MUC,MUR ) ) / MUM ) / ( RCSe + DS ) ) + ( Min( RCSe ,MLU ) - Max( MUM,MUM ) ) ) * ( ( Min( MLU ,MUR ) / ( MLU - MUM ) ) * ( ( MUR - RMSe ) - ( CS / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ARS ) * FirstVNF_Mem )", "choosing": "( Min( CS ,CS ) + ( Max( Min( DS ,( CS * MUC ) ),Min( ( RRSe / MLU ) ,MLU ) ) * DS ) )", "obj1": 0.9458333333333333, "obj2": 0.05030189463447313}, {"determining": "( ( ( FirstVNF_RAM - AMS ) - MRS ) * ( ACS + Max( ( DDR - FirstVNF_Mem ),( ( ( MDR * RRS ) + ( MRS - PN ) ) - ( ( ACS * DDR ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( Min( RCSe ,DS ) * ( RCSe - MUC ) ) + Max( RRSe,DS ) ) * ( Min( ( MLU - MUM ) ,( RRSe - RCSe ) ) + Max( ( DS * MUM ),Max( MUM,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + FirstVNF_CPU_Server ) ,( DDR - ( BR + AMS ) ) )", "choosing": "Max( Max( MUR,( ( ( MUM * RMSe ) * ( MUC * CS ) ) / ( Min( RMSe ,MUM ) / ( DS / RCSe ) ) ) ),( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_CPU_Server ) * Min( BR ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem ,RRS ),Max( MRS,FirstVNF_Mem ) ) ) * ( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / MUM ) / ( RCSe + DS ) ) + ( Min( ( DS * DS ) ,MLU ) - Max( MUM,MUM ) ) ) * ( ( Min( MLU ,MUR ) / ( MLU - MUM ) ) * ( ( MUR - RMSe ) - Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR / FirstVNF_CPU ) ,( FirstVNF_RAM + MDR ) ) - Min( ( ( FirstVNF_Mem / CRS ) * FirstVNF_CPU ) ,( DDR + ACS ) ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( DS + DS ) / MLU ) ) - ( Max( MUM,MUR ) - ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( FirstVNF_Mem + Min( ( FirstVNF_Mem + Const ) ,( PN / ( ( DDR + Const ) - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( Min( DS ,( Min( ( MUR / RRSe ) ,( RCSe / RRSe ) ) * MUC ) ),Min( ( RRSe / MLU ) ,MLU ) )", "obj1": 0.8791666666666667, "obj2": 0.07938188577871505}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_RAM ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( Min( ( ( DS * MUC ) + RRSe ) ,( MLU + RMSe ) ) + ( CS * MUR ) )", "obj1": 0.8479166666666667, "obj2": 0.10689625248041461}, {"determining": "( ( AMS * MRS ) + Min( RRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,RCSe ) / ( Min( ( ( Min( RRSe ,RMSe ) * MUM ) * ( Min( MUC ,RCSe ) - RMSe ) ) ,MUR ) / MLU ) ) / Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,( Max( MDR,PN ) + ( ACS + ACS ) ) ) / ( ( ( RRS - MDR ) - Max( MDR,Const ) ) - AMS ) )", "choosing": "Min( ( RCSe - RMSe ) ,Max( RRSe,( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( CRS + FirstVNF_CPU ) ) - Max( MDR,Const ) )", "choosing": "( ( ( Max( CS,RMSe ) + CS ) * ( CS + MUR ) ) / ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( BR / FirstVNF_RAM ) * BR ),CRS ) - MRS ) * ( ACS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MUM - RCSe ) - MUR ) + RRSe ) / RRSe ) * ( Min( ( MLU - MUM ) ,( RRSe - RCSe ) ) + Max( ( DS * MUM ),Max( MUM,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( AMS / FirstVNF_CPU ),( BR * ARS ) ) - Max( ( BR + FirstVNF_RAM_Server ),( MRS + FirstVNF_Mem_Server ) ) ) ,Min( ( ( FirstVNF_CPU_Server * DDR ) - Max( FirstVNF_Mem_Server,ACS ) ) ,Max( ( RRS * Const ),( BR * AMS ) ) ) )", "choosing": "( ( ( ( RMSe / RMSe ) * Max( DS,MUM ) ) / ( Max( MLU,Min( MUC ,MUC ) ) / ( RRSe / MLU ) ) ) * ( Min( ( MUM + MUC ) ,Max( MLU,MLU ) ) + Min( ( MUM + MUM ) ,Min( DS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_CPU_Server ) * Min( BR ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem ,RRS ),Max( MRS,FirstVNF_Mem ) ) ) * ( Max( ( FirstVNF_CPU_Server / Const ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + ( ( BR / BR ) / ( FirstVNF_Mem_Server / ( RRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) / ( RCSe + DS ) ) + ( Min( RCSe ,MLU ) - Max( MUM,MUM ) ) ) * ( ( Min( MLU ,MUR ) / ( MLU - MUM ) ) * ( ( MUR - RMSe ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( ( RRS * Const ) ,( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - ( Max( ( FirstVNF_CPU_Server / Const ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + ( ( BR / BR ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) - FirstVNF_CPU_Server ) ) - ACS ) )", "choosing": "( ( ( RCSe / RCSe ) + Min( ( ( Min( MLU ,MUR ) / ( MLU - MUM ) ) * ( ( MUR - RMSe ) - ( CS / CS ) ) ) ,MUR ) ) / ( MUC * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem - RRS ),FirstVNF_RAM ) + FirstVNF_CPU_Server ) ,( DDR - ACS ) )", "choosing": "Max( Max( MUR,( ( MLU * RRSe ) * Max( RRSe,MUC ) ) ),( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN / Const ) ,Min( ACS ,DDR ) ) * ( Max( Min( RRS ,FirstVNF_CPU ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) + ( Const * DDR ) ) )", "choosing": "( ( ( MUM / DS ) - ( ( ( RMSe + CS ) + ( MUC + CS ) ) + ( Max( RRSe,RMSe ) * Max( RRSe,MLU ) ) ) ) - ( MUR * ( MLU + RRSe ) ) )", "obj1": 0.7166666666666667, "obj2": 0.22672716665691892}, {"determining": "( ( PN - Const ) - ( FirstVNF_Mem + Min( ( FirstVNF_Mem + Const ) ,( PN / ( ( DDR + Const ) - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( Min( DS ,( Min( ( MUR / RRSe ) ,( RCSe / RRSe ) ) * MUC ) ),Min( ( RRSe / MLU ) ,MLU ) )", "obj1": 0.8791666666666667, "obj2": 0.07938188577871505}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( RRS,MDR ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( Min( ( CS + RRSe ) ,( MLU + RMSe ) ) + ( CS * MUR ) )", "obj1": 0.9333333333333333, "obj2": 0.05494618024010775}, {"determining": "Min( Max( ( ARS * FirstVNF_RAM ),( DDR - ( FirstVNF_RAM_Server - BR ) ) ) ,( ( FirstVNF_Mem * ( FirstVNF_RAM - Const ) ) - ( ( ( BR + RRS ) / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( ( MLU + ( Min( DS ,MUC ) + RCSe ) ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 0.9916666666666667, "obj2": 0.008619401546552623}, {"determining": "( Min( ( BR / FirstVNF_CPU ) ,FirstVNF_Mem_Server ) - ( Min( ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + Max( ( ( CRS + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,ARS ) ),( Max( FirstVNF_Mem,FirstVNF_CPU ) + Max( RRS,RRS ) ) ) ) ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "( Min( ( MUM - MUM ) ,( ( MUM + ( DS + CS ) ) * CS ) ) - ( Max( Max( Max( RCSe,RMSe ),Max( RCSe,( CS * ( MUC / DS ) ) ) ),MUR ) - ( CS * RRSe ) ) )", "obj1": 0.9520833333333333, "obj2": 0.03679277927861702}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + Max( ( ( CRS + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,ARS ) ),( Max( FirstVNF_Mem,FirstVNF_CPU ) + ( ( PN - Const ) - ( FirstVNF_Mem + MRS ) ) ) ) )", "choosing": "Min( Min( ( RRSe / MLU ) ,MLU ) ,( Max( ( DS - CS ),Max( RRSe,MUR ) ) * RMSe ) )", "obj1": 0.8541666666666666, "obj2": 0.08669707835352715}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + Max( ( ( CRS + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,ARS ) ),( Max( FirstVNF_Mem,FirstVNF_CPU ) + Max( RRS,RRS ) ) ) )", "choosing": "Min( ( ( Max( CS,RMSe ) + CS ) * ( CS + MUR ) ) ,( Max( ( DS - CS ),Max( RRSe,MUR ) ) * RMSe ) )", "obj1": 0.8166666666666667, "obj2": 0.12413711798826835}, {"determining": "( ( ( MDR * FirstVNF_RAM ) / ( FirstVNF_Mem / AMS ) ) - Min( MRS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( ( ( MLU / MUR ) / ( ( RCSe * MLU ) + ( MUM / DS ) ) ) / RRSe ) )", "obj1": 0.71875, "obj2": 0.19055133263633095}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + Max( ( ( CRS + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,ARS ) ),( Max( FirstVNF_Mem,FirstVNF_CPU ) + Max( RRS,RRS ) ) ) ) - ( ( Min( ( ARS / RRS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( Min( FirstVNF_CPU ,FirstVNF_Mem ) / ( AMS / MRS ) ) ) + MRS ) )", "choosing": "Max( Min( DS ,( MUM * MUC ) ),Min( ( ( Max( ( DS - CS ),Max( RRSe,MUR ) ) * RMSe ) / MLU ) ,MLU ) )", "obj1": 0.8416666666666667, "obj2": 0.11485190135526405}, {"determining": "( ( ( ( DDR * MRS ) + ( ( DDR / FirstVNF_Mem ) - Min( MRS ,MDR ) ) ) - ( Max( AMS,Const ) * ( DDR - RRS ) ) ) * ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( PN * FirstVNF_RAM_Server ) ) - ( ( Const - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( ( DS * DS ) / Max( Min( RMSe ,RMSe ),( MLU * ( RMSe / DS ) ) ) )", "obj1": 0.7875, "obj2": 0.14874708434787415}, {"determining": "Max( Min( AMS ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ),( ( MRS * ( FirstVNF_Mem_Server + ( BR * AMS ) ) ) * ( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "( ( MLU / ( RRSe + Max( DS,( ( RMSe / ( ( DS - MUR ) - MUR ) ) + Max( RCSe,Max( MLU,( RMSe * MUR ) ) ) ) ) ) ) + Max( MUM,Max( CS,MUC ) ) )", "obj1": 0.7375, "obj2": 0.18061613892113276}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_RAM ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( Min( ( ( DS * MUC ) + RRSe ) ,( MLU + RMSe ) ) + ( CS * MUR ) )", "obj1": 0.8479166666666667, "obj2": 0.10689625248041461}, {"determining": "( ( ( FirstVNF_CPU_Server - CRS ) - ( PN / ( ( DDR + Const ) - FirstVNF_RAM_Server ) ) ) - ( ( MDR * AMS ) + Min( ( Max( FirstVNF_RAM_Server,MRS ) + ( PN + FirstVNF_Mem ) ) ,( ( DDR / CRS ) + Max( BR,ACS ) ) ) ) )", "choosing": "( Min( ( MLU - RRSe ) ,Max( MUC,MUR ) ) + ( ( RMSe + RCSe ) * ( ( ( ( MUC + MUR ) / ( CS / MUM ) ) + MLU ) / ( ( Min( ( MUR / RRSe ) ,( RCSe / RRSe ) ) * MUC ) + ( DS / ( MUR - RCSe ) ) ) ) ) )", "obj1": 0.9458333333333333, "obj2": 0.038523413383163035}, {"determining": "( ( DDR / FirstVNF_Mem ) - ( ( FirstVNF_Mem_Server * CRS ) + Const ) )", "choosing": "Max( ( DS * DS ),( Min( ( MUM - MUM ) ,( ( MUM + ( DS + CS ) ) * CS ) ) - ( Max( Max( Max( RCSe,RMSe ),Max( RCSe,( ( DS / MLU ) * ( MUC / DS ) ) ) ),MUR ) - ( CS * RRSe ) ) ) )", "obj1": 0.7979166666666667, "obj2": 0.13751222546735323}, {"determining": "( ( ( ARS + CRS ) * ( FirstVNF_RAM_Server + Max( Max( ACS,FirstVNF_CPU_Server ),MDR ) ) ) - ( AMS + MRS ) )", "choosing": "( Min( Min( RMSe ,DS ) ,CS ) / Min( MLU ,MUR ) )", "obj1": 0.775, "obj2": 0.16062105470997404}, {"determining": "( ( ( ( DDR / FirstVNF_CPU_Server ) * Min( BR ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem ,RRS ),Max( MRS,FirstVNF_Mem ) ) ) * ( Min( ( ( FirstVNF_CPU_Server * DDR ) - Max( FirstVNF_Mem_Server,ACS ) ) ,Max( ( FirstVNF_Mem + RRS ),( BR * AMS ) ) ) + ( ( BR / BR ) / ( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) / ( RCSe + DS ) ) + ( ( ( ( RMSe / RMSe ) * Max( DS,MUM ) ) / ( ( DS * MUM ) / ( RRSe / MLU ) ) ) - Max( MUM,MUM ) ) ) * ( ( Min( MLU ,MUR ) / ( MLU - MUM ) ) * ( ( MUR - RMSe ) - Min( MUC ,DS ) ) ) )", "obj1": 0.80625, "obj2": 0.13111562179549177}, {"determining": "( ( DDR / ( FirstVNF_Mem / AMS ) ) - Min( MRS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( CS / RRSe ) )", "obj1": 0.7208333333333333, "obj2": 0.18751743415482758}, {"determining": "( Max( BR,CRS ) - ( Max( CRS,( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server + BR ) ) ) * ( AMS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS - Max( MUC,Max( CS,MUR ) ) ) * ( RCSe * MUM ) )", "obj1": 0.7541666666666667, "obj2": 0.17465706511417214}, {"determining": "Max( ( ( ( FirstVNF_Mem_Server / Const ) * ( MDR * FirstVNF_RAM ) ) - ( ( ACS * MRS ) - ( CRS + RRS ) ) ),Max( Max( ( ARS + MRS ),( ACS * MRS ) ),( ( MRS - DDR ) + Max( ARS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / MUR ) / ( ( RCSe * MLU ) + ( MUM / DS ) ) )", "obj1": 0.7625, "obj2": 0.16836925466931862}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) * ( DDR - AMS ) ) * ( Max( AMS,FirstVNF_Mem_Server ) + ( MRS * RRS ) ) ) / Min( ( Max( FirstVNF_RAM_Server,MRS ) + ( PN + FirstVNF_Mem ) ) ,Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MUC + MUR ) / ( CS / MUM ) ) + MLU ) / ( ( ( ( MUM / MUM ) / ( RCSe + DS ) ) + ( Min( RCSe ,MLU ) - Max( MUM,MUM ) ) ) * ( ( Min( MLU ,MUR ) / ( MLU - MUM ) ) * ( ( MUR - RMSe ) - RMSe ) ) ) )", "obj1": 0.7729166666666667, "obj2": 0.16740772270767254}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) * ( DDR - AMS ) ) * ( Max( AMS,FirstVNF_Mem_Server ) + ( MRS * RRS ) ) ) / Min( ( Max( FirstVNF_RAM_Server,MRS ) + ( PN + FirstVNF_Mem ) ) ,( ( DDR / CRS ) + Max( BR,ACS ) ) ) )", "choosing": "( ( ( ( MUC + MUR ) / ( CS / MUM ) ) + MLU ) / ( MUC + ( DS / ( MUR - RCSe ) ) ) )", "obj1": 0.75625, "obj2": 0.17223956928637732}, {"determining": "( ( PN / ARS ) - Max( ( FirstVNF_CPU_Server * MDR ),Const ) )", "choosing": "( Max( ( MUR * CS ),MUM ) / ( RCSe - ( RRSe - ( RRSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem ) + Min( RRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( CS - MUC ) / Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - BR ) / ( DDR - Min( MRS ,MRS ) ) )", "choosing": "( ( RCSe + RCSe ) / ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * RRS ) + AMS ) - FirstVNF_CPU_Server ) - ( ( MDR * AMS ) + MRS ) )", "choosing": "( Min( ( MLU - RRSe ) ,Max( MUC,MUR ) ) + Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,ACS ) ,( RRS - ( Max( ( ( MRS * ( ( DDR / FirstVNF_Mem_Server ) + ( BR * AMS ) ) ) * ( FirstVNF_Mem_Server / AMS ) ),PN ) * ACS ) ) )", "choosing": "( ( ( RRSe / DS ) + MUC ) / ( ( RRSe + Max( DS,( ( RMSe / ( ( RMSe - MUR ) - MUR ) ) + Max( RCSe,Max( MLU,( RMSe * MUR ) ) ) ) ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) - ( MDR + BR ) ) ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + Max( CS,MUC ) ) - ( Min( RMSe ,MUC ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR / FirstVNF_CPU ) ,( Min( ( RRS / ( FirstVNF_Mem / Const ) ) ,PN ) + MDR ) ) - ( ( FirstVNF_Mem_Server * CRS ) + Const ) )", "choosing": "( Min( ( MUM - MUM ) ,( ( MUM + ( DS + CS ) ) * CS ) ) - ( Max( MUM,MUR ) - ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( FirstVNF_Mem + MRS ) )", "choosing": "Max( Min( DS ,( CS * MUC ) ),Min( ( RRSe / MLU ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,PN ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_CPU + ( ARS + PN ) ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( ( ( CS - ( DS * RRSe ) ) + MUM ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_Mem_Server ) - AMS ) + ( ( RRS - AMS ) - ( MRS / MRS ) ) )", "choosing": "Max( Max( RCSe,RMSe ),Max( RCSe,( ( DS / MLU ) * ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( AMS / FirstVNF_CPU ),( BR * ARS ) ) - Max( ( BR + FirstVNF_RAM_Server ),( MRS + FirstVNF_Mem_Server ) ) ) ,Min( ( ( FirstVNF_CPU_Server * DDR ) - Max( FirstVNF_Mem_Server,ACS ) ) ,Max( ( FirstVNF_Mem + RRS ),( BR * AMS ) ) ) )", "choosing": "( ( ( ( RMSe / RMSe ) * Max( DS,MUM ) ) / ( ( DS * MUM ) / ( RRSe / MLU ) ) ) * ( Min( ( MUM + MUC ) ,Max( MLU,MLU ) ) + Min( ( MUM + MUM ) ,Min( DS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - AMS ) - MRS ) * ( ACS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RCSe ,DS ) * ( RCSe - MUC ) ) + ( Min( RCSe ,RMSe ) * Min( RRSe ,CS ) ) ) * ( Min( ( MLU - MUM ) ,( RRSe - RCSe ) ) + Max( ( DS * MUM ),Max( MUM,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Const ) - Max( ARS,MDR ) )", "choosing": "Max( Min( ( Max( MUM,RMSe ) * ( MUC + MUM ) ) ,( Max( RMSe,CS ) - ( RRSe / RMSe ) ) ),( Max( ( DS * RCSe ),Max( MUR,RRSe ) ) + ( ( RRSe * CS ) - Max( RRSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_CPU_Server ) * Min( BR ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem ,RRS ),Min( RRS ,FirstVNF_CPU ) ) ) * ( Max( ( FirstVNF_CPU_Server / Const ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + ( ( BR / BR ) / ( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) / ( RCSe + DS ) ) + ( Min( RCSe ,MLU ) - Max( MUM,MUM ) ) ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * MRS ) + Min( FirstVNF_RAM ,RRS ) ) - ( Max( AMS,Const ) * ( DDR - RRS ) ) ) * ( ( Min( MDR ,( Min( Const ,RRS ) * RRS ) ) - ( PN * FirstVNF_RAM_Server ) ) - ( ( Const - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( Min( ( CS + Max( RCSe,CS ) ) ,DS ) / Max( Min( RMSe ,RMSe ),( MLU * ( Min( DS ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS * Const ) ,( ( FirstVNF_Mem_Server * Min( ( MRS + PN ) ,Const ) ) - ACS ) )", "choosing": "( ( ( ( RRSe / MUC ) + Max( RCSe,MUM ) ) + MUR ) / Max( ( MUR / RRSe ),Min( MUC ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem ) + Min( ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + Max( ( ( CRS + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,ARS ) ),( Max( FirstVNF_Mem,FirstVNF_CPU ) + Max( RRS,RRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( CS,RMSe ) + CS ) * ( CS + MUR ) ) ,( Max( ( DS - CS ),Max( RRSe,MUR ) ) * RMSe ) ) / Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Min( RRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( CS - Max( Max( ( MUM - DS ),Max( ( RRSe - DS ),( DS * MUC ) ) ),Min( Min( RRSe ,MUR ) ,DS ) ) ) / Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,PN ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_CPU + ( ARS + PN ) ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( ( ( CS - ( DS * RRSe ) ) + MUM ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,PN ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_CPU + ( ARS + PN ) ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( ( ( CS - ( DS * RRSe ) ) + MUM ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "Max( Min( DS ,( CS * MUC ) ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server + CRS ) * MRS ) )", "choosing": "Max( Max( MUR,MUR ),( ( Min( MUM ,( ( RCSe * ( DS + Min( CS ,MUC ) ) ) - Min( MLU ,RMSe ) ) ) - Min( MLU ,MUC ) ) * ( MUM / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_CPU_Server ) * Min( BR ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem ,RRS ),Max( MRS,FirstVNF_Mem ) ) ) * ( Max( ( FirstVNF_CPU_Server / Const ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + ( ( BR / BR ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) / ( RCSe + DS ) ) + ( Min( RCSe ,MLU ) - Max( MUM,MUM ) ) ) * ( ( Min( MLU ,MUR ) / ( MLU - MUM ) ) * ( ( MUR - RMSe ) - ( CS / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + ( ( CRS - FirstVNF_Mem ) + Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Max( CS,RMSe ) + Min( ( DS / MLU ) ,MUC ) ) * ( CS + MUR ) ) ,( Max( ( ( CS - MUC ) / Min( MUM ,RMSe ) ),Max( RRSe,MUR ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + Max( CS,MUC ) ) - ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS * Const ) ,( ( FirstVNF_Mem_Server * MRS ) - ACS ) )", "choosing": "( ( ( ( RRSe / MUC ) + Max( Min( RCSe ,MLU ),MUM ) ) + MUR ) / Max( MLU,Min( MUC ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + Max( ( ( ( AMS - ( ACS + PN ) ) + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,ARS ) ),( Max( FirstVNF_Mem,FirstVNF_CPU ) + Max( RRS,RRS ) ) ) ) - ( FirstVNF_Mem + MRS ) )", "choosing": "Max( Min( DS ,( CS * MUC ) ),Min( ( ( Max( ( DS - CS ),Max( Max( ( MUM + MUC ),MUM ),MUR ) ) * RMSe ) / MLU ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem + MRS ) )", "choosing": "Max( Min( DS ,( CS * MUC ) ),Min( ( RRSe / MLU ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( FirstVNF_Mem + Max( BR,CRS ) ) )", "choosing": "Max( MUM,Min( ( RRSe / MLU ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server * MRS ) ) - Min( MRS ,MDR ) )", "choosing": "Max( ( ( MUC * Min( ( MLU - CS ) ,( ( ( RRSe - Min( RRSe ,MUR ) ) / RCSe ) - Min( ( MUR * DS ) ,MLU ) ) ) ) * DS ),Max( CS,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - Min( PN ,Const ) )", "choosing": "Max( ( DS * ( MUM + MUC ) ),( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * MRS ) + Min( FirstVNF_RAM ,RRS ) ) - ( Max( AMS,Const ) * ( DDR - RRS ) ) ) * ( ( Min( MDR ,( Min( Const ,RRS ) * RRS ) ) - ( PN * FirstVNF_RAM_Server ) ) - ( ( Const - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( Min( ( CS + Max( RCSe,CS ) ) ,DS ) / Max( Min( RMSe ,RMSe ),( MLU * ( Min( DS ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( Max( ( FirstVNF_CPU_Server / Const ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + ( ( BR / BR ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) - FirstVNF_CPU_Server ) - ( ( MDR * AMS ) + MRS ) )", "choosing": "( Min( ( ( ( ( MUM / MUM ) / ( RCSe + DS ) ) + ( Min( RCSe ,MLU ) - Max( MUM,MUM ) ) ) * ( ( Min( MLU ,MUR ) / ( MLU - MUM ) ) * ( ( MUR - RMSe ) - ( CS / CS ) ) ) ) ,Max( MUC,MUR ) ) + ( ( RMSe + RCSe ) * ( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * MRS ) - ACS ) - CRS ) - FirstVNF_CPU_Server ) - ( ( MDR * AMS ) + MRS ) )", "choosing": "( Min( ( MLU - RRSe ) ,Max( Max( MLU,Min( MUC ,MUC ) ),MUR ) ) + ( ( RMSe + RCSe ) * ( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * MRS ) + Min( FirstVNF_RAM ,RRS ) ) - ( Max( AMS,Const ) * ( DDR - RRS ) ) ) * ( ( Min( ( CRS * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) - ( PN * FirstVNF_RAM_Server ) ) - ( ( Const - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( Min( MUR ,RMSe ) / Max( Min( RMSe ,Max( Min( DS ,( CS * MUC ) ),Min( ( RRSe / MLU ) ,MLU ) ) ),( MLU * ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,CRS ) - ( MDR + BR ) ) ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + Max( CS,MUC ) ) - ( Min( RMSe ,MUC ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS * FirstVNF_RAM ),( DDR - ( FirstVNF_RAM_Server - BR ) ) ) ,( ( FirstVNF_Mem * ( FirstVNF_RAM - Const ) ) - ( Min( ACS ,BR ) + ( ACS - MRS ) ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( Max( Min( ( MUC / RMSe ) ,( RCSe * MUM ) ),( Max( DS,MUM ) * ( MUM + DS ) ) ) / ( ( ( MLU / MUM ) / ( DS - DS ) ) + Min( ( RCSe + DS ) ,( MUM * MUR ) ) ) ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS * Const ) ,( ACS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe / MUC ) + Max( RCSe,MUM ) ) + MUR ) / ( ( ( RMSe / RMSe ) * Max( DS,MUM ) ) / ( ( DS * MUM ) / ( RRSe / ( MUC + CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( Min( ( RRS * Const ) ,( ( FirstVNF_Mem_Server * MRS ) - ACS ) ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + Max( CS,MUC ) ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_Mem_Server ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + Max( Min( RCSe ,MLU ),MUM ) ) - ( Min( RMSe ,MUC ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,( ( CRS * FirstVNF_RAM ) + ( MDR / Max( PN,( ( ARS + AMS ) * ( FirstVNF_Mem / ACS ) ) ) ) ) ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_Mem * ( FirstVNF_RAM - Const ) ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( ( MLU * MUR ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( ( Max( ( MUM * DS ),Max( RRSe,CS ) ) + ( ( RRSe + MLU ) * ( MUC * MUC ) ) ) / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - CRS ) - FirstVNF_CPU_Server ) - ( ( MDR * AMS ) + Min( ( Max( FirstVNF_RAM_Server,MRS ) + ( PN + FirstVNF_Mem ) ) ,( ( DDR / CRS ) + Max( BR,ACS ) ) ) ) )", "choosing": "( Min( ( MLU - RRSe ) ,Max( MUC,MUR ) ) + ( ( RMSe + RCSe ) * ( ( ( ( MUC + MUR ) / ( CS / MUM ) ) + MLU ) / ( MUC + ( DS / ( MUR - RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,PN ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( ( ( DS - ( DS * RRSe ) ) + MUM ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS * Const ) ,( ( FirstVNF_Mem_Server * Min( ( Min( FirstVNF_RAM ,( ( CRS * FirstVNF_RAM ) + ( MDR / FirstVNF_Mem ) ) ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_Mem * ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) - Const ) ) - ( ( RRS / MRS ) - MRS ) ) ) ) - ACS ) )", "choosing": "( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) / ( MUC * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,( ( CRS * FirstVNF_RAM ) + ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem_Server ,BR ) ) / FirstVNF_Mem ) ) ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_Mem * ( FirstVNF_RAM - Const ) ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( MLU / ( ( DS - ( DS + MUM ) ) + Max( Max( MUR,MUC ),( MUC * MUM ) ) ) ) ,( ( ( CS - ( DS * RMSe ) ) + MUM ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( ( Max( ( MUM * DS ),Max( RRSe,CS ) ) + ( ( RRSe + MLU ) * ( MUC * MUC ) ) ) / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,ACS ) ,( RRS - ( Max( ( ( MRS * ( ( DDR / FirstVNF_Mem_Server ) + ( BR * AMS ) ) ) * ( FirstVNF_Mem_Server / AMS ) ),PN ) * ACS ) ) )", "choosing": "( ( ( RRSe / DS ) + MUC ) / ( ( RRSe + Max( DS,( ( RMSe / ( ( RMSe - MUR ) - MUR ) ) + Max( RCSe,Max( MLU,( RMSe * MUR ) ) ) ) ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ACS ) - ( ( MDR * Min( DDR ,FirstVNF_Mem ) ) + MRS ) )", "choosing": "( ( RRSe + Min( ( RMSe / Max( ( MUM * ( Max( DS,CS ) + Max( RMSe,RMSe ) ) ),( MUM - MUR ) ) ) ,Min( RMSe ,RCSe ) ) ) + ( Min( CS ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MDR,Const ) ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( Max( CS,MUC ) + Max( CS,MUC ) ) - ( Min( RMSe ,MUC ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR / FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,FirstVNF_RAM ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) ) - ( FirstVNF_Mem + Const ) )", "choosing": "( Min( ( Min( ( CS + RRSe ) ,( MLU + RMSe ) ) + ( ( CS / MUM ) / ( MUC + RMSe ) ) ) ,( RMSe * DS ) ) - ( Max( MUM,MUR ) - ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR / FirstVNF_CPU ) ,FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem_Server * CRS ) + Const ) )", "choosing": "( Min( ( MUM - MUM ) ,( ( MUM + ( DS + CS ) ) * CS ) ) - ( Max( Max( Max( RCSe,RMSe ),Max( RCSe,( ( DS / MLU ) * ( MUC / DS ) ) ) ),MUR ) - ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_Mem + Max( BR,Min( ( MRS / RRS ) ,( Const + RRS ) ) ) ) )", "choosing": "Max( MUM,Min( ( Min( Min( DS ,RRSe ) ,MUC ) - Min( MUM ,( RMSe * ( MUR / MUR ) ) ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN + Const ) / ( FirstVNF_RAM_Server / MRS ) ) + ( Max( FirstVNF_RAM_Server,AMS ) * ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + ( ( Max( ( MUC - MUR ),Min( MLU ,MLU ) ) - ( ( RRSe / MLU ) + Min( RCSe ,RCSe ) ) ) + ( RRSe - RRSe ) ) ) - ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Const ) - ( ACS / BR ) )", "choosing": "( ( MLU / RMSe ) / ( ( ( MLU + ( MUR / ( RRSe - RCSe ) ) ) * MUM ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ARS / ( DDR - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - RMSe ) / Min( CS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_CPU_Server ) * Min( BR ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem ,RRS ),Max( MRS,FirstVNF_Mem ) ) ) * ( ( ( MDR * AMS ) + MRS ) + ( ( BR / BR ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Min( ( MLU - RRSe ) ,Max( MUC,MUR ) ) / MUM ) / ( RCSe + DS ) ) + ( Min( RCSe ,MLU ) - Max( MUM,MUM ) ) ) * ( ( Min( MLU ,MUR ) / ( MLU - MUM ) ) * ( ( MUR - RMSe ) - ( CS / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - AMS ) - MRS ) * ( ACS + Max( ( DDR - FirstVNF_Mem ),( ( ( MDR * RRS ) + ( MRS - PN ) ) - ( ( ACS * DDR ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( Min( RCSe ,DS ) * ( RCSe - MUC ) ) + Max( RRSe,DS ) ) * ( Min( ( MLU - MUM ) ,( RRSe - RCSe ) ) + Max( ( DS * MUM ),Max( MUM,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + FirstVNF_CPU_Server ) ,( DDR - ( BR + AMS ) ) )", "choosing": "Max( Max( MUR,( ( ( MUM * RMSe ) * ( MUC * CS ) ) / ( Min( RMSe ,MUM ) / ( DS / RCSe ) ) ) ),( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_CPU_Server ) * Min( BR ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem ,RRS ),Max( MRS,FirstVNF_Mem ) ) ) * ( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / MUM ) / ( RCSe + DS ) ) + ( Min( ( DS * DS ) ,MLU ) - Max( MUM,MUM ) ) ) * ( ( Min( MLU ,MUR ) / ( MLU - MUM ) ) * ( ( MUR - RMSe ) - Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR / FirstVNF_CPU ) ,( FirstVNF_RAM + MDR ) ) - Min( ( ( FirstVNF_Mem / CRS ) * FirstVNF_CPU ) ,( DDR + ACS ) ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( DS + DS ) / MLU ) ) - ( Max( MUM,MUR ) - ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * MRS ) + Min( RRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,RCSe ) / ( Min( ( ( Min( RRSe ,RMSe ) * MUM ) * ( Min( MUC ,RCSe ) - RMSe ) ) ,MUR ) / MLU ) ) / Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,( Max( MDR,PN ) + ( ACS + ACS ) ) ) / ( ( ( RRS - MDR ) - Max( MDR,Const ) ) - AMS ) )", "choosing": "Min( ( RCSe - RMSe ) ,Max( RRSe,( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( CRS + FirstVNF_CPU ) ) - Max( MDR,Const ) )", "choosing": "( ( ( Max( CS,RMSe ) + CS ) * ( CS + MUR ) ) / ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( BR / FirstVNF_RAM ) * BR ),CRS ) - MRS ) * ( ACS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MUM - RCSe ) - MUR ) + RRSe ) / RRSe ) * ( Min( ( MLU - MUM ) ,( RRSe - RCSe ) ) + Max( ( DS * MUM ),Max( MUM,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( AMS / FirstVNF_CPU ),( BR * ARS ) ) - Max( ( BR + FirstVNF_RAM_Server ),( MRS + FirstVNF_Mem_Server ) ) ) ,Min( ( ( FirstVNF_CPU_Server * DDR ) - Max( FirstVNF_Mem_Server,ACS ) ) ,Max( ( RRS * Const ),( BR * AMS ) ) ) )", "choosing": "( ( ( ( RMSe / RMSe ) * Max( DS,MUM ) ) / ( Max( MLU,Min( MUC ,MUC ) ) / ( RRSe / MLU ) ) ) * ( Min( ( MUM + MUC ) ,Max( MLU,MLU ) ) + Min( ( MUM + MUM ) ,Min( DS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_CPU_Server ) * Min( BR ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem ,RRS ),Max( MRS,FirstVNF_Mem ) ) ) * ( Max( ( FirstVNF_CPU_Server / Const ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + ( ( BR / BR ) / ( FirstVNF_Mem_Server / ( RRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) / ( RCSe + DS ) ) + ( Min( RCSe ,MLU ) - Max( MUM,MUM ) ) ) * ( ( Min( MLU ,MUR ) / ( MLU - MUM ) ) * ( ( MUR - RMSe ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR - ( ( MDR * AMS ) + MRS ) )", "choosing": "( Min( ( ( ( ( MUM / MUM ) / ( RCSe + DS ) ) + ( Min( RCSe ,MLU ) - Max( MUM,MUM ) ) ) * ( ( Min( MLU ,MUR ) / ( MLU - MUM ) ) * ( ( MUR - RMSe ) - ( CS / CS ) ) ) ) ,Max( MUC,MUR ) ) + ( ( Max( ( MUR * CS ),MUM ) / ( RCSe - RMSe ) ) * ( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( Max( ( FirstVNF_CPU_Server / Const ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + ( ( ( PN - Const ) - ( FirstVNF_Mem + MRS ) ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) - FirstVNF_CPU_Server ) - ( ( MDR * AMS ) + MRS ) )", "choosing": "( Min( Max( Min( DS ,( CS * MUC ) ),Min( ( RRSe / MLU ) ,MLU ) ) ,Max( MUC,MUR ) ) + ( ( RMSe + RCSe ) * ( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( Max( ( FirstVNF_CPU_Server / Const ),Max( FirstVNF_Mem_Server,Max( MDR,PN ) ) ) + ( ( BR / BR ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) - FirstVNF_CPU_Server ) - ( ( MDR * AMS ) + MRS ) )", "choosing": "( Min( ( Max( RRSe,( RMSe * RCSe ) ) * ( ( Min( MLU ,MUR ) / ( MLU - MUM ) ) * ( ( MUR - RMSe ) - ( CS / CS ) ) ) ) ,Max( MUC,MUR ) ) + ( ( RMSe + RCSe ) * ( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR / FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,FirstVNF_RAM ) ) / Min( MDR ,Min( FirstVNF_Mem_Server ,BR ) ) ) ) - ( FirstVNF_Mem + Const ) )", "choosing": "( Min( ( Min( ( CS + RRSe ) ,( MLU + RMSe ) ) + ( ( CS / MUM ) / ( Min( ( CS + Max( RCSe,CS ) ) ,DS ) + RMSe ) ) ) ,( RMSe * DS ) ) - ( Max( MUM,MUR ) - ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU ) + ( ( PN - Const ) - ( FirstVNF_Mem + MRS ) ) ) - AMS ) - MRS ) * ( ACS + Max( ( DDR - FirstVNF_Mem ),( ( ( MDR * RRS ) + ( MRS - PN ) ) - ( ( ACS * DDR ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( Min( RCSe ,DS ) * ( RCSe - MUC ) ) + Max( RRSe,DS ) ) * Min( Min( ( RRSe / MLU ) ,MLU ) ,( Max( ( DS - CS ),Max( RRSe,MUR ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * MRS ) + Min( FirstVNF_RAM ,RRS ) ) - ( Max( AMS,Const ) * ( DDR - RRS ) ) ) * ( ( ( CRS + FirstVNF_CPU ) - ( PN * FirstVNF_RAM_Server ) ) - ( ( Const - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( Min( ( CS + Max( RCSe,CS ) ) ,Max( ( DS - CS ),Max( RRSe,MUR ) ) ) / Max( Min( RMSe ,RMSe ),( MLU * ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * MRS ) + Min( FirstVNF_RAM ,RRS ) ) - ( Max( AMS,Const ) * ( DDR - RRS ) ) ) * ( ( Min( ( CRS * ( FirstVNF_RAM_Server / MRS ) ) ,FirstVNF_CPU_Server ) - ( PN * FirstVNF_RAM_Server ) ) - ( ( Const - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( Min( MUR ,RMSe ) / Max( Min( RMSe ,Max( Min( ( RCSe / RCSe ) ,( CS * MUC ) ),Min( ( RRSe / MLU ) ,MLU ) ) ),( MLU * ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS * FirstVNF_RAM ),( DDR - ( FirstVNF_RAM_Server - BR ) ) ) ,( ( FirstVNF_Mem * ( FirstVNF_RAM - Const ) ) - ( Min( ACS ,BR ) + ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( ( Min( ( ( RCSe / RCSe ) - RCSe ) ,( Max( Min( ( MUC / RMSe ) ,( RCSe * MUM ) ),( Max( DS,MUM ) * ( MUM + DS ) ) ) / ( ( ( MLU / MUM ) / ( DS - DS ) ) + Min( ( RCSe + DS ) ,( MUM * MUR ) ) ) ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,PN ) - Min( MDR ,ACS ) ) ,( ( FirstVNF_CPU + MDR ) - ( ( RRS / MRS ) - MRS ) ) )", "choosing": "Min( ( ( Min( ( ( ( RCSe / RCSe ) + Min( MLU ,MUR ) ) - RCSe ) ,( ( ( CS - ( MUC * RRSe ) ) + MUM ) * DS ) ) + Min( RMSe ,( DS * MUR ) ) ) / Max( RMSe,( RCSe / ( CS - RMSe ) ) ) ) ,( RMSe / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MRS ,MDR ) - ( MDR + BR ) ) ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + ( MLU / MUR ) ) - ( Min( RMSe ,MUC ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( DDR - AMS ) ,CRS ) - ( MDR + BR ) ) ,( Max( MDR,Const ) - ( CRS + MDR ) ) )", "choosing": "( ( ( RCSe + MUC ) + Max( CS,MUC ) ) - ( Min( RMSe ,MUC ) * ( ( ( ( MUC + MUR ) / ( CS / MUM ) ) + MLU ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * RRS ) + AMS ) - FirstVNF_CPU_Server ) - ( ( MDR * AMS ) + MRS ) )", "choosing": "( Min( ( MLU - RRSe ) ,Max( MUC,MUR ) ) + Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}]}