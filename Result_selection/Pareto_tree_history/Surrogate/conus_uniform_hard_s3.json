{"1": [{"determining": "( ( MRS - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( MUC - MUM ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) * ( MDR * DDR ) )", "choosing": "( Min( RCSe ,DS ) / ( MUC / RMSe ) )", "obj1": 0.7588357588357588, "obj2": 0.20689862614217414}, {"determining": "Min( ( PN - Const ) ,( ARS * PN ) )", "choosing": "( Max( CS,MUM ) / ( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,BR ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MLU ,RCSe ) / MUC ) * ( RRSe + Max( MUC,DS ) ) )", "obj1": 0.8212058212058212, "obj2": 0.15163832198157487}, {"determining": "( ( ( DDR * MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),( FirstVNF_Mem + ARS ) ) )", "choosing": "( ( ( RCSe + MUR ) + Min( MUR ,DS ) ) * ( MLU + DS ) )", "obj1": 0.9542619542619543, "obj2": 0.02744221150934389}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_RAM,FirstVNF_RAM ) ) * ( ( Const * CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Max( ( RMSe / RRSe ),Max( RMSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / BR ) / Max( Min( Const ,ACS ),Min( ACS ,CRS ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUR / MLU ) ) ,( DS * MLU ) )", "obj1": 0.7733887733887734, "obj2": 0.18690055917663068}, {"determining": "Min( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ,Min( ( DDR / AMS ) ,( BR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,MUC ) * Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * DDR ) * ( FirstVNF_CPU / Const ) )", "choosing": "( ( ( DS * MLU ) / MUM ) - ( RMSe + MUC ) )", "obj1": 0.8482328482328483, "obj2": 0.1025449602696118}, {"determining": "Max( ( ( ( ARS / FirstVNF_CPU ) + ( FirstVNF_CPU_Server / PN ) ) / ( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ),( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + Max( PN,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server / Const ) + ( PN + DDR ) ) ) )", "choosing": "( Min( Min( MUM ,MUC ) ,Min( RMSe ,Min( RMSe ,MLU ) ) ) - ( MLU * MUM ) )", "obj1": 0.6528066528066528, "obj2": 0.2510253033812207}, {"determining": "Min( Max( ( AMS - FirstVNF_RAM ),BR ) ,( PN - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( Max( ( CS + RRSe ),( DS * RCSe ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) ),( Max( ( DS * DS ),( MLU + RRSe ) ) + Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - MDR ) ,ACS ) + ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) )", "choosing": "( ( ( ( CS / RCSe ) / ( MUM - RMSe ) ) + ( ( RRSe - MUM ) - ( MLU + DS ) ) ) - Min( ( ( RRSe - CS ) * ( MUC * MLU ) ) ,Max( ( MUR / DS ),( RRSe / MLU ) ) ) )", "obj1": 0.659043659043659, "obj2": 0.21397313623492925}, {"determining": "( ( Max( Min( BR ,CRS ),( AMS / Const ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) * ( ( ( DDR - PN ) - ( RRS - FirstVNF_Mem_Server ) ) + Max( Min( MRS ,FirstVNF_CPU ),( MRS / Const ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + CS ) + Min( ( MLU + MUR ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) + ( ( DDR / FirstVNF_Mem ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( ( MUC * CS ) / MUC ) ) * ( ( Min( MUR ,RMSe ) * ( DS / RMSe ) ) + Min( RCSe ,( RMSe * CS ) ) ) )", "obj1": 0.7422037422037422, "obj2": 0.20920496168197258}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,Max( ARS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MUR ) - ( ( DS - RCSe ) - ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6382536382536382, "obj2": 0.2912589856023724}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( Max( DS,Max( CS,RMSe ) ) ,( MUC + MUC ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( MRS - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( MUC - MUM ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - Const ) ,( ARS * PN ) )", "choosing": "( Max( CS,MUM ) / ( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,BR ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MLU ,RCSe ) / MUC ) * ( RRSe + Max( MUC,DS ) ) )", "obj1": 0.8212058212058212, "obj2": 0.15163832198157487}, {"determining": "( ( ( DDR * MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),( FirstVNF_Mem + ARS ) ) )", "choosing": "( ( ( RCSe + MUR ) + Min( MUR ,DS ) ) * ( MLU + DS ) )", "obj1": 0.9542619542619543, "obj2": 0.02744221150934389}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_RAM,FirstVNF_RAM ) ) * ( ( Const * CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Max( ( RMSe / RRSe ),Max( RMSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ,Min( ( DDR / AMS ) ,( BR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,MUC ) * Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * DDR ) * ( FirstVNF_CPU / Const ) )", "choosing": "( ( ( DS * MLU ) / MUM ) - ( RMSe + MUC ) )", "obj1": 0.8482328482328483, "obj2": 0.1025449602696118}, {"determining": "Max( ( ( ( ARS / FirstVNF_CPU ) + ( FirstVNF_CPU_Server / PN ) ) / ( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ),( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + Max( PN,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server / Const ) + ( PN + DDR ) ) ) )", "choosing": "( Min( Min( MUM ,MUC ) ,Min( RMSe ,Min( RMSe ,MLU ) ) ) - ( MLU * MUM ) )", "obj1": 0.6528066528066528, "obj2": 0.2510253033812207}, {"determining": "Min( Max( ( AMS - FirstVNF_RAM ),BR ) ,( PN - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( Max( ( CS + RRSe ),( DS * RCSe ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) ),( Max( ( DS * DS ),( MLU + RRSe ) ) + Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - MDR ) ,ACS ) + ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) )", "choosing": "( ( ( ( CS / RCSe ) / ( MUM - RMSe ) ) + ( ( RRSe - MUM ) - ( MLU + DS ) ) ) - Min( ( ( RRSe - CS ) * ( MUC * MLU ) ) ,Max( ( MUR / DS ),( RRSe / MLU ) ) ) )", "obj1": 0.659043659043659, "obj2": 0.21397313623492925}, {"determining": "( ( Max( Min( BR ,CRS ),( AMS / Const ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) * ( ( ( DDR - PN ) - ( RRS - FirstVNF_Mem_Server ) ) + Max( Min( MRS ,FirstVNF_CPU ),( MRS / Const ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + CS ) + Min( ( MLU + MUR ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) + ( ( DDR / FirstVNF_Mem ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( ( MUC * CS ) / MUC ) ) * ( ( Min( MUR ,RMSe ) * ( DS / RMSe ) ) + Min( RCSe ,( RMSe * CS ) ) ) )", "obj1": 0.7422037422037422, "obj2": 0.20920496168197258}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,Max( ARS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MUR ) - ( ( DS - RCSe ) - ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6382536382536382, "obj2": 0.2912589856023724}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( Max( DS,Max( CS,RMSe ) ) ,( MUC + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ( MDR * DDR ) ) ,Max( ARS,PN ) )", "choosing": "( Max( CS,RMSe ) / ( MUC / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - Const ) ,Max( ARS,PN ) )", "choosing": "( Min( RCSe ,DS ) / ( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) )", "choosing": "( Max( CS,RMSe ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM / FirstVNF_RAM ) )", "choosing": "( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ,Min( ( DDR / AMS ) ,( BR - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUR / MLU ) ) ,( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ( Min( ( ( FirstVNF_RAM - RRS ) - Min( BR ,CRS ) ) ,Max( ( MDR - MDR ),( FirstVNF_CPU_Server / MRS ) ) ) + ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( FirstVNF_CPU ,RRS ) ) - Min( ( MDR + DDR ) ,Min( MDR ,FirstVNF_CPU ) ) ) ) ,( ( Max( Min( FirstVNF_CPU_Server ,MDR ),( FirstVNF_RAM - FirstVNF_RAM ) ) * ( ( FirstVNF_Mem_Server - ACS ) + Max( FirstVNF_Mem,ACS ) ) ) + Min( ( Min( CRS ,MDR ) + ( BR + FirstVNF_RAM ) ) ,Max( ( ACS + CRS ),( ACS - AMS ) ) ) ) ) ,( ( Min( ( Min( BR ,CRS ) * ( FirstVNF_Mem * RRS ) ) ,( Max( FirstVNF_Mem,DDR ) + ( DDR - FirstVNF_CPU_Server ) ) ) * ( ( ( Const / FirstVNF_RAM ) - ( FirstVNF_CPU * PN ) ) + ( ( ARS - FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) - ( ( ( Min( BR ,FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_CPU ) ) * ( ( MRS * FirstVNF_RAM ) * ( BR + ACS ) ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) * ( BR / FirstVNF_Mem_Server ) ) - ( ( MRS + FirstVNF_CPU ) / Min( RRS ,ARS ) ) ) ) ) ) * ( ( ( Max( ( ( ACS / FirstVNF_RAM ) / ( MDR * FirstVNF_CPU_Server ) ),Min( Max( ACS,DDR ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) - ( ( ( DDR - Const ) * Max( BR,PN ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) + ( ( ( Min( FirstVNF_RAM_Server ,ACS ) + ( BR / ARS ) ) - Min( ( PN + MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) + ( ( Max( MDR,FirstVNF_CPU ) - Min( FirstVNF_Mem ,AMS ) ) * ( ( MDR + Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ) ) ) - ( Min( ( Min( ( ARS + AMS ) ,Min( AMS ,PN ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( ARS,FirstVNF_CPU_Server ) ) ) ,( ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) * Min( ( ACS + ARS ) ,Max( PN,DDR ) ) ) ) + ( ( Max( ( FirstVNF_Mem_Server + MDR ),( ACS - RRS ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) + ( Max( Max( CRS,Const ),( ACS + Const ) ) + ( ( FirstVNF_RAM_Server * ARS ) - ( FirstVNF_RAM_Server + MRS ) ) ) ) ) ) ) - ( ( ( Min( ( Min( ( ACS / FirstVNF_CPU_Server ) ,( Const - DDR ) ) * ( Max( FirstVNF_CPU_Server,BR ) * ( MRS * PN ) ) ) ,( Max( ( FirstVNF_Mem / FirstVNF_Mem ),( Const / PN ) ) + ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) * ( Min( ( Max( ARS,PN ) / ( ACS / MDR ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( FirstVNF_RAM / DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / DDR ) / Min( DDR ,FirstVNF_RAM ) ) ,( Min( MDR ,BR ) - ( AMS / FirstVNF_Mem ) ) ) ) ) + Max( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - ( MRS + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( PN * RRS ) ) ),Max( Min( ( RRS - MDR ) ,( RRS / MRS ) ),( ( MRS / RRS ) / Max( Const,CRS ) ) ) ),Min( ( Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),( BR * AMS ) ) + Max( ( ARS / PN ),Min( PN ,FirstVNF_RAM ) ) ) ,( ( ( ACS * FirstVNF_CPU ) / ( ACS / DDR ) ) / ( ( ARS / RRS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) + Min( ( Min( ( Max( ( CRS - DDR ),( FirstVNF_Mem * DDR ) ) * Min( ( ARS * DDR ) ,( AMS + MDR ) ) ) ,Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) * Min( AMS ,Const ) ),( Max( AMS,PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) * ( ( ( ( CRS * FirstVNF_RAM ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( ( CRS - Const ) / ( AMS / CRS ) ) ) / Max( ( Max( PN,FirstVNF_Mem_Server ) / ( ARS / Const ) ),( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) / ( MRS + AMS ) ) ) ) ) ,( Max( ( Max( Min( DDR ,FirstVNF_CPU ),( PN + RRS ) ) / ( ( FirstVNF_CPU_Server + ARS ) / ( FirstVNF_RAM * CRS ) ) ),( Min( ( RRS * DDR ) ,( FirstVNF_RAM / MDR ) ) - ( Min( CRS ,CRS ) / Min( AMS ,ARS ) ) ) ) + Min( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ARS + AMS ) ) / ( ( CRS * RRS ) - ( FirstVNF_CPU_Server + ARS ) ) ) ,Min( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( BR + FirstVNF_RAM_Server ) ) ,( ( AMS + DDR ) - Max( AMS,ACS ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( Max( ( ( ( MUR / RRSe ) * ( MUM / RCSe ) ) + ( Min( RCSe ,RRSe ) * Max( MLU,MUC ) ) ),Max( Max( Max( RMSe,MLU ),Min( RRSe ,MUR ) ),Min( Max( DS,MLU ) ,( RMSe / CS ) ) ) ) * ( Max( ( Max( MUM,MUM ) + ( MUC / RCSe ) ),( ( RCSe / RRSe ) * ( RRSe + RRSe ) ) ) - ( Max( Max( MUR,RCSe ),Max( MUM,RRSe ) ) + Min( Max( MUR,MLU ) ,( RMSe - RMSe ) ) ) ) ) + ( ( Min( Max( ( MLU * DS ),( MLU * MUM ) ) ,( ( RCSe / MUC ) - Min( MUM ,MLU ) ) ) - ( ( ( MUM / MUM ) - ( MUC / MUR ) ) + Min( ( RMSe / CS ) ,Min( RRSe ,MUM ) ) ) ) - Max( ( Min( ( RCSe + CS ) ,( MUM * MUC ) ) * ( ( MUM * MLU ) - ( CS + RRSe ) ) ),Min( ( ( RMSe - MUM ) + Min( MUR ,MUM ) ) ,( ( MUM + RRSe ) / ( MLU * CS ) ) ) ) ) ),Max( Max( ( ( Min( ( RRSe + MLU ) ,Max( RMSe,RRSe ) ) - Max( ( RCSe - MUR ),( RMSe / RCSe ) ) ) - ( Max( ( MUM + RCSe ),( MLU / MLU ) ) / ( ( RMSe / MUM ) * Min( RMSe ,RRSe ) ) ) ),( Max( ( ( CS - RCSe ) * Min( RMSe ,RRSe ) ),Max( Min( CS ,RMSe ),( MUR * MUM ) ) ) + ( Max( Min( DS ,RRSe ),( RCSe - RRSe ) ) / ( ( RRSe - DS ) + ( MUC * MUR ) ) ) ) ),( ( Min( ( ( RRSe - RCSe ) + ( MUC + MUR ) ) ,Max( ( MLU * CS ),( MUC / RMSe ) ) ) * Min( ( ( CS + RMSe ) / ( MUR * RCSe ) ) ,( ( RCSe - CS ) - ( RMSe * DS ) ) ) ) * ( ( Min( ( MUC + MUR ) ,Min( RMSe ,DS ) ) + Max( ( RRSe / RMSe ),Min( MUR ,RRSe ) ) ) / ( Min( ( CS - MUM ) ,( RCSe - RCSe ) ) * Min( ( MLU + MUR ) ,Max( RCSe,MUR ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( MUR / DS ) / Max( MUC,MUM ) ) ,( ( CS + RRSe ) - ( MUM * MLU ) ) ) * Max( ( ( MUR - CS ) - Max( MUC,MUC ) ),( Max( MUM,RRSe ) * Max( CS,MLU ) ) ) ) - Max( ( Min( ( RCSe + RRSe ) ,( RMSe + RRSe ) ) / ( ( MUC - RRSe ) - Max( MUM,RRSe ) ) ),( Max( ( MUM * RMSe ),( MUC * RCSe ) ) * ( ( MLU * RMSe ) / Min( MUR ,RMSe ) ) ) ) ) / Max( Min( Min( ( Min( CS ,RCSe ) * Min( RMSe ,RCSe ) ) ,Min( ( MUR + MUR ) ,Min( MLU ,MUM ) ) ) ,( ( ( RCSe + RRSe ) * Min( DS ,CS ) ) - Max( Min( CS ,RRSe ),( CS + RRSe ) ) ) ),( Min( ( ( CS + MLU ) / Max( MUC,RCSe ) ) ,Min( ( MUM / RMSe ) ,( RCSe / DS ) ) ) / ( ( Max( RCSe,RRSe ) - ( MLU + DS ) ) * ( ( MUR / RMSe ) + ( MUM + MUR ) ) ) ) ) ) + Min( Max( ( ( Max( ( MUR / MLU ),( CS * MLU ) ) - Max( ( CS - MUR ),( MUR + MUR ) ) ) - Max( ( ( RMSe * MLU ) + ( MUC / MUC ) ),( Min( MLU ,MUR ) - ( DS - DS ) ) ) ),Max( ( ( ( CS * RRSe ) * Min( MLU ,MUC ) ) + Max( ( RCSe - MLU ),( RCSe - MUC ) ) ),( Min( Max( MUC,RCSe ) ,( RCSe + MUR ) ) + ( ( RRSe + MUM ) + Min( MUC ,MLU ) ) ) ) ) ,( ( Min( ( ( RMSe + CS ) * ( CS / MUM ) ) ,( ( RCSe / RRSe ) / ( MUR * RRSe ) ) ) / Min( ( ( MUM + MUC ) / Min( MUM ,CS ) ) ,Max( ( CS + RMSe ),( RMSe / RRSe ) ) ) ) * ( ( ( Max( MUR,RRSe ) / Max( DS,DS ) ) * ( ( MUR * MUR ) * Max( MLU,CS ) ) ) * ( Max( ( MUC / CS ),( DS / MLU ) ) / ( Max( RCSe,CS ) + ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU_Server ,( ( ( PN + ( PN * PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) )", "choosing": "Min( Max( DS,Max( CS,MUR ) ) ,( ( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) * ( FirstVNF_CPU * DDR ) )", "choosing": "( Min( RCSe ,DS ) / Max( RCSe,RMSe ) )", "obj1": 0.7234927234927235, "obj2": 0.21236421806684969}, {"determining": "( Max( ( Const - Const ),( Const - CRS ) ) - ( FirstVNF_Mem_Server / ( MRS / FirstVNF_RAM ) ) )", "choosing": "( ( RMSe + MLU ) + ( ( MUR / RRSe ) * ( MUC + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,MDR ) - Min( ( FirstVNF_CPU / ( ( ACS / FirstVNF_Mem ) * ( MDR * DDR ) ) ) ,( FirstVNF_Mem * AMS ) ) )", "choosing": "( DS + ( RRSe - RRSe ) )", "obj1": 0.9085239085239085, "obj2": 0.08828483893964204}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ),Min( RMSe ,DS ) )", "obj1": 0.7546777546777547, "obj2": 0.17505431599778437}, {"determining": "( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6070686070686071, "obj2": 0.30320266028128173}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Max( ( RMSe / MUM ),Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Min( Const ,CRS ) - Min( MRS ,MRS ) ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( ( RCSe + MUR ) + Min( MUM ,DS ) ) * Max( ( RMSe / MUM ),Min( RMSe ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Max( ( RMSe / MUM ),Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,MRS ) / Min( ACS ,FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( RCSe + DS ) ,Min( MUM ,DS ) ) * ( RRSe + MLU ) )", "obj1": 0.9501039501039501, "obj2": 0.03157157761134193}, {"determining": "( ( ( DDR * MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),( FirstVNF_Mem + ARS ) ) )", "choosing": "( ( ( RCSe + MUR ) + Min( MUR ,DS ) ) * ( MLU + DS ) )", "obj1": 0.8316008316008316, "obj2": 0.116352466330642}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( ( Const * CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Max( ( RMSe / RRSe ),Max( RMSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,( Min( MRS ,ACS ) - ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUC ,RCSe ) / ( MUR / CS ) ) - ( ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) + ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,ACS ) + ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,RCSe ) / ( MUR / CS ) ) - ( ( MUM + RRSe ) + ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( ( FirstVNF_Mem / BR ) / Max( Min( Const ,ACS ),Min( ACS ,CRS ) ) ) ) ) )", "choosing": "( MUM - ( ( DS - RCSe ) - ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,Max( ARS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUR / MLU ) ) ,( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - MDR ) ,ACS ) + ( AMS * DDR ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( ( MUC * MUM ),CS ) ) ) )", "obj1": 0.762993762993763, "obj2": 0.1719025330123533}, {"determining": "( ( Max( Min( BR ,CRS ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * ( ( ( DDR - PN ) * ( RRS - FirstVNF_Mem_Server ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( MRS / Const ) ) ) )", "choosing": "( ( ( MUC - MUC ) + RCSe ) + ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( AMS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,Max( ARS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MUR ) - ( ( ( CS - MUR ) * ( RRSe + MUR ) ) - ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,Max( ARS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS - MUR ) * ( RRSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,( ( Min( AMS ,BR ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) ) ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MLU ,MUC ) / MUC ) * ( RRSe + Max( MUC,RMSe ) ) )", "obj1": 0.8253638253638254, "obj2": 0.13918504065360734}, {"determining": "( ( Min( AMS ,MRS ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MLU ,RCSe ) / MUC ) * ( ( Min( MLU ,RCSe ) / MUC ) * ( RRSe + Max( MUC,RMSe ) ) ) )", "obj1": 0.8087318087318087, "obj2": 0.15473114424500187}, {"determining": "( ( Max( Min( BR ,CRS ),( AMS / Const ) ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * ( ( ( DDR - PN ) * ( RRS - FirstVNF_Mem_Server ) ) + Max( Min( MRS ,FirstVNF_CPU ),( MRS / Const ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - FirstVNF_CPU ) / ( DDR - DDR ) ) - ( ( DDR * BR ) - ( ARS * FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe / RRSe ) - RRSe ) - MUC )", "obj1": 0.6424116424116424, "obj2": 0.26736759748143485}, {"determining": "( ( ( PN + Max( FirstVNF_Mem_Server,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( CS * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.972972972972973, "obj2": 0.011327092185046048}, {"determining": "( Min( ACS ,ACS ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6153846153846154, "obj2": 0.2998447170693813}], "3": [{"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( ( FirstVNF_Mem / BR ) / Max( Min( Const ,ACS ),Min( ACS ,CRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( MUC - MUM ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6070686070686071, "obj2": 0.30320266028128173}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) )", "choosing": "( ( ( ( CS / RCSe ) / ( MUM - RMSe ) ) + ( ( RRSe - MUM ) - ( MLU + DS ) ) ) - Min( ( ( RRSe - CS ) * ( MUC * MLU ) ) ,Max( ( MUR / DS ),( RRSe / MLU ) ) ) )", "obj1": 0.659043659043659, "obj2": 0.21397313623492925}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) )", "choosing": "( ( Min( MUC ,MUC ) + RCSe ) + ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) )", "obj1": 0.7068607068607069, "obj2": 0.18830664184411128}, {"determining": "( Min( ( PN - ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ) ,ACS ) + ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( ( ( DS - RCSe ) - ( MUM + RCSe ) ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 0.6299376299376299, "obj2": 0.2647112153981777}, {"determining": "( ( PN * MRS ) - Max( CRS,RRS ) )", "choosing": "( Min( RCSe ,MUC ) / ( MUC / RMSe ) )", "obj1": 0.7422037422037422, "obj2": 0.1595355664765511}, {"determining": "( Min( ( PN - MDR ) ,ACS ) + ( Max( ( RRS / AMS ),Max( FirstVNF_Mem,ARS ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,RCSe ) / RRSe ) - ( ( MUM + RRSe ) + ( DS - CS ) ) )", "obj1": 0.6444906444906445, "obj2": 0.23664765140684116}, {"determining": "( ( Max( BR,MRS ) / ( ACS - FirstVNF_CPU ) ) + Max( ( RRS / AMS ),Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Min( MUC ,MUC ) + RCSe ) + ( ( MLU + MUR ) - RMSe ) )", "obj1": 0.7879417879417879, "obj2": 0.15455959594427698}, {"determining": "( ( Max( Min( BR ,CRS ),( AMS / Const ) ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * ( ( ( ( BR - MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) ) + Max( Min( MRS ,FirstVNF_CPU ),( MRS / Const ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + DS ) + ( ( MLU * MUR ) * RMSe ) )", "obj1": 0.8752598752598753, "obj2": 0.0936119364306974}, {"determining": "( ( CRS * DDR ) * ( FirstVNF_CPU / Const ) )", "choosing": "( ( ( DS * MLU ) / MUM ) - ( RMSe + MUC ) )", "obj1": 0.8482328482328483, "obj2": 0.1025449602696118}, {"determining": "( Min( ACS ,ACS ) - ( Min( RRS ,MRS ) / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6133056133056133, "obj2": 0.29172188537218086}, {"determining": "Min( ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ,Max( ARS,PN ) )", "choosing": "( Min( ( ( RRSe - CS ) * ( MUC * MLU ) ) ,Max( ( MUR / DS ),( RRSe / MLU ) ) ) / ( MUC / RMSe ) )", "obj1": 0.7172557172557172, "obj2": 0.17660086399544525}, {"determining": "( ( ( DDR * MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),( FirstVNF_Mem + ARS ) ) )", "choosing": "( ( ( RCSe + MUR ) + Min( MUR ,DS ) ) * ( MLU + DS ) )", "obj1": 0.8316008316008316, "obj2": 0.116352466330642}, {"determining": "( FirstVNF_RAM - ( MRS / MRS ) )", "choosing": "( ( Min( DS ,( ( MUC * CS ) / MUC ) ) * ( ( Min( MUR ,RMSe ) * ( DS / RMSe ) ) + Min( RCSe ,( RMSe * CS ) ) ) ) * Min( MUR ,RRSe ) )", "obj1": 0.9376299376299376, "obj2": 0.04700291565053801}, {"determining": "( ( ACS / FirstVNF_Mem ) * ( Min( AMS ,( ( Min( AMS ,BR ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) ) ) + Min( FirstVNF_RAM ,MRS ) ) )", "choosing": "( Min( RCSe ,DS ) / ( ( Min( MLU ,MUC ) / MUC ) * ( RRSe + Max( MUC,RMSe ) ) ) )", "obj1": 0.9272349272349273, "obj2": 0.060140547303842024}, {"determining": "( ( Min( AMS ,( ( Min( AMS ,BR ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) ) ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MLU ,MUC ) / MUC ) * ( RRSe + Max( MUC,RMSe ) ) )", "obj1": 0.8066528066528067, "obj2": 0.14519853332414806}, {"determining": "( ( Min( AMS ,MRS ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) )", "choosing": "( ( CS - MUR ) * ( RRSe + MUR ) )", "obj1": 0.9043659043659044, "obj2": 0.08808615665501932}, {"determining": "( ( ( PN + Max( FirstVNF_Mem_Server,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( CS * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.972972972972973, "obj2": 0.011327092185046048}, {"determining": "( ( Max( BR,MRS ) / Min( ACS ,FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( RCSe + DS ) ,Min( MUM ,DS ) ) * ( RRSe + MLU ) )", "obj1": 0.9501039501039501, "obj2": 0.03157157761134193}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( Min( BR ,CRS ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RCSe ) / ( MUM - RMSe ) ) + ( ( RRSe - MUM ) - ( MLU + DS ) ) ) - Min( ( ( RRSe - CS ) * ( MUC * MLU ) ) ,Max( ( MUR / ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) ),( RRSe / MLU ) ) ) )", "obj1": 0.9916839916839917, "obj2": 0.003794242207164221}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( Max( ( FirstVNF_RAM - RRS ),( AMS * FirstVNF_Mem ) ) / ( Min( MRS ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / Max( Const,DDR ) ) / ( ( BR / ACS ) - ( MRS / FirstVNF_RAM ) ) ) ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( FirstVNF_CPU ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * ( Min( ( ( ( MDR + RRS ) / ( Const - FirstVNF_RAM ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) * Max( ARS,MRS ) ) ) ,Min( ( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_Mem - PN ) ) ,( Max( FirstVNF_RAM,PN ) - ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) - Max( ( ( ( BR * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU_Server,BR ) ) * Min( ( ACS / DDR ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ),( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * ( ( PN / RRS ) * ( MDR * ACS ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( ( ( RRSe - CS ) / Min( MLU ,MUM ) ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( ( ( MLU - MUM ) / Max( CS,RCSe ) ) / ( ( MUC / MLU ) + Max( MUM,MUR ) ) ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9106029106029107, "obj2": 0.07192569677862144}, {"determining": "( ( Const / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( RCSe + MUR ) ,( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) ) ) * ( MLU + DS ) )", "obj1": 0.8274428274428275, "obj2": 0.13400831283909048}, {"determining": "( ( Min( AMS ,( ( Min( AMS ,BR ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) ) ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MLU ,MUC ) / MUC ) * ( RRSe + Max( MUC,RMSe ) ) )", "obj1": 0.8253638253638254, "obj2": 0.13918504065360734}, {"determining": "( ( Min( AMS ,BR ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUR / MLU ) ) ,( DS * MLU ) )", "obj1": 0.9708939708939709, "obj2": 0.02167326205517558}, {"determining": "( ( Min( AMS ,BR ) + Min( FirstVNF_RAM ,MRS ) ) * Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MLU ,RCSe ) / MUC ) * ( RRSe + Max( MUC,DS ) ) )", "obj1": 0.9085239085239085, "obj2": 0.07529986487374857}, {"determining": "Min( Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) ,Max( ARS,PN ) )", "choosing": "( Min( RCSe ,DS ) / ( ( ( Min( MLU ,MUC ) / MUC ) * ( RRSe + Max( MUC,RMSe ) ) ) / RMSe ) )", "obj1": 0.9625779625779626, "obj2": 0.026180461343814063}, {"determining": "( ( ( DDR * MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),( FirstVNF_Mem + ARS ) ) )", "choosing": "( ( ( RCSe + MUR ) + Min( MUR ,DS ) ) * ( MLU + DS ) )", "obj1": 0.9542619542619543, "obj2": 0.02744221150934389}, {"determining": "Min( ( PN - Const ) ,( ARS * PN ) )", "choosing": "( Max( CS,MUM ) / ( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_RAM,FirstVNF_RAM ) ) * ( ( Const * CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Max( ( RMSe / RRSe ),Max( RMSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ,Min( ( DDR / AMS ) ,( BR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,MUC ) * Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( AMS - FirstVNF_RAM ),BR ) ,( PN - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( Max( ( CS + RRSe ),( DS * RCSe ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) ),( Max( ( DS * DS ),( MLU + RRSe ) ) + Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - MDR ) ,ACS ) + ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( BR ,CRS ),( AMS / Const ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) * ( ( ( DDR - PN ) - ( RRS - FirstVNF_Mem_Server ) ) + Max( Min( MRS ,FirstVNF_CPU ),( MRS / Const ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + CS ) + Min( ( MLU + MUR ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,Max( ARS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MUR ) - ( ( DS - RCSe ) - ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( Max( DS,Max( CS,RMSe ) ) ,( MUC + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ( MDR * DDR ) ) ,Max( ARS,PN ) )", "choosing": "( Max( CS,RMSe ) / ( MUC / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - Const ) ,Max( ARS,PN ) )", "choosing": "( Min( RCSe ,DS ) / ( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) )", "choosing": "( Max( CS,RMSe ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM / FirstVNF_RAM ) )", "choosing": "( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ,Min( ( DDR / AMS ) ,( BR - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUR / MLU ) ) ,( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ( Min( ( ( FirstVNF_RAM - RRS ) - Min( BR ,CRS ) ) ,Max( ( MDR - MDR ),( FirstVNF_CPU_Server / MRS ) ) ) + ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( FirstVNF_CPU ,RRS ) ) - Min( ( MDR + DDR ) ,Min( MDR ,FirstVNF_CPU ) ) ) ) ,( ( Max( Min( FirstVNF_CPU_Server ,MDR ),( FirstVNF_RAM - FirstVNF_RAM ) ) * ( ( FirstVNF_Mem_Server - ACS ) + Max( FirstVNF_Mem,ACS ) ) ) + Min( ( Min( CRS ,MDR ) + ( BR + FirstVNF_RAM ) ) ,Max( ( ACS + CRS ),( ACS - AMS ) ) ) ) ) ,( ( Min( ( Min( BR ,CRS ) * ( FirstVNF_Mem * RRS ) ) ,( Max( FirstVNF_Mem,DDR ) + ( DDR - FirstVNF_CPU_Server ) ) ) * ( ( ( Const / FirstVNF_RAM ) - ( FirstVNF_CPU * PN ) ) + ( ( ARS - FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) - ( ( ( Min( BR ,FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_CPU ) ) * ( ( MRS * FirstVNF_RAM ) * ( BR + ACS ) ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) * ( BR / FirstVNF_Mem_Server ) ) - ( ( MRS + FirstVNF_CPU ) / Min( RRS ,ARS ) ) ) ) ) ) * ( ( ( Max( ( ( ACS / FirstVNF_RAM ) / ( MDR * FirstVNF_CPU_Server ) ),Min( Max( ACS,DDR ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) - ( ( ( DDR - Const ) * Max( BR,PN ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) + ( ( ( Min( FirstVNF_RAM_Server ,ACS ) + ( BR / ARS ) ) - Min( ( PN + MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) + ( ( Max( MDR,FirstVNF_CPU ) - Min( FirstVNF_Mem ,AMS ) ) * ( ( MDR + Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ) ) ) - ( Min( ( Min( ( ARS + AMS ) ,Min( AMS ,PN ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( ARS,FirstVNF_CPU_Server ) ) ) ,( ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) * Min( ( ACS + ARS ) ,Max( PN,DDR ) ) ) ) + ( ( Max( ( FirstVNF_Mem_Server + MDR ),( ACS - RRS ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) + ( Max( Max( CRS,Const ),( ACS + Const ) ) + ( ( FirstVNF_RAM_Server * ARS ) - ( FirstVNF_RAM_Server + MRS ) ) ) ) ) ) ) - ( ( ( Min( ( Min( ( ACS / FirstVNF_CPU_Server ) ,( Const - DDR ) ) * ( Max( FirstVNF_CPU_Server,BR ) * ( MRS * PN ) ) ) ,( Max( ( FirstVNF_Mem / FirstVNF_Mem ),( Const / PN ) ) + ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) * ( Min( ( Max( ARS,PN ) / ( ACS / MDR ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( FirstVNF_RAM / DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / DDR ) / Min( DDR ,FirstVNF_RAM ) ) ,( Min( MDR ,BR ) - ( AMS / FirstVNF_Mem ) ) ) ) ) + Max( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - ( MRS + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( PN * RRS ) ) ),Max( Min( ( RRS - MDR ) ,( RRS / MRS ) ),( ( MRS / RRS ) / Max( Const,CRS ) ) ) ),Min( ( Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),( BR * AMS ) ) + Max( ( ARS / PN ),Min( PN ,FirstVNF_RAM ) ) ) ,( ( ( ACS * FirstVNF_CPU ) / ( ACS / DDR ) ) / ( ( ARS / RRS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) + Min( ( Min( ( Max( ( CRS - DDR ),( FirstVNF_Mem * DDR ) ) * Min( ( ARS * DDR ) ,( AMS + MDR ) ) ) ,Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) * Min( AMS ,Const ) ),( Max( AMS,PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) * ( ( ( ( CRS * FirstVNF_RAM ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( ( CRS - Const ) / ( AMS / CRS ) ) ) / Max( ( Max( PN,FirstVNF_Mem_Server ) / ( ARS / Const ) ),( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) / ( MRS + AMS ) ) ) ) ) ,( Max( ( Max( Min( DDR ,FirstVNF_CPU ),( PN + RRS ) ) / ( ( FirstVNF_CPU_Server + ARS ) / ( FirstVNF_RAM * CRS ) ) ),( Min( ( RRS * DDR ) ,( FirstVNF_RAM / MDR ) ) - ( Min( CRS ,CRS ) / Min( AMS ,ARS ) ) ) ) + Min( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ARS + AMS ) ) / ( ( CRS * RRS ) - ( FirstVNF_CPU_Server + ARS ) ) ) ,Min( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( BR + FirstVNF_RAM_Server ) ) ,( ( AMS + DDR ) - Max( AMS,ACS ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( Max( ( ( ( MUR / RRSe ) * ( MUM / RCSe ) ) + ( Min( RCSe ,RRSe ) * Max( MLU,MUC ) ) ),Max( Max( Max( RMSe,MLU ),Min( RRSe ,MUR ) ),Min( Max( DS,MLU ) ,( RMSe / CS ) ) ) ) * ( Max( ( Max( MUM,MUM ) + ( MUC / RCSe ) ),( ( RCSe / RRSe ) * ( RRSe + RRSe ) ) ) - ( Max( Max( MUR,RCSe ),Max( MUM,RRSe ) ) + Min( Max( MUR,MLU ) ,( RMSe - RMSe ) ) ) ) ) + ( ( Min( Max( ( MLU * DS ),( MLU * MUM ) ) ,( ( RCSe / MUC ) - Min( MUM ,MLU ) ) ) - ( ( ( MUM / MUM ) - ( MUC / MUR ) ) + Min( ( RMSe / CS ) ,Min( RRSe ,MUM ) ) ) ) - Max( ( Min( ( RCSe + CS ) ,( MUM * MUC ) ) * ( ( MUM * MLU ) - ( CS + RRSe ) ) ),Min( ( ( RMSe - MUM ) + Min( MUR ,MUM ) ) ,( ( MUM + RRSe ) / ( MLU * CS ) ) ) ) ) ),Max( Max( ( ( Min( ( RRSe + MLU ) ,Max( RMSe,RRSe ) ) - Max( ( RCSe - MUR ),( RMSe / RCSe ) ) ) - ( Max( ( MUM + RCSe ),( MLU / MLU ) ) / ( ( RMSe / MUM ) * Min( RMSe ,RRSe ) ) ) ),( Max( ( ( CS - RCSe ) * Min( RMSe ,RRSe ) ),Max( Min( CS ,RMSe ),( MUR * MUM ) ) ) + ( Max( Min( DS ,RRSe ),( RCSe - RRSe ) ) / ( ( RRSe - DS ) + ( MUC * MUR ) ) ) ) ),( ( Min( ( ( RRSe - RCSe ) + ( MUC + MUR ) ) ,Max( ( MLU * CS ),( MUC / RMSe ) ) ) * Min( ( ( CS + RMSe ) / ( MUR * RCSe ) ) ,( ( RCSe - CS ) - ( RMSe * DS ) ) ) ) * ( ( Min( ( MUC + MUR ) ,Min( RMSe ,DS ) ) + Max( ( RRSe / RMSe ),Min( MUR ,RRSe ) ) ) / ( Min( ( CS - MUM ) ,( RCSe - RCSe ) ) * Min( ( MLU + MUR ) ,Max( RCSe,MUR ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( MUR / DS ) / Max( MUC,MUM ) ) ,( ( CS + RRSe ) - ( MUM * MLU ) ) ) * Max( ( ( MUR - CS ) - Max( MUC,MUC ) ),( Max( MUM,RRSe ) * Max( CS,MLU ) ) ) ) - Max( ( Min( ( RCSe + RRSe ) ,( RMSe + RRSe ) ) / ( ( MUC - RRSe ) - Max( MUM,RRSe ) ) ),( Max( ( MUM * RMSe ),( MUC * RCSe ) ) * ( ( MLU * RMSe ) / Min( MUR ,RMSe ) ) ) ) ) / Max( Min( Min( ( Min( CS ,RCSe ) * Min( RMSe ,RCSe ) ) ,Min( ( MUR + MUR ) ,Min( MLU ,MUM ) ) ) ,( ( ( RCSe + RRSe ) * Min( DS ,CS ) ) - Max( Min( CS ,RRSe ),( CS + RRSe ) ) ) ),( Min( ( ( CS + MLU ) / Max( MUC,RCSe ) ) ,Min( ( MUM / RMSe ) ,( RCSe / DS ) ) ) / ( ( Max( RCSe,RRSe ) - ( MLU + DS ) ) * ( ( MUR / RMSe ) + ( MUM + MUR ) ) ) ) ) ) + Min( Max( ( ( Max( ( MUR / MLU ),( CS * MLU ) ) - Max( ( CS - MUR ),( MUR + MUR ) ) ) - Max( ( ( RMSe * MLU ) + ( MUC / MUC ) ),( Min( MLU ,MUR ) - ( DS - DS ) ) ) ),Max( ( ( ( CS * RRSe ) * Min( MLU ,MUC ) ) + Max( ( RCSe - MLU ),( RCSe - MUC ) ) ),( Min( Max( MUC,RCSe ) ,( RCSe + MUR ) ) + ( ( RRSe + MUM ) + Min( MUC ,MLU ) ) ) ) ) ,( ( Min( ( ( RMSe + CS ) * ( CS / MUM ) ) ,( ( RCSe / RRSe ) / ( MUR * RRSe ) ) ) / Min( ( ( MUM + MUC ) / Min( MUM ,CS ) ) ,Max( ( CS + RMSe ),( RMSe / RRSe ) ) ) ) * ( ( ( Max( MUR,RRSe ) / Max( DS,DS ) ) * ( ( MUR * MUR ) * Max( MLU,CS ) ) ) * ( Max( ( MUC / CS ),( DS / MLU ) ) / ( Max( RCSe,CS ) + ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU_Server ,( ( ( PN + ( PN * PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) )", "choosing": "Min( Max( DS,Max( CS,MUR ) ) ,( ( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const - Const ),( Const - CRS ) ) - ( FirstVNF_Mem_Server / ( MRS / FirstVNF_RAM ) ) )", "choosing": "( ( RMSe + MLU ) + ( ( MUR / RRSe ) * ( MUC + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Max( ( RMSe / MUM ),Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Min( Const ,CRS ) - Min( MRS ,MRS ) ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( ( RCSe + MUR ) + Min( MUM ,DS ) ) * Max( ( RMSe / MUM ),Min( RMSe ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Max( ( RMSe / MUM ),Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( ( Const * CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Max( ( RMSe / RRSe ),Max( RMSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,( Min( MRS ,ACS ) - ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUC ,RCSe ) / ( MUR / CS ) ) - ( ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) + ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,ACS ) + ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,RCSe ) / ( MUR / CS ) ) - ( ( MUM + RRSe ) + ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const - CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUC ),( MUR + MLU ) ) ,( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( ( FirstVNF_Mem / BR ) / Max( Min( Const ,ACS ),Min( ACS ,CRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6070686070686071, "obj2": 0.30320266028128173}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) )", "choosing": "( ( ( ( CS / RCSe ) / ( MUM - RMSe ) ) + ( ( RRSe - MUM ) - ( MLU + DS ) ) ) - Min( ( ( RRSe - CS ) * ( MUC * MLU ) ) ,Max( ( MUR / DS ),( RRSe / MLU ) ) ) )", "obj1": 0.659043659043659, "obj2": 0.21397313623492925}, {"determining": "( Max( PN,FirstVNF_RAM_Server ) - Max( CRS,RRS ) )", "choosing": "( ( Min( MLU ,MUC ) / MUC ) * ( RRSe / Max( MUC,RMSe ) ) )", "obj1": 0.6943866943866944, "obj2": 0.17744851806200024}, {"determining": "( Min( ( PN - MDR ) ,ACS ) + ( Max( ( RRS / AMS ),Max( FirstVNF_Mem,ARS ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,RCSe ) / RRSe ) - ( ( MUM + RRSe ) + ( DS - CS ) ) )", "obj1": 0.6444906444906445, "obj2": 0.23664765140684116}, {"determining": "( ( CRS * DDR ) * ( FirstVNF_CPU / Const ) )", "choosing": "( ( ( DS * MLU ) / MUM ) - ( RMSe + MUC ) )", "obj1": 0.8482328482328483, "obj2": 0.1025449602696118}, {"determining": "( Min( ( PN - ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ) ,ACS ) + ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( ( ( DS - RCSe ) - ( MUM + RCSe ) ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 0.6299376299376299, "obj2": 0.2647112153981777}, {"determining": "( ( Max( Min( BR ,CRS ),( AMS / Const ) ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * ( ( ( ( BR - MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) ) + Max( Min( MRS ,FirstVNF_CPU ),( MRS / Const ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + DS ) + ( ( MLU * MUR ) * RMSe ) )", "obj1": 0.8752598752598753, "obj2": 0.0936119364306974}, {"determining": "( Min( ACS ,ACS ) - ( Min( RRS ,MRS ) / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6133056133056133, "obj2": 0.29172188537218086}, {"determining": "( ( ( DDR * MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),( FirstVNF_Mem + ARS ) ) )", "choosing": "( ( ( RCSe + MUR ) + Min( MUR ,DS ) ) * ( MLU + DS ) )", "obj1": 0.8316008316008316, "obj2": 0.116352466330642}, {"determining": "( FirstVNF_RAM - ( MRS / MRS ) )", "choosing": "( ( Min( DS ,( ( MUC * CS ) / MUC ) ) * ( ( Min( MUR ,RMSe ) * ( DS / RMSe ) ) + Min( RCSe ,( RMSe * CS ) ) ) ) * Min( MUR ,RRSe ) )", "obj1": 0.9376299376299376, "obj2": 0.04683968904973378}, {"determining": "Min( ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ,Max( ARS,PN ) )", "choosing": "( Min( ( ( RRSe - CS ) * ( MUC * MLU ) ) ,Max( ( MUR / DS ),( RRSe / MLU ) ) ) / ( MUC / RMSe ) )", "obj1": 0.7172557172557172, "obj2": 0.17660086399544525}, {"determining": "( ( Max( ( BR + CRS ),( AMS / Const ) ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * ( ( ( Max( BR,MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) ) + Max( Min( MRS ,FirstVNF_CPU ),( MRS / Const ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + DS ) + ( ( MLU + RRSe ) * RMSe ) )", "obj1": 0.7941787941787942, "obj2": 0.14143416797544017}, {"determining": "( ( PN * MRS ) - Max( CRS,RRS ) )", "choosing": "( Min( RCSe ,MUC ) / ( MUC / RMSe ) )", "obj1": 0.7422037422037422, "obj2": 0.1595355664765511}, {"determining": "( ( ( PN + Max( FirstVNF_Mem_Server,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( CS * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.972972972972973, "obj2": 0.011327092185046048}, {"determining": "( ( Max( Min( BR ,CRS ),( AMS / Const ) ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( ( Min( ACS ,ACS ) - ( Min( RRS ,MRS ) / FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) * ( ( ( Max( BR,MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) ) + Max( Min( MRS ,FirstVNF_CPU ),( ARS / Const ) ) ) )", "choosing": "( Max( Min( MUC ,MUC ),DS ) + ( ( MLU + ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ) * RMSe ) )", "obj1": 0.7837837837837838, "obj2": 0.15756308548482467}, {"determining": "Min( ( CRS - ( ACS * DDR ) ) ,Max( ARS,PN ) )", "choosing": "( Max( CS,RMSe ) / ( MUC / ( ( Min( MUC ,MUC ) + RCSe ) + ( ( CS + MUR ) + RMSe ) ) ) )", "obj1": 0.6361746361746362, "obj2": 0.2548679525186334}, {"determining": "( ( Min( AMS ,( ( Min( AMS ,BR ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) ) ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.896049896049896, "obj2": 0.08805851789444114}, {"determining": "( ( ACS / FirstVNF_Mem ) * ( Min( AMS ,( ( Min( AMS ,BR ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) ) ) + Min( FirstVNF_RAM ,MRS ) ) )", "choosing": "( Min( RCSe ,DS ) / ( ( Min( MLU ,MUC ) / MUC ) * ( RRSe + Max( MUC,RMSe ) ) ) )", "obj1": 0.9272349272349273, "obj2": 0.060140547303842024}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) )", "choosing": "( ( Min( MUC ,MUC ) + RCSe ) + ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) )", "obj1": 0.738045738045738, "obj2": 0.16557827440006298}, {"determining": "( ( Min( AMS ,( ( Min( AMS ,BR ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) ) ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MLU ,MUC ) / MUC ) * ( RRSe + Max( MUC,RMSe ) ) )", "obj1": 0.8253638253638254, "obj2": 0.13918504065360734}, {"determining": "( ( Max( BR,MRS ) / Min( ACS ,FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( RCSe + DS ) ,Min( MUM ,DS ) ) * ( RRSe + MLU ) )", "obj1": 0.9501039501039501, "obj2": 0.03157157761134193}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( Min( BR ,CRS ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RCSe ) / ( MUM - RMSe ) ) + ( ( RRSe - MUM ) - ( MLU + DS ) ) ) - Min( ( ( RRSe - CS ) * ( MUC * MLU ) ) ,Max( ( MUR / ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) ),( RRSe / MLU ) ) ) )", "obj1": 0.9916839916839917, "obj2": 0.003794242207164221}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.9584199584199584, "obj2": 0.01957839177115624}, {"determining": "( ( Const / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( RCSe + MUR ) ,( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) ) ) * ( MLU + DS ) )", "obj1": 0.8274428274428275, "obj2": 0.13400831283909048}, {"determining": "( ( Max( BR,MRS ) / ( ACS - FirstVNF_CPU ) ) + Max( ( RRS / AMS ),Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Min( MUC ,MUC ) + RCSe ) + ( ( MLU + MUR ) - RMSe ) )", "obj1": 0.7879417879417879, "obj2": 0.15455959594427698}, {"determining": "( ( ( ( Min( AMS ,BR ) + Min( FirstVNF_RAM ,MRS ) ) + Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) ) * FirstVNF_RAM_Server ) - Max( CRS,RRS ) )", "choosing": "( ( Min( MUC ,MUC ) + RCSe ) + ( RRSe * RMSe ) )", "obj1": 0.9022869022869023, "obj2": 0.07687339166669441}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( Max( ( FirstVNF_RAM - RRS ),( AMS * FirstVNF_Mem ) ) / ( Min( MRS ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / Max( Const,DDR ) ) / ( ( BR / ACS ) - ( MRS / FirstVNF_RAM ) ) ) ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( FirstVNF_CPU ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( ( ( MLU - MUM ) / Max( CS,RCSe ) ) / ( ( MUC / MLU ) + Max( MUM,MUR ) ) ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9168399168399168, "obj2": 0.06754687194616055}, {"determining": "( ( ( DDR * MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),( FirstVNF_Mem + ARS ) ) )", "choosing": "( ( ( RCSe + MUR ) + Min( MUR ,DS ) ) * ( MLU + DS ) )", "obj1": 0.9542619542619543, "obj2": 0.02744221150934389}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) - ( MRS + DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * RRSe ) * ( RRSe - ( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6091476091476091, "obj2": 0.29665417521793075}, {"determining": "( ( Min( AMS ,BR ) + Min( FirstVNF_RAM ,MRS ) ) * Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MLU ,RCSe ) / MUC ) * ( RRSe + Max( MUC,DS ) ) )", "obj1": 0.9085239085239085, "obj2": 0.07529986487374857}, {"determining": "( ( Min( AMS ,BR ) - Min( FirstVNF_RAM ,MRS ) ) * Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Min( AMS ,Max( ARS,PN ) ) ) )", "choosing": "( ( Min( RCSe ,RCSe ) / RCSe ) * ( RRSe + Max( MUC,DS ) ) )", "obj1": 0.9126819126819127, "obj2": 0.07121527932890184}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( Max( ( FirstVNF_RAM - RRS ),( AMS * FirstVNF_Mem ) ) / ( Min( MRS ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / Max( Const,DDR ) ) / ( ( BR / ACS ) - ( MRS / FirstVNF_RAM ) ) ) ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( FirstVNF_CPU ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * ( Min( ( ( ( MDR + RRS ) / ( Const - FirstVNF_RAM ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) * Max( ARS,MRS ) ) ) ,Min( ( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_Mem - PN ) ) ,( Max( FirstVNF_RAM,PN ) - ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) - Max( ( ( ( BR * FirstVNF_CPU_Server ) / Max( FirstVNF_CPU_Server,BR ) ) * Min( ( ACS / DDR ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ),( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * ( ( PN / RRS ) * ( MDR * ACS ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( ( ( RRSe - CS ) / Min( MLU ,MUM ) ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( ( ( MLU - MUM ) / Max( CS,RCSe ) ) / ( ( MUC / MLU ) + Max( MUM,MUR ) ) ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9106029106029107, "obj2": 0.07192569677862144}, {"determining": "( ( MRS - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( MUC - MUM ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - Const ) ,( ARS * PN ) )", "choosing": "( Max( CS,MUM ) / ( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_RAM,FirstVNF_RAM ) ) * ( ( Const * CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Max( ( RMSe / RRSe ),Max( RMSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ,Min( ( DDR / AMS ) ,( BR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,MUC ) * Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( AMS - FirstVNF_RAM ),BR ) ,( PN - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( Max( ( CS + RRSe ),( DS * RCSe ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) ),( Max( ( DS * DS ),( MLU + RRSe ) ) + Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - MDR ) ,ACS ) + ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( BR ,CRS ),( AMS / Const ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) * ( ( ( DDR - PN ) - ( RRS - FirstVNF_Mem_Server ) ) + Max( Min( MRS ,FirstVNF_CPU ),( MRS / Const ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + CS ) + Min( ( MLU + MUR ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,Max( ARS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MUR ) - ( ( DS - RCSe ) - ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( Max( DS,Max( CS,RMSe ) ) ,( MUC + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ( MDR * DDR ) ) ,Max( ARS,PN ) )", "choosing": "( Max( CS,RMSe ) / ( MUC / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - Const ) ,Max( ARS,PN ) )", "choosing": "( Min( RCSe ,DS ) / ( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) )", "choosing": "( Max( CS,RMSe ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM / FirstVNF_RAM ) )", "choosing": "( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ,Min( ( DDR / AMS ) ,( BR - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUR / MLU ) ) ,( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ( Min( ( ( FirstVNF_RAM - RRS ) - Min( BR ,CRS ) ) ,Max( ( MDR - MDR ),( FirstVNF_CPU_Server / MRS ) ) ) + ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( FirstVNF_CPU ,RRS ) ) - Min( ( MDR + DDR ) ,Min( MDR ,FirstVNF_CPU ) ) ) ) ,( ( Max( Min( FirstVNF_CPU_Server ,MDR ),( FirstVNF_RAM - FirstVNF_RAM ) ) * ( ( FirstVNF_Mem_Server - ACS ) + Max( FirstVNF_Mem,ACS ) ) ) + Min( ( Min( CRS ,MDR ) + ( BR + FirstVNF_RAM ) ) ,Max( ( ACS + CRS ),( ACS - AMS ) ) ) ) ) ,( ( Min( ( Min( BR ,CRS ) * ( FirstVNF_Mem * RRS ) ) ,( Max( FirstVNF_Mem,DDR ) + ( DDR - FirstVNF_CPU_Server ) ) ) * ( ( ( Const / FirstVNF_RAM ) - ( FirstVNF_CPU * PN ) ) + ( ( ARS - FirstVNF_RAM ) / ( ARS / FirstVNF_CPU ) ) ) ) - ( ( ( Min( BR ,FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_CPU ) ) * ( ( MRS * FirstVNF_RAM ) * ( BR + ACS ) ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) * ( BR / FirstVNF_Mem_Server ) ) - ( ( MRS + FirstVNF_CPU ) / Min( RRS ,ARS ) ) ) ) ) ) * ( ( ( Max( ( ( ACS / FirstVNF_RAM ) / ( MDR * FirstVNF_CPU_Server ) ),Min( Max( ACS,DDR ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) - ( ( ( DDR - Const ) * Max( BR,PN ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) + ( ( ( Min( FirstVNF_RAM_Server ,ACS ) + ( BR / ARS ) ) - Min( ( PN + MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) + ( ( Max( MDR,FirstVNF_CPU ) - Min( FirstVNF_Mem ,AMS ) ) * ( ( MDR + Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ) ) ) - ( Min( ( Min( ( ARS + AMS ) ,Min( AMS ,PN ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( ARS,FirstVNF_CPU_Server ) ) ) ,( ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) * Min( ( ACS + ARS ) ,Max( PN,DDR ) ) ) ) + ( ( Max( ( FirstVNF_Mem_Server + MDR ),( ACS - RRS ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) + ( Max( Max( CRS,Const ),( ACS + Const ) ) + ( ( FirstVNF_RAM_Server * ARS ) - ( FirstVNF_RAM_Server + MRS ) ) ) ) ) ) ) - ( ( ( Min( ( Min( ( ACS / FirstVNF_CPU_Server ) ,( Const - DDR ) ) * ( Max( FirstVNF_CPU_Server,BR ) * ( MRS * PN ) ) ) ,( Max( ( FirstVNF_Mem / FirstVNF_Mem ),( Const / PN ) ) + ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) * ( Min( ( Max( ARS,PN ) / ( ACS / MDR ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( FirstVNF_RAM / DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / DDR ) / Min( DDR ,FirstVNF_RAM ) ) ,( Min( MDR ,BR ) - ( AMS / FirstVNF_Mem ) ) ) ) ) + Max( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - ( MRS + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( PN * RRS ) ) ),Max( Min( ( RRS - MDR ) ,( RRS / MRS ) ),( ( MRS / RRS ) / Max( Const,CRS ) ) ) ),Min( ( Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),( BR * AMS ) ) + Max( ( ARS / PN ),Min( PN ,FirstVNF_RAM ) ) ) ,( ( ( ACS * FirstVNF_CPU ) / ( ACS / DDR ) ) / ( ( ARS / RRS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) + Min( ( Min( ( Max( ( CRS - DDR ),( FirstVNF_Mem * DDR ) ) * Min( ( ARS * DDR ) ,( AMS + MDR ) ) ) ,Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) * Min( AMS ,Const ) ),( Max( AMS,PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) * ( ( ( ( CRS * FirstVNF_RAM ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * ( ( CRS - Const ) / ( AMS / CRS ) ) ) / Max( ( Max( PN,FirstVNF_Mem_Server ) / ( ARS / Const ) ),( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) / ( MRS + AMS ) ) ) ) ) ,( Max( ( Max( Min( DDR ,FirstVNF_CPU ),( PN + RRS ) ) / ( ( FirstVNF_CPU_Server + ARS ) / ( FirstVNF_RAM * CRS ) ) ),( Min( ( RRS * DDR ) ,( FirstVNF_RAM / MDR ) ) - ( Min( CRS ,CRS ) / Min( AMS ,ARS ) ) ) ) + Min( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ARS + AMS ) ) / ( ( CRS * RRS ) - ( FirstVNF_CPU_Server + ARS ) ) ) ,Min( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( BR + FirstVNF_RAM_Server ) ) ,( ( AMS + DDR ) - Max( AMS,ACS ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( Max( ( ( ( MUR / RRSe ) * ( MUM / RCSe ) ) + ( Min( RCSe ,RRSe ) * Max( MLU,MUC ) ) ),Max( Max( Max( RMSe,MLU ),Min( RRSe ,MUR ) ),Min( Max( DS,MLU ) ,( RMSe / CS ) ) ) ) * ( Max( ( Max( MUM,MUM ) + ( MUC / RCSe ) ),( ( RCSe / RRSe ) * ( RRSe + RRSe ) ) ) - ( Max( Max( MUR,RCSe ),Max( MUM,RRSe ) ) + Min( Max( MUR,MLU ) ,( RMSe - RMSe ) ) ) ) ) + ( ( Min( Max( ( MLU * DS ),( MLU * MUM ) ) ,( ( RCSe / MUC ) - Min( MUM ,MLU ) ) ) - ( ( ( MUM / MUM ) - ( MUC / MUR ) ) + Min( ( RMSe / CS ) ,Min( RRSe ,MUM ) ) ) ) - Max( ( Min( ( RCSe + CS ) ,( MUM * MUC ) ) * ( ( MUM * MLU ) - ( CS + RRSe ) ) ),Min( ( ( RMSe - MUM ) + Min( MUR ,MUM ) ) ,( ( MUM + RRSe ) / ( MLU * CS ) ) ) ) ) ),Max( Max( ( ( Min( ( RRSe + MLU ) ,Max( RMSe,RRSe ) ) - Max( ( RCSe - MUR ),( RMSe / RCSe ) ) ) - ( Max( ( MUM + RCSe ),( MLU / MLU ) ) / ( ( RMSe / MUM ) * Min( RMSe ,RRSe ) ) ) ),( Max( ( ( CS - RCSe ) * Min( RMSe ,RRSe ) ),Max( Min( CS ,RMSe ),( MUR * MUM ) ) ) + ( Max( Min( DS ,RRSe ),( RCSe - RRSe ) ) / ( ( RRSe - DS ) + ( MUC * MUR ) ) ) ) ),( ( Min( ( ( RRSe - RCSe ) + ( MUC + MUR ) ) ,Max( ( MLU * CS ),( MUC / RMSe ) ) ) * Min( ( ( CS + RMSe ) / ( MUR * RCSe ) ) ,( ( RCSe - CS ) - ( RMSe * DS ) ) ) ) * ( ( Min( ( MUC + MUR ) ,Min( RMSe ,DS ) ) + Max( ( RRSe / RMSe ),Min( MUR ,RRSe ) ) ) / ( Min( ( CS - MUM ) ,( RCSe - RCSe ) ) * Min( ( MLU + MUR ) ,Max( RCSe,MUR ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( MUR / DS ) / Max( MUC,MUM ) ) ,( ( CS + RRSe ) - ( MUM * MLU ) ) ) * Max( ( ( MUR - CS ) - Max( MUC,MUC ) ),( Max( MUM,RRSe ) * Max( CS,MLU ) ) ) ) - Max( ( Min( ( RCSe + RRSe ) ,( RMSe + RRSe ) ) / ( ( MUC - RRSe ) - Max( MUM,RRSe ) ) ),( Max( ( MUM * RMSe ),( MUC * RCSe ) ) * ( ( MLU * RMSe ) / Min( MUR ,RMSe ) ) ) ) ) / Max( Min( Min( ( Min( CS ,RCSe ) * Min( RMSe ,RCSe ) ) ,Min( ( MUR + MUR ) ,Min( MLU ,MUM ) ) ) ,( ( ( RCSe + RRSe ) * Min( DS ,CS ) ) - Max( Min( CS ,RRSe ),( CS + RRSe ) ) ) ),( Min( ( ( CS + MLU ) / Max( MUC,RCSe ) ) ,Min( ( MUM / RMSe ) ,( RCSe / DS ) ) ) / ( ( Max( RCSe,RRSe ) - ( MLU + DS ) ) * ( ( MUR / RMSe ) + ( MUM + MUR ) ) ) ) ) ) + Min( Max( ( ( Max( ( MUR / MLU ),( CS * MLU ) ) - Max( ( CS - MUR ),( MUR + MUR ) ) ) - Max( ( ( RMSe * MLU ) + ( MUC / MUC ) ),( Min( MLU ,MUR ) - ( DS - DS ) ) ) ),Max( ( ( ( CS * RRSe ) * Min( MLU ,MUC ) ) + Max( ( RCSe - MLU ),( RCSe - MUC ) ) ),( Min( Max( MUC,RCSe ) ,( RCSe + MUR ) ) + ( ( RRSe + MUM ) + Min( MUC ,MLU ) ) ) ) ) ,( ( Min( ( ( RMSe + CS ) * ( CS / MUM ) ) ,( ( RCSe / RRSe ) / ( MUR * RRSe ) ) ) / Min( ( ( MUM + MUC ) / Min( MUM ,CS ) ) ,Max( ( CS + RMSe ),( RMSe / RRSe ) ) ) ) * ( ( ( Max( MUR,RRSe ) / Max( DS,DS ) ) * ( ( MUR * MUR ) * Max( MLU,CS ) ) ) * ( Max( ( MUC / CS ),( DS / MLU ) ) / ( Max( RCSe,CS ) + ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU_Server ,( ( ( PN + ( PN * PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) )", "choosing": "Min( Max( DS,Max( CS,MUR ) ) ,( ( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,( ( RCSe / RRSe ) - Min( RRSe ,RRSe ) ) ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const - CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUC ),( MUR + MLU ) ) ,( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6070686070686071, "obj2": 0.30320266028128173}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "Min( Max( DS,Max( CS,MUR ) ) ,( ( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe / MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) + Max( RCSe,RMSe ) ) ) ) + MUC ) )", "obj1": 0.6444906444906445, "obj2": 0.2104597719271577}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) - ( MRS + DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * RRSe ) * ( RRSe - ( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6777546777546778, "obj2": 0.1981194733150376}, {"determining": "( ( Max( BR,MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + ( ( RRS * AMS ) * Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe - ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( RRSe - ( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.8607068607068608, "obj2": 0.08789121688120759}, {"determining": "Min( ( CRS - ( ACS * DDR ) ) ,Max( ARS,PN ) )", "choosing": "( Max( CS,RMSe ) / ( MUC / ( ( Min( MUC ,MUC ) + RCSe ) + ( ( CS + MUR ) + RMSe ) ) ) )", "obj1": 0.6361746361746362, "obj2": 0.2548679525186334}, {"determining": "( ( Max( ( BR + CRS ),( AMS / Const ) ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * ( ( ( Max( BR,MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) ) + Max( Min( MRS ,FirstVNF_CPU ),( MRS / Const ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + DS ) + ( ( MLU + RRSe ) * RMSe ) )", "obj1": 0.7837837837837838, "obj2": 0.15255254156996076}, {"determining": "( ( Max( Const,MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Max( ( ( Max( ( ( ( MUR / RRSe ) * ( MUM / RCSe ) ) + ( Min( RCSe ,RRSe ) * Max( MLU,MUC ) ) ),Max( Max( Max( RMSe,MLU ),Min( RRSe ,MUR ) ),Min( Max( DS,MLU ) ,( RMSe / CS ) ) ) ) * ( Max( ( Max( MUM,MUM ) + ( MUC / RCSe ) ),( ( RCSe / RRSe ) * ( RRSe + RRSe ) ) ) - ( Max( Max( MUR,RCSe ),Max( MUM,RRSe ) ) + Min( Min( MUR ,MLU ) ,( RMSe - RMSe ) ) ) ) ) + ( ( Min( Max( ( MLU * DS ),( MLU * MUM ) ) ,( ( RCSe / MUC ) - Min( MUM ,MLU ) ) ) - ( ( ( MUM / MUM ) - ( MUC / MUR ) ) + Min( ( RMSe / CS ) ,Min( RRSe ,MUM ) ) ) ) - Max( ( Min( ( RCSe + CS ) ,( MUM * MUC ) ) * ( ( MUM * MLU ) - ( CS + RRSe ) ) ),Min( ( ( RMSe - MUM ) + Min( MUR ,MUM ) ) ,( ( MUM + RRSe ) / ( MLU * CS ) ) ) ) ) ),Max( Max( ( ( Min( ( RRSe + MLU ) ,Max( RMSe,RRSe ) ) - Max( ( RCSe - MUR ),( RMSe / RCSe ) ) ) - ( Max( ( MUM + RCSe ),( MLU / MLU ) ) / ( ( RMSe / MUM ) * Min( RMSe ,RRSe ) ) ) ),( Max( ( ( CS - RCSe ) * Min( RMSe ,RRSe ) ),Max( Min( CS ,RMSe ),( MUR * MUM ) ) ) + ( Max( Min( DS ,RRSe ),( RCSe - RRSe ) ) / ( ( RRSe - DS ) + ( MUC * MUR ) ) ) ) ),( ( Min( ( ( RRSe - RCSe ) + ( MUC + MUR ) ) ,Max( ( MLU * CS ),( MUC / RMSe ) ) ) * Min( ( ( CS + RMSe ) / ( MUR * RCSe ) ) ,( ( RCSe - CS ) - ( RMSe * DS ) ) ) ) * ( ( Min( ( MUC + MUR ) ,Min( RMSe ,DS ) ) + Max( ( RRSe / RMSe ),Min( MUR ,RRSe ) ) ) / ( Min( ( CS - MUM ) ,( RCSe - RCSe ) ) * Min( ( MLU + MUR ) ,Max( RCSe,MUR ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( MUR / DS ) / Max( MUC,MUM ) ) ,( ( CS + RRSe ) - ( MUM * MLU ) ) ) * Max( ( ( MUR - CS ) - Max( MUC,MUC ) ),( Max( MUM,RRSe ) * Max( CS,MLU ) ) ) ) - Max( ( Min( ( RCSe + RRSe ) ,( RMSe + RRSe ) ) / ( ( MUC - RRSe ) - Max( MUM,RRSe ) ) ),( Max( ( MUM * RMSe ),( MUC * RCSe ) ) * ( ( MLU * RMSe ) / Min( MUR ,RMSe ) ) ) ) ) / Max( Min( Min( ( Min( CS ,RCSe ) * Min( RMSe ,RCSe ) ) ,Min( ( MUR + MUR ) ,Min( MLU ,MUM ) ) ) ,( ( ( RCSe + RRSe ) * Min( DS ,CS ) ) - Max( Min( CS ,RRSe ),( CS + RRSe ) ) ) ),( Min( ( ( CS + MLU ) / Max( MUC,RCSe ) ) ,Min( ( MUM / RMSe ) ,( RCSe / DS ) ) ) / ( ( Max( RCSe,RRSe ) - ( MLU + DS ) ) * ( ( MUR / RMSe ) + ( MUM + MUR ) ) ) ) ) ) + Min( Max( ( ( Max( ( MUR / MLU ),( CS * MLU ) ) - Max( ( CS - MUR ),( MUR + MUR ) ) ) - Max( ( ( RMSe * MLU ) + ( MUC / MUC ) ),( Min( MLU ,MUR ) - ( DS - DS ) ) ) ),Max( ( ( ( CS * RRSe ) * Min( MLU ,MUC ) ) + Max( ( RCSe - MLU ),( RCSe - MUC ) ) ),( Min( Max( MUC,RCSe ) ,( RCSe + MUR ) ) + ( ( RRSe + MUM ) + Min( MUC ,MLU ) ) ) ) ) ,( ( Min( ( ( RMSe + CS ) * ( CS / MUM ) ) ,( ( RCSe / RRSe ) / ( MUR * RRSe ) ) ) / Min( ( ( MUM + MUC ) / Min( MUM ,CS ) ) ,Max( ( CS + RMSe ),( RMSe / RRSe ) ) ) ) * ( ( ( Max( MUR,RRSe ) / Max( DS,DS ) ) * ( ( MUR * MUR ) * Max( MLU,CS ) ) ) * ( Max( ( MUC / CS ),( DS / MLU ) ) / ( Max( RCSe,CS ) + ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.896049896049896, "obj2": 0.07104695576992959}, {"determining": "( Max( PN,FirstVNF_RAM_Server ) - Max( CRS,RRS ) )", "choosing": "( ( Min( MLU ,MUC ) / MUC ) * ( RRSe / Max( MUC,RMSe ) ) )", "obj1": 0.6943866943866944, "obj2": 0.17744851806200024}, {"determining": "( ( CRS * DDR ) * ( FirstVNF_CPU / Const ) )", "choosing": "( ( ( DS * MLU ) / MUM ) - ( RMSe + MUC ) )", "obj1": 0.8482328482328483, "obj2": 0.1025449602696118}, {"determining": "( ( PN * MRS ) - Max( CRS,RRS ) )", "choosing": "( Min( RCSe ,MUC ) / ( MUC / RMSe ) )", "obj1": 0.7422037422037422, "obj2": 0.1595355664765511}, {"determining": "( ( ( DDR * MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),( FirstVNF_Mem + ARS ) ) )", "choosing": "( ( ( RCSe + MUR ) + Min( MUR ,DS ) ) * ( MLU + DS ) )", "obj1": 0.8316008316008316, "obj2": 0.116352466330642}, {"determining": "( ( Max( Min( BR ,CRS ),( AMS / Const ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * ( ( ( DDR - PN ) - ( RRS - FirstVNF_Mem_Server ) ) + Max( AMS,( MRS / Const ) ) ) )", "choosing": "( Min( Max( MUR,CS ) ,( MUC - DS ) ) + ( ( MLU + MUR ) * RMSe ) )", "obj1": 0.6257796257796258, "obj2": 0.27759206901546396}, {"determining": "( ( Max( BR,MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + ( MRS + ACS ) )", "choosing": "( Min( RCSe ,Min( RMSe ,DS ) ) * ( RRSe + MLU ) )", "obj1": 0.920997920997921, "obj2": 0.05491623325920619}, {"determining": "( ( Const / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( RCSe + MUR ) ,( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) ) ) * ( MLU + DS ) )", "obj1": 0.8274428274428275, "obj2": 0.13400831283909048}, {"determining": "( Min( ACS ,ACS ) - ( Min( RRS ,MRS ) / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6133056133056133, "obj2": 0.29172188537218086}, {"determining": "( Min( ( PN - ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ) ,ACS ) + ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( ( ( DS - RCSe ) - ( MUM + RCSe ) ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 0.6299376299376299, "obj2": 0.2647112153981777}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) )", "choosing": "( ( Min( MUC ,MUC ) + RCSe ) + ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) )", "obj1": 0.738045738045738, "obj2": 0.16557827440006298}, {"determining": "( ( Max( ( BR + CRS ),( AMS / Const ) ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * ( ( ( Max( BR,MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) ) + Max( Min( MRS ,FirstVNF_CPU ),( MRS / Const ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + DS ) + ( ( MLU + RRSe ) * RMSe ) )", "obj1": 0.7941787941787942, "obj2": 0.14143416797544017}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.9584199584199584, "obj2": 0.01957839177115624}, {"determining": "( FirstVNF_RAM - ( MRS / MRS ) )", "choosing": "( ( Min( DS ,( ( MUC * CS ) / MUC ) ) * ( ( Min( MUR ,RMSe ) * ( DS / RMSe ) ) + Min( RCSe ,( RMSe * CS ) ) ) ) * Min( MUR ,RRSe ) )", "obj1": 0.9376299376299376, "obj2": 0.04518506799999553}, {"determining": "( Min( ACS ,ACS ) - ( MRS * DDR ) )", "choosing": "( Min( ( RCSe + MUR ) ,Min( MUM ,DS ) ) * ( RRSe - MLU ) )", "obj1": 0.7193347193347194, "obj2": 0.1716303647859814}, {"determining": "( ( Max( BR,MRS ) / Min( ACS ,FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( RCSe + DS ) ,Min( MUM ,DS ) ) * ( RRSe + MLU ) )", "obj1": 0.9501039501039501, "obj2": 0.03157157761134193}, {"determining": "Min( ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ,Max( ARS,PN ) )", "choosing": "( Min( ( ( RRSe - CS ) * ( MUC * MLU ) ) ,Max( ( MUR / DS ),( RRSe / MLU ) ) ) / ( MUC / RMSe ) )", "obj1": 0.7172557172557172, "obj2": 0.17660086399544525}, {"determining": "( FirstVNF_RAM - ( MRS / MRS ) )", "choosing": "( ( Min( MUC ,MUC ) + DS ) + Min( ( MLU + ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ) ,RMSe ) )", "obj1": 0.9417879417879418, "obj2": 0.04332510404145677}, {"determining": "( ( Max( Min( BR ,CRS ),( AMS / Const ) ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( ( Min( ACS ,ACS ) - ( Min( RRS ,MRS ) / FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) * ( ( ( Max( BR,MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) ) + Max( Min( MRS ,FirstVNF_CPU ),( MRS / Const ) ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.817047817047817, "obj2": 0.137508902413285}, {"determining": "( ( Const / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Min( MUC ,MUC ) + CS ) + ( ( MUC + MUR ) * RMSe ) )", "obj1": 0.8045738045738046, "obj2": 0.13929447247000787}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - Min( FirstVNF_CPU_Server ,( ( ( PN + ( PN * PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( FirstVNF_CPU ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( ( ( MLU - MUM ) / Max( CS,RCSe ) ) / ( ( MUC / MLU ) + Max( MUM,MUR ) ) ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9708939708939709, "obj2": 0.01174686416117615}, {"determining": "( ( ( DDR * MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),( FirstVNF_Mem + ARS ) ) )", "choosing": "( ( ( RCSe + MUR ) + Min( MUR ,DS ) ) * ( MLU + DS ) )", "obj1": 0.9542619542619543, "obj2": 0.02744221150934389}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) - ( MRS + DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * RRSe ) * ( RRSe - ( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6091476091476091, "obj2": 0.29665417521793075}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( Max( ( FirstVNF_RAM - RRS ),( AMS * FirstVNF_Mem ) ) / ( Min( MRS ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / Max( Const,DDR ) ) / ( ( BR / ACS ) - ( MRS / FirstVNF_RAM ) ) ) ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( FirstVNF_CPU ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( ( ( MLU - MUM ) / Max( CS,RCSe ) ) / ( ( MUC / MLU ) + Max( MUM,MUR ) ) ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9168399168399168, "obj2": 0.06754687194616055}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( Min( BR ,CRS ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + RCSe ) + ( RRSe * RMSe ) )", "obj1": 0.9916839916839917, "obj2": 0.00329868215226364}, {"determining": "( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "Min( Min( ( Max( RMSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.9792099792099792, "obj2": 0.008744809602986537}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( RRS ,MRS ) / FirstVNF_CPU ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RCSe ) / ( MUM - RMSe ) ) + ( ( RRSe - MUM ) - ( MLU + DS ) ) ) - Min( ( ( RRSe - CS ) * ( MUC * MLU ) ) ,Max( ( MUR / ( ( ( MUM * MUR ) * Min( MUC ,MUC ) ) * RMSe ) ),( RRSe / MLU ) ) ) )", "obj1": 0.9875259875259875, "obj2": 0.005691363310746331}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( Max( ( FirstVNF_RAM - RRS ),( AMS * FirstVNF_Mem ) ) / ( Min( MRS ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / Max( Const,DDR ) ) / ( ( BR / ACS ) - ( MRS / FirstVNF_RAM ) ) ) ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( FirstVNF_CPU ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( ( ( MLU - MUM ) / Max( CS,RCSe ) ) / ( ( MUC / MLU ) + Max( MUM,MUR ) ) ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9085239085239085, "obj2": 0.07041590410305427}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( Max( ( FirstVNF_RAM - RRS ),( AMS * FirstVNF_Mem ) ) / ( ( MRS / FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * FirstVNF_RAM_Server ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( FirstVNF_CPU ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / Max( MLU,DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.972972972972973, "obj2": 0.00960132136425096}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( Max( ( FirstVNF_RAM - RRS ),( AMS * FirstVNF_Mem ) ) / ( Min( MRS ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / Max( Const,DDR ) ) / ( ( BR / ACS ) - ( MRS / FirstVNF_RAM ) ) ) ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( FirstVNF_CPU ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( ( RRSe / DS ) / ( RCSe * CS ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( ( ( MLU - MUM ) / Max( CS,RCSe ) ) / ( ( MUC / MLU ) + Max( MUM,MUR ) ) ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9126819126819127, "obj2": 0.07000014540284988}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( ( PN * FirstVNF_RAM_Server ) / ( Min( MRS ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / Max( Const,DDR ) ) / ( ( BR / ACS ) - ( MRS / FirstVNF_RAM ) ) ) ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( FirstVNF_CPU ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( DS / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( ( ( MLU - MUM ) / Max( CS,RCSe ) ) / ( ( MUC / MLU ) + Max( MUM,MUR ) ) ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9168399168399168, "obj2": 0.06754687194616055}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( ( FirstVNF_Mem / BR ) / Max( Min( Const ,ACS ),Min( ACS ,CRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( MUC - MUM ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - Const ) ,( ARS * PN ) )", "choosing": "( Max( CS,MUM ) / ( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_RAM,FirstVNF_RAM ) ) * ( ( Const * CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Max( ( RMSe / RRSe ),Max( RMSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ,Min( ( DDR / AMS ) ,( BR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,MUC ) * Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( AMS - FirstVNF_RAM ),BR ) ,( PN - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( Max( ( CS + RRSe ),( DS * RCSe ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) ),( Max( ( DS * DS ),( MLU + RRSe ) ) + Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - MDR ) ,ACS ) + ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( BR ,CRS ),( AMS / Const ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) * ( ( ( DDR - PN ) - ( RRS - FirstVNF_Mem_Server ) ) + Max( Min( MRS ,FirstVNF_CPU ),( MRS / Const ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + CS ) + Min( ( MLU + MUR ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,Max( ARS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MUR ) - ( ( DS - RCSe ) - ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( Max( DS,Max( CS,RMSe ) ) ,( MUC + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ( MDR * DDR ) ) ,Max( ARS,PN ) )", "choosing": "( Max( CS,RMSe ) / ( MUC / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - Const ) ,Max( ARS,PN ) )", "choosing": "( Min( RCSe ,DS ) / ( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Min( Max( ( BR - MRS ),BR ) ,( PN - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) ,Max( ( RRSe * DS ),( MUR * DS ) ) ),( Max( Max( DS,DS ),( MLU + RRSe ) ) + Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,( ( RCSe / RRSe ) - Min( RRSe ,RRSe ) ) ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6070686070686071, "obj2": 0.30320266028128173}, {"determining": "( ( ( DDR * MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),( FirstVNF_Mem + ARS ) ) )", "choosing": "( ( ( RCSe + MUR ) + Min( MUR ,DS ) ) * ( MLU + DS ) )", "obj1": 0.8316008316008316, "obj2": 0.116352466330642}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) )", "choosing": "( Min( ( RCSe + MUR ) ,Min( MUR ,DS ) ) * ( MLU + DS ) )", "obj1": 0.7422037422037422, "obj2": 0.13091820503230894}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "Min( Max( DS,Max( CS,MUR ) ) ,( ( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe / MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) + Max( RCSe,RMSe ) ) ) ) + MUC ) )", "obj1": 0.6444906444906445, "obj2": 0.2104597719271577}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( RMSe + MUR ) / DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.8731808731808732, "obj2": 0.05033047199216135}, {"determining": "( ( Max( Const,MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),Max( FirstVNF_Mem,ARS ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUR / MLU ) ) ,( DS * MLU ) )", "obj1": 0.9376299376299376, "obj2": 0.036585328039586085}, {"determining": "Min( ( CRS - ( ACS * DDR ) ) ,Max( ARS,PN ) )", "choosing": "( Max( CS,RMSe ) / ( MUC / ( ( Min( MUC ,MUC ) + RCSe ) + ( ( CS + MUR ) + RMSe ) ) ) )", "obj1": 0.6361746361746362, "obj2": 0.2548679525186334}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) - ( MRS + DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * RRSe ) * ( RRSe - ( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6777546777546778, "obj2": 0.1981194733150376}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) )", "choosing": "( ( Min( MUC ,MUC ) + RCSe ) + ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) )", "obj1": 0.738045738045738, "obj2": 0.16557827440006298}, {"determining": "( ( Min( ACS ,ACS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( RCSe + MUR ) ,( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Max( RRSe,( CS - MUR ) ) ) ) * ( MLU + DS ) )", "obj1": 0.8482328482328483, "obj2": 0.08798160771511428}, {"determining": "( ( ( PN + Max( PN,PN ) ) - ( ( FirstVNF_RAM_Server - Const ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + DS ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( Min( RCSe ,DS ) / ( MUC / RMSe ) ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.8648648648648649, "obj2": 0.06480222307954539}, {"determining": "( ( Max( Min( BR ,CRS ),( AMS / Const ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * ( ( ( DDR - PN ) - ( RRS - FirstVNF_Mem_Server ) ) + Max( AMS,( MRS / Const ) ) ) )", "choosing": "( Min( Max( MUR,CS ) ,( MUC - DS ) ) + ( ( MLU + MUR ) * RMSe ) )", "obj1": 0.6257796257796258, "obj2": 0.27759206901546396}, {"determining": "( ( Max( BR,MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + ( ( RRS * AMS ) * Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe - ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( RRSe - ( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.8607068607068608, "obj2": 0.08789121688120759}, {"determining": "( ( Max( CRS,RRS ) / ( ACS - FirstVNF_RAM_Server ) ) + ( MRS + ACS ) )", "choosing": "( Min( RCSe ,Min( RMSe ,( ( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) ) + MUC ) ) ) * ( RRSe + MLU ) )", "obj1": 0.6902286902286903, "obj2": 0.18276333995384325}, {"determining": "( Min( ACS ,ACS ) - ( Min( RRS ,MRS ) / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6133056133056133, "obj2": 0.29172188537218086}, {"determining": "( Min( ( PN - ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ) ,ACS ) + ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( ( ( DS - RCSe ) - ( MUM + RCSe ) ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 0.6299376299376299, "obj2": 0.2647112153981777}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.9584199584199584, "obj2": 0.01957839177115624}, {"determining": "( Min( ACS ,ACS ) - ( MRS * DDR ) )", "choosing": "( Min( ( RCSe + MUR ) ,Min( MUM ,DS ) ) * ( RRSe - MLU ) )", "obj1": 0.7193347193347194, "obj2": 0.1716303647859814}, {"determining": "( Max( PN,FirstVNF_RAM_Server ) - Max( CRS,RRS ) )", "choosing": "( ( Min( MLU ,MUC ) / MUC ) * ( RRSe / Max( MUC,RMSe ) ) )", "obj1": 0.6943866943866944, "obj2": 0.17744851806200024}, {"determining": "Min( ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ,Max( ARS,PN ) )", "choosing": "( Min( ( ( RRSe - CS ) * ( MUC * MLU ) ) ,Max( ( MUR / DS ),( RRSe / MLU ) ) ) / ( MUC / RMSe ) )", "obj1": 0.7172557172557172, "obj2": 0.17660086399544525}, {"determining": "( ( Max( FirstVNF_RAM,MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + ( MRS + ACS ) )", "choosing": "( Min( RCSe ,Min( RMSe ,DS ) ) * ( RRSe + MLU ) )", "obj1": 0.9501039501039501, "obj2": 0.02993675756358008}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( Max( ( FirstVNF_RAM - RRS ),( AMS * FirstVNF_Mem ) ) / ( Min( MRS ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * FirstVNF_RAM_Server ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( DDR ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * Max( MUM,RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9708939708939709, "obj2": 0.010073116899607614}, {"determining": "( ( ( DDR * MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),( FirstVNF_Mem + ARS ) ) )", "choosing": "( ( ( RCSe + MUR ) + Min( MUR ,DS ) ) * ( MLU + DS ) )", "obj1": 0.9542619542619543, "obj2": 0.02744221150934389}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) - ( MRS + DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * RRSe ) * ( RRSe - ( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6091476091476091, "obj2": 0.29665417521793075}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( RRS ,MRS ) / FirstVNF_CPU ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RCSe ) / ( MUM - RMSe ) ) + ( ( RRSe - MUM ) - ( MLU + DS ) ) ) - Min( ( ( RRSe - CS ) * ( MUC * MLU ) ) ,Max( ( MUR / ( ( ( MUM * MUR ) * Min( MUC ,MUC ) ) * RMSe ) ),( RRSe / MLU ) ) ) )", "obj1": 0.9875259875259875, "obj2": 0.005691363310746331}, {"determining": "( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "Min( Min( ( Max( RMSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.9792099792099792, "obj2": 0.008744809602986537}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( Min( BR ,CRS ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + RCSe ) + ( RRSe * RMSe ) )", "obj1": 0.9916839916839917, "obj2": 0.00329868215226364}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe + MUR ) ,Min( MUR ,DS ) ) * ( MLU + DS ) )", "obj1": 0.9958419958419958, "obj2": 0.00198373876215089}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.972972972972973, "obj2": 0.009252297693820181}, {"determining": "( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const - CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUC ),( MUR + MLU ) ) ,( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( ( FirstVNF_Mem / BR ) / Max( Min( Const ,ACS ),Min( ACS ,CRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( MUC - MUM ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - Const ) ,( ARS * PN ) )", "choosing": "( Max( CS,MUM ) / ( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_RAM,FirstVNF_RAM ) ) * ( ( Const * CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Max( ( RMSe / RRSe ),Max( RMSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ,Min( ( DDR / AMS ) ,( BR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,MUC ) * Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( AMS - FirstVNF_RAM ),BR ) ,( PN - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( Max( ( CS + RRSe ),( DS * RCSe ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) ),( Max( ( DS * DS ),( MLU + RRSe ) ) + Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - MDR ) ,ACS ) + ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( BR ,CRS ),( AMS / Const ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) * ( ( ( DDR - PN ) - ( RRS - FirstVNF_Mem_Server ) ) + Max( Min( MRS ,FirstVNF_CPU ),( MRS / Const ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + CS ) + Min( ( MLU + MUR ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,Max( ARS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MUR ) - ( ( DS - RCSe ) - ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( Max( DS,Max( CS,RMSe ) ) ,( MUC + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ( MDR * DDR ) ) ,Max( ARS,PN ) )", "choosing": "( Max( CS,RMSe ) / ( MUC / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - Const ) ,Max( ARS,PN ) )", "choosing": "( Min( RCSe ,DS ) / ( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "Min( ( Min( MUC ,MUC ) + CS ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - ( MDR * DDR ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * CS ) ) ,( MUC / RMSe ) ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ( MDR * DDR ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) / ( MUC / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ( MDR * DDR ) ) ,Max( ARS,PN ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Max( PN,PN ) ) - ( MRS + DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( RRSe - ( ( RCSe * ( ( DS * MLU ) / MUM ) ) - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Max( PN,PN ) ) / Min( ACS ,ACS ) ) - MDR )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( MLU * DS ) / MUM ) ) ) ,( ( RCSe / RRSe ) - Min( RRSe ,RRSe ) ) ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,( ( RCSe / RRSe ) - Min( RRSe ,RRSe ) ) ) ,DS )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( RRS - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( MUC - MUC ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR - MRS ),BR ) ,( PN - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) ,Max( ( RRSe * DS ),( MUR * DS ) ) ),( Max( Max( DS,DS ),( MLU + RRSe ) ) + Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.5841995841995842, "obj2": 0.30023436247393176}, {"determining": "( FirstVNF_CPU_Server - Max( MRS,DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / DS ) ) ) - Min( MUC ,MUC ) )", "obj1": 0.6133056133056133, "obj2": 0.2527836962013123}, {"determining": "( ( ( DDR * MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),( FirstVNF_Mem + ARS ) ) )", "choosing": "( ( ( RCSe + MUR ) + Min( MUR ,DS ) ) * ( MLU + DS ) )", "obj1": 0.8316008316008316, "obj2": 0.116352466330642}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) )", "choosing": "( Min( ( RCSe + MUR ) ,Min( MUR ,DS ) ) * ( MLU + DS ) )", "obj1": 0.7422037422037422, "obj2": 0.13091820503230894}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "Min( Max( DS,Max( CS,MUR ) ) ,( ( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe / MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) + Max( RCSe,RMSe ) ) ) ) + MUC ) )", "obj1": 0.6444906444906445, "obj2": 0.2104597719271577}, {"determining": "( Min( ACS ,ACS ) - ( PN + DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( RCSe + MUR ) ,Min( MUR ,DS ) ) )", "obj1": 0.6777546777546778, "obj2": 0.16983456521292004}, {"determining": "( Min( ACS ,ACS ) - ( MRS + DDR ) )", "choosing": "Max( Min( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) ),( Max( Max( DS,DS ),( MLU + RRSe ) ) + Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 0.6756756756756757, "obj2": 0.20529137706896436}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) - ( MRS + DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * RRSe ) * ( RRSe - ( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6091476091476091, "obj2": 0.29665417521793075}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) )", "choosing": "( ( Min( MUC ,MUC ) + RCSe ) + ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) )", "obj1": 0.738045738045738, "obj2": 0.16557827440006298}, {"determining": "( ( ( PN + Max( PN,PN ) ) - ( ( FirstVNF_RAM_Server - Const ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + DS ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( Min( RCSe ,DS ) / ( MUC / RMSe ) ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.8648648648648649, "obj2": 0.06480222307954539}, {"determining": "( ( Min( ACS ,ACS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( RCSe + MUR ) ,( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Max( RRSe,( CS - MUR ) ) ) ) * ( MLU + DS ) )", "obj1": 0.841995841995842, "obj2": 0.09681662139858088}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) )", "choosing": "( Min( RCSe ,Min( RMSe ,DS ) ) * ( RRSe + MLU ) )", "obj1": 0.7401247401247402, "obj2": 0.15522726651590257}, {"determining": "( ( Min( ACS ,ACS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( RCSe + MUR ) ,( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) / ( DS / RRSe ) ) ) - Max( RRSe,( CS - MUR ) ) ) ) * ( MLU + DS ) )", "obj1": 0.8503118503118503, "obj2": 0.08739689124775434}, {"determining": "( ( Max( Const,MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),Max( FirstVNF_Mem,ARS ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUR / MLU ) ) ,( DS * MLU ) )", "obj1": 0.9376299376299376, "obj2": 0.036585328039586085}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - RRS )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,MUC ) ,RCSe )", "obj1": 0.9064449064449065, "obj2": 0.04019695491830625}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( ( FirstVNF_RAM_Server - Const ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Max( CS,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) / ( MUC / RMSe ) )", "obj1": 0.9043659043659044, "obj2": 0.04721800906996723}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( RMSe + MUR ) / DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.8731808731808732, "obj2": 0.05033047199216135}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.9584199584199584, "obj2": 0.01957839177115624}, {"determining": "Min( ( ( PN + Max( PN,MRS ) ) - ( MDR * DDR ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,( ( RCSe + RRSe ) - ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ) ) / ( MUC / RMSe ) )", "obj1": 0.9459459459459459, "obj2": 0.023853568855164528}, {"determining": "( Min( Max( ACS,AMS ) ,ACS ) - ( Min( RRS ,MRS ) / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) + ( DS / RRSe ) ) ) - Min( ( Min( RMSe ,DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.5945945945945946, "obj2": 0.299948012569749}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) / Min( MRS ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( DS * MUR ) ) ,( DS * MUM ) )", "obj1": 0.8711018711018711, "obj2": 0.05353769700591632}, {"determining": "( Min( Max( FirstVNF_RAM,MRS ) ,( ACS - FirstVNF_RAM_Server ) ) + ( MRS + ACS ) )", "choosing": "( ( Min( MUC ,RMSe ) + RCSe ) + ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) )", "obj1": 0.9438669438669439, "obj2": 0.03215213938053333}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( Max( ( FirstVNF_RAM - RRS ),( AMS * FirstVNF_Mem ) ) / ( Min( MRS ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * FirstVNF_RAM_Server ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( FirstVNF_CPU ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.9688149688149689, "obj2": 0.0132147742243736}, {"determining": "( ( Min( ACS ,ACS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( RCSe + MUR ) ,( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Max( RRSe,( CS - MUR ) ) ) ) * ( MLU + DS ) )", "obj1": 0.8482328482328483, "obj2": 0.08798160771511428}, {"determining": "( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "Min( Min( ( Max( RMSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.9792099792099792, "obj2": 0.008744809602986537}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( Min( BR ,CRS ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + RCSe ) + ( RRSe * RMSe ) )", "obj1": 0.9916839916839917, "obj2": 0.00329868215226364}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( RRS ,MRS ) / FirstVNF_CPU ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( Min( RCSe ,DS ) / ( MUC / RMSe ) )", "obj1": 0.9958419958419958, "obj2": 0.0017201026273851899}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( RRS ,MRS ) / FirstVNF_CPU ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RCSe ) / ( MUM - RMSe ) ) + ( ( RRSe - MUM ) - ( MLU + DS ) ) ) - Min( ( ( RRSe - CS ) * ( MUC * MLU ) ) ,Max( ( MUR / ( ( ( MUM * MUR ) * Min( MUC ,MUC ) ) * RMSe ) ),( RRSe / MLU ) ) ) )", "obj1": 0.9875259875259875, "obj2": 0.005691363310746331}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.972972972972973, "obj2": 0.009252297693820181}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( Max( ( FirstVNF_RAM - RRS ),( AMS * FirstVNF_Mem ) ) / ( Min( MRS ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * FirstVNF_RAM_Server ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( DDR ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * Max( MUM,RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9708939708939709, "obj2": 0.010073116899607614}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( RRS ,MRS ) / FirstVNF_CPU ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RCSe ) / ( MUM - RMSe ) ) + ( ( RRSe - MUM ) - ( MLU + DS ) ) ) - Min( ( ( RRSe - CS ) * ( MUC * MLU ) ) ,Max( ( MUR / ( ( ( MUM * MUR ) * Min( MUC ,MUC ) ) * RMSe ) ),( RRSe / MLU ) ) ) )", "obj1": 0.9875259875259875, "obj2": 0.005691363310746331}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,( ( RCSe / RRSe ) - Min( RRSe ,RRSe ) ) ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const - CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUC ),( MUR + MLU ) ) ,( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( ( FirstVNF_Mem / BR ) / Max( Min( Const ,ACS ),Min( ACS ,CRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( MUC - MUM ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - Const ) ,( ARS * PN ) )", "choosing": "( Max( CS,MUM ) / ( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_RAM,FirstVNF_RAM ) ) * ( ( Const * CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Max( ( RMSe / RRSe ),Max( RMSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ,Min( ( DDR / AMS ) ,( BR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,MUC ) * Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( AMS - FirstVNF_RAM ),BR ) ,( PN - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( Max( ( CS + RRSe ),( DS * RCSe ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) ),( Max( ( DS * DS ),( MLU + RRSe ) ) + Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - MDR ) ,ACS ) + ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( BR ,CRS ),( AMS / Const ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) * ( ( ( DDR - PN ) - ( RRS - FirstVNF_Mem_Server ) ) + Max( Min( MRS ,FirstVNF_CPU ),( MRS / Const ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + CS ) + Min( ( MLU + MUR ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,Max( ARS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MUR ) - ( ( DS - RCSe ) - ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( Max( DS,Max( CS,RMSe ) ) ,( MUC + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ( MDR * DDR ) ) ,Max( ARS,PN ) )", "choosing": "( Max( CS,RMSe ) / ( MUC / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - Const ) ,Max( ARS,PN ) )", "choosing": "( Min( RCSe ,DS ) / ( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "Min( ( Min( MUC ,MUC ) + CS ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - ( MDR * DDR ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * CS ) ) ,( MUC / RMSe ) ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ( MDR * DDR ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) / ( MUC / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ( MDR * DDR ) ) ,Max( ARS,PN ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,RRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( ( FirstVNF_Mem / BR ) - Max( Min( Const ,ACS ),Min( ACS ,CRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) - ( CS - DS ) ) ) - ( Min( Min( RRSe ,MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( MUC - MUC ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.5841995841995842, "obj2": 0.30023436247393176}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,ACS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Max( CS,( ( RCSe / RRSe ) - ( ( RRSe / DS ) / ( DS * ( ( DS * MLU ) / MUM ) ) ) ) ) / ( MUC / RMSe ) )", "obj1": 0.7193347193347194, "obj2": 0.11405072282846525}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,CRS ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( RRSe * ( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6735966735966736, "obj2": 0.1576399714942997}, {"determining": "( FirstVNF_CPU_Server - Max( MRS,DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / DS ) ) ) - Min( MUC ,MUC ) )", "obj1": 0.6133056133056133, "obj2": 0.2527836962013123}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "Min( Max( DS,Max( CS,MUR ) ) ,( ( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe / MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) + Max( RCSe,RMSe ) ) ) ) + MUC ) )", "obj1": 0.6444906444906445, "obj2": 0.2104597719271577}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) ) - ACS )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( MUC * MLU ) / ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS / MLU ) ) ) ) ) ) ,MUC ) ,DS )", "obj1": 0.8544698544698545, "obj2": 0.06046941909838863}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - PN )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( CS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.8066528066528067, "obj2": 0.07621455539299904}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) - ( MRS + DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * RRSe ) * ( RRSe - ( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6091476091476091, "obj2": 0.29665417521793075}, {"determining": "( ( ( PN * Max( PN,PN ) ) / ( ( FirstVNF_RAM_Server - Const ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / Min( DS ,RRSe ) ) ) - Min( ( RCSe + MUR ) ,Min( MUR ,DS ) ) )", "obj1": 0.6652806652806653, "obj2": 0.18831872315258766}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) / Min( MRS ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( DS * MUR ) ) ,( DS * MUM ) )", "obj1": 0.7650727650727651, "obj2": 0.10704198379997447}, {"determining": "Min( ( ( PN + Max( ( FirstVNF_RAM_Server + Max( PN,PN ) ),PN ) ) - ( MDR * DDR ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,Max( ( RCSe / MUR ),( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ) ) / ( MUC / RMSe ) )", "obj1": 0.7962577962577962, "obj2": 0.08523373079087053}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - RRS )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,MUC ) ,RCSe )", "obj1": 0.9064449064449065, "obj2": 0.04019695491830625}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 0.7796257796257796, "obj2": 0.10116474534732227}, {"determining": "( Min( ACS ,FirstVNF_RAM ) - ( MRS - DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( RRSe - ( ( RRSe - CS ) - CS ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6486486486486487, "obj2": 0.1900651297274413}, {"determining": "( ( Max( Const,MRS ) / ( ACS - FirstVNF_RAM_Server ) ) + Max( ( RRS / AMS ),Max( FirstVNF_Mem,ARS ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUR / MLU ) ) ,( DS * MLU ) )", "obj1": 0.9376299376299376, "obj2": 0.036585328039586085}, {"determining": "( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( MDR * DDR ) )", "choosing": "Min( ( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ,DS )", "obj1": 0.8918918918918919, "obj2": 0.04368959251027703}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) / Min( MRS ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( DS * MUR ) ) ,( DS * MUM ) )", "obj1": 0.8711018711018711, "obj2": 0.05353769700591632}, {"determining": "( Min( Max( ACS,AMS ) ,ACS ) - ( Min( RRS ,MRS ) / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) + ( DS / RRSe ) ) ) - Min( ( Min( RMSe ,DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.5945945945945946, "obj2": 0.299948012569749}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( MRS / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * MRS ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( RCSe / MLU ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.8752598752598753, "obj2": 0.04792891472475584}, {"determining": "( Min( Max( FirstVNF_RAM,MRS ) ,( ACS - FirstVNF_RAM_Server ) ) + ( MRS + ACS ) )", "choosing": "( ( Min( MUC ,RMSe ) + RCSe ) + ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) )", "obj1": 0.9438669438669439, "obj2": 0.03215213938053333}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( Max( ( FirstVNF_RAM - RRS ),( AMS * FirstVNF_Mem ) ) / ( Min( MRS ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * FirstVNF_RAM_Server ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( FirstVNF_CPU ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.9688149688149689, "obj2": 0.013206025076056185}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.9584199584199584, "obj2": 0.01957839177115624}, {"determining": "( ( ( PN + Max( PN,PN ) ) + ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Max( Min( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) ,Max( ( RRSe * DS ),( MUR * DS ) ) ),( Max( Max( DS,DS ),( MLU + RRSe ) ) + Min( ( RCSe - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.10324421522431461}, {"determining": "( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "Min( Min( ( Max( RMSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.9792099792099792, "obj2": 0.008744809602986537}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( RRS ,MRS ) / FirstVNF_CPU_Server ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "( Max( CS,MUM ) / ( MLU - MLU ) )", "obj1": 0.9875259875259875, "obj2": 0.004272502048506351}, {"determining": "Min( ( ( PN + Max( PN,FirstVNF_RAM ) ) - ( MDR * DDR ) ) ,Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,( ( RCSe / RRSe ) * ( ( RRSe / DS ) / ( RCSe * ( ( MLU * MLU ) / MUM ) ) ) ) ) / ( MUC / RMSe ) )", "obj1": 0.9459459459459459, "obj2": 0.023638882520952042}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * MUC ) * ( Max( RMSe,DS ) / ( RCSe * CS ) ) ) ) )", "obj1": 0.9542619542619543, "obj2": 0.021139347462071204}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( RMSe + MUR ) / DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.8731808731808732, "obj2": 0.05033047199216135}, {"determining": "Min( ( ( PN + ( PN - MRS ) ) - ( MDR * DDR ) ) ,( ( FirstVNF_CPU_Server / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( CS ,( Min( MUC ,MUC ) + CS ) ) / ( MUC / MUM ) )", "obj1": 0.9480249480249481, "obj2": 0.021989280450188053}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.972972972972973, "obj2": 0.009252297693820181}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( RRS ,MRS ) / FirstVNF_CPU ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( Min( RCSe ,DS ) / ( MUC / RMSe ) )", "obj1": 0.9958419958419958, "obj2": 0.0017201026273851899}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( Max( ( FirstVNF_RAM - RRS ),( AMS * FirstVNF_Mem ) ) / ( Min( MRS ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * FirstVNF_RAM_Server ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( DDR ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * Max( MUM,RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9708939708939709, "obj2": 0.010073116899607614}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( Min( BR ,CRS ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + RCSe ) + ( RRSe * RMSe ) )", "obj1": 0.9916839916839917, "obj2": 0.00329868215226364}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ,MRS ) / FirstVNF_CPU ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( Min( RCSe ,DS ) / Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.9937629937629938, "obj2": 0.0024995158699517767}, {"determining": "Min( Max( ( BR - MRS ),BR ) ,( PN - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) ,Max( ( RRSe * DS ),( MUR * DS ) ) ),( Max( Max( DS,DS ),( MLU + RRSe ) ) + Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,( ( RCSe / RRSe ) - Min( RRSe ,RRSe ) ) ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const - CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUC ),( MUR + MLU ) ) ,( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( ( FirstVNF_Mem / BR ) / Max( Min( Const ,ACS ),Min( ACS ,CRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( MUC - MUM ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - Const ) ,( ARS * PN ) )", "choosing": "( Max( CS,MUM ) / ( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Max( FirstVNF_RAM,FirstVNF_RAM ) ) * ( ( Const * CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Max( ( RMSe / RRSe ),Max( RMSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ,Min( ( DDR / AMS ) ,( BR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,MUC ) * Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( AMS - FirstVNF_RAM ),BR ) ,( PN - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( Max( ( CS + RRSe ),( DS * RCSe ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) ),( Max( ( DS * DS ),( MLU + RRSe ) ) + Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - MDR ) ,ACS ) + ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( BR ,CRS ),( AMS / Const ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) * ( ( ( DDR - PN ) - ( RRS - FirstVNF_Mem_Server ) ) + Max( Min( MRS ,FirstVNF_CPU ),( MRS / Const ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + CS ) + Min( ( MLU + MUR ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,MRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,Max( ARS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MUR ) - ( ( DS - RCSe ) - ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( Max( DS,Max( CS,RMSe ) ) ,( MUC + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ( MDR * DDR ) ) ,Max( ARS,PN ) )", "choosing": "( Max( CS,RMSe ) / ( MUC / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - Const ) ,Max( ARS,PN ) )", "choosing": "( Min( RCSe ,DS ) / ( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( ( RRS * Max( PN,PN ) ) / ( ( FirstVNF_RAM_Server - Const ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Min( MUC ,RMSe ) + RCSe ) + ( Max( ( MUM * MUR ),( MUC + DS ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ) - ( ( ACS / Const ) - ( PN * MRS ) ) ) ,( ( Min( RRS ,RRS ) - Max( FirstVNF_CPU,AMS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( ( FirstVNF_Mem / BR ) - Max( Min( Const ,ACS ),Min( ACS ,CRS ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) - ( CS - DS ) ) ) - ( Min( Min( RRSe ,MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.5841995841995842, "obj2": 0.30023436247393176}, {"determining": "( FirstVNF_CPU_Server - Max( MRS,DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / DS ) ) ) - Min( MUC ,MUC ) )", "obj1": 0.6133056133056133, "obj2": 0.2527836962013123}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "Min( Max( DS,Max( CS,MUR ) ) ,( ( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe / MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) + Max( RCSe,RMSe ) ) ) ) + MUC ) )", "obj1": 0.6444906444906445, "obj2": 0.2104597719271577}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,ACS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Max( CS,( ( RCSe / RRSe ) - ( ( RRSe / DS ) / ( DS * ( ( DS * MLU ) / MUM ) ) ) ) ) / ( MUC / RMSe ) )", "obj1": 0.7193347193347194, "obj2": 0.11405072282846525}, {"determining": "( ( ( ACS + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) ) - MDR )", "choosing": "( ( Min( ( RMSe / MUM ) ,( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( MUC ,MUC ) + CS ) )", "obj1": 0.8523908523908524, "obj2": 0.05563139622724544}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - PN )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( CS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.8066528066528067, "obj2": 0.07621455539299904}, {"determining": "( Min( ACS ,FirstVNF_RAM ) - ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS / MLU ) ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.604989604989605, "obj2": 0.29554021702660943}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( Max( Min( BR ,CRS ),MRS ) ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUM * MUR ) ) ,( Min( MUC ,MUC ) + RCSe ) )", "obj1": 0.6943866943866944, "obj2": 0.1398176503995994}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6528066528066528, "obj2": 0.16478197314740656}, {"determining": "( Min( ACS ,FirstVNF_RAM ) - ( MRS - DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( RRSe - ( ( RRSe - CS ) - CS ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6486486486486487, "obj2": 0.1900651297274413}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( RCSe + MUR ) ,Min( MUR ,DS ) ) )", "obj1": 0.7422037422037422, "obj2": 0.10347943760367215}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - RRS )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,MUC ) ,RCSe )", "obj1": 0.9064449064449065, "obj2": 0.04019695491830625}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,CRS ) ) * ( ( MDR * ( ( PN * RRS ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( RRSe - DS ) ) ,( ( DS + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( RRSe * ( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6715176715176715, "obj2": 0.15434011385024302}, {"determining": "( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( MDR * DDR ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUM * MUR ) ) ,( DS * MUM ) )", "obj1": 0.9334719334719335, "obj2": 0.027160716038300357}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) * Min( MRS ,MRS ) ) )", "choosing": "Min( ( ( CS / RRSe ) - Max( RRSe,RRSe ) ) ,DS )", "obj1": 0.6902286902286903, "obj2": 0.14550779501943248}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( MRS / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( PN + Max( BR,PN ) ) ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.8898128898128899, "obj2": 0.04242134854727453}, {"determining": "( ( ( PN + Max( PN,PN ) ) + ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Max( Min( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) ,Max( ( RRSe * DS ),( MUR * DS ) ) ),( Max( Max( DS,DS ),( MLU + RRSe ) ) + Min( ( RCSe - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.10324421522431461}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),Max( CS,CS ) ) ) )", "obj1": 0.7796257796257796, "obj2": 0.10116474534732227}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.7858627858627859, "obj2": 0.08657874009285518}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) / Min( MRS ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( DS * MUR ) ) ,( DS * MUM ) )", "obj1": 0.8711018711018711, "obj2": 0.05353769700591632}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( MRS / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * MRS ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( RCSe / MLU ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.8752598752598753, "obj2": 0.04792891472475584}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( ( FirstVNF_RAM_Server - Const ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( MUC * MLU ) / ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) ) ) ) ,MUC ) ,DS )", "obj1": 0.9584199584199584, "obj2": 0.017515118903079732}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( Max( ( FirstVNF_RAM - RRS ),( AMS * FirstVNF_Mem ) ) / ( Min( MRS ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * FirstVNF_RAM_Server ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( FirstVNF_CPU ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.9688149688149689, "obj2": 0.01302636012306904}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( RRS ,MRS ) / FirstVNF_CPU_Server ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "( Max( CS,MUM ) / ( MLU - MLU ) )", "obj1": 0.9875259875259875, "obj2": 0.004272502048506351}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RMSe + MUR ) / DS ) / ( RCSe * CS ) ) * ( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.9771309771309772, "obj2": 0.008614385450074256}, {"determining": "( Min( Max( ACS,AMS ) ,ACS ) - ( Min( RRS ,MRS ) / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) + ( DS / RRSe ) ) ) - Min( ( Min( RMSe ,DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.5945945945945946, "obj2": 0.299948012569749}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,MUC ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.7920997920997921, "obj2": 0.08401594455191155}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.7962577962577962, "obj2": 0.08081386184830433}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * PN ) ) ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( MUC - MUM ) * Min( MUR ,RCSe ) )", "obj1": 0.8024948024948025, "obj2": 0.07861941493752744}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * MUC ) * ( Max( RMSe,DS ) / ( RCSe * CS ) ) ) ) )", "obj1": 0.9542619542619543, "obj2": 0.021139347462071204}, {"determining": "( Min( Max( FirstVNF_RAM,MRS ) ,( ACS - FirstVNF_RAM_Server ) ) + ( MRS + ACS ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / Min( DS ,RRSe ) ) ) - Min( ( RCSe + MUR ) ,Min( MUR ,DS ) ) )", "obj1": 0.5987525987525988, "obj2": 0.29654150854164674}, {"determining": "( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( MDR * DDR ) )", "choosing": "( Min( RCSe ,DS ) / ( MUC / RMSe ) )", "obj1": 0.9397089397089398, "obj2": 0.02499809252913696}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( RMSe + MUR ) / DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.8731808731808732, "obj2": 0.05033047199216135}, {"determining": "Min( ( ( PN + ( PN - MRS ) ) - ( MDR * DDR ) ) ,( ( FirstVNF_CPU_Server / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( CS ,( Min( MUC ,MUC ) + CS ) ) / ( MUC / MUM ) )", "obj1": 0.9480249480249481, "obj2": 0.021989280450188053}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( Max( ( FirstVNF_RAM - RRS ),( AMS * FirstVNF_Mem ) ) / ( Min( MRS ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * FirstVNF_RAM_Server ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( DDR ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * Max( MUM,RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9708939708939709, "obj2": 0.010073116899607614}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.972972972972973, "obj2": 0.009252297693820181}, {"determining": "Min( ( ( PN + Max( PN,PN ) ) - ( MDR * DDR ) ) ,Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,( ( RCSe / RRSe ) / ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ) ) / ( MUC / RMSe ) )", "obj1": 0.9438669438669439, "obj2": 0.02435451774167551}, {"determining": "Min( ( ( PN + Max( PN,FirstVNF_RAM ) ) - ( MDR * DDR ) ) ,Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,( ( RCSe / RRSe ) * ( ( RRSe / DS ) / ( RCSe * ( ( MLU * MLU ) / MUM ) ) ) ) ) / ( MUC / RMSe ) )", "obj1": 0.9459459459459459, "obj2": 0.023638882520952042}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ,MRS ) / FirstVNF_CPU ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( Min( RCSe ,DS ) / Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.9937629937629938, "obj2": 0.0024995158699517767}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( Min( BR ,CRS ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUC ,MUC ) + RCSe ) + ( RRSe * RMSe ) )", "obj1": 0.9916839916839917, "obj2": 0.00329868215226364}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( FirstVNF_RAM_Server ,MRS ) / FirstVNF_CPU ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( Min( RCSe ,DS ) / ( DS / RRSe ) )", "obj1": 0.9916839916839917, "obj2": 0.00329868215226364}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( Min( BR ,CRS ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUM * MUR ) ) ,( DS * MUM ) )", "obj1": 0.997920997920998, "obj2": 0.0008104413623473045}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( RRS ,MRS ) / FirstVNF_CPU ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) )", "choosing": "( Min( RCSe ,DS ) / ( MUC / RMSe ) )", "obj1": 0.9958419958419958, "obj2": 0.0017201026273851899}, {"determining": "Min( ( ( PN * FirstVNF_RAM_Server ) - ( Max( Min( BR ,CRS ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ,Max( ARS,PN ) )", "choosing": "( Min( RCSe ,DS ) / ( MUC / ( Min( MUC ,MUC ) + RCSe ) ) )", "obj1": 0.997920997920998, "obj2": 0.0008104413623473045}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - Max( Max( ( Min( RRS ,MRS ) / FirstVNF_CPU ),MRS ),( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) / Max( MUC,RMSe ) )", "obj1": 0.9958419958419958, "obj2": 0.0017201026273851899}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( MUC - MUC ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR - MRS ),BR ) ,( PN - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) ,Max( ( RRSe * DS ),( MUR * DS ) ) ),( Max( Max( DS,DS ),( MLU + RRSe ) ) + Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,( ( RCSe / RRSe ) - Min( RRSe ,RRSe ) ) ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const - CRS ) - Min( MRS ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUC ),( MUR + MLU ) ) ,( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * Max( PN,PN ) ) / ( ( FirstVNF_RAM_Server - Const ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Min( MUC ,RMSe ) + RCSe ) + ( Max( ( MUM * MUR ),( MUC + DS ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.5841995841995842, "obj2": 0.30023436247393176}, {"determining": "( FirstVNF_CPU_Server - Max( MRS,DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / DS ) ) ) - Min( MUC ,MUC ) )", "obj1": 0.6133056133056133, "obj2": 0.2527836962013123}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "Min( Max( DS,Max( CS,MUR ) ) ,( ( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe / MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) + Max( RCSe,RMSe ) ) ) ) + MUC ) )", "obj1": 0.6444906444906445, "obj2": 0.2104597719271577}, {"determining": "( Min( ACS ,FirstVNF_RAM ) - ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS / MLU ) ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.604989604989605, "obj2": 0.29554021702660943}, {"determining": "( Min( ACS ,FirstVNF_RAM ) - ( MRS - DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( RRSe - ( ( RRSe - CS ) - CS ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6486486486486487, "obj2": 0.1900651297274413}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( Max( Min( BR ,CRS ),MRS ) ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUM * MUR ) ) ,( Min( MUC ,MUC ) + RCSe ) )", "obj1": 0.6943866943866944, "obj2": 0.1398176503995994}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Max( Const,( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( MUC * DS ) * Max( RRSe,( DS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.7089397089397089, "obj2": 0.11438906058619913}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( MUC ,RMSe ) + RCSe ) + ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) )", "obj1": 0.8336798336798337, "obj2": 0.07074719895399018}, {"determining": "( ( ( ACS + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) ) - MDR )", "choosing": "( ( Min( ( RMSe / MUM ) ,( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( MUC ,MUC ) + CS ) )", "obj1": 0.8523908523908524, "obj2": 0.05563139622724544}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - RRS )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,MUC ) ,RCSe )", "obj1": 0.9064449064449065, "obj2": 0.04019695491830625}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6528066528066528, "obj2": 0.16478197314740656}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,CRS ) ) * ( ( MDR * ( ( PN * RRS ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( RRSe - DS ) ) ,( ( DS + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( RRSe * ( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6715176715176715, "obj2": 0.15434011385024302}, {"determining": "( ( ( PN + Max( ( Min( ACS ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( MRS,FirstVNF_Mem ) ) ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( ( ( ( MUC / ( Min( MUC ,MUC ) + RCSe ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RRSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9251559251559252, "obj2": 0.027693365297609428}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) * Min( MRS ,MRS ) ) )", "choosing": "Min( ( ( CS / RRSe ) - Max( RRSe,RRSe ) ) ,DS )", "obj1": 0.6902286902286903, "obj2": 0.14550779501943248}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,ACS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Max( CS,( ( RCSe / RRSe ) - ( ( RRSe / DS ) / ( DS * ( ( DS * MLU ) / MUM ) ) ) ) ) / ( MUC / RMSe ) )", "obj1": 0.7193347193347194, "obj2": 0.11405072282846525}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( MDR * FirstVNF_Mem ) ) ) - MDR )", "choosing": "Min( Min( ( ( RRSe / MUC ) / ( Min( RCSe ,DS ) / ( MUC / RMSe ) ) ) ,( ( RCSe / RRSe ) - Min( RRSe ,RRSe ) ) ) ,DS )", "obj1": 0.7401247401247402, "obj2": 0.10868005471469257}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( RCSe + MUR ) ,Min( MUR ,DS ) ) )", "obj1": 0.7422037422037422, "obj2": 0.10347943760367215}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN + FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,ACS ) ) )", "choosing": "( Min( RCSe ,DS ) / ( MUC / RMSe ) )", "obj1": 0.8191268191268192, "obj2": 0.07268298389273661}, {"determining": "( Max( ( PN + Max( PN,PN ) ),( Max( ( ( CRS + Const ) * ( CRS * FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( Min( Min( RRSe ,MLU ) ,Min( MUC ,MUM ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) + Max( RCSe,RMSe ) ) ) )", "obj1": 0.7754677754677755, "obj2": 0.09429681211727735}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( MRS / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( PN + Max( BR,PN ) ) ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.8898128898128899, "obj2": 0.04242134854727453}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,CRS ) ) * ( ( MDR * ( ( AMS - FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC / DS ) ) ,Max( RMSe,( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6548856548856549, "obj2": 0.15672216209006468}, {"determining": "( ( ( PN + Max( PN,PN ) ) + ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Max( Min( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) ,Max( ( RRSe * DS ),( MUR * DS ) ) ),( Max( Max( DS,DS ),( MLU + RRSe ) ) + Min( ( RCSe - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.10324421522431461}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.7858627858627859, "obj2": 0.08657874009285518}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - PN )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( CS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.8066528066528067, "obj2": 0.07621455539299904}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( Const,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Max( CS,( ( RCSe / RRSe ) - ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUC ) ) ) ) ) / ( MUC / RMSe ) )", "obj1": 0.8835758835758836, "obj2": 0.04780854611243985}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "Min( Max( ( MUR / MUM ),( MUM * MUR ) ) ,( DS * MUM ) )", "obj1": 0.8690228690228691, "obj2": 0.05547705541743705}, {"determining": "( Min( Max( ACS,AMS ) ,ACS ) - ( Min( RRS ,MRS ) / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) + ( DS / RRSe ) ) ) - Min( ( Min( RMSe ,DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.5945945945945946, "obj2": 0.299948012569749}, {"determining": "( ( ( PN + Max( ( PN * FirstVNF_RAM_Server ),PN ) ) / ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( RRSe - Min( ( ( RMSe * DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.7733887733887734, "obj2": 0.10248474918065795}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,MUC ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.7920997920997921, "obj2": 0.08401594455191155}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( ( FirstVNF_RAM_Server - Const ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( MUC * MLU ) / ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) ) ) ) ,MUC ) ,DS )", "obj1": 0.9584199584199584, "obj2": 0.017515118903079732}, {"determining": "( FirstVNF_CPU_Server - ( ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) + BR ) )", "choosing": "( Min( Max( Min( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) ,Max( ( RRSe * MUM ),( MUR * DS ) ) ),( Max( Max( DS,DS ),( MLU + RRSe ) ) + Min( ( RCSe - RCSe ) ,Min( DS ,MUC ) ) ) ) ,( RMSe / ( DS / MLU ) ) ) - Min( MUC ,MUC ) )", "obj1": 0.9625779625779626, "obj2": 0.013954431838696997}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * MUC ) * ( Max( RMSe,DS ) / ( RCSe * CS ) ) ) ) )", "obj1": 0.9542619542619543, "obj2": 0.021139347462071204}, {"determining": "( Min( Max( FirstVNF_RAM,MRS ) ,( ACS - FirstVNF_RAM_Server ) ) + ( MRS + ACS ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / Min( DS ,RRSe ) ) ) - Min( ( RCSe + MUR ) ,Min( MUR ,DS ) ) )", "obj1": 0.5987525987525988, "obj2": 0.29654150854164674}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.7962577962577962, "obj2": 0.08081386184830433}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( MRS / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * MRS ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( RCSe / MLU ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.8752598752598753, "obj2": 0.04792891472475584}, {"determining": "( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( MDR * DDR ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUM * MUR ) ) ,( DS * MUM ) )", "obj1": 0.9334719334719335, "obj2": 0.027160716038300357}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( MRS / ( Max( FirstVNF_CPU_Server,AMS ) * MRS ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( RCSe / MLU ) / Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.9688149688149689, "obj2": 0.012774687905604624}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( Max( ( FirstVNF_RAM - RRS ),( AMS * FirstVNF_Mem ) ) / ( Min( MRS ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * FirstVNF_RAM_Server ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( FirstVNF_CPU ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * Min( ( CRS - ( ( PN + Max( PN,PN ) ) / ( ( FirstVNF_RAM_Server - Const ) * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.9812889812889813, "obj2": 0.008062202155957363}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( RMSe + MUR ) / DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.8731808731808732, "obj2": 0.05033047199216135}, {"determining": "Min( ( ( PN + ( PN - MRS ) ) - ( MDR * DDR ) ) ,( ( FirstVNF_CPU_Server / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( CS ,( Min( MUC ,MUC ) + CS ) ) / ( MUC / MUM ) )", "obj1": 0.9480249480249481, "obj2": 0.021989280450188053}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - Max( Max( ( Min( RRS ,MRS ) / FirstVNF_CPU ),MRS ),( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) / Max( MUC,RMSe ) )", "obj1": 0.9854469854469855, "obj2": 0.005825691266292998}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) * ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.8024948024948025, "obj2": 0.07813208494054126}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) / Min( MRS ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( DS * MUR ) ) ,( DS * MUM ) )", "obj1": 0.8711018711018711, "obj2": 0.05353769700591632}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RMSe + MUR ) / DS ) / ( RCSe * CS ) ) * ( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.9771309771309772, "obj2": 0.008614385450074256}, {"determining": "Min( Max( ( BR - MRS ),BR ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) ) )", "choosing": "Max( Min( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) ,Max( ( RRSe * DS ),( ( RMSe / ( DS / RRSe ) ) * DS ) ) ),( Max( Max( DS,DS ),( MLU + RRSe ) ) + Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 0.8004158004158004, "obj2": 0.07996154094915608}, {"determining": "Min( ( ( PN + Max( PN,PN ) ) - ( MDR * DDR ) ) ,Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,( ( RCSe / RRSe ) / ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ) ) / ( MUC / RMSe ) )", "obj1": 0.9376299376299376, "obj2": 0.02680375317015365}, {"determining": "( ( ( ( ( ( Min( Min( Const ,RRS ) ,( AMS + BR ) ) - ( ( ACS - AMS ) - Min( MRS ,BR ) ) ) - ( ( ( ACS - FirstVNF_Mem_Server ) / ( DDR / ARS ) ) / Max( ( RRS + FirstVNF_RAM ),( PN + DDR ) ) ) ) / ( ( ( Max( ARS,PN ) - ( FirstVNF_RAM - MRS ) ) - ( ( RRS / FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) + Min( ( ( AMS / RRS ) / ( FirstVNF_CPU - MRS ) ) ,( ( ARS * ARS ) - ( BR - Const ) ) ) ) ) - ( ( ( Max( ( FirstVNF_RAM - RRS ),( AMS * FirstVNF_Mem ) ) / ( Min( MRS ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server - Const ) ) ) * FirstVNF_RAM_Server ) * Min( ( ( ( FirstVNF_Mem - MDR ) / Min( ACS ,ARS ) ) + Min( Max( ARS,PN ) ,( DDR + MRS ) ) ) ,Max( Max( Max( BR,RRS ),Min( ARS ,ARS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( Min( Min( Min( ACS ,CRS ) ,( MRS / FirstVNF_RAM ) ) ,( Min( MRS ,RRS ) + ( DDR - MRS ) ) ) + ( ( Max( BR,PN ) - ( PN - AMS ) ) / ( Min( DDR ,RRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( ( ( Min( BR ,AMS ) + ( CRS + BR ) ) - ( ( FirstVNF_RAM_Server / Const ) * ( FirstVNF_CPU_Server - ACS ) ) ) ,Min( Max( ( CRS + AMS ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( DDR,MRS ) / ( BR - CRS ) ) ) ) ) * Min( ( CRS - Const ) ,( ( FirstVNF_Mem * CRS ) / Min( Const ,MDR ) ) ) ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * Max( MUM,RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9708939708939709, "obj2": 0.010073116899607614}, {"determining": "Min( ( ( PN + Max( PN,FirstVNF_RAM ) ) - ( MDR * DDR ) ) ,Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,( ( RCSe / RRSe ) * ( ( RRSe / DS ) / ( RCSe * ( ( MLU * MLU ) / MUM ) ) ) ) ) / ( MUC / RMSe ) )", "obj1": 0.9459459459459459, "obj2": 0.023638882520952042}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( ( ( ( Min( ( ( MRS + FirstVNF_Mem ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( Min( MRS ,FirstVNF_CPU ) + ( CRS + AMS ) ) ) - ( Max( Max( FirstVNF_Mem,ACS ),( RRS * FirstVNF_CPU ) ) / ( Max( DDR,CRS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) * Min( ( ( ( BR + MDR ) + Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( FirstVNF_Mem - ACS ) ) ) ,Max( ( Max( FirstVNF_Mem,RRS ) + ( FirstVNF_CPU + CRS ) ),Max( ( FirstVNF_CPU_Server - RRS ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) - ( AMS * FirstVNF_CPU ) ) ) ,Min( ( ( ACS * FirstVNF_RAM ) / ( BR / ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Max( ( ARS - PN ),( PN / FirstVNF_Mem_Server ) ) / ( ( MDR / CRS ) + Min( PN ,CRS ) ) ) ,( ( ( CRS / FirstVNF_CPU ) / Max( AMS,FirstVNF_RAM ) ) + ( ( Const - RRS ) * ( RRS / MRS ) ) ) ) ) ) / ( ( ( ( ( Min( DDR ,Const ) / Max( MRS,RRS ) ) * ( Max( ACS,MRS ) - ( FirstVNF_CPU + ACS ) ) ) - Max( Max( ( MDR - MRS ),( AMS + AMS ) ),( ( ACS * FirstVNF_RAM ) * ( Const - FirstVNF_CPU ) ) ) ) - ( Max( ( ( DDR + BR ) * ( CRS + RRS ) ),( Max( MRS,MDR ) - ( FirstVNF_CPU * RRS ) ) ) / ( ( ( MRS / FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + MRS ) - ( FirstVNF_Mem_Server - Const ) ) ) ) ) * Max( Max( Max( ( ( RRS + FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( ARS / FirstVNF_RAM ) ) ),Max( Max( Max( FirstVNF_Mem,RRS ),( FirstVNF_Mem * BR ) ),Min( Min( CRS ,PN ) ,Max( PN,FirstVNF_RAM ) ) ) ),( ( ( Min( CRS ,MDR ) + ( FirstVNF_CPU / MDR ) ) - Min( ( Const * AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) / ( ( Max( MDR,ACS ) - Min( PN ,Const ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.972972972972973, "obj2": 0.009252297693820181}], "11": [{"determining": "( ( ( PN + Max( ( Min( ACS ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) / ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( ( ( ( MUC / ( ( MUC - MUC ) + RCSe ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( ( RCSe * CS ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RRSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( ( RRSe + MLU ) ,Min( MUC ,MUM ) ) + Max( ( RCSe + RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.5841995841995842, "obj2": 0.30023436247393176}, {"determining": "( FirstVNF_CPU_Server - Max( MRS,DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / DS ) ) ) - Min( MUC ,MUC ) )", "obj1": 0.6133056133056133, "obj2": 0.2527836962013123}, {"determining": "( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) / Min( MRS ,MRS ) ) ) - ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( DS ,RMSe ) ,( DS / MLU ) ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6403326403326404, "obj2": 0.21874592939855048}, {"determining": "( Min( ACS ,FirstVNF_RAM ) - ( MRS - DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( RRSe - ( ( RRSe - CS ) - CS ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6486486486486487, "obj2": 0.1900651297274413}, {"determining": "( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Min( ( ACS / AMS ) ,ACS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / Min( ( ( RMSe * DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6112266112266113, "obj2": 0.2937672617798182}, {"determining": "( ( ( ACS + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) ) - MDR )", "choosing": "( ( Min( ( RMSe / MUM ) ,( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( MUC ,MUC ) + CS ) )", "obj1": 0.8523908523908524, "obj2": 0.05563139622724544}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - RRS )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,MUC ) ,RCSe )", "obj1": 0.9064449064449065, "obj2": 0.04019695491830625}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,CRS ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / Min( DS ,RRSe ) ) ) - Min( ( RCSe + MUR ) ,Min( MUR ,DS ) ) )", "obj1": 0.6528066528066528, "obj2": 0.1623081871006037}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( MUC ,RMSe ) + RCSe ) + ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) )", "obj1": 0.8336798336798337, "obj2": 0.07074719895399018}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,CRS ) ) * ( ( MDR * ( ( PN * RRS ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( RRSe - DS ) ) ,( ( DS + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( RRSe * ( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6715176715176715, "obj2": 0.15434011385024302}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / MLU ) ) ) - Min( MUC ,MUC ) )", "obj1": 0.7006237006237006, "obj2": 0.12072536279990319}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "Min( Max( DS,Max( CS,MUR ) ) ,( ( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe / MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) + Max( RCSe,RMSe ) ) ) ) + MUC ) )", "obj1": 0.6444906444906445, "obj2": 0.2104597719271577}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( Max( Min( BR ,CRS ),MRS ) ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUM * MUR ) ) ,( Min( MUC ,MUC ) + RCSe ) )", "obj1": 0.6943866943866944, "obj2": 0.1398176503995994}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) * Min( MRS ,MRS ) ) )", "choosing": "Min( ( ( CS / RRSe ) - Max( RRSe,RRSe ) ) ,DS )", "obj1": 0.6902286902286903, "obj2": 0.14550779501943248}, {"determining": "( ( ( PN + Max( ( Min( ACS ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( MRS,FirstVNF_Mem ) ) ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( ( ( ( MUC / ( Min( MUC ,MUC ) + RCSe ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RRSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9251559251559252, "obj2": 0.027693365297609428}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,ACS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.7588357588357588, "obj2": 0.09605434985485076}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.7234927234927235, "obj2": 0.10689139611433349}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( MDR * FirstVNF_Mem ) ) ) - MDR )", "choosing": "Min( Min( ( ( RRSe / MUC ) / ( Min( RCSe ,DS ) / ( MUC / RMSe ) ) ) ,( ( RCSe / RRSe ) - Min( RRSe ,RRSe ) ) ) ,DS )", "obj1": 0.7858627858627859, "obj2": 0.08380986714853106}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,CRS ) ) * ( ( MDR * ( ( AMS - FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC / DS ) ) ,Max( RMSe,( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6548856548856549, "obj2": 0.15672216209006468}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( MRS / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( PN + Max( BR,PN ) ) ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.8898128898128899, "obj2": 0.04242134854727453}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUM * MUR ) ) ,( Min( MUC ,MUC ) + RCSe ) )", "obj1": 0.7713097713097713, "obj2": 0.08990606027375317}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( RCSe + MUR ) ,Min( MUR ,DS ) ) )", "obj1": 0.7442827442827443, "obj2": 0.10163521837759963}, {"determining": "( Const * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( RCSe + MUR ) ,Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) ) ) ) ) )", "obj1": 0.7110187110187111, "obj2": 0.11395049471672337}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) ) - MDR )", "choosing": "( Min( RCSe ,RCSe ) / ( MUC / RMSe ) )", "obj1": 0.8648648648648649, "obj2": 0.05248246211265261}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.7318087318087318, "obj2": 0.1060739430250456}, {"determining": "Min( ( ( PN + Max( PN,MRS ) ) - ( MDR * DDR ) ) ,( ( FirstVNF_CPU_Server / ( Max( FirstVNF_CPU_Server,PN ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( CS ,( Min( MUC ,MUC ) + CS ) ) / ( MUC / RMSe ) )", "obj1": 0.9438669438669439, "obj2": 0.024541444124420227}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,CRS ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( RRSe - DS ) ) ,( ( DS + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * ( Max( MUR,CS ) * ( MUC - DS ) ) ) * ( RRSe * ( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.09189609583808378}, {"determining": "Min( ( ( PN + Max( PN,( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) ) ) - ( MDR * DDR ) ) ,Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,( ( RCSe / RRSe ) * ( ( ( RMSe / ( DS / RRSe ) ) / DS ) / ( RCSe * ( ( MLU * MLU ) / MUM ) ) ) ) ) / ( MUC / RMSe ) )", "obj1": 0.9313929313929314, "obj2": 0.02658787299487974}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Max( Const,( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( MUC * DS ) * Max( RRSe,( DS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.7089397089397089, "obj2": 0.11438906058619913}, {"determining": "( Min( Max( ACS,AMS ) ,ACS ) - ( Min( RRS ,MRS ) / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) + ( DS / RRSe ) ) ) - Min( ( Min( RMSe ,DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.5945945945945946, "obj2": 0.299948012569749}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.8856548856548857, "obj2": 0.045443631098991376}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( RCSe + MUR ) ,Min( MUR ,DS ) ) )", "obj1": 0.7422037422037422, "obj2": 0.10347943760367215}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,ACS ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( CS - MUR ) ) ) ,( ( MLU * MUC ) * ( Max( RMSe,DS ) / ( RCSe * CS ) ) ) ) )", "obj1": 0.9542619542619543, "obj2": 0.021139347462071204}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( ( FirstVNF_RAM_Server - Const ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( MUC * MLU ) / ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) ) ) ) ,MUC ) ,DS )", "obj1": 0.9584199584199584, "obj2": 0.017515118903079732}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( PN,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,MUC ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( Min( Min( ( ( RCSe / MLU ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS ),RMSe ) ) ) )", "obj1": 0.8232848232848233, "obj2": 0.07188635864621476}, {"determining": "( FirstVNF_CPU_Server - ( ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) + BR ) )", "choosing": "( Min( Max( Min( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) ,Max( ( RRSe * MUM ),( MUR * DS ) ) ),( Max( Max( DS,DS ),( MLU + RRSe ) ) + Min( ( RCSe - RCSe ) ,Min( DS ,MUC ) ) ) ) ,( RMSe / ( DS / MLU ) ) ) - Min( MUC ,MUC ) )", "obj1": 0.9625779625779626, "obj2": 0.013954431838696997}, {"determining": "( Min( Max( FirstVNF_RAM,MRS ) ,( ACS - FirstVNF_RAM_Server ) ) + ( MRS + ACS ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / Min( DS ,RRSe ) ) ) - Min( ( RCSe + MUR ) ,Min( MUR ,DS ) ) )", "obj1": 0.5987525987525988, "obj2": 0.29654150854164674}, {"determining": "( Min( ACS ,FirstVNF_RAM ) - ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS / MLU ) ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.604989604989605, "obj2": 0.29554021702660943}, {"determining": "Min( ( ( PN + Max( PN,PN ) ) - ( MDR * DDR ) ) ,Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,MUC ) ,RCSe )", "obj1": 0.9459459459459459, "obj2": 0.021723507931823493}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( RRS ,MRS ) / FirstVNF_RAM_Server ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( ( ( ( MUC / MUM ) / Max( MLU,RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( MUC ,MUC ) + CS ) )", "obj1": 0.9875259875259875, "obj2": 0.004016308245428156}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_CPU_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( RCSe / MLU ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.8773388773388774, "obj2": 0.047254484547869846}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( MRS / ( Max( FirstVNF_CPU_Server,AMS ) * MRS ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( RCSe / MLU ) / Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.9688149688149689, "obj2": 0.012774687905604624}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN + FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,ACS ) ) )", "choosing": "( Min( RCSe ,DS ) / ( MUC / RMSe ) )", "obj1": 0.8191268191268192, "obj2": 0.07268298389273661}, {"determining": "Min( Max( ( BR - MRS ),BR ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Max( PN,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * MRS ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) ) )", "choosing": "Max( Min( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) ,Max( ( RRSe * DS ),( ( RMSe / ( DS / RCSe ) ) * DS ) ) ),Max( Max( Max( DS,DS ),( MLU + RRSe ) ),Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 0.8128898128898129, "obj2": 0.07425058905094954}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN + FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,ACS ) ) )", "choosing": "( Min( MUC ,DS ) + ( MUC / RMSe ) )", "obj1": 0.7920997920997921, "obj2": 0.08244822398031772}, {"determining": "Min( Max( ( BR - MRS ),BR ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) ) )", "choosing": "Max( Min( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) ,Max( ( RRSe * DS ),( ( RMSe / ( DS / RRSe ) ) * DS ) ) ),( Max( Max( DS,DS ),( MLU + RRSe ) ) + Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 0.8004158004158004, "obj2": 0.07996154094915608}, {"determining": "( ( ( PN + Max( ( FirstVNF_CPU_Server - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( ( CS * MLU ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.7941787941787942, "obj2": 0.08070897211836243}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.8024948024948025, "obj2": 0.07782679691135032}, {"determining": "( ( ( PN + Max( ( PN * FirstVNF_RAM_Server ),PN ) ) / ( Max( ( ( PN + Max( PN,PN ) ) / ( ( Min( ACS ,ACS ) - ( MRS + DDR ) ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( RRSe - Min( ( ( RMSe * DS ) * Max( RRSe,( MLU * DS ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.8711018711018711, "obj2": 0.051724401291781276}], "12": [{"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ),RRS ) ) ) * Min( MRS ,MRS ) ) )", "choosing": "Min( RMSe ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Max( ( Min( ACS ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) / ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( ( ( ( MUC / ( ( MUC - MUC ) + RCSe ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( ( RCSe * CS ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RRSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.5841995841995842, "obj2": 0.30023436247393176}, {"determining": "( FirstVNF_CPU_Server - Max( MRS,DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / DS ) ) ) - Min( MUC ,MUC ) )", "obj1": 0.6133056133056133, "obj2": 0.2527836962013123}, {"determining": "( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) / Min( MRS ,MRS ) ) ) - ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( DS ,RMSe ) ,( DS / MLU ) ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6403326403326404, "obj2": 0.21874592939855048}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "Min( Max( DS,Max( CS,MUR ) ) ,( ( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe / MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) + Max( RCSe,RMSe ) ) ) ) + MUC ) )", "obj1": 0.6444906444906445, "obj2": 0.2104597719271577}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( Max( Min( BR ,CRS ),MRS ) ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS / MLU ) ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6486486486486487, "obj2": 0.16722069263789066}, {"determining": "( ( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) ) - ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( ( Max( MUM,DS ) + ( RRSe * RMSe ) ) * Min( Min( DS ,RMSe ) ,( DS / MLU ) ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6029106029106029, "obj2": 0.2890420136124452}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( MUR / MLU ) ) ) - Min( MUC ,MUC ) )", "obj1": 0.681912681912682, "obj2": 0.13072775974577813}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - RRS )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,MUC ) ,RCSe )", "obj1": 0.9064449064449065, "obj2": 0.04019695491830625}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( Max( ( ( PN * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,RRS ) ),MRS ) ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUM * MUR ) ) ,( Min( MUC ,( ( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) + Max( RCSe,RMSe ) ) ) ) + MUC ) ) + RCSe ) )", "obj1": 0.6715176715176715, "obj2": 0.15061184074448233}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / MLU ) ) ) - Min( MUC ,MUC ) )", "obj1": 0.7006237006237006, "obj2": 0.12072536279990319}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( MUC ,RMSe ) + RCSe ) + ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) )", "obj1": 0.8336798336798337, "obj2": 0.07074719895399018}, {"determining": "( ( ( PN + Max( ( Min( ACS ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( MRS,FirstVNF_Mem ) ) ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( ( ( ( MUC / ( Min( MUC ,MUC ) + RCSe ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RRSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9251559251559252, "obj2": 0.027693365297609428}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) ) - MDR )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.8503118503118503, "obj2": 0.05908119841432187}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( MRS / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( PN + Max( BR,PN ) ) ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.8898128898128899, "obj2": 0.04242134854727453}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( MRS / ( Max( FirstVNF_CPU_Server,AMS ) * MRS ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( RCSe / MLU ) / Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.9688149688149689, "obj2": 0.012774687905604624}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( RRS ,MRS ) / FirstVNF_CPU ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,MUC ) ,RCSe )", "obj1": 0.9854469854469855, "obj2": 0.005825691266292998}, {"determining": "( ( ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) ) - MDR )", "choosing": "( ( Min( ( RMSe / MUM ) ,( DS - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( MUC ,MUC ) + CS ) )", "obj1": 0.8773388773388774, "obj2": 0.045247312731902585}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,ACS ) ) )", "choosing": "( Min( RCSe ,RCSe ) / ( MUC / RMSe ) )", "obj1": 0.7567567567567568, "obj2": 0.09554564680076605}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) ) - MDR )", "choosing": "( Min( RCSe ,RCSe ) / ( MUC / RMSe ) )", "obj1": 0.8648648648648649, "obj2": 0.05248246211265261}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,CRS ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( RRSe - Min( ( ( RMSe * DS ) * Max( RRSe,( MLU * DS ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6652806652806653, "obj2": 0.15536092759769377}, {"determining": "Min( Max( ( BR - MRS ),BR ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Max( PN,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * MRS ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) ) )", "choosing": "Max( Min( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) ,Max( ( RRSe * DS ),( ( RMSe / ( DS / RCSe ) ) * DS ) ) ),Max( Max( Max( DS,DS ),( MLU + RRSe ) ),Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 0.8128898128898129, "obj2": 0.07425058905094954}, {"determining": "( ( ( ACS + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) ) - MDR )", "choosing": "( ( Min( ( RMSe / MUM ) ,( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( MUC ,MUC ) + CS ) )", "obj1": 0.8523908523908524, "obj2": 0.05563139622724544}, {"determining": "( FirstVNF_CPU_Server - ( ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) + DDR ) )", "choosing": "Min( Min( ( ( RRSe / MUC ) / ( Min( RCSe ,DS ) / ( MUC / RMSe ) ) ) ,( ( RCSe / RRSe ) - Min( RRSe ,RRSe ) ) ) ,DS )", "obj1": 0.9542619542619543, "obj2": 0.015672674127903366}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe + ( ( DS * MLU ) / MUM ) ) ) ,MUC ) ,RCSe )", "obj1": 0.7505197505197505, "obj2": 0.09787710006599248}, {"determining": "( ( ( PN + Max( ( FirstVNF_CPU_Server - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,ACS ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( Max( CS,( ( MLU / RRSe ) * ( ( ( RMSe / ( DS / RRSe ) ) / DS ) / ( RCSe * ( ( MLU * MLU ) / MUM ) ) ) ) ) / ( MUC / RMSe ) )", "obj1": 0.7837837837837838, "obj2": 0.08753180028129338}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( RRS ,MRS ) / FirstVNF_RAM_Server ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( ( ( ( MUC / MUM ) / Max( MLU,RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( MUC ,MUC ) + CS ) )", "obj1": 0.9875259875259875, "obj2": 0.004016308245428156}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.7234927234927235, "obj2": 0.10689139611433349}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( ( ( Min( ( RMSe / MUM ) ,( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( MUC ,MUC ) + CS ) ) + RCSe ) + ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) )", "obj1": 0.8690228690228691, "obj2": 0.04940854623681306}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,CRS ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( RRSe - DS ) ) ,( ( DS + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * ( Max( MUR,CS ) * ( MUC - DS ) ) ) * ( RRSe * ( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.09189609583808378}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Max( Const,( ( AMS * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - ( ( MLU * DS ) * Max( RCSe,RMSe ) ) )", "obj1": 0.5925155925155925, "obj2": 0.2965876633948845}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / MRS ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / MLU ) ) ) - Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / Min( DS ,RRSe ) ) ) )", "obj1": 0.7172557172557172, "obj2": 0.11184174138448304}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,CRS ) ) * ( ( MDR * ( ( AMS - FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC / DS ) ) ,Max( RMSe,( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6548856548856549, "obj2": 0.15672216209006468}, {"determining": "Min( ( ( PN + Max( PN,( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) ) ) - ( MDR * DDR ) ) ,Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( ( CS * MLU ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9355509355509356, "obj2": 0.0231129837689313}, {"determining": "Min( Max( ( BR - MRS ),BR ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) ) )", "choosing": "Min( Min( ( ( RCSe / MLU ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.7401247401247402, "obj2": 0.10044444745378586}, {"determining": "( ( ( PN + Max( BR,PN ) ) / Min( ACS ,FirstVNF_RAM ) ) + ( ( RRS / AMS ) * Min( ( ACS / AMS ) ,ACS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / Min( ( ( RMSe * DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( Max( MUR,CS ),RMSe ) ) ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.5966735966735967, "obj2": 0.2931379227046913}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,CRS ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / Min( DS ,RRSe ) ) ) - Min( ( RCSe + MUR ) ,Min( MUR ,DS ) ) )", "obj1": 0.6528066528066528, "obj2": 0.1623081871006037}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "Min( Max( Max( MUR,MUM ),( MUM * MUR ) ) ,( Min( MUC ,MUC ) + RCSe ) )", "obj1": 0.7713097713097713, "obj2": 0.08990606027375317}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.8024948024948025, "obj2": 0.07782679691135032}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Max( Const,( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( MUC * DS ) * Max( RRSe,( DS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.7089397089397089, "obj2": 0.11438906058619913}, {"determining": "( FirstVNF_CPU_Server - ( ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) + BR ) )", "choosing": "( Min( Max( Min( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) ,Max( ( RRSe * MUM ),( MUR * DS ) ) ),( Max( Max( DS,DS ),( MLU + RRSe ) ) + Min( ( RCSe - RCSe ) ,Min( DS ,MUC ) ) ) ) ,( RMSe / ( DS / MLU ) ) ) - Min( MUC ,MUC ) )", "obj1": 0.9625779625779626, "obj2": 0.013954431838696997}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.7318087318087318, "obj2": 0.1060739430250456}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( PN,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( Min( Min( Max( MUR,MUC ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( Min( Min( ( ( RCSe / MLU ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS ),RMSe ) ) ) )", "obj1": 0.8232848232848233, "obj2": 0.07188635864621476}, {"determining": "( ( ( PN + ( ( Min( ACS ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( MRS,FirstVNF_Mem ) ) ) - ( MRS + DDR ) ) - PN ) ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) - MDR )", "choosing": "( ( Min( ( ( ( MUC / ( Min( MUC ,MUC ) + RCSe ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * RCSe ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RRSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RMSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9293139293139293, "obj2": 0.02566513287840402}, {"determining": "Min( ( ( PN + Max( PN,PN ) ) - ( MDR * DDR ) ) ,Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,MUC ) ,RCSe )", "obj1": 0.9480249480249481, "obj2": 0.02042838473037595}, {"determining": "Min( ( ( PN + Max( PN,PN ) ) - ( MDR * DDR ) ) ,Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,MUC ) ,RCSe )", "obj1": 0.9459459459459459, "obj2": 0.021723507931823493}, {"determining": "( ( ( ACS + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,ACS ) ) )", "choosing": "( Min( RCSe ,DS ) / ( MUC / ( Min( ( RMSe / MUM ) ,( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) ) )", "obj1": 0.7338877338877339, "obj2": 0.1014134994743524}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( MDR * FirstVNF_Mem ) ) ) - MDR )", "choosing": "Min( Min( ( ( RRSe / MUC ) / ( Min( RCSe ,DS ) / ( MUC / RMSe ) ) ) ,( ( RCSe / RRSe ) - Min( RRSe ,RRSe ) ) ) ,DS )", "obj1": 0.7858627858627859, "obj2": 0.08380986714853106}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN + FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,ACS ) ) )", "choosing": "( Min( RCSe ,DS ) / ( MUC / RMSe ) )", "obj1": 0.8191268191268192, "obj2": 0.07268298389273661}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN + FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,ACS ) ) )", "choosing": "( Min( MUC ,DS ) + ( MUC / RMSe ) )", "obj1": 0.7920997920997921, "obj2": 0.08244822398031772}], "13": [{"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,Max( BR,PN ) ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) / MLU ) ) ) - Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ),RRS ) ) ) * Min( MRS ,MRS ) ) )", "choosing": "Min( RMSe ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.5841995841995842, "obj2": 0.30023436247393176}, {"determining": "( FirstVNF_CPU_Server - Max( MRS,DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / DS ) ) ) - Min( MUC ,MUC ) )", "obj1": 0.6133056133056133, "obj2": 0.2527836962013123}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "Min( Max( DS,Max( CS,MUR ) ) ,( ( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe / MUR ) / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * Max( RRSe,DS ) ) ,( ( MLU * DS ) + Max( RCSe,RMSe ) ) ) ) + MUC ) )", "obj1": 0.6444906444906445, "obj2": 0.2104597719271577}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( Max( Min( BR ,CRS ),MRS ) ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS / MLU ) ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6486486486486487, "obj2": 0.16722069263789066}, {"determining": "( ( ( PN + Max( BR,PN ) ) / Min( ACS ,FirstVNF_RAM ) ) + ( ( RRS / AMS ) * Min( ( ACS / AMS ) ,ACS ) ) )", "choosing": "Min( Min( ( ( RCSe / MLU ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.632016632016632, "obj2": 0.24406803385709894}, {"determining": "( ( ( ( PN + Max( BR,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) + ( ( RRS / AMS ) * Max( FirstVNF_Mem,ARS ) ) ) - ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( ( Max( MUM,DS ) + ( RRSe * RMSe ) ) * Min( Min( DS ,RMSe ) ,( DS / MLU ) ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6029106029106029, "obj2": 0.2890420136124452}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( MUR / MLU ) ) ) - Min( MUC ,MUC ) )", "obj1": 0.681912681912682, "obj2": 0.13072775974577813}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - ( ( RRS / AMS ) * Min( ( ACS / AMS ) ,ACS ) ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / MLU ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6632016632016632, "obj2": 0.14216839955084026}, {"determining": "( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) / Min( MRS ,MRS ) ) ) - ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( ( ( RMSe * DS ) * ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( DS ,RMSe ) ,( DS / MLU ) ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6403326403326404, "obj2": 0.21874592939855048}, {"determining": "( ( ( ACS + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( MRS,RRS ) ) ) - Min( MRS ,ACS ) ) )", "choosing": "( Min( RCSe ,DS ) / ( MUC / ( Min( RMSe ,( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) ) )", "obj1": 0.6985446985446986, "obj2": 0.11934739599672513}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - RRS )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,MUC ) ,RCSe )", "obj1": 0.9064449064449065, "obj2": 0.04019695491830625}, {"determining": "( ( ( PN + Max( ( Min( ACS ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( MRS,FirstVNF_Mem ) ) ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( ( ( ( MUC / ( Min( MUC ,MUC ) + RCSe ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RRSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9251559251559252, "obj2": 0.027693365297609428}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,CRS ) ) * ( ( MDR * ( ( AMS - FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC / DS ) ) ,Max( RMSe,( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.6548856548856549, "obj2": 0.15672216209006468}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( MUC ,RMSe ) + RCSe ) + ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) )", "obj1": 0.8274428274428275, "obj2": 0.06942290452670202}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,Min( ACS ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) ) ) ) ) - MDR )", "choosing": "( Min( ( Max( MUR,CS ) * ( RCSe - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.841995841995842, "obj2": 0.06238445717720384}, {"determining": "( ( ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) ) - MDR )", "choosing": "( ( Min( ( RMSe / MUM ) ,( DS - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( MUC ,MUC ) + CS ) )", "obj1": 0.8773388773388774, "obj2": 0.045247312731902585}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( MRS / ( Max( FirstVNF_CPU_Server,AMS ) * MRS ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Min( ( RMSe / MUM ) ,( DS - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( MUC ,MUC ) + CS ) )", "obj1": 0.972972972972973, "obj2": 0.011351099671648048}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( ( MRS / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( PN + Max( BR,PN ) ) ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "Min( Min( Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS )", "obj1": 0.8898128898128899, "obj2": 0.04242134854727453}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe + ( ( DS * MLU ) / MUM ) ) ) ,MUC ) ,RCSe )", "obj1": 0.7505197505197505, "obj2": 0.09787710006599248}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( RRS ,MRS ) / FirstVNF_CPU ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) ,MUC ) ,RCSe )", "obj1": 0.9854469854469855, "obj2": 0.005825691266292998}, {"determining": "Min( Max( ( BR - MRS ),BR ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Max( PN,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * MRS ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) ) )", "choosing": "Max( Min( ( ( MLU * DS ) * Max( RCSe,RMSe ) ) ,Max( ( RRSe * DS ),( ( RMSe / ( DS / RCSe ) ) * DS ) ) ),Max( Max( Max( DS,DS ),( MLU + RRSe ) ),Min( ( MUR - RCSe ) ,Min( DS ,MUC ) ) ) )", "obj1": 0.8128898128898129, "obj2": 0.07425058905094954}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Max( Const,( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - Min( ( ( MUC * DS ) * Max( RRSe,( DS - MUR ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.7089397089397089, "obj2": 0.11438906058619913}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( ( ( Min( ( RMSe / MUM ) ,( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( MUC ,MUC ) + CS ) ) + RCSe ) + ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) )", "obj1": 0.8690228690228691, "obj2": 0.04940854623681306}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Max( Const,( ( AMS * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) - ( ( MLU * DS ) * Max( RCSe,RMSe ) ) )", "obj1": 0.5925155925155925, "obj2": 0.2965876633948845}, {"determining": "( ( ( ACS + Max( ( Min( Max( FirstVNF_CPU_Server,AMS ) ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,ACS ) ) )", "choosing": "( Min( RCSe ,DS ) / ( MUC / ( Min( ( RMSe / MUM ) ,( ( RCSe / MLU ) / Min( Min( Max( MUR,CS ) ,( MUC - DS ) ) ,( ( RMSe + MUR ) / ( DS / RRSe ) ) ) ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) ) )", "obj1": 0.738045738045738, "obj2": 0.10017883047756249}, {"determining": "( ( ( PN + Max( BR,PN ) ) / Min( ACS ,FirstVNF_RAM ) ) + ( ( RRS / AMS ) * Min( ( ACS / AMS ) ,ACS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / Min( ( ( RMSe * DS ) * Max( RRSe,( MUR - MUR ) ) ) ,( ( MLU * DS ) * Max( Max( MUR,CS ),RMSe ) ) ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.5966735966735967, "obj2": 0.2931379227046913}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,CRS ) ) * ( ( MDR * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / Min( DS ,RRSe ) ) ) - Min( ( RCSe + MUR ) ,Min( MUR ,DS ) ) )", "obj1": 0.6528066528066528, "obj2": 0.1623081871006037}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - MDR )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.8024948024948025, "obj2": 0.07782679691135032}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN + FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,ACS ) ) )", "choosing": "( Min( MUC ,DS ) + ( MUC / RMSe ) )", "obj1": 0.7920997920997921, "obj2": 0.08244822398031772}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) ) - MDR )", "choosing": "( Min( RCSe ,DS ) / ( MUC / RMSe ) )", "obj1": 0.8981288981288982, "obj2": 0.04168815031011173}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( MDR * FirstVNF_Mem ) ) ) - MDR )", "choosing": "Min( Min( ( ( RRSe / MUC ) / ( Min( RCSe ,DS ) / ( MUC / RMSe ) ) ) ,( ( RCSe / RRSe ) - Min( RRSe ,RRSe ) ) ) ,DS )", "obj1": 0.7858627858627859, "obj2": 0.08380986714853106}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( ( Min( ( ( Max( ( ( RCSe + MLU ) / Max( RMSe,MLU ) ),( ( DS - MLU ) + ( RCSe - DS ) ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RCSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.7234927234927235, "obj2": 0.10689139611433349}, {"determining": "( ( PN + Max( ( Min( ACS ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) - ( MRS + DDR ) ),PN ) ) - Max( MRS,DDR ) )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / DS ) ) ) - ( ( MUM + MLU ) / ( MUM - MUR ) ) )", "obj1": 0.997920997920998, "obj2": 0.00104091456896437}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) )", "choosing": "( ( Min( ( ( ( MUC / ( Min( MUC ,MUC ) + RCSe ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * DS ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( ( RCSe * CS ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RRSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RCSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.7318087318087318, "obj2": 0.1048135153900943}, {"determining": "( FirstVNF_CPU_Server - ( ( Max( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ),FirstVNF_CPU ) * FirstVNF_RAM_Server ) + DDR ) )", "choosing": "( ( ( ( RMSe / MUM ) / Max( MLU,RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( MUC ,MUC ) + CS ) )", "obj1": 0.9438669438669439, "obj2": 0.017103454061547115}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) ) - MDR )", "choosing": "( Min( ( Max( MUR,CS ) * ( MUC - DS ) ) ,( RMSe / ( DS / RRSe ) ) ) - Min( Min( ( Max( RRSe,DS ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,( ( MLU * DS ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.8607068607068608, "obj2": 0.05483756056870115}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( MDR * FirstVNF_Mem ) ) ) - MDR )", "choosing": "Min( Min( ( ( RRSe / MUC ) / ( Min( RCSe ,DS ) / ( MUC / RMSe ) ) ) ,( ( RCSe / RRSe ) - Min( RRSe ,RRSe ) ) ) ,DS )", "obj1": 0.7983367983367984, "obj2": 0.07845307215211456}, {"determining": "( ( ( PN + Max( PN,PN ) ) / ( Max( PN,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( Min( RCSe ,DS ) + ( MUC / RMSe ) )", "obj1": 0.9417879417879418, "obj2": 0.021897641085496956}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,ACS ) ) )", "choosing": "( Min( RCSe ,RCSe ) / ( MUC / RMSe ) )", "obj1": 0.7796257796257796, "obj2": 0.08724046658569487}, {"determining": "( ( ( ACS + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) ) - MDR )", "choosing": "( ( Min( ( RMSe / MUM ) ,( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( MUC ,MUC ) + CS ) )", "obj1": 0.8523908523908524, "obj2": 0.05563139622724544}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( FirstVNF_Mem,AMS ) ) ) ) - MDR )", "choosing": "( Min( RCSe ,RCSe ) / ( MUC / RMSe ) )", "obj1": 0.8648648648648649, "obj2": 0.05248246211265261}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) - ( Max( PN,FirstVNF_CPU ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( Min( ( ( RCSe / MLU ) / ( RCSe * CS ) ) ,( ( RCSe / RRSe ) - Max( RRSe,RRSe ) ) ) ,DS ),RMSe ) + RCSe ) + ( ( ( MUM * MUR ) * ( MUC + DS ) ) * RMSe ) )", "obj1": 0.9667359667359667, "obj2": 0.012665977341977363}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,ACS ) ) )", "choosing": "( Min( RCSe ,RCSe ) / ( MUC / RMSe ) )", "obj1": 0.7567567567567568, "obj2": 0.09554564680076605}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( ( Const * ( ( PN + FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,ACS ) ) )", "choosing": "( Min( RCSe ,DS ) / ( MUC / RMSe ) )", "obj1": 0.8191268191268192, "obj2": 0.07268298389273661}, {"determining": "( ( ( PN + ( ( Min( ACS ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( MRS,FirstVNF_Mem ) ) ) - ( MRS + DDR ) ) - PN ) ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) - MDR )", "choosing": "( ( Min( ( ( ( MUC / ( Min( MUC ,MUC ) + RCSe ) ) * ( Max( Min( MUC ,RMSe ),( MUR + MUM ) ) + ( ( RCSe / DS ) + ( RMSe + DS ) ) ) ) * ( ( ( ( CS * MLU ) * ( MUM + RRSe ) ) / ( Max( RMSe,MLU ) - ( DS + DS ) ) ) * ( Max( Min( MUR ,RRSe ),Max( RMSe,DS ) ) * ( ( RMSe - RRSe ) - ( RRSe / MUM ) ) ) ) ) ,( Max( ( Min( ( MUR * RCSe ) ,Max( CS,RRSe ) ) * ( ( RMSe + DS ) + Max( CS,RMSe ) ) ),( ( Max( RCSe,MUM ) * ( RMSe - RCSe ) ) * ( ( DS / MLU ) * ( RMSe * CS ) ) ) ) * ( ( ( ( MUC - MUR ) * ( RRSe / RMSe ) ) / ( Max( MUC,RRSe ) + Max( DS,RMSe ) ) ) + ( ( ( RRSe / RRSe ) / ( DS + MLU ) ) - ( Max( MUM,MLU ) * ( RCSe * RMSe ) ) ) ) ) ) + Min( Max( ( ( ( ( CS * MLU ) + ( RCSe / RCSe ) ) * ( Min( MLU ,DS ) - ( MUM * RRSe ) ) ) - ( Min( Min( DS ,RCSe ) ,Min( MUC ,RRSe ) ) - ( ( CS / CS ) / Min( RRSe ,MLU ) ) ) ),( ( Min( ( MLU * RCSe ) ,( RRSe + MLU ) ) / Max( Min( RMSe ,MUM ),Max( DS,CS ) ) ) / ( ( Min( MUC ,MUM ) / ( MLU * DS ) ) * ( Max( CS,MUM ) + Max( MUM,RCSe ) ) ) ) ) ,Max( ( ( Min( Max( MUR,CS ) ,( MUR * MUM ) ) + Min( Min( DS ,RMSe ) ,( RMSe + MUM ) ) ) - Max( Max( ( CS / MUC ),( RRSe + MLU ) ),Max( ( MLU * MUR ),( DS + MLU ) ) ) ),( Min( Max( ( MUM - RCSe ),( MUC / MLU ) ) ,( ( MUM - MLU ) - Max( MUC,MUC ) ) ) + Max( ( ( RCSe - DS ) + Max( CS,MUM ) ),Max( Min( MUC ,DS ),Max( RMSe,DS ) ) ) ) ) ) ) + ( Min( Max( ( ( ( Max( MUM,DS ) + ( DS * RMSe ) ) * Min( Min( MLU ,RMSe ) ,( DS - MLU ) ) ) + Min( ( ( DS / MUC ) / Min( MLU ,DS ) ) ,( ( MUR / MLU ) / ( MUR + RMSe ) ) ) ),( Max( Max( ( MUR - RRSe ),Max( MLU,MUC ) ),Min( ( MLU - RRSe ) ,Max( MUM,DS ) ) ) / Max( Max( CS,RMSe ),( Max( MUR,MLU ) / ( MUM + MUC ) ) ) ) ) ,( ( ( Min( ( RCSe / RMSe ) ,( MUM - MUC ) ) / Max( Max( RMSe,MUC ),Max( CS,RCSe ) ) ) - Max( ( ( RCSe + MUC ) * ( RCSe + RCSe ) ),( ( CS - MLU ) / Min( MUC ,MLU ) ) ) ) + ( ( MUC / RMSe ) - ( ( ( MUM + MLU ) / ( MUM - MUR ) ) + ( Min( MUC ,MUM ) * ( MUC * MUM ) ) ) ) ) ) + ( Max( ( Min( ( ( RCSe / MUR ) * ( MUM / CS ) ) ,( Max( MUM,RCSe ) - ( MUR - RCSe ) ) ) * Min( Max( ( RCSe + MUC ),( MUM + RRSe ) ) ,( ( DS / RMSe ) + ( MUM * RRSe ) ) ) ),( Max( ( ( CS + RRSe ) * ( RRSe + RMSe ) ),Max( Min( RCSe ,MUM ),( DS + DS ) ) ) * Min( ( ( RCSe - RRSe ) + Min( RRSe ,MUC ) ) ,Min( ( MUC / MLU ) ,( CS + RRSe ) ) ) ) ) + ( Min( ( Max( ( DS - MUM ),Max( DS,MLU ) ) + Min( ( MUC - MUC ) ,Min( MUR ,RRSe ) ) ) ,Min( ( ( DS - RMSe ) + Max( CS,MLU ) ) ,( ( DS * RCSe ) * Max( MUR,RRSe ) ) ) ) + ( Min( ( ( MUR + MUM ) - Max( MUR,RMSe ) ) ,( ( DS * DS ) + ( MUM * RRSe ) ) ) + Min( ( ( MUR * MUC ) / ( RCSe * MLU ) ) ,( ( MUC + CS ) - Max( MUC,MUR ) ) ) ) ) ) ) )", "obj1": 0.9293139293139293, "obj2": 0.02566513287840402}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,ACS ) ) )", "choosing": "( ( ( RRSe / DS ) / ( RCSe * ( ( DS * MLU ) / MUM ) ) ) / ( MUC / RMSe ) )", "obj1": 0.7193347193347194, "obj2": 0.1089871478639093}, {"determining": "( ( PN * FirstVNF_RAM_Server ) - ( Max( ( Min( RRS ,MRS ) / FirstVNF_CPU ),MRS ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) ) ) )", "choosing": "( ( ( ( RMSe / MUM ) / ( MLU - RMSe ) ) - ( Min( CS ,DS ) + ( CS - DS ) ) ) - ( Min( MUC ,MUC ) + CS ) )", "obj1": 0.9875259875259875, "obj2": 0.004016308245428156}, {"determining": "( ( ( PN + Max( ( Min( ACS ,ACS ) - ( MRS + DDR ) ),PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),Max( BR,AMS ) ) ) ) - MDR )", "choosing": "( Min( RCSe ,RCSe ) / ( ( ( MLU * DS ) * Max( Max( MUR,CS ),RMSe ) ) / RMSe ) )", "obj1": 0.8461538461538461, "obj2": 0.05996909168500572}, {"determining": "Min( Max( ( BR - MRS ),BR ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / Max( PN,FirstVNF_RAM ) ) * ( ( Const * ( ( PN * FirstVNF_RAM_Server ) - Max( CRS,RRS ) ) ) - Min( MRS ,MRS ) ) ) )", "choosing": "( Min( RCSe ,DS ) / ( MUC / RMSe ) )", "obj1": 0.8212058212058212, "obj2": 0.07052759700529578}]}