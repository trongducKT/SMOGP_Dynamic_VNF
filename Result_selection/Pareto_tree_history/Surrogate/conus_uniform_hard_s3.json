{"1": [{"determining": "Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( Const - DDR ) )", "choosing": "( ( MUC * DS ) - ( MUC + RCSe ) )", "obj1": 0.7047817047817048, "obj2": 0.19756069688833428}, {"determining": "Min( Min( ACS ,DDR ) ,Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) * ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MUC ,( RCSe + MUM ) ),( RMSe * MUR ) )", "obj1": 0.9958419958419958, "obj2": 0.0037627579009090577}, {"determining": "( ( ( ( AMS - BR ) - MRS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( Min( MUC ,( Min( RCSe ,MUR ) * MUM ) ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( ( BR * BR ) * ( PN / ACS ) ) - FirstVNF_CPU_Server ),MRS ) - Max( MRS,RRS ) ) * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / MDR ) ) )", "choosing": "( Min( ( MUR - Max( ( CS + Min( RMSe ,RCSe ) ),MUR ) ) ,Max( DS,MUM ) ) - Min( ( CS / RCSe ) ,( RMSe / MUR ) ) )", "obj1": 0.9937629937629938, "obj2": 0.004874075651852956}, {"determining": "( ( ( BR / FirstVNF_RAM ) * ( ( MRS + ( MRS / FirstVNF_Mem_Server ) ) - RRS ) ) + ( ( AMS - Const ) - ( Min( DDR ,( MRS + ( Const - FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( RRSe / MUM ) ) * ( RRSe / DS ) )", "obj1": 0.7297297297297297, "obj2": 0.19003325944948105}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / CRS ),DDR ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),( RRS * PN ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( ( ( MLU + MUM ) - RCSe ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,DDR ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + Max( FirstVNF_CPU,BR ) ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),Min( ( CS + DS ) ,( ( MUC * RCSe ) * ( RRSe * ( Min( Min( ( CS - DS ) ,Max( DS,RRSe ) ) ,RMSe ) * ( ( ( CS * MUR ) - ( DS - RRSe ) ) + MUC ) ) ) ) ) )", "obj1": 0.8066528066528067, "obj2": 0.11277765506620463}, {"determining": "( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( ( ( DS - CS ) + Min( RCSe ,RMSe ) ) / ( ( MLU + MUM ) * Min( RMSe ,MUR ) ) )", "obj1": 0.9168399168399168, "obj2": 0.06035870521337024}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Const ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( Max( ( MLU * MUC ),MUM ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const - ACS ) ,( FirstVNF_RAM + ARS ) ),( ( MRS + CRS ) + Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / RRSe ) - ( RMSe * RRSe ) ) + ( Min( RCSe ,MUM ) + Max( MUC,MUM ) ) )", "obj1": 0.6694386694386695, "obj2": 0.2487869046484682}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( PN / MRS ) ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( ( DS / MUM ),Max( CS,MUC ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( ACS ,ARS ) + Max( CRS,ACS ) ),( ( AMS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server * DDR ) ) ) ,Max( ( ( AMS / FirstVNF_RAM ) / ( ARS + FirstVNF_CPU ) ),( ( PN * ACS ) - Min( DDR ,ARS ) ) ) )", "choosing": "( Min( Max( RMSe,MLU ) ,RMSe ) / ( MUR - MUM ) )", "obj1": 0.681912681912682, "obj2": 0.2485615735575209}, {"determining": "( Min( Max( Max( RRS,PN ),( ARS / ACS ) ) ,( ( BR * MDR ) * ( CRS / AMS ) ) ) + ( ( ( RRS / DDR ) - ( FirstVNF_RAM_Server / MDR ) ) / Min( ( DDR + FirstVNF_RAM ) ,( PN - ARS ) ) ) )", "choosing": "( ( ( ( MLU + MLU ) * ( MUR * RCSe ) ) / Min( ( RCSe - RRSe ) ,Max( MUR,MUC ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) )", "obj1": 0.6403326403326404, "obj2": 0.2643581021960421}, {"determining": "( Min( FirstVNF_Mem_Server ,CRS ) * ( CRS / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( Min( MUM ,Min( ( MUR - MUC ) ,MUM ) ) ,( Min( MLU ,RRSe ) * ( MLU - CS ) ) ) )", "obj1": 0.6507276507276507, "obj2": 0.2571222829609951}, {"determining": "( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( Max( RMSe,Max( ( DS / ( RRSe * Min( Min( MLU ,MUM ) ,Max( MUR,RRSe ) ) ) ),DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / Max( BR,ARS ) )", "choosing": "Max( ( MUC / MUR ),( Max( ( DS / MLU ),( Max( ( CS - RMSe ),Max( ( Max( CS,RMSe ) * MLU ),Max( MUC,RMSe ) ) ) * MLU ) ) * MUR ) )", "obj1": 0.6673596673596673, "obj2": 0.2533519362579169}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * RMSe ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,BR ) * ( AMS * ARS ) ) * Max( ( MRS - ( FirstVNF_CPU_Server / BR ) ),( MDR * BR ) ) ) - Min( Min( ( FirstVNF_Mem + DDR ) ,( MRS / Const ) ) ,( Max( FirstVNF_RAM,Const ) - Max( MRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RRSe - MUC ) ) * Min( Min( MUC ,RMSe ) ,( ( ( Min( RRSe ,( RRSe - RMSe ) ) / MUM ) / RRSe ) - RCSe ) ) ) * Max( Min( ( MUC + MUC ) ,( DS * CS ) ),Min( ( MLU / RRSe ) ,( DS * RCSe ) ) ) )", "obj1": 0.762993762993763, "obj2": 0.18124737911595656}, {"determining": "Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( FirstVNF_RAM - Const ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( ( ( ( RRSe - RMSe ) * MUM ) / MUM ) / ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS + MRS ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) * ( ( ( FirstVNF_CPU_Server * ARS ) / ( FirstVNF_Mem + ARS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) / RCSe ) - Max( MUC,( Max( RRSe,MUC ) * MLU ) ) )", "obj1": 0.6486486486486487, "obj2": 0.258813556948602}], "2": [{"determining": "Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( Const - DDR ) )", "choosing": "( ( MUC * DS ) - ( MUC + RCSe ) )", "obj1": 0.7047817047817048, "obj2": 0.19756069688833428}, {"determining": "Min( Min( ACS ,DDR ) ,Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) * ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MUC ,( RCSe + MUM ) ),( RMSe * MUR ) )", "obj1": 0.9958419958419958, "obj2": 0.0037627579009090577}, {"determining": "( ( ( ( AMS - BR ) - MRS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( Min( MUC ,( Min( RCSe ,MUR ) * MUM ) ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( ( BR * BR ) * ( PN / ACS ) ) - FirstVNF_CPU_Server ),MRS ) - Max( MRS,RRS ) ) * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / MDR ) ) )", "choosing": "( Min( ( MUR - Max( ( CS + Min( RMSe ,RCSe ) ),MUR ) ) ,Max( DS,MUM ) ) - Min( ( CS / RCSe ) ,( RMSe / MUR ) ) )", "obj1": 0.9937629937629938, "obj2": 0.004874075651852956}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / CRS ),DDR ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),( RRS * PN ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( ( ( MLU + MUM ) - RCSe ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,DDR ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + Max( FirstVNF_CPU,BR ) ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),Min( ( CS + DS ) ,( ( MUC * RCSe ) * ( RRSe * ( Min( Min( ( CS - DS ) ,Max( DS,RRSe ) ) ,RMSe ) * ( ( ( CS * MUR ) - ( DS - RRSe ) ) + MUC ) ) ) ) ) )", "obj1": 0.8066528066528067, "obj2": 0.11277765506620463}, {"determining": "( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( ( ( DS - CS ) + Min( RCSe ,RMSe ) ) / ( ( MLU + MUM ) * Min( RMSe ,MUR ) ) )", "obj1": 0.9168399168399168, "obj2": 0.06035870521337024}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Const ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( Max( ( MLU * MUC ),MUM ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const - ACS ) ,( FirstVNF_RAM + ARS ) ),( ( MRS + CRS ) + Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / RRSe ) - ( RMSe * RRSe ) ) + ( Min( RCSe ,MUM ) + Max( MUC,MUM ) ) )", "obj1": 0.6694386694386695, "obj2": 0.2487869046484682}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( PN / MRS ) ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( ( DS / MUM ),Max( CS,MUC ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( ACS ,ARS ) + Max( CRS,ACS ) ),( ( AMS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server * DDR ) ) ) ,Max( ( ( AMS / FirstVNF_RAM ) / ( ARS + FirstVNF_CPU ) ),( ( PN * ACS ) - Min( DDR ,ARS ) ) ) )", "choosing": "( Min( Max( RMSe,MLU ) ,RMSe ) / ( MUR - MUM ) )", "obj1": 0.681912681912682, "obj2": 0.2485615735575209}, {"determining": "( Min( FirstVNF_Mem_Server ,CRS ) * ( CRS / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( Min( MUM ,Min( ( MUR - MUC ) ,MUM ) ) ,( Min( MLU ,RRSe ) * ( MLU - CS ) ) ) )", "obj1": 0.6507276507276507, "obj2": 0.2571222829609951}, {"determining": "( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( Max( RMSe,Max( ( DS / ( RRSe * Min( Min( MLU ,MUM ) ,Max( MUR,RRSe ) ) ) ),DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / Max( BR,ARS ) )", "choosing": "Max( ( MUC / MUR ),( Max( ( DS / MLU ),( Max( ( CS - RMSe ),Max( ( Max( CS,RMSe ) * MLU ),Max( MUC,RMSe ) ) ) * MLU ) ) * MUR ) )", "obj1": 0.6673596673596673, "obj2": 0.2533519362579169}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * RMSe ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( FirstVNF_RAM - Const ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( ( ( ( RRSe - RMSe ) * MUM ) / MUM ) / ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS + MRS ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) * ( ( ( FirstVNF_CPU_Server * ARS ) / ( FirstVNF_Mem + ARS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) / RCSe ) - Max( MUC,( Max( RRSe,MUC ) * MLU ) ) )", "obj1": 0.6486486486486487, "obj2": 0.258813556948602}, {"determining": "( ( Min( Max( Const,FirstVNF_RAM_Server ) ,( ( ARS - FirstVNF_RAM ) - CRS ) ) - FirstVNF_CPU ) - FirstVNF_RAM )", "choosing": "Min( ( ( MUR - ( DS / Max( ( RCSe * Max( ( RCSe / DS ),( DS - RMSe ) ) ),( MLU / RRSe ) ) ) ) * ( MUR * DS ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - PN ) - ( ( AMS - Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),Const ) ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,( ( ( RMSe + MLU ) + Min( MUM ,Min( MUR ,CS ) ) ) * ( Min( MLU ,MLU ) * ( MLU * MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( Const,Const ) / ( ACS - FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RRSe,DS ) + ( DS + MLU ) ) - ( ( Min( RMSe ,CS ) / MUM ) / Max( ( RMSe * RMSe ),Min( Max( Max( MUC,MUM ),( MUR - DS ) ) ,MUC ) ) ) )", "obj1": 0.7006237006237006, "obj2": 0.235418093157657}, {"determining": "( ( BR / DDR ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,Min( RRS ,Const ) ) )", "choosing": "( ( Min( Max( Min( RMSe ,CS ),Min( DS ,DS ) ) ,Min( Min( MLU ,CS ) ,( RCSe * MUC ) ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - ( RCSe + Max( ( DS / MUM ),MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU ) * AMS ) )", "choosing": "( Max( RMSe,RCSe ) - ( Min( ( Min( Min( MLU ,Min( Min( CS ,RRSe ) ,CS ) ) ,MUR ) / ( RRSe / MLU ) ) ,RRSe ) + ( MUR * RMSe ) ) )", "obj1": 0.7442827442827443, "obj2": 0.1275602631115618}, {"determining": "( Min( Max( Max( RRS,PN ),( ARS / ACS ) ) ,DDR ) + ( ( ( RRS / DDR ) - ( FirstVNF_RAM_Server / MDR ) ) / Min( ( DDR + FirstVNF_RAM ) ,( PN - ARS ) ) ) )", "choosing": "( ( ( ( MLU + MLU ) * ( MUR * RCSe ) ) / Min( Min( ( MLU / MUM ) ,Min( RCSe ,RMSe ) ) ,Max( MUR,MUC ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) )", "obj1": 0.632016632016632, "obj2": 0.2692003142463956}, {"determining": "( ( ( MDR + ACS ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( DDR ,FirstVNF_RAM_Server ) ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( ( MUR * RRSe ) / ( MUM / RMSe ) ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Max( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( MDR * FirstVNF_CPU ) ) / CRS ),DDR ) )", "choosing": "Min( ( ( MLU + DS ) + ( Max( RRSe,MUC ) - MUM ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - DDR )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( Min( RRSe ,( MLU + CS ) ) - MUC ) ) )", "obj1": 0.7297297297297297, "obj2": 0.18268306986958155}, {"determining": "( Min( ( Max( Const,Const ) / ( ACS - FirstVNF_Mem ) ) ,CRS ) - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server - Min( Min( BR ,FirstVNF_Mem ) ,RRS ) ) ) / FirstVNF_RAM_Server ) + DDR ) ,( MDR - FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - ( MUR - ( ( ( ( MUM + CS ) - MUC ) + ( RMSe / RMSe ) ) + MLU ) ) ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,AMS ) * Min( ( ( CRS / Max( Min( ARS ,FirstVNF_RAM ),RRS ) ) - Const ) ,CRS ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( ( ( RRSe + MLU ) / RCSe ) - RRSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / AMS ) * Const ) + ( ( ( RRS / DDR ) - ( FirstVNF_RAM_Server / MDR ) ) / Min( ( DDR + FirstVNF_RAM ) ,( PN - ARS ) ) ) )", "choosing": "( Min( Min( MUC ,MUR ) ,Min( MLU ,Min( MUR ,( ( ( CS - ( MUM * MUM ) ) * ( RCSe * CS ) ) / ( RCSe + ( RCSe - CS ) ) ) ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) )", "obj1": 0.6361746361746362, "obj2": 0.26036968534370314}, {"determining": "( ( ARS + CRS ) - ( ( PN * FirstVNF_CPU ) + ( ( BR + FirstVNF_CPU ) - DDR ) ) )", "choosing": "( ( RCSe * RCSe ) * ( ( MUC - ( ( RMSe + Max( RCSe,CS ) ) / ( CS - MUM ) ) ) / MUC ) )", "obj1": 0.8773388773388774, "obj2": 0.1055855508039325}, {"determining": "( CRS - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( MUC * RRSe ) ,MUM ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( MDR * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( MRS + ( Const - FirstVNF_RAM_Server ) ) ) - ( ( ( MRS - PN ) - ( DDR * RRS ) ) / ( ( FirstVNF_RAM + AMS ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( MLU,CS ) + Max( RCSe,RMSe ) ) + Max( Min( RRSe ,MUR ),( RRSe / MUM ) ) ) - ( Min( ( RCSe * RRSe ) ,( MUC * MUC ) ) / ( ( MLU - MUR ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / PN ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ( DDR * Max( Const,( MDR + MDR ) ) ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( ( ( MUR + MUM ) + DS ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,MRS ) / ( ARS * ARS ) ) - ( ( FirstVNF_Mem / CRS ) / ( FirstVNF_Mem * ARS ) ) )", "choosing": "Min( ( Min( CS ,RMSe ) * Min( Max( MUM,MUM ) ,Max( RRSe,MLU ) ) ) ,( Max( RCSe,RMSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const - ACS ) ,( FirstVNF_RAM + ARS ) ),( ( MRS + CRS ) + Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / RRSe ) - ( RMSe * RRSe ) ) + ( MUC * DS ) )", "obj1": 0.683991683991684, "obj2": 0.24101206282439477}, {"determining": "( ( Min( Const ,RRS ) / MRS ) - ( ARS / ( MRS / PN ) ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( Max( RRSe,RMSe ) ,Max( Min( ( RCSe * ( CS * MUR ) ) ,RCSe ),( RMSe - Max( MUM,DS ) ) ) ) ),( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ( MDR / ACS ) ) + CRS ) - Max( Min( ( MDR * FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM_Server ) ),( Max( FirstVNF_CPU_Server,AMS ) - ( ARS + DDR ) ) ) )", "choosing": "( ( Min( ( DS * CS ) ,( MUC * MUM ) ) * ( Min( ( DS / RMSe ) ,( DS * MLU ) ) * Min( Max( Min( Min( RRSe ,( CS / MUC ) ) ,( Min( MLU ,MUR ) * MUC ) ),( RRSe / Max( MUC,RCSe ) ) ) ,( MUM - Max( ( ( RCSe * MUR ) / RRSe ),Min( Min( RMSe ,RRSe ) ,CS ) ) ) ) ) ) / ( Max( Max( CS,MUM ),Max( CS,DS ) ) + ( ( RMSe + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - Const ) ,CRS ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( ( MUC - RCSe ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - AMS )", "choosing": "( ( ( CS * CS ) / ( MUC + RCSe ) ) / Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) - ( BR + ARS ) ) / ( ( ( FirstVNF_Mem * ACS ) - MDR ) / ( ( DDR - ( MRS + ( AMS + ARS ) ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( RCSe - Min( RCSe ,CS ) ) / Min( ( CS / CS ) ,( MUC / Max( DS,MUM ) ) ) )", "obj1": 0.8814968814968815, "obj2": 0.10498747445930114}, {"determining": "Min( ( FirstVNF_RAM + ARS ) ,( Const - DDR ) )", "choosing": "( ( MUC * DS ) - ( ( ( ( MUR / RRSe ) - ( RMSe * RRSe ) ) + ( Min( RCSe ,MUM ) + Max( MUC,MUM ) ) ) + RCSe ) )", "obj1": 0.7214137214137214, "obj2": 0.19453671976494094}, {"determining": "( Max( FirstVNF_Mem,AMS ) * ( MDR - ACS ) )", "choosing": "( Max( Min( DS ,RCSe ),RCSe ) * ( ( RRSe / RRSe ) - ( MUC + MLU ) ) )", "obj1": 0.9812889812889813, "obj2": 0.0215824903663982}, {"determining": "( Max( Const,Const ) / ( ( Min( ( PN - ( FirstVNF_RAM_Server * Const ) ) ,CRS ) - ( BR * ( FirstVNF_Mem + ( FirstVNF_CPU_Server - BR ) ) ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RCSe + MUM ),( MUR - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS * FirstVNF_CPU_Server ) / AMS ) ,( ( ( Max( BR,BR ) * ( AMS * ARS ) ) * Max( Min( CRS ,Const ),( MDR * BR ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * ( ( ( ( MUR + MLU ) * ( RRSe - MUC ) ) * Min( Min( MUC ,RMSe ) ,( CS - RCSe ) ) ) * Max( Min( ( MUC + MUC ) ,( DS * CS ) ),Min( ( MLU / RRSe ) ,( MLU * ( Max( RMSe,DS ) * Min( MLU ,CS ) ) ) ) ) ) ),( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( Const - DDR ) )", "choosing": "( ( MUC * DS ) - ( MUC + RCSe ) )", "obj1": 0.7047817047817048, "obj2": 0.19756069688833428}, {"determining": "Min( Min( ACS ,DDR ) ,Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) * ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MUC ,( RCSe + MUM ) ),( RMSe * MUR ) )", "obj1": 0.9958419958419958, "obj2": 0.0037627579009090577}, {"determining": "( ( ( ( AMS - BR ) - MRS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( Min( MUC ,( Min( RCSe ,MUR ) * MUM ) ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( ( BR * BR ) * ( PN / ACS ) ) - FirstVNF_CPU_Server ),MRS ) - Max( MRS,RRS ) ) * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / MDR ) ) )", "choosing": "( Min( ( MUR - Max( ( CS + Min( RMSe ,RCSe ) ),MUR ) ) ,Max( DS,MUM ) ) - Min( ( CS / RCSe ) ,( RMSe / MUR ) ) )", "obj1": 0.9937629937629938, "obj2": 0.004874075651852956}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / CRS ),DDR ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),( RRS * PN ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( ( ( MLU + MUM ) - RCSe ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,DDR ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + Max( FirstVNF_CPU,BR ) ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),Min( ( CS + DS ) ,( ( MUC * RCSe ) * ( RRSe * ( Min( Min( ( CS - DS ) ,Max( DS,RRSe ) ) ,RMSe ) * ( ( ( CS * MUR ) - ( DS - RRSe ) ) + MUC ) ) ) ) ) )", "obj1": 0.8066528066528067, "obj2": 0.11277765506620463}, {"determining": "( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( ( ( DS - CS ) + Min( RCSe ,RMSe ) ) / ( ( MLU + MUM ) * Min( RMSe ,MUR ) ) )", "obj1": 0.9168399168399168, "obj2": 0.06035870521337024}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Const ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( Max( ( MLU * MUC ),MUM ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const - ACS ) ,( FirstVNF_RAM + ARS ) ),( ( MRS + CRS ) + Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / RRSe ) - ( RMSe * RRSe ) ) + ( Min( RCSe ,MUM ) + Max( MUC,MUM ) ) )", "obj1": 0.6694386694386695, "obj2": 0.2487869046484682}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( PN / MRS ) ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( ( DS / MUM ),Max( CS,MUC ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,CRS ) * ( CRS / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( Min( MUM ,Min( ( MUR - MUC ) ,MUM ) ) ,( Min( MLU ,RRSe ) * ( MLU - CS ) ) ) )", "obj1": 0.6507276507276507, "obj2": 0.2571222829609951}, {"determining": "( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( Max( RMSe,Max( ( DS / ( RRSe * Min( Min( MLU ,MUM ) ,Max( MUR,RRSe ) ) ) ),DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / Max( BR,ARS ) )", "choosing": "Max( ( MUC / MUR ),( Max( ( DS / MLU ),( Max( ( CS - RMSe ),Max( ( Max( CS,RMSe ) * MLU ),Max( MUC,RMSe ) ) ) * MLU ) ) * MUR ) )", "obj1": 0.6673596673596673, "obj2": 0.2533519362579169}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * RMSe ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( FirstVNF_RAM - Const ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( ( ( ( RRSe - RMSe ) * MUM ) / MUM ) / ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS + MRS ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) * ( ( ( FirstVNF_CPU_Server * ARS ) / ( FirstVNF_Mem + ARS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) / RCSe ) - Max( MUC,( Max( RRSe,MUC ) * MLU ) ) )", "obj1": 0.6486486486486487, "obj2": 0.258813556948602}, {"determining": "( ( Min( Max( Const,FirstVNF_RAM_Server ) ,( ( ARS - FirstVNF_RAM ) - CRS ) ) - FirstVNF_CPU ) - FirstVNF_RAM )", "choosing": "Min( ( ( MUR - ( DS / Max( ( RCSe * Max( ( RCSe / DS ),( DS - RMSe ) ) ),( MLU / RRSe ) ) ) ) * ( MUR * DS ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - PN ) - ( ( AMS - Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),Const ) ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,( ( ( RMSe + MLU ) + Min( MUM ,Min( MUR ,CS ) ) ) * ( Min( MLU ,MLU ) * ( MLU * MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / DDR ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,Min( RRS ,Const ) ) )", "choosing": "( ( Min( Max( Min( RMSe ,CS ),Min( DS ,DS ) ) ,Min( Min( MLU ,CS ) ,( RCSe * MUC ) ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - ( RCSe + Max( ( DS / MUM ),MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU ) * AMS ) )", "choosing": "( Max( RMSe,RCSe ) - ( Min( ( Min( Min( MLU ,Min( Min( CS ,RRSe ) ,CS ) ) ,MUR ) / ( RRSe / MLU ) ) ,RRSe ) + ( MUR * RMSe ) ) )", "obj1": 0.7442827442827443, "obj2": 0.1275602631115618}, {"determining": "( Min( Max( Max( RRS,PN ),( ARS / ACS ) ) ,DDR ) + ( ( ( RRS / DDR ) - ( FirstVNF_RAM_Server / MDR ) ) / Min( ( DDR + FirstVNF_RAM ) ,( PN - ARS ) ) ) )", "choosing": "( ( ( ( MLU + MLU ) * ( MUR * RCSe ) ) / Min( Min( ( MLU / MUM ) ,Min( RCSe ,RMSe ) ) ,Max( MUR,MUC ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) )", "obj1": 0.632016632016632, "obj2": 0.2692003142463956}, {"determining": "( ( ( MDR + ACS ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( DDR ,FirstVNF_RAM_Server ) ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( ( MUR * RRSe ) / ( MUM / RMSe ) ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Max( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( MDR * FirstVNF_CPU ) ) / CRS ),DDR ) )", "choosing": "Min( ( ( MLU + DS ) + ( Max( RRSe,MUC ) - MUM ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - DDR )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( Min( RRSe ,( MLU + CS ) ) - MUC ) ) )", "obj1": 0.7297297297297297, "obj2": 0.18268306986958155}, {"determining": "( Min( ( Max( Const,Const ) / ( ACS - FirstVNF_Mem ) ) ,CRS ) - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server - Min( Min( BR ,FirstVNF_Mem ) ,RRS ) ) ) / FirstVNF_RAM_Server ) + DDR ) ,( MDR - FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - ( MUR - ( ( ( ( MUM + CS ) - MUC ) + ( RMSe / RMSe ) ) + MLU ) ) ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,AMS ) * Min( ( ( CRS / Max( Min( ARS ,FirstVNF_RAM ),RRS ) ) - Const ) ,CRS ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( ( ( RRSe + MLU ) / RCSe ) - RRSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / AMS ) * Const ) + ( ( ( RRS / DDR ) - ( FirstVNF_RAM_Server / MDR ) ) / Min( ( DDR + FirstVNF_RAM ) ,( PN - ARS ) ) ) )", "choosing": "( Min( Min( MUC ,MUR ) ,Min( MLU ,Min( MUR ,( ( ( CS - ( MUM * MUM ) ) * ( RCSe * CS ) ) / ( RCSe + ( RCSe - CS ) ) ) ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) )", "obj1": 0.6361746361746362, "obj2": 0.26036968534370314}, {"determining": "( ( ARS + CRS ) - ( ( PN * FirstVNF_CPU ) + ( ( BR + FirstVNF_CPU ) - DDR ) ) )", "choosing": "( ( RCSe * RCSe ) * ( ( MUC - ( ( RMSe + Max( RCSe,CS ) ) / ( CS - MUM ) ) ) / MUC ) )", "obj1": 0.8773388773388774, "obj2": 0.1055855508039325}, {"determining": "( CRS - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( MUC * RRSe ) ,MUM ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( MDR * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( MRS + ( Const - FirstVNF_RAM_Server ) ) ) - ( ( ( MRS - PN ) - ( DDR * RRS ) ) / ( ( FirstVNF_RAM + AMS ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( MLU,CS ) + Max( RCSe,RMSe ) ) + Max( Min( RRSe ,MUR ),( RRSe / MUM ) ) ) - ( Min( ( RCSe * RRSe ) ,( MUC * MUC ) ) / ( ( MLU - MUR ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / PN ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ( DDR * Max( Const,( MDR + MDR ) ) ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( ( ( MUR + MUM ) + DS ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,MRS ) / ( ARS * ARS ) ) - ( ( FirstVNF_Mem / CRS ) / ( FirstVNF_Mem * ARS ) ) )", "choosing": "Min( ( Min( CS ,RMSe ) * Min( Max( MUM,MUM ) ,Max( RRSe,MLU ) ) ) ,( Max( RCSe,RMSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const - ACS ) ,( FirstVNF_RAM + ARS ) ),( ( MRS + CRS ) + Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / RRSe ) - ( RMSe * RRSe ) ) + ( MUC * DS ) )", "obj1": 0.683991683991684, "obj2": 0.24101206282439477}, {"determining": "( ( Min( Const ,RRS ) / MRS ) - ( ARS / ( MRS / PN ) ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( Max( RRSe,RMSe ) ,Max( Min( ( RCSe * ( CS * MUR ) ) ,RCSe ),( RMSe - Max( MUM,DS ) ) ) ) ),( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ( MDR / ACS ) ) + CRS ) - Max( Min( ( MDR * FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM_Server ) ),( Max( FirstVNF_CPU_Server,AMS ) - ( ARS + DDR ) ) ) )", "choosing": "( ( Min( ( DS * CS ) ,( MUC * MUM ) ) * ( Min( ( DS / RMSe ) ,( DS * MLU ) ) * Min( Max( Min( Min( RRSe ,( CS / MUC ) ) ,( Min( MLU ,MUR ) * MUC ) ),( RRSe / Max( MUC,RCSe ) ) ) ,( MUM - Max( ( ( RCSe * MUR ) / RRSe ),Min( Min( RMSe ,RRSe ) ,CS ) ) ) ) ) ) / ( Max( Max( CS,MUM ),Max( CS,DS ) ) + ( ( RMSe + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - Const ) ,CRS ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( ( MUC - RCSe ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - AMS )", "choosing": "( ( ( CS * CS ) / ( MUC + RCSe ) ) / Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) - ( BR + ARS ) ) / ( ( ( FirstVNF_Mem * ACS ) - MDR ) / ( ( DDR - ( MRS + ( AMS + ARS ) ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( RCSe - Min( RCSe ,CS ) ) / Min( ( CS / CS ) ,( MUC / Max( DS,MUM ) ) ) )", "obj1": 0.8814968814968815, "obj2": 0.10498747445930114}, {"determining": "Min( ( FirstVNF_RAM + ARS ) ,( Const - DDR ) )", "choosing": "( ( MUC * DS ) - ( ( ( ( MUR / RRSe ) - ( RMSe * RRSe ) ) + ( Min( RCSe ,MUM ) + Max( MUC,MUM ) ) ) + RCSe ) )", "obj1": 0.7214137214137214, "obj2": 0.19453671976494094}, {"determining": "( Max( FirstVNF_Mem,AMS ) * ( MDR - ACS ) )", "choosing": "( Max( Min( DS ,RCSe ),RCSe ) * ( ( RRSe / RRSe ) - ( MUC + MLU ) ) )", "obj1": 0.9812889812889813, "obj2": 0.0215824903663982}, {"determining": "( Max( Const,Const ) / ( ( Min( ( PN - ( FirstVNF_RAM_Server * Const ) ) ,CRS ) - ( BR * ( FirstVNF_Mem + ( FirstVNF_CPU_Server - BR ) ) ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RCSe + MUM ),( MUR - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS * FirstVNF_CPU_Server ) / AMS ) ,( ( ( Max( BR,BR ) * ( AMS * ARS ) ) * Max( Min( CRS ,Const ),( MDR * BR ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * ( ( ( ( MUR + MLU ) * ( RRSe - MUC ) ) * Min( Min( MUC ,RMSe ) ,( CS - RCSe ) ) ) * Max( Min( ( MUC + MUC ) ,( DS * CS ) ),Min( ( MLU / RRSe ) ,( MLU * ( Max( RMSe,DS ) * Min( MLU ,CS ) ) ) ) ) ) ),( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,CRS ) ,( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - MDR ),( FirstVNF_Mem + RRS ) ) ) ) - ( ( BR / DDR ) - Max( RRS,BR ) ) ) - FirstVNF_RAM )", "choosing": "Min( ( RRSe / MUR ) ,( ( CS - RMSe ) / Min( MUC ,( RCSe * Min( ( RCSe - Min( MUR ,MLU ) ) ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( PN,( CRS * MRS ) ) + FirstVNF_RAM_Server ) ,RRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - ( ( RCSe - ( CS - ( CS - ( MLU * MUM ) ) ) ) - DS ) ) ,( MLU / ( RMSe / ( MLU - ( DS / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - AMS ) - MRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( ( ( MUC * DS ) - ( MUC + Min( DS ,( Min( MUM ,MUC ) / MUR ) ) ) ) ,RMSe ) ),Min( ( MUM - RRSe ) ,Max( MLU,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Const ) / ( ( Min( ( PN - Const ) ,CRS ) - ( Min( ( DDR / AMS ) ,( MDR - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) - FirstVNF_Mem ) )", "choosing": "Max( Max( ( ( RCSe + RMSe ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / MDR ) ) )", "choosing": "( Min( ( MUR - RMSe ) ,Max( DS,MUM ) ) - Min( ( CS / RCSe ) ,( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( ( ( ( RRS + PN ) - DDR ) / FirstVNF_Mem ) - ( Min( FirstVNF_RAM ,CRS ) / ( FirstVNF_CPU + ACS ) ) ) ) ) / MRS ) - ( ARS / MDR ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( MUC ,Max( Min( Min( RRSe ,DS ) ,MUR ),MUC ) ) ),( RCSe + ( Max( DS,RCSe ) - ( MUM + RMSe ) ) ) )", "obj1": 0.7588357588357588, "obj2": 0.12197648582903245}, {"determining": "Min( FirstVNF_Mem_Server ,( Const - ( ( Min( ( DDR / FirstVNF_Mem_Server ) ,BR ) + ( ARS + FirstVNF_RAM_Server ) ) - ( RRS + RRS ) ) ) )", "choosing": "( ( ( MUC / MUC ) * Max( MUC,RCSe ) ) - ( ( MUC * RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),Max( DDR,RRS ) ) )", "choosing": "( ( ( ( ( RMSe - MUM ) * ( MUR * RCSe ) ) / Min( Min( ( MLU / MUM ) ,Min( RCSe ,RMSe ) ) ,Max( MUR,MUC ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( FirstVNF_Mem_Server - ( Min( MDR ,DDR ) * ( FirstVNF_Mem_Server - ( FirstVNF_RAM - ( MDR + Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) ) )", "choosing": "( ( MUR * ( RCSe / Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( DS - RRSe ) ) ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) - ( ACS * FirstVNF_CPU ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( ( MUR * RRSe ) / ( MUM / RMSe ) ) ) / Min( ( CS / CS ) ,Min( ( MUM - RRSe ) ,( MLU * MUC ) ) ) )", "obj1": 0.9625779625779626, "obj2": 0.02393791988953079}, {"determining": "Min( Max( MRS,RRS ) ,( Const - DDR ) )", "choosing": "( RCSe - ( MUC + RCSe ) )", "obj1": 0.6923076923076923, "obj2": 0.2006582354144403}, {"determining": "( Min( ( ( CRS + MRS ) + FirstVNF_Mem ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) * ( ( ( FirstVNF_CPU_Server * ARS ) / ( FirstVNF_Mem + ARS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) / RCSe ) - Min( ( Min( CS ,RMSe ) * Min( Max( MUM,MUM ) ,Max( RRSe,MLU ) ) ) ,( Max( RCSe,RMSe ) - ( RMSe * RCSe ) ) ) )", "obj1": 0.6756756756756757, "obj2": 0.24469731434648398}, {"determining": "( ( FirstVNF_CPU * RRS ) - Max( ( Min( ( ( CRS + MRS ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) * ( ( ( FirstVNF_CPU_Server * ARS ) / ( FirstVNF_Mem + ARS ) ) / ( Max( FirstVNF_Mem_Server,Max( MRS,ACS ) ) * ( FirstVNF_RAM_Server * ARS ) ) ) ),RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + MLU ) - ( ( ( RMSe / MUM ) * Min( ( MLU * ( ( RRSe - ( RRSe + RRSe ) ) / MLU ) ) ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS - MDR ) / ( BR * FirstVNF_RAM_Server ) ) ,CRS ) * ( ACS - FirstVNF_CPU_Server ) )", "choosing": "( Max( MUR,MLU ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUC - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - BR ) + CRS ) - Max( Min( ( MDR * FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM_Server ) ),( ( ( MRS - MDR ) / ( Const * DDR ) ) - ( ARS + DDR ) ) ) )", "choosing": "( ( Min( ( DS * CS ) ,( MUC * MUM ) ) * ( Min( ( DS / RMSe ) ,( DS * MLU ) ) * Min( ( DS - MUC ) ,( MUR / RMSe ) ) ) ) / ( CS + ( ( RMSe + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ( DDR * FirstVNF_Mem ) ) ,Max( PN,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) )", "choosing": "Max( ( ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( Min( ( ( MUR + RCSe ) * ( CS - MUR ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) ) + MUC ) ) ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( RRS,FirstVNF_CPU_Server ) ) * Min( ( PN - Const ) ,CRS ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( MUM - RRSe ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ( ( ( RRS - BR ) + CRS ) * ( FirstVNF_Mem_Server - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( MRS ,Const ) ) * FirstVNF_RAM ) ) ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUC / DS ) - ( MUC / ( DS + MLU ) ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) * ( DS - MUC ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const - ACS ) ,( FirstVNF_RAM + ARS ) ),( ( MDR - FirstVNF_CPU ) + Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / RRSe ) - ( RMSe * RRSe ) ) + ( ( RCSe - DS ) * ( MUR * DS ) ) )", "obj1": 0.6735966735966736, "obj2": 0.24826767807193595}, {"determining": "( ( ( ARS + CRS ) + CRS ) - ( Max( ( ( DDR / DDR ) - MDR ),( ( Max( Const,CRS ) + FirstVNF_CPU ) - Max( ( BR / FirstVNF_RAM ),( PN * Max( MRS,( Const - ACS ) ) ) ) ) ) + RRS ) )", "choosing": "( ( MUC / MUC ) * ( MUC / ( ( MUR + Min( DS ,Min( RMSe ,MUR ) ) ) / ( MUM / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( BR / Min( MDR ,( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) ) + Min( ( ( FirstVNF_CPU + RRS ) * Max( ( FirstVNF_Mem / Max( MDR,AMS ) ),Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem_Server,MDR ) ) ) ) ,MRS ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * RCSe ),( ( Max( RRSe,RMSe ) + Min( ( RMSe * ( DS / RCSe ) ) ,MUC ) ) * ( MUC * MLU ) ) )", "obj1": 0.9958419958419958, "obj2": 0.0037627579009090577}, {"determining": "( ( AMS / FirstVNF_RAM ) - Max( ( ARS - FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( Min( Max( Min( RMSe ,CS ),Min( DS ,DS ) ) ,Min( Min( MLU ,CS ) ,( RCSe * MUC ) ) ) + Min( Max( RMSe,RRSe ) ,( Min( Max( ( Max( RCSe,MUC ) - MUM ),( DS - ( MUM * MUM ) ) ) ,( ( Max( RMSe,DS ) * ( DS / MUC ) ) * MLU ) ) + MLU ) ) ) - ( ( RMSe + MLU ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( FirstVNF_Mem + ( Const - RRS ) ) / Max( FirstVNF_CPU_Server,( FirstVNF_RAM_Server - PN ) ) ) ),( ( ( ACS - DDR ) - MRS ) - MRS ) )", "choosing": "( ( DS + ( ( ( RMSe + MLU ) + ( RMSe - RRSe ) ) * ( Min( MLU ,MLU ) * ( MLU * MUC ) ) ) ) / ( DS / RCSe ) )", "obj1": 0.6881496881496881, "obj2": 0.20860368245635919}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) - Min( AMS ,RRS ) )", "choosing": "Max( ( Min( MLU ,DS ) * Min( ( ( MUC * DS ) - ( MUC + RCSe ) ) ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU / MRS ) + ( AMS + MDR ) ) * ( Min( ( PN - Const ) ,CRS ) - ACS ) )", "choosing": "( ( Min( DS ,MUM ) * ( MUC + DS ) ) * ( ( RRSe / RRSe ) - ( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - PN ) - ( ( ( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - MUM ) * ( ( ( CS * MUM ) / MUM ) / ( RCSe * MUC ) ) ) ,( ( CS - RMSe ) / Min( MUC ,( ( ( RMSe + MLU ) + ( RMSe - RRSe ) ) * ( Min( MLU ,MLU ) * ( MLU * MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Const ) / ( ( Min( ( PN - Const ) ,CRS ) - ( PN - Const ) ) - FirstVNF_Mem ) )", "choosing": "Max( Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) ),( DS - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( Min( ( PN - Const ) ,CRS ) - ( ACS * FirstVNF_CPU ) ) ) / ( ( Max( FirstVNF_Mem_Server,MRS ) / ( ARS * ARS ) ) - ( ( ACS * ARS ) - ( RRS * Const ) ) ) )", "choosing": "Min( RCSe ,Min( CS ,RMSe ) )", "obj1": 0.8523908523908524, "obj2": 0.10683797332590235}, {"determining": "( ( Max( FirstVNF_Mem_Server,MRS ) / ( ARS * Min( ( Max( RRS,Const ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) ) ) - ( ( FirstVNF_Mem / CRS ) / ( FirstVNF_Mem * ARS ) ) )", "choosing": "Min( ( Min( CS ,RMSe ) * Min( Max( MUM,MUM ) ,Max( RRSe,MLU ) ) ) ,( ( MUM + RMSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "Min( MLU ,( ( RMSe * MUC ) + ( MUC + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + CRS ) - ( RRS + ( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe * RCSe ) * ( ( MLU - RMSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / Min( Max( CS,CS ) ,( MUM - RMSe ) ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Max( ( FirstVNF_Mem / CRS ),DDR ) )", "choosing": "( ( ( CS * CS ) / ( MUC + RCSe ) ) / Min( MUC ,Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + ( ( RRS * MRS ) * ACS ) ) - ( BR + ( Const - FirstVNF_RAM_Server ) ) ) / ( ( MRS - Max( Const,FirstVNF_Mem_Server ) ) / ( Const * DDR ) ) )", "choosing": "( ( RCSe - MUM ) / ( MUR + ( ( CS * Max( Max( DS,MUM ),Max( Min( ( MLU - MUM ) ,MUR ),( MUM + CS ) ) ) ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( MRS + ( Const - FirstVNF_RAM_Server ) ) ) - ( ( ( MRS - PN ) - BR ) / ( ( FirstVNF_CPU_Server - AMS ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( MLU,CS ) + Max( RCSe,RMSe ) ) + Max( Min( RRSe ,( ( RRSe - ( ( DS - DS ) - DS ) ) * MUC ) ),( RRSe / MUM ) ) ) - ( Min( ( ( RCSe - MUM ) * RRSe ) ,( MUC * MUC ) ) / ( ( MLU - MUR ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,AMS ) * Min( ( PN - Const ) ,( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - DDR ) ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( MUM - ( CS - CS ) ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,AMS ) * Min( ( ( CRS / Max( Min( ARS ,FirstVNF_RAM ),RRS ) ) - Const ) ,CRS ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( ( ( RRSe + MLU ) / RCSe ) - RRSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - FirstVNF_Mem ) - ( BR + ARS ) )", "choosing": "( ( RCSe + DS ) - ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( ( ACS * RRS ) * Min( AMS ,RRS ) ) ) - Max( MRS,RRS ) ) * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / MDR ) ) )", "choosing": "( Min( ( MUR - MUC ) ,Max( DS,MUM ) ) - Min( ( CS / RCSe ) ,( RMSe / MUR ) ) )", "obj1": 0.9916839916839917, "obj2": 0.006780368625558385}, {"determining": "Min( ( Max( Const,Const ) / ( ( Min( ( PN - Const ) ,CRS ) - ( ( BR / Min( FirstVNF_Mem_Server ,Const ) ) * FirstVNF_CPU ) ) - FirstVNF_Mem ) ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * RCSe ),( ( Max( ( RMSe - MUC ),MUC ) + ( Min( RMSe ,( DS * Min( MUR ,RRSe ) ) ) * RMSe ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * CRS ) * ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - ( ARS / MDR ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( MUC ,RMSe ) ),( MUR + MUR ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Min( ( PN - DDR ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( Min( Min( MLU ,CS ) ,( RCSe * MUC ) ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,DDR ) ,Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) * ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server - ( RRS + RRS ) )", "choosing": "( ( RCSe * RCSe ) * ( Max( ( MUC / RMSe ),( MUC / DS ) ) / MUC ) )", "obj1": 0.6195426195426196, "obj2": 0.3018275707168183}, {"determining": "( Min( ( PN - Const ) ,CRS ) - ( AMS * ( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( ( ( ( RRS + PN ) - DDR ) / FirstVNF_Mem ) - ( Min( FirstVNF_RAM ,CRS ) / ( FirstVNF_CPU + ACS ) ) ) ) ) )", "choosing": "Max( ( MUC - RCSe ),Min( ( ( RCSe * MUR ) / Min( MUC ,Max( Min( Min( RRSe ,DS ) ,MUR ),MUC ) ) ) ,( MLU * MUC ) ) )", "obj1": 0.656964656964657, "obj2": 0.1709854662718058}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU ) * AMS ) )", "choosing": "( Max( RMSe,RCSe ) - ( Min( ( Min( Min( MLU ,Min( Min( CS ,RRSe ) ,CS ) ) ,MUR ) / ( RRSe / MLU ) ) ,RRSe ) + ( MUR * RMSe ) ) )", "obj1": 0.7442827442827443, "obj2": 0.1275602631115618}, {"determining": "( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( ( ( DS - CS ) + Min( RCSe ,RMSe ) ) / ( ( MLU + MUM ) * Min( RMSe ,MUR ) ) )", "obj1": 0.9168399168399168, "obj2": 0.06035870521337024}, {"determining": "( Min( FirstVNF_Mem_Server ,CRS ) * ( CRS / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( Min( MUM ,Min( ( MUR - MUC ) ,MUM ) ) ,( Min( MLU ,RRSe ) * ( MLU - CS ) ) ) )", "obj1": 0.6507276507276507, "obj2": 0.2571222829609951}, {"determining": "( Max( FirstVNF_CPU,DDR ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + Max( FirstVNF_CPU,BR ) ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),Min( ( CS + DS ) ,( ( MUC * RCSe ) * ( RRSe * ( Min( Min( ( CS - DS ) ,Max( DS,RRSe ) ) ,RMSe ) * ( ( ( CS * MUR ) - ( DS - RRSe ) ) + MUC ) ) ) ) ) )", "obj1": 0.8066528066528067, "obj2": 0.11277765506620463}, {"determining": "( ( ( BR + AMS ) - ( BR + ARS ) ) / ( ( ( FirstVNF_Mem * ACS ) - MDR ) / ( ( DDR - ( MRS + ( AMS + ARS ) ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( RCSe - Min( RCSe ,CS ) ) / Min( ( CS / CS ) ,( MUC / Max( DS,MUM ) ) ) )", "obj1": 0.8814968814968815, "obj2": 0.10498747445930114}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / Min( Const ,RRS ) ) ) )", "choosing": "( ( ( RCSe * MUR ) / Min( MUC ,RMSe ) ) - Max( Max( MUC,MUM ),MUC ) )", "obj1": 0.9521829521829522, "obj2": 0.04823204958637998}, {"determining": "( ( FirstVNF_Mem / ( Min( ( PN - Const ) ,CRS ) - ( ACS * FirstVNF_CPU ) ) ) / ( ( Max( FirstVNF_Mem_Server,MRS ) / ( ARS * ARS ) ) - ( ( ACS * ARS ) - ( RRS * Const ) ) ) )", "choosing": "Min( RCSe ,Min( CS ,RMSe ) )", "obj1": 0.8523908523908524, "obj2": 0.10683797332590235}, {"determining": "( ( Min( Const ,( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( ( ( ( RRS + PN ) - DDR ) / FirstVNF_Mem ) - ( Min( FirstVNF_RAM ,CRS ) / ( FirstVNF_CPU + ACS ) ) ) ) ) / MRS ) - ( ARS / MDR ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( MUC ,Max( Min( Min( RRSe ,DS ) ,MUR ),MUC ) ) ),( RCSe + ( Max( DS,RCSe ) - ( MUM + RMSe ) ) ) )", "obj1": 0.7588357588357588, "obj2": 0.12197648582903245}, {"determining": "( CRS - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,( MRS - MDR ) ) )", "choosing": "Min( Min( ( MUC * ( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) ) ) ,MUM ) ,( MUR / MUC ) )", "obj1": 0.632016632016632, "obj2": 0.26674260094306046}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) - ( ACS * FirstVNF_CPU ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( ( MUR * RRSe ) / ( MUM / RMSe ) ) ) / Min( ( CS / CS ) ,Min( ( MUM - RRSe ) ,( MLU * MUC ) ) ) )", "obj1": 0.9625779625779626, "obj2": 0.02393791988953079}, {"determining": "( Max( FirstVNF_Mem,AMS ) * ( MDR - Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,RCSe ),RCSe ) * ( ( RRSe / RRSe ) - DS ) )", "obj1": 0.9812889812889813, "obj2": 0.020952404718421833}, {"determining": "( ( Max( FirstVNF_RAM_Server,( ( ACS * RRS ) * Min( AMS ,RRS ) ) ) - Max( MRS,RRS ) ) * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / MDR ) ) )", "choosing": "( Min( ( MUR - MUC ) ,Max( DS,MUM ) ) - Min( ( CS / RCSe ) ,( RMSe / MUR ) ) )", "obj1": 0.9916839916839917, "obj2": 0.006780368625558385}, {"determining": "( ( ARS + CRS ) - ( ( PN * FirstVNF_CPU ) + ( ( BR + FirstVNF_CPU ) - DDR ) ) )", "choosing": "( ( RCSe * RCSe ) * ( ( MUC - ( ( RMSe + Max( RCSe,CS ) ) / ( CS - MUM ) ) ) / MUC ) )", "obj1": 0.8773388773388774, "obj2": 0.1055855508039325}, {"determining": "( ( ( FirstVNF_CPU_Server / AMS ) * Const ) + ( ( ( RRS / DDR ) - ( FirstVNF_RAM_Server / MDR ) ) / Min( ( DDR + FirstVNF_RAM ) ,( PN - ARS ) ) ) )", "choosing": "( Min( Min( MUC ,MUR ) ,Min( MLU ,Min( MUR ,( ( ( CS - ( MUM * MUM ) ) * ( RCSe * CS ) ) / ( RCSe + ( RCSe - CS ) ) ) ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) )", "obj1": 0.6361746361746362, "obj2": 0.26036968534370314}, {"determining": "( ( Min( Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) ,( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( ( ( Const - MDR ) * ( BR / FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,CRS ) / ( FirstVNF_CPU + ACS ) ) ) ) ) / MRS ) - ( ARS / MDR ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( MUC ,RMSe ) ),( RCSe + ( Max( DS,( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( MUR / MUC ) ) ) ) - ( MUM + RMSe ) ) ) )", "obj1": 0.7463617463617463, "obj2": 0.12636078685340132}, {"determining": "( Min( ( ( CRS + MRS ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) * ( ( ( FirstVNF_CPU_Server * ARS ) / ( FirstVNF_Mem + ARS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) / RCSe ) - Max( MUC,( Max( RRSe,MUC ) * MLU ) ) )", "obj1": 0.6486486486486487, "obj2": 0.258813556948602}, {"determining": "( ( Max( PN,PN ) - ( DDR * ( DDR * FirstVNF_Mem ) ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 0.997920997920998, "obj2": 0.00104091456896437}, {"determining": "( ( Max( ( ( ( BR * BR ) * ( PN / ACS ) ) - FirstVNF_CPU_Server ),MRS ) - Max( MRS,RRS ) ) * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / MDR ) ) )", "choosing": "( Min( ( MUR - Max( ( CS + Min( RMSe ,RCSe ) ),MUR ) ) ,Max( DS,MUM ) ) - Min( ( CS / RCSe ) ,( RMSe / MUR ) ) )", "obj1": 0.9937629937629938, "obj2": 0.004874075651852956}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MUC ,( RCSe + MUM ) ),( RMSe * MUR ) )", "obj1": 0.9958419958419958, "obj2": 0.0037627579009090577}, {"determining": "Min( BR ,( ( ( BR / Min( MDR ,( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + FirstVNF_CPU ) ) ) + Min( ( ( FirstVNF_CPU + RRS ) * Max( ( FirstVNF_Mem / Max( MDR,AMS ) ),Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem_Server,MDR ) ) ) ) ,MRS ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * RCSe ),( ( Max( RRSe,RMSe ) + Min( ( RMSe * ( DS / RCSe ) ) ,MUC ) ) * ( MUC * MLU ) ) )", "obj1": 0.9958419958419958, "obj2": 0.0037627579009090577}, {"determining": "( ( ( ( AMS - BR ) - MRS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( Min( MUC ,( Min( RCSe ,MUR ) * MUM ) ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / CRS ),DDR ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),( RRS * PN ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( ( ( MLU + MUM ) - RCSe ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Const ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( Max( ( MLU * MUC ),MUM ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( PN / MRS ) ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( ( DS / MUM ),Max( CS,MUC ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( Max( RMSe,Max( ( DS / ( RRSe * Min( Min( MLU ,MUM ) ,Max( MUR,RRSe ) ) ) ),DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * RMSe ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( FirstVNF_RAM - Const ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( ( ( ( RRSe - RMSe ) * MUM ) / MUM ) / ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( Const,FirstVNF_RAM_Server ) ,( ( ARS - FirstVNF_RAM ) - CRS ) ) - FirstVNF_CPU ) - FirstVNF_RAM )", "choosing": "Min( ( ( MUR - ( DS / Max( ( RCSe * Max( ( RCSe / DS ),( DS - RMSe ) ) ),( MLU / RRSe ) ) ) ) * ( MUR * DS ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - PN ) - ( ( AMS - Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),Const ) ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,( ( ( RMSe + MLU ) + Min( MUM ,Min( MUR ,CS ) ) ) * ( Min( MLU ,MLU ) * ( MLU * MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / DDR ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,Min( RRS ,Const ) ) )", "choosing": "( ( Min( Max( Min( RMSe ,CS ),Min( DS ,DS ) ) ,Min( Min( MLU ,CS ) ,( RCSe * MUC ) ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - ( RCSe + Max( ( DS / MUM ),MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( DDR ,FirstVNF_RAM_Server ) ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( ( MUR * RRSe ) / ( MUM / RMSe ) ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Max( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( MDR * FirstVNF_CPU ) ) / CRS ),DDR ) )", "choosing": "Min( ( ( MLU + DS ) + ( Max( RRSe,MUC ) - MUM ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( Const,Const ) / ( ACS - FirstVNF_Mem ) ) ,CRS ) - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server - Min( Min( BR ,FirstVNF_Mem ) ,RRS ) ) ) / FirstVNF_RAM_Server ) + DDR ) ,( MDR - FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - ( MUR - ( ( ( ( MUM + CS ) - MUC ) + ( RMSe / RMSe ) ) + MLU ) ) ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,AMS ) * Min( ( ( CRS / Max( Min( ARS ,FirstVNF_RAM ),RRS ) ) - Const ) ,CRS ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( ( ( RRSe + MLU ) / RCSe ) - RRSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( MUC * RRSe ) ,MUM ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( MDR * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( MRS + ( Const - FirstVNF_RAM_Server ) ) ) - ( ( ( MRS - PN ) - ( DDR * RRS ) ) / ( ( FirstVNF_RAM + AMS ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( MLU,CS ) + Max( RCSe,RMSe ) ) + Max( Min( RRSe ,MUR ),( RRSe / MUM ) ) ) - ( Min( ( RCSe * RRSe ) ,( MUC * MUC ) ) / ( ( MLU - MUR ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / PN ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ( DDR * Max( Const,( MDR + MDR ) ) ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( ( ( MUR + MUM ) + DS ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,MRS ) / ( ARS * ARS ) ) - ( ( FirstVNF_Mem / CRS ) / ( FirstVNF_Mem * ARS ) ) )", "choosing": "Min( ( Min( CS ,RMSe ) * Min( Max( MUM,MUM ) ,Max( RRSe,MLU ) ) ) ,( Max( RCSe,RMSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / MRS ) - ( ARS / ( MRS / PN ) ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( Max( RRSe,RMSe ) ,Max( Min( ( RCSe * ( CS * MUR ) ) ,RCSe ),( RMSe - Max( MUM,DS ) ) ) ) ),( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ( MDR / ACS ) ) + CRS ) - Max( Min( ( MDR * FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM_Server ) ),( Max( FirstVNF_CPU_Server,AMS ) - ( ARS + DDR ) ) ) )", "choosing": "( ( Min( ( DS * CS ) ,( MUC * MUM ) ) * ( Min( ( DS / RMSe ) ,( DS * MLU ) ) * Min( Max( Min( Min( RRSe ,( CS / MUC ) ) ,( Min( MLU ,MUR ) * MUC ) ),( RRSe / Max( MUC,RCSe ) ) ) ,( MUM - Max( ( ( RCSe * MUR ) / RRSe ),Min( Min( RMSe ,RRSe ) ,CS ) ) ) ) ) ) / ( Max( Max( CS,MUM ),Max( CS,DS ) ) + ( ( RMSe + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - Const ) ,CRS ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( ( MUC - RCSe ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - AMS )", "choosing": "( ( ( CS * CS ) / ( MUC + RCSe ) ) / Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Const ) / ( ( Min( ( PN - ( FirstVNF_RAM_Server * Const ) ) ,CRS ) - ( BR * ( FirstVNF_Mem + ( FirstVNF_CPU_Server - BR ) ) ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RCSe + MUM ),( MUR - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS * FirstVNF_CPU_Server ) / AMS ) ,( ( ( Max( BR,BR ) * ( AMS * ARS ) ) * Max( Min( CRS ,Const ),( MDR * BR ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * ( ( ( ( MUR + MLU ) * ( RRSe - MUC ) ) * Min( Min( MUC ,RMSe ) ,( CS - RCSe ) ) ) * Max( Min( ( MUC + MUC ) ,( DS * CS ) ),Min( ( MLU / RRSe ) ,( MLU * ( Max( RMSe,DS ) * Min( MLU ,CS ) ) ) ) ) ) ),( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,CRS ) ,( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - MDR ),( FirstVNF_Mem + RRS ) ) ) ) - ( ( BR / DDR ) - Max( RRS,BR ) ) ) - FirstVNF_RAM )", "choosing": "Min( ( RRSe / MUR ) ,( ( CS - RMSe ) / Min( MUC ,( RCSe * Min( ( RCSe - Min( MUR ,MLU ) ) ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( PN,( CRS * MRS ) ) + FirstVNF_RAM_Server ) ,RRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - ( ( RCSe - ( CS - ( CS - ( MLU * MUM ) ) ) ) - DS ) ) ,( MLU / ( RMSe / ( MLU - ( DS / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - AMS ) - MRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( ( ( MUC * DS ) - ( MUC + Min( DS ,( Min( MUM ,MUC ) / MUR ) ) ) ) ,RMSe ) ),Min( ( MUM - RRSe ) ,Max( MLU,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Const ) / ( ( Min( ( PN - Const ) ,CRS ) - ( Min( ( DDR / AMS ) ,( MDR - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) - FirstVNF_Mem ) )", "choosing": "Max( Max( ( ( RCSe + RMSe ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / MDR ) ) )", "choosing": "( Min( ( MUR - RMSe ) ,Max( DS,MUM ) ) - Min( ( CS / RCSe ) ,( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_Mem_Server ,( Const - ( ( Min( ( DDR / FirstVNF_Mem_Server ) ,BR ) + ( ARS + FirstVNF_RAM_Server ) ) - ( RRS + RRS ) ) ) )", "choosing": "( ( ( MUC / MUC ) * Max( MUC,RCSe ) ) - ( ( MUC * RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),Max( DDR,RRS ) ) )", "choosing": "( ( ( ( ( RMSe - MUM ) * ( MUR * RCSe ) ) / Min( Min( ( MLU / MUM ) ,Min( RCSe ,RMSe ) ) ,Max( MUR,MUC ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( FirstVNF_Mem_Server - ( Min( MDR ,DDR ) * ( FirstVNF_Mem_Server - ( FirstVNF_RAM - ( MDR + Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) ) )", "choosing": "( ( MUR * ( RCSe / Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( DS - RRSe ) ) ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * RRS ) - Max( ( Min( ( ( CRS + MRS ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) * ( ( ( FirstVNF_CPU_Server * ARS ) / ( FirstVNF_Mem + ARS ) ) / ( Max( FirstVNF_Mem_Server,Max( MRS,ACS ) ) * ( FirstVNF_RAM_Server * ARS ) ) ) ),RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + MLU ) - ( ( ( RMSe / MUM ) * Min( ( MLU * ( ( RRSe - ( RRSe + RRSe ) ) / MLU ) ) ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS - MDR ) / ( BR * FirstVNF_RAM_Server ) ) ,CRS ) * ( ACS - FirstVNF_CPU_Server ) )", "choosing": "( Max( MUR,MLU ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUC - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - BR ) + CRS ) - Max( Min( ( MDR * FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM_Server ) ),( ( ( MRS - MDR ) / ( Const * DDR ) ) - ( ARS + DDR ) ) ) )", "choosing": "( ( Min( ( DS * CS ) ,( MUC * MUM ) ) * ( Min( ( DS / RMSe ) ,( DS * MLU ) ) * Min( ( DS - MUC ) ,( MUR / RMSe ) ) ) ) / ( CS + ( ( RMSe + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ( DDR * FirstVNF_Mem ) ) ,Max( PN,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) )", "choosing": "Max( ( ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( Min( ( ( MUR + RCSe ) * ( CS - MUR ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) ) + MUC ) ) ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( RRS,FirstVNF_CPU_Server ) ) * Min( ( PN - Const ) ,CRS ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( MUM - RRSe ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ( ( ( RRS - BR ) + CRS ) * ( FirstVNF_Mem_Server - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( MRS ,Const ) ) * FirstVNF_RAM ) ) ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUC / DS ) - ( MUC / ( DS + MLU ) ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) * ( DS - MUC ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS + CRS ) + CRS ) - ( Max( ( ( DDR / DDR ) - MDR ),( ( Max( Const,CRS ) + FirstVNF_CPU ) - Max( ( BR / FirstVNF_RAM ),( PN * Max( MRS,( Const - ACS ) ) ) ) ) ) + RRS ) )", "choosing": "( ( MUC / MUC ) * ( MUC / ( ( MUR + Min( DS ,Min( RMSe ,MUR ) ) ) / ( MUM / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / FirstVNF_RAM ) - Max( ( ARS - FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( Min( Max( Min( RMSe ,CS ),Min( DS ,DS ) ) ,Min( Min( MLU ,CS ) ,( RCSe * MUC ) ) ) + Min( Max( RMSe,RRSe ) ,( Min( Max( ( Max( RCSe,MUC ) - MUM ),( DS - ( MUM * MUM ) ) ) ,( ( Max( RMSe,DS ) * ( DS / MUC ) ) * MLU ) ) + MLU ) ) ) - ( ( RMSe + MLU ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) - Min( AMS ,RRS ) )", "choosing": "Max( ( Min( MLU ,DS ) * Min( ( ( MUC * DS ) - ( MUC + RCSe ) ) ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU / MRS ) + ( AMS + MDR ) ) * ( Min( ( PN - Const ) ,CRS ) - ACS ) )", "choosing": "( ( Min( DS ,MUM ) * ( MUC + DS ) ) * ( ( RRSe / RRSe ) - ( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - PN ) - ( ( ( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - MUM ) * ( ( ( CS * MUM ) / MUM ) / ( RCSe * MUC ) ) ) ,( ( CS - RMSe ) / Min( MUC ,( ( ( RMSe + MLU ) + ( RMSe - RRSe ) ) * ( Min( MLU ,MLU ) * ( MLU * MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Const ) / ( ( Min( ( PN - Const ) ,CRS ) - ( PN - Const ) ) - FirstVNF_Mem ) )", "choosing": "Max( Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) ),( DS - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,MRS ) / ( ARS * Min( ( Max( RRS,Const ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) ) ) - ( ( FirstVNF_Mem / CRS ) / ( FirstVNF_Mem * ARS ) ) )", "choosing": "Min( ( Min( CS ,RMSe ) * Min( Max( MUM,MUM ) ,Max( RRSe,MLU ) ) ) ,( ( MUM + RMSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "Min( MLU ,( ( RMSe * MUC ) + ( MUC + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + CRS ) - ( RRS + ( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe * RCSe ) * ( ( MLU - RMSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / Min( Max( CS,CS ) ,( MUM - RMSe ) ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Max( ( FirstVNF_Mem / CRS ),DDR ) )", "choosing": "( ( ( CS * CS ) / ( MUC + RCSe ) ) / Min( MUC ,Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + ( ( RRS * MRS ) * ACS ) ) - ( BR + ( Const - FirstVNF_RAM_Server ) ) ) / ( ( MRS - Max( Const,FirstVNF_Mem_Server ) ) / ( Const * DDR ) ) )", "choosing": "( ( RCSe - MUM ) / ( MUR + ( ( CS * Max( Max( DS,MUM ),Max( Min( ( MLU - MUM ) ,MUR ),( MUM + CS ) ) ) ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( MRS + ( Const - FirstVNF_RAM_Server ) ) ) - ( ( ( MRS - PN ) - BR ) / ( ( FirstVNF_CPU_Server - AMS ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( MLU,CS ) + Max( RCSe,RMSe ) ) + Max( Min( RRSe ,( ( RRSe - ( ( DS - DS ) - DS ) ) * MUC ) ),( RRSe / MUM ) ) ) - ( Min( ( ( RCSe - MUM ) * RRSe ) ,( MUC * MUC ) ) / ( ( MLU - MUR ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,AMS ) * Min( ( PN - Const ) ,( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - DDR ) ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( MUM - ( CS - CS ) ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,AMS ) * Min( ( ( CRS / Max( Min( ARS ,FirstVNF_RAM ),RRS ) ) - Const ) ,CRS ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( ( ( RRSe + MLU ) / RCSe ) - RRSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - FirstVNF_Mem ) - ( BR + ARS ) )", "choosing": "( ( RCSe + DS ) - ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,Const ) / ( ( Min( ( PN - Const ) ,CRS ) - ( ( BR / Min( FirstVNF_Mem_Server ,Const ) ) * FirstVNF_CPU ) ) - FirstVNF_Mem ) ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * RCSe ),( ( Max( ( RMSe - MUC ),MUC ) + ( Min( RMSe ,( DS * Min( MUR ,RRSe ) ) ) * RMSe ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * CRS ) * ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - ( ARS / MDR ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( MUC ,RMSe ) ),( MUR + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,CRS ) ,( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - MDR ),( FirstVNF_Mem + RRS ) ) ) ) - ( ( BR / DDR ) - Max( RRS,BR ) ) ) - FirstVNF_RAM )", "choosing": "Min( ( RRSe / MUR ) ,( ( CS - RMSe ) / Min( MUC ,( RCSe * Min( ( RCSe - Min( MUR ,MLU ) ) ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU ) - FirstVNF_RAM )", "choosing": "Min( ( ( RCSe - DS ) * ( MUR * DS ) ) ,( ( CS - RMSe ) / Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( RRSe / RRSe ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,( ( ( RMSe + MLU ) + ( RMSe - RRSe ) ) * ( Min( MLU ,MLU ) * ( MLU * MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Min( Min( Max( AMS,FirstVNF_CPU ) ,AMS ) ,FirstVNF_CPU_Server ) ) * Min( ( PN - Const ) ,CRS ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,( ( CS - RMSe ) / Min( MUC ,CS ) ) ) ) * Min( ( MLU / ( MUM - RRSe ) ) ,( ( MUC / ( ( RMSe * MUM ) - MUC ) ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + ( BR * FirstVNF_RAM_Server ) ) - ( BR + ( Const - FirstVNF_RAM_Server ) ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( RCSe - MUM ) / Min( ( ( Max( MLU,CS ) + Max( RCSe,RMSe ) ) + Max( Min( RRSe ,MUR ),( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) / MUM ) ) ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_Mem_Server ,( Max( Const,( FirstVNF_RAM_Server * AMS ) ) + Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( ( MUC / MUC ) * DS ) - ( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( Max( MLU,( ( Min( DS ,RMSe ) + MUR ) + MUR ) ),( ( ( Max( RCSe,RMSe ) / RRSe ) * ( DS - MLU ) ) + ( MLU + ( MUC - ( RCSe + MUM ) ) ) ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,Max( ( FirstVNF_Mem / CRS ),( DDR / FirstVNF_Mem ) ) )", "choosing": "( MLU * ( ( Max( Max( CS,( MUC - MLU ) ),MUM ) - MUC ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / BR ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUC + Max( ( ( MUR * MLU ) + ( CS * DS ) ),MUM ) ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem - Const ) ,CRS ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( ( MUC - RCSe ),Min( ( MUM - ( Max( Min( DS ,RCSe ),RCSe ) * ( ( RRSe / RRSe ) - ( MUC + MLU ) ) ) ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( Const,( AMS / ( Max( FirstVNF_RAM_Server,ARS ) * Max( MRS,Max( ACS,FirstVNF_RAM ) ) ) ) ) / BR ) ,CRS ) - ( FirstVNF_Mem * ARS ) )", "choosing": "Max( ( ( ( RCSe - ( RMSe + Min( Min( MUR ,( CS * RMSe ) ) ,Max( Max( RRSe,RCSe ),MUC ) ) ) ) / Max( RCSe,RMSe ) ) * Min( CS ,RMSe ) ),Min( ( MUM - ( ( RCSe - MUM ) - DS ) ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( Const,Const ) / ( ACS - FirstVNF_Mem ) ) ,CRS ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + Max( FirstVNF_CPU,BR ) ) ) )", "choosing": "Max( ( Min( Min( ( CS - DS ) ,Max( MUC,RRSe ) ) ,RMSe ) * Min( CS ,RMSe ) ),Min( ( MUM - ( MUR - DS ) ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * Min( ( PN - Const ) ,( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - DDR ) ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( MUM - Max( ( ( RCSe * MUR ) / Min( MUC ,RMSe ) ),( MUR + MUR ) ) ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,AMS ) * ( PN - RRS ) )", "choosing": "( ( MUC + MUR ) * Min( ( MLU / ( ( ( DS * MLU ) - ( MUC * Max( ( RMSe / RRSe ),MUM ) ) ) - RRSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( FirstVNF_Mem_Server - ( Min( MDR ,DDR ) * ( FirstVNF_Mem_Server - ( FirstVNF_RAM - ( MDR + Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) ) )", "choosing": "( ( MUR * ( RCSe / Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( DS - RRSe ) ) ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - DDR ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( Min( Min( MLU ,CS ) ,( RCSe * MUC ) ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server - ( RRS + RRS ) )", "choosing": "( ( RCSe * RCSe ) * ( Max( ( MUC / RMSe ),( MUC / DS ) ) / MUC ) )", "obj1": 0.6195426195426196, "obj2": 0.3018275707168183}, {"determining": "( Min( ( PN - Const ) ,CRS ) - ( AMS * ( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( ( ( ( RRS + PN ) - DDR ) / FirstVNF_Mem ) - ( Min( FirstVNF_RAM ,CRS ) / ( FirstVNF_CPU + ACS ) ) ) ) ) )", "choosing": "Max( ( MUC - RCSe ),Min( ( ( RCSe * MUR ) / Min( MUC ,Max( Min( Min( RRSe ,DS ) ,MUR ),MUC ) ) ) ,( MLU * MUC ) ) )", "obj1": 0.656964656964657, "obj2": 0.1709854662718058}, {"determining": "( ( Min( Max( ( MRS + DDR ),Max( FirstVNF_CPU,DDR ) ) ,( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( ( ( Const - MDR ) * ( BR / FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,CRS ) / ( FirstVNF_CPU + ACS ) ) ) ) ) / MRS ) - ( ARS / MDR ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( MUC ,RMSe ) ),( RCSe + ( ( ( CS * MUR ) - ( DS - RRSe ) ) + MUC ) ) )", "obj1": 0.7401247401247402, "obj2": 0.1305359093818954}, {"determining": "( Min( FirstVNF_Mem_Server ,CRS ) * ( CRS / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( Min( MUM ,Min( ( MUR - MUC ) ,MUM ) ) ,( Min( MLU ,RRSe ) * ( MLU - CS ) ) ) )", "obj1": 0.6507276507276507, "obj2": 0.2571222829609951}, {"determining": "( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( ( ( DS - CS ) + Min( RCSe ,RMSe ) ) / ( ( MLU + MUM ) * Min( RMSe ,MUR ) ) )", "obj1": 0.9168399168399168, "obj2": 0.06035870521337024}, {"determining": "( Max( FirstVNF_CPU,DDR ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + Max( FirstVNF_CPU,BR ) ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),Min( ( CS + DS ) ,( ( MUC * RCSe ) * ( RRSe * ( Min( Min( ( CS - DS ) ,Max( DS,RRSe ) ) ,RMSe ) * ( ( ( CS * MUR ) - ( DS - RRSe ) ) + MUC ) ) ) ) ) )", "obj1": 0.8066528066528067, "obj2": 0.11277765506620463}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / Min( Const ,RRS ) ) ) )", "choosing": "( ( ( RCSe * MUR ) / Min( MUC ,RMSe ) ) - Max( Max( MUC,MUM ),MUC ) )", "obj1": 0.9521829521829522, "obj2": 0.04823204958637998}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( MDR * FirstVNF_CPU ) ) - ( ( ( AMS * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( DS * MUM ) )", "obj1": 0.9085239085239085, "obj2": 0.10484791014265903}, {"determining": "( ( FirstVNF_Mem / ( Min( ( PN - Const ) ,CRS ) - ( ACS * FirstVNF_CPU ) ) ) / ( ( Max( FirstVNF_Mem_Server,MRS ) / ( ARS * ARS ) ) - ( ( ACS * ARS ) - ( RRS * Const ) ) ) )", "choosing": "Min( RCSe ,Min( CS ,RMSe ) )", "obj1": 0.8523908523908524, "obj2": 0.10683797332590235}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) - ( ACS * FirstVNF_CPU ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( ( MUR * RRSe ) / ( MUM / RMSe ) ) ) / Min( ( CS / CS ) ,Min( ( MUM - RRSe ) ,( MLU * MUC ) ) ) )", "obj1": 0.9625779625779626, "obj2": 0.02393791988953079}, {"determining": "( ( Min( Const ,( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( ( ( ( RRS + PN ) - DDR ) / FirstVNF_Mem ) - ( Min( FirstVNF_RAM ,CRS ) / ( FirstVNF_CPU + ACS ) ) ) ) ) / MRS ) - ( ARS / MDR ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( MUC ,Max( Min( Min( RRSe ,DS ) ,MUR ),MUC ) ) ),( RCSe + ( Max( DS,RCSe ) - ( MUM + RMSe ) ) ) )", "obj1": 0.7588357588357588, "obj2": 0.12197648582903245}, {"determining": "( CRS - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,( MRS - MDR ) ) )", "choosing": "Min( Min( ( MUC * ( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) ) ) ,MUM ) ,( MUR / MUC ) )", "obj1": 0.632016632016632, "obj2": 0.26674260094306046}, {"determining": "( ( Max( PN,PN ) - ( DDR * ( DDR * FirstVNF_Mem ) ) ) / Max( ( BR * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,MUM ) ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 0.9792099792099792, "obj2": 0.00815236630320803}, {"determining": "( ( ( BR + AMS ) - ( BR + ARS ) ) / ( ( ( FirstVNF_Mem * ACS ) - MDR ) / ( ( DDR - ( MRS + ( AMS + ARS ) ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( RCSe - Min( RCSe ,CS ) ) / Min( ( CS / CS ) ,( MUC / Max( DS,MUM ) ) ) )", "obj1": 0.8814968814968815, "obj2": 0.10498747445930114}, {"determining": "( ( ARS + CRS ) - ( ( PN * FirstVNF_CPU ) + ( ( BR + FirstVNF_CPU ) - DDR ) ) )", "choosing": "( ( RCSe * RCSe ) * ( ( MUC - ( ( RMSe + Max( RCSe,CS ) ) / ( CS - MUM ) ) ) / MUC ) )", "obj1": 0.8773388773388774, "obj2": 0.1055855508039325}, {"determining": "( ( ( FirstVNF_CPU_Server / AMS ) * Const ) + ( ( ( RRS / DDR ) - ( FirstVNF_RAM_Server / MDR ) ) / Min( ( DDR + FirstVNF_RAM ) ,( PN - ARS ) ) ) )", "choosing": "( Min( Min( MUC ,MUR ) ,Min( MLU ,Min( MUR ,( ( ( CS - ( MUM * MUM ) ) * ( RCSe * CS ) ) / ( RCSe + ( RCSe - CS ) ) ) ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) )", "obj1": 0.6361746361746362, "obj2": 0.26036968534370314}, {"determining": "( ( Min( Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) ,( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( ( ( Const - MDR ) * ( BR / FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,CRS ) / ( FirstVNF_CPU + ACS ) ) ) ) ) / MRS ) - ( ARS / MDR ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( MUC ,RMSe ) ),( RCSe + ( Max( DS,( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( MUR / MUC ) ) ) ) - ( MUM + RMSe ) ) ) )", "obj1": 0.7463617463617463, "obj2": 0.12636078685340132}, {"determining": "( ( Max( PN,PN ) - ( DDR * ( DDR * FirstVNF_Mem ) ) ) / BR )", "choosing": "( ( ( RCSe + DS ) - ( CS * MUC ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 0.9875259875259875, "obj2": 0.004502162317267804}, {"determining": "( Min( ( ( CRS + MRS ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) * ( ( ( FirstVNF_CPU_Server * ARS ) / ( FirstVNF_Mem + ARS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) / RCSe ) - Max( MUC,( Max( RRSe,MUC ) * MLU ) ) )", "obj1": 0.6486486486486487, "obj2": 0.258813556948602}, {"determining": "( Min( ( Max( DDR,AMS ) * Min( ( ( CRS / Max( MDR,RRS ) ) - Const ) ,CRS ) ) ,CRS ) - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server - Min( Min( BR ,FirstVNF_Mem ) ,RRS ) ) ) / FirstVNF_RAM_Server ) + DDR ) ,( MDR - FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - ( MUR - ( ( ( ( MUM + CS ) - MUC ) + ( RMSe / RMSe ) ) + MLU ) ) ) ,( MLU * RCSe ) ) )", "obj1": 0.9937629937629938, "obj2": 0.0035885844328874318}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU ) * AMS ) )", "choosing": "( Max( RMSe,RCSe ) - ( Min( ( Min( Min( MLU ,Min( Min( CS ,RRSe ) ,CS ) ) ,MUR ) / ( RRSe / MLU ) ) ,RRSe ) + ( MUR * RMSe ) ) )", "obj1": 0.7442827442827443, "obj2": 0.1275602631115618}, {"determining": "( ( Max( PN,PN ) - ( DDR * ( DDR * FirstVNF_Mem ) ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 0.997920997920998, "obj2": 0.00104091456896437}, {"determining": "Min( Min( ACS ,DDR ) ,Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) * ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - BR ) - MRS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( Min( MUC ,( Min( RCSe ,MUR ) * MUM ) ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / CRS ),DDR ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),( RRS * PN ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( ( ( MLU + MUM ) - RCSe ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Const ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( Max( ( MLU * MUC ),MUM ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( PN / MRS ) ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( ( DS / MUM ),Max( CS,MUC ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( Max( RMSe,Max( ( DS / ( RRSe * Min( Min( MLU ,MUM ) ,Max( MUR,RRSe ) ) ) ),DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * RMSe ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( FirstVNF_RAM - Const ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( ( ( ( RRSe - RMSe ) * MUM ) / MUM ) / ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( Const,FirstVNF_RAM_Server ) ,( ( ARS - FirstVNF_RAM ) - CRS ) ) - FirstVNF_CPU ) - FirstVNF_RAM )", "choosing": "Min( ( ( MUR - ( DS / Max( ( RCSe * Max( ( RCSe / DS ),( DS - RMSe ) ) ),( MLU / RRSe ) ) ) ) * ( MUR * DS ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - PN ) - ( ( AMS - Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),Const ) ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,( ( ( RMSe + MLU ) + Min( MUM ,Min( MUR ,CS ) ) ) * ( Min( MLU ,MLU ) * ( MLU * MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / DDR ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,Min( RRS ,Const ) ) )", "choosing": "( ( Min( Max( Min( RMSe ,CS ),Min( DS ,DS ) ) ,Min( Min( MLU ,CS ) ,( RCSe * MUC ) ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - ( RCSe + Max( ( DS / MUM ),MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( DDR ,FirstVNF_RAM_Server ) ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( ( MUR * RRSe ) / ( MUM / RMSe ) ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Max( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( MDR * FirstVNF_CPU ) ) / CRS ),DDR ) )", "choosing": "Min( ( ( MLU + DS ) + ( Max( RRSe,MUC ) - MUM ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( Const,Const ) / ( ACS - FirstVNF_Mem ) ) ,CRS ) - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server - Min( Min( BR ,FirstVNF_Mem ) ,RRS ) ) ) / FirstVNF_RAM_Server ) + DDR ) ,( MDR - FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - ( MUR - ( ( ( ( MUM + CS ) - MUC ) + ( RMSe / RMSe ) ) + MLU ) ) ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,AMS ) * Min( ( ( CRS / Max( Min( ARS ,FirstVNF_RAM ),RRS ) ) - Const ) ,CRS ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( ( ( RRSe + MLU ) / RCSe ) - RRSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( MUC * RRSe ) ,MUM ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( MDR * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( MRS + ( Const - FirstVNF_RAM_Server ) ) ) - ( ( ( MRS - PN ) - ( DDR * RRS ) ) / ( ( FirstVNF_RAM + AMS ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( MLU,CS ) + Max( RCSe,RMSe ) ) + Max( Min( RRSe ,MUR ),( RRSe / MUM ) ) ) - ( Min( ( RCSe * RRSe ) ,( MUC * MUC ) ) / ( ( MLU - MUR ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / PN ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ( DDR * Max( Const,( MDR + MDR ) ) ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( ( ( MUR + MUM ) + DS ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,MRS ) / ( ARS * ARS ) ) - ( ( FirstVNF_Mem / CRS ) / ( FirstVNF_Mem * ARS ) ) )", "choosing": "Min( ( Min( CS ,RMSe ) * Min( Max( MUM,MUM ) ,Max( RRSe,MLU ) ) ) ,( Max( RCSe,RMSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / MRS ) - ( ARS / ( MRS / PN ) ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( Max( RRSe,RMSe ) ,Max( Min( ( RCSe * ( CS * MUR ) ) ,RCSe ),( RMSe - Max( MUM,DS ) ) ) ) ),( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ( MDR / ACS ) ) + CRS ) - Max( Min( ( MDR * FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM_Server ) ),( Max( FirstVNF_CPU_Server,AMS ) - ( ARS + DDR ) ) ) )", "choosing": "( ( Min( ( DS * CS ) ,( MUC * MUM ) ) * ( Min( ( DS / RMSe ) ,( DS * MLU ) ) * Min( Max( Min( Min( RRSe ,( CS / MUC ) ) ,( Min( MLU ,MUR ) * MUC ) ),( RRSe / Max( MUC,RCSe ) ) ) ,( MUM - Max( ( ( RCSe * MUR ) / RRSe ),Min( Min( RMSe ,RRSe ) ,CS ) ) ) ) ) ) / ( Max( Max( CS,MUM ),Max( CS,DS ) ) + ( ( RMSe + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - Const ) ,CRS ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( ( MUC - RCSe ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - AMS )", "choosing": "( ( ( CS * CS ) / ( MUC + RCSe ) ) / Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Const ) / ( ( Min( ( PN - ( FirstVNF_RAM_Server * Const ) ) ,CRS ) - ( BR * ( FirstVNF_Mem + ( FirstVNF_CPU_Server - BR ) ) ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RCSe + MUM ),( MUR - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS * FirstVNF_CPU_Server ) / AMS ) ,( ( ( Max( BR,BR ) * ( AMS * ARS ) ) * Max( Min( CRS ,Const ),( MDR * BR ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * ( ( ( ( MUR + MLU ) * ( RRSe - MUC ) ) * Min( Min( MUC ,RMSe ) ,( CS - RCSe ) ) ) * Max( Min( ( MUC + MUC ) ,( DS * CS ) ),Min( ( MLU / RRSe ) ,( MLU * ( Max( RMSe,DS ) * Min( MLU ,CS ) ) ) ) ) ) ),( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,CRS ) ,( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - MDR ),( FirstVNF_Mem + RRS ) ) ) ) - ( ( BR / DDR ) - Max( RRS,BR ) ) ) - FirstVNF_RAM )", "choosing": "Min( ( RRSe / MUR ) ,( ( CS - RMSe ) / Min( MUC ,( RCSe * Min( ( RCSe - Min( MUR ,MLU ) ) ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( PN,( CRS * MRS ) ) + FirstVNF_RAM_Server ) ,RRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - ( ( RCSe - ( CS - ( CS - ( MLU * MUM ) ) ) ) - DS ) ) ,( MLU / ( RMSe / ( MLU - ( DS / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - AMS ) - MRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( ( ( MUC * DS ) - ( MUC + Min( DS ,( Min( MUM ,MUC ) / MUR ) ) ) ) ,RMSe ) ),Min( ( MUM - RRSe ) ,Max( MLU,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Const ) / ( ( Min( ( PN - Const ) ,CRS ) - ( Min( ( DDR / AMS ) ,( MDR - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) - FirstVNF_Mem ) )", "choosing": "Max( Max( ( ( RCSe + RMSe ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / MDR ) ) )", "choosing": "( Min( ( MUR - RMSe ) ,Max( DS,MUM ) ) - Min( ( CS / RCSe ) ,( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_Mem_Server ,( Const - ( ( Min( ( DDR / FirstVNF_Mem_Server ) ,BR ) + ( ARS + FirstVNF_RAM_Server ) ) - ( RRS + RRS ) ) ) )", "choosing": "( ( ( MUC / MUC ) * Max( MUC,RCSe ) ) - ( ( MUC * RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),Max( DDR,RRS ) ) )", "choosing": "( ( ( ( ( RMSe - MUM ) * ( MUR * RCSe ) ) / Min( Min( ( MLU / MUM ) ,Min( RCSe ,RMSe ) ) ,Max( MUR,MUC ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( FirstVNF_Mem_Server - ( Min( MDR ,DDR ) * ( FirstVNF_Mem_Server - ( FirstVNF_RAM - ( MDR + Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) ) )", "choosing": "( ( MUR * ( RCSe / Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( DS - RRSe ) ) ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * RRS ) - Max( ( Min( ( ( CRS + MRS ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) * ( ( ( FirstVNF_CPU_Server * ARS ) / ( FirstVNF_Mem + ARS ) ) / ( Max( FirstVNF_Mem_Server,Max( MRS,ACS ) ) * ( FirstVNF_RAM_Server * ARS ) ) ) ),RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + MLU ) - ( ( ( RMSe / MUM ) * Min( ( MLU * ( ( RRSe - ( RRSe + RRSe ) ) / MLU ) ) ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS - MDR ) / ( BR * FirstVNF_RAM_Server ) ) ,CRS ) * ( ACS - FirstVNF_CPU_Server ) )", "choosing": "( Max( MUR,MLU ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUC - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - BR ) + CRS ) - Max( Min( ( MDR * FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM_Server ) ),( ( ( MRS - MDR ) / ( Const * DDR ) ) - ( ARS + DDR ) ) ) )", "choosing": "( ( Min( ( DS * CS ) ,( MUC * MUM ) ) * ( Min( ( DS / RMSe ) ,( DS * MLU ) ) * Min( ( DS - MUC ) ,( MUR / RMSe ) ) ) ) / ( CS + ( ( RMSe + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ( DDR * FirstVNF_Mem ) ) ,Max( PN,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) )", "choosing": "Max( ( ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( Min( ( ( MUR + RCSe ) * ( CS - MUR ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) ) + MUC ) ) ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( RRS,FirstVNF_CPU_Server ) ) * Min( ( PN - Const ) ,CRS ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( MUM - RRSe ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ( ( ( RRS - BR ) + CRS ) * ( FirstVNF_Mem_Server - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( MRS ,Const ) ) * FirstVNF_RAM ) ) ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUC / DS ) - ( MUC / ( DS + MLU ) ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) * ( DS - MUC ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS + CRS ) + CRS ) - ( Max( ( ( DDR / DDR ) - MDR ),( ( Max( Const,CRS ) + FirstVNF_CPU ) - Max( ( BR / FirstVNF_RAM ),( PN * Max( MRS,( Const - ACS ) ) ) ) ) ) + RRS ) )", "choosing": "( ( MUC / MUC ) * ( MUC / ( ( MUR + Min( DS ,Min( RMSe ,MUR ) ) ) / ( MUM / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / FirstVNF_RAM ) - Max( ( ARS - FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( Min( Max( Min( RMSe ,CS ),Min( DS ,DS ) ) ,Min( Min( MLU ,CS ) ,( RCSe * MUC ) ) ) + Min( Max( RMSe,RRSe ) ,( Min( Max( ( Max( RCSe,MUC ) - MUM ),( DS - ( MUM * MUM ) ) ) ,( ( Max( RMSe,DS ) * ( DS / MUC ) ) * MLU ) ) + MLU ) ) ) - ( ( RMSe + MLU ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) - Min( AMS ,RRS ) )", "choosing": "Max( ( Min( MLU ,DS ) * Min( ( ( MUC * DS ) - ( MUC + RCSe ) ) ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU / MRS ) + ( AMS + MDR ) ) * ( Min( ( PN - Const ) ,CRS ) - ACS ) )", "choosing": "( ( Min( DS ,MUM ) * ( MUC + DS ) ) * ( ( RRSe / RRSe ) - ( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - PN ) - ( ( ( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - MUM ) * ( ( ( CS * MUM ) / MUM ) / ( RCSe * MUC ) ) ) ,( ( CS - RMSe ) / Min( MUC ,( ( ( RMSe + MLU ) + ( RMSe - RRSe ) ) * ( Min( MLU ,MLU ) * ( MLU * MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Const ) / ( ( Min( ( PN - Const ) ,CRS ) - ( PN - Const ) ) - FirstVNF_Mem ) )", "choosing": "Max( Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) ),( DS - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,MRS ) / ( ARS * Min( ( Max( RRS,Const ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) ) ) - ( ( FirstVNF_Mem / CRS ) / ( FirstVNF_Mem * ARS ) ) )", "choosing": "Min( ( Min( CS ,RMSe ) * Min( Max( MUM,MUM ) ,Max( RRSe,MLU ) ) ) ,( ( MUM + RMSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "Min( MLU ,( ( RMSe * MUC ) + ( MUC + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + CRS ) - ( RRS + ( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe * RCSe ) * ( ( MLU - RMSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / Min( Max( CS,CS ) ,( MUM - RMSe ) ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Max( ( FirstVNF_Mem / CRS ),DDR ) )", "choosing": "( ( ( CS * CS ) / ( MUC + RCSe ) ) / Min( MUC ,Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + ( ( RRS * MRS ) * ACS ) ) - ( BR + ( Const - FirstVNF_RAM_Server ) ) ) / ( ( MRS - Max( Const,FirstVNF_Mem_Server ) ) / ( Const * DDR ) ) )", "choosing": "( ( RCSe - MUM ) / ( MUR + ( ( CS * Max( Max( DS,MUM ),Max( Min( ( MLU - MUM ) ,MUR ),( MUM + CS ) ) ) ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( MRS + ( Const - FirstVNF_RAM_Server ) ) ) - ( ( ( MRS - PN ) - BR ) / ( ( FirstVNF_CPU_Server - AMS ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( MLU,CS ) + Max( RCSe,RMSe ) ) + Max( Min( RRSe ,( ( RRSe - ( ( DS - DS ) - DS ) ) * MUC ) ),( RRSe / MUM ) ) ) - ( Min( ( ( RCSe - MUM ) * RRSe ) ,( MUC * MUC ) ) / ( ( MLU - MUR ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,AMS ) * Min( ( PN - Const ) ,( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - DDR ) ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( MUM - ( CS - CS ) ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,AMS ) * Min( ( ( CRS / Max( Min( ARS ,FirstVNF_RAM ),RRS ) ) - Const ) ,CRS ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( ( ( RRSe + MLU ) / RCSe ) - RRSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - FirstVNF_Mem ) - ( BR + ARS ) )", "choosing": "( ( RCSe + DS ) - ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,Const ) / ( ( Min( ( PN - Const ) ,CRS ) - ( ( BR / Min( FirstVNF_Mem_Server ,Const ) ) * FirstVNF_CPU ) ) - FirstVNF_Mem ) ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * RCSe ),( ( Max( ( RMSe - MUC ),MUC ) + ( Min( RMSe ,( DS * Min( MUR ,RRSe ) ) ) * RMSe ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * CRS ) * ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - ( ARS / MDR ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( MUC ,RMSe ) ),( MUR + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,CRS ) ,( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - MDR ),( FirstVNF_Mem + RRS ) ) ) ) - ( ( BR / DDR ) - Max( RRS,BR ) ) ) - FirstVNF_RAM )", "choosing": "Min( ( RRSe / MUR ) ,( ( CS - RMSe ) / Min( MUC ,( RCSe * Min( ( RCSe - Min( MUR ,MLU ) ) ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU ) - FirstVNF_RAM )", "choosing": "Min( ( ( RCSe - DS ) * ( MUR * DS ) ) ,( ( CS - RMSe ) / Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( RRSe / RRSe ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,( ( ( RMSe + MLU ) + ( RMSe - RRSe ) ) * ( Min( MLU ,MLU ) * ( MLU * MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Min( Min( Max( AMS,FirstVNF_CPU ) ,AMS ) ,FirstVNF_CPU_Server ) ) * Min( ( PN - Const ) ,CRS ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,( ( CS - RMSe ) / Min( MUC ,CS ) ) ) ) * Min( ( MLU / ( MUM - RRSe ) ) ,( ( MUC / ( ( RMSe * MUM ) - MUC ) ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + ( BR * FirstVNF_RAM_Server ) ) - ( BR + ( Const - FirstVNF_RAM_Server ) ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( RCSe - MUM ) / Min( ( ( Max( MLU,CS ) + Max( RCSe,RMSe ) ) + Max( Min( RRSe ,MUR ),( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) / MUM ) ) ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_Mem_Server ,( Max( Const,( FirstVNF_RAM_Server * AMS ) ) + Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( ( MUC / MUC ) * DS ) - ( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( Max( MLU,( ( Min( DS ,RMSe ) + MUR ) + MUR ) ),( ( ( Max( RCSe,RMSe ) / RRSe ) * ( DS - MLU ) ) + ( MLU + ( MUC - ( RCSe + MUM ) ) ) ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,Max( ( FirstVNF_Mem / CRS ),( DDR / FirstVNF_Mem ) ) )", "choosing": "( MLU * ( ( Max( Max( CS,( MUC - MLU ) ),MUM ) - MUC ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / BR ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUC + Max( ( ( MUR * MLU ) + ( CS * DS ) ),MUM ) ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem - Const ) ,CRS ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( ( MUC - RCSe ),Min( ( MUM - ( Max( Min( DS ,RCSe ),RCSe ) * ( ( RRSe / RRSe ) - ( MUC + MLU ) ) ) ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( Const,( AMS / ( Max( FirstVNF_RAM_Server,ARS ) * Max( MRS,Max( ACS,FirstVNF_RAM ) ) ) ) ) / BR ) ,CRS ) - ( FirstVNF_Mem * ARS ) )", "choosing": "Max( ( ( ( RCSe - ( RMSe + Min( Min( MUR ,( CS * RMSe ) ) ,Max( Max( RRSe,RCSe ),MUC ) ) ) ) / Max( RCSe,RMSe ) ) * Min( CS ,RMSe ) ),Min( ( MUM - ( ( RCSe - MUM ) - DS ) ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( Const,Const ) / ( ACS - FirstVNF_Mem ) ) ,CRS ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + Max( FirstVNF_CPU,BR ) ) ) )", "choosing": "Max( ( Min( Min( ( CS - DS ) ,Max( MUC,RRSe ) ) ,RMSe ) * Min( CS ,RMSe ) ),Min( ( MUM - ( MUR - DS ) ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * Min( ( PN - Const ) ,( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - DDR ) ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( MUM - Max( ( ( RCSe * MUR ) / Min( MUC ,RMSe ) ),( MUR + MUR ) ) ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( Min( ( DDR / BR ) ,CRS ) - ( ACS * FirstVNF_CPU ) ) * ( ( ( FirstVNF_CPU_Server * ARS ) / ( FirstVNF_Mem + ARS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) / RCSe ) - Max( Max( ( ( MUR * MLU ) + ( CS * DS ) ),MUM ),( Max( RRSe,MUC ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( FirstVNF_Mem_Server - ( Min( MDR ,DDR ) * ( FirstVNF_Mem_Server - ( FirstVNF_RAM - ( MDR + Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) ) )", "choosing": "( ( MUR * ( RCSe / Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( DS - RRSe ) ) ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server - ( RRS + RRS ) )", "choosing": "( ( RCSe * RCSe ) * ( Max( ( MUC / RMSe ),( MUC / DS ) ) / MUC ) )", "obj1": 0.6195426195426196, "obj2": 0.3018275707168183}, {"determining": "( Min( ( PN - Const ) ,CRS ) - ( AMS * ( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( ( ( ( RRS + PN ) - DDR ) / FirstVNF_Mem ) - ( Min( FirstVNF_RAM ,CRS ) / ( FirstVNF_CPU + ACS ) ) ) ) ) )", "choosing": "Max( ( MUC - RCSe ),Min( ( ( RCSe * MUR ) / Min( MUC ,Max( Min( Min( RRSe ,DS ) ,MUR ),MUC ) ) ) ,( MLU * MUC ) ) )", "obj1": 0.656964656964657, "obj2": 0.1709854662718058}, {"determining": "( ( ( ( BR / DDR ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,Min( RRS ,Const ) ) ) - ( DDR * ( DDR * FirstVNF_Mem ) ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - ( RCSe + Max( ( DS / MUM ),MUC ) ) ) ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 0.841995841995842, "obj2": 0.07557632565548597}, {"determining": "( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( ( ( DS - CS ) + Min( RCSe ,RMSe ) ) / ( ( MLU + MUM ) * Min( RMSe ,MUR ) ) )", "obj1": 0.9168399168399168, "obj2": 0.06035870521337024}, {"determining": "( Max( FirstVNF_CPU,DDR ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + Max( FirstVNF_CPU,BR ) ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),Min( ( CS + DS ) ,( ( MUC * RCSe ) * ( RRSe * ( Min( Min( ( CS - DS ) ,Max( DS,RRSe ) ) ,RMSe ) * ( ( ( CS * MUR ) - ( DS - RRSe ) ) + MUC ) ) ) ) ) )", "obj1": 0.8066528066528067, "obj2": 0.11277765506620463}, {"determining": "( Min( ( PN + Min( FirstVNF_CPU ,DDR ) ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),( RRS * PN ) ) )", "choosing": "( ( Max( Min( ( MUM - ( ( RCSe - ( CS - CS ) ) - DS ) ) ,( MLU / ( RMSe / ( MLU - ( DS / MUR ) ) ) ) ),MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( ( ( MLU + MUM ) - RCSe ) - DS ) ) )", "obj1": 0.7214137214137214, "obj2": 0.14356402295295642}, {"determining": "( Min( FirstVNF_Mem_Server ,CRS ) * ( CRS / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( Min( MUM ,Min( ( MUR - MUC ) ,MUM ) ) ,( Min( MLU ,RRSe ) * ( MLU - CS ) ) ) )", "obj1": 0.6507276507276507, "obj2": 0.2571222829609951}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / Min( Const ,RRS ) ) ) )", "choosing": "( ( ( RCSe * MUR ) / Min( MUC ,RMSe ) ) - Max( Max( MUC,MUM ),MUC ) )", "obj1": 0.9521829521829522, "obj2": 0.04823204958637998}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) - ( ACS * FirstVNF_CPU ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( ( MUR * RRSe ) / ( MUM / RMSe ) ) ) / Min( ( CS / CS ) ,Min( ( MUM - RRSe ) ,( MLU * MUC ) ) ) )", "obj1": 0.9625779625779626, "obj2": 0.02393791988953079}, {"determining": "( ( Min( ( ( BR / DDR ) - Max( RRS,BR ) ) ,( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( ( ( Const - MDR ) * ( BR / FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,CRS ) / ( FirstVNF_CPU + ACS ) ) ) ) ) / MRS ) - ( ARS / MDR ) )", "choosing": "Max( ( ( CS - RMSe ) / Min( MUC ,( RCSe * Min( ( RCSe - Min( MUR ,MLU ) ) ,MUM ) ) ) ),( RCSe + ( ( ( CS * MUR ) - ( DS - RRSe ) ) + MUC ) ) )", "obj1": 0.7546777546777547, "obj2": 0.12076764483871828}, {"determining": "( CRS - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,( MRS - MDR ) ) )", "choosing": "Min( Min( ( MUC * ( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) ) ) ,MUM ) ,( MUR / MUC ) )", "obj1": 0.632016632016632, "obj2": 0.26674260094306046}, {"determining": "( ( Max( PN,PN ) - ( DDR * ( DDR * FirstVNF_Mem ) ) ) / Max( ( BR * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,MUM ) ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 0.9792099792099792, "obj2": 0.00815236630320803}, {"determining": "( ( Min( Max( ( MRS + DDR ),Max( FirstVNF_CPU,DDR ) ) ,( ( BR / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( ( ( Const - MDR ) * ( BR / FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,CRS ) / ( FirstVNF_CPU + ACS ) ) ) ) ) / MRS ) - ( ARS / MDR ) )", "choosing": "Max( ( ( MLU * ( Max( RMSe,DS ) * Min( MLU ,CS ) ) ) / Min( MUC ,RMSe ) ),( RCSe + ( ( ( CS * MUR ) - ( DS - RRSe ) ) + MUC ) ) )", "obj1": 0.738045738045738, "obj2": 0.13185761406602367}, {"determining": "( ( ( FirstVNF_CPU_Server / AMS ) * Const ) + ( ( ( RRS / DDR ) - ( FirstVNF_RAM_Server / MDR ) ) / Min( ( DDR + FirstVNF_RAM ) ,( PN - ARS ) ) ) )", "choosing": "( Min( Min( MUC ,MUR ) ,Min( MLU ,Min( MUR ,( ( ( CS - ( MUM * MUM ) ) * ( RCSe * CS ) ) / ( RCSe + ( RCSe - CS ) ) ) ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) )", "obj1": 0.6361746361746362, "obj2": 0.26036968534370314}, {"determining": "( ( Max( PN,PN ) - ( DDR * ( DDR * FirstVNF_Mem ) ) ) / BR )", "choosing": "( ( ( RCSe + DS ) - ( CS * MUC ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 0.9875259875259875, "obj2": 0.004502162317267804}, {"determining": "( ( Min( Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) ,( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( ( ( Const - MDR ) * ( BR / FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,CRS ) / ( FirstVNF_CPU + ACS ) ) ) ) ) / MRS ) - ( ARS / MDR ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( MUC ,RMSe ) ),( RCSe + ( Max( DS,( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( MUR / MUC ) ) ) ) - ( MUM + RMSe ) ) ) )", "obj1": 0.7463617463617463, "obj2": 0.12636078685340132}, {"determining": "( Min( ( ( CRS + MRS ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) * ( ( ( FirstVNF_CPU_Server * ARS ) / ( FirstVNF_Mem + ARS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) / RCSe ) - Max( MUC,( Max( RRSe,MUC ) * MLU ) ) )", "obj1": 0.6486486486486487, "obj2": 0.258813556948602}, {"determining": "( ( Min( Max( ( MRS + DDR ),Max( FirstVNF_CPU,DDR ) ) ,( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( ( ( Const - MDR ) * ( BR / FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,CRS ) / ( FirstVNF_CPU + ACS ) ) ) ) ) / MRS ) - ( ARS / MDR ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( MUC ,RMSe ) ),( RCSe + ( ( ( CS * MUR ) - ( DS - RRSe ) ) + MUC ) ) )", "obj1": 0.7401247401247402, "obj2": 0.1305359093818954}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU ) * AMS ) )", "choosing": "( Max( RMSe,RCSe ) - ( Min( ( Min( Min( MLU ,Min( Min( CS ,RRSe ) ,CS ) ) ,MUR ) / ( RRSe / MLU ) ) ,RRSe ) + ( MUR * RMSe ) ) )", "obj1": 0.7442827442827443, "obj2": 0.1275602631115618}, {"determining": "( Min( ( Max( DDR,AMS ) * Min( ( ( CRS / Max( MDR,RRS ) ) - Const ) ,CRS ) ) ,CRS ) - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server - Min( Min( BR ,FirstVNF_Mem ) ,RRS ) ) ) / FirstVNF_RAM_Server ) + DDR ) ,( MDR - FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - ( MUR - ( ( ( ( MUM + CS ) - MUC ) + ( RMSe / RMSe ) ) + MLU ) ) ) ,( MLU * RCSe ) ) )", "obj1": 0.9937629937629938, "obj2": 0.0035885844328874318}, {"determining": "( ( ( RRS - Min( ( Const - AMS ) ,Max( ( FirstVNF_Mem / CRS ),( DDR / FirstVNF_Mem ) ) ) ) + CRS ) - Max( Min( ( MDR * FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM_Server ) ),( Max( FirstVNF_CPU_Server,AMS ) - ( ARS + DDR ) ) ) )", "choosing": "( ( Min( ( DS * CS ) ,( MUC * MUM ) ) * ( Min( ( DS / RMSe ) ,( DS * MLU ) ) * Min( ( Max( CS,( MUC - MLU ) ) - MUC ) ,( MUR / RMSe ) ) ) ) / ( Max( Max( CS,MUM ),Max( CS,DS ) ) + ( ( RMSe + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 0.9958419958419958, "obj2": 0.002198694292535109}, {"determining": "( ( Max( PN,PN ) - ( DDR * ( DDR * FirstVNF_Mem ) ) ) / Max( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem_Server ,( Max( Const,( FirstVNF_RAM_Server * AMS ) ) + Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ) ) ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( ( MLU + ( MUC - ( RCSe + MUM ) ) ) * MUM ) - ( MUC + MUC ) ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 0.997920997920998, "obj2": 0.00104091456896437}, {"determining": "( ( Max( PN,PN ) - ( DDR * ( DDR * FirstVNF_Mem ) ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 0.997920997920998, "obj2": 0.00104091456896437}, {"determining": "( Min( ( Max( DDR,AMS ) * Min( ( ( CRS / Max( MDR,RRS ) ) - Const ) ,CRS ) ) ,CRS ) - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server - Min( Min( BR ,FirstVNF_Mem_Server ) ,RRS ) ) ) / FirstVNF_RAM_Server ) + DDR ) ,( MDR - FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - ( MUR - ( ( ( ( MUM + CS ) - MUC ) + ( RMSe / RMSe ) ) + DS ) ) ) ,( MLU * RCSe ) ) )", "obj1": 0.9937629937629938, "obj2": 0.0035885844328874318}, {"determining": "( Min( ( PN - DDR ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( Min( Min( MLU ,CS ) ,( RCSe * MUC ) ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,DDR ) ,Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) * ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - BR ) - MRS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( Min( MUC ,( Min( RCSe ,MUR ) * MUM ) ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / CRS ),DDR ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),( RRS * PN ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( ( ( MLU + MUM ) - RCSe ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Const ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( Max( ( MLU * MUC ),MUM ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( PN / MRS ) ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( ( DS / MUM ),Max( CS,MUC ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( Max( RMSe,Max( ( DS / ( RRSe * Min( Min( MLU ,MUM ) ,Max( MUR,RRSe ) ) ) ),DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * RMSe ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( FirstVNF_RAM - Const ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( ( ( ( RRSe - RMSe ) * MUM ) / MUM ) / ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( Const,FirstVNF_RAM_Server ) ,( ( ARS - FirstVNF_RAM ) - CRS ) ) - FirstVNF_CPU ) - FirstVNF_RAM )", "choosing": "Min( ( ( MUR - ( DS / Max( ( RCSe * Max( ( RCSe / DS ),( DS - RMSe ) ) ),( MLU / RRSe ) ) ) ) * ( MUR * DS ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - PN ) - ( ( AMS - Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),Const ) ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,( ( ( RMSe + MLU ) + Min( MUM ,Min( MUR ,CS ) ) ) * ( Min( MLU ,MLU ) * ( MLU * MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / DDR ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,Min( RRS ,Const ) ) )", "choosing": "( ( Min( Max( Min( RMSe ,CS ),Min( DS ,DS ) ) ,Min( Min( MLU ,CS ) ,( RCSe * MUC ) ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - ( RCSe + Max( ( DS / MUM ),MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( DDR ,FirstVNF_RAM_Server ) ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( ( MUR * RRSe ) / ( MUM / RMSe ) ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Max( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( MDR * FirstVNF_CPU ) ) / CRS ),DDR ) )", "choosing": "Min( ( ( MLU + DS ) + ( Max( RRSe,MUC ) - MUM ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( Const,Const ) / ( ACS - FirstVNF_Mem ) ) ,CRS ) - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server - Min( Min( BR ,FirstVNF_Mem ) ,RRS ) ) ) / FirstVNF_RAM_Server ) + DDR ) ,( MDR - FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - ( MUR - ( ( ( ( MUM + CS ) - MUC ) + ( RMSe / RMSe ) ) + MLU ) ) ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,AMS ) * Min( ( ( CRS / Max( Min( ARS ,FirstVNF_RAM ),RRS ) ) - Const ) ,CRS ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( ( ( RRSe + MLU ) / RCSe ) - RRSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( MUC * RRSe ) ,MUM ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( MDR * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( MRS + ( Const - FirstVNF_RAM_Server ) ) ) - ( ( ( MRS - PN ) - ( DDR * RRS ) ) / ( ( FirstVNF_RAM + AMS ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( MLU,CS ) + Max( RCSe,RMSe ) ) + Max( Min( RRSe ,MUR ),( RRSe / MUM ) ) ) - ( Min( ( RCSe * RRSe ) ,( MUC * MUC ) ) / ( ( MLU - MUR ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / PN ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ( DDR * Max( Const,( MDR + MDR ) ) ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( ( ( MUR + MUM ) + DS ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,MRS ) / ( ARS * ARS ) ) - ( ( FirstVNF_Mem / CRS ) / ( FirstVNF_Mem * ARS ) ) )", "choosing": "Min( ( Min( CS ,RMSe ) * Min( Max( MUM,MUM ) ,Max( RRSe,MLU ) ) ) ,( Max( RCSe,RMSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / MRS ) - ( ARS / ( MRS / PN ) ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( Max( RRSe,RMSe ) ,Max( Min( ( RCSe * ( CS * MUR ) ) ,RCSe ),( RMSe - Max( MUM,DS ) ) ) ) ),( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ( MDR / ACS ) ) + CRS ) - Max( Min( ( MDR * FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM_Server ) ),( Max( FirstVNF_CPU_Server,AMS ) - ( ARS + DDR ) ) ) )", "choosing": "( ( Min( ( DS * CS ) ,( MUC * MUM ) ) * ( Min( ( DS / RMSe ) ,( DS * MLU ) ) * Min( Max( Min( Min( RRSe ,( CS / MUC ) ) ,( Min( MLU ,MUR ) * MUC ) ),( RRSe / Max( MUC,RCSe ) ) ) ,( MUM - Max( ( ( RCSe * MUR ) / RRSe ),Min( Min( RMSe ,RRSe ) ,CS ) ) ) ) ) ) / ( Max( Max( CS,MUM ),Max( CS,DS ) ) + ( ( RMSe + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - Const ) ,CRS ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( ( MUC - RCSe ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - AMS )", "choosing": "( ( ( CS * CS ) / ( MUC + RCSe ) ) / Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Const ) / ( ( Min( ( PN - ( FirstVNF_RAM_Server * Const ) ) ,CRS ) - ( BR * ( FirstVNF_Mem + ( FirstVNF_CPU_Server - BR ) ) ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RCSe + MUM ),( MUR - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS * FirstVNF_CPU_Server ) / AMS ) ,( ( ( Max( BR,BR ) * ( AMS * ARS ) ) * Max( Min( CRS ,Const ),( MDR * BR ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * ( ( ( ( MUR + MLU ) * ( RRSe - MUC ) ) * Min( Min( MUC ,RMSe ) ,( CS - RCSe ) ) ) * Max( Min( ( MUC + MUC ) ,( DS * CS ) ),Min( ( MLU / RRSe ) ,( MLU * ( Max( RMSe,DS ) * Min( MLU ,CS ) ) ) ) ) ) ),( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,CRS ) ,( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - MDR ),( FirstVNF_Mem + RRS ) ) ) ) - ( ( BR / DDR ) - Max( RRS,BR ) ) ) - FirstVNF_RAM )", "choosing": "Min( ( RRSe / MUR ) ,( ( CS - RMSe ) / Min( MUC ,( RCSe * Min( ( RCSe - Min( MUR ,MLU ) ) ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( PN,( CRS * MRS ) ) + FirstVNF_RAM_Server ) ,RRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - ( ( RCSe - ( CS - ( CS - ( MLU * MUM ) ) ) ) - DS ) ) ,( MLU / ( RMSe / ( MLU - ( DS / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - AMS ) - MRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( ( ( MUC * DS ) - ( MUC + Min( DS ,( Min( MUM ,MUC ) / MUR ) ) ) ) ,RMSe ) ),Min( ( MUM - RRSe ) ,Max( MLU,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Const ) / ( ( Min( ( PN - Const ) ,CRS ) - ( Min( ( DDR / AMS ) ,( MDR - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) - FirstVNF_Mem ) )", "choosing": "Max( Max( ( ( RCSe + RMSe ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / MDR ) ) )", "choosing": "( Min( ( MUR - RMSe ) ,Max( DS,MUM ) ) - Min( ( CS / RCSe ) ,( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_Mem_Server ,( Const - ( ( Min( ( DDR / FirstVNF_Mem_Server ) ,BR ) + ( ARS + FirstVNF_RAM_Server ) ) - ( RRS + RRS ) ) ) )", "choosing": "( ( ( MUC / MUC ) * Max( MUC,RCSe ) ) - ( ( MUC * RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),Max( DDR,RRS ) ) )", "choosing": "( ( ( ( ( RMSe - MUM ) * ( MUR * RCSe ) ) / Min( Min( ( MLU / MUM ) ,Min( RCSe ,RMSe ) ) ,Max( MUR,MUC ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( FirstVNF_Mem_Server - ( Min( MDR ,DDR ) * ( FirstVNF_Mem_Server - ( FirstVNF_RAM - ( MDR + Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) ) )", "choosing": "( ( MUR * ( RCSe / Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( DS - RRSe ) ) ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * RRS ) - Max( ( Min( ( ( CRS + MRS ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) * ( ( ( FirstVNF_CPU_Server * ARS ) / ( FirstVNF_Mem + ARS ) ) / ( Max( FirstVNF_Mem_Server,Max( MRS,ACS ) ) * ( FirstVNF_RAM_Server * ARS ) ) ) ),RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + MLU ) - ( ( ( RMSe / MUM ) * Min( ( MLU * ( ( RRSe - ( RRSe + RRSe ) ) / MLU ) ) ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS - MDR ) / ( BR * FirstVNF_RAM_Server ) ) ,CRS ) * ( ACS - FirstVNF_CPU_Server ) )", "choosing": "( Max( MUR,MLU ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUC - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - BR ) + CRS ) - Max( Min( ( MDR * FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM_Server ) ),( ( ( MRS - MDR ) / ( Const * DDR ) ) - ( ARS + DDR ) ) ) )", "choosing": "( ( Min( ( DS * CS ) ,( MUC * MUM ) ) * ( Min( ( DS / RMSe ) ,( DS * MLU ) ) * Min( ( DS - MUC ) ,( MUR / RMSe ) ) ) ) / ( CS + ( ( RMSe + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ( DDR * FirstVNF_Mem ) ) ,Max( PN,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) )", "choosing": "Max( ( ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( Min( ( ( MUR + RCSe ) * ( CS - MUR ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) ) + MUC ) ) ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( RRS,FirstVNF_CPU_Server ) ) * Min( ( PN - Const ) ,CRS ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( MUM - RRSe ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ( ( ( RRS - BR ) + CRS ) * ( FirstVNF_Mem_Server - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( MRS ,Const ) ) * FirstVNF_RAM ) ) ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUC / DS ) - ( MUC / ( DS + MLU ) ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) * ( DS - MUC ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS + CRS ) + CRS ) - ( Max( ( ( DDR / DDR ) - MDR ),( ( Max( Const,CRS ) + FirstVNF_CPU ) - Max( ( BR / FirstVNF_RAM ),( PN * Max( MRS,( Const - ACS ) ) ) ) ) ) + RRS ) )", "choosing": "( ( MUC / MUC ) * ( MUC / ( ( MUR + Min( DS ,Min( RMSe ,MUR ) ) ) / ( MUM / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / FirstVNF_RAM ) - Max( ( ARS - FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( Min( Max( Min( RMSe ,CS ),Min( DS ,DS ) ) ,Min( Min( MLU ,CS ) ,( RCSe * MUC ) ) ) + Min( Max( RMSe,RRSe ) ,( Min( Max( ( Max( RCSe,MUC ) - MUM ),( DS - ( MUM * MUM ) ) ) ,( ( Max( RMSe,DS ) * ( DS / MUC ) ) * MLU ) ) + MLU ) ) ) - ( ( RMSe + MLU ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) - Min( AMS ,RRS ) )", "choosing": "Max( ( Min( MLU ,DS ) * Min( ( ( MUC * DS ) - ( MUC + RCSe ) ) ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU / MRS ) + ( AMS + MDR ) ) * ( Min( ( PN - Const ) ,CRS ) - ACS ) )", "choosing": "( ( Min( DS ,MUM ) * ( MUC + DS ) ) * ( ( RRSe / RRSe ) - ( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - PN ) - ( ( ( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - MUM ) * ( ( ( CS * MUM ) / MUM ) / ( RCSe * MUC ) ) ) ,( ( CS - RMSe ) / Min( MUC ,( ( ( RMSe + MLU ) + ( RMSe - RRSe ) ) * ( Min( MLU ,MLU ) * ( MLU * MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Const ) / ( ( Min( ( PN - Const ) ,CRS ) - ( PN - Const ) ) - FirstVNF_Mem ) )", "choosing": "Max( Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) ),( DS - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,MRS ) / ( ARS * Min( ( Max( RRS,Const ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) ) ) - ( ( FirstVNF_Mem / CRS ) / ( FirstVNF_Mem * ARS ) ) )", "choosing": "Min( ( Min( CS ,RMSe ) * Min( Max( MUM,MUM ) ,Max( RRSe,MLU ) ) ) ,( ( MUM + RMSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "Min( MLU ,( ( RMSe * MUC ) + ( MUC + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + CRS ) - ( RRS + ( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe * RCSe ) * ( ( MLU - RMSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / Min( Max( CS,CS ) ,( MUM - RMSe ) ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Max( ( FirstVNF_Mem / CRS ),DDR ) )", "choosing": "( ( ( CS * CS ) / ( MUC + RCSe ) ) / Min( MUC ,Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + ( ( RRS * MRS ) * ACS ) ) - ( BR + ( Const - FirstVNF_RAM_Server ) ) ) / ( ( MRS - Max( Const,FirstVNF_Mem_Server ) ) / ( Const * DDR ) ) )", "choosing": "( ( RCSe - MUM ) / ( MUR + ( ( CS * Max( Max( DS,MUM ),Max( Min( ( MLU - MUM ) ,MUR ),( MUM + CS ) ) ) ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( MRS + ( Const - FirstVNF_RAM_Server ) ) ) - ( ( ( MRS - PN ) - BR ) / ( ( FirstVNF_CPU_Server - AMS ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( MLU,CS ) + Max( RCSe,RMSe ) ) + Max( Min( RRSe ,( ( RRSe - ( ( DS - DS ) - DS ) ) * MUC ) ),( RRSe / MUM ) ) ) - ( Min( ( ( RCSe - MUM ) * RRSe ) ,( MUC * MUC ) ) / ( ( MLU - MUR ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,AMS ) * Min( ( PN - Const ) ,( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - DDR ) ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( MUM - ( CS - CS ) ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,AMS ) * Min( ( ( CRS / Max( Min( ARS ,FirstVNF_RAM ),RRS ) ) - Const ) ,CRS ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,MUM ) ) * Min( ( MLU / ( ( ( RRSe + MLU ) / RCSe ) - RRSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - FirstVNF_Mem ) - ( BR + ARS ) )", "choosing": "( ( RCSe + DS ) - ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,Const ) / ( ( Min( ( PN - Const ) ,CRS ) - ( ( BR / Min( FirstVNF_Mem_Server ,Const ) ) * FirstVNF_CPU ) ) - FirstVNF_Mem ) ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * RCSe ),( ( Max( ( RMSe - MUC ),MUC ) + ( Min( RMSe ,( DS * Min( MUR ,RRSe ) ) ) * RMSe ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * CRS ) * ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - ( ARS / MDR ) )", "choosing": "Max( ( ( RCSe * MUR ) / Min( MUC ,RMSe ) ),( MUR + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,CRS ) ,( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - MDR ),( FirstVNF_Mem + RRS ) ) ) ) - ( ( BR / DDR ) - Max( RRS,BR ) ) ) - FirstVNF_RAM )", "choosing": "Min( ( RRSe / MUR ) ,( ( CS - RMSe ) / Min( MUC ,( RCSe * Min( ( RCSe - Min( MUR ,MLU ) ) ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU ) - FirstVNF_RAM )", "choosing": "Min( ( ( RCSe - DS ) * ( MUR * DS ) ) ,( ( CS - RMSe ) / Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( RRSe / RRSe ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,( ( ( RMSe + MLU ) + ( RMSe - RRSe ) ) * ( Min( MLU ,MLU ) * ( MLU * MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Min( Min( Max( AMS,FirstVNF_CPU ) ,AMS ) ,FirstVNF_CPU_Server ) ) * Min( ( PN - Const ) ,CRS ) )", "choosing": "( Max( ( MUC - RCSe ),Max( RRSe,( ( CS - RMSe ) / Min( MUC ,CS ) ) ) ) * Min( ( MLU / ( MUM - RRSe ) ) ,( ( MUC / ( ( RMSe * MUM ) - MUC ) ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + ( BR * FirstVNF_RAM_Server ) ) - ( BR + ( Const - FirstVNF_RAM_Server ) ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( RCSe - MUM ) / Min( ( ( Max( MLU,CS ) + Max( RCSe,RMSe ) ) + Max( Min( RRSe ,MUR ),( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) / MUM ) ) ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_Mem_Server ,( Max( Const,( FirstVNF_RAM_Server * AMS ) ) + Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( ( MUC / MUC ) * DS ) - ( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( Max( MLU,( ( Min( DS ,RMSe ) + MUR ) + MUR ) ),( ( ( Max( RCSe,RMSe ) / RRSe ) * ( DS - MLU ) ) + ( MLU + ( MUC - ( RCSe + MUM ) ) ) ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,Max( ( FirstVNF_Mem / CRS ),( DDR / FirstVNF_Mem ) ) )", "choosing": "( MLU * ( ( Max( Max( CS,( MUC - MLU ) ),MUM ) - MUC ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / BR ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUC + Max( ( ( MUR * MLU ) + ( CS * DS ) ),MUM ) ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem - Const ) ,CRS ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( ( MUC - RCSe ),Min( ( MUM - ( Max( Min( DS ,RCSe ),RCSe ) * ( ( RRSe / RRSe ) - ( MUC + MLU ) ) ) ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}]}