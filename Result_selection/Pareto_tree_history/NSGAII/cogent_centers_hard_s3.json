{"1": [{"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( AMS ,BR ) ,( ACS - ( FirstVNF_Mem / DDR ) ) )", "choosing": "( Max( DS,MLU ) / ( ( CS * MLU ) / CS ) )", "obj1": 0.7076923076923077, "obj2": 0.2238973295395165}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) * ( PN * RRS ) )", "choosing": "( ( MLU / RMSe ) - ( RRSe * CS ) )", "obj1": 0.6519230769230769, "obj2": 0.26679137555663957}, {"determining": "( ( MRS - ARS ) / Max( ACS,MDR ) )", "choosing": "Min( ( MUM + MUC ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Const ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RMSe ,RCSe ) * Max( MUR,( Min( RMSe ,RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - Const ) ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( ( ( ( MLU + MLU ) / RMSe ) - RRSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ( AMS + ( AMS / ( FirstVNF_Mem_Server + BR ) ) ) ) / FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,Max( CRS,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + ( DS * MUM ) ) - ( CS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( RRS,Max( FirstVNF_RAM_Server,( FirstVNF_Mem_Server / Const ) ) ) ) - ( CRS * ( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( DS + DS ),( RRSe * MUC ) ) ,Max( ( RCSe / Min( ( RCSe - MLU ) ,( MUC + Max( RMSe,CS ) ) ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( CS * CS ) ) )", "obj1": 0.875, "obj2": 0.11717258014319257}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( MLU ,RRSe ) + RMSe ) )", "obj1": 0.6615384615384615, "obj2": 0.24839244092784135}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) / Max( Min( FirstVNF_RAM_Server ,DDR ),( AMS + MRS ) ) )", "choosing": "( ( ( CS / CS ) * Max( CS,MLU ) ) + ( Min( DS ,RCSe ) / ( MUC * RMSe ) ) )", "obj1": 0.6961538461538461, "obj2": 0.23740616219772284}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.08376486426709776}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MLU ),( ( CS / MUC ) + ( DS * RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0032084863114570225}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / ( ( AMS - AMS ) - Const ) ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( Max( RMSe,Max( ( MUM - ( CS - RRSe ) ),MLU ) ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( ( CS * RMSe ) + ( ( ( MUR / ( RMSe * DS ) ) * RRSe ) - MUM ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,( ACS / ( Min( BR ,BR ) / ( ( AMS - ( PN / FirstVNF_Mem ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,MUM ) * MUC ) + ( RRSe - Min( Max( DS,DS ) ,Min( Max( ( Min( Min( MUC ,RCSe ) ,CS ) - CS ),MUC ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - ( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + ( DS - CS ) ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( ( FirstVNF_CPU_Server + MDR ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - ( MUC - MUR ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( BR / FirstVNF_CPU_Server ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUR + Max( ( CS - DS ),RCSe ) ) / ( RRSe + ( MUM / MLU ) ) ) + Min( Max( RMSe,RMSe ) ,MUC ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( RRS / Max( MRS,FirstVNF_Mem_Server ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RCSe / ( Min( RCSe ,MLU ) - ( RCSe - ( DS * RRSe ) ) ) ),( ( MUR - CS ) + MLU ) ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 0.8442307692307692, "obj2": 0.14134867197756995}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( ( BR * ( ( ACS / AMS ) - MRS ) ) + DDR ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + ( RMSe * ( ( RMSe / RMSe ) * RRSe ) ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( FirstVNF_Mem * PN ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / Max( ( RMSe * ( MUC * ( RRSe + MUR ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24821906900660495}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( ( ACS + FirstVNF_Mem ) * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( Min( ( MUC / Max( ( MUR / RRSe ),CS ) ) ,RCSe ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS + CRS ) - FirstVNF_CPU ) + ACS ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + ACS ) / ( DDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,RMSe ),Min( CS ,RCSe ) ) + ( ( Max( Min( DS ,MLU ),RRSe ) / MUM ) + Min( MUM ,RMSe ) ) ) / ( ( ( MLU * DS ) / ( CS / DS ) ) + Max( ( MUM * MUM ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.8807692307692307, "obj2": 0.11255763336710746}, {"determining": "Min( ( ( ( PN / MDR ) * ( FirstVNF_CPU_Server - ARS ) ) + ( ( BR + PN ) / ( FirstVNF_Mem * AMS ) ) ) ,( ( ( FirstVNF_CPU * CRS ) - ( Const + PN ) ) + ( Min( ACS ,MDR ) - Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RCSe - ( ( MUC / RMSe ) - CS ) ),( ( RCSe * MUR ) + RRSe ) )", "obj1": 0.9423076923076923, "obj2": 0.06721323172501653}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( Max( MRS,ARS ) ,( Max( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( RRSe / DS ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RCSe - MUM ) / ( MUR - MUR ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + CRS ) - ( Max( MDR,( CRS / ACS ) ) - Max( PN,CRS ) ) )", "choosing": "( Max( ( Max( RCSe,RRSe ) - ( Max( MUC,Max( MUM,DS ) ) * DS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( RMSe * RMSe ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( AMS ,BR ) ,( ACS - ( FirstVNF_Mem / DDR ) ) )", "choosing": "( Max( DS,MLU ) / ( ( CS * MLU ) / CS ) )", "obj1": 0.7076923076923077, "obj2": 0.2238973295395165}, {"determining": "( ( MRS - ARS ) / Max( ACS,MDR ) )", "choosing": "Min( ( MUM + MUC ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Const ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RMSe ,RCSe ) * Max( MUR,( Min( RMSe ,RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - Const ) ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( ( ( ( MLU + MLU ) / RMSe ) - RRSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ( AMS + ( AMS / ( FirstVNF_Mem_Server + BR ) ) ) ) / FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,Max( CRS,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + ( DS * MUM ) ) - ( CS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( RRS,Max( FirstVNF_RAM_Server,( FirstVNF_Mem_Server / Const ) ) ) ) - ( CRS * ( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( DS + DS ),( RRSe * MUC ) ) ,Max( ( RCSe / Min( ( RCSe - MLU ) ,( MUC + Max( RMSe,CS ) ) ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( MLU ,RRSe ) + RMSe ) )", "obj1": 0.6615384615384615, "obj2": 0.24839244092784135}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.08376486426709776}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MLU ),( ( CS / MUC ) + ( DS * RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0032084863114570225}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / ( ( AMS - AMS ) - Const ) ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( Max( RMSe,Max( ( MUM - ( CS - RRSe ) ),MLU ) ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( ( CS * RMSe ) + ( ( ( MUR / ( RMSe * DS ) ) * RRSe ) - MUM ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,( ACS / ( Min( BR ,BR ) / ( ( AMS - ( PN / FirstVNF_Mem ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,MUM ) * MUC ) + ( RRSe - Min( Max( DS,DS ) ,Min( Max( ( Min( Min( MUC ,RCSe ) ,CS ) - CS ),MUC ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - ( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + ( DS - CS ) ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( ( FirstVNF_CPU_Server + MDR ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - ( MUC - MUR ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( BR / FirstVNF_CPU_Server ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUR + Max( ( CS - DS ),RCSe ) ) / ( RRSe + ( MUM / MLU ) ) ) + Min( Max( RMSe,RMSe ) ,MUC ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( RRS / Max( MRS,FirstVNF_Mem_Server ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RCSe / ( Min( RCSe ,MLU ) - ( RCSe - ( DS * RRSe ) ) ) ),( ( MUR - CS ) + MLU ) ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 0.8442307692307692, "obj2": 0.14134867197756995}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( ( BR * ( ( ACS / AMS ) - MRS ) ) + DDR ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + ( RMSe * ( ( RMSe / RMSe ) * RRSe ) ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( FirstVNF_Mem * PN ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / Max( ( RMSe * ( MUC * ( RRSe + MUR ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24821906900660495}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( ( ACS + FirstVNF_Mem ) * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( Min( ( MUC / Max( ( MUR / RRSe ),CS ) ) ,RCSe ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( Max( MRS,ARS ) ,( Max( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( RRSe / DS ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RCSe - MUM ) / ( MUR - MUR ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + CRS ) - ( Max( MDR,( CRS / ACS ) ) - Max( PN,CRS ) ) )", "choosing": "( Max( ( Max( RCSe,RRSe ) - ( Max( MUC,Max( MUM,DS ) ) * DS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( RMSe * RMSe ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * ( FirstVNF_CPU * ( ( ACS - ( FirstVNF_Mem_Server - ARS ) ) / DDR ) ) ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( CS * DS ) + DS ) * ( ( RCSe * ( CS - Min( RRSe ,MUM ) ) ) / MUR ) ),MUR ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / ( ( ( Max( ( RCSe / DS ),CS ) - ( RRSe - MUM ) ) * MUM ) - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( CS + RRSe ) * ( DS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS + DS ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + Max( PN,Const ) ) )", "choosing": "( ( MUC - RMSe ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,Const ) ,ARS ) - Max( AMS,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + PN ) / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) * ( RCSe + ( Max( RRSe,MUR ) + RMSe ) ) ) / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 0.8403846153846154, "obj2": 0.14179528566066038}, {"determining": "( ( MDR / RRS ) - Max( FirstVNF_CPU,( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( Max( Min( MUM ,RRSe ),( DS + DS ) ) * ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) - Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( CS + RRSe ) * ( DS - ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ) )", "obj1": 0.9788461538461538, "obj2": 0.0066984083348627325}, {"determining": "( Min( ( FirstVNF_Mem * CRS ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * ( CS / DS ) ) ) ,Max( ( RCSe / Min( CS ,MLU ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) + Min( ( Min( FirstVNF_RAM_Server ,MRS ) - ( ARS + ARS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( RMSe,MUR ) ,( MUC * RMSe ) ) + ( CS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - ( FirstVNF_RAM_Server + Max( Const,( CRS / ( ( ( FirstVNF_RAM * CRS ) * FirstVNF_CPU ) + Max( AMS,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUR ) * MUR ) - Min( CS ,MLU ) ) - ( ( DS / ( ( RRSe * RMSe ) / ( MUR / Max( ( MLU - RCSe ),MUR ) ) ) ) * ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + AMS ) * AMS ) + ( CRS + AMS ) )", "choosing": "( ( MUR / DS ) * Min( RRSe ,( ( RRSe / RCSe ) + ( MUR - ( ( ( ( MUC / MLU ) * MUM ) - ( ( RCSe * RRSe ) / DS ) ) * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( Const - ( RRS / MDR ) ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * ( Min( RRSe ,DS ) - ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server - ACS ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) ) ,Max( DDR,( FirstVNF_RAM - CRS ) ) )", "choosing": "( Max( CS,RMSe ) + ( Max( MUC,CS ) * MLU ) )", "obj1": 0.925, "obj2": 0.0639943081024346}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( AMS + FirstVNF_CPU ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,( ( ( MUC / ( MLU / MLU ) ) / ( MUR / Min( ( CS / ( DS + MUM ) ) ,( MUR - ( CS + MLU ) ) ) ) ) + Min( RMSe ,RMSe ) ) ) ,( ( ( Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) - MUM ) / ( CS + DS ) ) * Max( ( Min( ( MLU + MLU ) ,RRSe ) * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * Max( PN,Const ) )", "choosing": "( ( Min( Min( ( ( ( RRSe - ( MUR * MLU ) ) + CS ) - Min( RRSe ,( MUC - Min( RRSe ,RRSe ) ) ) ) ,MUR ) ,Max( RMSe,( MUC + ( RMSe / ( ( DS * DS ) - ( MUC - CS ) ) ) ) ) ) + ( MUC * MLU ) ) + ( MUM - ( DS - Min( ( MLU - RMSe ) ,( Min( Min( MUR ,( MUC / RRSe ) ) ,MUM ) + ( DS + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS - ( DDR + FirstVNF_CPU ) ) / RRS ) ,BR ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( Max( DS,RRSe ) * ( ( RMSe - CS ) - ( DS / ( ( ( DS - CS ) - CS ) - RRSe ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( ( CRS * MRS ),ACS ) / ARS ) / DDR ) / ( PN / DDR ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( MLU + DS ),( Max( ( DS - RRSe ),CS ) + CS ) )", "obj1": 0.8711538461538462, "obj2": 0.11023811562171978}, {"determining": "( ( DDR - DDR ) - MDR )", "choosing": "( ( RMSe + DS ) - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,DDR ) - ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) ) ) ,( Max( ACS,RRS ) + ( ( Const - RRS ) * MDR ) ) )", "choosing": "( Min( Min( MUC ,RCSe ) ,( Max( DS,CS ) * CS ) ) / Max( ( CS - MUM ),( ( CS / CS ) * Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( FirstVNF_CPU + RRS ) ) / ( MDR + RRS ) ),Max( ( CRS / FirstVNF_RAM ),( MDR * FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - ( Max( MUM,( ( Max( MLU,MUR ) + MUM ) / MLU ) ) + ( Min( ( DS * ( RCSe * MUC ) ) ,CS ) - RRSe ) ) ) / ( RRSe / MUC ) ) / ( ( RCSe * RCSe ) / ( MUR / MUM ) ) )", "obj1": 0.6442307692307693, "obj2": 0.2586920718206277}, {"determining": "( ( PN - ACS ) - Min( Min( FirstVNF_RAM_Server ,Const ) ,Const ) )", "choosing": "( Min( ( MUM - MUC ) ,RCSe ) * ( Min( MLU ,RRSe ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( ( ( PN - ACS ) - Min( Const ,Max( AMS,MRS ) ) ) / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( Min( RMSe ,( RRSe + MUR ) ) * ( RCSe - RRSe ) ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( ( RRSe * MLU ) + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),RRS ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - MUM ) / ( ( MUC / RMSe ) + ( ( ( DS / ( MLU + MLU ) ) * RMSe ) / Max( MUM,MUM ) ) ) ) / ( ( MUR - MUR ) - ( ( ( ( ( MUR * MLU ) * RRSe ) - MUC ) * RMSe ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - Const ) ) - ( ( ( FirstVNF_Mem * ( ( RRS / CRS ) * FirstVNF_Mem ) ) / AMS ) / Max( Const,FirstVNF_Mem ) ) )", "choosing": "Min( Max( MUC,( RRSe * MUC ) ) ,Max( ( MUC - RMSe ),Min( RCSe ,( ( CS - MUC ) - ( RMSe - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / ( ( ( AMS - ACS ) / BR ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ) - ( FirstVNF_RAM_Server + Min( Const ,Max( RRS,RRS ) ) ) ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUR * ( ( ( RCSe + RMSe ) + MUC ) - RMSe ) ) * MLU ),( ( CS / MUC ) + Min( Max( Min( MLU ,RMSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( Min( CRS ,AMS ) - Const ) ) ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( DS + ( RMSe / ( MUM - ( RRSe - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Max( ACS,Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( RMSe - RRSe ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( MUM ,( Min( MUC ,RMSe ) - ( CS / Max( DS,( RMSe - MUC ) ) ) ) ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),( Min( Max( Const,( PN - MRS ) ) ,RRS ) / PN ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( Min( Min( MUC ,DS ) ,Max( RRSe,MUC ) ) * ( ( RCSe * RCSe ) * MUC ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( Max( Min( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) ,FirstVNF_Mem ),( ACS / AMS ) ) - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( RMSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - ( ACS * Const ) ),( DDR - AMS ) ) - Max( Min( ( FirstVNF_RAM / BR ) ,Const ),FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUC * MLU ),( ( CS / MUC ) + ( DS * Min( CS ,( ( MLU * MUC ) * ( RCSe + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / Max( MRS,( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * ARS ) - Max( MRS,MDR ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),DS )", "obj1": 0.7461538461538462, "obj2": 0.20017196636855314}, {"determining": "Min( ( ( MDR - ( ( FirstVNF_RAM_Server - Min( FirstVNF_RAM_Server ,DDR ) ) + FirstVNF_RAM ) ) + BR ) ,( FirstVNF_RAM_Server - AMS ) )", "choosing": "( ( ( ( RCSe / DS ) * Max( ( MUM * MUM ),Min( RCSe ,RRSe ) ) ) - ( ( ( RMSe + ( Min( MLU ,RRSe ) - MUR ) ) * CS ) / ( MUC - RRSe ) ) ) / Max( ( ( MUR * MUC ) / ( MUC - CS ) ),Min( ( MUR - MUM ) ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8057692307692308, "obj2": 0.1667009883525163}, {"determining": "( ( FirstVNF_Mem / ( ( Max( ( FirstVNF_RAM_Server * FirstVNF_CPU ),( BR * FirstVNF_CPU ) ) + Min( BR ,ACS ) ) * Min( Const ,FirstVNF_Mem ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RMSe / MUR ) + ( Min( MUC ,Max( RCSe,Max( MUR,DS ) ) ) + CS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - Min( MDR ,FirstVNF_CPU ) ) / ( ( PN + FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - Max( RMSe,( MUR * ( MUM * ( MUR * ( MLU - RMSe ) ) ) ) ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - CRS ),FirstVNF_Mem_Server ) / ( RRS - ( FirstVNF_Mem * CRS ) ) )", "choosing": "( Max( MLU,MUC ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( BR * MDR ),( ACS + FirstVNF_Mem ) ) * ( Max( ( CRS - BR ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) ) )", "choosing": "Max( Max( ( MUC * MLU ),( ( CS / MUC ) + ( DS * RMSe ) ) ),( MUR / CS ) )", "obj1": 0.9961538461538462, "obj2": 0.005100440132907494}, {"determining": "( Max( Min( MRS ,( FirstVNF_CPU * ( MRS * FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( Max( Max( RCSe,( MUR * ( ( MLU / RCSe ) - Max( ( Max( MLU,MUC ) - MLU ),( DS / RCSe ) ) ) ) ),( MLU - MLU ) ),( ( RCSe - RMSe ) / RCSe ) )", "obj1": 0.7230769230769231, "obj2": 0.21902312917774647}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) )", "choosing": "( ( RCSe + RMSe ) + ( ( DS - ( ( RRSe / MUC ) * Min( Min( MUC ,Min( ( DS * MLU ) ,MUC ) ) ,RMSe ) ) ) + Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * FirstVNF_Mem_Server ) ,Min( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,RCSe ),Max( ( ( MUR + RRSe ) + ( MUR + CS ) ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS - ( ( ACS / ( ( FirstVNF_CPU * ( MDR + FirstVNF_CPU ) ) + ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * Max( MDR,RRS ) ) * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) + ( FirstVNF_RAM_Server / Min( ( ( BR / ( FirstVNF_RAM_Server / AMS ) ) / FirstVNF_CPU ) ,PN ) ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( MUM / ( RCSe - DS ) ) ,Min( ( MLU + Min( Min( ( MUR * ( CS - MUC ) ) ,( DS / MUM ) ) ,( ( MLU * MLU ) + RMSe ) ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( CS * CS ) ) )", "obj1": 0.8480769230769231, "obj2": 0.1296307927698229}, {"determining": "( ( Min( BR ,Const ) + ( DDR - Const ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + Min( ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) ,Min( ( ( CS / DS ) * ( RRSe / RRSe ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( ( DDR - PN ) - ( ( ( ARS * Const ) * CRS ) + PN ) ) / ( ( Const - ACS ) * ( CRS / ACS ) ) ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,( CS * Min( Min( ( ( RCSe + RCSe ) * MUC ) ,MUM ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_RAM - PN ),Min( FirstVNF_CPU ,CRS ) ),CRS )", "choosing": "Min( ( ( RCSe * DS ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.675, "obj2": 0.23442313667044026}, {"determining": "( ( ( ( ( ( Const + FirstVNF_CPU_Server ) + ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / ( FirstVNF_CPU - Const ) ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( ( CS * RMSe ) + ( ( ( MUR / ( MUC * CS ) ) * RRSe ) - MUM ) ) / DS ) ) )", "obj1": 0.9403846153846154, "obj2": 0.05206962744377323}, {"determining": "( FirstVNF_CPU - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( Min( ( ( CS / MUR ) / ( MUM - RCSe ) ) ,Max( ( RCSe - DS ),( CS + MLU ) ) ) + Max( ( CS * RMSe ),( ( MUM + MLU ) * ( MUC * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( ( CRS - DDR ) + ( ( FirstVNF_RAM_Server + ( BR * ARS ) ) * DDR ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( Min( CS ,RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server - Max( ( FirstVNF_CPU / PN ),MDR ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),( MUM * MUM ) )", "obj1": 0.7557692307692307, "obj2": 0.17001852208561347}], "3": [{"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( DS ,RRSe ) + RMSe ) )", "obj1": 0.6326923076923077, "obj2": 0.2792038003788276}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) ) )", "obj1": 0.8903846153846153, "obj2": 0.0494266847231669}, {"determining": "( ( ( ACS / ( FirstVNF_CPU - Const ) ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( ( CS * RMSe ) + ( ( ( Min( MLU ,RRSe ) + RMSe ) * RRSe ) - MUM ) ) / DS ) ) )", "obj1": 0.8865384615384615, "obj2": 0.10351469276902989}, {"determining": "( ( Max( Min( Const ,( BR / FirstVNF_RAM_Server ) ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),AMS ) ) - Max( ARS,Const ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Min( RCSe ,( Max( ( Min( MUC ,( RMSe - MLU ) ) * Max( CS,MLU ) ),MUR ) - DS ) ) ) ,( ( MUM / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 0.9461538461538461, "obj2": 0.04083380125888324}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( MUM * CS ) ) )", "obj1": 0.9711538461538461, "obj2": 0.026625948570103076}, {"determining": "( FirstVNF_RAM_Server - Max( ( ( Max( ACS,DDR ) / FirstVNF_CPU_Server ) * DDR ),MDR ) )", "choosing": "Max( ( DS * RCSe ),( Min( RMSe ,RCSe ) * ( RCSe - RRSe ) ) )", "obj1": 0.7384615384615385, "obj2": 0.19534755480674398}, {"determining": "Min( Min( AMS ,BR ) ,( ACS - ( FirstVNF_Mem / DDR ) ) )", "choosing": "( Max( DS,MLU ) / ( ( CS * MLU ) / CS ) )", "obj1": 0.7076923076923077, "obj2": 0.2238973295395165}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( ACS - MDR ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),( ( RCSe / MUM ) * CS ) ) )", "obj1": 0.9076923076923077, "obj2": 0.04215878983445066}, {"determining": "Max( Max( ( FirstVNF_RAM - PN ),Min( FirstVNF_CPU ,CRS ) ),CRS )", "choosing": "Min( ( ( RCSe * DS ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.675, "obj2": 0.23442313667044026}, {"determining": "( FirstVNF_RAM_Server - Max( ( FirstVNF_CPU / PN ),MDR ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),( MUM * MUM ) )", "obj1": 0.7557692307692307, "obj2": 0.17001852208561347}, {"determining": "Min( ( ( MDR - ( ( FirstVNF_RAM_Server - Min( FirstVNF_RAM_Server ,DDR ) ) + FirstVNF_RAM ) ) + BR ) ,( FirstVNF_RAM_Server - AMS ) )", "choosing": "( ( ( ( RCSe / DS ) * Max( ( MUM * MUM ),Min( RCSe ,RRSe ) ) ) - ( ( ( RMSe + ( Min( MLU ,RRSe ) - MUR ) ) * CS ) / ( MUC - RRSe ) ) ) / Max( ( ( MUR * MUC ) / ( MUC - CS ) ),Min( ( MUR - MUM ) ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8057692307692308, "obj2": 0.1667009883525163}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) - Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( CS + RRSe ) * ( DS - ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ) )", "obj1": 0.9788461538461538, "obj2": 0.0066984083348627325}, {"determining": "Max( ( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( FirstVNF_CPU + RRS ) ) / ( MDR + RRS ) ),Max( ( CRS / FirstVNF_RAM ),( MDR * FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - ( Max( MUM,( ( Max( MLU,MUR ) + MUM ) / MLU ) ) + ( Min( ( DS * ( RCSe * MUC ) ) ,CS ) - RRSe ) ) ) / ( RRSe / MUC ) ) / ( ( RCSe * RCSe ) / ( MUR / MUM ) ) )", "obj1": 0.6442307692307693, "obj2": 0.2586920718206277}, {"determining": "Max( ( ( ( ( ACS / ( FirstVNF_CPU - Const ) ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * DS ) / ( Min( MLU ,RRSe ) + RMSe ) )", "obj1": 0.7211538461538461, "obj2": 0.21570433121532817}, {"determining": "( Max( Min( MRS ,( FirstVNF_CPU * ( MRS * FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( Max( Max( RCSe,( MUR * ( ( MLU / RCSe ) - Max( ( Max( MLU,MUC ) - MLU ),( DS / RCSe ) ) ) ) ),( MLU - MLU ) ),( ( RCSe - RMSe ) / RCSe ) )", "obj1": 0.7365384615384616, "obj2": 0.21168012220673968}, {"determining": "( ( Min( Max( PN,Const ) ,ARS ) - Const ) * ( ( FirstVNF_RAM_Server / Const ) / Min( RRS ,MRS ) ) )", "choosing": "( Max( ( CS / Max( RCSe,( ( MLU / RRSe ) * MUR ) ) ),Max( CS,RCSe ) ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 0.8653846153846154, "obj2": 0.11981628456503128}, {"determining": "( ( Min( Max( PN,Const ) ,ARS ) - Const ) * ( AMS + BR ) )", "choosing": "( MLU - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 0.8134615384615385, "obj2": 0.16284833006979857}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Max( MRS,Max( Min( BR ,RRS ),( FirstVNF_Mem_Server - DDR ) ) ) )", "choosing": "( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - Min( ( RRSe * Min( ( ( ( MUM * CS ) * ( MUC / MUC ) ) - Min( MUM ,RRSe ) ) ,CS ) ) ,Min( MLU ,( RMSe + Min( ( MUR * Min( RCSe ,MUM ) ) ,RCSe ) ) ) ) ) )", "obj1": 0.8365384615384616, "obj2": 0.1470194317836781}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) * ( PN * ACS ) )", "choosing": "( ( MLU / ( Max( Min( DS ,MLU ),RRSe ) / MUM ) ) - ( RRSe * CS ) )", "obj1": 0.6480769230769231, "obj2": 0.25303491067700234}, {"determining": "( ( Min( Max( ( FirstVNF_RAM / ( BR / Max( ( Const / DDR ),CRS ) ) ),Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,MRS ) ) )", "choosing": "( Max( ( CS / CS ),RRSe ) - Max( Max( RCSe,Min( ( ( RRSe / MUC ) + RMSe ) ,( ( RMSe / MLU ) + ( RRSe / DS ) ) ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 0.8288461538461539, "obj2": 0.15831330760585247}, {"determining": "( FirstVNF_CPU_Server - Min( FirstVNF_Mem ,Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) ) )", "choosing": "Max( ( Max( ( RCSe * RMSe ),RCSe ) + DS ),( RMSe + CS ) )", "obj1": 0.8596153846153847, "obj2": 0.12852316869146466}, {"determining": "Max( ( ( DDR * ( FirstVNF_CPU / RRS ) ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( MLU ,RRSe ) + Max( Max( MUM,RCSe ),RCSe ) ) )", "obj1": 0.6692307692307692, "obj2": 0.24483473279785706}, {"determining": "( ( ( ( Max( ( CRS * MRS ),ACS ) / ARS ) / DDR ) / ( PN / DDR ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( MLU + DS ),( Max( ( DS - RRSe ),CS ) + CS ) )", "obj1": 0.8711538461538462, "obj2": 0.11023811562171978}, {"determining": "( ( Min( Max( PN,Const ) ,ARS ) - Max( AMS,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + PN ) / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) * ( RCSe + ( Max( RRSe,MUR ) + RMSe ) ) ) / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 0.8403846153846154, "obj2": 0.14179528566066038}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server - ACS ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) ) ,Max( DDR,( ( ( DDR - FirstVNF_RAM ) / ( AMS + BR ) ) - CRS ) ) )", "choosing": "( Max( CS,RMSe ) + ( Max( MUC,CS ) * ( MUC / RCSe ) ) )", "obj1": 0.8769230769230769, "obj2": 0.10784647340878925}, {"determining": "( Max( ( BR * MDR ),( ACS + FirstVNF_Mem ) ) * ( Max( ( CRS - BR ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) ) )", "choosing": "Max( Max( ( MUC * MLU ),( ( CS / MUC ) + ( DS * RMSe ) ) ),( MUR / CS ) )", "obj1": 0.9961538461538462, "obj2": 0.005100440132907494}, {"determining": "( ( ARS - ( PN - FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Max( MRS,Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,ACS ) ) ) * ARS ) )", "choosing": "Min( ( DS + RMSe ) ,Min( Min( ( RRSe / MUR ) ,( CS / Min( ( MLU * Max( CS,( DS / RCSe ) ) ) ,( MUM * DS ) ) ) ) ,( CS * CS ) ) )", "obj1": 0.8423076923076923, "obj2": 0.13151719134645784}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( MLU ,RRSe ) + RMSe ) )", "obj1": 0.6615384615384615, "obj2": 0.24839244092784135}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( CS * CS ) ) )", "obj1": 0.8480769230769231, "obj2": 0.1296307927698229}, {"determining": "( ( Min( Max( ( FirstVNF_RAM / ( BR / Max( ( Const / DDR ),CRS ) ) ),Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,MRS ) ) )", "choosing": "( Max( ( CS / CS ),RRSe ) - Max( Max( RCSe,Min( ( ( RRSe / MUC ) + RMSe ) ,( ( RMSe / MLU ) + ( RRSe / DS ) ) ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 0.8288461538461539, "obj2": 0.15831330760585247}, {"determining": "( Max( ( CRS - BR ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MLU ),( ( CS / MUC ) + ( DS * RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0032084863114570225}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24821906900660495}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + ( FirstVNF_RAM_Server + ( BR * ARS ) ) ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),RCSe ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24821906900660495}, {"determining": "( ( MRS - ARS ) / Max( ACS,MDR ) )", "choosing": "Min( ( MUM + MUC ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Const ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RMSe ,RCSe ) * Max( MUR,( Min( RMSe ,RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - Const ) ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( ( ( ( MLU + MLU ) / RMSe ) - RRSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ( AMS + ( AMS / ( FirstVNF_Mem_Server + BR ) ) ) ) / FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,Max( CRS,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + ( DS * MUM ) ) - ( CS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( RRS,Max( FirstVNF_RAM_Server,( FirstVNF_Mem_Server / Const ) ) ) ) - ( CRS * ( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( DS + DS ),( RRSe * MUC ) ) ,Max( ( RCSe / Min( ( RCSe - MLU ) ,( MUC + Max( RMSe,CS ) ) ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / ( ( AMS - AMS ) - Const ) ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( Max( RMSe,Max( ( MUM - ( CS - RRSe ) ),MLU ) ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( ( CS * RMSe ) + ( ( ( MUR / ( RMSe * DS ) ) * RRSe ) - MUM ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,( ACS / ( Min( BR ,BR ) / ( ( AMS - ( PN / FirstVNF_Mem ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,MUM ) * MUC ) + ( RRSe - Min( Max( DS,DS ) ,Min( Max( ( Min( Min( MUC ,RCSe ) ,CS ) - CS ),MUC ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - ( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + ( DS - CS ) ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( ( FirstVNF_CPU_Server + MDR ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - ( MUC - MUR ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( BR / FirstVNF_CPU_Server ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUR + Max( ( CS - DS ),RCSe ) ) / ( RRSe + ( MUM / MLU ) ) ) + Min( Max( RMSe,RMSe ) ,MUC ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( RRS / Max( MRS,FirstVNF_Mem_Server ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RCSe / ( Min( RCSe ,MLU ) - ( RCSe - ( DS * RRSe ) ) ) ),( ( MUR - CS ) + MLU ) ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( ( BR * ( ( ACS / AMS ) - MRS ) ) + DDR ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + ( RMSe * ( ( RMSe / RMSe ) * RRSe ) ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( FirstVNF_Mem * PN ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / Max( ( RMSe * ( MUC * ( RRSe + MUR ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( ( ACS + FirstVNF_Mem ) * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( Min( ( MUC / Max( ( MUR / RRSe ),CS ) ) ,RCSe ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( Max( MRS,ARS ) ,( Max( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( RRSe / DS ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RCSe - MUM ) / ( MUR - MUR ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + CRS ) - ( Max( MDR,( CRS / ACS ) ) - Max( PN,CRS ) ) )", "choosing": "( Max( ( Max( RCSe,RRSe ) - ( Max( MUC,Max( MUM,DS ) ) * DS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( RMSe * RMSe ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * ( FirstVNF_CPU * ( ( ACS - ( FirstVNF_Mem_Server - ARS ) ) / DDR ) ) ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( CS * DS ) + DS ) * ( ( RCSe * ( CS - Min( RRSe ,MUM ) ) ) / MUR ) ),MUR ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / ( ( ( Max( ( RCSe / DS ),CS ) - ( RRSe - MUM ) ) * MUM ) - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( CS + RRSe ) * ( DS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS + DS ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + Max( PN,Const ) ) )", "choosing": "( ( MUC - RMSe ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / RRS ) - Max( FirstVNF_CPU,( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( Max( Min( MUM ,RRSe ),( DS + DS ) ) * ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem * CRS ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * ( CS / DS ) ) ) ,Max( ( RCSe / Min( CS ,MLU ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) + Min( ( Min( FirstVNF_RAM_Server ,MRS ) - ( ARS + ARS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( RMSe,MUR ) ,( MUC * RMSe ) ) + ( CS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - ( FirstVNF_RAM_Server + Max( Const,( CRS / ( ( ( FirstVNF_RAM * CRS ) * FirstVNF_CPU ) + Max( AMS,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUR ) * MUR ) - Min( CS ,MLU ) ) - ( ( DS / ( ( RRSe * RMSe ) / ( MUR / Max( ( MLU - RCSe ),MUR ) ) ) ) * ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + AMS ) * AMS ) + ( CRS + AMS ) )", "choosing": "( ( MUR / DS ) * Min( RRSe ,( ( RRSe / RCSe ) + ( MUR - ( ( ( ( MUC / MLU ) * MUM ) - ( ( RCSe * RRSe ) / DS ) ) * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( Const - ( RRS / MDR ) ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * ( Min( RRSe ,DS ) - ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( AMS + FirstVNF_CPU ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,( ( ( MUC / ( MLU / MLU ) ) / ( MUR / Min( ( CS / ( DS + MUM ) ) ,( MUR - ( CS + MLU ) ) ) ) ) + Min( RMSe ,RMSe ) ) ) ,( ( ( Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) - MUM ) / ( CS + DS ) ) * Max( ( Min( ( MLU + MLU ) ,RRSe ) * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * Max( PN,Const ) )", "choosing": "( ( Min( Min( ( ( ( RRSe - ( MUR * MLU ) ) + CS ) - Min( RRSe ,( MUC - Min( RRSe ,RRSe ) ) ) ) ,MUR ) ,Max( RMSe,( MUC + ( RMSe / ( ( DS * DS ) - ( MUC - CS ) ) ) ) ) ) + ( MUC * MLU ) ) + ( MUM - ( DS - Min( ( MLU - RMSe ) ,( Min( Min( MUR ,( MUC / RRSe ) ) ,MUM ) + ( DS + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS - ( DDR + FirstVNF_CPU ) ) / RRS ) ,BR ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( Max( DS,RRSe ) * ( ( RMSe - CS ) - ( DS / ( ( ( DS - CS ) - CS ) - RRSe ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - MDR )", "choosing": "( ( RMSe + DS ) - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,DDR ) - ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) ) ) ,( Max( ACS,RRS ) + ( ( Const - RRS ) * MDR ) ) )", "choosing": "( Min( Min( MUC ,RCSe ) ,( Max( DS,CS ) * CS ) ) / Max( ( CS - MUM ),( ( CS / CS ) * Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Min( FirstVNF_RAM_Server ,Const ) ,Const ) )", "choosing": "( Min( ( MUM - MUC ) ,RCSe ) * ( Min( MLU ,RRSe ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( ( ( PN - ACS ) - Min( Const ,Max( AMS,MRS ) ) ) / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( Min( RMSe ,( RRSe + MUR ) ) * ( RCSe - RRSe ) ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( ( RRSe * MLU ) + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),RRS ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - MUM ) / ( ( MUC / RMSe ) + ( ( ( DS / ( MLU + MLU ) ) * RMSe ) / Max( MUM,MUM ) ) ) ) / ( ( MUR - MUR ) - ( ( ( ( ( MUR * MLU ) * RRSe ) - MUC ) * RMSe ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - Const ) ) - ( ( ( FirstVNF_Mem * ( ( RRS / CRS ) * FirstVNF_Mem ) ) / AMS ) / Max( Const,FirstVNF_Mem ) ) )", "choosing": "Min( Max( MUC,( RRSe * MUC ) ) ,Max( ( MUC - RMSe ),Min( RCSe ,( ( CS - MUC ) - ( RMSe - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / ( ( ( AMS - ACS ) / BR ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ) - ( FirstVNF_RAM_Server + Min( Const ,Max( RRS,RRS ) ) ) ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUR * ( ( ( RCSe + RMSe ) + MUC ) - RMSe ) ) * MLU ),( ( CS / MUC ) + Min( Max( Min( MLU ,RMSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( Min( CRS ,AMS ) - Const ) ) ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( DS + ( RMSe / ( MUM - ( RRSe - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Max( ACS,Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( RMSe - RRSe ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( MUM ,( Min( MUC ,RMSe ) - ( CS / Max( DS,( RMSe - MUC ) ) ) ) ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),( Min( Max( Const,( PN - MRS ) ) ,RRS ) / PN ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( Min( Min( MUC ,DS ) ,Max( RRSe,MUC ) ) * ( ( RCSe * RCSe ) * MUC ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( Max( Min( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) ,FirstVNF_Mem ),( ACS / AMS ) ) - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( RMSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - ( ACS * Const ) ),( DDR - AMS ) ) - Max( Min( ( FirstVNF_RAM / BR ) ,Const ),FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUC * MLU ),( ( CS / MUC ) + ( DS * Min( CS ,( ( MLU * MUC ) * ( RCSe + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( ( Max( ( FirstVNF_RAM_Server * FirstVNF_CPU ),( BR * FirstVNF_CPU ) ) + Min( BR ,ACS ) ) * Min( Const ,FirstVNF_Mem ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RMSe / MUR ) + ( Min( MUC ,Max( RCSe,Max( MUR,DS ) ) ) + CS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - Min( MDR ,FirstVNF_CPU ) ) / ( ( PN + FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - Max( RMSe,( MUR * ( MUM * ( MUR * ( MLU - RMSe ) ) ) ) ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - CRS ),FirstVNF_Mem_Server ) / ( RRS - ( FirstVNF_Mem * CRS ) ) )", "choosing": "( Max( MLU,MUC ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) )", "choosing": "( ( RCSe + RMSe ) + ( ( DS - ( ( RRSe / MUC ) * Min( Min( MUC ,Min( ( DS * MLU ) ,MUC ) ) ,RMSe ) ) ) + Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * FirstVNF_Mem_Server ) ,Min( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,RCSe ),Max( ( ( MUR + RRSe ) + ( MUR + CS ) ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS - ( ( ACS / ( ( FirstVNF_CPU * ( MDR + FirstVNF_CPU ) ) + ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * Max( MDR,RRS ) ) * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) + ( FirstVNF_RAM_Server / Min( ( ( BR / ( FirstVNF_RAM_Server / AMS ) ) / FirstVNF_CPU ) ,PN ) ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( MUM / ( RCSe - DS ) ) ,Min( ( MLU + Min( Min( ( MUR * ( CS - MUC ) ) ,( DS / MUM ) ) ,( ( MLU * MLU ) + RMSe ) ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,Const ) + ( DDR - Const ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + Min( ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) ,Min( ( ( CS / DS ) * ( RRSe / RRSe ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( ( DDR - PN ) - ( ( ( ARS * Const ) * CRS ) + PN ) ) / ( ( Const - ACS ) * ( CRS / ACS ) ) ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,( CS * Min( Min( ( ( RCSe + RCSe ) * MUC ) ,MUM ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( Min( ( ( CS / MUR ) / ( MUM - RCSe ) ) ,Max( ( RCSe - DS ),( CS + MLU ) ) ) + Max( ( CS * RMSe ),( ( MUM + MLU ) * ( MUC * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( ( CRS - DDR ) + ( ( FirstVNF_RAM_Server + ( BR * ARS ) ) * DDR ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( Min( CS ,RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server * ( CRS - CRS ) ) - DDR ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,MRS ) ) )", "choosing": "( Max( ( CS / CS ),RRSe ) - Max( Min( DS ,MLU ),( ( RCSe / MUM ) * ( RRSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,DDR ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Max( CS,( Min( Min( Min( CS ,RRSe ) ,MUC ) ,Min( CS ,Min( ( MUM * RRSe ) ,RRSe ) ) ) / ( RRSe / ( Min( MUC ,Min( DS ,RCSe ) ) / RMSe ) ) ) ) - ( MLU + MUC ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + ( Max( DDR,RRS ) * ( FirstVNF_Mem / AMS ) ) ) )", "choosing": "Min( ( ( ( MUR / ( ( Max( MUR,( CS - CS ) ) / MLU ) / MUR ) ) + ( ( CS - MUC ) + RRSe ) ) + MUR ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( AMS ,FirstVNF_RAM ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( MUR - ( MLU + MUC ) ) - Max( MLU,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,MRS ) ) )", "choosing": "( Max( ( ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) / CS ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( Min( RMSe ,RMSe ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),Max( ( RRSe / RRSe ),( MUC - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( DS ,RRSe ) + RMSe ) )", "obj1": 0.6326923076923077, "obj2": 0.2792038003788276}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( Min( CRS ,AMS ) - Const ) ) ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( DS + ( RMSe / ( MUM - ( RRSe - MUC ) ) ) ) )", "obj1": 0.7788461538461539, "obj2": 0.13310066422311256}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) ) )", "obj1": 0.8903846153846153, "obj2": 0.0494266847231669}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Max( ( Min( ( Max( AMS,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) * ARS ) )", "choosing": "Min( ( MLU + ( RCSe - ( RMSe - Max( MLU,Max( MUM,( Min( RMSe ,MUC ) / RRSe ) ) ) ) ) ) ,Min( Min( ( RRSe / MUR ) ,( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ,( CS * CS ) ) )", "obj1": 0.8788461538461538, "obj2": 0.10012705748876254}, {"determining": "( FirstVNF_RAM_Server - Max( ( ( Max( ACS,DDR ) / FirstVNF_CPU_Server ) * DDR ),MDR ) )", "choosing": "Max( ( DS * RCSe ),( Min( RMSe ,RCSe ) * ( RCSe - RRSe ) ) )", "obj1": 0.7384615384615385, "obj2": 0.19534755480674398}, {"determining": "( ( ARS - ( PN - FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Max( MRS,Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,ACS ) ) ) * ARS ) )", "choosing": "Min( ( DS + RMSe ) ,Min( Min( ( RRSe / MUR ) ,( CS / Min( ( MLU * Max( CS,( DS / RCSe ) ) ) ,( MUM * DS ) ) ) ) ,( CS * CS ) ) )", "obj1": 0.8423076923076923, "obj2": 0.13151719134645784}, {"determining": "( FirstVNF_RAM_Server - Max( ( ( CRS - Min( ( BR * FirstVNF_CPU_Server ) ,CRS ) ) + ( ( DDR - DDR ) - Max( FirstVNF_CPU_Server,AMS ) ) ),MDR ) )", "choosing": "Max( ( ( ( ( CS + RRSe ) + Min( Max( ( ( MUC - MUC ) / Max( MUC,DS ) ),CS ) ,RCSe ) ) / MUM ) * RRSe ),( ( RCSe / MUC ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.15871207424788214}, {"determining": "( Max( Min( MRS ,( FirstVNF_CPU * ( MRS * FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( Max( Max( RCSe,( MUR * ( ( MLU / RCSe ) - Max( ( Max( MLU,MUC ) - MLU ),( DS / RCSe ) ) ) ) ),( MLU - MLU ) ),( ( RCSe - RMSe ) / RCSe ) )", "obj1": 0.7365384615384616, "obj2": 0.21168012220673968}, {"determining": "( ( Max( Min( Const ,( BR / FirstVNF_RAM_Server ) ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),AMS ) ) - Max( ARS,Const ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Min( RCSe ,( Max( ( Min( MUC ,( RMSe - MLU ) ) * Max( CS,MLU ) ),MUR ) - DS ) ) ) ,( ( MUM / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 0.9461538461538461, "obj2": 0.04083380125888324}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( MUM * CS ) ) )", "obj1": 0.9711538461538461, "obj2": 0.026625948570103076}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + ( FirstVNF_RAM_Server + ( BR * ARS ) ) ) ),( ACS / AMS ) ) - ( MRS - ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Max( MRS,Max( Min( BR ,RRS ),( FirstVNF_Mem_Server - DDR ) ) ) ) ) )", "choosing": "Min( ( Max( ( CS + MUM ),RCSe ) / ( ( RRSe + RRSe ) / ( ( ( ( MUM * CS ) * ( MUC / MUC ) ) - Min( MUM ,RRSe ) ) * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.7019230769230769, "obj2": 0.2150699336162601}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) - Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( CS + RRSe ) * ( DS - ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ) )", "obj1": 0.9788461538461538, "obj2": 0.0066984083348627325}, {"determining": "Max( ( ( ( ( ACS / ( FirstVNF_CPU - CRS ) ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * DS ) / ( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) + RMSe ) )", "obj1": 0.6961538461538461, "obj2": 0.2240788116059716}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( ACS - MDR ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),( ( RCSe / MUM ) * CS ) ) )", "obj1": 0.9076923076923077, "obj2": 0.04215878983445066}, {"determining": "Max( ( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( FirstVNF_CPU + RRS ) ) / ( MDR + RRS ) ),Max( ( CRS / FirstVNF_RAM ),( MDR * FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - ( Max( MUM,( ( Max( MLU,MUR ) + MUM ) / MLU ) ) + ( Min( ( DS * ( RCSe * MUC ) ) ,CS ) - RRSe ) ) ) / ( RRSe / MUC ) ) / ( ( RCSe * RCSe ) / ( MUR / MUM ) ) )", "obj1": 0.6442307692307693, "obj2": 0.2586920718206277}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS / FirstVNF_Mem ) ) / ( ( ACS / AMS ) - ( AMS - MDR ) ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( ( ( CS + RRSe ) / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( MUM * CS ) ) )", "obj1": 0.9576923076923077, "obj2": 0.034799457988754105}, {"determining": "( FirstVNF_RAM_Server - Max( ( Max( ( CRS - ( ACS * Const ) ),( DDR - AMS ) ) - Max( Min( ( FirstVNF_RAM / BR ) ,Const ),FirstVNF_CPU_Server ) ),MDR ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( DS * Min( CS ,( ( MLU * MUC ) * ( RCSe + RCSe ) ) ) ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),( ( RCSe / MUC ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) )", "obj1": 0.7557692307692307, "obj2": 0.17001852208561347}, {"determining": "( FirstVNF_RAM_Server - Max( ( FirstVNF_CPU / PN ),MDR ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),( MUM * MUM ) )", "obj1": 0.7557692307692307, "obj2": 0.17001852208561347}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) * ( PN * ACS ) )", "choosing": "( ( MLU / ( Max( Min( DS ,MLU ),RRSe ) / MUM ) ) - ( RRSe * CS ) )", "obj1": 0.6480769230769231, "obj2": 0.25303491067700234}, {"determining": "( PN - Min( ( Min( ( BR * ACS ) ,Const ) + ( DDR - Const ) ) ,Const ) )", "choosing": "Max( ( DS + DS ),( Min( Max( MLU,MUR ) ,Min( ( ( CS / DS ) * ( RRSe / RRSe ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) ) + MLU ) )", "obj1": 0.6673076923076923, "obj2": 0.23792429020233713}, {"determining": "( ( ( ( Max( ( CRS * MRS ),ACS ) / ARS ) / DDR ) / ( PN / DDR ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( MLU + DS ),( Max( ( DS - RRSe ),CS ) + CS ) )", "obj1": 0.8711538461538462, "obj2": 0.11023811562171978}, {"determining": "( ( AMS - DDR ) - MDR )", "choosing": "( ( RMSe + RMSe ) - RCSe )", "obj1": 0.9, "obj2": 0.04476290225101769}, {"determining": "Max( Max( ( FirstVNF_RAM - MRS ),Min( FirstVNF_CPU ,CRS ) ),CRS )", "choosing": "Min( ( ( ( DS * ( RCSe + RRSe ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.675, "obj2": 0.23442313667044026}, {"determining": "( ( Min( Max( PN,Const ) ,ARS ) - Const ) * ( ( FirstVNF_RAM_Server / Const ) / Min( RRS ,MRS ) ) )", "choosing": "( Max( ( CS / Max( RCSe,( ( MLU / RRSe ) * MUR ) ) ),Max( CS,RCSe ) ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 0.8653846153846154, "obj2": 0.11981628456503128}, {"determining": "( Max( ( BR * MDR ),( ACS + FirstVNF_Mem ) ) * ( Max( ( CRS - BR ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) ) )", "choosing": "Max( Max( ( MUC * MLU ),( ( CS / MUC ) + ( DS * RMSe ) ) ),( MUR / CS ) )", "obj1": 0.9961538461538462, "obj2": 0.005100440132907494}, {"determining": "( ( Min( Max( PN,Const ) ,ARS ) - Const ) * ( ( FirstVNF_RAM_Server / Const ) / Min( RRS ,MRS ) ) )", "choosing": "( Max( ( CS / Max( RCSe,( ( MLU / RRSe ) * MUR ) ) ),Max( CS,RCSe ) ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 0.8615384615384616, "obj2": 0.12197133335708936}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( MLU ,RRSe ) + RMSe ) )", "obj1": 0.6615384615384615, "obj2": 0.24839244092784135}, {"determining": "( ( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),AMS ) ) - Max( ARS,Const ) ) * ( ( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) ) / ( ( Const - ACS ) * ( CRS / ACS ) ) ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( MUM / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) ) )", "obj1": 0.85, "obj2": 0.12674350800426137}, {"determining": "Max( Max( ( FirstVNF_RAM - PN ),Min( FirstVNF_CPU ,CRS ) ),CRS )", "choosing": "Min( ( ( RCSe * DS ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.675, "obj2": 0.23442313667044026}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server - ACS ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) ) ,Max( DDR,( ( ( DDR - FirstVNF_RAM ) / ( AMS + BR ) ) - CRS ) ) )", "choosing": "( Max( CS,RMSe ) + ( Max( MUC,CS ) * ( MUC / RCSe ) ) )", "obj1": 0.8769230769230769, "obj2": 0.10784647340878925}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24821906900660495}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( CS * CS ) ) )", "obj1": 0.8480769230769231, "obj2": 0.1296307927698229}, {"determining": "( Max( ( Min( Max( PN,Const ) ,ARS ) - Const ),( ACS + FirstVNF_Mem ) ) * ( Max( ( CRS - BR ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) ) )", "choosing": "Max( Max( ( MUC * MLU ),( ( CS / Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) ) + ( DS * RMSe ) ) ),( MUR / CS ) )", "obj1": 0.9980769230769231, "obj2": 0.0023765621547500227}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + ( FirstVNF_RAM_Server + ( BR * ARS ) ) ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),RCSe ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24821906900660495}, {"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Max( ACS,MDR ) )", "choosing": "Min( ( MUM + MUC ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Const ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RMSe ,RCSe ) * Max( MUR,( Min( RMSe ,RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - Const ) ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( ( ( ( MLU + MLU ) / RMSe ) - RRSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ( AMS + ( AMS / ( FirstVNF_Mem_Server + BR ) ) ) ) / FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,Max( CRS,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + ( DS * MUM ) ) - ( CS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( RRS,Max( FirstVNF_RAM_Server,( FirstVNF_Mem_Server / Const ) ) ) ) - ( CRS * ( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( DS + DS ),( RRSe * MUC ) ) ,Max( ( RCSe / Min( ( RCSe - MLU ) ,( MUC + Max( RMSe,CS ) ) ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / ( ( AMS - AMS ) - Const ) ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( Max( RMSe,Max( ( MUM - ( CS - RRSe ) ),MLU ) ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( ( CS * RMSe ) + ( ( ( MUR / ( RMSe * DS ) ) * RRSe ) - MUM ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,( ACS / ( Min( BR ,BR ) / ( ( AMS - ( PN / FirstVNF_Mem ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,MUM ) * MUC ) + ( RRSe - Min( Max( DS,DS ) ,Min( Max( ( Min( Min( MUC ,RCSe ) ,CS ) - CS ),MUC ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - ( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + ( DS - CS ) ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( ( FirstVNF_CPU_Server + MDR ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - ( MUC - MUR ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( BR / FirstVNF_CPU_Server ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUR + Max( ( CS - DS ),RCSe ) ) / ( RRSe + ( MUM / MLU ) ) ) + Min( Max( RMSe,RMSe ) ,MUC ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( RRS / Max( MRS,FirstVNF_Mem_Server ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RCSe / ( Min( RCSe ,MLU ) - ( RCSe - ( DS * RRSe ) ) ) ),( ( MUR - CS ) + MLU ) ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( ( BR * ( ( ACS / AMS ) - MRS ) ) + DDR ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + ( RMSe * ( ( RMSe / RMSe ) * RRSe ) ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( FirstVNF_Mem * PN ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / Max( ( RMSe * ( MUC * ( RRSe + MUR ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( ( ACS + FirstVNF_Mem ) * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( Min( ( MUC / Max( ( MUR / RRSe ),CS ) ) ,RCSe ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( Max( MRS,ARS ) ,( Max( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( RRSe / DS ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RCSe - MUM ) / ( MUR - MUR ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + CRS ) - ( Max( MDR,( CRS / ACS ) ) - Max( PN,CRS ) ) )", "choosing": "( Max( ( Max( RCSe,RRSe ) - ( Max( MUC,Max( MUM,DS ) ) * DS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( RMSe * RMSe ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * ( FirstVNF_CPU * ( ( ACS - ( FirstVNF_Mem_Server - ARS ) ) / DDR ) ) ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( CS * DS ) + DS ) * ( ( RCSe * ( CS - Min( RRSe ,MUM ) ) ) / MUR ) ),MUR ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / ( ( ( Max( ( RCSe / DS ),CS ) - ( RRSe - MUM ) ) * MUM ) - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( CS + RRSe ) * ( DS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS + DS ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + Max( PN,Const ) ) )", "choosing": "( ( MUC - RMSe ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / RRS ) - Max( FirstVNF_CPU,( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( Max( Min( MUM ,RRSe ),( DS + DS ) ) * ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem * CRS ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * ( CS / DS ) ) ) ,Max( ( RCSe / Min( CS ,MLU ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) + Min( ( Min( FirstVNF_RAM_Server ,MRS ) - ( ARS + ARS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( RMSe,MUR ) ,( MUC * RMSe ) ) + ( CS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - ( FirstVNF_RAM_Server + Max( Const,( CRS / ( ( ( FirstVNF_RAM * CRS ) * FirstVNF_CPU ) + Max( AMS,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUR ) * MUR ) - Min( CS ,MLU ) ) - ( ( DS / ( ( RRSe * RMSe ) / ( MUR / Max( ( MLU - RCSe ),MUR ) ) ) ) * ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + AMS ) * AMS ) + ( CRS + AMS ) )", "choosing": "( ( MUR / DS ) * Min( RRSe ,( ( RRSe / RCSe ) + ( MUR - ( ( ( ( MUC / MLU ) * MUM ) - ( ( RCSe * RRSe ) / DS ) ) * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( Const - ( RRS / MDR ) ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * ( Min( RRSe ,DS ) - ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( AMS + FirstVNF_CPU ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,( ( ( MUC / ( MLU / MLU ) ) / ( MUR / Min( ( CS / ( DS + MUM ) ) ,( MUR - ( CS + MLU ) ) ) ) ) + Min( RMSe ,RMSe ) ) ) ,( ( ( Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) - MUM ) / ( CS + DS ) ) * Max( ( Min( ( MLU + MLU ) ,RRSe ) * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * Max( PN,Const ) )", "choosing": "( ( Min( Min( ( ( ( RRSe - ( MUR * MLU ) ) + CS ) - Min( RRSe ,( MUC - Min( RRSe ,RRSe ) ) ) ) ,MUR ) ,Max( RMSe,( MUC + ( RMSe / ( ( DS * DS ) - ( MUC - CS ) ) ) ) ) ) + ( MUC * MLU ) ) + ( MUM - ( DS - Min( ( MLU - RMSe ) ,( Min( Min( MUR ,( MUC / RRSe ) ) ,MUM ) + ( DS + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS - ( DDR + FirstVNF_CPU ) ) / RRS ) ,BR ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( Max( DS,RRSe ) * ( ( RMSe - CS ) - ( DS / ( ( ( DS - CS ) - CS ) - RRSe ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - MDR )", "choosing": "( ( RMSe + DS ) - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,DDR ) - ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) ) ) ,( Max( ACS,RRS ) + ( ( Const - RRS ) * MDR ) ) )", "choosing": "( Min( Min( MUC ,RCSe ) ,( Max( DS,CS ) * CS ) ) / Max( ( CS - MUM ),( ( CS / CS ) * Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Min( FirstVNF_RAM_Server ,Const ) ,Const ) )", "choosing": "( Min( ( MUM - MUC ) ,RCSe ) * ( Min( MLU ,RRSe ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( ( ( PN - ACS ) - Min( Const ,Max( AMS,MRS ) ) ) / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( Min( RMSe ,( RRSe + MUR ) ) * ( RCSe - RRSe ) ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( ( RRSe * MLU ) + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),RRS ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - MUM ) / ( ( MUC / RMSe ) + ( ( ( DS / ( MLU + MLU ) ) * RMSe ) / Max( MUM,MUM ) ) ) ) / ( ( MUR - MUR ) - ( ( ( ( ( MUR * MLU ) * RRSe ) - MUC ) * RMSe ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - Const ) ) - ( ( ( FirstVNF_Mem * ( ( RRS / CRS ) * FirstVNF_Mem ) ) / AMS ) / Max( Const,FirstVNF_Mem ) ) )", "choosing": "Min( Max( MUC,( RRSe * MUC ) ) ,Max( ( MUC - RMSe ),Min( RCSe ,( ( CS - MUC ) - ( RMSe - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / ( ( ( AMS - ACS ) / BR ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ) - ( FirstVNF_RAM_Server + Min( Const ,Max( RRS,RRS ) ) ) ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUR * ( ( ( RCSe + RMSe ) + MUC ) - RMSe ) ) * MLU ),( ( CS / MUC ) + Min( Max( Min( MLU ,RMSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( Min( CRS ,AMS ) - Const ) ) ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( DS + ( RMSe / ( MUM - ( RRSe - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Max( ACS,Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( RMSe - RRSe ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( MUM ,( Min( MUC ,RMSe ) - ( CS / Max( DS,( RMSe - MUC ) ) ) ) ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),( Min( Max( Const,( PN - MRS ) ) ,RRS ) / PN ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( Min( Min( MUC ,DS ) ,Max( RRSe,MUC ) ) * ( ( RCSe * RCSe ) * MUC ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( Max( Min( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) ,FirstVNF_Mem ),( ACS / AMS ) ) - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( RMSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - ( ACS * Const ) ),( DDR - AMS ) ) - Max( Min( ( FirstVNF_RAM / BR ) ,Const ),FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUC * MLU ),( ( CS / MUC ) + ( DS * Min( CS ,( ( MLU * MUC ) * ( RCSe + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( ( Max( ( FirstVNF_RAM_Server * FirstVNF_CPU ),( BR * FirstVNF_CPU ) ) + Min( BR ,ACS ) ) * Min( Const ,FirstVNF_Mem ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RMSe / MUR ) + ( Min( MUC ,Max( RCSe,Max( MUR,DS ) ) ) + CS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - Min( MDR ,FirstVNF_CPU ) ) / ( ( PN + FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - Max( RMSe,( MUR * ( MUM * ( MUR * ( MLU - RMSe ) ) ) ) ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - CRS ),FirstVNF_Mem_Server ) / ( RRS - ( FirstVNF_Mem * CRS ) ) )", "choosing": "( Max( MLU,MUC ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) )", "choosing": "( ( RCSe + RMSe ) + ( ( DS - ( ( RRSe / MUC ) * Min( Min( MUC ,Min( ( DS * MLU ) ,MUC ) ) ,RMSe ) ) ) + Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * FirstVNF_Mem_Server ) ,Min( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,RCSe ),Max( ( ( MUR + RRSe ) + ( MUR + CS ) ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS - ( ( ACS / ( ( FirstVNF_CPU * ( MDR + FirstVNF_CPU ) ) + ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * Max( MDR,RRS ) ) * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) + ( FirstVNF_RAM_Server / Min( ( ( BR / ( FirstVNF_RAM_Server / AMS ) ) / FirstVNF_CPU ) ,PN ) ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( MUM / ( RCSe - DS ) ) ,Min( ( MLU + Min( Min( ( MUR * ( CS - MUC ) ) ,( DS / MUM ) ) ,( ( MLU * MLU ) + RMSe ) ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,Const ) + ( DDR - Const ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + Min( ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) ,Min( ( ( CS / DS ) * ( RRSe / RRSe ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( ( DDR - PN ) - ( ( ( ARS * Const ) * CRS ) + PN ) ) / ( ( Const - ACS ) * ( CRS / ACS ) ) ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,( CS * Min( Min( ( ( RCSe + RCSe ) * MUC ) ,MUM ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( Min( ( ( CS / MUR ) / ( MUM - RCSe ) ) ,Max( ( RCSe - DS ),( CS + MLU ) ) ) + Max( ( CS * RMSe ),( ( MUM + MLU ) * ( MUC * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( ( CRS - DDR ) + ( ( FirstVNF_RAM_Server + ( BR * ARS ) ) * DDR ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( Min( CS ,RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server * ( CRS - CRS ) ) - DDR ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,MRS ) ) )", "choosing": "( Max( ( CS / CS ),RRSe ) - Max( Min( DS ,MLU ),( ( RCSe / MUM ) * ( RRSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,DDR ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Max( CS,( Min( Min( Min( CS ,RRSe ) ,MUC ) ,Min( CS ,Min( ( MUM * RRSe ) ,RRSe ) ) ) / ( RRSe / ( Min( MUC ,Min( DS ,RCSe ) ) / RMSe ) ) ) ) - ( MLU + MUC ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + ( Max( DDR,RRS ) * ( FirstVNF_Mem / AMS ) ) ) )", "choosing": "Min( ( ( ( MUR / ( ( Max( MUR,( CS - CS ) ) / MLU ) / MUR ) ) + ( ( CS - MUC ) + RRSe ) ) + MUR ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( AMS ,FirstVNF_RAM ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( MUR - ( MLU + MUC ) ) - Max( MLU,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,MRS ) ) )", "choosing": "( Max( ( ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) / CS ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( ( DDR - PN ) - ( DDR / FirstVNF_CPU_Server ) ) / ( ( Const - ACS ) * ( CRS / ACS ) ) ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,Min( ( ( CS / DS ) * Min( RCSe ,MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),Max( ( RRSe / RRSe ),( MUC - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( DS ,RRSe ) + RMSe ) )", "obj1": 0.6326923076923077, "obj2": 0.2792038003788276}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( Min( CRS ,AMS ) - Const ) ) ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( DS + ( RMSe / ( MUM - ( RRSe - MUC ) ) ) ) )", "obj1": 0.7788461538461539, "obj2": 0.13310066422311256}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Max( ( Min( ( Max( AMS,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) * ARS ) )", "choosing": "Min( ( MLU + ( RCSe - ( RMSe - Max( MLU,Max( MUM,( Min( RMSe ,MUC ) / RRSe ) ) ) ) ) ) ,Min( Min( ( RRSe / MUR ) ,( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ,( CS * CS ) ) )", "obj1": 0.8788461538461538, "obj2": 0.10012705748876254}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / ( Max( PN,Const ) / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - ( RCSe + RRSe ) ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) ) )", "obj1": 0.8846153846153846, "obj2": 0.05114133166965617}, {"determining": "( ( ARS - ( PN - FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Max( MRS,Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,ACS ) ) ) * ARS ) )", "choosing": "Min( ( DS + RMSe ) ,Min( Min( ( RRSe / MUR ) ,( CS / Min( ( MLU * Max( CS,( DS / RCSe ) ) ) ,( MUM * DS ) ) ) ) ,( CS * CS ) ) )", "obj1": 0.8423076923076923, "obj2": 0.13151719134645784}, {"determining": "( FirstVNF_RAM_Server - Max( ( ( CRS - Min( ( BR * FirstVNF_CPU_Server ) ,CRS ) ) + ( ( DDR - DDR ) - Max( FirstVNF_CPU_Server,AMS ) ) ),MDR ) )", "choosing": "Max( ( ( ( ( CS + RRSe ) + Min( Max( ( ( MUC - MUC ) / Max( MUC,DS ) ),CS ) ,RCSe ) ) / MUM ) * RRSe ),( ( RCSe / MUC ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.15871207424788214}, {"determining": "( ( Max( Min( Const ,( BR / FirstVNF_RAM_Server ) ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),AMS ) ) - Max( ARS,Const ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Min( RCSe ,( Max( ( Min( MUC ,( RMSe - MLU ) ) * Max( CS,MLU ) ),MUR ) - DS ) ) ) ,( ( MUM / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 0.9461538461538461, "obj2": 0.04083380125888324}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( ACS - MDR ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),( ( RCSe / MUM ) * CS ) ) )", "obj1": 0.9076923076923077, "obj2": 0.04215878983445066}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( MUM * CS ) ) )", "obj1": 0.9711538461538461, "obj2": 0.026625948570103076}, {"determining": "Max( Max( ( FirstVNF_RAM - MRS ),Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),CRS )", "choosing": "Min( ( ( ( DS * ( RCSe + ( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) ) ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.6423076923076924, "obj2": 0.2513937454547555}, {"determining": "Max( ( ( DDR * ( FirstVNF_CPU + BR ) ) + ( BR / PN ) ),( Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( MLU * ( Min( MUM ,RCSe ) / MLU ) ) + MUR ) )", "obj1": 0.6346153846153846, "obj2": 0.2674964600506748}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS / FirstVNF_Mem ) ) / ( ( ACS / AMS ) - ( AMS - MDR ) ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( ( ( CS + RRSe ) / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( MUM * CS ) ) )", "obj1": 0.9576923076923077, "obj2": 0.034799457988754105}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Max( ( Min( ( Max( AMS,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) * ARS ) )", "choosing": "Min( ( MLU + ( RCSe - ( RMSe - Max( MLU,Max( MUM,( Min( RMSe ,MUC ) / RRSe ) ) ) ) ) ) ,Min( Min( ( RRSe / MUR ) ,( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ,( CS * CS ) ) )", "obj1": 0.8596153846153847, "obj2": 0.11444144468568429}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),CRS )", "choosing": "Min( ( ( RCSe * DS ) * Max( RCSe,RMSe ) ) ,( ( ( MUM - MUC ) - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.6538461538461539, "obj2": 0.2463427075614129}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( Min( ( ( RRSe * MLU ) + RMSe ) ,Min( DS ,MUR ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.7230769230769231, "obj2": 0.20200946771125697}, {"determining": "( ( ( Min( CRS ,PN ) * ( BR / Min( ( Max( AMS,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ,BR ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,( ( DS - RRSe ) - MUR ) ) + RMSe ),Max( Min( ( RRSe / MUR ) ,( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) ),Min( CS ,MUR ) ) )", "obj1": 0.7096153846153846, "obj2": 0.2054761499364946}, {"determining": "( ( ( FirstVNF_RAM_Server * MDR ) + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) - MRS )", "choosing": "( ( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( RMSe * ( MUM + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ) * ( DS - ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ) )", "obj1": 0.6826923076923077, "obj2": 0.23349066586042533}, {"determining": "( Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) - ( Const + Const ) )", "choosing": "( ( DS * ( ( ( RMSe - ( Max( MLU,MUC ) / MUR ) ) / Min( MLU ,( RCSe - CS ) ) ) + ( ( Min( MLU ,RMSe ) + MUC ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 0.6903846153846154, "obj2": 0.21441338414683567}, {"determining": "( FirstVNF_RAM_Server - Max( ( Const - CRS ),MDR ) )", "choosing": "Max( MUC,( ( RCSe / MUC ) / Min( ( DS + MUC ) ,( MUM - Max( RMSe,RCSe ) ) ) ) )", "obj1": 0.75, "obj2": 0.1815873498165959}, {"determining": "( PN - Min( ( Min( ( BR * ACS ) ,Const ) + ( DDR - Const ) ) ,Const ) )", "choosing": "Max( ( DS + DS ),( Min( Max( MLU,MUR ) ,Min( ( ( CS / DS ) * ( RRSe / RRSe ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) ) + MLU ) )", "obj1": 0.6673076923076923, "obj2": 0.23792429020233713}, {"determining": "( FirstVNF_RAM_Server - Max( ( ( Max( ACS,DDR ) / FirstVNF_CPU_Server ) * DDR ),MDR ) )", "choosing": "Max( ( DS * RCSe ),( Min( RMSe ,RCSe ) * ( RCSe - RRSe ) ) )", "obj1": 0.7384615384615385, "obj2": 0.19534755480674398}, {"determining": "( ( ( PN - Min( ( Min( BR ,Min( Min( PN ,CRS ) ,MDR ) ) + ( DDR - Const ) ) ,Const ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( Max( ( RMSe + MUC ),( ( RRSe + Min( DS ,RCSe ) ) * DS ) ),MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 0.975, "obj2": 0.010112106417612537}, {"determining": "( ( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),AMS ) ) - Max( ARS,Const ) ) * ( ( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) ) / ( ( Const - ACS ) * ( CRS / ACS ) ) ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( MUM / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) ) )", "obj1": 0.85, "obj2": 0.12674350800426137}, {"determining": "( Max( Min( MRS ,( FirstVNF_CPU * ( MRS * ( Max( FirstVNF_Mem,BR ) - BR ) ) ) ),FirstVNF_Mem_Server ) * ( ACS + MDR ) )", "choosing": "Max( Max( Max( RCSe,( ( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Min( RMSe ,MLU ) * MLU ),Min( ( RMSe - DS ) ,Min( CS ,DS ) ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.6942307692307692, "obj2": 0.21182804452185702}, {"determining": "( FirstVNF_RAM_Server - Max( ( Const - ACS ),MDR ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( MUM,RMSe ) ) ),( ( RCSe / MUC ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) )", "obj1": 0.7423076923076923, "obj2": 0.18960600424339893}, {"determining": "( ( AMS - DDR ) - MDR )", "choosing": "( ( RMSe + RMSe ) - RCSe )", "obj1": 0.9, "obj2": 0.04476290225101769}, {"determining": "( ( ( ( Max( ( CRS * MRS ),ACS ) / ARS ) / DDR ) / ( PN / DDR ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( MLU + DS ),( Max( ( DS - RRSe ),CS ) + CS ) )", "obj1": 0.8711538461538462, "obj2": 0.11023811562171978}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) - Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( CS + RRSe ) * ( DS - ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ) )", "obj1": 0.9788461538461538, "obj2": 0.0066984083348627325}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + ( Max( DDR,RRS ) * ( FirstVNF_Mem / AMS ) ) ) )", "choosing": "Min( ( ( ( MUR / ( ( Max( MUR,( CS - CS ) ) / MLU ) / MUR ) ) + ( ( CS - MUC ) + RRSe ) ) + MUR ) ,( MLU * RCSe ) )", "obj1": 0.9923076923076923, "obj2": 0.0037462072635339547}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) ) )", "obj1": 0.8903846153846153, "obj2": 0.0494266847231669}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server - ACS ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) ) ,Max( DDR,( ( ( DDR - FirstVNF_RAM ) / ( AMS + BR ) ) - CRS ) ) )", "choosing": "( Max( CS,RMSe ) + ( Max( MUC,CS ) * ( MUC / RCSe ) ) )", "obj1": 0.8769230769230769, "obj2": 0.10784647340878925}, {"determining": "( FirstVNF_RAM_Server - Max( ( Max( ( AMS - ( ACS * Const ) ),( DDR - AMS ) ) - Max( Min( ( FirstVNF_RAM / BR ) ,Const ),FirstVNF_CPU_Server ) ),MDR ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( DS * Min( CS ,Min( MLU ,( RRSe - RRSe ) ) ) ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),( ( RCSe / MUC ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) )", "obj1": 0.7557692307692307, "obj2": 0.17001852208561347}, {"determining": "( FirstVNF_RAM_Server - Max( ( Max( ( CRS - ( ACS * Const ) ),( DDR - AMS ) ) - Max( Min( ( FirstVNF_RAM / BR ) ,Const ),FirstVNF_CPU_Server ) ),MDR ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( DS * Min( CS ,( ( MLU * MUC ) * ( RCSe + RCSe ) ) ) ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),( ( RCSe / MUC ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) )", "obj1": 0.7557692307692307, "obj2": 0.17001852208561347}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( CS * CS ) ) )", "obj1": 0.8480769230769231, "obj2": 0.1296307927698229}, {"determining": "( Max( ( Min( Max( PN,Const ) ,ARS ) - Const ),( ACS + FirstVNF_Mem ) ) * ( Max( ( CRS - BR ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) ) )", "choosing": "Max( Max( ( MUC * MLU ),( ( CS / Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) ) + ( DS * RMSe ) ) ),( MUR / CS ) )", "obj1": 0.9980769230769231, "obj2": 0.0023765621547500227}, {"determining": "Max( ( ( CRS - DDR ) + ( ( FirstVNF_RAM_Server + ( BR * ARS ) ) * DDR ) ),CRS )", "choosing": "Min( ( ( ( DS * ( RCSe + Min( CS ,RMSe ) ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.675, "obj2": 0.23442313667044026}, {"determining": "Max( Max( ( FirstVNF_RAM - MRS ),Min( FirstVNF_CPU ,CRS ) ),CRS )", "choosing": "Min( ( ( ( DS * ( RCSe + RRSe ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.675, "obj2": 0.23442313667044026}, {"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Max( ACS,MDR ) )", "choosing": "Min( ( MUM + MUC ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Const ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RMSe ,RCSe ) * Max( MUR,( Min( RMSe ,RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - Const ) ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( ( ( ( MLU + MLU ) / RMSe ) - RRSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ( AMS + ( AMS / ( FirstVNF_Mem_Server + BR ) ) ) ) / FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,Max( CRS,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + ( DS * MUM ) ) - ( CS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( RRS,Max( FirstVNF_RAM_Server,( FirstVNF_Mem_Server / Const ) ) ) ) - ( CRS * ( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( DS + DS ),( RRSe * MUC ) ) ,Max( ( RCSe / Min( ( RCSe - MLU ) ,( MUC + Max( RMSe,CS ) ) ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / ( ( AMS - AMS ) - Const ) ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( Max( RMSe,Max( ( MUM - ( CS - RRSe ) ),MLU ) ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( ( CS * RMSe ) + ( ( ( MUR / ( RMSe * DS ) ) * RRSe ) - MUM ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,( ACS / ( Min( BR ,BR ) / ( ( AMS - ( PN / FirstVNF_Mem ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,MUM ) * MUC ) + ( RRSe - Min( Max( DS,DS ) ,Min( Max( ( Min( Min( MUC ,RCSe ) ,CS ) - CS ),MUC ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - ( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + ( DS - CS ) ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( ( FirstVNF_CPU_Server + MDR ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - ( MUC - MUR ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( BR / FirstVNF_CPU_Server ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUR + Max( ( CS - DS ),RCSe ) ) / ( RRSe + ( MUM / MLU ) ) ) + Min( Max( RMSe,RMSe ) ,MUC ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( RRS / Max( MRS,FirstVNF_Mem_Server ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RCSe / ( Min( RCSe ,MLU ) - ( RCSe - ( DS * RRSe ) ) ) ),( ( MUR - CS ) + MLU ) ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( ( BR * ( ( ACS / AMS ) - MRS ) ) + DDR ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + ( RMSe * ( ( RMSe / RMSe ) * RRSe ) ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( FirstVNF_Mem * PN ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / Max( ( RMSe * ( MUC * ( RRSe + MUR ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( ( ACS + FirstVNF_Mem ) * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( Min( ( MUC / Max( ( MUR / RRSe ),CS ) ) ,RCSe ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( Max( MRS,ARS ) ,( Max( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( RRSe / DS ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RCSe - MUM ) / ( MUR - MUR ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + CRS ) - ( Max( MDR,( CRS / ACS ) ) - Max( PN,CRS ) ) )", "choosing": "( Max( ( Max( RCSe,RRSe ) - ( Max( MUC,Max( MUM,DS ) ) * DS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( RMSe * RMSe ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * ( FirstVNF_CPU * ( ( ACS - ( FirstVNF_Mem_Server - ARS ) ) / DDR ) ) ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( CS * DS ) + DS ) * ( ( RCSe * ( CS - Min( RRSe ,MUM ) ) ) / MUR ) ),MUR ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / ( ( ( Max( ( RCSe / DS ),CS ) - ( RRSe - MUM ) ) * MUM ) - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( CS + RRSe ) * ( DS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS + DS ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + Max( PN,Const ) ) )", "choosing": "( ( MUC - RMSe ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / RRS ) - Max( FirstVNF_CPU,( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( Max( Min( MUM ,RRSe ),( DS + DS ) ) * ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem * CRS ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * ( CS / DS ) ) ) ,Max( ( RCSe / Min( CS ,MLU ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) + Min( ( Min( FirstVNF_RAM_Server ,MRS ) - ( ARS + ARS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( RMSe,MUR ) ,( MUC * RMSe ) ) + ( CS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - ( FirstVNF_RAM_Server + Max( Const,( CRS / ( ( ( FirstVNF_RAM * CRS ) * FirstVNF_CPU ) + Max( AMS,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUR ) * MUR ) - Min( CS ,MLU ) ) - ( ( DS / ( ( RRSe * RMSe ) / ( MUR / Max( ( MLU - RCSe ),MUR ) ) ) ) * ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + AMS ) * AMS ) + ( CRS + AMS ) )", "choosing": "( ( MUR / DS ) * Min( RRSe ,( ( RRSe / RCSe ) + ( MUR - ( ( ( ( MUC / MLU ) * MUM ) - ( ( RCSe * RRSe ) / DS ) ) * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( Const - ( RRS / MDR ) ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * ( Min( RRSe ,DS ) - ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( AMS + FirstVNF_CPU ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,( ( ( MUC / ( MLU / MLU ) ) / ( MUR / Min( ( CS / ( DS + MUM ) ) ,( MUR - ( CS + MLU ) ) ) ) ) + Min( RMSe ,RMSe ) ) ) ,( ( ( Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) - MUM ) / ( CS + DS ) ) * Max( ( Min( ( MLU + MLU ) ,RRSe ) * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * Max( PN,Const ) )", "choosing": "( ( Min( Min( ( ( ( RRSe - ( MUR * MLU ) ) + CS ) - Min( RRSe ,( MUC - Min( RRSe ,RRSe ) ) ) ) ,MUR ) ,Max( RMSe,( MUC + ( RMSe / ( ( DS * DS ) - ( MUC - CS ) ) ) ) ) ) + ( MUC * MLU ) ) + ( MUM - ( DS - Min( ( MLU - RMSe ) ,( Min( Min( MUR ,( MUC / RRSe ) ) ,MUM ) + ( DS + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS - ( DDR + FirstVNF_CPU ) ) / RRS ) ,BR ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( Max( DS,RRSe ) * ( ( RMSe - CS ) - ( DS / ( ( ( DS - CS ) - CS ) - RRSe ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - MDR )", "choosing": "( ( RMSe + DS ) - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,DDR ) - ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) ) ) ,( Max( ACS,RRS ) + ( ( Const - RRS ) * MDR ) ) )", "choosing": "( Min( Min( MUC ,RCSe ) ,( Max( DS,CS ) * CS ) ) / Max( ( CS - MUM ),( ( CS / CS ) * Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Min( FirstVNF_RAM_Server ,Const ) ,Const ) )", "choosing": "( Min( ( MUM - MUC ) ,RCSe ) * ( Min( MLU ,RRSe ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( ( ( PN - ACS ) - Min( Const ,Max( AMS,MRS ) ) ) / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( Min( RMSe ,( RRSe + MUR ) ) * ( RCSe - RRSe ) ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( ( RRSe * MLU ) + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),RRS ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - MUM ) / ( ( MUC / RMSe ) + ( ( ( DS / ( MLU + MLU ) ) * RMSe ) / Max( MUM,MUM ) ) ) ) / ( ( MUR - MUR ) - ( ( ( ( ( MUR * MLU ) * RRSe ) - MUC ) * RMSe ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - Const ) ) - ( ( ( FirstVNF_Mem * ( ( RRS / CRS ) * FirstVNF_Mem ) ) / AMS ) / Max( Const,FirstVNF_Mem ) ) )", "choosing": "Min( Max( MUC,( RRSe * MUC ) ) ,Max( ( MUC - RMSe ),Min( RCSe ,( ( CS - MUC ) - ( RMSe - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / ( ( ( AMS - ACS ) / BR ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ) - ( FirstVNF_RAM_Server + Min( Const ,Max( RRS,RRS ) ) ) ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUR * ( ( ( RCSe + RMSe ) + MUC ) - RMSe ) ) * MLU ),( ( CS / MUC ) + Min( Max( Min( MLU ,RMSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( Min( CRS ,AMS ) - Const ) ) ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( DS + ( RMSe / ( MUM - ( RRSe - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Max( ACS,Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( RMSe - RRSe ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( MUM ,( Min( MUC ,RMSe ) - ( CS / Max( DS,( RMSe - MUC ) ) ) ) ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),( Min( Max( Const,( PN - MRS ) ) ,RRS ) / PN ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( Min( Min( MUC ,DS ) ,Max( RRSe,MUC ) ) * ( ( RCSe * RCSe ) * MUC ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( Max( Min( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) ,FirstVNF_Mem ),( ACS / AMS ) ) - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( RMSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - ( ACS * Const ) ),( DDR - AMS ) ) - Max( Min( ( FirstVNF_RAM / BR ) ,Const ),FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUC * MLU ),( ( CS / MUC ) + ( DS * Min( CS ,( ( MLU * MUC ) * ( RCSe + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( ( Max( ( FirstVNF_RAM_Server * FirstVNF_CPU ),( BR * FirstVNF_CPU ) ) + Min( BR ,ACS ) ) * Min( Const ,FirstVNF_Mem ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RMSe / MUR ) + ( Min( MUC ,Max( RCSe,Max( MUR,DS ) ) ) + CS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - Min( MDR ,FirstVNF_CPU ) ) / ( ( PN + FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - Max( RMSe,( MUR * ( MUM * ( MUR * ( MLU - RMSe ) ) ) ) ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - CRS ),FirstVNF_Mem_Server ) / ( RRS - ( FirstVNF_Mem * CRS ) ) )", "choosing": "( Max( MLU,MUC ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) )", "choosing": "( ( RCSe + RMSe ) + ( ( DS - ( ( RRSe / MUC ) * Min( Min( MUC ,Min( ( DS * MLU ) ,MUC ) ) ,RMSe ) ) ) + Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * FirstVNF_Mem_Server ) ,Min( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,RCSe ),Max( ( ( MUR + RRSe ) + ( MUR + CS ) ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS - ( ( ACS / ( ( FirstVNF_CPU * ( MDR + FirstVNF_CPU ) ) + ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * Max( MDR,RRS ) ) * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) + ( FirstVNF_RAM_Server / Min( ( ( BR / ( FirstVNF_RAM_Server / AMS ) ) / FirstVNF_CPU ) ,PN ) ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( MUM / ( RCSe - DS ) ) ,Min( ( MLU + Min( Min( ( MUR * ( CS - MUC ) ) ,( DS / MUM ) ) ,( ( MLU * MLU ) + RMSe ) ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,Const ) + ( DDR - Const ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + Min( ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) ,Min( ( ( CS / DS ) * ( RRSe / RRSe ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( ( DDR - PN ) - ( ( ( ARS * Const ) * CRS ) + PN ) ) / ( ( Const - ACS ) * ( CRS / ACS ) ) ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,( CS * Min( Min( ( ( RCSe + RCSe ) * MUC ) ,MUM ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( Min( ( ( CS / MUR ) / ( MUM - RCSe ) ) ,Max( ( RCSe - DS ),( CS + MLU ) ) ) + Max( ( CS * RMSe ),( ( MUM + MLU ) * ( MUC * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( ( CRS - DDR ) + ( ( FirstVNF_RAM_Server + ( BR * ARS ) ) * DDR ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( Min( CS ,RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server * ( CRS - CRS ) ) - DDR ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,MRS ) ) )", "choosing": "( Max( ( CS / CS ),RRSe ) - Max( Min( DS ,MLU ),( ( RCSe / MUM ) * ( RRSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( ( DDR - PN ) - ( DDR / FirstVNF_CPU_Server ) ) / ( ( Const - ACS ) * ( CRS / ACS ) ) ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,Min( ( ( CS / DS ) * Min( RCSe ,MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( DS ,RRSe ) + RMSe ) )", "obj1": 0.6326923076923077, "obj2": 0.2792038003788276}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Max( ( Min( ( Max( AMS,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) * ARS ) )", "choosing": "Min( ( MLU + ( RCSe - ( RMSe - Max( MLU,Max( MUM,( Min( RMSe ,MUC ) / RRSe ) ) ) ) ) ) ,Min( Min( ( RRSe / MUR ) ,( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ,( CS * CS ) ) )", "obj1": 0.8596153846153847, "obj2": 0.11444144468568429}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( AMS - ( AMS - ( MDR * ARS ) ) ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUC / ( MLU / MLU ) ) / ( Min( RCSe ,RRSe ) / MUM ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.7826923076923077, "obj2": 0.1252636819455867}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,MDR ) ) - DDR ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( RRSe / RCSe ) + ( MUR - DS ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.926923076923077, "obj2": 0.03169334899558314}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Max( ( Min( ( Max( AMS,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) * ARS ) )", "choosing": "Min( ( MLU + ( RCSe - ( RMSe - Max( MLU,Max( MUM,( Min( RMSe ,MUC ) / RRSe ) ) ) ) ) ) ,Min( Min( ( RRSe / MUR ) ,( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ,( CS * CS ) ) )", "obj1": 0.8788461538461538, "obj2": 0.10012705748876254}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / ( Max( PN,Const ) / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - ( RCSe + RRSe ) ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) ) )", "obj1": 0.8846153846153846, "obj2": 0.05114133166965617}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( MUM * CS ) ) )", "obj1": 0.9711538461538461, "obj2": 0.026625948570103076}, {"determining": "( FirstVNF_RAM_Server - Max( ( ( Max( ACS,DDR ) / FirstVNF_CPU_Server ) * DDR ),MDR ) )", "choosing": "Max( ( DS * RCSe ),( Min( RMSe ,RCSe ) * ( RCSe - RRSe ) ) )", "obj1": 0.7442307692307693, "obj2": 0.15477304244214093}, {"determining": "( Max( Min( MRS ,( FirstVNF_CPU * ( MRS * ( Max( FirstVNF_Mem,BR ) - BR ) ) ) ),FirstVNF_Mem_Server ) * ( ACS + MDR ) )", "choosing": "Max( Max( Max( RCSe,( ( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Min( RMSe ,MLU ) * MLU ),Min( ( RMSe - DS ) ,Min( CS ,DS ) ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.698076923076923, "obj2": 0.2005693896835154}, {"determining": "( FirstVNF_RAM_Server - Max( ( ( CRS - DDR ) + ( ( DDR - Min( DDR ,( MRS / Const ) ) ) - Max( FirstVNF_CPU_Server,AMS ) ) ),MDR ) )", "choosing": "Max( ( Min( Min( ( ( ( RRSe - ( MUR * MLU ) ) + CS ) - Min( RRSe ,( MUC - Min( RRSe ,RRSe ) ) ) ) ,MUR ) ,Max( RMSe,( MUC + ( RMSe / ( ( DS * DS ) - ( MUC - CS ) ) ) ) ) ) + ( MUC * MLU ) ),( ( RCSe / MUC ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) )", "obj1": 0.7269230769230769, "obj2": 0.1859656103981954}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 0.75, "obj2": 0.13978163993626674}, {"determining": "( ( RRS / AMS ) - Max( ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ),MDR ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),( Min( RMSe ,( RCSe / CS ) ) * ( RCSe - Max( RCSe,CS ) ) ) )", "obj1": 0.7423076923076923, "obj2": 0.18481808098679708}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,MDR ) ) - CRS ) ) - DDR ) / ( Max( Min( ( FirstVNF_RAM / BR ) ,Const ),FirstVNF_CPU_Server ) / CRS ) )", "choosing": "Max( ( Min( Min( CS ,( ( MLU * MUC ) * ( RCSe + RCSe ) ) ) ,RRSe ) + ( CS - CS ) ),( MUR * RMSe ) )", "obj1": 0.7711538461538462, "obj2": 0.13073601748866104}, {"determining": "Max( ( ( DDR * ( FirstVNF_CPU + BR ) ) + ( BR / PN ) ),( Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( MLU * ( Min( MUM ,RCSe ) / MLU ) ) + MUR ) )", "obj1": 0.6346153846153846, "obj2": 0.2674964600506748}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( ACS - MDR ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),( ( RCSe / MUM ) * CS ) ) )", "obj1": 0.9076923076923077, "obj2": 0.04215878983445066}, {"determining": "( ( ( FirstVNF_RAM_Server * MDR ) + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) - MRS )", "choosing": "( ( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( RMSe * ( MUM + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ) * ( DS - ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ) )", "obj1": 0.6615384615384615, "obj2": 0.23695263981874568}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Max( ( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ,BR ) / Min( ( DDR + ( CRS + FirstVNF_Mem ) ) ,FirstVNF_RAM ) ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) * ARS ) )", "choosing": "Min( ( MLU + ( RCSe - ( RMSe - Max( MLU,Max( MUM,( Max( RCSe,RRSe ) / RRSe ) ) ) ) ) ) ,Min( Min( ( RRSe / MUR ) ,( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ,( CS * CS ) ) )", "obj1": 0.8673076923076923, "obj2": 0.10127989538028936}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ),CRS )", "choosing": "Min( ( ( ( DS * ( Min( RMSe ,CS ) - Max( RCSe,MLU ) ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.65, "obj2": 0.24592436295225534}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( Min( ( Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( Min( Min( MUC ,DS ) ,Max( RRSe,MUC ) ) * ( ( RCSe * RCSe ) * MUC ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) ) + RMSe ) ,Min( DS ,MUR ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6884615384615385, "obj2": 0.2267661092022016}, {"determining": "Max( Max( ( FirstVNF_RAM - MRS ),Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),CRS )", "choosing": "Min( ( ( ( DS * ( RCSe + ( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) ) ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.6423076923076924, "obj2": 0.2513937454547555}, {"determining": "( ( AMS - DDR ) - MDR )", "choosing": "( ( RMSe + RMSe ) - RCSe )", "obj1": 0.9, "obj2": 0.04476290225101769}, {"determining": "( Max( Min( MRS ,( FirstVNF_CPU * ( MRS * ( Max( FirstVNF_Mem,BR ) - BR ) ) ) ),FirstVNF_Mem_Server ) * ( ACS + MDR ) )", "choosing": "Max( Max( Max( RCSe,( ( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Min( RMSe ,MLU ) * MLU ),Min( ( RMSe - DS ) ,Min( CS ,DS ) ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.6942307692307692, "obj2": 0.21182804452185702}, {"determining": "( ( ( PN - Min( ( Min( BR ,Const ) + ( DDR - Const ) ) ,Const ) ) - DDR ) / Max( ACS,Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUC ) ) ) )", "obj1": 0.975, "obj2": 0.010112106417612537}, {"determining": "( Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) - ( Const + Const ) )", "choosing": "( ( DS * ( ( ( RMSe - ( Max( MLU,MUC ) / MUR ) ) / Min( MLU ,( RCSe - CS ) ) ) + ( ( Min( MLU ,RMSe ) + MUC ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 0.6903846153846154, "obj2": 0.21441338414683567}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) ) )", "obj1": 0.8903846153846153, "obj2": 0.0494266847231669}, {"determining": "( ( ( FirstVNF_RAM_Server * MDR ) + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) - MRS )", "choosing": "( ( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( RMSe * ( MUM + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ) * ( DS - ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ) )", "obj1": 0.6826923076923077, "obj2": 0.23349066586042533}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) - Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( CS + RRSe ) * ( DS - ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ) )", "obj1": 0.9788461538461538, "obj2": 0.0066984083348627325}, {"determining": "( ( ( FirstVNF_Mem_Server * ( BR / Min( ( Max( AMS,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ,Max( MRS,MDR ) ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUR + Max( ( CS - DS ),RCSe ) ) / ( RRSe + ( MUM / MLU ) ) ) + Min( Max( RMSe,RMSe ) ,MUC ) ) ),Max( MUC,( ( RCSe / MUC ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) ) )", "obj1": 0.9884615384615385, "obj2": 0.004696179217962344}, {"determining": "Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),FirstVNF_RAM_Server ),CRS )", "choosing": "Min( ( ( MUM + DS ) - ( CS / RRSe ) ) ,( ( ( MUM - MUC ) - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.6442307692307693, "obj2": 0.2504812165626008}, {"determining": "Max( ( ( CRS - DDR ) + ( ( FirstVNF_RAM_Server + ( BR * ARS ) ) * DDR ) ),CRS )", "choosing": "Min( ( ( ( DS * ( RCSe + Min( CS ,RMSe ) ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.675, "obj2": 0.23442313667044026}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + ( Max( DDR,RRS ) * ( FirstVNF_Mem / AMS ) ) ) )", "choosing": "Min( ( ( ( MUR / ( ( Max( MUR,( CS - CS ) ) / MLU ) / MUR ) ) + ( ( CS - MUC ) + RRSe ) ) + MUR ) ,( MLU * RCSe ) )", "obj1": 0.9923076923076923, "obj2": 0.0037462072635339547}, {"determining": "( Max( ( Min( Max( PN,Const ) ,ARS ) - Const ),( ACS + FirstVNF_Mem ) ) * ( Max( ( CRS - BR ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) ) )", "choosing": "Max( Max( ( MUC * MLU ),( ( CS / Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) ) + ( DS * RMSe ) ) ),( MUR / CS ) )", "obj1": 0.9980769230769231, "obj2": 0.0023765621547500227}, {"determining": "Max( Max( ( ( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / AMS ) ) - ( ( RRS / AMS ) / Max( Const,FirstVNF_Mem ) ) ) - MRS ),Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),CRS )", "choosing": "Min( ( ( ( DS * ( RCSe / CS ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.675, "obj2": 0.23442313667044026}, {"determining": "( ( ( PN - Min( ( Min( BR ,Min( Min( PN ,CRS ) ,MDR ) ) + ( DDR - Const ) ) ,Const ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( Max( ( RMSe + MUC ),( ( RRSe + Min( DS ,RCSe ) ) * DS ) ),MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 0.975, "obj2": 0.010112106417612537}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),Max( ( RRSe / RRSe ),( MUC - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Max( ACS,MDR ) )", "choosing": "Min( ( MUM + MUC ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Const ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RMSe ,RCSe ) * Max( MUR,( Min( RMSe ,RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - Const ) ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( ( ( ( MLU + MLU ) / RMSe ) - RRSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ( AMS + ( AMS / ( FirstVNF_Mem_Server + BR ) ) ) ) / FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,Max( CRS,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + ( DS * MUM ) ) - ( CS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( RRS,Max( FirstVNF_RAM_Server,( FirstVNF_Mem_Server / Const ) ) ) ) - ( CRS * ( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( DS + DS ),( RRSe * MUC ) ) ,Max( ( RCSe / Min( ( RCSe - MLU ) ,( MUC + Max( RMSe,CS ) ) ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / ( ( AMS - AMS ) - Const ) ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( Max( RMSe,Max( ( MUM - ( CS - RRSe ) ),MLU ) ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( ( CS * RMSe ) + ( ( ( MUR / ( RMSe * DS ) ) * RRSe ) - MUM ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,( ACS / ( Min( BR ,BR ) / ( ( AMS - ( PN / FirstVNF_Mem ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,MUM ) * MUC ) + ( RRSe - Min( Max( DS,DS ) ,Min( Max( ( Min( Min( MUC ,RCSe ) ,CS ) - CS ),MUC ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - ( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + ( DS - CS ) ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( ( FirstVNF_CPU_Server + MDR ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - ( MUC - MUR ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( BR / FirstVNF_CPU_Server ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUR + Max( ( CS - DS ),RCSe ) ) / ( RRSe + ( MUM / MLU ) ) ) + Min( Max( RMSe,RMSe ) ,MUC ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( RRS / Max( MRS,FirstVNF_Mem_Server ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RCSe / ( Min( RCSe ,MLU ) - ( RCSe - ( DS * RRSe ) ) ) ),( ( MUR - CS ) + MLU ) ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( ( BR * ( ( ACS / AMS ) - MRS ) ) + DDR ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + ( RMSe * ( ( RMSe / RMSe ) * RRSe ) ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( FirstVNF_Mem * PN ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / Max( ( RMSe * ( MUC * ( RRSe + MUR ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( ( ACS + FirstVNF_Mem ) * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( Min( ( MUC / Max( ( MUR / RRSe ),CS ) ) ,RCSe ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( Max( MRS,ARS ) ,( Max( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( RRSe / DS ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RCSe - MUM ) / ( MUR - MUR ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + CRS ) - ( Max( MDR,( CRS / ACS ) ) - Max( PN,CRS ) ) )", "choosing": "( Max( ( Max( RCSe,RRSe ) - ( Max( MUC,Max( MUM,DS ) ) * DS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( RMSe * RMSe ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * ( FirstVNF_CPU * ( ( ACS - ( FirstVNF_Mem_Server - ARS ) ) / DDR ) ) ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( CS * DS ) + DS ) * ( ( RCSe * ( CS - Min( RRSe ,MUM ) ) ) / MUR ) ),MUR ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / ( ( ( Max( ( RCSe / DS ),CS ) - ( RRSe - MUM ) ) * MUM ) - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( CS + RRSe ) * ( DS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS + DS ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + Max( PN,Const ) ) )", "choosing": "( ( MUC - RMSe ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / RRS ) - Max( FirstVNF_CPU,( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( Max( Min( MUM ,RRSe ),( DS + DS ) ) * ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem * CRS ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * ( CS / DS ) ) ) ,Max( ( RCSe / Min( CS ,MLU ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) + Min( ( Min( FirstVNF_RAM_Server ,MRS ) - ( ARS + ARS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( RMSe,MUR ) ,( MUC * RMSe ) ) + ( CS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - ( FirstVNF_RAM_Server + Max( Const,( CRS / ( ( ( FirstVNF_RAM * CRS ) * FirstVNF_CPU ) + Max( AMS,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUR ) * MUR ) - Min( CS ,MLU ) ) - ( ( DS / ( ( RRSe * RMSe ) / ( MUR / Max( ( MLU - RCSe ),MUR ) ) ) ) * ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + AMS ) * AMS ) + ( CRS + AMS ) )", "choosing": "( ( MUR / DS ) * Min( RRSe ,( ( RRSe / RCSe ) + ( MUR - ( ( ( ( MUC / MLU ) * MUM ) - ( ( RCSe * RRSe ) / DS ) ) * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( Const - ( RRS / MDR ) ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * ( Min( RRSe ,DS ) - ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( AMS + FirstVNF_CPU ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,( ( ( MUC / ( MLU / MLU ) ) / ( MUR / Min( ( CS / ( DS + MUM ) ) ,( MUR - ( CS + MLU ) ) ) ) ) + Min( RMSe ,RMSe ) ) ) ,( ( ( Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) - MUM ) / ( CS + DS ) ) * Max( ( Min( ( MLU + MLU ) ,RRSe ) * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * Max( PN,Const ) )", "choosing": "( ( Min( Min( ( ( ( RRSe - ( MUR * MLU ) ) + CS ) - Min( RRSe ,( MUC - Min( RRSe ,RRSe ) ) ) ) ,MUR ) ,Max( RMSe,( MUC + ( RMSe / ( ( DS * DS ) - ( MUC - CS ) ) ) ) ) ) + ( MUC * MLU ) ) + ( MUM - ( DS - Min( ( MLU - RMSe ) ,( Min( Min( MUR ,( MUC / RRSe ) ) ,MUM ) + ( DS + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS - ( DDR + FirstVNF_CPU ) ) / RRS ) ,BR ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( Max( DS,RRSe ) * ( ( RMSe - CS ) - ( DS / ( ( ( DS - CS ) - CS ) - RRSe ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - MDR )", "choosing": "( ( RMSe + DS ) - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,DDR ) - ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) ) ) ,( Max( ACS,RRS ) + ( ( Const - RRS ) * MDR ) ) )", "choosing": "( Min( Min( MUC ,RCSe ) ,( Max( DS,CS ) * CS ) ) / Max( ( CS - MUM ),( ( CS / CS ) * Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Min( FirstVNF_RAM_Server ,Const ) ,Const ) )", "choosing": "( Min( ( MUM - MUC ) ,RCSe ) * ( Min( MLU ,RRSe ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( ( ( PN - ACS ) - Min( Const ,Max( AMS,MRS ) ) ) / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( Min( RMSe ,( RRSe + MUR ) ) * ( RCSe - RRSe ) ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( ( RRSe * MLU ) + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),RRS ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - MUM ) / ( ( MUC / RMSe ) + ( ( ( DS / ( MLU + MLU ) ) * RMSe ) / Max( MUM,MUM ) ) ) ) / ( ( MUR - MUR ) - ( ( ( ( ( MUR * MLU ) * RRSe ) - MUC ) * RMSe ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - Const ) ) - ( ( ( FirstVNF_Mem * ( ( RRS / CRS ) * FirstVNF_Mem ) ) / AMS ) / Max( Const,FirstVNF_Mem ) ) )", "choosing": "Min( Max( MUC,( RRSe * MUC ) ) ,Max( ( MUC - RMSe ),Min( RCSe ,( ( CS - MUC ) - ( RMSe - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / ( ( ( AMS - ACS ) / BR ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ) - ( FirstVNF_RAM_Server + Min( Const ,Max( RRS,RRS ) ) ) ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUR * ( ( ( RCSe + RMSe ) + MUC ) - RMSe ) ) * MLU ),( ( CS / MUC ) + Min( Max( Min( MLU ,RMSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( Min( CRS ,AMS ) - Const ) ) ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( DS + ( RMSe / ( MUM - ( RRSe - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Max( ACS,Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( RMSe - RRSe ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( MUM ,( Min( MUC ,RMSe ) - ( CS / Max( DS,( RMSe - MUC ) ) ) ) ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),( Min( Max( Const,( PN - MRS ) ) ,RRS ) / PN ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( Min( Min( MUC ,DS ) ,Max( RRSe,MUC ) ) * ( ( RCSe * RCSe ) * MUC ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( Max( Min( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) ,FirstVNF_Mem ),( ACS / AMS ) ) - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( RMSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - ( ACS * Const ) ),( DDR - AMS ) ) - Max( Min( ( FirstVNF_RAM / BR ) ,Const ),FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUC * MLU ),( ( CS / MUC ) + ( DS * Min( CS ,( ( MLU * MUC ) * ( RCSe + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( ( Max( ( FirstVNF_RAM_Server * FirstVNF_CPU ),( BR * FirstVNF_CPU ) ) + Min( BR ,ACS ) ) * Min( Const ,FirstVNF_Mem ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RMSe / MUR ) + ( Min( MUC ,Max( RCSe,Max( MUR,DS ) ) ) + CS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - Min( MDR ,FirstVNF_CPU ) ) / ( ( PN + FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - Max( RMSe,( MUR * ( MUM * ( MUR * ( MLU - RMSe ) ) ) ) ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - CRS ),FirstVNF_Mem_Server ) / ( RRS - ( FirstVNF_Mem * CRS ) ) )", "choosing": "( Max( MLU,MUC ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) )", "choosing": "( ( RCSe + RMSe ) + ( ( DS - ( ( RRSe / MUC ) * Min( Min( MUC ,Min( ( DS * MLU ) ,MUC ) ) ,RMSe ) ) ) + Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * FirstVNF_Mem_Server ) ,Min( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,RCSe ),Max( ( ( MUR + RRSe ) + ( MUR + CS ) ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS - ( ( ACS / ( ( FirstVNF_CPU * ( MDR + FirstVNF_CPU ) ) + ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * Max( MDR,RRS ) ) * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) + ( FirstVNF_RAM_Server / Min( ( ( BR / ( FirstVNF_RAM_Server / AMS ) ) / FirstVNF_CPU ) ,PN ) ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( MUM / ( RCSe - DS ) ) ,Min( ( MLU + Min( Min( ( MUR * ( CS - MUC ) ) ,( DS / MUM ) ) ,( ( MLU * MLU ) + RMSe ) ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,Const ) + ( DDR - Const ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + Min( ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) ,Min( ( ( CS / DS ) * ( RRSe / RRSe ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( ( DDR - PN ) - ( ( ( ARS * Const ) * CRS ) + PN ) ) / ( ( Const - ACS ) * ( CRS / ACS ) ) ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,( CS * Min( Min( ( ( RCSe + RCSe ) * MUC ) ,MUM ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( Min( ( ( CS / MUR ) / ( MUM - RCSe ) ) ,Max( ( RCSe - DS ),( CS + MLU ) ) ) + Max( ( CS * RMSe ),( ( MUM + MLU ) * ( MUC * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( ( CRS - DDR ) + ( ( FirstVNF_RAM_Server + ( BR * ARS ) ) * DDR ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( Min( CS ,RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server * ( CRS - CRS ) ) - DDR ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,MRS ) ) )", "choosing": "( Max( ( CS / CS ),RRSe ) - Max( Min( DS ,MLU ),( ( RCSe / MUM ) * ( RRSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,AMS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) ) / ( ( Const - ACS ) * ( CRS / ACS ) ) ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( Max( Min( MLU ,RMSe ),( RRSe * MUC ) ) + RMSe ) ) ,Min( ( ( CS / DS ) * ( RRSe / RRSe ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * ( CRS - CRS ) ) - DDR ) ,ARS ) - ( ( RRS / AMS ) / Max( Const,FirstVNF_Mem ) ) )", "choosing": "Min( Max( MUC,( RRSe * MUC ) ) ,Max( ( Max( ( CS / CS ),RRSe ) - Max( Min( DS ,MLU ),( ( RCSe / MUM ) * ( RRSe + RRSe ) ) ) ),Min( RCSe ,( ( CS - MUC ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),( ( FirstVNF_RAM + ( ACS / ARS ) ) + Max( ACS,( Const / DDR ) ) ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( Max( Max( RCSe,DS ),( Min( MUM ,( MLU + RRSe ) ) / MUC ) ) + Min( MUM ,MLU ) ) - RMSe ) * ( RCSe + ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( DS ,RRSe ) + RMSe ) )", "obj1": 0.6326923076923077, "obj2": 0.2792038003788276}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( AMS - ( AMS - ( MDR * ARS ) ) ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUC / ( MLU / MLU ) ) / ( Min( RCSe ,RRSe ) / MUM ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.7826923076923077, "obj2": 0.1252636819455867}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) - Min( MDR ,FirstVNF_CPU ) ) / ( ( PN + FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( RMSe + DS ) - RCSe ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 0.8519230769230769, "obj2": 0.11380071629218572}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Max( ( Min( ( Max( AMS,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) * ARS ) )", "choosing": "Min( ( MLU + ( RCSe - ( RMSe - Max( MLU,Max( MUM,( Min( RMSe ,MUC ) / RRSe ) ) ) ) ) ) ,Min( Min( ( RRSe / MUR ) ,( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ,( CS * CS ) ) )", "obj1": 0.8788461538461538, "obj2": 0.10012705748876254}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server * ( CRS - CRS ) ) - DDR ) ,ARS ) - ( ( DDR - Min( DDR ,( ( FirstVNF_CPU_Server / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / Const ) ) ) - Max( FirstVNF_CPU_Server,AMS ) ) ) * ( FirstVNF_Mem_Server / Min( RRS ,MRS ) ) )", "choosing": "( Max( ( CS / CS ),RRSe ) - Max( Min( DS ,Min( MUM ,MLU ) ),( ( RCSe / MUM ) * ( ( DS * DS ) - ( MUC - CS ) ) ) ) )", "obj1": 0.8826923076923077, "obj2": 0.0523806654803407}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( RRS,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) )", "choosing": "Min( Max( ( DS + DS ),Min( Min( MUC ,Min( ( DS * MLU ) ,MUC ) ) ,RMSe ) ) ,Max( ( RCSe / Min( ( RCSe - MLU ) ,MUC ) ),Min( RCSe ,CS ) ) )", "obj1": 0.9634615384615385, "obj2": 0.023514882825414397}, {"determining": "( FirstVNF_RAM_Server - Max( ( ( CRS - DDR ) + ( ( DDR - Min( DDR ,( MRS / Const ) ) ) - Max( FirstVNF_CPU_Server,AMS ) ) ),MDR ) )", "choosing": "Max( ( Min( Min( ( ( ( RRSe - ( MUR * MLU ) ) + CS ) - Min( RRSe ,( MUC - Min( RRSe ,RRSe ) ) ) ) ,MUR ) ,Max( RMSe,( MUC + ( RMSe / ( ( DS * DS ) - ( MUC - CS ) ) ) ) ) ) + ( MUC * MLU ) ),( ( RCSe / MUC ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) )", "obj1": 0.7269230769230769, "obj2": 0.1859656103981954}, {"determining": "( FirstVNF_RAM_Server - Max( ( ( CRS - DDR ) + ( ( DDR - Min( DDR ,( MRS / ( ACS / FirstVNF_Mem_Server ) ) ) ) - Max( FirstVNF_CPU_Server,AMS ) ) ),MDR ) )", "choosing": "Max( ( Min( Min( RMSe ,MUR ) ,Max( RMSe,( MUC + ( RMSe / ( ( DS * DS ) - ( MUC - CS ) ) ) ) ) ) + ( MUC * MLU ) ),( ( RCSe / MUC ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) )", "obj1": 0.7423076923076923, "obj2": 0.16117990167606883}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 0.75, "obj2": 0.13978163993626674}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + MDR ),FirstVNF_Mem_Server ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( RMSe - ( RCSe - DS ) ) + CS ) ) ) + ( ( Min( MUM ,DS ) - ( MUC - MUR ) ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 0.7653846153846153, "obj2": 0.1282865883247607}, {"determining": "Max( ( ( DDR * ( FirstVNF_CPU + BR ) ) + ( BR / PN ) ),( Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( MLU * ( Min( MUM ,RCSe ) / MLU ) ) + MUR ) )", "obj1": 0.6346153846153846, "obj2": 0.2674964600506748}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( AMS ,MDR ) ) - CRS ) ) - DDR ) / ( Max( Min( ( FirstVNF_RAM / BR ) ,Const ),FirstVNF_CPU_Server ) / CRS ) )", "choosing": "Max( ( Min( Min( CS ,( ( MLU * MUC ) * ( RCSe + RCSe ) ) ) ,RRSe ) + ( CS - ( ( ( MUR / ( RMSe * DS ) ) * RRSe ) - MUM ) ) ),( MUR * RMSe ) )", "obj1": 0.9365384615384615, "obj2": 0.027909970900787368}, {"determining": "( ( ( FirstVNF_RAM_Server * MDR ) + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) - MRS )", "choosing": "( ( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( RMSe * ( MUM + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ) * ( DS - ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ) )", "obj1": 0.6615384615384615, "obj2": 0.23695263981874568}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Max( ( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ,BR ) / Min( ( DDR + ( CRS + FirstVNF_Mem ) ) ,FirstVNF_RAM ) ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) * ARS ) )", "choosing": "Min( ( MLU + ( RCSe - ( RMSe - Max( MLU,Max( MUM,( Max( RCSe,RRSe ) / RRSe ) ) ) ) ) ) ,Min( Min( ( RRSe / MUR ) ,( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ,( CS * CS ) ) )", "obj1": 0.8673076923076923, "obj2": 0.10127989538028936}, {"determining": "( FirstVNF_RAM_Server - Max( ( ( Max( ACS,DDR ) / FirstVNF_CPU_Server ) * DDR ),MDR ) )", "choosing": "Max( ( DS * RCSe ),( Min( RMSe ,RCSe ) * ( RCSe - RRSe ) ) )", "obj1": 0.7442307692307693, "obj2": 0.15477304244214093}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ),FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( Max( Max( RCSe,( ( MLU - Min( MLU ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Max( MLU,MUC ) - MLU ),( DS / RCSe ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.7096153846153846, "obj2": 0.19717345912343556}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ),CRS )", "choosing": "Min( ( ( ( DS * ( Min( RMSe ,CS ) - Max( RCSe,MLU ) ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.65, "obj2": 0.24592436295225534}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( RRS + RRS ) ) ) - DDR ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( RRSe / RCSe ) + ( MUR - DS ) ) - CS ) ),( ( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) * RMSe ) )", "obj1": 0.9115384615384615, "obj2": 0.0381982228901757}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server - Max( ( ( CRS - DDR ) + ( ( DDR - Min( DDR ,( MRS / Const ) ) ) - Max( FirstVNF_CPU_Server,AMS ) ) ),MDR ) ) )", "choosing": "( ( RCSe + RMSe ) + ( ( DS - ( ( RRSe / MUC ) * Min( Min( MUC ,Min( ( DS * DS ) ,MUC ) ) ,RMSe ) ) ) + Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ) ) )", "obj1": 0.7153846153846154, "obj2": 0.18671319032304665}, {"determining": "Max( Max( ( FirstVNF_RAM - MRS ),Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),CRS )", "choosing": "Min( ( ( ( DS * ( RCSe + ( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) ) ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.6423076923076924, "obj2": 0.2513937454547555}, {"determining": "( Min( FirstVNF_Mem ,MRS ) / ( ( FirstVNF_Mem / Max( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ),CRS ) ) * ARS ) )", "choosing": "Min( ( MLU + ( RCSe - ( RMSe - Max( MLU,Max( MUM,( Min( RMSe ,CS ) / RRSe ) ) ) ) ) ) ,Min( Min( ( RRSe / MUR ) ,( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ,( CS * ( DS * ( Min( RMSe ,CS ) - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.8576923076923076, "obj2": 0.11300880774209994}, {"determining": "( ( AMS - DDR ) - MDR )", "choosing": "( ( RMSe + RMSe ) - RCSe )", "obj1": 0.9, "obj2": 0.04476290225101769}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,MDR ) ) - DDR ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( RRSe / RCSe ) + ( MUR - DS ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.926923076923077, "obj2": 0.03169334899558314}, {"determining": "( Max( DDR,ARS ) * ( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( Max( Max( ( DS * Max( ( RCSe * RMSe ),Max( ( RRSe / RRSe ),( MUC - CS ) ) ) ),( ( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Max( DS,MUC ) - MLU ),( DS / RCSe ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.698076923076923, "obj2": 0.2005693896835154}, {"determining": "( Max( Min( MRS ,( FirstVNF_CPU * ( MRS * ( Max( FirstVNF_Mem,BR ) - BR ) ) ) ),FirstVNF_Mem_Server ) * ( ACS + MDR ) )", "choosing": "Max( Max( Max( RCSe,( ( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Min( RMSe ,MLU ) * MLU ),Min( ( RMSe - DS ) ,Min( CS ,DS ) ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.6942307692307692, "obj2": 0.21182804452185702}, {"determining": "( Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) - ( Const + Const ) )", "choosing": "( ( DS * ( ( ( RMSe - ( Max( MLU,MUC ) / MUR ) ) / Min( MLU ,( RCSe - CS ) ) ) + ( ( Min( MLU ,RMSe ) + MUC ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 0.6903846153846154, "obj2": 0.21441338414683567}, {"determining": "( ( ( FirstVNF_RAM_Server * MDR ) + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) - MRS )", "choosing": "( ( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( RMSe * ( MUM + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ) * ( DS - ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ) )", "obj1": 0.6826923076923077, "obj2": 0.23349066586042533}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( Min( ( Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( Min( Min( MUC ,DS ) ,Max( RRSe,MUC ) ) * ( ( RCSe * RCSe ) * MUC ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) ) + RMSe ) ,Min( DS ,MUR ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6884615384615385, "obj2": 0.2267661092022016}, {"determining": "( ( ( PN - Min( ( Min( BR ,Min( Min( PN ,CRS ) ,MDR ) ) + ( DDR - Const ) ) ,Const ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( Max( ( RMSe + MUC ),( ( RRSe + Min( DS ,RCSe ) ) * DS ) ),MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 0.975, "obj2": 0.010112106417612537}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) - Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( CS + RRSe ) * ( DS - ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ) )", "obj1": 0.9788461538461538, "obj2": 0.0066984083348627325}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( ACS - MDR ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),( ( RCSe / MUM ) * CS ) ) )", "obj1": 0.9076923076923077, "obj2": 0.04215878983445066}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) ) )", "obj1": 0.8903846153846153, "obj2": 0.0494266847231669}, {"determining": "( ( ( PN - Min( ( Min( BR ,Const ) + ( DDR - Const ) ) ,Const ) ) - DDR ) / Max( ACS,Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUC ) ) ) )", "obj1": 0.975, "obj2": 0.010112106417612537}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( AMS - Min( MRS ,MDR ) ) - Max( FirstVNF_CPU,CRS ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUC / ( MLU / MLU ) ) / ( MUR / Min( ( CS / ( RRSe + MUM ) ) ,( MUR - ( CS + MLU ) ) ) ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.9884615384615385, "obj2": 0.004446895359994399}, {"determining": "Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),FirstVNF_RAM_Server ),CRS )", "choosing": "Min( ( ( MUM + DS ) - ( CS / RRSe ) ) ,( ( ( MUM - MUC ) - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.6442307692307693, "obj2": 0.2504812165626008}, {"determining": "Max( ( ( CRS - DDR ) + ( ( FirstVNF_RAM_Server + ( BR * ARS ) ) * DDR ) ),CRS )", "choosing": "Min( ( ( ( DS * ( RCSe + Min( CS ,RMSe ) ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.675, "obj2": 0.23442313667044026}, {"determining": "( ( ( FirstVNF_Mem_Server * ( RRS + ( CRS / ( PN / AMS ) ) ) ) - DDR ) / ( MDR / ( ( FirstVNF_RAM_Server * MDR ) + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( ( RMSe * ( MUM + Max( RMSe,RRSe ) ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) + ( MUR - DS ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.9288461538461539, "obj2": 0.03101577642788916}, {"determining": "( ( ( Const * ( BR / Min( ( Max( AMS,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ,Max( MRS,MDR ) ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUR + Max( ( RCSe - DS ),RCSe ) ) / ( RRSe + ( MUM / MLU ) ) ) + Min( Max( RMSe,RMSe ) ,MUC ) ) ),Max( MUC,( ( RCSe / MUC ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0008911635083547241}, {"determining": "( Min( ( ( ACS - ( DDR + FirstVNF_CPU ) ) / ( Min( CRS ,AMS ) - Const ) ) ,BR ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( Max( DS,RRSe ) * ( ( RMSe - CS ) - ( MUM - ( RRSe - MUC ) ) ) ) ) - CS )", "obj1": 0.9903846153846154, "obj2": 0.0037111614117027094}, {"determining": "Max( ( ( Min( ( Max( FirstVNF_Mem,( FirstVNF_RAM - ( ARS - AMS ) ) ) + ( RRS + RRS ) ) ,BR ) / Min( ( DDR + ( CRS + FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server + ( BR * ARS ) ) * DDR ) ),CRS )", "choosing": "Min( Min( Min( ( RRSe / MUR ) ,( RRSe - Max( RCSe,Min( RMSe ,Max( MUR,( RRSe + RMSe ) ) ) ) ) ) ,( CS * CS ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.675, "obj2": 0.23442313667044026}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ( ( Min( FirstVNF_RAM_Server ,( ( MDR / CRS ) / FirstVNF_RAM_Server ) ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( Min( ( Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( Min( Min( MUC ,DS ) ,Max( RRSe,MUC ) ) * ( ( RCSe * RCSe ) * MUC ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) ) + RMSe ) ,Min( DS ,MUR ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( Min( CS ,MUR ) ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6884615384615385, "obj2": 0.2267661092022016}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / ( Max( PN,Const ) / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - ( RCSe + RRSe ) ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) ) )", "obj1": 0.8846153846153846, "obj2": 0.05114133166965617}, {"determining": "( Max( Min( MRS ,( FirstVNF_CPU * ( MRS * ( Max( FirstVNF_Mem,BR ) - BR ) ) ) ),FirstVNF_Mem_Server ) * ( ACS + MDR ) )", "choosing": "Max( Max( Max( RCSe,( ( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Min( RMSe ,MLU ) * MLU ),Min( ( RMSe - DS ) ,Min( CS ,DS ) ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.698076923076923, "obj2": 0.2005693896835154}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / Max( PN,Const ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( ( ( ( MUC - RMSe ) * RMSe ) * RRSe ) ,MUR ) ) )", "obj1": 0.8884615384615384, "obj2": 0.05029895600180025}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( ( DDR - PN ) - ( DDR / FirstVNF_CPU_Server ) ) / ( ( Const - ACS ) * ( CRS / ACS ) ) ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,Min( ( ( CS / DS ) * Min( RCSe ,MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),Max( ( RRSe / RRSe ),( MUC - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Max( ACS,MDR ) )", "choosing": "Min( ( MUM + MUC ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Const ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RMSe ,RCSe ) * Max( MUR,( Min( RMSe ,RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - Const ) ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( ( ( ( MLU + MLU ) / RMSe ) - RRSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ( AMS + ( AMS / ( FirstVNF_Mem_Server + BR ) ) ) ) / FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,Max( CRS,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + ( DS * MUM ) ) - ( CS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( RRS,Max( FirstVNF_RAM_Server,( FirstVNF_Mem_Server / Const ) ) ) ) - ( CRS * ( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( DS + DS ),( RRSe * MUC ) ) ,Max( ( RCSe / Min( ( RCSe - MLU ) ,( MUC + Max( RMSe,CS ) ) ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / ( ( AMS - AMS ) - Const ) ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( Max( RMSe,Max( ( MUM - ( CS - RRSe ) ),MLU ) ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( ( CS * RMSe ) + ( ( ( MUR / ( RMSe * DS ) ) * RRSe ) - MUM ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,( ACS / ( Min( BR ,BR ) / ( ( AMS - ( PN / FirstVNF_Mem ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,MUM ) * MUC ) + ( RRSe - Min( Max( DS,DS ) ,Min( Max( ( Min( Min( MUC ,RCSe ) ,CS ) - CS ),MUC ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - ( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + ( DS - CS ) ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( ( FirstVNF_CPU_Server + MDR ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - ( MUC - MUR ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( BR / FirstVNF_CPU_Server ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUR + Max( ( CS - DS ),RCSe ) ) / ( RRSe + ( MUM / MLU ) ) ) + Min( Max( RMSe,RMSe ) ,MUC ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( RRS / Max( MRS,FirstVNF_Mem_Server ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RCSe / ( Min( RCSe ,MLU ) - ( RCSe - ( DS * RRSe ) ) ) ),( ( MUR - CS ) + MLU ) ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( ( BR * ( ( ACS / AMS ) - MRS ) ) + DDR ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + ( RMSe * ( ( RMSe / RMSe ) * RRSe ) ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( FirstVNF_Mem * PN ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / Max( ( RMSe * ( MUC * ( RRSe + MUR ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( ( ACS + FirstVNF_Mem ) * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( Min( ( MUC / Max( ( MUR / RRSe ),CS ) ) ,RCSe ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( Max( MRS,ARS ) ,( Max( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( RRSe / DS ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RCSe - MUM ) / ( MUR - MUR ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + CRS ) - ( Max( MDR,( CRS / ACS ) ) - Max( PN,CRS ) ) )", "choosing": "( Max( ( Max( RCSe,RRSe ) - ( Max( MUC,Max( MUM,DS ) ) * DS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( RMSe * RMSe ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * ( FirstVNF_CPU * ( ( ACS - ( FirstVNF_Mem_Server - ARS ) ) / DDR ) ) ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( CS * DS ) + DS ) * ( ( RCSe * ( CS - Min( RRSe ,MUM ) ) ) / MUR ) ),MUR ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / ( ( ( Max( ( RCSe / DS ),CS ) - ( RRSe - MUM ) ) * MUM ) - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( CS + RRSe ) * ( DS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS + DS ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + Max( PN,Const ) ) )", "choosing": "( ( MUC - RMSe ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / RRS ) - Max( FirstVNF_CPU,( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( Max( Min( MUM ,RRSe ),( DS + DS ) ) * ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem * CRS ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * ( CS / DS ) ) ) ,Max( ( RCSe / Min( CS ,MLU ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) + Min( ( Min( FirstVNF_RAM_Server ,MRS ) - ( ARS + ARS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( RMSe,MUR ) ,( MUC * RMSe ) ) + ( CS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - ( FirstVNF_RAM_Server + Max( Const,( CRS / ( ( ( FirstVNF_RAM * CRS ) * FirstVNF_CPU ) + Max( AMS,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUR ) * MUR ) - Min( CS ,MLU ) ) - ( ( DS / ( ( RRSe * RMSe ) / ( MUR / Max( ( MLU - RCSe ),MUR ) ) ) ) * ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + AMS ) * AMS ) + ( CRS + AMS ) )", "choosing": "( ( MUR / DS ) * Min( RRSe ,( ( RRSe / RCSe ) + ( MUR - ( ( ( ( MUC / MLU ) * MUM ) - ( ( RCSe * RRSe ) / DS ) ) * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( Const - ( RRS / MDR ) ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * ( Min( RRSe ,DS ) - ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( AMS + FirstVNF_CPU ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,( ( ( MUC / ( MLU / MLU ) ) / ( MUR / Min( ( CS / ( DS + MUM ) ) ,( MUR - ( CS + MLU ) ) ) ) ) + Min( RMSe ,RMSe ) ) ) ,( ( ( Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) - MUM ) / ( CS + DS ) ) * Max( ( Min( ( MLU + MLU ) ,RRSe ) * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * Max( PN,Const ) )", "choosing": "( ( Min( Min( ( ( ( RRSe - ( MUR * MLU ) ) + CS ) - Min( RRSe ,( MUC - Min( RRSe ,RRSe ) ) ) ) ,MUR ) ,Max( RMSe,( MUC + ( RMSe / ( ( DS * DS ) - ( MUC - CS ) ) ) ) ) ) + ( MUC * MLU ) ) + ( MUM - ( DS - Min( ( MLU - RMSe ) ,( Min( Min( MUR ,( MUC / RRSe ) ) ,MUM ) + ( DS + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS - ( DDR + FirstVNF_CPU ) ) / RRS ) ,BR ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( Max( DS,RRSe ) * ( ( RMSe - CS ) - ( DS / ( ( ( DS - CS ) - CS ) - RRSe ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - MDR )", "choosing": "( ( RMSe + DS ) - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,DDR ) - ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) ) ) ,( Max( ACS,RRS ) + ( ( Const - RRS ) * MDR ) ) )", "choosing": "( Min( Min( MUC ,RCSe ) ,( Max( DS,CS ) * CS ) ) / Max( ( CS - MUM ),( ( CS / CS ) * Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Min( FirstVNF_RAM_Server ,Const ) ,Const ) )", "choosing": "( Min( ( MUM - MUC ) ,RCSe ) * ( Min( MLU ,RRSe ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( ( ( PN - ACS ) - Min( Const ,Max( AMS,MRS ) ) ) / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( Min( RMSe ,( RRSe + MUR ) ) * ( RCSe - RRSe ) ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( ( RRSe * MLU ) + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),RRS ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - MUM ) / ( ( MUC / RMSe ) + ( ( ( DS / ( MLU + MLU ) ) * RMSe ) / Max( MUM,MUM ) ) ) ) / ( ( MUR - MUR ) - ( ( ( ( ( MUR * MLU ) * RRSe ) - MUC ) * RMSe ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - Const ) ) - ( ( ( FirstVNF_Mem * ( ( RRS / CRS ) * FirstVNF_Mem ) ) / AMS ) / Max( Const,FirstVNF_Mem ) ) )", "choosing": "Min( Max( MUC,( RRSe * MUC ) ) ,Max( ( MUC - RMSe ),Min( RCSe ,( ( CS - MUC ) - ( RMSe - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / ( ( ( AMS - ACS ) / BR ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ) - ( FirstVNF_RAM_Server + Min( Const ,Max( RRS,RRS ) ) ) ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUR * ( ( ( RCSe + RMSe ) + MUC ) - RMSe ) ) * MLU ),( ( CS / MUC ) + Min( Max( Min( MLU ,RMSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( Min( CRS ,AMS ) - Const ) ) ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( DS + ( RMSe / ( MUM - ( RRSe - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Max( ACS,Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( RMSe - RRSe ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( MUM ,( Min( MUC ,RMSe ) - ( CS / Max( DS,( RMSe - MUC ) ) ) ) ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),( Min( Max( Const,( PN - MRS ) ) ,RRS ) / PN ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( Min( Min( MUC ,DS ) ,Max( RRSe,MUC ) ) * ( ( RCSe * RCSe ) * MUC ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( Max( Min( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) ,FirstVNF_Mem ),( ACS / AMS ) ) - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( RMSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - ( ACS * Const ) ),( DDR - AMS ) ) - Max( Min( ( FirstVNF_RAM / BR ) ,Const ),FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUC * MLU ),( ( CS / MUC ) + ( DS * Min( CS ,( ( MLU * MUC ) * ( RCSe + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( ( Max( ( FirstVNF_RAM_Server * FirstVNF_CPU ),( BR * FirstVNF_CPU ) ) + Min( BR ,ACS ) ) * Min( Const ,FirstVNF_Mem ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RMSe / MUR ) + ( Min( MUC ,Max( RCSe,Max( MUR,DS ) ) ) + CS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - Min( MDR ,FirstVNF_CPU ) ) / ( ( PN + FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - Max( RMSe,( MUR * ( MUM * ( MUR * ( MLU - RMSe ) ) ) ) ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( DDR - PN ) - ( ACS / MDR ) )", "choosing": "( ( ( DS * MLU ) - RMSe ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),( ( FirstVNF_RAM + ( ACS / ARS ) ) + Max( ACS,( Const / DDR ) ) ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( Max( Max( RCSe,DS ),( Min( MUM ,( MLU + RRSe ) ) / MUC ) ) + Min( MUM ,MLU ) ) - RMSe ) * ( RCSe + ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( DS ,RRSe ) + RMSe ) )", "obj1": 0.6326923076923077, "obj2": 0.2792038003788276}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( AMS - ( AMS - ( MDR * ARS ) ) ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUC / ( MLU / MLU ) ) / ( Min( RCSe ,RRSe ) / MUM ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.7826923076923077, "obj2": 0.1252636819455867}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) - Min( MDR ,FirstVNF_CPU ) ) / ( ( PN + FirstVNF_CPU_Server ) * ( Max( AMS,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( RMSe + CS ) - RCSe ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 0.8461538461538461, "obj2": 0.12445382412520249}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Max( ( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ,BR ) / Min( ( ( ACS / MDR ) + ( CRS + FirstVNF_Mem ) ) ,FirstVNF_RAM ) ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) * ARS ) )", "choosing": "Min( ( MLU + ( RCSe - ( RMSe - Max( MLU,Max( MUM,( Max( RCSe,RRSe ) / ( CS * RMSe ) ) ) ) ) ) ) ,Min( Min( ( RRSe / MUR ) ,( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ,( CS * CS ) ) )", "obj1": 0.8653846153846154, "obj2": 0.10091663085994046}, {"determining": "( Max( RRS,FirstVNF_RAM ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,Max( RCSe,MUC ) ) + ( ( ( MUR * MLU ) + ( MUR - DS ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.8788461538461538, "obj2": 0.05386475414792713}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( Max( ( Max( MLU,MUC ) - MLU ),( DS / RCSe ) ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 0.7384615384615385, "obj2": 0.15237886059742886}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( Max( Const,FirstVNF_Mem ) - PN ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,Min( Max( MUC,( RRSe * MUC ) ) ,Max( ( MUC - RMSe ),Min( RCSe ,( ( CS - MUC ) - ( RMSe - CS ) ) ) ) ) ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) ) )", "obj1": 0.7307692307692307, "obj2": 0.17943614455210843}, {"determining": "( ( ( PN - Min( ( Min( ( MRS / ( ACS / FirstVNF_Mem_Server ) ) ,Const ) + ( DDR - Const ) ) ,Const ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + CS ),( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 0.9538461538461539, "obj2": 0.022385150832398042}, {"determining": "Max( ( ( DDR * ( FirstVNF_CPU + BR ) ) + ( BR / PN ) ),( Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( MLU * ( Min( MUM ,RCSe ) / MLU ) ) + MUR ) )", "obj1": 0.6346153846153846, "obj2": 0.2674964600506748}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( FirstVNF_RAM_Server - Const ) ) ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( RCSe * ( CS - Min( RRSe ,MUM ) ) ) ),( DS + ( RMSe / ( MUM - ( RRSe - MUC ) ) ) ) )", "obj1": 0.7153846153846154, "obj2": 0.18430894790294577}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + MDR ),FirstVNF_Mem_Server ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( RMSe - ( RCSe - DS ) ) + CS ) ) ) + ( ( Min( MUM ,DS ) - ( MUC - MUR ) ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 0.7653846153846153, "obj2": 0.1282865883247607}, {"determining": "( Max( Min( MRS ,( FirstVNF_CPU * ( ( FirstVNF_RAM - FirstVNF_CPU ) / AMS ) ) ),FirstVNF_Mem_Server ) * ( Const - DDR ) )", "choosing": "Max( Max( Max( ( DS * Max( ( RCSe * RMSe ),Max( ( RRSe / RRSe ),( MUC - CS ) ) ) ),( ( ( RMSe / Min( MLU ,RMSe ) ) - Min( MLU ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Max( MLU,MUC ) - MLU ),( ( RMSe + RRSe ) / RCSe ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.6692307692307692, "obj2": 0.2300406157717694}, {"determining": "( ( ( FirstVNF_RAM_Server * MDR ) + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) - MRS )", "choosing": "( ( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( RMSe * ( MUM + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ) * ( DS - ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ) )", "obj1": 0.6615384615384615, "obj2": 0.23695263981874568}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ),FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( Max( Max( RCSe,( ( MLU - Min( MLU ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Max( MLU,MUC ) - MLU ),( DS / RCSe ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.7096153846153846, "obj2": 0.19717345912343556}, {"determining": "( ( ( PN - Min( ( Min( BR ,Const ) + ( DDR - Const ) ) ,Const ) ) - DDR ) / Max( ( ( ACS * ( ( ( MRS / FirstVNF_RAM_Server ) - PN ) / ( BR / ( MRS * Const ) ) ) ) - ( FirstVNF_RAM_Server + MDR ) ),Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + CS ),( Min( ( MLU + ( RRSe * CS ) ) ,( Min( ( RCSe * ( MUC - RCSe ) ) ,( RCSe + MLU ) ) * RCSe ) ) + ( Max( MLU,MUC ) / ( RCSe * MUC ) ) ) )", "obj1": 0.9730769230769231, "obj2": 0.013038415375326549}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( Min( ( Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( Min( Min( MUC ,DS ) ,Max( RRSe,MUC ) ) * ( ( RCSe * RCSe ) * MUC ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) ) + RMSe ) ,Min( DS ,MUR ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6884615384615385, "obj2": 0.2267661092022016}, {"determining": "( Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) - ( Const + Const ) )", "choosing": "( ( DS * ( ( ( RMSe - ( Max( MLU,MUC ) / MUR ) ) / Min( MLU ,( RCSe - CS ) ) ) + ( ( Min( MLU ,RMSe ) + MUC ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 0.6903846153846154, "obj2": 0.21441338414683567}, {"determining": "Max( Max( ( FirstVNF_RAM - MRS ),Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),CRS )", "choosing": "Min( ( ( ( DS * ( RCSe + ( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) ) ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.6423076923076924, "obj2": 0.2513937454547555}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 0.7538461538461538, "obj2": 0.13605594287740205}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( AMS ,MDR ) ) - CRS ) ) - DDR ) / ( Max( Min( ( FirstVNF_RAM / BR ) ,Const ),FirstVNF_CPU_Server ) / CRS ) )", "choosing": "Max( ( Min( Min( CS ,( ( MLU * MUC ) * ( RCSe + RCSe ) ) ) ,RRSe ) + ( CS - ( ( ( MUR / ( RMSe * DS ) ) * RRSe ) - MUM ) ) ),( MUR * RMSe ) )", "obj1": 0.9365384615384615, "obj2": 0.027909970900787368}, {"determining": "Min( AMS ,( FirstVNF_RAM + DDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( Max( Max( MUR,Min( Max( ( ( MUR * RRSe ) + ( DS - MUC ) ),RMSe ) ,( ( MUR - ( DS + MLU ) ) - MUM ) ) ),Max( MLU,Min( RMSe ,MUM ) ) ) ,( DS * MLU ) ) )", "obj1": 0.7480769230769231, "obj2": 0.14248755781376735}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) - Min( MDR ,FirstVNF_CPU ) ) / ( ( PN + FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( RMSe + DS ) - RCSe ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 0.8519230769230769, "obj2": 0.11380071629218572}, {"determining": "( Max( Min( MRS ,( FirstVNF_CPU * ( MRS * ( Max( ( FirstVNF_RAM_Server + DDR ),BR ) - BR ) ) ) ),FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( Max( Max( RCSe,( ( ( RMSe / Min( MUC ,RMSe ) ) - Min( Min( MUC ,RCSe ) ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Max( MLU,MUC ) - MLU ),( DS / RCSe ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.6942307692307692, "obj2": 0.20486234452811247}, {"determining": "( ( AMS - DDR ) - MDR )", "choosing": "( ( RMSe + RMSe ) - RCSe )", "obj1": 0.9, "obj2": 0.04476290225101769}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( AMS ,MDR ) ) - ( DDR - DDR ) ) ) - DDR ) / ( Max( Min( ( FirstVNF_RAM / BR ) ,Const ),FirstVNF_CPU_Server ) / CRS ) )", "choosing": "Max( ( Min( Min( CS ,( ( MLU * MUC ) * ( RCSe + RCSe ) ) ) ,RRSe ) + ( ( RMSe + DS ) - RCSe ) ),( MUR * RMSe ) )", "obj1": 0.9153846153846154, "obj2": 0.03789322801846065}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ARS ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Max( ( ( MDR / RRS ) - Max( FirstVNF_CPU,( FirstVNF_CPU_Server + ACS ) ) ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) * ARS ) )", "choosing": "Min( ( MLU + ( RCSe - ( RMSe - Max( MLU,Max( MUM,( Max( RCSe,RRSe ) / RRSe ) ) ) ) ) ) ,Min( Min( ( RRSe / MUR ) ,( RRSe - Max( RCSe,MUR ) ) ) ,( CS * CS ) ) )", "obj1": 0.8615384615384616, "obj2": 0.10473378899585287}, {"determining": "( Min( FirstVNF_Mem ,MRS ) / ( ( FirstVNF_Mem / Max( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ),CRS ) ) * ARS ) )", "choosing": "Min( ( MLU + ( RCSe - ( RMSe - Max( MLU,Max( MUM,( Min( RMSe ,CS ) / RRSe ) ) ) ) ) ) ,Min( Min( ( RRSe / MUR ) ,( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ,( CS * ( DS * ( Min( RMSe ,CS ) - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.8576923076923076, "obj2": 0.11300880774209994}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) - Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( CS + RRSe ) * ( DS - ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ) )", "obj1": 0.9788461538461538, "obj2": 0.0066984083348627325}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) ) )", "obj1": 0.8903846153846153, "obj2": 0.0494266847231669}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ),CRS )", "choosing": "Min( ( ( ( DS * ( Min( RMSe ,CS ) - Max( RCSe,MLU ) ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.65, "obj2": 0.24592436295225534}, {"determining": "Max( ( ( Min( FirstVNF_Mem_Server ,BR ) / Min( ( DDR + ( CRS + FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server + ( BR * ARS ) ) * DDR ) ),CRS )", "choosing": "Min( Min( Min( ( ( ( DS * ( Min( RMSe ,CS ) - Max( RCSe,MLU ) ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) ) ,( CS * CS ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.65, "obj2": 0.24592436295225534}, {"determining": "( Max( Min( MRS ,( FirstVNF_CPU * ( MRS * ( Max( FirstVNF_Mem,BR ) - BR ) ) ) ),FirstVNF_Mem_Server ) * ( ACS + MDR ) )", "choosing": "Max( Max( Max( RCSe,( ( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Min( RMSe ,MLU ) * MLU ),Min( ( RMSe - DS ) ,Min( CS ,DS ) ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.698076923076923, "obj2": 0.2005693896835154}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( RRS + RRS ) ) ) - DDR ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( RRSe / RCSe ) + ( MUR - DS ) ) - CS ) ),( ( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) * RMSe ) )", "obj1": 0.9115384615384615, "obj2": 0.0381982228901757}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( AMS - Min( MRS ,MDR ) ) - Max( FirstVNF_CPU,CRS ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUC / ( MLU / MLU ) ) / ( MUR / Min( ( CS / ( RRSe + MUM ) ) ,( MUR - ( CS + MLU ) ) ) ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.9884615384615385, "obj2": 0.004446895359994399}, {"determining": "Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),FirstVNF_RAM_Server ),CRS )", "choosing": "Min( ( ( MUM + DS ) - ( CS / RRSe ) ) ,( ( ( MUM - MUC ) - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.6442307692307693, "obj2": 0.2504812165626008}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 0.75, "obj2": 0.13978163993626674}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,MDR ) ) - DDR ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( RRSe / RCSe ) + ( MUR - DS ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.926923076923077, "obj2": 0.03169334899558314}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( RRS + RRS ) ) ) - DDR ) ) - DDR ) / Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) )", "choosing": "Max( ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUC ) ) ),( ( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) * RMSe ) )", "obj1": 0.9038461538461539, "obj2": 0.04138908311362863}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,Max( ( FirstVNF_RAM - MRS ),( ARS - FirstVNF_Mem ) ) ) ) - DDR ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( Max( RRSe,Max( Min( Max( MUM,CS ) ,( RMSe + DS ) ),MUM ) ) + ( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.9346153846153846, "obj2": 0.029662876074560886}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( ( FirstVNF_CPU_Server - Min( AMS ,MDR ) ) - MDR ) - PN ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * CS ) ,MUR ) ) )", "obj1": 0.9923076923076923, "obj2": 0.003293559789974079}, {"determining": "( ( ( FirstVNF_Mem_Server * ( RRS + ( CRS / ( PN / AMS ) ) ) ) - DDR ) / ( MDR / ( ( FirstVNF_RAM_Server * MDR ) + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( ( RMSe * ( MUM + Max( RMSe,RRSe ) ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) + ( MUR - DS ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.9288461538461539, "obj2": 0.03101577642788916}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,Max( RRS,( FirstVNF_RAM_Server * Const ) ) ) ) - DDR ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( CS + ( Max( DS,Min( RCSe ,MUM ) ) / ( RMSe / MUC ) ) ),( ( CS - Max( RCSe,Min( RMSe ,RMSe ) ) ) * RMSe ) )", "obj1": 0.926923076923077, "obj2": 0.03169334899558314}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server * ( CRS - CRS ) ) - DDR ) ,ARS ) - ( ( DDR - Min( DDR ,( ( FirstVNF_CPU_Server / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / Const ) ) ) - Max( FirstVNF_CPU_Server,AMS ) ) ) * ( FirstVNF_Mem_Server / Min( RRS ,MRS ) ) )", "choosing": "( Max( ( CS / CS ),RRSe ) - Max( Min( DS ,Min( MUM ,MLU ) ),( ( RCSe / MUM ) * ( ( DS * DS ) - ( MUC - CS ) ) ) ) )", "obj1": 0.8826923076923077, "obj2": 0.0523806654803407}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / ( Max( PN,Const ) / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - ( RCSe + RRSe ) ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) ) )", "obj1": 0.8846153846153846, "obj2": 0.05114133166965617}, {"determining": "( Max( DDR,ARS ) * ( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( Max( Max( ( DS * Max( ( RCSe * RMSe ),Max( ( RRSe / RRSe ),( MUC - CS ) ) ) ),( ( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Max( DS,MUC ) - MLU ),( DS / RCSe ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.698076923076923, "obj2": 0.2005693896835154}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( RRS + RRS ) ) ) - DDR ) ) - DDR ) / ( MDR / CRS ) ) / Max( ACS,Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( ( Min( DS ,RRSe ) * Max( MLU,RRSe ) ) + ( Max( MLU,MUC ) / ( RCSe * MUC ) ) ) )", "obj1": 0.9038461538461539, "obj2": 0.04138908311362863}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / Max( PN,Const ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( ( ( ( MUC - RMSe ) * RMSe ) * RRSe ) ,MUR ) ) )", "obj1": 0.8884615384615384, "obj2": 0.05029895600180025}, {"determining": "( ( ( PN - Min( ( Min( BR ,( FirstVNF_Mem_Server * ( BR / FirstVNF_CPU_Server ) ) ) + ( DDR - Const ) ) ,Const ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( ( ( MUR + Max( ( CS - DS ),RCSe ) ) / ( RRSe + ( MUM / MLU ) ) ) + ( CS - CS ) ),( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 0.975, "obj2": 0.010112106417612537}, {"determining": "( ( ( Const * ( BR / Min( ( Max( AMS,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ,Max( MRS,MDR ) ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUR + Max( ( RCSe - DS ),RCSe ) ) / ( RRSe + ( MUM / MLU ) ) ) + Min( Max( RMSe,RMSe ) ,MUC ) ) ),Max( MUC,( ( RCSe / MUC ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0008911635083547241}, {"determining": "( ( ( PN - Min( ( Min( BR ,Min( Min( PN ,CRS ) ,MDR ) ) + ( DDR - Const ) ) ,Const ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( Max( ( RMSe + MUC ),( ( RRSe + Min( DS ,RCSe ) ) * DS ) ),MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 0.975, "obj2": 0.010112106417612537}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ( ( Min( FirstVNF_RAM_Server ,( ( MDR / CRS ) / FirstVNF_RAM_Server ) ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( Min( ( Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( Min( Min( MUC ,DS ) ,Max( RRSe,MUC ) ) * ( ( RCSe * RCSe ) * MUC ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) ) + RMSe ) ,Min( DS ,MUR ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( Min( CS ,MUR ) ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6884615384615385, "obj2": 0.2267661092022016}, {"determining": "( Min( ( ( ACS - ( DDR + FirstVNF_CPU ) ) / ( Min( CRS ,AMS ) - Const ) ) ,BR ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( Max( DS,RRSe ) * ( ( RMSe - CS ) - ( MUM - ( RRSe - MUC ) ) ) ) ) - CS )", "obj1": 0.9903846153846154, "obj2": 0.0037111614117027094}, {"determining": "( ( ( Const * ( BR / Min( ( Max( AMS,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ,Max( MRS,MDR ) ) ) ) - DDR ) / MDR )", "choosing": "Max( ( RMSe + ( ( ( MUR + Max( ( RCSe - DS ),RCSe ) ) / ( RRSe + ( MUM / MLU ) ) ) + Min( Max( RMSe,RMSe ) ,MUC ) ) ),Max( MUC,( ( RCSe / MUC ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0008911635083547241}, {"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( ( DDR - PN ) - ( DDR / FirstVNF_CPU_Server ) ) / ( ( Const - ACS ) * ( CRS / ACS ) ) ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,Min( ( ( CS / DS ) * Min( RCSe ,MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),Max( ( RRSe / RRSe ),( MUC - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Max( ACS,MDR ) )", "choosing": "Min( ( MUM + MUC ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Const ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RMSe ,RCSe ) * Max( MUR,( Min( RMSe ,RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - Const ) ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( ( ( ( MLU + MLU ) / RMSe ) - RRSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ( AMS + ( AMS / ( FirstVNF_Mem_Server + BR ) ) ) ) / FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,Max( CRS,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + ( DS * MUM ) ) - ( CS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( RRS,Max( FirstVNF_RAM_Server,( FirstVNF_Mem_Server / Const ) ) ) ) - ( CRS * ( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( DS + DS ),( RRSe * MUC ) ) ,Max( ( RCSe / Min( ( RCSe - MLU ) ,( MUC + Max( RMSe,CS ) ) ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / ( ( AMS - AMS ) - Const ) ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( Max( RMSe,Max( ( MUM - ( CS - RRSe ) ),MLU ) ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( ( CS * RMSe ) + ( ( ( MUR / ( RMSe * DS ) ) * RRSe ) - MUM ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,( ACS / ( Min( BR ,BR ) / ( ( AMS - ( PN / FirstVNF_Mem ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,MUM ) * MUC ) + ( RRSe - Min( Max( DS,DS ) ,Min( Max( ( Min( Min( MUC ,RCSe ) ,CS ) - CS ),MUC ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - ( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + ( DS - CS ) ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( ( FirstVNF_CPU_Server + MDR ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - ( MUC - MUR ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( BR / FirstVNF_CPU_Server ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUR + Max( ( CS - DS ),RCSe ) ) / ( RRSe + ( MUM / MLU ) ) ) + Min( Max( RMSe,RMSe ) ,MUC ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( RRS / Max( MRS,FirstVNF_Mem_Server ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RCSe / ( Min( RCSe ,MLU ) - ( RCSe - ( DS * RRSe ) ) ) ),( ( MUR - CS ) + MLU ) ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( ( BR * ( ( ACS / AMS ) - MRS ) ) + DDR ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + ( RMSe * ( ( RMSe / RMSe ) * RRSe ) ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( FirstVNF_Mem * PN ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / Max( ( RMSe * ( MUC * ( RRSe + MUR ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( ( ACS + FirstVNF_Mem ) * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( Min( ( MUC / Max( ( MUR / RRSe ),CS ) ) ,RCSe ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( Max( MRS,ARS ) ,( Max( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( RRSe / DS ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RCSe - MUM ) / ( MUR - MUR ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + CRS ) - ( Max( MDR,( CRS / ACS ) ) - Max( PN,CRS ) ) )", "choosing": "( Max( ( Max( RCSe,RRSe ) - ( Max( MUC,Max( MUM,DS ) ) * DS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( RMSe * RMSe ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * ( FirstVNF_CPU * ( ( ACS - ( FirstVNF_Mem_Server - ARS ) ) / DDR ) ) ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( CS * DS ) + DS ) * ( ( RCSe * ( CS - Min( RRSe ,MUM ) ) ) / MUR ) ),MUR ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / ( ( ( Max( ( RCSe / DS ),CS ) - ( RRSe - MUM ) ) * MUM ) - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( CS + RRSe ) * ( DS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS + DS ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + Max( PN,Const ) ) )", "choosing": "( ( MUC - RMSe ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / RRS ) - Max( FirstVNF_CPU,( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( Max( Min( MUM ,RRSe ),( DS + DS ) ) * ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem * CRS ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * ( CS / DS ) ) ) ,Max( ( RCSe / Min( CS ,MLU ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) + Min( ( Min( FirstVNF_RAM_Server ,MRS ) - ( ARS + ARS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( RMSe,MUR ) ,( MUC * RMSe ) ) + ( CS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - ( FirstVNF_RAM_Server + Max( Const,( CRS / ( ( ( FirstVNF_RAM * CRS ) * FirstVNF_CPU ) + Max( AMS,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUR ) * MUR ) - Min( CS ,MLU ) ) - ( ( DS / ( ( RRSe * RMSe ) / ( MUR / Max( ( MLU - RCSe ),MUR ) ) ) ) * ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + AMS ) * AMS ) + ( CRS + AMS ) )", "choosing": "( ( MUR / DS ) * Min( RRSe ,( ( RRSe / RCSe ) + ( MUR - ( ( ( ( MUC / MLU ) * MUM ) - ( ( RCSe * RRSe ) / DS ) ) * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( Const - ( RRS / MDR ) ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * ( Min( RRSe ,DS ) - ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( AMS + FirstVNF_CPU ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,( ( ( MUC / ( MLU / MLU ) ) / ( MUR / Min( ( CS / ( DS + MUM ) ) ,( MUR - ( CS + MLU ) ) ) ) ) + Min( RMSe ,RMSe ) ) ) ,( ( ( Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) - MUM ) / ( CS + DS ) ) * Max( ( Min( ( MLU + MLU ) ,RRSe ) * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * Max( PN,Const ) )", "choosing": "( ( Min( Min( ( ( ( RRSe - ( MUR * MLU ) ) + CS ) - Min( RRSe ,( MUC - Min( RRSe ,RRSe ) ) ) ) ,MUR ) ,Max( RMSe,( MUC + ( RMSe / ( ( DS * DS ) - ( MUC - CS ) ) ) ) ) ) + ( MUC * MLU ) ) + ( MUM - ( DS - Min( ( MLU - RMSe ) ,( Min( Min( MUR ,( MUC / RRSe ) ) ,MUM ) + ( DS + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS - ( DDR + FirstVNF_CPU ) ) / RRS ) ,BR ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( Max( DS,RRSe ) * ( ( RMSe - CS ) - ( DS / ( ( ( DS - CS ) - CS ) - RRSe ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - MDR )", "choosing": "( ( RMSe + DS ) - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,DDR ) - ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) ) ) ,( Max( ACS,RRS ) + ( ( Const - RRS ) * MDR ) ) )", "choosing": "( Min( Min( MUC ,RCSe ) ,( Max( DS,CS ) * CS ) ) / Max( ( CS - MUM ),( ( CS / CS ) * Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Min( FirstVNF_RAM_Server ,Const ) ,Const ) )", "choosing": "( Min( ( MUM - MUC ) ,RCSe ) * ( Min( MLU ,RRSe ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( ( ( PN - ACS ) - Min( Const ,Max( AMS,MRS ) ) ) / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( Min( RMSe ,( RRSe + MUR ) ) * ( RCSe - RRSe ) ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( ( RRSe * MLU ) + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( ( PN - Min( ( Max( ( FirstVNF_RAM - MRS ),Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) + ( DDR - Const ) ) ,Const ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( ( ( RRSe * MLU ) * MUR ) + CS ),( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( ACS / MDR ) )", "choosing": "( ( ( DS * MLU ) - RMSe ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( DS ,RRSe ) + RMSe ) )", "obj1": 0.6326923076923077, "obj2": 0.2792038003788276}, {"determining": "Min( Min( ( ( ( FirstVNF_CPU_Server - Min( AMS ,MDR ) ) - MDR ) - PN ) ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Min( MUC ,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 0.85, "obj2": 0.07010337566318599}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + MDR ),( ( ( PN - ACS ) - Min( Const ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( MRS - FirstVNF_RAM ) ) ) ) / MRS ) ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( RMSe - ( RCSe - DS ) ) + CS ) ) ) + ( ( Min( MUM ,( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) ) - ( MUC - MUR ) ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 0.801923076923077, "obj2": 0.10521132826680346}, {"determining": "( ( ( Const * ( ( FirstVNF_RAM_Server * MDR ) / Min( ( Max( AMS,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ,Max( MRS,MDR ) ) ) ) - DDR ) / MDR )", "choosing": "Max( ( RMSe + ( ( ( MUR + Max( ( RCSe - DS ),RCSe ) ) / ( RRSe + ( MUM / MLU ) ) ) + Min( Max( Min( MUC ,RRSe ),RMSe ) ,MUC ) ) ),Max( MUC,( ( RCSe / MUC ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) ) )", "obj1": 0.7807692307692308, "obj2": 0.11141534856508775}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( Max( ( Max( MLU,MUC ) - MLU ),( DS / RCSe ) ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 0.7384615384615385, "obj2": 0.15237886059742886}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( Max( Const,FirstVNF_Mem ) - PN ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,Min( Max( MUC,( RRSe * MUC ) ) ,Max( ( MUC - RMSe ),Min( RCSe ,( ( CS - MUC ) - ( RMSe - CS ) ) ) ) ) ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) ) )", "obj1": 0.7307692307692307, "obj2": 0.17943614455210843}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + MDR ),FirstVNF_Mem_Server ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( RMSe - ( RCSe - DS ) ) + CS ) ) ) + ( ( Min( MUM ,DS ) - ( MUC - MUR ) ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 0.7653846153846153, "obj2": 0.1282865883247607}, {"determining": "( Max( Min( MRS ,( FirstVNF_CPU * ( ( FirstVNF_RAM - FirstVNF_CPU ) / AMS ) ) ),FirstVNF_Mem_Server ) * ( Const - DDR ) )", "choosing": "Max( Max( Max( ( DS * Max( ( RCSe * RMSe ),Max( ( RRSe / RRSe ),( MUC - CS ) ) ) ),( ( ( RMSe / Min( MLU ,RMSe ) ) - Min( MLU ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Max( MLU,MUC ) - MLU ),( ( RMSe + RRSe ) / RCSe ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.676923076923077, "obj2": 0.2103997598856682}, {"determining": "( Max( RRS,FirstVNF_RAM ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,Max( RCSe,MUC ) ) + ( ( ( MUR * MLU ) + ( MUR - DS ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.8788461538461538, "obj2": 0.05386475414792713}, {"determining": "( ( ( PN - Min( ( Min( BR ,Min( Min( PN ,CRS ) ,MDR ) ) + ( DDR - Const ) ) ,Const ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( Max( ( RMSe + MUC ),( ( RRSe + Min( DS ,RCSe ) ) * DS ) ),MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 0.9519230769230769, "obj2": 0.019880845109803372}, {"determining": "( Max( Min( MRS ,( FirstVNF_CPU * ( ( FirstVNF_RAM - FirstVNF_CPU ) / AMS ) ) ),FirstVNF_Mem_Server ) * ( Const - DDR ) )", "choosing": "Max( Max( Max( ( DS * Max( ( RCSe * RMSe ),Max( ( RRSe / RRSe ),( MUC - CS ) ) ) ),( ( ( RMSe / Min( MLU ,RMSe ) ) - Min( MLU ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Max( MLU,MUC ) - MLU ),( ( RMSe + RRSe ) / RCSe ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.6692307692307692, "obj2": 0.2300406157717694}, {"determining": "Max( ( ( DDR * ( FirstVNF_CPU + BR ) ) + ( BR / PN ) ),( Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( MLU * ( Min( MUM ,RCSe ) / MLU ) ) + MUR ) )", "obj1": 0.6346153846153846, "obj2": 0.2674964600506748}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( FirstVNF_RAM_Server - Const ) ) ) - CRS ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( RCSe * ( CS - Min( RRSe ,MUM ) ) ) ),( DS + ( RMSe / ( MUM - ( RRSe - MUC ) ) ) ) )", "obj1": 0.7153846153846154, "obj2": 0.18430894790294577}, {"determining": "( ( ( FirstVNF_RAM_Server * MDR ) + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) - MRS )", "choosing": "( ( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( RMSe * ( MUM + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ) * ( DS - ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ) )", "obj1": 0.6615384615384615, "obj2": 0.23695263981874568}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ),FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( Max( Max( RCSe,( ( MLU - Min( MLU ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Max( MLU,MUC ) - MLU ),( DS / RCSe ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.7096153846153846, "obj2": 0.19717345912343556}, {"determining": "( Max( Min( MRS ,( FirstVNF_CPU * ( MRS * ( Max( ( FirstVNF_RAM_Server + DDR ),BR ) - BR ) ) ) ),FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( Max( Max( RCSe,( ( ( RMSe / Min( MUC ,RMSe ) ) - Min( Min( MUC ,RCSe ) ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Max( MLU,MUC ) - MLU ),( DS / RCSe ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.6942307692307692, "obj2": 0.20486234452811247}, {"determining": "Max( Max( ( FirstVNF_RAM - MRS ),Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),CRS )", "choosing": "Min( ( ( ( DS * ( RCSe + ( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) ) ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.6423076923076924, "obj2": 0.2513937454547555}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 0.7538461538461538, "obj2": 0.13605594287740205}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( AMS ,MDR ) ) - CRS ) ) - DDR ) / ( Max( Min( ( FirstVNF_RAM / BR ) ,Const ),FirstVNF_CPU_Server ) / CRS ) )", "choosing": "Max( ( Min( Min( CS ,( ( MLU * MUC ) * ( RCSe + RCSe ) ) ) ,RRSe ) + ( CS - ( ( ( MUR / ( RMSe * DS ) ) * RRSe ) - MUM ) ) ),( MUR * RMSe ) )", "obj1": 0.9365384615384615, "obj2": 0.027909970900787368}, {"determining": "( ( ( PN - Min( ( Min( BR ,Const ) + ( DDR - Const ) ) ,Const ) ) - DDR ) / Max( ( ( ACS * ( ( ( MRS / FirstVNF_RAM_Server ) - PN ) / ( BR / ( MRS * Const ) ) ) ) - ( FirstVNF_RAM_Server + MDR ) ),Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + CS ),( Min( ( MLU + ( RRSe * CS ) ) ,( Min( ( RCSe * ( MUC - RCSe ) ) ,( RCSe + MLU ) ) * RCSe ) ) + ( Max( MLU,MUC ) / ( RCSe * MUC ) ) ) )", "obj1": 0.9692307692307692, "obj2": 0.014242013452876354}, {"determining": "Min( AMS ,( FirstVNF_RAM + DDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( Max( Max( MUR,Min( Max( ( ( MUR * RRSe ) + ( DS - MUC ) ),RMSe ) ,( ( MUR - ( DS + MLU ) ) - MUM ) ) ),Max( MLU,Min( RMSe ,MUM ) ) ) ,( DS * MLU ) ) )", "obj1": 0.7480769230769231, "obj2": 0.14248755781376735}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) - Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( CS + RRSe ) * ( DS - ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ) )", "obj1": 0.9788461538461538, "obj2": 0.0066984083348627325}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + MDR ),FirstVNF_Mem_Server ) ,( ( Const * ( ( AMS - DDR ) * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( RMSe - ( RCSe - DS ) ) + CS ) ) ) + RMSe ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 0.9192307692307692, "obj2": 0.0366572535544396}, {"determining": "( Max( DDR,ARS ) * ( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( Max( Max( ( DS * Max( ( RCSe * RMSe ),Max( ( RRSe / RRSe ),( MUC - CS ) ) ) ),( ( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Max( DS,MUC ) - MLU ),( DS / RCSe ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.698076923076923, "obj2": 0.2005693896835154}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( RRS + RRS ) ) ) - DDR ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( RRSe / RCSe ) + ( MUR - DS ) ) - CS ) ),( ( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) * RMSe ) )", "obj1": 0.9115384615384615, "obj2": 0.0381982228901757}, {"determining": "Max( ( ( Min( FirstVNF_Mem_Server ,BR ) / Min( ( DDR + ( CRS + FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server + ( BR * ARS ) ) * DDR ) ),CRS )", "choosing": "Min( Min( Min( ( ( ( DS * ( Min( RMSe ,CS ) - Max( RCSe,MLU ) ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) ) ,( CS * CS ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.65, "obj2": 0.24592436295225534}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 0.75, "obj2": 0.13978163993626674}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ),CRS )", "choosing": "Min( ( ( ( DS * ( Min( RMSe ,CS ) - Max( RCSe,MLU ) ) ) / ( ( RRSe * MLU ) * MUR ) ) * Max( RCSe,RMSe ) ) ,( ( MUM - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.65, "obj2": 0.24592436295225534}, {"determining": "( ( ( ( FirstVNF_Mem_Server * DDR ) - Min( MDR ,FirstVNF_CPU ) ) / ( ( PN + FirstVNF_CPU_Server ) * ( Max( AMS,FirstVNF_Mem_Server ) + ( RRS + RRS ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUR ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0007357339482916902}, {"determining": "Max( Max( ( ( ( FirstVNF_CPU_Server - Min( MRS ,( RRS + RRS ) ) ) - DDR ) / FirstVNF_Mem ),FirstVNF_RAM_Server ),CRS )", "choosing": "Min( ( ( MUM + Min( RMSe ,RMSe ) ) - ( CS / RRSe ) ) ,( ( ( MUM - MUC ) - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.6480769230769231, "obj2": 0.24854236652854445}, {"determining": "( ( AMS - DDR ) - MDR )", "choosing": "( ( RMSe + RMSe ) - RCSe )", "obj1": 0.9, "obj2": 0.04476290225101769}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( RRS + RRS ) ) ) - DDR ) ) - DDR ) / ( MDR / CRS ) ) / Max( ACS,Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( ( Min( DS ,RRSe ) * Max( MLU,RRSe ) ) + ( Max( MLU,MUC ) / ( RCSe * MUC ) ) ) )", "obj1": 0.9038461538461539, "obj2": 0.04138908311362863}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( AMS - Min( MRS ,MDR ) ) - Max( FirstVNF_CPU,CRS ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUC / ( MLU / MLU ) ) / ( MUR / Min( ( CS / ( RRSe + MUM ) ) ,( MUR - ( CS + MLU ) ) ) ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.9884615384615385, "obj2": 0.004446895359994399}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( AMS ,MDR ) ) - ( DDR - DDR ) ) ) - DDR ) / ( Max( Min( ( FirstVNF_RAM / BR ) ,Const ),FirstVNF_CPU_Server ) / CRS ) )", "choosing": "Max( ( Min( Min( CS ,( ( MLU * MUC ) * ( RCSe + RCSe ) ) ) ,RRSe ) + ( ( RMSe + DS ) - RCSe ) ),( MUR * RMSe ) )", "obj1": 0.9153846153846154, "obj2": 0.03789322801846065}, {"determining": "Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),FirstVNF_RAM_Server ),CRS )", "choosing": "Min( ( ( MUM + DS ) - ( CS / RRSe ) ) ,( ( ( MUM - MUC ) - MUR ) - Max( CS,MUM ) ) )", "obj1": 0.6442307692307693, "obj2": 0.2504812165626008}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server * ( CRS - CRS ) ) - DDR ) ,ARS ) - ( ( DDR - Min( DDR ,( ( FirstVNF_CPU_Server / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / Const ) ) ) - Max( FirstVNF_CPU_Server,AMS ) ) ) * ( FirstVNF_Mem_Server / Min( RRS ,MRS ) ) )", "choosing": "( Max( ( CS / CS ),RRSe ) - Max( Min( DS ,Min( MUM ,MLU ) ),( ( RCSe / MUM ) * ( ( DS * DS ) - ( MUC - CS ) ) ) ) )", "obj1": 0.8826923076923077, "obj2": 0.0523806654803407}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / ( Min( FirstVNF_Mem ,( ACS / ( Min( BR ,BR ) / ( ( AMS - ( PN / FirstVNF_Mem ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) ) / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - ( RCSe + Min( MUC ,RCSe ) ) ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) ) )", "obj1": 0.8942307692307693, "obj2": 0.047017656993724996}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,MDR ) ) - DDR ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( RRSe / RCSe ) + ( MUR - DS ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.926923076923077, "obj2": 0.03169334899558314}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / ( Max( PN,Const ) / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - ( RCSe + RRSe ) ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) ) )", "obj1": 0.8846153846153846, "obj2": 0.05114133166965617}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( Max( Const,FirstVNF_Mem ) + RRS ) ) ) - DDR ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( RRSe / RCSe ) + ( MUR - DS ) ) - CS ) ),( ( Max( ( MUC - RMSe ),Min( RCSe ,( ( CS - MUC ) - ( RMSe - CS ) ) ) ) - Max( RCSe,Min( RMSe ,RMSe ) ) ) * RMSe ) )", "obj1": 0.926923076923077, "obj2": 0.03169334899558314}, {"determining": "( Max( Min( MRS ,( FirstVNF_CPU * ( MRS * ( Max( FirstVNF_Mem,BR ) - BR ) ) ) ),FirstVNF_Mem_Server ) * ( ACS + MDR ) )", "choosing": "Max( Max( Max( RCSe,( ( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) ) * ( ( MLU / RCSe ) - Max( ( Min( RMSe ,MLU ) * MLU ),Min( ( RMSe - DS ) ,Min( CS ,DS ) ) ) ) ) ),( MLU - MLU ) ),( RCSe / MUR ) )", "obj1": 0.698076923076923, "obj2": 0.2005693896835154}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( RRS + FirstVNF_RAM ) ) ) - DDR ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( MUC - CS ),( ( CS - Max( RCSe,Min( RMSe ,RMSe ) ) ) * RMSe ) )", "obj1": 0.9019230769230769, "obj2": 0.04396210462705184}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / Max( PN,Const ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( ( ( ( MUC - RMSe ) * RMSe ) * RRSe ) ,MUR ) ) )", "obj1": 0.8884615384615384, "obj2": 0.05029895600180025}, {"determining": "( ( ( PN - Min( ( Min( BR ,Min( Min( PN ,CRS ) ,MDR ) ) + ( DDR - Const ) ) ,Const ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( Max( ( RMSe + MUC ),( ( RRSe + Min( DS ,RCSe ) ) * DS ) ),MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 0.975, "obj2": 0.010112106417612537}, {"determining": "( ( ( PN - Min( ( Min( BR ,Const ) + ( DDR - Const ) ) ,Const ) ) - DDR ) / Max( ( ( ACS * ( ( ( MRS / FirstVNF_RAM_Server ) - PN ) / ( BR / ( MRS * Const ) ) ) ) - ( FirstVNF_RAM_Server + MDR ) ),Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + CS ),( Min( ( MLU + ( RRSe * CS ) ) ,( Min( ( RCSe * ( MUC - RCSe ) ) ,( RCSe + MLU ) ) * RCSe ) ) + ( Max( MLU,MUC ) / ( RCSe * MUC ) ) ) )", "obj1": 0.9730769230769231, "obj2": 0.013038415375326549}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( ( Max( Const,FirstVNF_Mem ) - PN ) ,MDR ) ) - CRS ) ) - DDR ) / ( Max( Min( ( FirstVNF_RAM / BR ) ,Const ),FirstVNF_CPU_Server ) / CRS ) )", "choosing": "Max( ( Min( Min( CS ,( ( MLU * MUC ) * ( RRSe / RCSe ) ) ) ,RRSe ) + ( CS - ( ( ( MUR / ( RMSe * DS ) ) * RRSe ) - MUM ) ) ),( MUR * RMSe ) )", "obj1": 0.9307692307692308, "obj2": 0.030292278651296554}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) )", "choosing": "Max( ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUC ) ) ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) )", "obj1": 0.8923076923076924, "obj2": 0.049219242975360795}, {"determining": "( ( ( PN - Min( ( Min( BR ,( FirstVNF_Mem_Server * ( BR / FirstVNF_CPU_Server ) ) ) + ( DDR - Const ) ) ,Const ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( ( ( MUR + Max( ( CS - DS ),RCSe ) ) / ( RRSe + ( MUM / MLU ) ) ) + ( CS - CS ) ),( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 0.975, "obj2": 0.010112106417612537}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( ( FirstVNF_CPU_Server - Min( AMS ,MDR ) ) - MDR ) - PN ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( ( Max( ( ( CS - MUC ) - ( RMSe - CS ) ),CS ) * CS ) ,MUR ) ) )", "obj1": 0.9923076923076923, "obj2": 0.003293559789974079}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,Max( ( FirstVNF_RAM - MRS ),( ARS - FirstVNF_Mem ) ) ) ) - DDR ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( Max( RRSe,Max( Min( Max( MUM,CS ) ,( RMSe + DS ) ),MUM ) ) + ( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.9346153846153846, "obj2": 0.029662876074560886}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,( RRS + RRS ) ) ) - DDR ) ) - DDR ) / Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) )", "choosing": "Max( ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUC ) ) ),( ( RRSe - Max( RCSe,Min( RMSe ,RMSe ) ) ) * RMSe ) )", "obj1": 0.9038461538461539, "obj2": 0.04138908311362863}, {"determining": "( ( ( FirstVNF_Mem_Server * ( RRS + ( CRS / ( PN / AMS ) ) ) ) - DDR ) / ( MDR / ( ( FirstVNF_RAM_Server * MDR ) + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( ( RMSe * ( MUM + Max( RMSe,RRSe ) ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) + ( MUR - DS ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.9288461538461539, "obj2": 0.03101577642788916}, {"determining": "( Min( ( ( ACS - ( DDR + FirstVNF_CPU ) ) / ( Min( CRS ,AMS ) - Const ) ) ,BR ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( Max( DS,RRSe ) * ( ( RMSe - CS ) - ( MUM - ( RRSe - MUC ) ) ) ) ) - CS )", "obj1": 0.9903846153846154, "obj2": 0.0037111614117027094}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( ( FirstVNF_CPU_Server - Min( AMS ,MDR ) ) - MDR ) - PN ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * CS ) ,MUR ) ) )", "obj1": 0.9923076923076923, "obj2": 0.003293559789974079}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) ) )", "obj1": 0.8903846153846153, "obj2": 0.0494266847231669}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN + ( ( FirstVNF_CPU_Server - MDR ) - PN ) ) ) - DDR ) / ( Max( PN,Min( MRS ,( FirstVNF_CPU * ( ACS / AMS ) ) ) ) / CRS ) )", "choosing": "Max( ( Min( ( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) ) ,RRSe ) + ( CS - ( RCSe + RRSe ) ) ),Max( Min( DS ,MLU ),Min( ( Max( ( RRSe / RCSe ),CS ) * RRSe ) ,MUR ) ) )", "obj1": 0.8942307692307693, "obj2": 0.047017656993724996}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( AMS - Min( MRS ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) - Max( FirstVNF_CPU,CRS ) ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUC / ( MLU / MLU ) ) / ( MUR / Min( ( CS / ( RRSe + MUM ) ) ,( MUR - ( CS + RRSe ) ) ) ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.9884615384615385, "obj2": 0.004446895359994399}, {"determining": "( ( ( PN - Min( ( Min( BR ,Const ) + ( DDR - Const ) ) ,Const ) ) - DDR ) / Max( ( Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) ),Min( ( FirstVNF_RAM_Server / Min( Min( MDR ,ARS ) ,( FirstVNF_RAM + Const ) ) ) ,BR ) ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + CS ),( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( MLU / ( RCSe * MUC ) ) ) )", "obj1": 0.9730769230769231, "obj2": 0.013038415375326549}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Min( MRS ,Max( ( FirstVNF_RAM - MRS ),( ARS - FirstVNF_Mem ) ) ) ) - DDR ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( Max( RRSe,Max( Min( Max( MUM,CS ) ,( RMSe + DS ) ),MUM ) ) + ( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) ) ) - CS ) ),( MUR * RMSe ) )", "obj1": 0.9346153846153846, "obj2": 0.029662876074560886}, {"determining": "( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),( ( FirstVNF_RAM + ( ACS / ARS ) ) + Max( ACS,( Const / DDR ) ) ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( Max( Max( RCSe,DS ),( Min( MUM ,( MLU + RRSe ) ) / MUC ) ) + Min( MUM ,MLU ) ) - RMSe ) * ( RCSe + ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( ( DDR - PN ) - ( DDR / FirstVNF_CPU_Server ) ) / ( ( Const - ACS ) * ( CRS / ACS ) ) ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,Min( ( ( CS / DS ) * Min( RCSe ,MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),Max( ( RRSe / RRSe ),( MUC - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( Const,ARS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUC - RMSe ) * ( ( MLU + MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Max( ACS,MDR ) )", "choosing": "Min( ( MUM + MUC ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Const ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RMSe ,RCSe ) * Max( MUR,( Min( RMSe ,RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - Const ) ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( ( ( ( MLU + MLU ) / RMSe ) - RRSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ( AMS + ( AMS / ( FirstVNF_Mem_Server + BR ) ) ) ) / FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,Max( CRS,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + ( DS * MUM ) ) - ( CS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( RRS,Max( FirstVNF_RAM_Server,( FirstVNF_Mem_Server / Const ) ) ) ) - ( CRS * ( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( DS + DS ),( RRSe * MUC ) ) ,Max( ( RCSe / Min( ( RCSe - MLU ) ,( MUC + Max( RMSe,CS ) ) ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( PN ,PN ) ,( ( Const * ( FirstVNF_CPU_Server * AMS ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),( ( Min( Max( DS,RRSe ) ,DS ) - RCSe ) * ( ( MLU - MUM ) + CS ) ) ) + ( Max( MUC,RCSe ) - ( RRSe + Min( MUM ,RMSe ) ) ) ) / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / ( ( AMS - AMS ) - Const ) ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( Max( RMSe,Max( ( MUM - ( CS - RRSe ) ),MLU ) ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( ( CS * RMSe ) + ( ( ( MUR / ( RMSe * DS ) ) * RRSe ) - MUM ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,( ACS / ( Min( BR ,BR ) / ( ( AMS - ( PN / FirstVNF_Mem ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,MUM ) * MUC ) + ( RRSe - Min( Max( DS,DS ) ,Min( Max( ( Min( Min( MUC ,RCSe ) ,CS ) - CS ),MUC ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - ( FirstVNF_Mem_Server / ARS ) ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + ( DS - CS ) ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( ( FirstVNF_CPU_Server + MDR ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - ( MUC - MUR ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( BR / FirstVNF_CPU_Server ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( ( ( MUR + Max( ( CS - DS ),RCSe ) ) / ( RRSe + ( MUM / MLU ) ) ) + Min( Max( RMSe,RMSe ) ,MUC ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( RRS / Max( MRS,FirstVNF_Mem_Server ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RCSe / ( Min( RCSe ,MLU ) - ( RCSe - ( DS * RRSe ) ) ) ),( ( MUR - CS ) + MLU ) ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( ( BR * ( ( ACS / AMS ) - MRS ) ) + DDR ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + ( RMSe * ( ( RMSe / RMSe ) * RRSe ) ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( FirstVNF_Mem * PN ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / Max( ( RMSe * ( MUC * ( RRSe + MUR ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( ( ACS + FirstVNF_Mem ) * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( Min( ( MUC / Max( ( MUR / RRSe ),CS ) ) ,RCSe ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( Max( MRS,ARS ) ,( Max( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( RRSe / DS ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RCSe - MUM ) / ( MUR - MUR ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + CRS ) - ( Max( MDR,( CRS / ACS ) ) - Max( PN,CRS ) ) )", "choosing": "( Max( ( Max( RCSe,RRSe ) - ( Max( MUC,Max( MUM,DS ) ) * DS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( RMSe * RMSe ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * ( FirstVNF_CPU * ( ( ACS - ( FirstVNF_Mem_Server - ARS ) ) / DDR ) ) ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( CS * DS ) + DS ) * ( ( RCSe * ( CS - Min( RRSe ,MUM ) ) ) / MUR ) ),MUR ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / ( ( ( Max( ( RCSe / DS ),CS ) - ( RRSe - MUM ) ) * MUM ) - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( CS + RRSe ) * ( DS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS + DS ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + Max( PN,Const ) ) )", "choosing": "( ( MUC - RMSe ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / RRS ) - Max( FirstVNF_CPU,( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( Max( Min( MUM ,RRSe ),( DS + DS ) ) * ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem * CRS ) ,( CRS / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * ( CS / DS ) ) ) ,Max( ( RCSe / Min( CS ,MLU ) ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) + Min( ( Min( FirstVNF_RAM_Server ,MRS ) - ( ARS + ARS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( RMSe,MUR ) ,( MUC * RMSe ) ) + ( CS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - ( FirstVNF_RAM_Server + Max( Const,( CRS / ( ( ( FirstVNF_RAM * CRS ) * FirstVNF_CPU ) + Max( AMS,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUR ) * MUR ) - Min( CS ,MLU ) ) - ( ( DS / ( ( RRSe * RMSe ) / ( MUR / Max( ( MLU - RCSe ),MUR ) ) ) ) * ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + AMS ) * AMS ) + ( CRS + AMS ) )", "choosing": "( ( MUR / DS ) * Min( RRSe ,( ( RRSe / RCSe ) + ( MUR - ( ( ( ( MUC / MLU ) * MUM ) - ( ( RCSe * RRSe ) / DS ) ) * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( Const - ( RRS / MDR ) ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * ( Min( RRSe ,DS ) - ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_Mem_Server - ACS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + ( ( Min( MLU ,RMSe ) + Min( MUR ,MLU ) ) + MUR ) ) ) / ( ( RRSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( AMS + FirstVNF_CPU ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,( ( ( MUC / ( MLU / MLU ) ) / ( MUR / Min( ( CS / ( DS + MUM ) ) ,( MUR - ( CS + MLU ) ) ) ) ) + Min( RMSe ,RMSe ) ) ) ,( ( ( Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) - MUM ) / ( CS + DS ) ) * Max( ( Min( ( MLU + MLU ) ,RRSe ) * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}]}