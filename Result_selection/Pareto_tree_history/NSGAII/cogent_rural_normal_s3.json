{"1": [{"determining": "( Min( AMS ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Min( ( Min( ARS ,DDR ) + ( RRS * ARS ) ) ,RRS ) )", "choosing": "Min( ( DS / DS ) ,( MUM / ( ( Min( MUR ,CS ) * MLU ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - Max( BR,ACS ) )", "choosing": "Min( ( DS + ( RCSe * MUR ) ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS + ( RCSe - Max( MUM,RCSe ) ) ) ,Min( DS ,MLU ) )", "obj1": 0.9841986455981941, "obj2": 0.011216228820629785}, {"determining": "( Min( PN ,Const ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - Max( Max( MUM,( ( ( ( RRSe / MUM ) * ( DS - ( MUM + DS ) ) ) * ( ( MLU - MUC ) + RRSe ) ) - MUC ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * ( FirstVNF_RAM - AMS ) )", "choosing": "Min( ( CS - RRSe ) ,Max( RRSe,CS ) )", "obj1": 0.9029345372460497, "obj2": 0.10481926966788314}, {"determining": "( ( ( ( FirstVNF_Mem_Server / AMS ) * ( Max( Min( ARS ,ACS ),Const ) + ( MRS - ACS ) ) ) - MRS ) / ( RRS - CRS ) )", "choosing": "Max( ( RMSe / ( ( Min( RMSe ,( MUM - Max( MUC,RCSe ) ) ) / ( Min( RRSe ,MUM ) + MLU ) ) + CS ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( AMS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUM * RCSe ) ,( DS - MUM ) )", "obj1": 0.510158013544018, "obj2": 0.4194586682536546}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) * ( RCSe / RCSe ) )", "obj1": 0.6704288939051919, "obj2": 0.2834839898827402}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( RRS * FirstVNF_Mem ) )", "choosing": "( ( RRSe + MLU ) - ( RMSe + MUC ) )", "obj1": 0.3182844243792325, "obj2": 0.6302201536198722}, {"determining": "( ( Max( MDR,RRS ) * ( FirstVNF_Mem + ( ACS * Const ) ) ) / Max( FirstVNF_CPU_Server,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MLU,( RRSe * MUC ) ),( CS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( MDR,RRS ),( FirstVNF_RAM * FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - RRSe ),Min( MLU ,MLU ) )", "obj1": 0.3656884875846501, "obj2": 0.5596634892106223}, {"determining": "( ( FirstVNF_RAM + ( CRS + Min( ( ( ( FirstVNF_Mem / ACS ) - ( AMS / ( DDR * FirstVNF_RAM_Server ) ) ) / PN ) ,( ( DDR * BR ) / FirstVNF_RAM ) ) ) ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( ( MLU / Min( RRSe ,( Min( MUC ,RRSe ) / Min( RMSe ,DS ) ) ) ) * ( CS * MUC ) ) ) ,( DS - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + AMS ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( RRSe - ( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,( Min( ( PN + MDR ) ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - ( ( MUM * DS ) * ( ( Min( RRSe ,RCSe ) + ( ( MUM * RMSe ) + RMSe ) ) * Min( CS ,( ( MUM + RMSe ) + ( RMSe / MLU ) ) ) ) ) ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RCSe ,DS ) / Max( ( MUC * MLU ),RMSe ) )", "obj1": 0.6952595936794582, "obj2": 0.24903089243364052}, {"determining": "( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( Min( MLU ,MUR ),( RMSe * RCSe ) ) * Max( ( MUC - MUM ),( MUM + MUC ) ) )", "obj1": 0.6478555304740407, "obj2": 0.32934998184020875}, {"determining": "Max( ( DDR / Min( DDR ,( Min( ( MRS - PN ) ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( Min( ( RCSe * DS ) ,( RCSe / MUC ) ) * Min( ( MLU / Min( ( RCSe - ( ( MUM - DS ) * CS ) ) ,( RMSe / MUM ) ) ) ,( MUR * CS ) ) )", "obj1": 0.5778781038374717, "obj2": 0.3836668514655997}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Max( RRS,( RRS + Max( Min( FirstVNF_RAM ,DDR ),PN ) ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( ( ( ( ( ( MUC * MUC ) / RMSe ) - RRSe ) - MLU ) + ( RCSe + MUM ) ) * MUC ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( Max( ( ( FirstVNF_CPU / ( AMS / Min( Max( MDR,FirstVNF_RAM ) ,Max( MRS,ARS ) ) ) ) / ( RRS - FirstVNF_Mem ) ),Const ) * ( Const - ACS ) )", "choosing": "( ( DS - DS ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( ( RRSe * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.4785553047404063, "obj2": 0.44174140100059617}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "Min( Max( ( ACS - Min( ( FirstVNF_RAM / AMS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) ),MDR ) ,( FirstVNF_Mem_Server * Min( ARS ,ARS ) ) )", "choosing": "( Max( MLU,Max( RRSe,DS ) ) * Max( ( MLU / CS ),( Min( ( MUR * RCSe ) ,( ( ( RRSe + RCSe ) + ( MUM * MLU ) ) - RRSe ) ) * MUC ) ) )", "obj1": 0.9300225733634312, "obj2": 0.05254383215797778}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( MDR * ACS ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + Max( Max( RCSe,MUR ),( RMSe - RCSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / FirstVNF_RAM ),BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( RRSe / ( MUM / DS ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / ( CRS + ACS ) ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( ( ( MLU + Min( MUM ,Max( MUC,RMSe ) ) ) / MUR ) / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) - FirstVNF_Mem_Server ) - Max( ( ( DDR / FirstVNF_RAM ) * ( RRS + FirstVNF_CPU ) ),( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * Max( RCSe,Max( MUC,CS ) ) ) )", "obj1": 0.4672686230248307, "obj2": 0.48495873367723685}, {"determining": "( Max( ( PN - BR ),MRS ) - ( ( CRS / ARS ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,MUC ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 0.45372460496614, "obj2": 0.4874778548118059}, {"determining": "( Min( MRS ,( FirstVNF_CPU / ( Max( Min( MDR ,( FirstVNF_CPU_Server - PN ) ),FirstVNF_Mem ) * PN ) ) ) - ( ( Const + ( FirstVNF_RAM / Max( Max( MDR,Min( CRS ,Const ) ),FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( ( ( RRSe * ( ( MLU / RCSe ) + MLU ) ) - DS ) * ( MLU + ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + ( Min( AMS ,FirstVNF_RAM_Server ) * ( AMS - ( FirstVNF_Mem * ACS ) ) ) ) * ( ( Max( BR,ACS ) * Max( FirstVNF_Mem,FirstVNF_Mem ) ) + ( ( BR / Const ) - ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( MUR / RCSe ) + MUR ) ,Max( Max( Min( MUC ,RRSe ),Max( MUM,MLU ) ),Min( ( MUM / RRSe ) ,CS ) ) )", "obj1": 0.4762979683972912, "obj2": 0.4722253136769272}, {"determining": "( ( ( Max( FirstVNF_RAM,Const ) * ( RRS - ARS ) ) - ( ( RRS + PN ) + ( BR - FirstVNF_Mem ) ) ) + ( ( ( ARS * AMS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( Min( Max( MUC,DS ) ,( MUR - MUR ) ) * ( RRSe + MUM ) ),Max( ( RMSe + CS ),( MUC * Min( DS ,MLU ) ) ) )", "obj1": 0.909706546275395, "obj2": 0.09844036728203254}, {"determining": "( Max( ARS,MRS ) * ( Max( Min( DDR ,Const ),DDR ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * ( ( ( ( RCSe / MUM ) * RRSe ) / RMSe ) + MUM ) ) ) ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * ( ( DDR + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) ) )", "choosing": "Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) )", "obj1": 0.5237020316027088, "obj2": 0.4168398688200789}], "2": [{"determining": "( Min( AMS ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Min( ( Min( ARS ,DDR ) + ( RRS * ARS ) ) ,RRS ) )", "choosing": "Min( ( DS / DS ) ,( MUM / ( ( Min( MUR ,CS ) * MLU ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - Max( BR,ACS ) )", "choosing": "Min( ( DS + ( RCSe * MUR ) ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS + ( RCSe - Max( MUM,RCSe ) ) ) ,Min( DS ,MLU ) )", "obj1": 0.9841986455981941, "obj2": 0.011216228820629785}, {"determining": "( Min( PN ,Const ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - Max( Max( MUM,( ( ( ( RRSe / MUM ) * ( DS - ( MUM + DS ) ) ) * ( ( MLU - MUC ) + RRSe ) ) - MUC ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / AMS ) * ( Max( Min( ARS ,ACS ),Const ) + ( MRS - ACS ) ) ) - MRS ) / ( RRS - CRS ) )", "choosing": "Max( ( RMSe / ( ( Min( RMSe ,( MUM - Max( MUC,RCSe ) ) ) / ( Min( RRSe ,MUM ) + MLU ) ) + CS ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( AMS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUM * RCSe ) ,( DS - MUM ) )", "obj1": 0.510158013544018, "obj2": 0.4194586682536546}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) * ( RCSe / RCSe ) )", "obj1": 0.6704288939051919, "obj2": 0.2834839898827402}, {"determining": "( ( Max( MDR,RRS ) * ( FirstVNF_Mem + ( ACS * Const ) ) ) / Max( FirstVNF_CPU_Server,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MLU,( RRSe * MUC ) ),( CS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( CRS + Min( ( ( ( FirstVNF_Mem / ACS ) - ( AMS / ( DDR * FirstVNF_RAM_Server ) ) ) / PN ) ,( ( DDR * BR ) / FirstVNF_RAM ) ) ) ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( ( MLU / Min( RRSe ,( Min( MUC ,RRSe ) / Min( RMSe ,DS ) ) ) ) * ( CS * MUC ) ) ) ,( DS - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + AMS ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( RRSe - ( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,( Min( ( PN + MDR ) ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - ( ( MUM * DS ) * ( ( Min( RRSe ,RCSe ) + ( ( MUM * RMSe ) + RMSe ) ) * Min( CS ,( ( MUM + RMSe ) + ( RMSe / MLU ) ) ) ) ) ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( Max( ( ( FirstVNF_CPU / ( AMS / Min( Max( MDR,FirstVNF_RAM ) ,Max( MRS,ARS ) ) ) ) / ( RRS - FirstVNF_Mem ) ),Const ) * ( Const - ACS ) )", "choosing": "( ( DS - DS ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( MDR * ACS ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + Max( Max( RCSe,MUR ),( RMSe - RCSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / FirstVNF_RAM ),BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( RRSe / ( MUM / DS ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / ( CRS + ACS ) ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( ( ( MLU + Min( MUM ,Max( MUC,RMSe ) ) ) / MUR ) / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / ( Max( Min( MDR ,( FirstVNF_CPU_Server - PN ) ),FirstVNF_Mem ) * PN ) ) ) - ( ( Const + ( FirstVNF_RAM / Max( Max( MDR,Min( CRS ,Const ) ),FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( ( ( RRSe * ( ( MLU / RCSe ) + MLU ) ) - DS ) * ( MLU + ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,MRS ) * ( Max( Min( DDR ,Const ),DDR ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * ( ( ( ( RCSe / MUM ) * RRSe ) / RMSe ) + MUM ) ) ) ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "Min( ( Min( ( MDR / Const ) ,( Min( PN ,FirstVNF_RAM ) / Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,CRS ) ) ) - DDR ) ,( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) * ( ( Min( RCSe ,DS ) + Max( CS,( MLU / Max( RCSe,MLU ) ) ) ) - DS ) ) * ( ( ( MUR - RRSe ) * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR / Const ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + RMSe )", "obj1": 0.9954853273137697, "obj2": 0.005203900087743107}, {"determining": "( ( ( BR + MRS ) + ARS ) + ( BR * MRS ) )", "choosing": "( ( Max( MLU,( CS / MUC ) ) + ( MLU - MUM ) ) + Max( MUC,RCSe ) )", "obj1": 0.24604966139954854, "obj2": 0.6928951417758185}, {"determining": "( FirstVNF_CPU_Server / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) )", "choosing": "( ( MUR - RRSe ) * ( Max( ( MUR / DS ),( MUR / CS ) ) - ( ( DS - MUC ) * ( MLU * RMSe ) ) ) )", "obj1": 0.9503386004514672, "obj2": 0.038681908765035446}, {"determining": "( Min( MRS ,( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( DDR / FirstVNF_Mem ) ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( RCSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,PN ) / AMS ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RCSe ,DS ) / Max( ( Max( MUM,Max( MUM,( ( RRSe * ( CS * RRSe ) ) * Min( MLU ,RCSe ) ) ) ) * MLU ),RMSe ) )", "obj1": 0.636568848758465, "obj2": 0.3167059096920588}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) - Max( ( FirstVNF_CPU_Server - MDR ),FirstVNF_RAM ) ) - ( MDR * Min( ACS ,( FirstVNF_RAM_Server + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( DS ,Min( ( CS / CS ) ,DS ) ) + MUR ) - ( RRSe * Max( ( CS - MLU ),Max( MUC,CS ) ) ) )", "obj1": 0.9932279909706546, "obj2": 0.006028788509117811}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,( ( Const + Const ) + PN ) ) ) - ( Min( ( FirstVNF_CPU - RRS ) ,Min( DDR ,Const ) ) - ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ) ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( ( MUM - Max( Min( Max( MUC,RRSe ) ,( CS / Max( ( RCSe - MUR ),( MUM * MUM ) ) ) ),Max( MUM,CS ) ) ) + Max( RCSe,RRSe ) ) )", "obj1": 0.8939051918735892, "obj2": 0.07627326636156105}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ,( Const - MRS ) )", "choosing": "( MLU - ( ( CS + MUM ) + MUC ) )", "obj1": 0.35891647855530473, "obj2": 0.5237904390248088}, {"determining": "( ( ( ( ARS / AMS ) * Max( ACS,MDR ) ) + Min( Max( FirstVNF_RAM_Server,PN ) ,Min( DDR ,Const ) ) ) * ( ( Min( MDR ,AMS ) * ( Min( ( BR / DDR ) ,FirstVNF_RAM ) - ACS ) ) * ( Min( FirstVNF_RAM ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( RRSe + RRSe ) * ( RMSe / ( MUR + CS ) ) ) ,Min( ( Min( DS ,MLU ) - Max( RCSe,MUR ) ) ,( RRSe + RMSe ) ) ) / ( Max( ( MLU + RMSe ),( DS + RCSe ) ) / Max( ( MUC - DS ),Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,Min( ( FirstVNF_Mem_Server - ACS ) ,RRS ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) )", "choosing": "Max( ( Min( Min( ( ( RMSe - ( ( MLU / MUR ) * MLU ) ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR / Min( Const ,Const ) ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( DS - MUM ) ) / ( ( MLU / MUM ) + Max( RMSe,MUC ) ) )", "obj1": 0.44469525959367945, "obj2": 0.47494481866349336}, {"determining": "( ( FirstVNF_CPU + AMS ) + ( DDR / FirstVNF_RAM ) )", "choosing": "Min( ( MLU + ( MUM / ( RMSe * MUM ) ) ) ,( Max( MLU,MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) + ( CRS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Const ) ) ) - ( Min( DDR ,( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,( AMS - DDR ) ) - PN ) + MRS ) ) - FirstVNF_CPU ) ) ,( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / ( Const / FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,MUC ) / ( Min( DS ,MLU ) - Max( RCSe,MUR ) ) ) - Max( CS,CS ) )", "obj1": 0.35214446952595935, "obj2": 0.5463597353342023}, {"determining": "( Max( ARS,MRS ) * ( Max( ARS,Max( Const,CRS ) ) + ( Max( FirstVNF_Mem_Server,( ( CRS + ARS ) * Min( Max( BR,DDR ) ,ARS ) ) ) / Min( ( AMS * Min( AMS ,ACS ) ) ,PN ) ) ) )", "choosing": "( ( ( RCSe - RCSe ) / MUC ) / ( ( ( MUR / Max( ( DS - MUR ),MUR ) ) + ( MUR - MUM ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "Max( ( DDR + FirstVNF_Mem_Server ),( ACS - ARS ) )", "choosing": "( ( RMSe - ( DS / MUR ) ) / ( MLU + RMSe ) )", "obj1": 0.27765237020316025, "obj2": 0.6249340945806976}, {"determining": "( ( ( ( CRS + RRS ) / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( ( MUC - RRSe ) - ( MUM - ( RCSe * ( CS / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - ( ( ( MRS * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) - ( ( AMS * MDR ) - ( ( ( MDR - ARS ) * PN ) + AMS ) ) ) ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * ( ( DS * RCSe ) - DS ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( ( ( ( CRS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ( FirstVNF_Mem / ARS ) ) ) - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + ( Max( MUR,( ( Max( RMSe,MUM ) - MUM ) / Max( ( RCSe - MUM ),CS ) ) ) - ( DS + MLU ) ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / ( DDR + ( Min( FirstVNF_RAM_Server ,CRS ) + ( CRS * PN ) ) ) )", "choosing": "Max( ( ( MLU * MLU ) + ( MLU * MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * Max( ACS,RRS ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( MLU / MLU ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3363431151241535, "obj2": 0.5673626498625658}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( MDR,FirstVNF_RAM ) ) ,Max( ACS,RRS ) )", "choosing": "Min( ( MLU / ( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) ) ) ,( RMSe - DS ) )", "obj1": 0.31376975169300225, "obj2": 0.6001466384279066}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,( DDR - BR ) ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) )", "choosing": "Max( ( Min( ( RRSe / Min( MUC ,MUR ) ) ,( ( RMSe + MUC ) + ( DS / MUM ) ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "Min( Min( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + Max( ( MUR / DS ),( MUR / CS ) ) ) )", "obj1": 0.6862302483069977, "obj2": 0.24244713465119277}, {"determining": "( Max( MRS,CRS ) - Max( BR,DDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Max( MRS,CRS ) ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * ( RRSe - CS ) ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( BR + Max( ( Min( AMS ,ARS ) + ( FirstVNF_Mem_Server + BR ) ),( ( CRS * ACS ) + ( FirstVNF_CPU_Server - MDR ) ) ) ) )", "choosing": "Max( ( ( MUM - ( MUM + DS ) ) * ( MUR + CS ) ),Max( Max( MLU,MUM ),Max( MUC,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN - BR ),Min( FirstVNF_Mem_Server ,PN ) ) - ( Max( BR,Max( MDR,FirstVNF_Mem ) ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,Max( Min( ( ( RMSe / MUC ) - CS ) ,DS ),( MUM - MUR ) ) ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) * ( Max( AMS,PN ) / FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) * ( ( ( CS + MUM ) / ( MUC + MUR ) ) / ( ( CS + RRSe ) / Min( RCSe ,RRSe ) ) ) )", "obj1": 0.6478555304740407, "obj2": 0.3049883266863295}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( MRS * ( Const / ( Max( FirstVNF_RAM,Max( CRS,( PN / BR ) ) ) * ( RRS + MDR ) ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( ( Max( MUC,( Max( MUC,CS ) + MUM ) ) + Min( RRSe ,RMSe ) ) - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ACS ) - ( CRS + AMS ) )", "choosing": "Min( ( ( ( DS * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( ( MDR * MRS ) - ( CRS + AMS ) ) ) * ( Const - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,Min( CS ,CS ) ) / MUM ) ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,( ( FirstVNF_Mem_Server - ( Max( Max( FirstVNF_Mem,PN ),FirstVNF_Mem_Server ) - MRS ) ) / FirstVNF_RAM ) ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC / Max( ( MUR * RRSe ),MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5697884649280073}, {"determining": "( ( ( Min( DDR ,CRS ) + ( FirstVNF_CPU_Server * AMS ) ) + ( Min( AMS ,FirstVNF_RAM_Server ) * ( AMS - ARS ) ) ) * ( ( Max( BR,ACS ) * Max( FirstVNF_Mem,FirstVNF_Mem ) ) + ( ( BR / Const ) - ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( MUR / RCSe ) + MUR ) ,Max( Max( Min( RRSe ,CS ),Max( MLU,MLU ) ),Min( ( MUM / RRSe ) ,CS ) ) )", "obj1": 0.43340857787810383, "obj2": 0.5055559027870388}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / FirstVNF_RAM ),BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( RRSe / ( MUM / DS ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,PN ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( CS / RMSe ) + Max( DS,RMSe ) ) + ( ( MUR + RMSe ) / Max( MUC,MLU ) ) ) - Min( ( MUM * RCSe ) ,( DS - MUM ) ) )", "obj1": 0.5191873589164786, "obj2": 0.34205766530984166}, {"determining": "Min( Min( ( ( DDR * MDR ) - ( RRS - BR ) ) ,( ( ARS / FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( MRS * MRS ) ,Max( MDR,FirstVNF_CPU ) ) + ( ( DDR - FirstVNF_CPU_Server ) + ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( DS - MUC ) + ( MUM + MLU ) ) - ( RMSe / ( MLU / MUC ) ) ) - ( MUR + ( Max( MUC,( ( MUM * ( ( MUM - CS ) + ( RCSe / CS ) ) ) - MUC ) ) * ( ( Min( ( ( MUR + MUM ) + Max( CS,RCSe ) ) ,( MUR + ( DS - RCSe ) ) ) - RMSe ) / Max( ( RCSe * MLU ),RCSe ) ) ) ) )", "obj1": 0.9661399548532731, "obj2": 0.035987239430430085}, {"determining": "( Max( Max( ( PN * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RMSe / ( RCSe + MUR ) ) * MUR ) )", "obj1": 0.9051918735891648, "obj2": 0.04623456910180897}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,CRS ),AMS ) ) ),AMS ),Min( ( FirstVNF_Mem + RRS ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( MUR,( MUM * DS ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / RMSe ) ) ) + ( RMSe - Min( ( Min( DS ,RCSe ) * ( Max( Min( MUC ,MUM ),( CS / MUC ) ) / RRSe ) ) ,( CS + Min( RRSe ,Max( CS,Max( RRSe,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + CRS ) / ( MRS + FirstVNF_RAM ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - Min( ( MUC / RCSe ) ,CS ) ) )", "obj1": 0.47404063205417607, "obj2": 0.4364423325348482}, {"determining": "( ( ( FirstVNF_CPU_Server - MRS ) / ( RRS - CRS ) ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / MUC ) * ( RCSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ACS - FirstVNF_CPU_Server ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RRSe / DS ) * Min( CS ,MLU ) ) * Max( ( MLU / CS ),( Min( MLU ,MUM ) * MUC ) ) )", "obj1": 0.8871331828442438, "obj2": 0.10271737173642655}], "3": [{"determining": "( ( ( ( ARS * FirstVNF_CPU ) * ( PN + FirstVNF_CPU_Server ) ) - MRS ) / ( RRS - CRS ) )", "choosing": "Max( Max( Max( Max( RRSe,MUC ),RRSe ),MLU ),( ( RCSe - MLU ) + ( MUR * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Min( ( Min( ARS ,DDR ) + ( RRS * ARS ) ) ,RRS ) )", "choosing": "Min( ( DS / DS ) ,( MUM / ( ( Min( MUR ,CS ) * MLU ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) + ARS ) + ( BR * MRS ) )", "choosing": "( ( Max( MLU,( CS / MUC ) ) + ( MLU - MUM ) ) + Max( MUC,RCSe ) )", "obj1": 0.24604966139954854, "obj2": 0.6928951417758185}, {"determining": "( Max( ACS,( ( MDR * ( MRS * ( ACS - ( MDR * RRS ) ) ) ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,MUR ) / MUM ) ) - ( MLU + CS ) ) - ( Min( RCSe ,Min( ( CS / DS ) ,MUM ) ) + ( DS + RMSe ) ) )", "obj1": 0.4672686230248307, "obj2": 0.39748678327951276}, {"determining": "( Max( AMS,PN ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( CS / RMSe ) + Max( DS,RMSe ) ) + ( ( MUR + RMSe ) / Max( MUC,MLU ) ) ) - Min( ( MUM * RCSe ) ,( DS - MUM ) ) )", "obj1": 0.5191873589164786, "obj2": 0.34205766530984166}, {"determining": "( ( FirstVNF_RAM + ( CRS + Min( ( ( ( FirstVNF_Mem / ACS ) - ( AMS / ( DDR * FirstVNF_RAM_Server ) ) ) / PN ) ,( ( DDR * BR ) / FirstVNF_RAM ) ) ) ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( ( MLU / Min( RRSe ,( Min( MUC ,RRSe ) / Min( RMSe ,DS ) ) ) ) * ( CS * MUC ) ) ) ,( DS - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( DS + MLU ) ) ) )", "obj1": 0.7516930022573364, "obj2": 0.1477364876185375}, {"determining": "Min( Min( ( ( ( Min( MDR ,AMS ) * ( ( Min( FirstVNF_Mem_Server ,RRS ) - ( ARS + MDR ) ) + DDR ) ) * ( Min( FirstVNF_RAM ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - DDR ) ) ,( ( ARS / FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( MRS * MRS ) ,Max( MDR,FirstVNF_CPU ) ) + ( ( DDR - FirstVNF_CPU_Server ) + ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( DS - MUC ) + ( MUM + MLU ) ) - ( RCSe / ( MLU / MUC ) ) ) - ( MUR + Max( Min( ( ( RRSe + RRSe ) * ( RMSe / MUM ) ) ,Min( ( Min( DS ,MLU ) - Max( RCSe,MUR ) ) ,( RRSe + RMSe ) ) ),( MUC * DS ) ) ) )", "obj1": 0.8465011286681715, "obj2": 0.14550372864367767}, {"determining": "Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * DDR ) )", "choosing": "( Max( MLU,Max( RRSe,DS ) ) * Max( ( MLU / CS ),( Min( MLU ,( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) * MUC ) ) )", "obj1": 0.3837471783295711, "obj2": 0.4840497374335043}, {"determining": "( ( ( ( ( FirstVNF_CPU + AMS ) + ( DDR / FirstVNF_RAM ) ) + PN ) - CRS ) / Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUM * RCSe ) ,( DS - ( ( ( CS + MUM ) / ( MUC + MUR ) ) / ( ( ( MLU + ( Max( MLU,CS ) + MUC ) ) + RRSe ) / Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.5846501128668171, "obj2": 0.32852837432282656}, {"determining": "( ( Max( ( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) ),PN ) / AMS ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RCSe ,DS ) / Max( ( Max( MUM,Max( MLU,MLU ) ) * MLU ),RMSe ) )", "obj1": 0.708803611738149, "obj2": 0.24002884377836436}, {"determining": "Min( ( DDR + ARS ) ,( Min( Max( ( ACS - FirstVNF_CPU_Server ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) + ( BR * MRS ) ) )", "choosing": "( ( MUM / DS ) + ( MUM - MUM ) )", "obj1": 0.8848758465011287, "obj2": 0.10224543626229596}, {"determining": "Min( ( ( DDR + FirstVNF_Mem_Server ) - DDR ) ,( ARS * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + ( MLU - ( Min( RRSe ,MLU ) / MUC ) ) ) * ( ( CS * ( RRSe - CS ) ) / ( MLU / RMSe ) ) ) ,Max( MUC,MUC ) )", "obj1": 0.9480812641083521, "obj2": 0.03169720321324646}, {"determining": "Max( ( ( MDR / Min( Const ,Const ) ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( DS - MUM ) ) / ( ( MLU / MUM ) + Max( RMSe,MUC ) ) )", "obj1": 0.44469525959367945, "obj2": 0.47494481866349336}, {"determining": "Max( ( DDR + FirstVNF_Mem_Server ),( ACS - ARS ) )", "choosing": "( ( RMSe - ( DS / MUR ) ) / ( MLU + RMSe ) )", "obj1": 0.27765237020316025, "obj2": 0.6249340945806976}, {"determining": "Max( RRS,Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( MLU / MLU ) / ( DS * ( ( RCSe + MUC ) - MUC ) ) )", "obj1": 0.25733634311512416, "obj2": 0.6318628279287519}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( Min( AMS ,FirstVNF_RAM_Server ) * ( AMS - ( FirstVNF_Mem * ACS ) ) ) ) * ( ( Max( BR,ACS ) * Max( FirstVNF_Mem,FirstVNF_Mem ) ) + ( ( BR / Const ) - ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( MUM * CS ) * RMSe ) ,Max( Max( Min( MUC ,RRSe ),Max( MUM,MLU ) ),Min( ( MUM / RRSe ) ,CS ) ) )", "obj1": 0.8623024830699775, "obj2": 0.14383932280103814}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,AMS ) ) - CRS ) / Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MUM ,Min( DS ,MUC ) ) ,( DS - ( ( ( CS + MUM ) / ( MUC + MUR ) ) / ( ( ( MLU + ( Max( MUM,CS ) + MUC ) ) + RRSe ) / Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.6275395033860045, "obj2": 0.28830039930554635}, {"determining": "( Max( Max( ( PN * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RMSe / ( RCSe + MUR ) ) * MUR ) )", "obj1": 0.8984198645598194, "obj2": 0.04419003378153483}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( MDR,FirstVNF_RAM ) ) ,Max( ACS,RRS ) )", "choosing": "Min( ( MLU / ( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) ) ) ,( RMSe - DS ) )", "obj1": 0.31376975169300225, "obj2": 0.6001466384279066}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( FirstVNF_CPU / Min( FirstVNF_Mem_Server ,( ( Const + Const ) + PN ) ) ) - ( Min( ( FirstVNF_CPU - RRS ) ,Min( DDR ,Const ) ) - ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ) ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( ( MUM - Max( Min( Max( MUC,RRSe ) ,( CS / Max( ( RCSe - MUR ),( MUM * MUM ) ) ) ),Max( MUM,CS ) ) ) + Max( RCSe,RRSe ) ) )", "obj1": 0.8939051918735892, "obj2": 0.07627326636156105}, {"determining": "Min( Max( ( ACS - Min( ( FirstVNF_RAM / AMS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) ),MDR ) ,( FirstVNF_Mem_Server * Min( ARS ,ARS ) ) )", "choosing": "( Max( MLU,Max( RRSe,DS ) ) * Max( ( MLU / CS ),( Min( ( MUR * RCSe ) ,( ( ( RRSe + RCSe ) + ( MUM * MLU ) ) - RRSe ) ) * MUC ) ) )", "obj1": 0.435665914221219, "obj2": 0.4757574580356809}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) + ( CRS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Const ) ) ) - ( Min( DDR ,( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,( AMS - DDR ) ) - PN ) + MRS ) ) - FirstVNF_CPU ) ) ,( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / ( Const / FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,MUC ) / ( Min( DS ,MLU ) - Max( RCSe,MUR ) ) ) - Max( CS,CS ) )", "obj1": 0.35214446952595935, "obj2": 0.5463597353342023}, {"determining": "Max( ( ( Max( AMS,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) + BR ),( AMS / FirstVNF_RAM ) )", "choosing": "( Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * ( RRSe - DS ) ),( RMSe + MUR ) ) ) - ( Max( DS,RMSe ) * ( MUC + ( MUR + CS ) ) ) )", "obj1": 0.36794582392776526, "obj2": 0.5182318546641901}, {"determining": "( ( Max( Const,( DDR + MRS ) ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( ( MUC * MLU ),RMSe ) ,DS ) / Max( ( MUC * MLU ),RMSe ) )", "obj1": 0.6659142212189616, "obj2": 0.2801706469975628}, {"determining": "( ( Max( FirstVNF_CPU,PN ) / AMS ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RCSe ,DS ) / Max( ( Max( MUM,Max( MUM,( ( RRSe * ( CS * RRSe ) ) * Min( MLU ,RCSe ) ) ) ) * MLU ),RMSe ) )", "obj1": 0.6817155756207675, "obj2": 0.27718317870121556}, {"determining": "( Max( ARS,MRS ) * ( Max( Min( DDR ,Const ),DDR ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * ( ( ( ( RCSe / MUM ) * RRSe ) / RMSe ) + MUM ) ) ) ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "Min( Min( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + Max( ( MUR / DS ),( MUR / CS ) ) ) )", "obj1": 0.6862302483069977, "obj2": 0.24244713465119277}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( FirstVNF_CPU / ( FirstVNF_RAM / ( MDR * FirstVNF_CPU ) ) ) ) - ( Min( RRS ,FirstVNF_Mem_Server ) / MDR ) )", "choosing": "( ( MUC - ( ( Max( ( MUR / DS ),( MUR / CS ) ) - ( ( DS - MUC ) * ( MLU * ( RCSe + ( CS * RCSe ) ) ) ) ) - RRSe ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 0.6139954853273137, "obj2": 0.3105474111015466}, {"determining": "( ( ( ( ARS / FirstVNF_Mem ) + Min( DDR ,CRS ) ) + Max( ACS,( ( MDR * MRS ) - ( CRS + AMS ) ) ) ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RCSe ,DS ) / CS )", "obj1": 0.6072234762979684, "obj2": 0.3188685095221284}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * Max( ACS,RRS ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( MLU / MLU ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3363431151241535, "obj2": 0.5673626498625658}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ,( Const - MRS ) )", "choosing": "( MLU - ( ( CS + MUM ) + MUC ) )", "obj1": 0.35891647855530473, "obj2": 0.5237904390248088}, {"determining": "Max( ( Max( MDR,( ( FirstVNF_Mem_Server - ( Max( Max( FirstVNF_Mem,PN ),FirstVNF_Mem_Server ) - MRS ) ) / FirstVNF_RAM ) ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC / Max( ( MUR * RRSe ),MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5697884649280073}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( MLU ,MUM ) * MUC ) ,( DS - ( ( ( CS + MUM ) / ( MUC + MUR ) ) / ( ( CS + RRSe ) / Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.9706546275395034, "obj2": 0.023091236719624753}, {"determining": "( ( AMS * DDR ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS + ( RCSe - Max( MUM,RCSe ) ) ) ,Min( DS ,MLU ) )", "obj1": 0.9841986455981941, "obj2": 0.011216228820629785}, {"determining": "( ( AMS * DDR ) - Max( ( FirstVNF_CPU - ( FirstVNF_RAM + RRS ) ),FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * ( RMSe * RCSe ) ) ,Min( DS ,MLU ) )", "obj1": 0.9729119638826185, "obj2": 0.020189084712290577}, {"determining": "Min( Min( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( BR * MRS ) ) ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + ( ( ( MLU / DS ) + ( MLU - MUM ) ) + Max( MUC,RCSe ) ) ) )", "obj1": 0.7020316027088036, "obj2": 0.24131162147830235}, {"determining": "Max( ( RRS + PN ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,( DS - MUM ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.44469525959367945, "obj2": 0.47494481866349336}, {"determining": "( Max( Max( ( PN * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RMSe / ( RCSe + MUR ) ) * MUR ) )", "obj1": 0.8984198645598194, "obj2": 0.04419003378153483}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) - Max( ( FirstVNF_CPU_Server - MDR ),FirstVNF_RAM ) ) - ( MDR * Min( ACS ,( FirstVNF_RAM_Server + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( DS ,Min( ( CS / CS ) ,DS ) ) + MUR ) - ( RRSe * Max( ( CS - MLU ),Max( MUC,CS ) ) ) )", "obj1": 0.9932279909706546, "obj2": 0.006028788509117811}, {"determining": "( Max( ARS,MRS ) * ( Max( ARS,Max( Const,CRS ) ) + ( Max( FirstVNF_Mem_Server,( ( CRS + ARS ) * Min( Max( BR,DDR ) ,ARS ) ) ) / Min( ( AMS * Min( AMS ,ACS ) ) ,PN ) ) ) )", "choosing": "( ( ( RCSe - RCSe ) / MUC ) / ( ( ( MUR / Max( ( DS - MUR ),MUR ) ) + ( MUR - MUM ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "( ( ( ( MRS - FirstVNF_RAM ) / ( DDR + FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( Max( Max( MLU,MUM ),Max( MUC,MUC ) ) + ( MUR * CS ) )", "obj1": 0.9977426636568849, "obj2": 0.0010921176513893009}, {"determining": "( Min( ( MDR / Const ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + RMSe )", "obj1": 0.9954853273137697, "obj2": 0.005203900087743107}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - Max( BR,ACS ) )", "choosing": "Min( ( DS + ( RCSe * MUR ) ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,Const ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - Max( Max( MUM,( ( ( ( RRSe / MUM ) * ( DS - ( MUM + DS ) ) ) * ( ( MLU - MUC ) + RRSe ) ) - MUC ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / AMS ) * ( Max( Min( ARS ,ACS ),Const ) + ( MRS - ACS ) ) ) - MRS ) / ( RRS - CRS ) )", "choosing": "Max( ( RMSe / ( ( Min( RMSe ,( MUM - Max( MUC,RCSe ) ) ) / ( Min( RRSe ,MUM ) + MLU ) ) + CS ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,RRS ) * ( FirstVNF_Mem + ( ACS * Const ) ) ) / Max( FirstVNF_CPU_Server,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MLU,( RRSe * MUC ) ),( CS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + AMS ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( RRSe - ( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,( Min( ( PN + MDR ) ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - ( ( MUM * DS ) * ( ( Min( RRSe ,RCSe ) + ( ( MUM * RMSe ) + RMSe ) ) * Min( CS ,( ( MUM + RMSe ) + ( RMSe / MLU ) ) ) ) ) ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU / ( AMS / Min( Max( MDR,FirstVNF_RAM ) ,Max( MRS,ARS ) ) ) ) / ( RRS - FirstVNF_Mem ) ),Const ) * ( Const - ACS ) )", "choosing": "( ( DS - DS ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / FirstVNF_RAM ),BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( RRSe / ( MUM / DS ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / ( CRS + ACS ) ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( ( ( MLU + Min( MUM ,Max( MUC,RMSe ) ) ) / MUR ) / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / ( Max( Min( MDR ,( FirstVNF_CPU_Server - PN ) ),FirstVNF_Mem ) * PN ) ) ) - ( ( Const + ( FirstVNF_RAM / Max( Max( MDR,Min( CRS ,Const ) ),FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( ( ( RRSe * ( ( MLU / RCSe ) + MLU ) ) - DS ) * ( MLU + ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,( Min( PN ,FirstVNF_RAM ) / Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,CRS ) ) ) - DDR ) ,( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) * ( ( Min( RCSe ,DS ) + Max( CS,( MLU / Max( RCSe,MLU ) ) ) ) - DS ) ) * ( ( ( MUR - RRSe ) * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( DDR / FirstVNF_Mem ) ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( RCSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / AMS ) * Max( ACS,MDR ) ) + Min( Max( FirstVNF_RAM_Server,PN ) ,Min( DDR ,Const ) ) ) * ( ( Min( MDR ,AMS ) * ( Min( ( BR / DDR ) ,FirstVNF_RAM ) - ACS ) ) * ( Min( FirstVNF_RAM ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( RRSe + RRSe ) * ( RMSe / ( MUR + CS ) ) ) ,Min( ( Min( DS ,MLU ) - Max( RCSe,MUR ) ) ,( RRSe + RMSe ) ) ) / ( Max( ( MLU + RMSe ),( DS + RCSe ) ) / Max( ( MUC - DS ),Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,Min( ( FirstVNF_Mem_Server - ACS ) ,RRS ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) )", "choosing": "Max( ( Min( Min( ( ( RMSe - ( ( MLU / MUR ) * MLU ) ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + AMS ) + ( DDR / FirstVNF_RAM ) )", "choosing": "Min( ( MLU + ( MUM / ( RMSe * MUM ) ) ) ,( Max( MLU,MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + RRS ) / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( ( MUC - RRSe ) - ( MUM - ( RCSe * ( CS / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - ( ( ( MRS * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) - ( ( AMS * MDR ) - ( ( ( MDR - ARS ) * PN ) + AMS ) ) ) ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * ( ( DS * RCSe ) - DS ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( ( ( ( CRS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ( FirstVNF_Mem / ARS ) ) ) - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + ( Max( MUR,( ( Max( RMSe,MUM ) - MUM ) / Max( ( RCSe - MUM ),CS ) ) ) - ( DS + MLU ) ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / ( DDR + ( Min( FirstVNF_RAM_Server ,CRS ) + ( CRS * PN ) ) ) )", "choosing": "Max( ( ( MLU * MLU ) + ( MLU * MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( BR,DDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Max( MRS,CRS ) ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * ( RRSe - CS ) ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( BR + Max( ( Min( AMS ,ARS ) + ( FirstVNF_Mem_Server + BR ) ),( ( CRS * ACS ) + ( FirstVNF_CPU_Server - MDR ) ) ) ) )", "choosing": "Max( ( ( MUM - ( MUM + DS ) ) * ( MUR + CS ) ),Max( Max( MLU,MUM ),Max( MUC,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN - BR ),Min( FirstVNF_Mem_Server ,PN ) ) - ( Max( BR,Max( MDR,FirstVNF_Mem ) ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,Max( Min( ( ( RMSe / MUC ) - CS ) ,DS ),( MUM - MUR ) ) ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( MRS * ( Const / ( Max( FirstVNF_RAM,Max( CRS,( PN / BR ) ) ) * ( RRS + MDR ) ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( ( Max( MUC,( Max( MUC,CS ) + MUM ) ) + Min( RRSe ,RMSe ) ) - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ACS ) - ( CRS + AMS ) )", "choosing": "Min( ( ( ( DS * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( ( MDR * MRS ) - ( CRS + AMS ) ) ) * ( Const - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,Min( CS ,CS ) ) / MUM ) ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / FirstVNF_RAM ),BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( RRSe / ( MUM / DS ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,CRS ),AMS ) ) ),AMS ),Min( ( FirstVNF_Mem + RRS ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( MUR,( MUM * DS ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / RMSe ) ) ) + ( RMSe - Min( ( Min( DS ,RCSe ) * ( Max( Min( MUC ,MUM ),( CS / MUC ) ) / RRSe ) ) ,( CS + Min( RRSe ,Max( CS,Max( RRSe,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - MRS ) / ( RRS - CRS ) ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / MUC ) * ( RCSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * ( ( ( MRS + FirstVNF_CPU ) + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) ) ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( ( MUR - RRSe ) * RMSe ) / ( MLU / RMSe ) ) ) ,( Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - CS ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),MRS ) * ( MRS + Min( FirstVNF_Mem ,( DDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( ( MUR + Max( ( Max( MLU,MUR ) * CS ),( MUC * DS ) ) ) * ( MUC / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - ACS ) ,( ( ARS / FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( MRS * MRS ) ,Max( MDR,FirstVNF_CPU ) ) + ( ( DDR - FirstVNF_CPU_Server ) + ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( DS - MUC ) + ( MUM + MLU ) ) - ( RMSe / ( MLU / MUC ) ) ) - ( MUR + Max( RMSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU / ( AMS / Min( Max( MDR,FirstVNF_RAM ) ,Max( MRS,ARS ) ) ) ) / ( RRS - FirstVNF_Mem ) ),Const ) * ( Const - ACS ) )", "choosing": "( ( DS - DS ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( Min( ( ( DDR * MDR ) - ( FirstVNF_RAM - DDR ) ) ,( ( ARS / FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ,RRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( RCSe ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / AMS ) * Max( ACS,MDR ) ) + Min( Max( ( ( FirstVNF_RAM / MDR ) / FirstVNF_RAM ),PN ) ,Min( DDR ,Const ) ) ) * ( ( Min( MDR ,AMS ) * ( ( Min( FirstVNF_Mem_Server ,RRS ) - ( ARS + MDR ) ) + DDR ) ) * ( Min( FirstVNF_RAM ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( RRSe + RRSe ) * ( RMSe / MUM ) ) ,Min( ( Min( DS ,MLU ) - Max( RCSe,MUR ) ) ,( RRSe + RMSe ) ) ) / ( Max( ( MLU + RMSe ),( DS + RCSe ) ) / ( RRSe * Max( RCSe,Max( MUC,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ACS ) - ( Max( RRS,( ( Min( ( ACS - Min( PN ,DDR ) ) ,FirstVNF_RAM ) + AMS ) + BR ) ) + AMS ) )", "choosing": "Min( ( ( ( DS * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) ) ,( Min( ( ( ( RRSe * MUR ) / ( RMSe / RMSe ) ) / RRSe ) ,Min( ( DS - MUM ) ,( RRSe + RMSe ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( Min( ( FirstVNF_CPU - RRS ) ,Min( DDR ,Const ) ) - ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ) ) ) ) * DDR ) - Max( ( FirstVNF_Mem_Server - ( ( ( FirstVNF_RAM_Server / Const ) + FirstVNF_RAM ) + FirstVNF_CPU ) ),FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( MUM - RRSe ) * Min( CS ,RMSe ) ),( ( MUM - Max( ( MUR + MLU ),Max( MUM,CS ) ) ) + Max( RCSe,RRSe ) ) ) ,Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( AMS * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( Min( ( FirstVNF_CPU - RRS ) ,Min( DDR ,Const ) ) - ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ) ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + ( RMSe * MUR ) ) ),( ( MUM - Max( ( MUR + MLU ),Max( MUM,CS ) ) ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( Min( Max( Max( BR,AMS ),Min( ( RRS - FirstVNF_RAM ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) ) )", "choosing": "Min( ( ( Max( CS,MUR ) * ( ( RRSe / RRSe ) + ( RMSe - Min( RMSe ,MUR ) ) ) ) * RCSe ) ,( DS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( BR,AMS ),Min( ( ( ( DDR * FirstVNF_RAM_Server ) / ( Const + DDR ) ) - FirstVNF_RAM ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Min( ( ( Max( CS,MUR ) * ( ( MUR - DS ) * MUM ) ) * RCSe ) ,( DS - MUM ) ) / RRSe ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,CRS ),AMS ) ) ),AMS ),Min( ( FirstVNF_Mem + RRS ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( MUR,( MUM * DS ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / RMSe ) ) ) + ( RMSe - Min( ( Min( DS ,RCSe ) * ( Max( Min( MUC ,MUM ),( CS / MUC ) ) / RRSe ) ) ,( CS + Min( RRSe ,Max( CS,Max( RRSe,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Max( PN,Min( FirstVNF_CPU_Server ,MRS ) ) ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( Min( RMSe ,MUR ) + Max( MUM,CS ) ) * ( ( CS * ( RRSe - ( CS - DS ) ) ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - FirstVNF_Mem ) * Max( Max( FirstVNF_Mem,FirstVNF_CPU ),AMS ) ) ),AMS ),Min( ( RRS - FirstVNF_RAM ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * ( RRSe - CS ) ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / RMSe ) ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MRS ) + ( PN - ACS ) )", "choosing": "( Min( CS ,( ( CS + MUM ) + Max( ( MUR / DS ),( MUR / CS ) ) ) ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( DDR * MDR ) - ( RRS - BR ) ) ,( ( Max( ( DDR / ( RRS - FirstVNF_Mem ) ),Const ) * ( Const - ACS ) ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( MRS * MRS ) ,Max( MDR,FirstVNF_CPU ) ) + ( ( DDR - FirstVNF_CPU_Server ) + ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( DS - MUC ) + ( MUM + MLU ) ) - ( RMSe / ( MLU / MUC ) ) ) - ( MUR + ( Max( MUC,( ( MUM * ( ( MUM - CS ) + ( RCSe / CS ) ) ) - MUC ) ) * ( ( Min( ( ( MUR + MUM ) + Max( DS,RCSe ) ) ,( MUR + ( DS - RCSe ) ) ) - RMSe ) / Max( ( RCSe * MLU ),RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( Max( AMS,PN ),DDR ) )", "choosing": "Min( ( RRSe - CS ) ,( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( MRS,CRS ) - Max( BR,DDR ) ),PN ) - FirstVNF_Mem_Server )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( RCSe,RMSe ) ) + ( ( MUR + RMSe ) / Max( MUC,MLU ) ) ) - Min( ( MUM * RCSe ) ,( DS - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),MRS ) - ( Max( BR,Max( MDR,( RRS / Max( FirstVNF_CPU,MRS ) ) ) ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,MUC ),Max( ( MUR + MUM ),( CS / ( MUC + MLU ) ) ) ) - Min( Min( RMSe ,MLU ) ,( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,FirstVNF_CPU ),AMS ) ) ),AMS ),( Max( ( PN - BR ),MRS ) - ( Max( BR,Max( MDR,FirstVNF_Mem ) ) + BR ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( MUR,( MUR + MUM ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / MUC ) ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,( MDR / FirstVNF_Mem_Server ) ) - Max( BR,DDR ) ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( CS / RMSe ) + Max( DS,RMSe ) ) + ( ( RRSe / RCSe ) / Max( MUC,MLU ) ) ) - Min( ( RRSe - CS ) ,Max( RCSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,FirstVNF_CPU ),AMS ) ) ),DDR ),Min( ( RRS - FirstVNF_RAM ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( MUR,( MUR + MUM ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( ( Min( ( RCSe * DS ) ,( RCSe / MUC ) ) * Min( ( MLU / RMSe ) ,( MUR * CS ) ) ) / RMSe ) ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,CRS ),AMS ) ) ),AMS ),Min( ( FirstVNF_Mem + RRS ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( MUR,( MUM * DS ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / RMSe ) ) ) + ( RMSe - Min( ( Min( DS ,RCSe ) * ( Max( Min( MUC ,MUM ),( CS / MUC ) ) / RRSe ) ) ,( CS + Min( RRSe ,Max( CS,Max( RRSe,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,CRS ),AMS ) ) ),AMS ),Min( ( FirstVNF_Mem + RRS ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( MUR,( MUM * DS ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / RMSe ) ) ) + ( RMSe - Min( ( Min( DS ,RCSe ) * ( Max( Min( MUC ,MUM ),( CS / MUC ) ) / RRSe ) ) ,( CS + Min( RRSe ,Max( CS,Max( RRSe,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + RRS ) / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( ( MUC - RRSe ) - ( MUM - ( RCSe * ( CS / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),AMS ) ) ),AMS ),Min( ( ( Const + Const ) + RRS ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( MUR,( MUM * RRSe ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / RMSe ) ) ) + ( RMSe - Min( ( Min( DS ,RCSe ) * ( Max( Min( MUC ,MUM ),( CS / MUC ) ) / RRSe ) ) ,( RRSe / ( RRSe - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * FirstVNF_CPU ) * ( PN + FirstVNF_CPU_Server ) ) - MRS ) / ( RRS - CRS ) )", "choosing": "Max( Max( Max( Max( RRSe,MUC ),RRSe ),MLU ),( ( RCSe - MLU ) + ( MUR * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) + ARS ) + ( BR * MRS ) )", "choosing": "( ( Max( MLU,( CS / MUC ) ) + ( MLU - MUM ) ) + Max( MUC,RCSe ) )", "obj1": 0.24604966139954854, "obj2": 0.6928951417758185}, {"determining": "( ( Max( Const,( DDR + MRS ) ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( ( MUC * MLU ),RMSe ) ,DS ) / Max( ( MUC * MLU ),( RMSe / ( RCSe + MUR ) ) ) )", "obj1": 0.8284424379232506, "obj2": 0.09775710752533281}, {"determining": "( Max( AMS,PN ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( CS / RMSe ) + Max( DS,RMSe ) ) + ( ( MUR + RMSe ) / Max( MUC,MLU ) ) ) - Min( ( MUM * RCSe ) ,( DS - MUM ) ) )", "obj1": 0.5191873589164786, "obj2": 0.34205766530984166}, {"determining": "( ( ( ( ARS / FirstVNF_Mem ) + Min( DDR ,CRS ) ) + Max( ACS,( ( MDR * MRS ) - ( CRS + AMS ) ) ) ) + ( ( DDR + MRS ) + ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( RCSe - DS ) / Max( ( RRSe / ( MUM / DS ) ),MLU ) ) ,DS ) / CS )", "obj1": 0.5846501128668171, "obj2": 0.31298464163894396}, {"determining": "( Min( MDR ,DDR ) + ( ARS - Max( ( Min( RRS ,FirstVNF_RAM ) / PN ),ACS ) ) )", "choosing": "( ( ( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) - MLU ) + ( ( RMSe / Max( Min( ( RRSe * CS ) ,Min( ( DS / RRSe ) ,Max( Min( MUM ,CS ),RCSe ) ) ),( MLU * CS ) ) ) * MUR ) )", "obj1": 0.8668171557562077, "obj2": 0.05785506655127381}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Min( ( MRS - FirstVNF_RAM_Server ) ,( ( ACS / PN ) / AMS ) ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( ( MUM / DS ) - ( RCSe / RMSe ) ) / Min( ( RRSe - MLU ) ,( DS + MLU ) ) ) )", "obj1": 0.6952595936794582, "obj2": 0.1930857643107063}, {"determining": "( ( FirstVNF_RAM + ( CRS + Min( ( ( ( FirstVNF_Mem / ACS ) - ( AMS / ( DDR * FirstVNF_RAM_Server ) ) ) / PN ) ,( ( DDR * BR ) / FirstVNF_RAM ) ) ) ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( ( MLU / Min( RRSe ,( Min( MUC ,RRSe ) / Min( RMSe ,DS ) ) ) ) * ( CS * MUC ) ) ) ,( DS - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,( FirstVNF_Mem + MDR ) ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( RCSe + MLU ) ) ) )", "obj1": 0.7516930022573364, "obj2": 0.1477364876185375}, {"determining": "Min( Min( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + Max( ( MUR / DS ),( MUR / CS ) ) ) )", "obj1": 0.6862302483069977, "obj2": 0.24244713465119277}, {"determining": "( Max( ACS,( ( MDR * ( Min( ( ( DDR * MDR ) - ( FirstVNF_RAM - DDR ) ) ,( ( ARS / FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) * ( ACS - ( MDR * RRS ) ) ) ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,MUR ) / MUM ) ) - ( MLU + CS ) ) - ( Min( RCSe ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) ) + ( DS + RMSe ) ) )", "obj1": 0.46275395033860045, "obj2": 0.4101346700800818}, {"determining": "( Max( ACS,( ( FirstVNF_Mem + MDR ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,MUR ) / MUM ) ) - DS ) - ( Min( RCSe ,Min( ( CS / DS ) ,MUM ) ) + ( DS + RMSe ) ) )", "obj1": 0.4401805869074492, "obj2": 0.45801679359133396}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,AMS ) ) - CRS ) / Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MUM ,Min( DS ,MUC ) ) ,( DS - ( ( ( CS + MUM ) / ( MUC + MUR ) ) / ( ( ( MLU + ( Max( MUM,CS ) + MUC ) ) + RRSe ) / Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.6275395033860045, "obj2": 0.28830039930554635}, {"determining": "Max( RRS,Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( MLU / MLU ) / ( DS * ( ( RCSe + MUC ) - MUC ) ) )", "obj1": 0.25733634311512416, "obj2": 0.6318628279287519}, {"determining": "( ( ( FirstVNF_CPU_Server - MRS ) / ( ( FirstVNF_CPU - RRS ) - CRS ) ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / ( RMSe * MUR ) ) * ( RCSe / RCSe ) )", "obj1": 0.30699774266365687, "obj2": 0.6049378858618303}, {"determining": "Max( ( DDR + FirstVNF_Mem_Server ),( ACS - ARS ) )", "choosing": "( ( RMSe - ( DS / MUR ) ) / ( MLU + RMSe ) )", "obj1": 0.27765237020316025, "obj2": 0.6249340945806976}, {"determining": "( Max( RRS,PN ) - ( Min( RRS ,FirstVNF_Mem_Server ) / MDR ) )", "choosing": "( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) - ( ( ( ( MUM / ( DS + Max( MUM,RMSe ) ) ) / MUM ) - ( ( DS - MUC ) * ( MLU * RMSe ) ) ) - RRSe ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 0.6636568848758465, "obj2": 0.2756882314245947}, {"determining": "( Max( AMS,PN ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( CS / RMSe ) + ( ( ( ( CS / RMSe ) + Max( DS,RMSe ) ) + ( ( MUR + RMSe ) / Max( MUC,MLU ) ) ) - Min( ( MUM * RCSe ) ,( DS - MUM ) ) ) ) + ( ( MUR + RMSe ) / Max( MUC,MLU ) ) ) - Min( ( MUM * RCSe ) ,( DS - MUM ) ) )", "obj1": 0.5011286681715575, "obj2": 0.37934322274163274}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) + ( CRS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Const ) ) ) - ( Min( DDR ,( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,( AMS - DDR ) ) - PN ) + MRS ) ) - FirstVNF_CPU ) ) ,( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / ( Const / FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,MUC ) / ( Min( DS ,MLU ) - Max( RCSe,MUR ) ) ) - Max( CS,CS ) )", "obj1": 0.35214446952595935, "obj2": 0.5463597353342023}, {"determining": "Min( Max( ( ACS - Min( ( FirstVNF_RAM / AMS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) ),MDR ) ,( FirstVNF_Mem_Server * Min( ARS ,ARS ) ) )", "choosing": "( Max( MLU,Max( RRSe,DS ) ) * Max( ( MLU / CS ),( Min( ( MUR * RCSe ) ,( ( ( RRSe + RCSe ) + ( MUM * MLU ) ) - RRSe ) ) * MUC ) ) )", "obj1": 0.4221218961625282, "obj2": 0.48070411137851615}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( FirstVNF_CPU / ( FirstVNF_RAM / ( MDR * FirstVNF_CPU ) ) ) ) - ( Min( RRS ,FirstVNF_Mem_Server ) / MDR ) )", "choosing": "( ( MUC - ( ( Max( ( MUR / DS ),( MUR / CS ) ) - ( ( DS - MUC ) * ( MLU * ( RCSe + ( CS * RCSe ) ) ) ) ) - RRSe ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 0.6139954853273137, "obj2": 0.3105474111015466}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * Max( ACS,RRS ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,Min( FirstVNF_CPU ,( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MLU / MLU ) / ( ( MLU / Max( ( ( Min( RCSe ,MUR ) + MUR ) * RCSe ),( Min( MLU ,MUM ) * MUC ) ) ) + ( RRSe / MUM ) ) )", "obj1": 0.3544018058690745, "obj2": 0.5174880552418589}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( DS + MLU ) ) ) )", "obj1": 0.7516930022573364, "obj2": 0.1477364876185375}, {"determining": "Max( ( ( ( DDR / RRS ) - FirstVNF_Mem_Server ) + BR ),( AMS / FirstVNF_RAM ) )", "choosing": "( Min( Max( ( RCSe - MUM ),( RMSe + Max( MUC,MUR ) ) ) ,Max( ( MUR * ( RRSe - DS ) ),( RMSe + MUR ) ) ) - ( Max( DS,MUR ) * ( MUC + ( MUR + CS ) ) ) )", "obj1": 0.3747178329571106, "obj2": 0.5041608837042667}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - Max( BR,ACS ) )", "choosing": "Min( ( RRSe - CS ) ,( MUC - RRSe ) )", "obj1": 0.945823927765237, "obj2": 0.03663789734820685}, {"determining": "( Max( Max( ( PN * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RMSe / ( RCSe + MUR ) ) * MUR ) )", "obj1": 0.8984198645598194, "obj2": 0.04419003378153483}, {"determining": "( Max( ARS,MRS ) * ( Max( Min( DDR ,( Min( Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ,BR ) - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),AMS ) ) ) ),DDR ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * ( ( ( ( CS / MUM ) * RRSe ) / RMSe ) + MUM ) ) ) ) / ( ( RMSe - MUC ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.31376975169300225, "obj2": 0.5851288403813408}, {"determining": "Min( Max( ( ( ( AMS * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( Min( ( FirstVNF_CPU - RRS ) ,Min( DDR ,Const ) ) - ( ( AMS - FirstVNF_CPU_Server ) - ( Min( Min( PN ,FirstVNF_Mem_Server ) ,CRS ) + MDR ) ) ) ),MDR ) ,( FirstVNF_Mem_Server * DDR ) )", "choosing": "( Min( RRSe ,MUC ) * Max( ( MLU / CS ),MUR ) )", "obj1": 0.3837471783295711, "obj2": 0.4840497374335043}, {"determining": "( Max( ARS,MRS ) * ( Max( Min( DDR ,Const ),DDR ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * ( ( ( ( RCSe / MUM ) * RRSe ) / RMSe ) + MUM ) ) ) ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "Min( Min( Max( ( ( BR - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ,( Const - MRS ) ) ) / ( RRS + ARS ) ),( BR * MRS ) ) ,FirstVNF_CPU ) ,( Const - ( AMS * Const ) ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( ( CS + MUM ) + MUC ) + ( ( ( MLU / DS ) + ( ( MLU / Max( ( MLU - MUM ),( RCSe * DS ) ) ) - MUM ) ) + Max( MUC,RCSe ) ) ) )", "obj1": 0.6772009029345373, "obj2": 0.2635344822830589}, {"determining": "( Max( ACS,( ( MDR * ( MRS * ( ACS - ( MDR * RRS ) ) ) ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,MUR ) / MUM ) ) - ( MLU + CS ) ) - ( Min( RCSe ,Min( ( CS / DS ) ,MUM ) ) + ( DS + RMSe ) ) )", "obj1": 0.4672686230248307, "obj2": 0.39748678327951276}, {"determining": "( Max( ACS,( ( MDR * ( ( Min( ( MDR / Const ) ,RRS ) - DDR ) * ( ACS - ( MDR * RRS ) ) ) ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,MUR ) / MUM ) ) - ( MLU + CS ) ) - ( Min( RCSe ,Min( ( CS / DS ) ,MUM ) ) + ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) )", "obj1": 0.4898419864559819, "obj2": 0.3849281808370098}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * Max( ACS,RRS ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( MLU / MLU ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3363431151241535, "obj2": 0.5673626498625658}, {"determining": "( ( ( ( FirstVNF_Mem_Server / AMS ) * ( Max( Min( ( MDR / Const ) ,ACS ),Const ) + ( MRS - ACS ) ) ) - MRS ) / ( RRS - CRS ) )", "choosing": "Max( ( RMSe / ( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) + CS ) ),( MUM - RRSe ) )", "obj1": 0.43340857787810383, "obj2": 0.46530585853292994}, {"determining": "Max( ( Max( MDR,( ( FirstVNF_Mem_Server - ( Max( Max( FirstVNF_Mem,PN ),FirstVNF_Mem_Server ) - MRS ) ) / FirstVNF_RAM ) ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC / Max( ( MUR * RRSe ),MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5697884649280073}, {"determining": "( Max( Max( ( PN * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RMSe / ( RCSe + MUR ) ) * MUR ) )", "obj1": 0.8984198645598194, "obj2": 0.04419003378153483}, {"determining": "( ( AMS * DDR ) - Max( ( FirstVNF_CPU - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ),FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * ( ( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) * RCSe ) ) ,Min( DS ,MLU ) )", "obj1": 0.9593679458239278, "obj2": 0.03039451871337363}, {"determining": "( ( AMS * DDR ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS + ( RCSe - Max( MUM,RCSe ) ) ) ,Min( DS ,MLU ) )", "obj1": 0.9841986455981941, "obj2": 0.011216228820629785}, {"determining": "( ( AMS * DDR ) - Max( ( FirstVNF_CPU - ( FirstVNF_RAM + RRS ) ),FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * ( RMSe * RCSe ) ) ,Min( DS ,MLU ) )", "obj1": 0.9729119638826185, "obj2": 0.020189084712290577}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( MLU ,MUM ) * MUC ) ,( DS - ( ( ( CS + MUM ) / ( MUC + MUR ) ) / ( ( CS + RRSe ) / Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.9706546275395034, "obj2": 0.023091236719624753}, {"determining": "Min( ( ( DDR + FirstVNF_Mem_Server ) - DDR ) ,( ARS * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + ( MLU - ( Min( RRSe ,MLU ) / MUC ) ) ) * ( ( CS * ( RRSe - CS ) ) / ( MLU / RMSe ) ) ) ,Max( MUC,MUC ) )", "obj1": 0.9480812641083521, "obj2": 0.03169720321324646}, {"determining": "( Max( ARS,MRS ) * ( Max( ARS,Max( Const,CRS ) ) + ( Max( FirstVNF_Mem_Server,( ( CRS + ARS ) * Min( Max( BR,DDR ) ,ARS ) ) ) / Min( ( AMS * Min( AMS ,ACS ) ) ,PN ) ) ) )", "choosing": "( ( ( RCSe - RCSe ) / MUC ) / ( ( ( MUR / Max( ( DS - MUR ),MUR ) ) + ( MUR - MUM ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - ( AMS / FirstVNF_RAM ) ) * Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),AMS ) ) ),AMS ),Min( ( FirstVNF_Mem + RRS ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( MUR,( MUM * DS ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / ( MUR + CS ) ) ) ) + ( RMSe - Min( ( Min( DS ,RCSe ) * ( Max( Min( MUC ,MUM ),( CS / MUC ) ) / RRSe ) ) ,( RRSe / ( RRSe - RMSe ) ) ) ) )", "obj1": 0.9909706546275395, "obj2": 0.007532890679664875}, {"determining": "Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * DDR ) )", "choosing": "( Max( MLU,Max( RRSe,DS ) ) * Max( ( MLU / CS ),( Min( MLU ,( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) * MUC ) ) )", "obj1": 0.3837471783295711, "obj2": 0.4840497374335043}, {"determining": "( ( ( ( MRS - FirstVNF_RAM ) / ( DDR + FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( Max( Max( MLU,MUM ),Max( MUC,MUC ) ) + ( MUR * CS ) )", "obj1": 0.9977426636568849, "obj2": 0.0010921176513893009}, {"determining": "( Min( ( MDR / Const ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + RMSe )", "obj1": 0.9954853273137697, "obj2": 0.005203900087743107}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) - Max( ( FirstVNF_CPU_Server - MDR ),FirstVNF_RAM ) ) - ( MDR * Min( ACS ,( FirstVNF_RAM_Server + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( DS ,Min( ( CS / CS ) ,DS ) ) + MUR ) - ( RRSe * Max( ( CS - MLU ),Max( MUC,CS ) ) ) )", "obj1": 0.9932279909706546, "obj2": 0.006028788509117811}, {"determining": "( Min( AMS ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Min( ( Min( ARS ,DDR ) + ( RRS * ARS ) ) ,RRS ) )", "choosing": "Min( ( DS / DS ) ,( MUM / ( ( Min( MUR ,CS ) * MLU ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - Max( BR,ACS ) )", "choosing": "Min( ( DS + ( RCSe * MUR ) ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,Const ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - Max( Max( MUM,( ( ( ( RRSe / MUM ) * ( DS - ( MUM + DS ) ) ) * ( ( MLU - MUC ) + RRSe ) ) - MUC ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / AMS ) * ( Max( Min( ARS ,ACS ),Const ) + ( MRS - ACS ) ) ) - MRS ) / ( RRS - CRS ) )", "choosing": "Max( ( RMSe / ( ( Min( RMSe ,( MUM - Max( MUC,RCSe ) ) ) / ( Min( RRSe ,MUM ) + MLU ) ) + CS ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,RRS ) * ( FirstVNF_Mem + ( ACS * Const ) ) ) / Max( FirstVNF_CPU_Server,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MLU,( RRSe * MUC ) ),( CS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + AMS ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( RRSe - ( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,( Min( ( PN + MDR ) ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - ( ( MUM * DS ) * ( ( Min( RRSe ,RCSe ) + ( ( MUM * RMSe ) + RMSe ) ) * Min( CS ,( ( MUM + RMSe ) + ( RMSe / MLU ) ) ) ) ) ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU / ( AMS / Min( Max( MDR,FirstVNF_RAM ) ,Max( MRS,ARS ) ) ) ) / ( RRS - FirstVNF_Mem ) ),Const ) * ( Const - ACS ) )", "choosing": "( ( DS - DS ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / FirstVNF_RAM ),BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( RRSe / ( MUM / DS ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / ( CRS + ACS ) ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( ( ( MLU + Min( MUM ,Max( MUC,RMSe ) ) ) / MUR ) / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / ( Max( Min( MDR ,( FirstVNF_CPU_Server - PN ) ),FirstVNF_Mem ) * PN ) ) ) - ( ( Const + ( FirstVNF_RAM / Max( Max( MDR,Min( CRS ,Const ) ),FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( ( ( RRSe * ( ( MLU / RCSe ) + MLU ) ) - DS ) * ( MLU + ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,( Min( PN ,FirstVNF_RAM ) / Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,CRS ) ) ) - DDR ) ,( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) * ( ( Min( RCSe ,DS ) + Max( CS,( MLU / Max( RCSe,MLU ) ) ) ) - DS ) ) * ( ( ( MUR - RRSe ) * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( DDR / FirstVNF_Mem ) ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( RCSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / AMS ) * Max( ACS,MDR ) ) + Min( Max( FirstVNF_RAM_Server,PN ) ,Min( DDR ,Const ) ) ) * ( ( Min( MDR ,AMS ) * ( Min( ( BR / DDR ) ,FirstVNF_RAM ) - ACS ) ) * ( Min( FirstVNF_RAM ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( RRSe + RRSe ) * ( RMSe / ( MUR + CS ) ) ) ,Min( ( Min( DS ,MLU ) - Max( RCSe,MUR ) ) ,( RRSe + RMSe ) ) ) / ( Max( ( MLU + RMSe ),( DS + RCSe ) ) / Max( ( MUC - DS ),Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,Min( ( FirstVNF_Mem_Server - ACS ) ,RRS ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) )", "choosing": "Max( ( Min( Min( ( ( RMSe - ( ( MLU / MUR ) * MLU ) ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + AMS ) + ( DDR / FirstVNF_RAM ) )", "choosing": "Min( ( MLU + ( MUM / ( RMSe * MUM ) ) ) ,( Max( MLU,MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + RRS ) / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( ( MUC - RRSe ) - ( MUM - ( RCSe * ( CS / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - ( ( ( MRS * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) - ( ( AMS * MDR ) - ( ( ( MDR - ARS ) * PN ) + AMS ) ) ) ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * ( ( DS * RCSe ) - DS ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( ( ( ( CRS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ( FirstVNF_Mem / ARS ) ) ) - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + ( Max( MUR,( ( Max( RMSe,MUM ) - MUM ) / Max( ( RCSe - MUM ),CS ) ) ) - ( DS + MLU ) ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / ( DDR + ( Min( FirstVNF_RAM_Server ,CRS ) + ( CRS * PN ) ) ) )", "choosing": "Max( ( ( MLU * MLU ) + ( MLU * MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( BR,DDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Max( MRS,CRS ) ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * ( RRSe - CS ) ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( BR + Max( ( Min( AMS ,ARS ) + ( FirstVNF_Mem_Server + BR ) ),( ( CRS * ACS ) + ( FirstVNF_CPU_Server - MDR ) ) ) ) )", "choosing": "Max( ( ( MUM - ( MUM + DS ) ) * ( MUR + CS ) ),Max( Max( MLU,MUM ),Max( MUC,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN - BR ),Min( FirstVNF_Mem_Server ,PN ) ) - ( Max( BR,Max( MDR,FirstVNF_Mem ) ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,Max( Min( ( ( RMSe / MUC ) - CS ) ,DS ),( MUM - MUR ) ) ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( MRS * ( Const / ( Max( FirstVNF_RAM,Max( CRS,( PN / BR ) ) ) * ( RRS + MDR ) ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( ( Max( MUC,( Max( MUC,CS ) + MUM ) ) + Min( RRSe ,RMSe ) ) - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ACS ) - ( CRS + AMS ) )", "choosing": "Min( ( ( ( DS * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( ( MDR * MRS ) - ( CRS + AMS ) ) ) * ( Const - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,Min( CS ,CS ) ) / MUM ) ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / FirstVNF_RAM ),BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( RRSe / ( MUM / DS ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,CRS ),AMS ) ) ),AMS ),Min( ( FirstVNF_Mem + RRS ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( MUR,( MUM * DS ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / RMSe ) ) ) + ( RMSe - Min( ( Min( DS ,RCSe ) * ( Max( Min( MUC ,MUM ),( CS / MUC ) ) / RRSe ) ) ,( CS + Min( RRSe ,Max( CS,Max( RRSe,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - MRS ) / ( RRS - CRS ) ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / MUC ) * ( RCSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * ( ( ( MRS + FirstVNF_CPU ) + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) ) ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( ( MUR - RRSe ) * RMSe ) / ( MLU / RMSe ) ) ) ,( Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - CS ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),MRS ) * ( MRS + Min( FirstVNF_Mem ,( DDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( ( MUR + Max( ( Max( MLU,MUR ) * CS ),( MUC * DS ) ) ) * ( MUC / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - ACS ) ,( ( ARS / FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( MRS * MRS ) ,Max( MDR,FirstVNF_CPU ) ) + ( ( DDR - FirstVNF_CPU_Server ) + ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( DS - MUC ) + ( MUM + MLU ) ) - ( RMSe / ( MLU / MUC ) ) ) - ( MUR + Max( RMSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU / ( AMS / Min( Max( MDR,FirstVNF_RAM ) ,Max( MRS,ARS ) ) ) ) / ( RRS - FirstVNF_Mem ) ),Const ) * ( Const - ACS ) )", "choosing": "( ( DS - DS ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( Min( ( ( DDR * MDR ) - ( FirstVNF_RAM - DDR ) ) ,( ( ARS / FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ,RRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( RCSe ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / AMS ) * Max( ACS,MDR ) ) + Min( Max( ( ( FirstVNF_RAM / MDR ) / FirstVNF_RAM ),PN ) ,Min( DDR ,Const ) ) ) * ( ( Min( MDR ,AMS ) * ( ( Min( FirstVNF_Mem_Server ,RRS ) - ( ARS + MDR ) ) + DDR ) ) * ( Min( FirstVNF_RAM ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( RRSe + RRSe ) * ( RMSe / MUM ) ) ,Min( ( Min( DS ,MLU ) - Max( RCSe,MUR ) ) ,( RRSe + RMSe ) ) ) / ( Max( ( MLU + RMSe ),( DS + RCSe ) ) / ( RRSe * Max( RCSe,Max( MUC,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ACS ) - ( Max( RRS,( ( Min( ( ACS - Min( PN ,DDR ) ) ,FirstVNF_RAM ) + AMS ) + BR ) ) + AMS ) )", "choosing": "Min( ( ( ( DS * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) ) ,( Min( ( ( ( RRSe * MUR ) / ( RMSe / RMSe ) ) / RRSe ) ,Min( ( DS - MUM ) ,( RRSe + RMSe ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( Min( ( FirstVNF_CPU - RRS ) ,Min( DDR ,Const ) ) - ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ) ) ) ) * DDR ) - Max( ( FirstVNF_Mem_Server - ( ( ( FirstVNF_RAM_Server / Const ) + FirstVNF_RAM ) + FirstVNF_CPU ) ),FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( MUM - RRSe ) * Min( CS ,RMSe ) ),( ( MUM - Max( ( MUR + MLU ),Max( MUM,CS ) ) ) + Max( RCSe,RRSe ) ) ) ,Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( AMS * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( Min( ( FirstVNF_CPU - RRS ) ,Min( DDR ,Const ) ) - ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ) ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + ( RMSe * MUR ) ) ),( ( MUM - Max( ( MUR + MLU ),Max( MUM,CS ) ) ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( Min( Max( Max( BR,AMS ),Min( ( RRS - FirstVNF_RAM ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) ) )", "choosing": "Min( ( ( Max( CS,MUR ) * ( ( RRSe / RRSe ) + ( RMSe - Min( RMSe ,MUR ) ) ) ) * RCSe ) ,( DS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( BR,AMS ),Min( ( ( ( DDR * FirstVNF_RAM_Server ) / ( Const + DDR ) ) - FirstVNF_RAM ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Min( ( ( Max( CS,MUR ) * ( ( MUR - DS ) * MUM ) ) * RCSe ) ,( DS - MUM ) ) / RRSe ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,CRS ),AMS ) ) ),AMS ),Min( ( FirstVNF_Mem + RRS ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( MUR,( MUM * DS ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / RMSe ) ) ) + ( RMSe - Min( ( Min( DS ,RCSe ) * ( Max( Min( MUC ,MUM ),( CS / MUC ) ) / RRSe ) ) ,( CS + Min( RRSe ,Max( CS,Max( RRSe,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Max( PN,Min( FirstVNF_CPU_Server ,MRS ) ) ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( Min( RMSe ,MUR ) + Max( MUM,CS ) ) * ( ( CS * ( RRSe - ( CS - DS ) ) ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - FirstVNF_Mem ) * Max( Max( FirstVNF_Mem,FirstVNF_CPU ),AMS ) ) ),AMS ),Min( ( RRS - FirstVNF_RAM ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * ( RRSe - CS ) ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / RMSe ) ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MRS ) + ( PN - ACS ) )", "choosing": "( Min( CS ,( ( CS + MUM ) + Max( ( MUR / DS ),( MUR / CS ) ) ) ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( DDR * MDR ) - ( RRS - BR ) ) ,( ( Max( ( DDR / ( RRS - FirstVNF_Mem ) ),Const ) * ( Const - ACS ) ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( MRS * MRS ) ,Max( MDR,FirstVNF_CPU ) ) + ( ( DDR - FirstVNF_CPU_Server ) + ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( DS - MUC ) + ( MUM + MLU ) ) - ( RMSe / ( MLU / MUC ) ) ) - ( MUR + ( Max( MUC,( ( MUM * ( ( MUM - CS ) + ( RCSe / CS ) ) ) - MUC ) ) * ( ( Min( ( ( MUR + MUM ) + Max( DS,RCSe ) ) ,( MUR + ( DS - RCSe ) ) ) - RMSe ) / Max( ( RCSe * MLU ),RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( Max( AMS,PN ),DDR ) )", "choosing": "Min( ( RRSe - CS ) ,( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( MRS,CRS ) - Max( BR,DDR ) ),PN ) - FirstVNF_Mem_Server )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( RCSe,RMSe ) ) + ( ( MUR + RMSe ) / Max( MUC,MLU ) ) ) - Min( ( MUM * RCSe ) ,( DS - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),MRS ) - ( Max( BR,Max( MDR,( RRS / Max( FirstVNF_CPU,MRS ) ) ) ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,MUC ),Max( ( MUR + MUM ),( CS / ( MUC + MLU ) ) ) ) - Min( Min( RMSe ,MLU ) ,( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,FirstVNF_CPU ),AMS ) ) ),AMS ),( Max( ( PN - BR ),MRS ) - ( Max( BR,Max( MDR,FirstVNF_Mem ) ) + BR ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( MUR,( MUR + MUM ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / MUC ) ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Max( Min( MDR ,FirstVNF_Mem ),ACS ) / ( RRS - CRS ) )", "choosing": "Max( ( RMSe / ( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( DS + ( RCSe * ( CS / ( RMSe + MLU ) ) ) ) ) + CS ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),AMS ) ) ),AMS ),Min( ( ( Const + Const ) + RRS ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( MUR,( MUM * RRSe ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / RMSe ) ) ) + ( RMSe - Min( ( Min( DS ,RCSe ) * ( Max( Min( MUC ,MUM ),( CS / MUC ) ) / RRSe ) ) ,( RRSe / ( RRSe - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) + ARS ) + ( BR * MRS ) )", "choosing": "( ( Max( MLU,( CS / MUC ) ) + ( MLU - MUM ) ) + Max( MUC,RCSe ) )", "obj1": 0.24604966139954854, "obj2": 0.6928951417758185}, {"determining": "( ( Max( Const,( DDR + MRS ) ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( ( MUC * MLU ),RMSe ) ,DS ) / Max( ( MUC * MLU ),( RMSe / ( RCSe + MUR ) ) ) )", "obj1": 0.8284424379232506, "obj2": 0.09775710752533281}, {"determining": "( Max( AMS,PN ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( CS / RMSe ) + Max( DS,RMSe ) ) + ( ( MUR + RMSe ) / Max( MUC,MLU ) ) ) - Min( ( MUM * RCSe ) ,( DS - MUM ) ) )", "obj1": 0.5191873589164786, "obj2": 0.34205766530984166}, {"determining": "( ( ( ( ARS / FirstVNF_Mem ) + Min( DDR ,CRS ) ) + Max( ACS,( ( MDR * MRS ) - ( CRS + AMS ) ) ) ) + ( ( DDR + MRS ) + ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / FirstVNF_RAM ),BR ) * ( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( RCSe - DS ) / Max( ( ( RCSe - DS ) / Max( ( RRSe / ( MUM / DS ) ),MLU ) ),MLU ) ) ,DS ) / CS )", "obj1": 0.582392776523702, "obj2": 0.3111765234988027}, {"determining": "( Max( Max( ( PN * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,AMS ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( ( DS * MUR ) - ( MLU + CS ) ) * MUR ) )", "obj1": 0.9367945823927766, "obj2": 0.022429834144096755}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Min( ( DDR - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( ( MUM / DS ) - DS ) / Min( ( RRSe - MLU ) ,CS ) ) )", "obj1": 0.6952595936794582, "obj2": 0.1930857643107063}, {"determining": "Min( Min( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + Max( ( MUR / DS ),( MUR / CS ) ) ) )", "obj1": 0.6862302483069977, "obj2": 0.24244713465119277}, {"determining": "( Min( MDR ,DDR ) + ( ARS - Max( ( Min( RRS ,FirstVNF_RAM ) / PN ),ACS ) ) )", "choosing": "( ( ( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) - MLU ) + ( ( RMSe / Max( Min( ( RRSe * CS ) ,Min( ( DS / RRSe ) ,Max( Min( MUM ,CS ),RCSe ) ) ),( MLU * CS ) ) ) * MUR ) )", "obj1": 0.8668171557562077, "obj2": 0.05785506655127381}, {"determining": "( Max( ACS,( ( MDR * ( Min( ( ( DDR * MDR ) - ( FirstVNF_RAM - DDR ) ) ,( ( ARS / FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) * ( ACS - ( MDR * RRS ) ) ) ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,MUR ) / MUM ) ) - ( MLU + CS ) ) - ( Min( RCSe ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) ) + ( DS + RMSe ) ) )", "obj1": 0.46275395033860045, "obj2": 0.4101346700800818}, {"determining": "( Max( ACS,( ( FirstVNF_Mem + MDR ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,MUR ) / MUM ) ) - DS ) - ( Min( RCSe ,Min( ( CS / DS ) ,MUM ) ) + ( DS + RMSe ) ) )", "obj1": 0.4401805869074492, "obj2": 0.45801679359133396}, {"determining": "( ( FirstVNF_RAM + ( CRS + Min( ( ( ( FirstVNF_Mem / ACS ) - ( AMS / ( DDR * FirstVNF_RAM_Server ) ) ) / PN ) ,( ( DDR * BR ) / FirstVNF_RAM ) ) ) ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( ( MLU / Min( RRSe ,( Min( MUC ,RRSe ) / Min( RMSe ,DS ) ) ) ) * ( CS * MUC ) ) ) ,( DS - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( ( FirstVNF_Mem + MDR ),FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( DS + RRSe ) ) ) )", "obj1": 0.7516930022573364, "obj2": 0.1477364876185375}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Max( ARS,MRS ) * ( Max( Min( DDR ,Const ),DDR ) * FirstVNF_CPU_Server ) ) ) + PN ) - CRS ) / Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUM * RCSe ) ,( DS - ( ( ( CS + MUM ) / ( ( MUR + DS ) + MUR ) ) / ( ( ( MLU + ( Max( MUM,CS ) + MUC ) ) + RRSe ) / Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.6636568848758465, "obj2": 0.2668589797482083}, {"determining": "( Max( AMS,PN ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( CS / RMSe ) + ( ( ( ( CS / RMSe ) + Max( DS,RMSe ) ) + ( ( MUR + RMSe ) / Max( MUC,MLU ) ) ) - Min( ( MUM * RCSe ) ,( DS - MUM ) ) ) ) + ( ( MUR + RMSe ) / Max( MUC,MLU ) ) ) - Min( ( MUM * RCSe ) ,( DS - MUM ) ) )", "obj1": 0.5011286681715575, "obj2": 0.37934322274163274}, {"determining": "Min( Max( ( ACS - Min( ( FirstVNF_RAM / AMS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) ),MDR ) ,( FirstVNF_Mem_Server * Min( ARS ,ARS ) ) )", "choosing": "( Max( MLU,Max( RRSe,DS ) ) * Max( ( MLU / CS ),( Min( ( MUR * RCSe ) ,( ( ( RRSe + RCSe ) + ( MUM * MLU ) ) - RRSe ) ) * MUC ) ) )", "obj1": 0.4221218961625282, "obj2": 0.48070411137851615}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( FirstVNF_CPU / ( FirstVNF_RAM / ( MDR * FirstVNF_CPU ) ) ) ) - ( Min( RRS ,FirstVNF_Mem_Server ) / MDR ) )", "choosing": "( ( MUC - ( ( Max( ( MUR / DS ),( MUR / CS ) ) - ( ( DS - MUC ) * ( MLU * ( RCSe + ( CS * RCSe ) ) ) ) ) - RRSe ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 0.6139954853273137, "obj2": 0.3105474111015466}, {"determining": "( Max( ARS,MRS ) * ( Max( Min( DDR ,( Min( Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ,BR ) - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),AMS ) ) ) ),DDR ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * ( ( ( ( CS / MUM ) * RRSe ) / RMSe ) + MUM ) ) ) ) / ( ( RMSe - MUC ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.31376975169300225, "obj2": 0.5851288403813408}, {"determining": "Max( RRS,Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( MLU / MLU ) / ( DS * ( ( RCSe + MUC ) - MUC ) ) )", "obj1": 0.25733634311512416, "obj2": 0.6318628279287519}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + PN ) - CRS ) / Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUM * RCSe ) ,( DS - ( ( ( CS + MUM ) / ( MUC + MUR ) ) / ( ( ( MLU + ( Max( MUM,CS ) + MUC ) ) + RRSe ) / Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.6275395033860045, "obj2": 0.28830039930554635}, {"determining": "( Max( ARS,MRS ) * ( Max( Min( DDR ,Const ),DDR ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * ( ( ( ( RCSe / MUM ) * RRSe ) / RMSe ) + MUM ) ) ) ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "Max( ( DDR + FirstVNF_Mem_Server ),( ACS - ARS ) )", "choosing": "( ( RMSe - ( DS / MUR ) ) / ( MLU + RMSe ) )", "obj1": 0.27765237020316025, "obj2": 0.6249340945806976}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,( FirstVNF_Mem + MDR ) ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( RCSe + MLU ) ) ) )", "obj1": 0.7516930022573364, "obj2": 0.1477364876185375}, {"determining": "Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * DDR ) )", "choosing": "( Max( MLU,Max( RRSe,DS ) ) * Max( ( MLU / CS ),( Min( MLU ,( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) * MUC ) ) )", "obj1": 0.3837471783295711, "obj2": 0.4840497374335043}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * Max( ACS,RRS ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,Min( FirstVNF_CPU ,( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MLU / MLU ) / ( ( MLU / Max( ( ( Min( RCSe ,MUR ) + MUR ) * RCSe ),( Min( MLU ,MUM ) * MUC ) ) ) + ( RRSe / MUM ) ) )", "obj1": 0.3544018058690745, "obj2": 0.5174880552418589}, {"determining": "Max( ( DDR + FirstVNF_Mem_Server ),Max( FirstVNF_Mem,MDR ) )", "choosing": "( ( RMSe - ( DS / Min( Max( RRSe,RMSe ) ,( Min( MLU ,MUR ) / MUM ) ) ) ) / Max( ( ( ( MUM / Min( ( DS * ( CS / DS ) ) ,Min( RCSe ,MLU ) ) ) - ( DS * MUR ) ) * CS ),MLU ) )", "obj1": 0.29571106094808125, "obj2": 0.6106733127816915}, {"determining": "( ( AMS * DDR ) - Max( ( FirstVNF_CPU - ( FirstVNF_RAM + RRS ) ),FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * ( RMSe * RCSe ) ) ,Min( DS ,MLU ) )", "obj1": 0.9729119638826185, "obj2": 0.020189084712290577}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) + ( CRS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Const ) ) ) - ( Min( DDR ,( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,( AMS - DDR ) ) - PN ) + MRS ) ) - FirstVNF_CPU ) ) ,( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / ( Const / FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,MUC ) / ( Min( DS ,MLU ) - Max( RCSe,MUR ) ) ) - Max( CS,CS ) )", "obj1": 0.35214446952595935, "obj2": 0.5463597353342023}, {"determining": "( Max( Max( ( PN * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RMSe / ( RCSe + MUR ) ) * MUR ) )", "obj1": 0.8984198645598194, "obj2": 0.04419003378153483}, {"determining": "Min( Min( Max( ( ( BR - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ,( Const - MRS ) ) ) / ( RRS + ARS ) ),( BR * MRS ) ) ,FirstVNF_CPU ) ,( Const - ( AMS * Const ) ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( ( CS + MUM ) + MUC ) + ( ( ( MLU / DS ) + ( ( MLU / Max( ( MLU - MUM ),( RCSe * DS ) ) ) - MUM ) ) + Max( MUC,RCSe ) ) ) )", "obj1": 0.6772009029345373, "obj2": 0.2635344822830589}, {"determining": "( ( DDR + ARS ) + ( ARS - Max( ( DDR / PN ),ACS ) ) )", "choosing": "( ( ( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) - MLU ) + ( ( RMSe / Max( ( RRSe / ( MLU * RCSe ) ),( MLU * MLU ) ) ) * MUR ) )", "obj1": 0.8758465011286681, "obj2": 0.05509105468855589}, {"determining": "( Max( Max( ( PN * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RMSe / ( RCSe + MUR ) ) * MUR ) )", "obj1": 0.8984198645598194, "obj2": 0.04419003378153483}, {"determining": "( ( ( FirstVNF_CPU_Server - MRS ) / ( ( FirstVNF_CPU - RRS ) - CRS ) ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / ( RMSe * MUR ) ) * ( RCSe / RCSe ) )", "obj1": 0.30699774266365687, "obj2": 0.6049378858618303}, {"determining": "( ( ( ( FirstVNF_Mem_Server / AMS ) * ( Max( Min( ( MDR / Const ) ,ACS ),Const ) + ( MRS - ACS ) ) ) - MRS ) / ( RRS - CRS ) )", "choosing": "Max( ( RMSe / ( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) + CS ) ),( MUM - RRSe ) )", "obj1": 0.43340857787810383, "obj2": 0.46530585853292994}, {"determining": "Max( ( Max( MDR,( ( FirstVNF_Mem_Server - ( Max( Max( FirstVNF_Mem,PN ),FirstVNF_Mem_Server ) - MRS ) ) / FirstVNF_RAM ) ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC / Max( ( MUR * RRSe ),MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5697884649280073}, {"determining": "( Max( ACS,( ( MDR * ( MRS * ( ACS - ( MDR * RRS ) ) ) ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,MUR ) / MUM ) ) - ( MLU + CS ) ) - ( Min( RCSe ,Min( ( CS / DS ) ,MUM ) ) + ( DS + RMSe ) ) )", "obj1": 0.4672686230248307, "obj2": 0.39748678327951276}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( ( DDR + MRS ) + ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( RCSe - DS ) / Max( ( RRSe / ( MUM / DS ) ),MLU ) ) ,Min( ( DS / DS ) ,( MUM / MUM ) ) ) / CS )", "obj1": 0.3476297968397291, "obj2": 0.5574560809547511}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Min( Min( Const ,RRS ) ,( ARS / AMS ) ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( RRSe - ( CS * DS ) ) ) ) + ( ( ( MUM / DS ) - DS ) / Min( ( RRSe - MLU ) ,( DS + MLU ) ) ) )", "obj1": 0.744920993227991, "obj2": 0.16022815721751593}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,AMS ) ) - CRS ) / Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MUM ,Min( DS ,MUC ) ) ,( DS - ( ( ( CS + MUM ) / ( MUC + MUR ) ) / ( ( ( MLU + ( Max( MUM,CS ) + MUC ) ) + RRSe ) / Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.6275395033860045, "obj2": 0.28830039930554635}, {"determining": "( Max( ACS,( ( MDR * ( MRS * ( ACS - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) ) ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( ( MUR - RRSe ) ,( Min( MLU ,MUR ) / MUM ) ) - ( MLU + CS ) ) - ( Min( RCSe ,Min( ( CS / DS ) ,MUM ) ) + ( DS + RMSe ) ) )", "obj1": 0.4853273137697517, "obj2": 0.3952151788875911}, {"determining": "Max( MDR,( AMS / FirstVNF_RAM ) )", "choosing": "( Min( ( ( MUM + ( MLU + CS ) ) + ( RCSe - RRSe ) ) ,Max( ( MUR * ( RRSe - DS ) ),( RMSe + MUR ) ) ) - ( Max( DS,MUR ) * ( MUC + ( MUR + CS ) ) ) )", "obj1": 0.3724604966139955, "obj2": 0.5163130769003019}, {"determining": "( Max( ACS,( ( MDR * ( ( Min( ( MDR / Const ) ,RRS ) - DDR ) * ( ACS - ( MDR * RRS ) ) ) ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,MUR ) / MUM ) ) - ( MLU + CS ) ) - ( Min( RCSe ,Min( ( CS / DS ) ,MUM ) ) + ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) )", "obj1": 0.4898419864559819, "obj2": 0.3849281808370098}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * Max( ACS,RRS ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( MLU / MLU ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3363431151241535, "obj2": 0.5673626498625658}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * Max( ACS,RRS ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),Min( DDR ,Const ) ) ,( FirstVNF_Mem_Server * ( CRS / Const ) ) ) ) )", "choosing": "( ( MLU / MLU ) / ( ( ( ( ( RCSe / MUM ) * RRSe ) / RMSe ) / Max( ( MLU / CS ),( Min( MLU ,MUM ) * MUC ) ) ) + ( RRSe / MUM ) ) )", "obj1": 0.3792325056433409, "obj2": 0.497608717870462}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Min( ( MRS - FirstVNF_RAM_Server ) ,( ( ACS / PN ) / AMS ) ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( ( MUM / DS ) - ( RCSe / RMSe ) ) / Min( ( RRSe - MLU ) ,( DS + MLU ) ) ) )", "obj1": 0.6952595936794582, "obj2": 0.1930857643107063}, {"determining": "Max( RRS,Min( ( Max( MDR,RRS ) * ( FirstVNF_Mem + ( ( Max( PN,AMS ) - MRS ) * Const ) ) ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Max( MLU,( RRSe * MUC ) ) / MLU ) / ( Max( Min( Max( RMSe,RMSe ) ,( MLU * ( RMSe / Max( RMSe,RCSe ) ) ) ),( RMSe / MUR ) ) * ( ( RCSe + MUC ) - MUC ) ) )", "obj1": 0.2595936794582393, "obj2": 0.6312420347835125}, {"determining": "Max( ( ( ( DDR / RRS ) - FirstVNF_Mem_Server ) + BR ),( AMS / FirstVNF_RAM ) )", "choosing": "( Min( Max( ( RCSe - MUM ),( RMSe + Max( MUC,MUR ) ) ) ,Max( ( MUR * ( RRSe - DS ) ),( RMSe + MUR ) ) ) - ( Max( DS,MUR ) * ( MUC + ( MUR + CS ) ) ) )", "obj1": 0.3747178329571106, "obj2": 0.5041608837042667}, {"determining": "( ( DDR + ( ARS - Max( ( DDR / PN ),ACS ) ) ) + ( BR * MRS ) )", "choosing": "( ( ( MLU / DS ) + Max( ( RRSe / ( MLU * RCSe ) ),( MLU * CS ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.9751693002257337, "obj2": 0.011489868449295337}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,( FirstVNF_Mem + ( MDR + PN ) ) ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - Max( MUR,( MUM * DS ) ) ) + ( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( RCSe + MLU ) ) ) )", "obj1": 0.7494356659142212, "obj2": 0.1494766623619941}, {"determining": "( Max( ARS,MRS ) * ( Max( ARS,Max( Const,CRS ) ) + ( Max( FirstVNF_Mem_Server,( ( CRS + ARS ) * Min( Max( BR,DDR ) ,ARS ) ) ) / Min( ( AMS * Min( AMS ,ACS ) ) ,PN ) ) ) )", "choosing": "( ( ( RCSe - RCSe ) / MUC ) / ( ( ( MUR / Max( ( DS - MUR ),MUR ) ) + ( MUR - MUM ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "( ( ( ( ( MRS - FirstVNF_RAM ) / ( DDR + FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) ) ) + ( ( DDR + MRS ) + ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Max( MLU,MUM ) ,DS ) / CS )", "obj1": 0.9932279909706546, "obj2": 0.0023702050591509465}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( ( ( ( FirstVNF_RAM / MDR ) / FirstVNF_RAM ) * ( RRS + FirstVNF_CPU ) ),( FirstVNF_RAM - ( ( FirstVNF_CPU_Server * CRS ) / AMS ) ) ) )", "choosing": "( ( Min( DS ,Min( Max( RCSe,MUM ) ,DS ) ) + MUR ) - ( RRSe / MUR ) )", "obj1": 0.9887133182844243, "obj2": 0.006783137661743111}, {"determining": "( ( AMS * DDR ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS + ( RCSe - Max( MUM,RCSe ) ) ) ,Min( DS ,MLU ) )", "obj1": 0.9841986455981941, "obj2": 0.011216228820629785}, {"determining": "( ( Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,Max( Max( FirstVNF_Mem,PN ),FirstVNF_Mem_Server ) ) * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( ( MUM - Max( ( MUC / Max( ( MUR * RRSe ),MUR ) ),Max( MUM,CS ) ) ) + Max( RCSe,RRSe ) ) ) ,Min( DS ,MLU ) )", "obj1": 0.9864559819413092, "obj2": 0.009305528319288305}, {"determining": "Min( Max( ( ( ( AMS * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( Min( ( FirstVNF_CPU - RRS ) ,Min( DDR ,Const ) ) - ( ( AMS - FirstVNF_CPU_Server ) - ( Min( Min( PN ,FirstVNF_Mem_Server ) ,CRS ) + MDR ) ) ) ),MDR ) ,( FirstVNF_Mem_Server * DDR ) )", "choosing": "( Min( RRSe ,MUC ) * Max( ( MLU / CS ),MUR ) )", "obj1": 0.3837471783295711, "obj2": 0.4840497374335043}, {"determining": "( ( ( ( MRS - FirstVNF_RAM ) / ( DDR + FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( Max( Max( MLU,MUM ),Max( MUC,MUC ) ) + ( MUR * CS ) )", "obj1": 0.9977426636568849, "obj2": 0.0010921176513893009}, {"determining": "( ( ( ( MRS - FirstVNF_RAM ) / ( DDR + FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) + ( AMS - Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( Max( Max( MLU,MUM ),Max( MUC,( ( MUM - ( MUM + DS ) ) * ( MUR + CS ) ) ) ) + ( MUR * CS ) )", "obj1": 0.9977426636568849, "obj2": 0.0010921176513893009}, {"determining": "( ( ( ( ARS * FirstVNF_CPU ) * ( PN + FirstVNF_CPU_Server ) ) - MRS ) / ( RRS - CRS ) )", "choosing": "Max( Max( Max( Max( RRSe,MUC ),RRSe ),MLU ),( ( RCSe - MLU ) + ( MUR * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Min( ( Min( ARS ,DDR ) + ( RRS * ARS ) ) ,RRS ) )", "choosing": "Min( ( DS / DS ) ,( MUM / ( ( Min( MUR ,CS ) * MLU ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - Max( BR,ACS ) )", "choosing": "Min( ( DS + ( RCSe * MUR ) ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,Const ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - Max( Max( MUM,( ( ( ( RRSe / MUM ) * ( DS - ( MUM + DS ) ) ) * ( ( MLU - MUC ) + RRSe ) ) - MUC ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / AMS ) * ( Max( Min( ARS ,ACS ),Const ) + ( MRS - ACS ) ) ) - MRS ) / ( RRS - CRS ) )", "choosing": "Max( ( RMSe / ( ( Min( RMSe ,( MUM - Max( MUC,RCSe ) ) ) / ( Min( RRSe ,MUM ) + MLU ) ) + CS ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,RRS ) * ( FirstVNF_Mem + ( ACS * Const ) ) ) / Max( FirstVNF_CPU_Server,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MLU,( RRSe * MUC ) ),( CS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + AMS ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( RRSe - ( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,( Min( ( PN + MDR ) ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - ( ( MUM * DS ) * ( ( Min( RRSe ,RCSe ) + ( ( MUM * RMSe ) + RMSe ) ) * Min( CS ,( ( MUM + RMSe ) + ( RMSe / MLU ) ) ) ) ) ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU / ( AMS / Min( Max( MDR,FirstVNF_RAM ) ,Max( MRS,ARS ) ) ) ) / ( RRS - FirstVNF_Mem ) ),Const ) * ( Const - ACS ) )", "choosing": "( ( DS - DS ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / FirstVNF_RAM ),BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( RRSe / ( MUM / DS ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / ( CRS + ACS ) ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( ( ( MLU + Min( MUM ,Max( MUC,RMSe ) ) ) / MUR ) / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / ( Max( Min( MDR ,( FirstVNF_CPU_Server - PN ) ),FirstVNF_Mem ) * PN ) ) ) - ( ( Const + ( FirstVNF_RAM / Max( Max( MDR,Min( CRS ,Const ) ),FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( ( ( RRSe * ( ( MLU / RCSe ) + MLU ) ) - DS ) * ( MLU + ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,( Min( PN ,FirstVNF_RAM ) / Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,CRS ) ) ) - DDR ) ,( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) * ( ( Min( RCSe ,DS ) + Max( CS,( MLU / Max( RCSe,MLU ) ) ) ) - DS ) ) * ( ( ( MUR - RRSe ) * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( DDR / FirstVNF_Mem ) ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( RCSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / AMS ) * Max( ACS,MDR ) ) + Min( Max( FirstVNF_RAM_Server,PN ) ,Min( DDR ,Const ) ) ) * ( ( Min( MDR ,AMS ) * ( Min( ( BR / DDR ) ,FirstVNF_RAM ) - ACS ) ) * ( Min( FirstVNF_RAM ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( RRSe + RRSe ) * ( RMSe / ( MUR + CS ) ) ) ,Min( ( Min( DS ,MLU ) - Max( RCSe,MUR ) ) ,( RRSe + RMSe ) ) ) / ( Max( ( MLU + RMSe ),( DS + RCSe ) ) / Max( ( MUC - DS ),Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,Min( ( FirstVNF_Mem_Server - ACS ) ,RRS ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) )", "choosing": "Max( ( Min( Min( ( ( RMSe - ( ( MLU / MUR ) * MLU ) ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + AMS ) + ( DDR / FirstVNF_RAM ) )", "choosing": "Min( ( MLU + ( MUM / ( RMSe * MUM ) ) ) ,( Max( MLU,MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + RRS ) / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( ( MUC - RRSe ) - ( MUM - ( RCSe * ( CS / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - ( ( ( MRS * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) - ( ( AMS * MDR ) - ( ( ( MDR - ARS ) * PN ) + AMS ) ) ) ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * ( ( DS * RCSe ) - DS ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( ( ( ( CRS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ( FirstVNF_Mem / ARS ) ) ) - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + ( Max( MUR,( ( Max( RMSe,MUM ) - MUM ) / Max( ( RCSe - MUM ),CS ) ) ) - ( DS + MLU ) ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / ( DDR + ( Min( FirstVNF_RAM_Server ,CRS ) + ( CRS * PN ) ) ) )", "choosing": "Max( ( ( MLU * MLU ) + ( MLU * MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( BR,DDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Max( MRS,CRS ) ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * ( RRSe - CS ) ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( BR + Max( ( Min( AMS ,ARS ) + ( FirstVNF_Mem_Server + BR ) ),( ( CRS * ACS ) + ( FirstVNF_CPU_Server - MDR ) ) ) ) )", "choosing": "Max( ( ( MUM - ( MUM + DS ) ) * ( MUR + CS ) ),Max( Max( MLU,MUM ),Max( MUC,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN - BR ),Min( FirstVNF_Mem_Server ,PN ) ) - ( Max( BR,Max( MDR,FirstVNF_Mem ) ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,Max( Min( ( ( RMSe / MUC ) - CS ) ,DS ),( MUM - MUR ) ) ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( MRS * ( Const / ( Max( FirstVNF_RAM,Max( CRS,( PN / BR ) ) ) * ( RRS + MDR ) ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( ( Max( MUC,( Max( MUC,CS ) + MUM ) ) + Min( RRSe ,RMSe ) ) - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ACS ) - ( CRS + AMS ) )", "choosing": "Min( ( ( ( DS * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( ( MDR * MRS ) - ( CRS + AMS ) ) ) * ( Const - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,Min( CS ,CS ) ) / MUM ) ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / FirstVNF_RAM ),BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( RRSe / ( MUM / DS ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,CRS ),AMS ) ) ),AMS ),Min( ( FirstVNF_Mem + RRS ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( MUR,( MUM * DS ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / RMSe ) ) ) + ( RMSe - Min( ( Min( DS ,RCSe ) * ( Max( Min( MUC ,MUM ),( CS / MUC ) ) / RRSe ) ) ,( CS + Min( RRSe ,Max( CS,Max( RRSe,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - MRS ) / ( RRS - CRS ) ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / MUC ) * ( RCSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * ( ( ( MRS + FirstVNF_CPU ) + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) ) ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( ( MUR - RRSe ) * RMSe ) / ( MLU / RMSe ) ) ) ,( Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - CS ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),MRS ) * ( MRS + Min( FirstVNF_Mem ,( DDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( ( MUR + Max( ( Max( MLU,MUR ) * CS ),( MUC * DS ) ) ) * ( MUC / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - ACS ) ,( ( ARS / FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( MRS * MRS ) ,Max( MDR,FirstVNF_CPU ) ) + ( ( DDR - FirstVNF_CPU_Server ) + ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( DS - MUC ) + ( MUM + MLU ) ) - ( RMSe / ( MLU / MUC ) ) ) - ( MUR + Max( RMSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU / ( AMS / Min( Max( MDR,FirstVNF_RAM ) ,Max( MRS,ARS ) ) ) ) / ( RRS - FirstVNF_Mem ) ),Const ) * ( Const - ACS ) )", "choosing": "( ( DS - DS ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( Min( ( ( DDR * MDR ) - ( FirstVNF_RAM - DDR ) ) ,( ( ARS / FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ,RRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( RCSe ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / AMS ) * Max( ACS,MDR ) ) + Min( Max( ( ( FirstVNF_RAM / MDR ) / FirstVNF_RAM ),PN ) ,Min( DDR ,Const ) ) ) * ( ( Min( MDR ,AMS ) * ( ( Min( FirstVNF_Mem_Server ,RRS ) - ( ARS + MDR ) ) + DDR ) ) * ( Min( FirstVNF_RAM ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( RRSe + RRSe ) * ( RMSe / MUM ) ) ,Min( ( Min( DS ,MLU ) - Max( RCSe,MUR ) ) ,( RRSe + RMSe ) ) ) / ( Max( ( MLU + RMSe ),( DS + RCSe ) ) / ( RRSe * Max( RCSe,Max( MUC,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ACS ) - ( Max( RRS,( ( Min( ( ACS - Min( PN ,DDR ) ) ,FirstVNF_RAM ) + AMS ) + BR ) ) + AMS ) )", "choosing": "Min( ( ( ( DS * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) ) ,( Min( ( ( ( RRSe * MUR ) / ( RMSe / RMSe ) ) / RRSe ) ,Min( ( DS - MUM ) ,( RRSe + RMSe ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( Min( ( FirstVNF_CPU - RRS ) ,Min( DDR ,Const ) ) - ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ) ) ) ) * DDR ) - Max( ( FirstVNF_Mem_Server - ( ( ( FirstVNF_RAM_Server / Const ) + FirstVNF_RAM ) + FirstVNF_CPU ) ),FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( MUM - RRSe ) * Min( CS ,RMSe ) ),( ( MUM - Max( ( MUR + MLU ),Max( MUM,CS ) ) ) + Max( RCSe,RRSe ) ) ) ,Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( AMS * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( Min( ( FirstVNF_CPU - RRS ) ,Min( DDR ,Const ) ) - ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ) ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + ( RMSe * MUR ) ) ),( ( MUM - Max( ( MUR + MLU ),Max( MUM,CS ) ) ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ( ( ARS / AMS ) * Max( ACS,MDR ) ) + Min( Max( ( ( FirstVNF_RAM / ( CRS + ACS ) ) / FirstVNF_RAM ),PN ) ,Min( DDR ,Const ) ) ) * ( ( Min( MDR ,AMS ) * ( ( Min( FirstVNF_Mem_Server ,RRS ) - ( ARS + MDR ) ) + DDR ) ) * ( Min( FirstVNF_RAM ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( RRSe + RRSe ) * ( ( RRSe / ( RRSe - RMSe ) ) / MUM ) ) ,Min( ( Min( DS ,MLU ) - Max( RCSe,MUR ) ) ,( RRSe + RMSe ) ) ) / ( Max( ( MLU + RMSe ),( DS + RCSe ) ) / ( RRSe * Max( RCSe,Max( MUC,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( MDR ,FirstVNF_Mem ),ACS ) / ( RRS - CRS ) )", "choosing": "Max( ( RMSe / ( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( DS + ( RCSe * ( CS / ( RMSe + MLU ) ) ) ) ) + CS ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR + FirstVNF_Mem_Server ),( ACS - ARS ) )", "choosing": "( ( ( CS / DS ) - ( DS / MUR ) ) / ( MLU + RMSe ) )", "obj1": 0.24604966139954854, "obj2": 0.67652645391814}, {"determining": "( ( Max( Const,( DDR + MRS ) ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + ( ARS - Max( ( DDR / PN ),( ( DDR + FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( ( MUC * MLU ),RMSe ) ,DS ) / ( MUM / Min( ( DS * ( CS / DS ) ) ,Min( RCSe ,MLU ) ) ) )", "obj1": 0.7900677200902935, "obj2": 0.13650295030696982}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( Max( ( DDR / PN ),( Max( CRS,Max( ( FirstVNF_Mem + MDR ),FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ),( Max( CRS,Min( Min( Const ,RRS ) ,( ARS / AMS ) ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( ( RCSe - MLU ) + ( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( DS + RRSe ) ) ) ) ) ) + ( ( ( MUM / DS ) - DS ) / Min( ( RRSe - MLU ) ,( DS + MLU ) ) ) )", "obj1": 0.6433408577878104, "obj2": 0.23700772335772247}, {"determining": "( Max( Max( ( PN * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,AMS ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( ( DS * MUR ) - ( MLU + CS ) ) * MUR ) )", "obj1": 0.9367945823927766, "obj2": 0.022429834144096755}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,CRS ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RCSe - DS ) / Min( DS ,( RCSe + MLU ) ) ) )", "obj1": 0.5349887133182845, "obj2": 0.33080305788882614}, {"determining": "Max( MDR,( AMS / ( Max( MRS,CRS ) - Max( BR,DDR ) ) ) )", "choosing": "( Min( ( ( MUM + ( MLU + CS ) ) + ( RCSe - RRSe ) ) ,Max( ( MUR * ( RRSe - ( RRSe - CS ) ) ),( RMSe + MUR ) ) ) - ( Max( DS,MUR ) * ( MUC + ( MUR + CS ) ) ) )", "obj1": 0.33182844243792325, "obj2": 0.5430284302203164}, {"determining": "( ( Max( Const,( DDR + MRS ) ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + ( ARS - Max( ( DDR / PN ),BR ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( CS,RMSe ) ,DS ) / Max( ( MUC * MLU ),( RMSe / ( RCSe + MUR ) ) ) )", "obj1": 0.8442437923250564, "obj2": 0.08444121919162241}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + PN ) - CRS ) / Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUM * RCSe ) ,( DS - ( ( ( CS + MUM ) / ( MUC + MUR ) ) / ( ( ( MLU + ( Max( MUM,CS ) + MUC ) ) + RRSe ) / Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.6275395033860045, "obj2": 0.28830039930554635}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + ( Min( Min( ( ( DDR * MDR ) - ( FirstVNF_RAM - DDR ) ) ,( ( ARS / FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ,RRS ) - FirstVNF_CPU_Server ) ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( ( FirstVNF_Mem + MDR ),FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RCSe - DS ) / Min( ( Max( ( MUR * RMSe ),( RMSe + MUR ) ) - MLU ) ,( DS + RRSe ) ) ) )", "obj1": 0.8126410835214447, "obj2": 0.10146443029267846}, {"determining": "Max( ( DDR + FirstVNF_Mem_Server ),( Min( ( MDR / ( CRS + ACS ) ) ,RRS ) - DDR ) )", "choosing": "( ( ( ( ( MLU + Min( MUM ,Max( MUC,RMSe ) ) ) / MUR ) / CS ) - ( DS / MUR ) ) / ( MLU + RMSe ) )", "obj1": 0.35214446952595935, "obj2": 0.5139416884141711}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) + ( CRS / Const ) ) - ( Min( DDR ,( FirstVNF_CPU_Server + MRS ) ) - FirstVNF_CPU ) ) ,( Min( Max( ( ( ( AMS * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( Min( ( FirstVNF_CPU - RRS ) ,Min( DDR ,Const ) ) - ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ) ) ),MDR ) ,( FirstVNF_Mem_Server * DDR ) ) / ( Const / FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,MUC ) / ( Min( DS ,MLU ) - Max( RCSe,MUR ) ) ) - ( ( RMSe + ( ( RMSe / ( MLU / CS ) ) / DS ) ) * RMSe ) )", "obj1": 0.45372460496614, "obj2": 0.42944027645041505}, {"determining": "( Max( ( DDR / PN ),( Max( CRS,Max( BR,( FirstVNF_Mem + MDR ) ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) + ( ( DDR + MRS ) + ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( RCSe + MLU ) ,DS ) / CS )", "obj1": 0.6027088036117382, "obj2": 0.31001864351877345}, {"determining": "( Max( AMS,PN ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( CS / RMSe ) + Max( DS,RMSe ) ) + ( ( MUR + RMSe ) / Max( MUC,MLU ) ) ) - Min( ( MUM * RCSe ) ,( DS - MUM ) ) )", "obj1": 0.5191873589164786, "obj2": 0.34205766530984166}, {"determining": "( ( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,( FirstVNF_Mem + MDR ) ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) ) / Max( FirstVNF_CPU_Server,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MLU,( RRSe * ( ( RCSe - MLU ) + ( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( RCSe + MLU ) ) ) ) ) ),( CS + MUC ) )", "obj1": 0.6591422121896162, "obj2": 0.22137900456564188}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( ( FirstVNF_Mem + MDR ),Min( Min( Const ,RRS ) ,( ARS / AMS ) ) ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RCSe - Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( RRSe - ( CS * DS ) ) ) ) + ( ( ( MUM / DS ) - DS ) / Min( ( RRSe - MLU ) ,( DS + MLU ) ) ) ) )", "obj1": 0.7110609480812641, "obj2": 0.18043097165263727}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Min( ( MRS - FirstVNF_RAM_Server ) ,( ( ACS / PN ) / AMS ) ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( ( MUM / DS ) - ( RCSe / RMSe ) ) / Min( ( RRSe - MLU ) ,( DS + MLU ) ) ) )", "obj1": 0.6839729119638827, "obj2": 0.21227882061575107}, {"determining": "Max( ( Max( MDR,( ( FirstVNF_Mem_Server - ( Max( Max( FirstVNF_Mem,PN ),FirstVNF_Mem_Server ) - MRS ) ) / FirstVNF_RAM ) ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC / Max( ( MUR * RRSe ),MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5697884649280073}, {"determining": "( Min( MDR ,DDR ) + ( ARS - Max( ( Min( RRS ,FirstVNF_RAM ) / PN ),ACS ) ) )", "choosing": "( ( ( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) - MLU ) + ( ( RMSe / Max( Min( ( RRSe * CS ) ,Min( ( DS / RRSe ) ,Max( Min( MUM ,CS ),RCSe ) ) ),( MLU * CS ) ) ) * MUR ) )", "obj1": 0.8668171557562077, "obj2": 0.05785506655127381}, {"determining": "Max( RRS,Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( MLU / MLU ) / ( DS * ( ( RCSe + MUC ) - MUC ) ) )", "obj1": 0.25733634311512416, "obj2": 0.6318628279287519}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,( FirstVNF_Mem + MDR ) ) ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( CS - MLU ) + ( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( RCSe + MLU ) ) ) )", "obj1": 0.690744920993228, "obj2": 0.19135218728308387}, {"determining": "( Max( ACS,( ( FirstVNF_Mem + MDR ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,MUR ) / MUM ) ) - DS ) - ( Min( RCSe ,Min( ( CS / DS ) ,MUM ) ) + ( DS + RMSe ) ) )", "obj1": 0.4401805869074492, "obj2": 0.45801679359133396}, {"determining": "Min( Max( ( ( ( AMS * AMS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( Min( ( FirstVNF_CPU - RRS ) ,Min( DDR ,Const ) ) - ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ) ) ),MDR ) ,( FirstVNF_Mem_Server * DDR ) )", "choosing": "( Max( MLU,Max( RRSe,DS ) ) * Max( ( MLU / ( CS * DS ) ),MUR ) )", "obj1": 0.27539503386004516, "obj2": 0.5996858281281529}, {"determining": "( Max( ACS,( ( MDR * ( ( Min( ( MDR / Const ) ,RRS ) - DDR ) * ( ACS - ( MDR * ( PN - FirstVNF_Mem_Server ) ) ) ) ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,MUR ) / MUM ) ) - ( MLU + CS ) ) - ( Max( MLU,MUM ) + ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) )", "obj1": 0.5079006772009029, "obj2": 0.3687308680877709}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( ( FirstVNF_Mem + MDR ),FirstVNF_CPU ) ) + ( ARS - Max( ( DDR / PN ),ACS ) ) ) ) ) )", "choosing": "( MLU + ( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( DS + RRSe ) ) ) )", "obj1": 0.7246049661399548, "obj2": 0.1620220117831109}, {"determining": "( ( ( ( FirstVNF_Mem_Server / AMS ) * ( ARS - Max( ( DDR / PN ),ACS ) ) ) - MRS ) / ( RRS - CRS ) )", "choosing": "Max( ( ( ( ( MLU / DS ) + Max( ( RRSe / ( MLU * RCSe ) ),( MLU * CS ) ) ) + Max( MUC,RCSe ) ) / ( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) + CS ) ),( MUM - RRSe ) )", "obj1": 0.30699774266365687, "obj2": 0.5915029302511968}, {"determining": "Max( RRS,Min( ( Max( MDR,RRS ) * ( FirstVNF_Mem + ( ACS * CRS ) ) ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Max( MLU,( RRSe * MUC ) ) / MLU ) / ( DS * ( ( MLU / Max( ( MLU / CS ),( Min( MLU ,MUM ) * MUC ) ) ) + ( RRSe / MUM ) ) ) )", "obj1": 0.2686230248306998, "obj2": 0.6106571542416456}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / Min( CRS ,Const ) ) ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( ( ( RRSe * ( ( MLU / RCSe ) + MLU ) ) - DS ) - DS ) / Min( ( RRSe - MLU ) ,( DS + MLU ) ) ) )", "obj1": 0.7539503386004515, "obj2": 0.1463616512277341}, {"determining": "( ( Max( Const,( DDR + MRS ) ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( ( MUC * MLU ),RMSe ) ,DS ) / Max( ( MUC * MLU ),( RMSe / ( RCSe + MUR ) ) ) )", "obj1": 0.8284424379232506, "obj2": 0.09775710752533281}, {"determining": "( ( AMS * DDR ) - Max( ( FirstVNF_CPU - ( FirstVNF_RAM + RRS ) ),FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * ( RMSe * RCSe ) ) ,Min( DS ,MLU ) )", "obj1": 0.9729119638826185, "obj2": 0.020189084712290577}, {"determining": "Min( Max( ( ( RRS - CRS ) - ( Min( ( FirstVNF_CPU - RRS ) ,Min( DDR ,Const ) ) - ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ) ) ),MDR ) ,( FirstVNF_Mem_Server * DDR ) )", "choosing": "( Max( MLU,Max( ( ( RCSe / MUC ) * ( RCSe / RCSe ) ),DS ) ) * Max( ( MLU / CS ),MUR ) )", "obj1": 0.3927765237020316, "obj2": 0.4838760860229303}, {"determining": "( ( ( ( ARS / FirstVNF_Mem ) + Min( DDR ,CRS ) ) + Max( ACS,( ( MDR * MRS ) - ( CRS + AMS ) ) ) ) + ( ( DDR + MRS ) + ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / FirstVNF_RAM ),BR ) * ( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( RCSe - DS ) / Max( ( ( RCSe - DS ) / Max( ( RRSe / ( MUM / DS ) ),MLU ) ),MLU ) ) ,DS ) / CS )", "obj1": 0.582392776523702, "obj2": 0.3111765234988027}, {"determining": "( Max( ARS,MRS ) * ( Max( Min( DDR ,( Min( Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ,BR ) - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),AMS ) ) ) ),DDR ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * ( ( ( ( CS / MUM ) * RRSe ) / RMSe ) + MUM ) ) ) ) / ( ( RMSe - MUC ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.31376975169300225, "obj2": 0.5851288403813408}, {"determining": "( ( ( ( ARS / FirstVNF_Mem ) + Min( DDR ,CRS ) ) + Max( ACS,( ( MDR * MRS ) - ( CRS + AMS ) ) ) ) + ( ( DDR + MRS ) + ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / FirstVNF_RAM ),BR ) * ( PN - ( ( CRS + RRS ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( ( ( RCSe - DS ) / Max( ( ( RCSe - DS ) / RCSe ),MLU ) ) ,DS ) / CS )", "obj1": 0.582392776523702, "obj2": 0.3111765234988027}, {"determining": "( Max( Max( ( PN * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RMSe / ( RCSe + MUR ) ) * MUR ) )", "obj1": 0.8984198645598194, "obj2": 0.04419003378153483}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * Max( ACS,RRS ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,Min( Max( ( ACS - Min( DDR ,FirstVNF_RAM_Server ) ),Min( DDR ,Const ) ) ,( FirstVNF_Mem_Server * ( CRS / Const ) ) ) ) )", "choosing": "( ( MLU / MLU ) / ( ( ( ( ( RCSe / MUM ) * RRSe ) / RMSe ) / Max( ( MLU / CS ),( Min( MLU ,MUM ) * MUC ) ) ) + ( Max( RRSe,RMSe ) / MUM ) ) )", "obj1": 0.3656884875846501, "obj2": 0.5037395757020672}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,AMS ) ) - CRS ) / Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MUM ,Min( DS ,MUC ) ) ,( DS - ( ( ( CS + MUM ) / ( MUC + MUR ) ) / ( ( ( MLU + ( Max( MUM,CS ) + MUC ) ) + RRSe ) / Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.6275395033860045, "obj2": 0.28830039930554635}, {"determining": "Min( Max( ( ( ( AMS * DDR ) - Max( ( CRS / Const ),FirstVNF_Mem ) ) - ( Min( ( FirstVNF_CPU - RRS ) ,Min( DDR ,Const ) ) - ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ) ) ),MDR ) ,( FirstVNF_Mem_Server * DDR ) )", "choosing": "( Max( MLU,Max( RRSe,DS ) ) * Max( ( MLU / CS ),MLU ) )", "obj1": 0.37020316027088035, "obj2": 0.4938110589535248}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Min( Min( Const ,RRS ) ,( ARS / AMS ) ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( RRSe - ( CS * DS ) ) ) ) + ( ( ( MUM / DS ) - DS ) / Min( ( RRSe - MLU ) ,( DS + MLU ) ) ) )", "obj1": 0.744920993227991, "obj2": 0.16022815721751593}, {"determining": "( Max( Max( ( PN * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RMSe / ( RCSe + MUR ) ) * MUR ) )", "obj1": 0.8984198645598194, "obj2": 0.04419003378153483}, {"determining": "( Max( ACS,( ( MDR * ( Min( ( ( DDR * MDR ) - ( FirstVNF_RAM - DDR ) ) ,( ( ARS / FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) * ( ACS - ( MDR * RRS ) ) ) ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,MUR ) / MUM ) ) - ( MLU + CS ) ) - ( Min( RCSe ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) ) + ( DS + RMSe ) ) )", "obj1": 0.46275395033860045, "obj2": 0.4101346700800818}, {"determining": "( Max( ACS,( ( MDR * ( MRS * ( ACS - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) ) ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( ( MUR - RRSe ) ,( Min( MLU ,MUR ) / MUM ) ) - ( MLU + CS ) ) - ( Min( RCSe ,Min( ( CS / DS ) ,MUM ) ) + ( DS + RMSe ) ) )", "obj1": 0.4853273137697517, "obj2": 0.3952151788875911}, {"determining": "( Max( AMS,PN ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( CS / RMSe ) + ( ( ( ( CS / RMSe ) + Max( DS,RMSe ) ) + ( ( MUR + RMSe ) / Max( MUC,MLU ) ) ) - Min( ( MUM * RCSe ) ,( DS - MUM ) ) ) ) + ( ( MUR + RMSe ) / Max( MUC,MLU ) ) ) - Min( ( MUM * RCSe ) ,( DS - MUM ) ) )", "obj1": 0.5011286681715575, "obj2": 0.37934322274163274}, {"determining": "( ( ( ( FirstVNF_Mem_Server / AMS ) * ( Max( Min( ( MDR / Const ) ,ACS ),Const ) + ( MRS - ACS ) ) ) - MRS ) / ( RRS - CRS ) )", "choosing": "Max( ( RMSe / ( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) + CS ) ),( MUM - RRSe ) )", "obj1": 0.43340857787810383, "obj2": 0.46530585853292994}, {"determining": "Max( RRS,Min( ( Max( MDR,RRS ) * ( FirstVNF_Mem + ( ( Max( PN,AMS ) - MRS ) * Const ) ) ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Max( MLU,( RRSe * MUC ) ) / MLU ) / ( Max( Min( Max( RMSe,RMSe ) ,( MLU * ( RMSe / Max( RMSe,RCSe ) ) ) ),( RMSe / MUR ) ) * ( ( RCSe + MUC ) - MUC ) ) )", "obj1": 0.2595936794582393, "obj2": 0.6312420347835125}, {"determining": "( ( ( ( ( MRS - FirstVNF_RAM ) / ( DDR + FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) ) ) + ( ( FirstVNF_CPU + AMS ) + ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( Max( MLU,Min( ( MLU + ( MUM / ( RMSe * MUM ) ) ) ,( Max( MLU,MUC ) + RRSe ) ) ) ,DS ) / CS )", "obj1": 0.8848758465011287, "obj2": 0.04643089067964574}, {"determining": "Min( Max( ( ACS - Min( ( FirstVNF_RAM / AMS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) ),MDR ) ,( FirstVNF_Mem_Server * Min( ARS ,ARS ) ) )", "choosing": "( Max( MLU,Max( RRSe,DS ) ) * Max( ( MLU / CS ),( Min( ( MUR * RCSe ) ,( ( ( RRSe + RCSe ) + ( MUM * MLU ) ) - RRSe ) ) * MUC ) ) )", "obj1": 0.4198645598194131, "obj2": 0.47199170024682163}, {"determining": "( Max( ACS,( ( MDR * ( ( Min( ( MDR / Const ) ,RRS ) - DDR ) * ( ACS - ( MDR * RRS ) ) ) ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,MUR ) / MUM ) ) - ( MLU + CS ) ) - ( Min( RCSe ,Min( ( CS / DS ) ,MUM ) ) + ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) )", "obj1": 0.4898419864559819, "obj2": 0.3849281808370098}, {"determining": "( Max( ACS,( ( MDR * ( MRS * ( ACS - ( MDR * RRS ) ) ) ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,MUR ) / MUM ) ) - ( MLU + CS ) ) - ( Min( RCSe ,Min( ( CS / DS ) ,MUM ) ) + ( DS + RMSe ) ) )", "obj1": 0.4672686230248307, "obj2": 0.39748678327951276}, {"determining": "( ( DDR + ARS ) + ( ARS - Max( ( DDR / PN ),ACS ) ) )", "choosing": "( ( ( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) - MLU ) + ( ( RMSe / Max( ( RRSe / ( MLU * RCSe ) ),( MLU * MLU ) ) ) * MUR ) )", "obj1": 0.8758465011286681, "obj2": 0.05509105468855589}, {"determining": "Min( Max( ( ACS - Min( ( FirstVNF_RAM / AMS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) ),MDR ) ,( FirstVNF_Mem_Server * Min( ARS ,ARS ) ) )", "choosing": "( Max( MLU,Max( RRSe,DS ) ) * Max( ( MLU / CS ),( Min( ( MUR * RCSe ) ,( ( ( RRSe + RCSe ) + ( MUM * MLU ) ) - RRSe ) ) * MUC ) ) )", "obj1": 0.4198645598194131, "obj2": 0.47199170024682163}, {"determining": "( ( DDR + ( ARS - Max( ( DDR / PN ),ACS ) ) ) + ( BR * MRS ) )", "choosing": "( ( ( MLU / DS ) + Max( ( RRSe / ( MLU * RCSe ) ),( MLU * CS ) ) ) + Max( MUC,RCSe ) )", "obj1": 0.9751693002257337, "obj2": 0.011489868449295337}, {"determining": "( Max( MDR,FirstVNF_CPU ) + ( ARS - Max( ( DDR / PN ),ACS ) ) )", "choosing": "( ( ( ( MLU + RRSe ) / Min( RMSe ,RCSe ) ) - MLU ) + ( ( RMSe / Max( ( RRSe / ( MLU * RCSe ) ),( MLU * MLU ) ) ) * MUR ) )", "obj1": 0.981941309255079, "obj2": 0.008947544194333442}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,( FirstVNF_Mem + ( MDR + PN ) ) ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - Max( MUR,( MUM * DS ) ) ) + ( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( RCSe + MLU ) ) ) )", "obj1": 0.7494356659142212, "obj2": 0.1494766623619941}, {"determining": "Min( Max( ( ( ( AMS * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( Min( ( FirstVNF_CPU - RRS ) ,Min( DDR ,Const ) ) - ( ( AMS - FirstVNF_CPU_Server ) - ( Min( Min( PN ,FirstVNF_Mem_Server ) ,CRS ) + MDR ) ) ) ),MDR ) ,( FirstVNF_Mem_Server * DDR ) )", "choosing": "( Min( RRSe ,MUC ) * Max( ( MLU / CS ),MUR ) )", "obj1": 0.3837471783295711, "obj2": 0.4840497374335043}, {"determining": "( ( ( FirstVNF_CPU / ( DDR + FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( Max( Max( MLU,MUM ),Max( MUC,MUC ) ) + ( MUC - ( ( Max( ( MUR / DS ),( MUR / CS ) ) - ( ( DS - MUC ) * ( MLU * ( RCSe + ( CS * RCSe ) ) ) ) ) - RRSe ) ) )", "obj1": 0.9887133182844243, "obj2": 0.004422857154267377}, {"determining": "( Max( ACS,( ( MDR * ( MRS * ( Max( PN,AMS ) - MRS ) ) ) - ( CRS + AMS ) ) ) * ( Const - ( MDR + BR ) ) )", "choosing": "( ( Min( ( MUR - RRSe ) ,( Min( MLU ,MUR ) / MUM ) ) - ( MLU + CS ) ) - ( Min( RCSe ,( Max( MLU,( RRSe * MUC ) ) / MLU ) ) + ( DS + RMSe ) ) )", "obj1": 0.4650112866817156, "obj2": 0.4064726119947859}, {"determining": "Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * DDR ) )", "choosing": "( Max( MLU,Max( RRSe,DS ) ) * Max( ( MLU / CS ),( Min( MLU ,( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) * MUC ) ) )", "obj1": 0.3837471783295711, "obj2": 0.4840497374335043}, {"determining": "( ( ( ( ( MRS - FirstVNF_RAM ) / ( DDR + FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) ) ) + ( ( DDR + MRS ) + ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Max( MLU,MUM ) ,DS ) / CS )", "obj1": 0.9932279909706546, "obj2": 0.0023702050591509465}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( ( DDR * MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / Max( ( MUR * RMSe ),( RMSe + MUR ) ) ) - RMSe ) )", "obj1": 0.9977426636568849, "obj2": 0.0009172612979785623}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( BR,( FirstVNF_Mem + MDR ) ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( RCSe + MLU ) ) ) )", "obj1": 0.7516930022573364, "obj2": 0.1477364876185375}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_CPU_Server ) + ( ARS - Max( ( DDR / PN ),( Max( CRS,Max( ( FirstVNF_Mem + MDR ),FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( ( RCSe - MLU ) + ( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( DS + RRSe ) ) ) )", "obj1": 0.7516930022573364, "obj2": 0.1477364876185375}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),AMS ) ) ),AMS ),Min( ( ( Const + Const ) + RRS ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( MUR,( MUM * RRSe ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / RMSe ) ) ) + ( RMSe - Min( ( Min( DS ,RCSe ) * ( Max( Min( MUC ,MUM ),( CS / MUC ) ) / RRSe ) ) ,( RRSe / ( RRSe - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * FirstVNF_CPU ) * ( PN + FirstVNF_CPU_Server ) ) - MRS ) / ( RRS - CRS ) )", "choosing": "Max( Max( Max( Max( RRSe,MUC ),RRSe ),MLU ),( ( RCSe - MLU ) + ( MUR * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Min( ( Min( ARS ,DDR ) + ( RRS * ARS ) ) ,RRS ) )", "choosing": "Min( ( DS / DS ) ,( MUM / ( ( Min( MUR ,CS ) * MLU ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - Max( BR,ACS ) )", "choosing": "Min( ( DS + ( RCSe * MUR ) ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,Const ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - Max( Max( MUM,( ( ( ( RRSe / MUM ) * ( DS - ( MUM + DS ) ) ) * ( ( MLU - MUC ) + RRSe ) ) - MUC ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / AMS ) * ( Max( Min( ARS ,ACS ),Const ) + ( MRS - ACS ) ) ) - MRS ) / ( RRS - CRS ) )", "choosing": "Max( ( RMSe / ( ( Min( RMSe ,( MUM - Max( MUC,RCSe ) ) ) / ( Min( RRSe ,MUM ) + MLU ) ) + CS ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,RRS ) * ( FirstVNF_Mem + ( ACS * Const ) ) ) / Max( FirstVNF_CPU_Server,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MLU,( RRSe * MUC ) ),( CS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + AMS ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( RRSe - ( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,( Min( ( PN + MDR ) ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - ( ( MUM * DS ) * ( ( Min( RRSe ,RCSe ) + ( ( MUM * RMSe ) + RMSe ) ) * Min( CS ,( ( MUM + RMSe ) + ( RMSe / MLU ) ) ) ) ) ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU / ( AMS / Min( Max( MDR,FirstVNF_RAM ) ,Max( MRS,ARS ) ) ) ) / ( RRS - FirstVNF_Mem ) ),Const ) * ( Const - ACS ) )", "choosing": "( ( DS - DS ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / FirstVNF_RAM ),BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( RRSe / ( MUM / DS ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / ( CRS + ACS ) ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( ( ( MLU + Min( MUM ,Max( MUC,RMSe ) ) ) / MUR ) / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / ( Max( Min( MDR ,( FirstVNF_CPU_Server - PN ) ),FirstVNF_Mem ) * PN ) ) ) - ( ( Const + ( FirstVNF_RAM / Max( Max( MDR,Min( CRS ,Const ) ),FirstVNF_RAM ) ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( ( ( RRSe * ( ( MLU / RCSe ) + MLU ) ) - DS ) * ( MLU + ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,( Min( PN ,FirstVNF_RAM ) / Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,CRS ) ) ) - DDR ) ,( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) * ( ( Min( RCSe ,DS ) + Max( CS,( MLU / Max( RCSe,MLU ) ) ) ) - DS ) ) * ( ( ( MUR - RRSe ) * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( DDR / FirstVNF_Mem ) ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( RCSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / AMS ) * Max( ACS,MDR ) ) + Min( Max( FirstVNF_RAM_Server,PN ) ,Min( DDR ,Const ) ) ) * ( ( Min( MDR ,AMS ) * ( Min( ( BR / DDR ) ,FirstVNF_RAM ) - ACS ) ) * ( Min( FirstVNF_RAM ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( RRSe + RRSe ) * ( RMSe / ( MUR + CS ) ) ) ,Min( ( Min( DS ,MLU ) - Max( RCSe,MUR ) ) ,( RRSe + RMSe ) ) ) / ( Max( ( MLU + RMSe ),( DS + RCSe ) ) / Max( ( MUC - DS ),Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,Min( ( FirstVNF_Mem_Server - ACS ) ,RRS ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) )", "choosing": "Max( ( Min( Min( ( ( RMSe - ( ( MLU / MUR ) * MLU ) ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + AMS ) + ( DDR / FirstVNF_RAM ) )", "choosing": "Min( ( MLU + ( MUM / ( RMSe * MUM ) ) ) ,( Max( MLU,MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + RRS ) / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( ( MUC - RRSe ) - ( MUM - ( RCSe * ( CS / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - ( ( ( MRS * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) - ( ( AMS * MDR ) - ( ( ( MDR - ARS ) * PN ) + AMS ) ) ) ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * ( ( DS * RCSe ) - DS ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( ( ( ( CRS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ( FirstVNF_Mem / ARS ) ) ) - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + ( Max( MUR,( ( Max( RMSe,MUM ) - MUM ) / Max( ( RCSe - MUM ),CS ) ) ) - ( DS + MLU ) ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / ( DDR + ( Min( FirstVNF_RAM_Server ,CRS ) + ( CRS * PN ) ) ) )", "choosing": "Max( ( ( MLU * MLU ) + ( MLU * MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( BR,DDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Max( MRS,CRS ) ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * ( RRSe - CS ) ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( BR + Max( ( Min( AMS ,ARS ) + ( FirstVNF_Mem_Server + BR ) ),( ( CRS * ACS ) + ( FirstVNF_CPU_Server - MDR ) ) ) ) )", "choosing": "Max( ( ( MUM - ( MUM + DS ) ) * ( MUR + CS ) ),Max( Max( MLU,MUM ),Max( MUC,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN - BR ),Min( FirstVNF_Mem_Server ,PN ) ) - ( Max( BR,Max( MDR,FirstVNF_Mem ) ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,Max( Min( ( ( RMSe / MUC ) - CS ) ,DS ),( MUM - MUR ) ) ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( MRS * ( Const / ( Max( FirstVNF_RAM,Max( CRS,( PN / BR ) ) ) * ( RRS + MDR ) ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( ( Max( MUC,( Max( MUC,CS ) + MUM ) ) + Min( RRSe ,RMSe ) ) - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ACS ) - ( CRS + AMS ) )", "choosing": "Min( ( ( ( DS * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( ( MDR * MRS ) - ( CRS + AMS ) ) ) * ( Const - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( Max( RRSe,RMSe ) ,( Min( MLU ,Min( CS ,CS ) ) / MUM ) ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( RRSe - MLU ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / FirstVNF_RAM ),BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( RRSe / ( MUM / DS ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU - ( ( ( CRS + ACS ) - ACS ) * Max( Max( FirstVNF_Mem,CRS ),AMS ) ) ),AMS ),Min( ( FirstVNF_Mem + RRS ) ,( MDR + PN ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( MUR,( MUM * DS ) ) - ( ( ( CS - MUM ) - Max( MUR,RRSe ) ) - ( DS / RMSe ) ) ) + ( RMSe - Min( ( Min( DS ,RCSe ) * ( Max( Min( MUC ,MUM ),( CS / MUC ) ) / RRSe ) ) ,( CS + Min( RRSe ,Max( CS,Max( RRSe,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - MRS ) / ( RRS - CRS ) ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / MUC ) * ( RCSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * ( ( ( MRS + FirstVNF_CPU ) + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) ) ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( ( MUR - RRSe ) * RMSe ) / ( MLU / RMSe ) ) ) ,( Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - CS ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),MRS ) * ( MRS + Min( FirstVNF_Mem ,( DDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( ( MUR + Max( ( Max( MLU,MUR ) * CS ),( MUC * DS ) ) ) * ( MUC / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - ACS ) ,( ( ARS / FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( MRS * MRS ) ,Max( MDR,FirstVNF_CPU ) ) + ( ( DDR - FirstVNF_CPU_Server ) + ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( DS - MUC ) + ( MUM + MLU ) ) - ( RMSe / ( MLU / MUC ) ) ) - ( MUR + Max( RMSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}]}