{"1": [{"determining": "( ( CRS / ARS ) / ( Const - ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS + MLU ),( ( DS / RCSe ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( PN * ARS ) * FirstVNF_Mem ),MRS ) - ( Const * FirstVNF_Mem ) )", "choosing": "Min( ( RMSe + ( ( Max( ( MUR + Max( MUR,( MUC / MUM ) ) ),MUC ) + RRSe ) / ( ( CS + MUR ) / MLU ) ) ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) + ( RRS / CRS ) )", "choosing": "( Max( MUM,RMSe ) - Min( MLU ,RRSe ) )", "obj1": 0.6747663551401869, "obj2": 0.22990285294945734}, {"determining": "( ( ACS * DDR ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,CS ) - ( MUC / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ,( BR + Min( PN ,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( ( ( RMSe + MUM ) * ( RRSe / RRSe ) ) + Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( BR + DDR ) / Min( AMS ,FirstVNF_CPU ) ),( ( MRS + FirstVNF_CPU_Server ) + Min( CRS ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + CS ) - ( RRSe - RMSe ) ) / ( Min( MUR ,DS ) * ( MLU * MUR ) ) )", "obj1": 0.6261682242990654, "obj2": 0.272561314455281}, {"determining": "( ( ( RRS / Const ) - Min( MRS ,FirstVNF_CPU_Server ) ) + Min( ( Const - ARS ) ,( FirstVNF_RAM / RRS ) ) )", "choosing": "Max( ( ( RMSe - MUM ) / ( RRSe - MUM ) ),( ( MLU * RMSe ) * ( MUR / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( MDR ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * MUR ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Max( AMS,MRS ) ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( MLU - MUM ) * ( CS * MLU ) ) * Min( ( MUR - MLU ) ,( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * Max( ( BR / DDR ),FirstVNF_CPU ) )", "choosing": "Min( ( MUR / MUR ) ,( ( RCSe - ( RRSe / Max( MUR,( RCSe + MLU ) ) ) ) / ( DS * RCSe ) ) )", "obj1": 0.8299065420560747, "obj2": 0.13096130130797137}, {"determining": "( ( Min( MRS ,ARS ) - ( AMS * Const ) ) / ( ( MDR * ARS ) / ( ACS - DDR ) ) )", "choosing": "( ( ( MUR / DS ) + Min( MUM ,MLU ) ) + ( ( MUM + MUC ) + ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU_Server ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( Min( Max( RMSe,MLU ) ,( MUC / MUM ) ) - ( ( RRSe * RCSe ) * ( DS - MLU ) ) )", "obj1": 0.708411214953271, "obj2": 0.22242827943088095}, {"determining": "Min( ( Min( FirstVNF_Mem ,PN ) / ( MDR - DDR ) ) ,( Min( BR ,FirstVNF_Mem_Server ) - ( DDR + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( CS,CS ),Max( CS,RMSe ) ) * ( ( MUR * RCSe ) - ( MUC / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM,BR ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU - RRS ) ) ) - Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + Max( FirstVNF_CPU_Server,RRS ) ) ,( Max( MDR,CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "Min( ( ( Max( RCSe,Min( CS ,Max( Min( RCSe ,RRSe ),RRSe ) ) ) + RCSe ) * MUR ) ,( Min( ( MLU - MUR ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) )", "obj1": 0.9121495327102803, "obj2": 0.03856845846723953}, {"determining": "( Max( ( ( MDR / FirstVNF_RAM_Server ) / ( FirstVNF_Mem * ACS ) ),Max( Min( BR ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + AMS ) ) ) + ( Min( ( FirstVNF_RAM / CRS ) ,( ACS * BR ) ) / ( ( ACS / RRS ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + RMSe ) + MLU ) + MUC ) - ( RMSe / MUM ) )", "obj1": 0.6897196261682244, "obj2": 0.22708990753133956}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) - ( DDR * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,RCSe ) + ( ( CS - ( CS / MUC ) ) - MLU ) )", "obj1": 0.6616822429906543, "obj2": 0.24490497899839914}, {"determining": "( ( ( ( RRS + MDR ) * ( DDR + MDR ) ) + ( Min( RRS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + Min( ( ( FirstVNF_CPU / AMS ) / ( CRS * DDR ) ) ,Min( ( PN * ACS ) ,( CRS / ARS ) ) ) )", "choosing": "Max( Max( Max( ( RCSe - MLU ),Max( CS,CS ) ),( ( MUC - RMSe ) * ( MLU + CS ) ) ),( ( ( DS / CS ) / Min( CS ,MUR ) ) - ( ( MUR * CS ) / ( RRSe - CS ) ) ) )", "obj1": 0.9719626168224299, "obj2": 0.03170801777309511}, {"determining": "( ( Max( Min( PN ,ARS ),( FirstVNF_Mem_Server * DDR ) ) / ( ( FirstVNF_CPU_Server / MRS ) * ( CRS / ARS ) ) ) - Max( ( ( MDR * AMS ) / ( CRS * ACS ) ),Min( ( Const / FirstVNF_Mem ) ,( MRS / ACS ) ) ) )", "choosing": "( Min( DS ,( RMSe / ( Min( MUM ,( ( ( MUM - MUR ) / RCSe ) * ( DS + RRSe ) ) ) / CS ) ) ) / ( CS / CS ) )", "obj1": 0.8074766355140187, "obj2": 0.1488531954345764}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( PN,Const ) ,( DDR - MDR ) ) ) + ( ( ( MRS + AMS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( ( ( MLU + CS ) + ( MUC - RMSe ) ) / ( ( RMSe + CS ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - ACS ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( ACS + FirstVNF_RAM ) + ( RRS / MRS ) ) * ( ( DDR - ACS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( ( ( MUC / CS ) - Max( MUM,RMSe ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( ( RRSe + MLU ) / Max( RCSe,MUM ) ) - ( Min( MUC ,RRSe ) - ( MUM * MLU ) ) ) )", "obj1": 0.7252336448598131, "obj2": 0.1612898930704234}], "2": [{"determining": "( ( CRS / ARS ) / ( Const - ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS + MLU ),( ( DS / RCSe ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( PN * ARS ) * FirstVNF_Mem ),MRS ) - ( Const * FirstVNF_Mem ) )", "choosing": "Min( ( RMSe + ( ( Max( ( MUR + Max( MUR,( MUC / MUM ) ) ),MUC ) + RRSe ) / ( ( CS + MUR ) / MLU ) ) ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) + ( RRS / CRS ) )", "choosing": "( Max( MUM,RMSe ) - Min( MLU ,RRSe ) )", "obj1": 0.6747663551401869, "obj2": 0.22990285294945734}, {"determining": "( ( ACS * DDR ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,CS ) - ( MUC / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ,( BR + Min( PN ,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( ( ( RMSe + MUM ) * ( RRSe / RRSe ) ) + Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( BR + DDR ) / Min( AMS ,FirstVNF_CPU ) ),( ( MRS + FirstVNF_CPU_Server ) + Min( CRS ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + CS ) - ( RRSe - RMSe ) ) / ( Min( MUR ,DS ) * ( MLU * MUR ) ) )", "obj1": 0.6261682242990654, "obj2": 0.272561314455281}, {"determining": "( ( ( RRS / Const ) - Min( MRS ,FirstVNF_CPU_Server ) ) + Min( ( Const - ARS ) ,( FirstVNF_RAM / RRS ) ) )", "choosing": "Max( ( ( RMSe - MUM ) / ( RRSe - MUM ) ),( ( MLU * RMSe ) * ( MUR / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( MDR ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * MUR ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Max( AMS,MRS ) ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( MLU - MUM ) * ( CS * MLU ) ) * Min( ( MUR - MLU ) ,( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * Max( ( BR / DDR ),FirstVNF_CPU ) )", "choosing": "Min( ( MUR / MUR ) ,( ( RCSe - ( RRSe / Max( MUR,( RCSe + MLU ) ) ) ) / ( DS * RCSe ) ) )", "obj1": 0.8299065420560747, "obj2": 0.13096130130797137}, {"determining": "( ( Min( MRS ,ARS ) - ( AMS * Const ) ) / ( ( MDR * ARS ) / ( ACS - DDR ) ) )", "choosing": "( ( ( MUR / DS ) + Min( MUM ,MLU ) ) + ( ( MUM + MUC ) + ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,PN ) / ( MDR - DDR ) ) ,( Min( BR ,FirstVNF_Mem_Server ) - ( DDR + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( CS,CS ),Max( CS,RMSe ) ) * ( ( MUR * RCSe ) - ( MUC / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + MDR ) * ( DDR + MDR ) ) + ( Min( RRS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + Min( ( ( FirstVNF_CPU / AMS ) / ( CRS * DDR ) ) ,Min( ( PN * ACS ) ,( CRS / ARS ) ) ) )", "choosing": "Max( Max( Max( ( RCSe - MLU ),Max( CS,CS ) ),( ( MUC - RMSe ) * ( MLU + CS ) ) ),( ( ( DS / CS ) / Min( CS ,MUR ) ) - ( ( MUR * CS ) / ( RRSe - CS ) ) ) )", "obj1": 0.9719626168224299, "obj2": 0.03170801777309511}, {"determining": "( ( Max( Min( PN ,ARS ),( FirstVNF_Mem_Server * DDR ) ) / ( ( FirstVNF_CPU_Server / MRS ) * ( CRS / ARS ) ) ) - Max( ( ( MDR * AMS ) / ( CRS * ACS ) ),Min( ( Const / FirstVNF_Mem ) ,( MRS / ACS ) ) ) )", "choosing": "( Min( DS ,( RMSe / ( Min( MUM ,( ( ( MUM - MUR ) / RCSe ) * ( DS + RRSe ) ) ) / CS ) ) ) / ( CS / CS ) )", "obj1": 0.8074766355140187, "obj2": 0.1488531954345764}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( PN,Const ) ,( DDR - MDR ) ) ) + ( ( ( MRS + AMS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( ( ( MLU + CS ) + ( MUC - RMSe ) ) / ( ( RMSe + CS ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - ACS ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( ACS + FirstVNF_RAM ) + ( RRS / MRS ) ) * ( ( DDR - ACS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( ( ( MUC / CS ) - Max( MUM,RMSe ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( ( RRSe + MLU ) / Max( RCSe,MUM ) ) - ( Min( MUC ,RRSe ) - ( MUM * MLU ) ) ) )", "obj1": 0.7252336448598131, "obj2": 0.1612898930704234}, {"determining": "( ( Min( Max( FirstVNF_RAM,BR ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU - RRS ) ) ) - Min( ACS ,( Max( MDR,CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,RRSe ) + Max( RCSe,MUM ) ) * ( ( MUM - MUC ) + Max( RRSe,MUM ) ) ) ,( Min( ( MLU - MUR ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - ACS ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + ( MDR - AMS ) ) ,( Max( MDR,CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "( Min( ( ( Min( RRSe ,RRSe ) + ( MUC * RRSe ) ) * ( ( MUM - MUC ) + Max( RRSe,MUM ) ) ) ,( Min( ( MLU - MUR ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) ) / ( ( ( RRSe + MLU ) / Max( RCSe,MUM ) ) - ( Min( MUC ,RRSe ) - ( MUM * MLU ) ) ) )", "obj1": 0.9121495327102803, "obj2": 0.03834838635167082}, {"determining": "Min( Min( ACS ,( MRS - FirstVNF_CPU_Server ) ) ,( ( ARS / MDR ) * ( FirstVNF_RAM * MRS ) ) )", "choosing": "( ( ( RMSe + MUM ) * ( RRSe / Min( ( ( CS + RRSe ) + ( RCSe - MUR ) ) ,( ( MUR / RRSe ) - Min( RCSe ,RCSe ) ) ) ) ) + ( ( MLU - MUM ) * ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const - ARS ) ,( FirstVNF_RAM / RRS ) ) + ( ( ARS - Max( Const,FirstVNF_CPU_Server ) ) - Const ) )", "choosing": "( ( Min( ( MUM - CS ) ,Min( MUR ,MUC ) ) + ( ( RRSe / MUR ) * ( RRSe * RRSe ) ) ) + Min( Max( ( RRSe + MUC ),Min( MUC ,MUR ) ) ,Max( ( MUM + Max( ( ( RMSe - MUM ) / ( RRSe - MUM ) ),( ( MLU * RMSe ) * ( MUR / RMSe ) ) ) ),Min( RCSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / Const ) - Min( MRS ,FirstVNF_CPU_Server ) ) + Min( ( Const - ARS ) ,( ( ARS - Max( Const,FirstVNF_CPU_Server ) ) - Const ) ) )", "choosing": "Max( ( ( RMSe - MUM ) / ( RRSe - MUM ) ),( ( MLU * RMSe ) * ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( PN ,ARS ),( FirstVNF_Mem_Server * DDR ) ) / FirstVNF_CPU ) - Max( ( ( MDR * AMS ) / ( CRS * ACS ) ),Min( ( Const / FirstVNF_Mem ) ,( MRS / ACS ) ) ) )", "choosing": "( Min( DS ,( RCSe - RRSe ) ) / ( CS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( PN ,ARS ),( FirstVNF_Mem_Server * DDR ) ) / ( ( FirstVNF_CPU_Server / MRS ) * ( CRS / ARS ) ) ) - Max( ( ( MDR * AMS ) / ( CRS * ACS ) ),Min( ( Const / FirstVNF_Mem ) ,( MRS / ACS ) ) ) )", "choosing": "( Min( DS ,( RMSe / ( Min( MUM ,( ( ( MUM - MUR ) / RCSe ) * ( DS + RRSe ) ) ) / CS ) ) ) / ( CS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * Max( ( BR / DDR ),FirstVNF_CPU ) )", "choosing": "Min( ( MUR / MUR ) ,( ( RCSe - ( RRSe / Max( MUR,( RCSe + MLU ) ) ) ) / ( DS * RCSe ) ) )", "obj1": 0.8467289719626169, "obj2": 0.11755022900869402}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MRS ) - Min( Const ,MDR ) ) / Max( RRS,MRS ) )", "choosing": "( ( RRSe * Max( MLU,MLU ) ) * ( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_RAM_Server / ACS ),Min( AMS ,RRS ) ) * Min( Max( FirstVNF_RAM,FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) ) ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * MUR ) * ( MUR + MLU ) ) * ( ( Max( Min( Min( CS ,RCSe ) ,Max( MUR,CS ) ),( ( RMSe + MUM ) - Max( MUR,RCSe ) ) ) - ( ( Max( MUR,RCSe ) - Min( MUM ,RMSe ) ) + ( ( MUR * RCSe ) - Min( MLU ,RCSe ) ) ) ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( CRS * DDR ),( DDR + FirstVNF_RAM ) )", "choosing": "( ( DS * MUM ) - ( MLU / ( Min( MLU ,RCSe ) * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.7233644859813084, "obj2": 0.18320385152379762}, {"determining": "( ( RRS - MRS ) * Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( CS / Min( RMSe ,RCSe ) ) - ( MUM * ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS + Min( ( Const - ARS ) ,( FirstVNF_RAM / RRS ) ) )", "choosing": "Max( ( ( RMSe - MUM ) / ( RRSe - MUM ) ),( ( ( ( RCSe + RMSe ) + MLU ) + MUC ) * ( MUR / RMSe ) ) )", "obj1": 0.6616822429906543, "obj2": 0.24488568202831673}, {"determining": "( Max( Const,ACS ) / ( DDR - AMS ) )", "choosing": "Max( Max( ( RCSe + MLU ),RRSe ),Min( Max( RRSe,( Max( Max( CS,CS ),Max( CS,RMSe ) ) * ( ( MUR * RCSe ) - ( MUC / RCSe ) ) ) ) ,( CS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / Min( ( Const - ARS ) ,( FirstVNF_RAM / RRS ) ) ) * ( Const - FirstVNF_RAM_Server ) ) * Min( ( ARS / MDR ) ,( MDR - ARS ) ) )", "choosing": "Min( Max( ( RRSe - MUC ),( MUC * RCSe ) ) ,( ( MLU * RMSe ) * ( MUR / RMSe ) ) )", "obj1": 0.9925233644859813, "obj2": 0.006839328096881295}, {"determining": "( ( ( RRS / Const ) - Min( ( ( ( FirstVNF_Mem_Server / DDR ) * ( Const - FirstVNF_RAM_Server ) ) * Min( ( ARS / MDR ) ,( MDR - ARS ) ) ) ,FirstVNF_CPU_Server ) ) + Min( ( Const - ARS ) ,( FirstVNF_RAM / RRS ) ) )", "choosing": "Max( ( ( RMSe - MUM ) / ( RRSe - MUM ) ),( ( MLU * RMSe ) * ( MUC * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - Max( FirstVNF_RAM,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( CS / Max( Min( MUM ,RMSe ),MUC ) ) * RMSe ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,MRS ) - ( Const * FirstVNF_Mem ) ) ,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ,( BR + Min( PN ,DDR ) ) )", "choosing": "( ( ( RMSe + MUM ) * ( RRSe / RRSe ) ) + ( ( ( CS / Max( Min( MUM ,RMSe ),MUC ) ) - MUM ) * Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( PN * ARS ) * FirstVNF_Mem ),MRS ) - ( Const * FirstVNF_Mem ) )", "choosing": "Min( ( RMSe + ( ( Max( ( MUR + Max( MUR,( MUC / MUM ) ) ),MUC ) + RRSe ) / ( ( CS + MUR ) / MLU ) ) ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ACS - DDR ) / Max( AMS,PN ) ),( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,AMS ) ) ) * Min( ( ( MRS - FirstVNF_RAM_Server ) + Min( ACS ,FirstVNF_Mem ) ) ,Min( ( ACS * ARS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "( Max( MUM,MUM ) * Min( MUR ,DS ) )", "obj1": 0.9813084112149533, "obj2": 0.015611337729470322}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU ) * Min( ( ( MRS - FirstVNF_RAM_Server ) + Min( ACS ,FirstVNF_Mem ) ) ,Min( ( ACS * ARS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "( Max( MUM,MUM ) * ( MLU - ( RCSe * MUC ) ) )", "obj1": 0.897196261682243, "obj2": 0.0854100048054712}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( MDR ,AMS ) ) - ( Max( MRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUC * MUR ) * ( MUR + MLU ) ) * ( ( DS + MUM ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( MRS - FirstVNF_RAM ) ) * Max( ACS,ARS ) )", "choosing": "( ( ( ( DS - MLU ) * ( RMSe + MLU ) ) - ( ( MLU * MLU ) + Min( ( ( ( MUC - MUM ) + CS ) + MUR ) ,RRSe ) ) ) - ( ( ( DS * CS ) + Max( MUC,RCSe ) ) + ( Min( RMSe ,MUC ) * ( RMSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ( DDR - MDR ) + ( DDR * FirstVNF_Mem ) ) + Min( ( BR - RRS ) ,( FirstVNF_RAM_Server - BR ) ) ) * Min( RRS ,Const ) ),Max( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ),( FirstVNF_Mem * ACS ) ) )", "choosing": "Min( ( MLU + ( DS * DS ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.6728971962616822, "obj2": 0.23178796513891622}, {"determining": "( ( ACS * Const ) + ( RRS / CRS ) )", "choosing": "( Max( MUM,RMSe ) - RCSe )", "obj1": 0.6691588785046729, "obj2": 0.24174000254557315}, {"determining": "( ( CRS / ARS ) / ( Const - ( ( ACS * FirstVNF_CPU ) + ( RRS / CRS ) ) ) )", "choosing": "Max( ( DS + MLU ),( MLU + Max( MUM,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( ( MRS / CRS ),( ACS - MRS ) ) ,( DDR - MDR ) ) ) + ( ( ( MRS + AMS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( ( ( MLU + CS ) + ( MUC - RMSe ) ) / Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( MRS - Max( ( FirstVNF_RAM + FirstVNF_Mem ),( DDR - Const ) ) ) ) * Max( ACS,ARS ) )", "choosing": "( ( ( ( DS - MLU ) * ( RMSe + MLU ) ) - ( ( MLU * MLU ) + Min( ( ( ( MUC - MUM ) + CS ) + MUR ) ,RRSe ) ) ) - ( ( ( MUM - RRSe ) + Max( MUC,RCSe ) ) + ( Min( RMSe ,MUC ) * ( RMSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + ( RRS / CRS ) ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) )", "choosing": "( ( RCSe / RMSe ) - ( RRSe + Min( MLU ,RRSe ) ) )", "obj1": 0.9738317757009346, "obj2": 0.02234708884645554}, {"determining": "Min( ( ( ( MDR * BR ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Max( BR,AMS ) / Max( BR,FirstVNF_CPU ) ) ) ,Min( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - DDR ) ,( ( AMS * FirstVNF_Mem_Server ) * ( CRS / Const ) ) ) )", "choosing": "( ( ( Min( Min( CS ,CS ) ,( MUR + MUC ) ) - Min( RCSe ,MUR ) ) / Max( Min( MLU ,MUC ),Min( RRSe ,DS ) ) ) / ( ( ( DS - MUM ) * ( MUR / MUC ) ) + Min( Min( RRSe ,RMSe ) ,( MUC + RRSe ) ) ) )", "obj1": 0.891588785046729, "obj2": 0.0957166322317123}, {"determining": "( Max( Max( RRS,CRS ),Min( PN ,CRS ) ) + ( CRS - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM + MUC ) + ( CS + MUC ) ) ,( ( MUM + RCSe ) + Min( RMSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ARS ) / ( Const - ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS + MLU ),( ( DS / RCSe ) + RCSe ) )", "obj1": 0.7813084112149533, "obj2": 0.16016233373778263}, {"determining": "( Max( RRS,( DDR / ( PN - MRS ) ) ) / Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( ( ( Min( RMSe ,RRSe ) / ( CS + RCSe ) ) - RRSe ) - Max( RRSe,( MLU - Max( RCSe,DS ) ) ) )", "obj1": 0.697196261682243, "obj2": 0.21573159078216408}, {"determining": "( Max( ( ( FirstVNF_CPU + PN ) + ( MDR * FirstVNF_CPU_Server ) ),( Max( FirstVNF_RAM_Server,MDR ) * ( FirstVNF_Mem_Server / MRS ) ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,Min( Const ,DDR ) ) )", "choosing": "( Min( ( CS / MUC ) ,( ( MUR * RCSe ) - ( MLU * MUC ) ) ) - Min( Max( Max( DS,CS ),Max( MUM,RRSe ) ) ,( Min( MUM ,MUR ) * Max( MUM,MUM ) ) ) )", "obj1": 0.685981308411215, "obj2": 0.2267151232773472}, {"determining": "( ( Min( Max( FirstVNF_RAM,BR ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / Min( Max( ACS,FirstVNF_RAM ) ,MRS ) ) - Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + ( MDR - AMS ) ) ,( Max( MDR,CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,RRSe ) + ( MUC * RRSe ) ) * ( ( MUM - MUC ) + MUM ) ) ,( Min( ( MLU - MUR ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) )", "obj1": 0.914018691588785, "obj2": 0.037713389731586174}, {"determining": "( ( Min( Max( FirstVNF_RAM,BR ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU - RRS ) ) ) - Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + Max( FirstVNF_CPU_Server,RRS ) ) ,( Max( MDR,CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "Min( ( ( Max( RCSe,Min( CS ,Max( Min( RCSe ,RRSe ),RRSe ) ) ) + RCSe ) * MUR ) ,( Min( ( MLU - MUR ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + MDR ) + ( ( FirstVNF_Mem - Max( Const,FirstVNF_CPU_Server ) ) - Const ) )", "choosing": "( ( Min( ( MUM - CS ) ,Min( MUR ,MUC ) ) + ( ( RRSe / MUR ) * ( RRSe * RRSe ) ) ) + ( RMSe + MUM ) )", "obj1": 0.6598130841121496, "obj2": 0.24710462607380468}, {"determining": "( Min( MRS ,DDR ) - FirstVNF_CPU_Server )", "choosing": "( ( MUM * RRSe ) - ( ( MLU - MUR ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU - RRS ) ) ) - Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + Max( FirstVNF_CPU_Server,RRS ) ) ,( Max( MDR,CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "Min( ( ( Max( RCSe,Min( ( ( MUM * RRSe ) - ( RMSe * RCSe ) ) ,Max( Min( RCSe ,RRSe ),RRSe ) ) ) + RCSe ) * MUR ) ,( Min( ( MLU - MUR ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + MDR ) * ( DDR + MDR ) ) + ( Min( RRS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + Min( ( ( FirstVNF_CPU / AMS ) / ( CRS * DDR ) ) ,Min( MRS ,( CRS / ARS ) ) ) )", "choosing": "Max( Max( Max( ( RCSe - MLU ),Max( CS,CS ) ),( ( MUC - RMSe ) * ( MLU + CS ) ) ),( ( ( DS - MUR ) + ( MLU - MUC ) ) - ( ( MUR * CS ) / ( RRSe - CS ) ) ) )", "obj1": 0.9682242990654205, "obj2": 0.03691401022061461}, {"determining": "( ( BR * BR ) / ( ACS - ( ( Max( RRS,CRS ) + ( ACS + ARS ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / RMSe ) + ( RMSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Max( ( Max( RRS,CRS ) + ( ACS + ARS ) ),MRS ) ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( MLU - MUM ) * ( CS * MLU ) ) * Min( MUR ,( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR * BR ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Max( BR,AMS ) / Min( Min( RRS ,FirstVNF_Mem ) ,Max( FirstVNF_RAM_Server,AMS ) ) ) ) ,Min( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( AMS * FirstVNF_Mem_Server ) * ( CRS / Const ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUR ) - Min( RCSe ,MUR ) ) / Max( Min( MLU ,MUC ),Min( RRSe ,DS ) ) ) / ( ( ( DS - MUM ) * ( MUR / MUC ) ) + Min( Min( RRSe ,RMSe ) ,( MUC + RRSe ) ) ) )", "obj1": 0.805607476635514, "obj2": 0.1545237507126894}, {"determining": "( ( ACS * DDR ) - ( FirstVNF_CPU_Server + ( RRS * FirstVNF_Mem ) ) )", "choosing": "( ( RMSe + MUM ) - ( MUC / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,( ( Min( MRS ,ARS ) - ( AMS * Const ) ) / ( ( MDR * ARS ) / ( ACS - DDR ) ) ) ),Min( PN ,CRS ) ) + ( CRS - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUR / DS ) + Min( MUM ,MLU ) ) + ( ( MUM + MUC ) + ( MUM * DS ) ) ) ,( ( MUM + RCSe ) + Min( RMSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_RAM_Server ) - ( AMS * Const ) ) / ( ( MDR * ARS ) / ( ACS - DDR ) ) )", "choosing": "( ( MUM + MUC ) + ( ( MUM + MUC ) + ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( AMS * AMS ) - ( AMS * CRS ) ) ,Min( Max( PN,Const ) ,( DDR - MDR ) ) ) + ( ( ( MRS + AMS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( RMSe + CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( ( ( MLU + CS ) + ( MUC - RMSe ) ) / ( ( RMSe + CS ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}]}