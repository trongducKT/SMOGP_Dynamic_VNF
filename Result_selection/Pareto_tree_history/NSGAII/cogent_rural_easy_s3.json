{"1": [{"determining": "Min( Max( FirstVNF_RAM_Server,Min( BR ,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MLU + RMSe ) * ( ( MUC / MUC ) - RCSe ) )", "obj1": 0.20342205323193915, "obj2": 0.6359040663046145}, {"determining": "Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUM ) ,( DS - CS ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( ( Min( BR ,DDR ) - FirstVNF_CPU ) * ( PN - RRS ) )", "choosing": "( ( MUR + MUC ) + ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) )", "choosing": "( Max( DS,RRSe ) - ( RCSe * MLU ) )", "obj1": 0.20532319391634982, "obj2": 0.6163455720359576}, {"determining": "( ( ( ( Max( Min( MDR ,MDR ),CRS ) - MRS ) / MDR ) - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Max( ( Min( MLU ,Max( RRSe,( RMSe * MUC ) ) ) / RCSe ),MUR ) / ( MUM / ( RMSe + ( DS / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) / Min( Max( PN,FirstVNF_Mem ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS * Min( MLU ,DS ) ) / ( MUC - MUC ) )", "obj1": 0.7490494296577946, "obj2": 0.216987299938036}, {"determining": "Min( ( FirstVNF_Mem_Server / PN ) ,Max( Const,ARS ) )", "choosing": "( ( MLU / DS ) * ( MUC * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.7690431770830667}, {"determining": "Max( ( ARS / PN ),( DDR + MDR ) )", "choosing": "( ( Min( ( Max( ( MUC - RCSe ),( MUM * ( CS - MLU ) ) ) / RRSe ) ,MUR ) + MLU ) / ( MUM + DS ) )", "obj1": 0.11787072243346007, "obj2": 0.7090900269543777}, {"determining": "( ( Const * Const ) / ( ( ( ACS - FirstVNF_RAM ) - RRS ) - PN ) )", "choosing": "( ( MUM - MLU ) + ( MUR * Max( RRSe,( ( MUC * RMSe ) - Max( MUM,( MUR * MLU ) ) ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( MLU + MUM ) ) / Max( Max( RCSe,MUM ),( CS + MUC ) ) )", "obj1": 0.3517110266159696, "obj2": 0.46835391715389396}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 0.9296577946768061, "obj2": 0.06492634646358728}, {"determining": "( ( ( MRS * ARS ) + ( CRS + CRS ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / ( ARS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.2224334600760456, "obj2": 0.5685836437516011}, {"determining": "( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_Mem ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU - ( ( ( CRS + FirstVNF_RAM_Server ) + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUR * ( CS / RMSe ) ) / Max( MUC,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Max( ( BR + Min( ACS ,( Const + PN ) ) ),MDR ) ) + ACS ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( ( MUR * ( RCSe - RMSe ) ) - RMSe ) * Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( Const - Max( DDR,AMS ) ) + ( FirstVNF_RAM * PN ) ) ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( Min( RMSe ,( RCSe / MUR ) ) / MUC ) + Max( MLU,Max( Max( MUM,DS ),DS ) ) )", "obj1": 0.6596958174904943, "obj2": 0.24795919283556372}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( RRSe + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5132854821888563}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * Min( ( ( FirstVNF_RAM_Server * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Min( MUM ,DS ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.3745247148288973, "obj2": 0.44125492582878423}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( BR * ( AMS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( MUM - ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "Min( ( ARS * Max( ARS,CRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "Max( ( DS / MUR ),( ( CS * ( MUM * RCSe ) ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( RRS - DDR ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( ( MUR * RCSe ) / MLU ) ,( MLU / RCSe ) ),Min( RCSe ,( MUM - ( RCSe * CS ) ) ) )", "obj1": 0.8231939163498099, "obj2": 0.14280437030831059}, {"determining": "( ( Min( FirstVNF_CPU_Server ,MDR ) - ( ARS / PN ) ) - ( MDR * ( Const / ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( MLU / DS ) + Min( RMSe ,( MLU - ( ( MLU * MUC ) * MUM ) ) ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - ( Min( RRSe ,CS ) + Min( RMSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),Min( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( ( ( RRSe - DS ) / Min( ( Min( CS ,MUC ) * MUM ) ,( RRSe / RRSe ) ) ) - MUM ) - ( Max( ( ( ( RCSe + MUC ) / RMSe ) * ( RRSe * RRSe ) ),MUM ) - ( Min( ( RMSe + MUC ) ,MUR ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,FirstVNF_RAM ),( DDR / ACS ) ) ) )", "choosing": "( ( DS * MUM ) / Max( DS,RRSe ) )", "obj1": 0.8536121673003803, "obj2": 0.11911139587479602}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( FirstVNF_RAM_Server * ( FirstVNF_CPU_Server + ( ( BR + DDR ) / MRS ) ) ) ),Max( AMS,DDR ) ) )", "choosing": "( ( ( ( Max( ( RCSe / ( MUC + Min( MLU ,DS ) ) ),MUC ) - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( Min( ( Max( MUM,RMSe ) / MUR ) ,MUC ) - Max( MUM,( RRSe + MLU ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( ( ( ( ( FirstVNF_CPU_Server - Min( MDR ,RRS ) ) + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + MRS ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( MUM - Max( MLU,Min( ( RRSe + MLU ) ,( MUM / ( RRSe + MLU ) ) ) ) ) + Min( DS ,RRSe ) ) ) / ( Max( Min( MUC ,MUC ),Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6425855513307985, "obj2": 0.2797447602726257}, {"determining": "Max( ( RRS - MRS ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5258712481710074}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( FirstVNF_Mem - FirstVNF_RAM ) - FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( CS ,CS ),Min( RCSe ,Min( Min( MLU ,RCSe ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM ) * ( ( Max( ARS,Const ) - ( RRS - FirstVNF_Mem ) ) - ( ( MRS / FirstVNF_CPU ) + ( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "Max( ( ( ( DS * MUC ) * Min( MUR ,MUR ) ) + Max( ( MUC + CS ),( Max( RMSe,( ( ( MLU + MLU ) * MLU ) / ( CS - MUM ) ) ) - MUC ) ) ),( ( ( RCSe - RCSe ) * Max( CS,RCSe ) ) - Min( Max( MUC,RRSe ) ,( DS + RRSe ) ) ) )", "obj1": 0.5931558935361216, "obj2": 0.347911300402542}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / Min( DS ,RCSe ) ) ) / RCSe ) * RMSe ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUM ) ,( DS - CS ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( ( Min( BR ,DDR ) - FirstVNF_CPU ) * ( PN - RRS ) )", "choosing": "( ( MUR + MUC ) + ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( Min( MDR ,MDR ),CRS ) - MRS ) / MDR ) - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Max( ( Min( MLU ,Max( RRSe,( RMSe * MUC ) ) ) / RCSe ),MUR ) / ( MUM / ( RMSe + ( DS / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / PN ) ,Max( Const,ARS ) )", "choosing": "( ( MLU / DS ) * ( MUC * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.7690431770830667}, {"determining": "( ( Const * Const ) / ( ( ( ACS - FirstVNF_RAM ) - RRS ) - PN ) )", "choosing": "( ( MUM - MLU ) + ( MUR * Max( RRSe,( ( MUC * RMSe ) - Max( MUM,( MUR * MLU ) ) ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( MLU + MUM ) ) / Max( Max( RCSe,MUM ),( CS + MUC ) ) )", "obj1": 0.3517110266159696, "obj2": 0.46835391715389396}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 0.9296577946768061, "obj2": 0.06492634646358728}, {"determining": "( ( ( MRS * ARS ) + ( CRS + CRS ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / ( ARS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.2224334600760456, "obj2": 0.5685836437516011}, {"determining": "( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_Mem ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU - ( ( ( CRS + FirstVNF_RAM_Server ) + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUR * ( CS / RMSe ) ) / Max( MUC,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Max( ( BR + Min( ACS ,( Const + PN ) ) ),MDR ) ) + ACS ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( ( MUR * ( RCSe - RMSe ) ) - RMSe ) * Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( Const - Max( DDR,AMS ) ) + ( FirstVNF_RAM * PN ) ) ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( Min( RMSe ,( RCSe / MUR ) ) / MUC ) + Max( MLU,Max( Max( MUM,DS ),DS ) ) )", "obj1": 0.6596958174904943, "obj2": 0.24795919283556372}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( RRSe + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5132854821888563}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * Min( ( ( FirstVNF_RAM_Server * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Min( MUM ,DS ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.3745247148288973, "obj2": 0.44125492582878423}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( BR * ( AMS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( MUM - ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "Min( ( ARS * Max( ARS,CRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "Max( ( DS / MUR ),( ( CS * ( MUM * RCSe ) ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( RRS - DDR ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( ( MUR * RCSe ) / MLU ) ,( MLU / RCSe ) ),Min( RCSe ,( MUM - ( RCSe * CS ) ) ) )", "obj1": 0.8231939163498099, "obj2": 0.14280437030831059}, {"determining": "( ( Min( FirstVNF_CPU_Server ,MDR ) - ( ARS / PN ) ) - ( MDR * ( Const / ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( MLU / DS ) + Min( RMSe ,( MLU - ( ( MLU * MUC ) * MUM ) ) ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - ( Min( RRSe ,CS ) + Min( RMSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),Min( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( ( ( RRSe - DS ) / Min( ( Min( CS ,MUC ) * MUM ) ,( RRSe / RRSe ) ) ) - MUM ) - ( Max( ( ( ( RCSe + MUC ) / RMSe ) * ( RRSe * RRSe ) ),MUM ) - ( Min( ( RMSe + MUC ) ,MUR ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,FirstVNF_RAM ),( DDR / ACS ) ) ) )", "choosing": "( ( DS * MUM ) / Max( DS,RRSe ) )", "obj1": 0.8536121673003803, "obj2": 0.11911139587479602}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( FirstVNF_RAM_Server * ( FirstVNF_CPU_Server + ( ( BR + DDR ) / MRS ) ) ) ),Max( AMS,DDR ) ) )", "choosing": "( ( ( ( Max( ( RCSe / ( MUC + Min( MLU ,DS ) ) ),MUC ) - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( Min( ( Max( MUM,RMSe ) / MUR ) ,MUC ) - Max( MUM,( RRSe + MLU ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( ( ( ( ( FirstVNF_CPU_Server - Min( MDR ,RRS ) ) + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + MRS ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( MUM - Max( MLU,Min( ( RRSe + MLU ) ,( MUM / ( RRSe + MLU ) ) ) ) ) + Min( DS ,RRSe ) ) ) / ( Max( Min( MUC ,MUC ),Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6425855513307985, "obj2": 0.2797447602726257}, {"determining": "Max( ( RRS - MRS ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5258712481710074}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( FirstVNF_Mem - FirstVNF_RAM ) - FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( CS ,CS ),Min( RCSe ,Min( Min( MLU ,RCSe ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / Min( DS ,RCSe ) ) ) / RCSe ) * RMSe ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_CPU ) - MDR ) + ( RRS - FirstVNF_Mem ) ) + Max( FirstVNF_RAM_Server,( RRS / Const ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( MLU / Min( Min( MUR ,RRSe ) ,RCSe ) ) ) ) )", "obj1": 0.9752851711026616, "obj2": 0.0067871426455403845}, {"determining": "Min( Min( RRS ,FirstVNF_CPU_Server ) ,( ( ACS - Const ) + ( AMS * FirstVNF_Mem_Server ) ) )", "choosing": "( DS / ( RRSe * ( MUR / RMSe ) ) )", "obj1": 0.5627376425855514, "obj2": 0.35306005119469475}, {"determining": "Min( ( ARS * Max( ARS,CRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "Max( ( DS / MUR ),( ( CS * ( MUM * RCSe ) ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + PN )", "choosing": "( ( DS * ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) / Max( DS,RRSe ) )", "obj1": 0.6539923954372624, "obj2": 0.268221097813536}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / RRSe ) ) )", "obj1": 0.06653992395437262, "obj2": 0.7557772920799813}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( Max( RRS,FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( MLU + MLU ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - FirstVNF_RAM ) * ( MRS - MDR ) ) * ( ( FirstVNF_RAM / ACS ) + ( FirstVNF_Mem + AMS ) ) ) * ( FirstVNF_RAM_Server - ( ( MRS / FirstVNF_CPU ) + ( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "Max( ( ( ( DS * MUC ) * Min( MUR ,MUR ) ) + Max( ( MUC + CS ),( CS - ( RRSe - RCSe ) ) ) ),( ( ( RCSe - RCSe ) * Max( CS,RCSe ) ) - Min( Max( MUC,RRSe ) ,( DS + RRSe ) ) ) )", "obj1": 0.6102661596958175, "obj2": 0.32447100669805135}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( Const / ARS ) ) * Max( Max( MDR,MDR ),Max( PN,ACS ) ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / ( Max( MLU,Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / ( MLU * MLU ) ) ) ) )", "obj1": 0.6977186311787072, "obj2": 0.2225697464740463}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( Const - Max( DDR,AMS ) ) + ( FirstVNF_RAM * PN ) ) ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( Min( RMSe ,( RCSe / MUR ) ) / MUC ) + Max( MLU,Max( Max( MUM,DS ),DS ) ) )", "obj1": 0.6749049429657795, "obj2": 0.23755888621268403}, {"determining": "( ( Max( ( RRS + FirstVNF_CPU ),BR ) + BR ) - Max( CRS,FirstVNF_CPU ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + Min( ( CS * MUR ) ,MUC ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - ( ( RCSe - MUR ) / Min( ( MLU * DS ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( AMS + ACS ) )", "choosing": "( ( RCSe - MUR ) / Min( Min( ( MUM / ( ( ( MUM * ( RRSe + MUC ) ) / CS ) + RMSe ) ) ,( Max( Min( MUM ,Max( ( DS + MUR ),( RCSe / RRSe ) ) ),( ( ( RCSe / MUC ) + ( MLU - RRSe ) ) * RMSe ) ) - ( Min( Min( MLU ,( MUC + RCSe ) ) ,( MLU + Max( RRSe,RCSe ) ) ) / ( CS + ( RMSe * ( MUM * DS ) ) ) ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_Mem / ( FirstVNF_RAM_Server - ( BR + FirstVNF_Mem_Server ) ) ),MRS ),( ARS + Const ) )", "choosing": "Max( ( DS - MUC ),Min( DS ,( Max( RRSe,( Max( RCSe,MUC ) * Max( Max( RRSe,MUM ),MUM ) ) ) + RCSe ) ) )", "obj1": 0.7300380228136882, "obj2": 0.19934188151401677}, {"determining": "( ( CRS + FirstVNF_RAM_Server ) + Max( PN,( MDR * AMS ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( CS * MUM ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.10456273764258556, "obj2": 0.6739332253768409}, {"determining": "( ( FirstVNF_CPU + MRS ) + ( Max( AMS,FirstVNF_Mem_Server ) - CRS ) )", "choosing": "( ( MUC - ( RMSe * ( MUC + RRSe ) ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( ( Min( ( CS - MLU ) ,MUM ) * RRSe ),RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.11216730038022814, "obj2": 0.6386179446050175}, {"determining": "( Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( ARS,Const ) - ( RRS - FirstVNF_Mem ) ) - ( ( MRS / FirstVNF_CPU ) + ( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "Max( ( ( ( DS * MUC ) * Min( MUR ,MUR ) ) + Max( ( MUC + CS ),( CS - RMSe ) ) ),( ( ( RCSe - RCSe ) * Max( CS,RCSe ) ) - Min( Max( MUC,RRSe ) ,( DS + Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) ) ) ) ) )", "obj1": 0.9486692015209125, "obj2": 0.053358988393433025}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - ( ( ARS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),( ( ( MRS - ( ( ( FirstVNF_RAM_Server / CRS ) / ( PN - FirstVNF_Mem ) ) + ( CRS + ARS ) ) ) / ACS ) / ( MDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) * ( ( MUR / ( MLU - RRSe ) ) * ( ( MUR * ( MUC * CS ) ) - ( ( Max( ( ( MLU + CS ) - DS ),RRSe ) * Max( RCSe,MUR ) ) / ( RMSe + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( AMS ,AMS ) ) * ( PN - RRS ) )", "choosing": "( ( MUR + MUC ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / MDR ) + ( Max( FirstVNF_RAM,MDR ) - Max( MRS,ARS ) ) )", "choosing": "( ( MUC - MUR ) + ( Max( MUM,RMSe ) * Max( RRSe,RRSe ) ) )", "obj1": 0.9068441064638784, "obj2": 0.08634432246490222}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),Min( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( ( ( RRSe - DS ) / Min( ( Min( CS ,MUC ) * MUM ) ,( RRSe / RRSe ) ) ) - MUM ) - ( Max( ( ( ( RCSe + MUC ) / RMSe ) * ( RRSe * RRSe ) ),MUM ) - ( Min( ( RMSe + MUC ) ,MUR ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + ( PN + ARS ) ) ) ,Max( ( RRS - DDR ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( MUM + MUM ) + ( MLU + DS ) ),Min( RCSe ,( MUM - ( RCSe * CS ) ) ) )", "obj1": 0.8840304182509505, "obj2": 0.09137391539861535}, {"determining": "( ( RRS - AMS ) - Min( PN ,ARS ) )", "choosing": "( Min( ( MLU * Min( MUR ,( MUR * ( CS - MUC ) ) ) ) ,RRSe ) / ( ( RRSe / ( MUM / ( RCSe / ( DS / Max( CS,Max( RCSe,RCSe ) ) ) ) ) ) / ( CS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / Max( PN,ARS ) ) * Min( Min( ( FirstVNF_Mem_Server / PN ) ,Min( DDR ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( ( Max( MLU,Max( ( ( DS * MLU ) * CS ),( RRSe - Min( Max( MUR,RCSe ) ,( MUM / MUR ) ) ) ) ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( PN * DDR ) ,RRS ) ,Min( ( ACS * ARS ) ,( Min( MRS ,Min( MRS ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server + AMS ) * BR ) ) ) ) / ARS ) ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) - ( RMSe / DS ) )", "obj1": 0.5855513307984791, "obj2": 0.3293796120832601}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ( AMS / PN ) ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,DDR ) / PN ) * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + ( AMS - Const ) )", "choosing": "( DS / Max( DS,( Min( ( ( RRSe - Max( Min( MLU ,RMSe ),MLU ) ) / RCSe ) ,Min( RCSe ,Max( DS,( MUC / MUR ) ) ) ) / MLU ) ) )", "obj1": 0.6463878326996197, "obj2": 0.26975608485036356}, {"determining": "( ( FirstVNF_Mem - ( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,FirstVNF_RAM ),( DDR / ACS ) ) ) ) ) * Max( ( Const - ( Const / ( Const * ( FirstVNF_RAM_Server / AMS ) ) ) ),Min( FirstVNF_Mem_Server ,Max( Const,Max( Min( RRS ,AMS ),BR ) ) ) ) )", "choosing": "( Max( RRSe,RRSe ) - ( MUM * ( Min( MLU ,DS ) + MUR ) ) )", "obj1": 0.32129277566539927, "obj2": 0.47604417571363883}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( Min( Const ,MRS ) ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,AMS ),FirstVNF_CPU ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( Min( MUM ,CS ) * Min( RRSe ,DS ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ACS ) + Max( ( AMS - ( ( Min( ARS ,RRS ) + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( ( CS / MLU ) ,( ( MUR - CS ) - Max( MUM,Min( RRSe ,( MUC - MUR ) ) ) ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7125038037144046}, {"determining": "Min( ( ( AMS / ( AMS + FirstVNF_CPU ) ) * Const ) ,( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - MUM ) ,Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( Min( ( RRSe / RCSe ) ,Max( RCSe,MUR ) ) - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.2965779467680608, "obj2": 0.4872529097224908}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( Min( BR ,ACS ),( Const - CRS ) ) ) )", "choosing": "Min( Min( RRSe ,MUC ) ,( ( DS * ( MLU / Min( Max( ( MUR * Max( RMSe,MUC ) ),( ( DS * CS ) + RRSe ) ) ,RMSe ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) ) * Max( ( ARS / Const ),( FirstVNF_Mem_Server - RRS ) ) ) + ( Max( Min( BR ,ACS ),Max( BR,PN ) ) * Max( ( Const - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "Max( ( Max( Min( RMSe ,MUC ),( RRSe / RMSe ) ) / Min( Max( MUR,MUC ) ,( MUM * MUR ) ) ),Min( ( ( RCSe - RMSe ) + ( RMSe * MLU ) ) ,( ( CS / MUC ) / ( MLU - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / PN ) ,DDR ) + ( FirstVNF_RAM - ARS ) )", "choosing": "( ( RMSe + RMSe ) - Max( CS,MUC ) )", "obj1": 0.9220532319391636, "obj2": 0.07215780913599555}, {"determining": "( Min( ( RRS / PN ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) / Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( AMS / DDR ) ) )", "choosing": "( ( ( MLU * DS ) - RMSe ) * RCSe )", "obj1": 0.9201520912547528, "obj2": 0.07443021480748588}, {"determining": "( Min( Const ,BR ) * FirstVNF_Mem_Server )", "choosing": "( Min( MLU ,MUM ) - ( MUC / ( ( MLU / ( ( DS + RCSe ) + ( RCSe * CS ) ) ) * MUM ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5886656715356893}, {"determining": "Min( ( ( Min( CRS ,ACS ) - AMS ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / ( FirstVNF_Mem / PN ) ) ) ) ,Min( MRS ,FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Min( MUM ,( RRSe + DS ) ),RMSe ),Min( RCSe ,( MUM - ( RCSe * ( ( Min( RCSe ,MUM ) / ( ( DS + RCSe ) + ( DS - RRSe ) ) ) * MUM ) ) ) ) )", "obj1": 0.8079847908745247, "obj2": 0.15760557067893385}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - ( PN * FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU + MLU ) * Max( MLU,MUR ) ) * Min( Max( RRSe,DS ) ,( MUC * RRSe ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( RRS - Max( ARS,Max( Min( CRS ,FirstVNF_Mem_Server ),CRS ) ) ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( Min( Max( Max( CS,MUC ),Max( MUR,DS ) ) ,( ( ( MLU + Max( MUM,MUC ) ) / MUM ) + MUC ) ) / MLU ) ,( MLU / RCSe ) ),Min( RCSe ,( MUM - ( RCSe * CS ) ) ) )", "obj1": 0.8307984790874525, "obj2": 0.13472575956627023}, {"determining": "( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_Mem ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU - ( ( ( CRS + FirstVNF_RAM_Server ) + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUR * ( CS / RMSe ) ) / Max( MUC,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - ( Min( FirstVNF_CPU ,MDR ) * PN ) ) + DDR ),( AMS + ( ( RRS - FirstVNF_CPU ) * ( PN - RRS ) ) ) )", "choosing": "( ( RCSe * ( MUC + ( CS - ( ( MUM + RRSe ) - CS ) ) ) ) - ( ( MUR + MUC ) + ( MUR + CS ) ) )", "obj1": 0.22813688212927757, "obj2": 0.5533788573439123}, {"determining": "( ( RRS - DDR ) * ( PN - RRS ) )", "choosing": "( ( ( MLU / RRSe ) - ( RCSe - MUM ) ) + ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Min( ARS ,DDR ) + ( FirstVNF_RAM - Max( ( FirstVNF_CPU_Server / CRS ),( AMS / DDR ) ) ) )", "choosing": "( ( MUM + RCSe ) - Max( CS,Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,DDR ) - FirstVNF_CPU ) * ( PN - RRS ) )", "choosing": "( ( MUR + MUC ) + ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / PN ) ,Max( Const,ARS ) )", "choosing": "( ( MLU / DS ) * ( MUC * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.7690431770830667}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / Min( DS ,RCSe ) ) ) / RCSe ) * RMSe ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 0.8079847908745247, "obj2": 0.060787535366317036}, {"determining": "Max( Max( ( FirstVNF_Mem / ( FirstVNF_RAM_Server - ( BR + FirstVNF_Mem_Server ) ) ),MRS ),( ARS + Const ) )", "choosing": "Max( ( DS - MUC ),Min( DS ,( Max( RRSe,( Max( RCSe,MUC ) * Max( Max( RRSe,MUM ),MUM ) ) ) + RCSe ) ) )", "obj1": 0.7300380228136882, "obj2": 0.19934188151401677}, {"determining": "( Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( ARS,Const ) - ( RRS - FirstVNF_Mem ) ) - ( ( MRS / FirstVNF_CPU ) + ( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "Max( ( ( ( DS * MUC ) * Min( MUR ,MUR ) ) + Max( ( MUC + CS ),( CS - RMSe ) ) ),( ( ( RCSe - RCSe ) * Max( CS,RCSe ) ) - Min( Max( MUC,RRSe ) ,( DS + Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) ) ) ) ) )", "obj1": 0.9486692015209125, "obj2": 0.053358988393433025}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "Min( ( RRS / FirstVNF_CPU_Server ) ,( ( ACS - Const ) + ARS ) )", "choosing": "( DS / ( ( Min( Max( CS,DS ) ,CS ) - MUM ) + MUC ) )", "obj1": 0.5342205323193916, "obj2": 0.3500040069160252}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( RRS - DDR ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Max( Min( ( ( MUR * RCSe ) / MLU ) ,( MLU / RCSe ) ),Min( RCSe ,( MUM - ( RCSe * CS ) ) ) ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.19771863117870722, "obj2": 0.5692976843818349}, {"determining": "( ( FirstVNF_CPU + MRS ) + ( Max( AMS,FirstVNF_Mem_Server ) - CRS ) )", "choosing": "( ( MUC - ( RMSe * ( MUC + RRSe ) ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( ( Min( ( CS - MLU ) ,MUM ) * RRSe ),RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.12167300380228137, "obj2": 0.6332661330324676}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( BR * PN ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( MLU + CS ) + ( Max( MUC,( RRSe * ( RMSe + RMSe ) ) ) * ( RMSe - ( RRSe * MUM ) ) ) ) * RMSe ) ) / ( MUM / ( ( RCSe * MLU ) * RMSe ) ) )", "obj1": 0.8231939163498099, "obj2": 0.057966493392943415}, {"determining": "Min( Max( Min( ACS ,MDR ),ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( MLU ,Max( RRSe,( RMSe * MUC ) ) ) / RCSe ),MUR ) - MUM ) ,( DS - CS ) )", "obj1": 0.40304182509505704, "obj2": 0.40029709077810216}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * Min( ( ( FirstVNF_RAM_Server * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Min( MUM ,DS ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( Max( RMSe,RRSe ) + RMSe ) ) )", "obj1": 0.37072243346007605, "obj2": 0.43685494688940035}, {"determining": "( ( CRS + FirstVNF_RAM_Server ) + Max( PN,( MDR * AMS ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( CS * MUM ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.10456273764258556, "obj2": 0.6739332253768409}, {"determining": "( ( ( ( BR - FirstVNF_CPU ) - MDR ) + ( RRS - FirstVNF_Mem ) ) + Max( FirstVNF_RAM_Server,( RRS / Const ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( MLU / Min( Min( MUR ,RRSe ) ,RCSe ) ) ) ) )", "obj1": 0.9752851711026616, "obj2": 0.0067871426455403845}, {"determining": "Min( Min( ( PN * DDR ) ,RRS ) ,Min( ( ACS * ARS ) ,( Min( MRS ,Min( MRS ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server + AMS ) * BR ) ) ) ) / ARS ) ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) - ( RMSe / DS ) )", "obj1": 0.5855513307984791, "obj2": 0.3293796120832601}, {"determining": "Max( ( RRS - MRS ),( ( DDR - FirstVNF_RAM ) * ( MRS - MDR ) ) )", "choosing": "( ( Max( Max( ( MUC + CS ),( CS - ( RRSe - RCSe ) ) ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.33079847908745247, "obj2": 0.4564361108096557}, {"determining": "( ( BR / Const ) / Min( Max( PN,BR ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS * Min( MLU ,DS ) ) / ( DS * Min( MUR ,RMSe ) ) )", "obj1": 0.5893536121673004, "obj2": 0.31447185137453404}, {"determining": "Min( ( ( AMS / ( AMS + FirstVNF_CPU ) ) * Const ) ,( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - MUM ) ,Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( Min( ( RRSe / RCSe ) ,Max( RCSe,MUR ) ) - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.2965779467680608, "obj2": 0.4872529097224908}, {"determining": "( ( ( ( AMS + ( ( Max( ( FirstVNF_Mem * RRS ),( MDR + PN ) ) / Min( FirstVNF_Mem_Server ,MDR ) ) - FirstVNF_RAM_Server ) ) / MDR ) - RRS ) - RRS )", "choosing": "( Max( ( Min( MLU ,Max( RRSe,( RMSe * MUC ) ) ) / RCSe ),MUR ) / ( ( ( Max( MUM,DS ) / RCSe ) / ( Min( MLU ,MUC ) * ( DS * RRSe ) ) ) - Min( MLU ,RRSe ) ) )", "obj1": 0.623574144486692, "obj2": 0.28277868889721675}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( RRSe + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5132854821888563}, {"determining": "Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUM ) ,( DS - CS ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / RRSe ) ) )", "obj1": 0.06653992395437262, "obj2": 0.7557772920799813}, {"determining": "( Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),FirstVNF_CPU ) + Max( ( AMS - ( FirstVNF_RAM_Server * CRS ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,Min( RRSe ,( MUR / RRSe ) ) ) ) ) )", "obj1": 0.08365019011406843, "obj2": 0.7093739022287103}, {"determining": "( ( FirstVNF_Mem - ( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,FirstVNF_RAM ),( DDR / ACS ) ) ) ) ) * Max( ( Const - ( Const / ( Const * ( FirstVNF_RAM_Server / AMS ) ) ) ),Min( FirstVNF_Mem_Server ,Max( Const,Max( Min( RRS ,AMS ),BR ) ) ) ) )", "choosing": "( Max( RRSe,RRSe ) - ( MUM * ( Min( MLU ,DS ) + MUR ) ) )", "obj1": 0.32129277566539927, "obj2": 0.47604417571363883}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * RRS ) * ( AMS / PN ) ) ) + FirstVNF_CPU_Server )", "choosing": "( DS / Max( ( MUR + CS ),RRSe ) )", "obj1": 0.6939163498098859, "obj2": 0.2128782236071698}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( FirstVNF_RAM_Server * ( FirstVNF_CPU_Server + ( ( BR + DDR ) / MRS ) ) ) ),Max( AMS,DDR ) ) )", "choosing": "( ( ( ( Max( ( RCSe / ( MUC + Min( MLU ,DS ) ) ),MUC ) - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( Min( ( Max( MUM,RMSe ) / MUR ) ,MUC ) - Max( MUM,( RRSe + MLU ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "( ( CRS / ( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( MLU + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.11026615969581749, "obj2": 0.642414852287183}, {"determining": "Max( ( Const + DDR ),MDR )", "choosing": "( ( MLU / RRSe ) - ( ( MUR + MUC ) + ( MUR + CS ) ) )", "obj1": 0.21482889733840305, "obj2": 0.5667671027347224}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( Const / ARS ) ) * Max( Max( MDR,MDR ),Max( PN,ACS ) ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / ( Max( MLU,Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / ( MLU * MLU ) ) ) ) )", "obj1": 0.6768060836501901, "obj2": 0.23331951398266876}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( Const - Max( DDR,AMS ) ) + ( FirstVNF_RAM * PN ) ) ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( Min( RMSe ,( RCSe / MUR ) ) / MUC ) + Max( MLU,Max( Max( MUM,DS ),DS ) ) )", "obj1": 0.6596958174904943, "obj2": 0.24795919283556372}, {"determining": "Max( ( ( Const - ( Min( FirstVNF_CPU ,MDR ) * PN ) ) + DDR ),( AMS + ( ( RRS - FirstVNF_CPU ) * ( PN - RRS ) ) ) )", "choosing": "( ( RCSe * ( MUC + ( CS - ( ( MUM + RRSe ) - CS ) ) ) ) - ( ( MUR + MUC ) + ( MUR + CS ) ) )", "obj1": 0.22813688212927757, "obj2": 0.5533788573439123}, {"determining": "Max( ( DDR * Const ),( ARS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( MUM / ( Min( CS ,( RCSe - RRSe ) ) + MUC ) ) / CS ),Min( DS ,MUR ) )", "obj1": 0.2414448669201521, "obj2": 0.5404951938114894}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + PN ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( ( DS - CS ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.25665399239543724, "obj2": 0.5204253129228913}, {"determining": "( ( ( ( Max( ( ( DDR - FirstVNF_RAM ) * ( MRS - MDR ) ),CRS ) - MRS ) / MDR ) - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Max( ( Min( MLU ,Max( RRSe,( RMSe * Max( MUC,RRSe ) ) ) ) / RCSe ),MUR ) / ( MUM / ( RMSe + ( DS / RCSe ) ) ) )", "obj1": 0.6482889733840305, "obj2": 0.2517969312636984}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,DDR ) / PN ) * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + ( AMS - Const ) )", "choosing": "( DS / Max( DS,( Min( ( ( RRSe - Max( Min( MLU ,RMSe ),MLU ) ) / RCSe ) ,Min( RCSe ,Max( DS,( MUC / MUR ) ) ) ) / MLU ) ) )", "obj1": 0.6463878326996197, "obj2": 0.26975608485036356}, {"determining": "Max( ( RRS - MRS ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5258712481710074}, {"determining": "( RRS + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( DS ,RCSe ) - Max( RMSe,( MUC / RCSe ) ) )", "obj1": 0.7186311787072244, "obj2": 0.20966632263160015}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( Const - Max( DDR,AMS ) ) + ( FirstVNF_RAM * PN ) ) ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( Min( RMSe ,( RCSe / MUR ) ) / MUC ) + Max( MLU,Max( Max( MUM,DS ),DS ) ) )", "obj1": 0.6749049429657795, "obj2": 0.23755888621268403}, {"determining": "( Max( FirstVNF_RAM,CRS ) - Max( MRS,( ( Min( FirstVNF_RAM_Server ,( ( BR + FirstVNF_Mem ) + ( FirstVNF_RAM * PN ) ) ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( RRSe / MUR ) - ( CS / MUM ) ) * ( Max( MUM,RMSe ) * Max( RRSe,RRSe ) ) ) )", "obj1": 0.9961977186311787, "obj2": 0.005448243953174259}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) * Max( ( Max( PN,MDR ) + ( ( FirstVNF_RAM_Server - ACS ) - Max( FirstVNF_CPU_Server,MDR ) ) ),DDR ) )", "choosing": "( ( MUM / RMSe ) - Max( ( ( RMSe / ( ( RRSe - ( MUR - Max( DS,MLU ) ) ) - ( MLU - ( ( RMSe - MUM ) / ( RMSe / MLU ) ) ) ) ) * DS ),CS ) )", "obj1": 0.23954372623574144, "obj2": 0.5509782438920936}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( ( ( ( ( FirstVNF_CPU_Server - Min( MDR ,RRS ) ) + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + MRS ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( MUM - Max( MLU,Min( ( RRSe + MLU ) ,( MUM / ( RRSe + MLU ) ) ) ) ) + Min( DS ,RRSe ) ) ) / ( Max( Min( MUC ,MUC ),Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6425855513307985, "obj2": 0.2797447602726257}, {"determining": "Min( ( ARS * Max( ARS,CRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "Max( ( DS / MUR ),( ( CS * ( MUM * RCSe ) ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "( ( FirstVNF_CPU + MRS ) + ( Max( AMS,FirstVNF_Mem_Server ) - CRS ) )", "choosing": "( ( MUC - ( RMSe * ( MUC + RRSe ) ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( ( Min( ( CS - MLU ) ,MUM ) * RRSe ),RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.11216730038022814, "obj2": 0.6386179446050175}, {"determining": "Max( Max( Min( ( ( ACS - RRS ) + ( RRS - FirstVNF_CPU_Server ) ) ,Max( ( PN / FirstVNF_CPU ),( BR * MRS ) ) ),MRS ),( ( ( PN - MRS ) / MDR ) - RRS ) )", "choosing": "Max( ( DS - MUC ),Min( DS ,( Min( MLU ,Max( RRSe,( RMSe * MUC ) ) ) / RCSe ) ) )", "obj1": 0.7224334600760456, "obj2": 0.20443797887064313}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( PN * ( AMS / PN ) ) ) + FirstVNF_CPU_Server )", "choosing": "( DS / Max( ( MUM / MUM ),RRSe ) )", "obj1": 0.7262357414448669, "obj2": 0.20439735938950737}, {"determining": "( ( Const * Const ) / ( ( ( ACS - FirstVNF_RAM ) - RRS ) - PN ) )", "choosing": "( ( MUM - MLU ) + ( MUR * Max( RRSe,( ( MUC * RMSe ) - Max( MUM,( MUR * MLU ) ) ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( ( RRS + ACS ) + Max( ( AMS - ( ( Min( ARS ,RRS ) + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( ( CS / MLU ) ,( ( MUR - CS ) - Max( MUM,Min( RRSe ,( MUC - MUR ) ) ) ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7125038037144046}, {"determining": "Min( ( ARS * Max( ARS,CRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "Max( ( DS / MUR ),( ( CS * ( MUM * RCSe ) ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "( ( RRS + ACS ) + Max( ( AMS - ( ( Min( ARS ,RRS ) + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( ( CS / MLU ) ,( ( MUR - CS ) - Max( MUM,Min( RRSe ,( MUC - MUR ) ) ) ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7125038037144046}, {"determining": "( ( ( ( Max( Min( MDR ,MDR ),CRS ) - MRS ) / MDR ) - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Max( ( Min( MLU ,Max( RRSe,( RMSe * MUC ) ) ) / RCSe ),MUR ) / ( MUM / ( RMSe + ( DS / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_Mem ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU - ( ( ( CRS + FirstVNF_RAM_Server ) + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUR * ( CS / RMSe ) ) / Max( MUC,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Max( ( BR + Min( ACS ,( Const + PN ) ) ),MDR ) ) + ACS ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( ( MUR * ( RCSe - RMSe ) ) - RMSe ) * Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( BR * ( AMS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( MUM - ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,MDR ) - ( ARS / PN ) ) - ( MDR * ( Const / ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( MLU / DS ) + Min( RMSe ,( MLU - ( ( MLU * MUC ) * MUM ) ) ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - ( Min( RRSe ,CS ) + Min( RMSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),Min( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( ( ( RRSe - DS ) / Min( ( Min( CS ,MUC ) * MUM ) ,( RRSe / RRSe ) ) ) - MUM ) - ( Max( ( ( ( RCSe + MUC ) / RMSe ) * ( RRSe * RRSe ) ),MUM ) - ( Min( ( RMSe + MUC ) ,MUR ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( FirstVNF_Mem - FirstVNF_RAM ) - FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( CS ,CS ),Min( RCSe ,Min( Min( MLU ,RCSe ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / Min( DS ,RCSe ) ) ) / RCSe ) * RMSe ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( Max( RRS,FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( MLU + MLU ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + FirstVNF_CPU ),BR ) + BR ) - Max( CRS,FirstVNF_CPU ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + Min( ( CS * MUR ) ,MUC ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - ( ( RCSe - MUR ) / Min( ( MLU * DS ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( AMS + ACS ) )", "choosing": "( ( RCSe - MUR ) / Min( Min( ( MUM / ( ( ( MUM * ( RRSe + MUC ) ) / CS ) + RMSe ) ) ,( Max( Min( MUM ,Max( ( DS + MUR ),( RCSe / RRSe ) ) ),( ( ( RCSe / MUC ) + ( MLU - RRSe ) ) * RMSe ) ) - ( Min( Min( MLU ,( MUC + RCSe ) ) ,( MLU + Max( RRSe,RCSe ) ) ) / ( CS + ( RMSe * ( MUM * DS ) ) ) ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - ( ( ARS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),( ( ( MRS - ( ( ( FirstVNF_RAM_Server / CRS ) / ( PN - FirstVNF_Mem ) ) + ( CRS + ARS ) ) ) / ACS ) / ( MDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) * ( ( MUR / ( MLU - RRSe ) ) * ( ( MUR * ( MUC * CS ) ) - ( ( Max( ( ( MLU + CS ) - DS ),RRSe ) * Max( RCSe,MUR ) ) / ( RMSe + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( AMS ,AMS ) ) * ( PN - RRS ) )", "choosing": "( ( MUR + MUC ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),Min( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( ( ( RRSe - DS ) / Min( ( Min( CS ,MUC ) * MUM ) ,( RRSe / RRSe ) ) ) - MUM ) - ( Max( ( ( ( RCSe + MUC ) / RMSe ) * ( RRSe * RRSe ) ),MUM ) - ( Min( ( RMSe + MUC ) ,MUR ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - AMS ) - Min( PN ,ARS ) )", "choosing": "( Min( ( MLU * Min( MUR ,( MUR * ( CS - MUC ) ) ) ) ,RRSe ) / ( ( RRSe / ( MUM / ( RCSe / ( DS / Max( CS,Max( RCSe,RCSe ) ) ) ) ) ) / ( CS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / Max( PN,ARS ) ) * Min( Min( ( FirstVNF_Mem_Server / PN ) ,Min( DDR ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( ( Max( MLU,Max( ( ( DS * MLU ) * CS ),( RRSe - Min( Max( MUR,RCSe ) ,( MUM / MUR ) ) ) ) ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ( AMS / PN ) ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( Min( Const ,MRS ) ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,AMS ),FirstVNF_CPU ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( Min( MUM ,CS ) * Min( RRSe ,DS ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( Min( BR ,ACS ),( Const - CRS ) ) ) )", "choosing": "Min( Min( RRSe ,MUC ) ,( ( DS * ( MLU / Min( Max( ( MUR * Max( RMSe,MUC ) ),( ( DS * CS ) + RRSe ) ) ,RMSe ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) ) * Max( ( ARS / Const ),( FirstVNF_Mem_Server - RRS ) ) ) + ( Max( Min( BR ,ACS ),Max( BR,PN ) ) * Max( ( Const - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "Max( ( Max( Min( RMSe ,MUC ),( RRSe / RMSe ) ) / Min( Max( MUR,MUC ) ,( MUM * MUR ) ) ),Min( ( ( RCSe - RMSe ) + ( RMSe * MLU ) ) ,( ( CS / MUC ) / ( MLU - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - ( PN * FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU + MLU ) * Max( MLU,MUR ) ) * Min( Max( RRSe,DS ) ,( MUC * RRSe ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_Mem ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU - ( ( ( CRS + FirstVNF_RAM_Server ) + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUR * ( CS / RMSe ) ) / Max( MUC,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - DDR ) * ( PN - RRS ) )", "choosing": "( ( ( MLU / RRSe ) - ( RCSe - MUM ) ) + ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - ( ( ARS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( ( ( Max( BR,MRS ) * ( FirstVNF_CPU_Server - MRS ) ) * ( ( ( BR * Const ) * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RMSe / ( MUM + MUR ) ) + MUM ) * ( ( ( Max( Max( MUR,RCSe ),RMSe ) / ( MUM / MUM ) ) / ( MLU - RRSe ) ) * ( ( MUR * ( MUC * CS ) ) - ( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Max( ( Const + DDR ),( AMS + ( ( RRS - FirstVNF_CPU ) * ( PN - RRS ) ) ) ) / AMS ) ) ) )", "choosing": "( ( RCSe - ( ( MUR + MUC ) + ( MUR + CS ) ) ) / Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( AMS + ACS ) )", "choosing": "( ( RCSe - MUR ) / Min( Min( ( MUM / ( ( ( MUM * ( RRSe + MUC ) ) / CS ) + RMSe ) ) ,( Max( Min( MUM ,Max( ( DS + MUR ),( RCSe / RRSe ) ) ),( ( ( RCSe / MUC ) + ( MLU - RRSe ) ) * RMSe ) ) - ( Min( Min( MLU ,( MUC + RCSe ) ) ,( MLU + Max( RRSe,RCSe ) ) ) / ( CS + ( RMSe * ( MUM * DS ) ) ) ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Min( AMS ,AMS ) ) * ( PN - RRS ) ) + ( Max( Min( BR ,ACS ),Max( BR,PN ) ) * Max( ( Const - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "Max( ( Max( Min( RMSe ,MUC ),( RRSe / RMSe ) ) / Min( Max( MUR,MUC ) ,( MUM * ( ( MUR + MUC ) + ( MUM * MUR ) ) ) ) ),Min( ( ( RCSe - RMSe ) + ( RMSe * MLU ) ) ,( ( CS / MUC ) / ( MLU - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * PN ) + ( RRS * FirstVNF_CPU_Server ) ) - DDR ) - Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ) )", "choosing": "( ( Max( ( MUR + RCSe ),( CS - MUR ) ) * Max( ( CS / ( ( DS * MUM ) / Max( DS,RRSe ) ) ),( DS / MUM ) ) ) / ( ( ( MUM * MUR ) / ( CS + RCSe ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR / ( ( FirstVNF_Mem_Server - AMS ) - AMS ) )", "choosing": "( Max( RCSe,DS ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( AMS ,AMS ) ) * ( PN + ARS ) )", "choosing": "( RCSe + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( ( ( RRS - Min( AMS ,AMS ) ) * ( PN - RRS ) ) ,Max( ( RRS - DDR ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( MUM + MUM ) + ( MLU + DS ) ),( MUR + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,ACS ) - AMS ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / ( FirstVNF_Mem / PN ) ) ) ) ,Min( MRS ,FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Min( MUM ,( RRSe + DS ) ),RMSe ),Min( RCSe ,( MUM - ( RCSe * ( ( Min( RCSe ,MUM ) / ( ( DS + RCSe ) + ( DS - RRSe ) ) ) * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,Max( MDR,BR ) ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),FirstVNF_CPU ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( MLU * ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( MLU * Min( RRSe ,DS ) ) + MUC ) ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),FirstVNF_CPU ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( MLU * Min( RRSe ,DS ) ) + MUC ) ) ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( MLU * Min( RRSe ,DS ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,ACS ) - AMS ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / ( FirstVNF_Mem / PN ) ) ) ) ,Min( MRS ,FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Min( MUM ,( RRSe + DS ) ),RMSe ),Min( RCSe ,( MUM - ( RCSe * ( ( Min( RCSe ,MUM ) / ( ( DS + RCSe ) + ( DS - RRSe ) ) ) * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MDR ) ) ) / AMS ) ) )", "choosing": "Min( Max( ( ( ( DS * MUC ) * Min( MUR ,MUR ) ) + Max( ( MUC + CS ),( CS - RMSe ) ) ),( ( ( RCSe - RCSe ) * Max( CS,RCSe ) ) - Min( Max( MUC,RRSe ) ,( DS + RRSe ) ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,MDR ) - ( ARS / PN ) ) - ( MDR * ( Const / ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( MLU / DS ) + Min( RMSe ,( MLU - ( ( MLU * MUC ) * MUM ) ) ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - ( Min( RRSe ,CS ) + Min( RMSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( Max( RRS,FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( MLU + MLU ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( BR * ( FirstVNF_Mem * PN ) ) + Max( Min( BR ,ACS ),Max( BR,PN ) ) ) )", "choosing": "Min( Min( RRSe ,MUC ) ,( ( ( MLU / ( ( DS + RCSe ) + ( RCSe * CS ) ) ) * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) ,BR ) * FirstVNF_Mem_Server )", "choosing": "( Min( MLU ,MUM ) - ( MUC / ( DS * Min( MUR ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( ( Const + PN ) - RRS ) )", "choosing": "( ( MUR + MUC ) + ( Max( Min( MUM ,Max( CS,MLU ) ),( ( ( MUR * ( RCSe - RMSe ) ) - RMSe ) * Max( DS,DS ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / ( ( ( Max( Min( MDR ,MDR ),CRS ) - MRS ) / MDR ) - RRS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_Mem_Server + ( ARS + ACS ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( DS - ( MUM * DS ) ) + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( MUM / ( RMSe + ( DS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU - ( ( ( CRS + FirstVNF_RAM_Server ) + ( ( MRS / FirstVNF_CPU ) + ( FirstVNF_CPU_Server - CRS ) ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUR * ( CS / RMSe ) ) / ( Min( MUR ,RMSe ) * ( Max( RMSe,( ( ( MLU + MLU ) * MLU ) / ( CS - MUM ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( ( Min( CRS ,ACS ) - AMS ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / ( FirstVNF_Mem / PN ) ) ) ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( DS / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ),FirstVNF_CPU ) ) - ( BR / PN ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( Max( Min( RRSe ,MUC ),DS ),RRSe ) + RMSe ) + ( ( ( MLU + MUC ) * Min( RRSe ,DS ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( Max( Min( ( ( ACS - RRS ) + ( RRS - FirstVNF_CPU_Server ) ) ,Max( ( PN / FirstVNF_CPU ),( BR * MRS ) ) ),MRS ) - RRS ) )", "choosing": "( ( MUR + MUC ) + ( Min( DS ,MUR ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - ( PN * ( Const * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MLU + MLU ) * ( Min( RRSe ,CS ) - ( DS + DS ) ) ) * Min( Max( RRSe,DS ) ,( MUC * RRSe ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Max( Min( Min( FirstVNF_RAM_Server ,AMS ) ,( CRS - FirstVNF_RAM_Server ) ),( Min( ACS ,ACS ) - Min( ACS ,Const ) ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ( AMS / PN ) ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM / ( MUC + MUC ) ) / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - ( ( ARS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( ( ( Max( BR,MRS ) * ( FirstVNF_CPU_Server - MRS ) ) * ( MDR * ( Const / ( MDR + FirstVNF_Mem ) ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) * Min( RMSe ,( MLU - ( ( MLU * MUC ) * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) + ( FirstVNF_RAM - Max( ( FirstVNF_CPU_Server / CRS ),( AMS / DDR ) ) ) )", "choosing": "( ( MUM + RCSe ) - Max( CS,Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / PN ) ,Max( Const,ARS ) )", "choosing": "( ( MLU / DS ) * ( MUC * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.7690431770830667}, {"determining": "( ( MDR - Min( PN ,Min( Max( PN,BR ) ,FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / MUM ) ) / RCSe ) * RMSe ) ) / ( MUM / ( Min( MLU ,DS ) * RMSe ) ) )", "obj1": 0.7300380228136882, "obj2": 0.10626548820054091}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( ( ( ( Min( Min( MDR ,PN ) ,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),FirstVNF_CPU ) ) - FirstVNF_CPU ) - MDR ) + ( RRS - FirstVNF_Mem ) ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUC,CS ),CS )", "obj1": 0.9239543726235742, "obj2": 0.033402160363793294}, {"determining": "Min( ( RRS / FirstVNF_CPU_Server ) ,( ( ACS - Const ) + ARS ) )", "choosing": "( DS / ( ( Min( Max( CS,DS ) ,CS ) - MUM ) + MUC ) )", "obj1": 0.5342205323193916, "obj2": 0.3500040069160252}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) ) / ( Max( MLU,Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / ( MLU * MLU ) ) ) ) )", "obj1": 0.5722433460076045, "obj2": 0.33046034501938}, {"determining": "( ( CRS / ( PN + FirstVNF_RAM_Server ) ) + ( Max( Max( PN,Max( Max( ( BR - ( RRS + BR ) ),Min( FirstVNF_RAM_Server ,CRS ) ),FirstVNF_CPU ) ),FirstVNF_Mem_Server ) - CRS ) )", "choosing": "( ( MUC - ( RMSe * ( MUC + RRSe ) ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( ( ( MLU + MUC ) * ( CS + MLU ) ) + MUC ) / ( MLU - CS ) ) ) ) )", "obj1": 0.1596958174904943, "obj2": 0.6240174924229109}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( BR * PN ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( MLU + CS ) + ( Max( MUC,( RRSe * ( RMSe + RMSe ) ) ) * ( RMSe - ( RRSe * MUM ) ) ) ) * RMSe ) ) / ( MUM / ( ( RCSe * MLU ) * RMSe ) ) )", "obj1": 0.7832699619771863, "obj2": 0.06738761036535353}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( PN - ACS ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / MUM ) ) / RCSe ) * RMSe ) ) / RMSe )", "obj1": 0.8384030418250951, "obj2": 0.05407519338300281}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( PN * ( AMS / PN ) ) ) + FirstVNF_CPU_Server )", "choosing": "( DS / Max( ( MUM / MUM ),RRSe ) )", "obj1": 0.7262357414448669, "obj2": 0.20439735938950737}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( BR * ( FirstVNF_Mem * PN ) ) + ( ( ACS - AMS ) / CRS ) ) )", "choosing": "Min( Min( RRSe ,MUC ) ,( ( ( MLU / ( ( ( MUR - ( DS * MUR ) ) + ( RMSe * ( MUM * DS ) ) ) + ( RCSe * CS ) ) ) * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 0.6634980988593155, "obj2": 0.20490460656947962}, {"determining": "Min( ( RRS / FirstVNF_CPU_Server ) ,( ( ACS - Const ) + ARS ) )", "choosing": "( DS / ( ( Min( Max( CS,DS ) ,CS ) - MUM ) + MUC ) )", "obj1": 0.5798479087452472, "obj2": 0.27271806916962377}, {"determining": "Max( Max( FirstVNF_Mem,MRS ),( ARS + Min( FirstVNF_CPU_Server ,( MDR - Max( ( PN / PN ),BR ) ) ) ) )", "choosing": "Max( ( ( MUM / ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( ( MLU + MUC ) * Min( ( MUM * MUC ) ,DS ) ) + MUC ) ) ) / CS ),Min( DS ,MUR ) )", "obj1": 0.19391634980988592, "obj2": 0.5782378367795017}, {"determining": "Min( Max( Min( ACS ,MDR ),ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( MLU ,Max( RRSe,( RMSe * MUC ) ) ) / RCSe ),MUR ) - MUM ) ,( DS - CS ) )", "obj1": 0.40304182509505704, "obj2": 0.40029709077810216}, {"determining": "( ( FirstVNF_RAM_Server * Const ) + ( Min( AMS ,FirstVNF_Mem ) / ( RRS - ( FirstVNF_Mem_Server / Max( Const,BR ) ) ) ) )", "choosing": "( MLU + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,( ( CS - Min( MUR ,RMSe ) ) + ( Min( CS ,RMSe ) + MUM ) ) ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.10076045627376426, "obj2": 0.6470712482541644}, {"determining": "( ( RRS + ACS ) + Max( ( Min( FirstVNF_Mem ,Const ) - ( Max( BR,PN ) * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( RMSe * MUC ) + Min( ( MUR * MLU ) ,( ( MUR - CS ) - Max( MUM,Min( MUM ,DS ) ) ) ) )", "obj1": 0.08745247148288973, "obj2": 0.7074260081658186}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * Min( ( ( FirstVNF_RAM_Server * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Min( MUM ,DS ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( Max( RMSe,RRSe ) + RMSe ) ) )", "obj1": 0.37072243346007605, "obj2": 0.43685494688940035}, {"determining": "( ( ( BR / Const ) / Min( Max( PN,BR ) ,FirstVNF_CPU_Server ) ) - ( ( ( MDR / Const ) * FirstVNF_RAM_Server ) + FirstVNF_CPU ) )", "choosing": "Max( ( DS * Min( MUR ,RMSe ) ),( ( MLU + MLU ) * Min( RMSe ,Min( ( Max( ( CS * RMSe ),DS ) + ( RRSe / MUC ) ) ,RCSe ) ) ) )", "obj1": 0.9695817490494296, "obj2": 0.02016400525625087}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / RRSe ) ) )", "obj1": 0.06653992395437262, "obj2": 0.7557772920799813}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( Const - Max( DDR,AMS ) ) + ( FirstVNF_RAM * PN ) ) ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( Min( RMSe ,( RCSe / MUR ) ) / MUC ) + Max( MLU,Max( Max( MUM,DS ),DS ) ) )", "obj1": 0.6596958174904943, "obj2": 0.24795919283556372}, {"determining": "Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUM ) ,( DS - CS ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( FirstVNF_RAM_Server * ( FirstVNF_CPU_Server + ( ( BR + DDR ) / MRS ) ) ) ),Max( AMS,DDR ) ) )", "choosing": "( ( ( ( Max( ( RCSe / ( MUC + Min( MLU ,DS ) ) ),MUC ) - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( Min( ( Max( MUM,RMSe ) / MUR ) ,MUC ) - Max( MUM,( RRSe + MLU ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "Max( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ),( ACS - ( ( ( ( ( FirstVNF_CPU_Server - Min( MDR ,RRS ) ) + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + MRS ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( MUM - Max( MLU,( CS + ( RCSe / MLU ) ) ) ) + Min( DS ,RRSe ) ) ) / ( Max( Min( MUC ,MUC ),Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.34790874524714827, "obj2": 0.45299003806480864}, {"determining": "Max( Max( Min( ( ( ACS - RRS ) + ( RRS - FirstVNF_CPU_Server ) ) ,Max( ( PN / FirstVNF_CPU ),( BR * MRS ) ) ),MRS ),( ( ( PN - MRS ) / MDR ) - RRS ) )", "choosing": "Max( ( DS - MUC ),Min( DS ,( Min( MLU ,Max( RRSe,( RMSe * MUC ) ) ) / RCSe ) ) )", "obj1": 0.7224334600760456, "obj2": 0.20443797887064313}, {"determining": "Min( Max( ACS,RRS ) ,( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - ( ( MUM - MLU ) + ( MUR * DS ) ) ) ,Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.26996197718631176, "obj2": 0.5089354942162818}, {"determining": "Max( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( ( FirstVNF_RAM_Server * MDR ) / FirstVNF_Mem ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( RMSe * DS ) )", "obj1": 0.22433460076045628, "obj2": 0.5438874048737382}, {"determining": "Max( ( Const + DDR ),MDR )", "choosing": "( ( MLU / RRSe ) - ( ( MUR + MUC ) + ( MUR + CS ) ) )", "obj1": 0.21482889733840305, "obj2": 0.5667671027347224}, {"determining": "( ( FirstVNF_CPU + MRS ) + ( Max( AMS,FirstVNF_Mem_Server ) - CRS ) )", "choosing": "( ( MUC - ( RMSe * ( MUC + RRSe ) ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( ( Min( ( CS - MLU ) ,MUM ) * RRSe ),RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.12167300380228137, "obj2": 0.6332661330324676}, {"determining": "Max( ( RRS - MRS ),( ( DDR - FirstVNF_RAM ) * ( MRS - MDR ) ) )", "choosing": "( ( Max( Max( ( MUC + CS ),( CS - ( RRSe - RCSe ) ) ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.33079847908745247, "obj2": 0.4564361108096557}, {"determining": "( Max( Max( ( FirstVNF_RAM - ( FirstVNF_RAM_Server - PN ) ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + PN ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( ( DS - CS ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ) )", "obj1": 0.6064638783269962, "obj2": 0.26647883016902746}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) * Max( ( Max( PN,MDR ) + ( ( FirstVNF_RAM_Server - ACS ) - Max( ( ( FirstVNF_RAM_Server * ( AMS / PN ) ) + ( DDR + FirstVNF_CPU ) ),MDR ) ) ),DDR ) )", "choosing": "( ( MUM / RMSe ) - Max( ( ( RMSe / ( ( RRSe - ( MUR - Max( DS,MLU ) ) ) - ( MUM / ( MUC + MUC ) ) ) ) * DS ),CS ) )", "obj1": 0.27756653992395436, "obj2": 0.48890275438646913}, {"determining": "Min( ( ( AMS / ( AMS + FirstVNF_CPU ) ) * Const ) ,( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - MUM ) ,Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( Min( ( RRSe / RCSe ) ,Max( RCSe,MUR ) ) - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.2965779467680608, "obj2": 0.4872529097224908}, {"determining": "Max( ( DDR * Const ),( ARS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( MUM / ( Min( CS ,( RCSe - RRSe ) ) + MUC ) ) / CS ),Min( DS ,MUR ) )", "obj1": 0.2414448669201521, "obj2": 0.5404951938114894}, {"determining": "( ( ( ( BR - FirstVNF_CPU ) - MDR ) + ( RRS - FirstVNF_Mem ) ) + Max( FirstVNF_RAM_Server,( RRS / Const ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( MLU / Min( Min( MUR ,RRSe ) ,RCSe ) ) ) ) )", "obj1": 0.9752851711026616, "obj2": 0.0067323311128197815}, {"determining": "( Max( ( ( ( ( BR - FirstVNF_CPU ) - MDR ) + ( RRS - FirstVNF_Mem ) ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + PN ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( ( DS - CS ) * Max( Max( Min( CS ,RCSe ),( MUC + ( MLU / Min( DS ,RCSe ) ) ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.25825358452153074}, {"determining": "( ( FirstVNF_Mem - ( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,FirstVNF_RAM ),( DDR / ACS ) ) ) ) ) * Max( ( Const - ( Const / ( Const * ( FirstVNF_RAM_Server / AMS ) ) ) ),Min( FirstVNF_Mem_Server ,Max( Const,Max( Min( RRS ,AMS ),BR ) ) ) ) )", "choosing": "( Max( RRSe,RRSe ) - ( MUM * ( Min( MLU ,DS ) + MUR ) ) )", "obj1": 0.32129277566539927, "obj2": 0.47604417571363883}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( Max( Min( ( ( ACS - RRS ) + ( RRS - FirstVNF_CPU_Server ) ) ,Max( ( PN / FirstVNF_CPU ),( BR * MRS ) ) ),MRS ) - RRS ) ) + FirstVNF_CPU_Server )", "choosing": "( DS / Max( ( ( Min( DS ,MUR ) + CS ) / MUM ),RRSe ) )", "obj1": 0.6368821292775665, "obj2": 0.2539806817253337}, {"determining": "Max( ( RRS - MRS ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5258712481710074}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + PN ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( ( DS - CS ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.25665399239543724, "obj2": 0.5204253129228913}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / Min( DS ,RCSe ) ) ) / RCSe ) * RMSe ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 0.8079847908745247, "obj2": 0.060787535366317036}, {"determining": "( ( FirstVNF_Mem - ( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( ( RRS / ACS ) - PN ) ) - Max( Max( DDR,FirstVNF_RAM ),( DDR / ACS ) ) ) ) ) * Max( ( Const - ( Const / ( Const * ( FirstVNF_RAM_Server / AMS ) ) ) ),Min( FirstVNF_Mem_Server ,Max( Const,Max( Min( RRS ,AMS ),BR ) ) ) ) )", "choosing": "( Max( RRSe,RRSe ) - ( MUM * ( Min( MLU ,( MUR * ( CS - MUC ) ) ) + MUR ) ) )", "obj1": 0.3155893536121673, "obj2": 0.4792355597995007}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( BR * PN ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( MLU + CS ) + ( Max( MUC,( RRSe * ( RMSe + RMSe ) ) ) * ( RMSe - ( RRSe * MUM ) ) ) ) * RMSe ) ) / ( MUM / ( ( RCSe * MLU ) * RMSe ) ) )", "obj1": 0.8231939163498099, "obj2": 0.057966493392943415}, {"determining": "( ( ( ( Max( ( ( DDR - FirstVNF_RAM ) * ( MRS - MDR ) ),CRS ) - MRS ) / MDR ) - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Max( ( Min( MLU ,Max( RRSe,( RMSe * Max( MUC,RRSe ) ) ) ) / RCSe ),MUR ) / ( MUM / ( RMSe + ( DS / RCSe ) ) ) )", "obj1": 0.6482889733840305, "obj2": 0.2517969312636984}, {"determining": "( ( BR - RRS ) - Min( ( CRS - MRS ) ,MDR ) )", "choosing": "( Max( ( Min( MLU ,Max( RRSe,( RMSe * Max( MUC,MUM ) ) ) ) / RCSe ),MUR ) / ( MUM / ( RMSe + ( DS / ( Min( CS ,( DS - RRSe ) ) * MUM ) ) ) ) )", "obj1": 0.9961977186311787, "obj2": 0.0022568056857714346}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( MDR + FirstVNF_Mem ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Max( Min( ( ( MUR * RCSe ) / MLU ) ,( MLU / RCSe ) ),Min( RCSe ,( MUM - ( RCSe * CS ) ) ) ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( MLU * MUC ) ) ) )", "obj1": 0.19771863117870722, "obj2": 0.5692976843818349}, {"determining": "Min( Max( Min( ACS ,MDR ),MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( MLU ,Max( RRSe,( RMSe * Min( DS ,MUR ) ) ) ) / RCSe ),MUR ) - MUM ) ,( DS - CS ) )", "obj1": 0.3973384030418251, "obj2": 0.40559318125039184}, {"determining": "( ( CRS / ( PN + FirstVNF_RAM_Server ) ) + Max( ACS,( ( ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) / CRS ) + ACS ) ) )", "choosing": "( ( MUC - ( RMSe * ( MUC + RRSe ) ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( RRSe * ( ( ( Min( CS ,MLU ) / ( CS / RMSe ) ) - DS ) + CS ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.10646387832699619, "obj2": 0.6402572688603827}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( BR + Min( ACS ,( Const + PN ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + MLU ) / MUM ) ) / RCSe ) * RMSe ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 0.8136882129277566, "obj2": 0.0599134642882761}, {"determining": "( ( FirstVNF_CPU + MRS ) + ( Max( AMS,FirstVNF_Mem_Server ) - CRS ) )", "choosing": "( ( MUC - ( RMSe * ( MUC + RRSe ) ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( ( Min( ( CS - MLU ) ,MUM ) * RRSe ),RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.11216730038022814, "obj2": 0.6386179446050175}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "( Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),FirstVNF_CPU ) + Max( ( AMS - ( FirstVNF_RAM_Server * CRS ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,Min( RRSe ,( MUR / RRSe ) ) ) ) ) )", "obj1": 0.08365019011406843, "obj2": 0.7093739022287103}, {"determining": "( ( RRS + ACS ) + Max( ( AMS - ( ( Min( ARS ,RRS ) + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( ( CS / MLU ) ,( ( MUR - CS ) - Max( MUM,Min( RRSe ,( MUC - MUR ) ) ) ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7125038037144046}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( RRS - DDR ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Max( Min( ( ( MUR * RCSe ) / MLU ) ,( MLU / RCSe ) ),Min( RCSe ,( MUM - ( RCSe * CS ) ) ) ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.19771863117870722, "obj2": 0.5692976843818349}, {"determining": "( ( Const * Const ) / ( ( ( ACS - FirstVNF_RAM ) - RRS ) - PN ) )", "choosing": "( ( MUM - MLU ) + ( MUR * Max( RRSe,( ( MUC * RMSe ) - Max( MUM,( MUR * MLU ) ) ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( ( RRS + ACS ) + Max( ( AMS - ( ( Min( ARS ,RRS ) + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( ( CS / MLU ) ,( ( MUR - CS ) - Max( MUM,Min( RRSe ,( MUC - MUR ) ) ) ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7125038037144046}, {"determining": "( ( Min( BR ,DDR ) - FirstVNF_CPU ) * ( PN - RRS ) )", "choosing": "( ( MUR + MUC ) + ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( Min( MDR ,MDR ),CRS ) - MRS ) / MDR ) - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Max( ( Min( MLU ,Max( RRSe,( RMSe * MUC ) ) ) / RCSe ),MUR ) / ( MUM / ( RMSe + ( DS / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_Mem ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU - ( ( ( CRS + FirstVNF_RAM_Server ) + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUR * ( CS / RMSe ) ) / Max( MUC,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Max( ( BR + Min( ACS ,( Const + PN ) ) ),MDR ) ) + ACS ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( ( MUR * ( RCSe - RMSe ) ) - RMSe ) * Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( BR * ( AMS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( MUM - ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,MDR ) - ( ARS / PN ) ) - ( MDR * ( Const / ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( MLU / DS ) + Min( RMSe ,( MLU - ( ( MLU * MUC ) * MUM ) ) ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - ( Min( RRSe ,CS ) + Min( RMSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),Min( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( ( ( RRSe - DS ) / Min( ( Min( CS ,MUC ) * MUM ) ,( RRSe / RRSe ) ) ) - MUM ) - ( Max( ( ( ( RCSe + MUC ) / RMSe ) * ( RRSe * RRSe ) ),MUM ) - ( Min( ( RMSe + MUC ) ,MUR ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( FirstVNF_Mem - FirstVNF_RAM ) - FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( CS ,CS ),Min( RCSe ,Min( Min( MLU ,RCSe ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / Min( DS ,RCSe ) ) ) / RCSe ) * RMSe ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( Max( RRS,FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( MLU + MLU ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + FirstVNF_CPU ),BR ) + BR ) - Max( CRS,FirstVNF_CPU ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + Min( ( CS * MUR ) ,MUC ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - ( ( RCSe - MUR ) / Min( ( MLU * DS ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( AMS + ACS ) )", "choosing": "( ( RCSe - MUR ) / Min( Min( ( MUM / ( ( ( MUM * ( RRSe + MUC ) ) / CS ) + RMSe ) ) ,( Max( Min( MUM ,Max( ( DS + MUR ),( RCSe / RRSe ) ) ),( ( ( RCSe / MUC ) + ( MLU - RRSe ) ) * RMSe ) ) - ( Min( Min( MLU ,( MUC + RCSe ) ) ,( MLU + Max( RRSe,RCSe ) ) ) / ( CS + ( RMSe * ( MUM * DS ) ) ) ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - ( ( ARS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),( ( ( MRS - ( ( ( FirstVNF_RAM_Server / CRS ) / ( PN - FirstVNF_Mem ) ) + ( CRS + ARS ) ) ) / ACS ) / ( MDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) * ( ( MUR / ( MLU - RRSe ) ) * ( ( MUR * ( MUC * CS ) ) - ( ( Max( ( ( MLU + CS ) - DS ),RRSe ) * Max( RCSe,MUR ) ) / ( RMSe + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( AMS ,AMS ) ) * ( PN - RRS ) )", "choosing": "( ( MUR + MUC ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),Min( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( ( ( RRSe - DS ) / Min( ( Min( CS ,MUC ) * MUM ) ,( RRSe / RRSe ) ) ) - MUM ) - ( Max( ( ( ( RCSe + MUC ) / RMSe ) * ( RRSe * RRSe ) ),MUM ) - ( Min( ( RMSe + MUC ) ,MUR ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - AMS ) - Min( PN ,ARS ) )", "choosing": "( Min( ( MLU * Min( MUR ,( MUR * ( CS - MUC ) ) ) ) ,RRSe ) / ( ( RRSe / ( MUM / ( RCSe / ( DS / Max( CS,Max( RCSe,RCSe ) ) ) ) ) ) / ( CS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / Max( PN,ARS ) ) * Min( Min( ( FirstVNF_Mem_Server / PN ) ,Min( DDR ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( ( Max( MLU,Max( ( ( DS * MLU ) * CS ),( RRSe - Min( Max( MUR,RCSe ) ,( MUM / MUR ) ) ) ) ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ( AMS / PN ) ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( Min( Const ,MRS ) ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,AMS ),FirstVNF_CPU ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( Min( MUM ,CS ) * Min( RRSe ,DS ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( Min( BR ,ACS ),( Const - CRS ) ) ) )", "choosing": "Min( Min( RRSe ,MUC ) ,( ( DS * ( MLU / Min( Max( ( MUR * Max( RMSe,MUC ) ),( ( DS * CS ) + RRSe ) ) ,RMSe ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) ) * Max( ( ARS / Const ),( FirstVNF_Mem_Server - RRS ) ) ) + ( Max( Min( BR ,ACS ),Max( BR,PN ) ) * Max( ( Const - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "Max( ( Max( Min( RMSe ,MUC ),( RRSe / RMSe ) ) / Min( Max( MUR,MUC ) ,( MUM * MUR ) ) ),Min( ( ( RCSe - RMSe ) + ( RMSe * MLU ) ) ,( ( CS / MUC ) / ( MLU - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - ( PN * FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU + MLU ) * Max( MLU,MUR ) ) * Min( Max( RRSe,DS ) ,( MUC * RRSe ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_Mem ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU - ( ( ( CRS + FirstVNF_RAM_Server ) + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUR * ( CS / RMSe ) ) / Max( MUC,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - DDR ) * ( PN - RRS ) )", "choosing": "( ( ( MLU / RRSe ) - ( RCSe - MUM ) ) + ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - ( ( ARS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( ( ( Max( BR,MRS ) * ( FirstVNF_CPU_Server - MRS ) ) * ( ( ( BR * Const ) * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RMSe / ( MUM + MUR ) ) + MUM ) * ( ( ( Max( Max( MUR,RCSe ),RMSe ) / ( MUM / MUM ) ) / ( MLU - RRSe ) ) * ( ( MUR * ( MUC * CS ) ) - ( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Max( ( Const + DDR ),( AMS + ( ( RRS - FirstVNF_CPU ) * ( PN - RRS ) ) ) ) / AMS ) ) ) )", "choosing": "( ( RCSe - ( ( MUR + MUC ) + ( MUR + CS ) ) ) / Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( AMS + ACS ) )", "choosing": "( ( RCSe - MUR ) / Min( Min( ( MUM / ( ( ( MUM * ( RRSe + MUC ) ) / CS ) + RMSe ) ) ,( Max( Min( MUM ,Max( ( DS + MUR ),( RCSe / RRSe ) ) ),( ( ( RCSe / MUC ) + ( MLU - RRSe ) ) * RMSe ) ) - ( Min( Min( MLU ,( MUC + RCSe ) ) ,( MLU + Max( RRSe,RCSe ) ) ) / ( CS + ( RMSe * ( MUM * DS ) ) ) ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Min( AMS ,AMS ) ) * ( PN - RRS ) ) + ( Max( Min( BR ,ACS ),Max( BR,PN ) ) * Max( ( Const - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "Max( ( Max( Min( RMSe ,MUC ),( RRSe / RMSe ) ) / Min( Max( MUR,MUC ) ,( MUM * ( ( MUR + MUC ) + ( MUM * MUR ) ) ) ) ),Min( ( ( RCSe - RMSe ) + ( RMSe * MLU ) ) ,( ( CS / MUC ) / ( MLU - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * PN ) + ( RRS * FirstVNF_CPU_Server ) ) - DDR ) - Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ) )", "choosing": "( ( Max( ( MUR + RCSe ),( CS - MUR ) ) * Max( ( CS / ( ( DS * MUM ) / Max( DS,RRSe ) ) ),( DS / MUM ) ) ) / ( ( ( MUM * MUR ) / ( CS + RCSe ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR / ( ( FirstVNF_Mem_Server - AMS ) - AMS ) )", "choosing": "( Max( RCSe,DS ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( AMS ,AMS ) ) * ( PN + ARS ) )", "choosing": "( RCSe + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( ( ( RRS - Min( AMS ,AMS ) ) * ( PN - RRS ) ) ,Max( ( RRS - DDR ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( MUM + MUM ) + ( MLU + DS ) ),( MUR + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,ACS ) - AMS ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / ( FirstVNF_Mem / PN ) ) ) ) ,Min( MRS ,FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Min( MUM ,( RRSe + DS ) ),RMSe ),Min( RCSe ,( MUM - ( RCSe * ( ( Min( RCSe ,MUM ) / ( ( DS + RCSe ) + ( DS - RRSe ) ) ) * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,Max( MDR,BR ) ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),FirstVNF_CPU ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( MLU * ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( MLU * Min( RRSe ,DS ) ) + MUC ) ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),FirstVNF_CPU ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( MLU * Min( RRSe ,DS ) ) + MUC ) ) ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( MLU * Min( RRSe ,DS ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,ACS ) - AMS ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / ( FirstVNF_Mem / PN ) ) ) ) ,Min( MRS ,FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Min( MUM ,( RRSe + DS ) ),RMSe ),Min( RCSe ,( MUM - ( RCSe * ( ( Min( RCSe ,MUM ) / ( ( DS + RCSe ) + ( DS - RRSe ) ) ) * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MDR ) ) ) / AMS ) ) )", "choosing": "Min( Max( ( ( ( DS * MUC ) * Min( MUR ,MUR ) ) + Max( ( MUC + CS ),( CS - RMSe ) ) ),( ( ( RCSe - RCSe ) * Max( CS,RCSe ) ) - Min( Max( MUC,RRSe ) ,( DS + RRSe ) ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,MDR ) - ( ARS / PN ) ) - ( MDR * ( Const / ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( MLU / DS ) + Min( RMSe ,( MLU - ( ( MLU * MUC ) * MUM ) ) ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - ( Min( RRSe ,CS ) + Min( RMSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( Max( RRS,FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( MLU + MLU ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( BR * ( FirstVNF_Mem * PN ) ) + Max( Min( BR ,ACS ),Max( BR,PN ) ) ) )", "choosing": "Min( Min( RRSe ,MUC ) ,( ( ( MLU / ( ( DS + RCSe ) + ( RCSe * CS ) ) ) * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) ,BR ) * FirstVNF_Mem_Server )", "choosing": "( Min( MLU ,MUM ) - ( MUC / ( DS * Min( MUR ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( ( Const + PN ) - RRS ) )", "choosing": "( ( MUR + MUC ) + ( Max( Min( MUM ,Max( CS,MLU ) ),( ( ( MUR * ( RCSe - RMSe ) ) - RMSe ) * Max( DS,DS ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Min( ARS ,DDR ) + ( Min( CRS ,FirstVNF_RAM ) / CRS ) )", "choosing": "( ( RRSe - MUM ) - Max( CS,Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - ( ( ARS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( ( ( Max( BR,MRS ) * ( FirstVNF_CPU_Server - MRS ) ) * ( MDR * ( Const / ( MDR + FirstVNF_Mem ) ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) * Min( RMSe ,( MLU - ( ( MLU * MUC ) * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / PN ) ,Max( Const,ARS ) )", "choosing": "( ( MLU / DS ) * ( MUC * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.7690431770830667}, {"determining": "( ( MDR - Min( PN ,Min( Max( PN,BR ) ,FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / MUM ) ) / RCSe ) * RMSe ) ) / ( MUM / ( Min( MLU ,DS ) * RMSe ) ) )", "obj1": 0.7300380228136882, "obj2": 0.10626548820054091}, {"determining": "Min( ( RRS / FirstVNF_CPU_Server ) ,( ( ACS - ( ( Max( BR,MRS ) * ( FirstVNF_CPU_Server - MRS ) ) * ( MDR * ( Const / ( MDR + Min( DDR ,PN ) ) ) ) ) ) + ARS ) )", "choosing": "( DS / ( ( Min( Max( CS,DS ) ,MUR ) - Min( ( RCSe * RRSe ) ,MUR ) ) + MUC ) )", "obj1": 0.5228136882129277, "obj2": 0.32982925667421076}, {"determining": "Min( ( RRS / FirstVNF_CPU_Server ) ,( ( ACS - Const ) + ARS ) )", "choosing": "( DS / ( ( Min( Max( CS,DS ) ,CS ) - MUM ) + MUC ) )", "obj1": 0.5798479087452472, "obj2": 0.27271806916962377}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( BR * ( FirstVNF_Mem * PN ) ) + ( ( ACS - AMS ) / CRS ) ) )", "choosing": "Min( Min( RRSe ,MUC ) ,( ( ( MLU / ( ( ( MUR - ( DS * MUR ) ) + ( RMSe * ( MUM * DS ) ) ) + ( RCSe * CS ) ) ) * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 0.6634980988593155, "obj2": 0.20490460656947962}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( PN - ACS ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / MUM ) ) / RCSe ) * RMSe ) ) / RMSe )", "obj1": 0.8384030418250951, "obj2": 0.05407519338300281}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( PN * ( AMS / PN ) ) ) + FirstVNF_CPU_Server )", "choosing": "( DS / Max( ( MUM / MUM ),RRSe ) )", "obj1": 0.7262357414448669, "obj2": 0.20439735938950737}, {"determining": "( ( CRS / ( PN + FirstVNF_RAM_Server ) ) + ( Max( Max( PN,Max( Max( ( BR - ( RRS + BR ) ),Min( FirstVNF_RAM_Server ,CRS ) ),FirstVNF_CPU ) ),FirstVNF_Mem_Server ) - CRS ) )", "choosing": "( ( MUC - ( RMSe * ( MUC + RRSe ) ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( ( ( MLU + MUC ) * ( CS + MLU ) ) + MUC ) / ( MLU - CS ) ) ) ) )", "obj1": 0.1596958174904943, "obj2": 0.6240174924229109}, {"determining": "( ( FirstVNF_RAM_Server * Const ) + ( Min( AMS ,FirstVNF_Mem ) / ( Max( ( MRS * FirstVNF_CPU ),Max( FirstVNF_CPU_Server,ACS ) ) - ( FirstVNF_Mem_Server / Max( Const,BR ) ) ) ) )", "choosing": "( MLU + ( DS / MUR ) )", "obj1": 0.48859315589353614, "obj2": 0.3533180904686711}, {"determining": "( ( Max( FirstVNF_CPU_Server,( Const - MRS ) ) + ( ( BR * PN ) - ( ACS / AMS ) ) ) - ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( ( DDR - Const ) / CRS ) ) )", "choosing": "Min( Min( RRSe ,MUC ) ,( ( ( MLU / ( ( DS + ( RMSe * ( MUM * DS ) ) ) + ( MUC / ( Min( RCSe ,RCSe ) * Min( MUR ,RMSe ) ) ) ) ) * Min( ( ( DS - MUR ) * ( MLU / MLU ) ) ,RMSe ) ) - DS ) )", "obj1": 0.6311787072243346, "obj2": 0.24368899412195763}, {"determining": "Min( Max( Min( ACS ,MDR ),ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( MLU ,Max( RRSe,( RMSe * MUC ) ) ) / RCSe ),MUR ) - MUM ) ,( DS - CS ) )", "obj1": 0.40304182509505704, "obj2": 0.40029709077810216}, {"determining": "( ( ( ( Min( Min( MDR ,PN ) ,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),FirstVNF_CPU ) ) - FirstVNF_CPU ) - MDR ) + ( RRS - FirstVNF_Mem ) ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUC,CS ),CS )", "obj1": 0.9239543726235742, "obj2": 0.033402160363793294}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( ( Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - ( ( ARS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / MUM ) ) / RCSe ) * RMSe ) ) / ( MUM / ( ( MUR / ( MLU - RRSe ) ) * ( ( MUR * ( MUC * CS ) ) - ( MUR + DS ) ) ) ) )", "obj1": 0.7813688212927756, "obj2": 0.07425482030242812}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( ( ( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) + CS ) + ( ( ( ( RRSe - DS ) / Min( MUC ,( RRSe / RRSe ) ) ) - MUM ) - ( Max( ( ( ( RCSe + MUC ) / RMSe ) * ( RRSe * RRSe ) ),MUM ) - ( Min( ( RMSe + MUC ) ,MUR ) - RRSe ) ) ) )", "obj1": 0.09505703422053231, "obj2": 0.65018463771144}, {"determining": "( ( ( BR / Const ) / Min( Max( PN,BR ) ,FirstVNF_CPU_Server ) ) - ( ( ( MDR / Const ) * FirstVNF_RAM_Server ) + FirstVNF_CPU ) )", "choosing": "Max( ( DS * Min( MUR ,RMSe ) ),( ( MLU + MLU ) * Min( RMSe ,Min( ( Max( ( CS * RMSe ),DS ) + ( RRSe / MUC ) ) ,RCSe ) ) ) )", "obj1": 0.9695817490494296, "obj2": 0.02016400525625087}, {"determining": "( ( RRS + ACS ) + Max( ( Min( FirstVNF_Mem ,Const ) - ( Max( BR,PN ) * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( RMSe * MUC ) + Min( ( MUR * MLU ) ,( ( MUR - CS ) - Max( MUM,Min( MUM ,DS ) ) ) ) )", "obj1": 0.08745247148288973, "obj2": 0.7074260081658186}, {"determining": "( ( CRS / ( Max( ( ( ( ( BR - FirstVNF_CPU ) - MDR ) + ( RRS - FirstVNF_Mem ) ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) + FirstVNF_RAM_Server ) ) + ( Max( Max( PN,Max( Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ),FirstVNF_CPU ) ),FirstVNF_Mem_Server ) - CRS ) )", "choosing": "( ( MUC - ( RMSe * CS ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( ( ( MLU + MUC ) * Min( RRSe ,DS ) ) + MUC ) / ( MLU - CS ) ) ) ) )", "obj1": 0.18631178707224336, "obj2": 0.5919610251545415}, {"determining": "( ( ( ( Min( Min( MDR ,PN ) ,Max( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,FirstVNF_RAM ),FirstVNF_CPU ) ) - FirstVNF_CPU ) - MDR ) + ( RRS - FirstVNF_Mem ) ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUC,( RMSe * RCSe ) ),CS )", "obj1": 0.9239543726235742, "obj2": 0.033402160363793294}, {"determining": "Max( ( RRS - MRS ),( ( DDR - FirstVNF_RAM ) * ( MRS - MDR ) ) )", "choosing": "( ( Max( Max( ( MUC + CS ),( CS - ( RRSe - RCSe ) ) ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.33079847908745247, "obj2": 0.4564361108096557}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) * ( ( ( RRS - MRS ) + PN ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( ( DS - CS ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),CS ) )", "obj1": 0.34790874524714827, "obj2": 0.43996581269318186}, {"determining": "Max( Max( Min( ( ( ACS - RRS ) + ( RRS - FirstVNF_CPU_Server ) ) ,Max( ( PN / FirstVNF_CPU ),( BR * MRS ) ) ),MRS ),( ( ( PN - MRS ) / MDR ) - RRS ) )", "choosing": "Max( ( DS - MUC ),Min( DS ,( Min( MLU ,Max( RRSe,( RMSe * MUC ) ) ) / RCSe ) ) )", "obj1": 0.7224334600760456, "obj2": 0.20443797887064313}, {"determining": "Min( Max( ACS,RRS ) ,( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - ( ( MUM - MLU ) + ( MUR * DS ) ) ) ,Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.26996197718631176, "obj2": 0.5089354942162818}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( FirstVNF_RAM_Server * ( FirstVNF_CPU_Server + ( ( BR + DDR ) / MRS ) ) ) ),Max( AMS,DDR ) ) )", "choosing": "( ( ( ( Max( ( RCSe / ( MUC + Min( MLU ,DS ) ) ),MUC ) - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( Min( ( Max( MUM,RMSe ) / MUR ) ,MUC ) - Max( MUM,( RRSe + MLU ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( ( RRS - Min( AMS ,AMS ) ) * ( PN + ARS ) ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( RCSe + ( MUM * MUR ) ) ) ) )", "obj1": 0.07224334600760456, "obj2": 0.7555532253783285}, {"determining": "( ( FirstVNF_CPU + MRS ) + ( Max( AMS,FirstVNF_Mem_Server ) - CRS ) )", "choosing": "( ( MUC - ( RMSe * ( MUC + RRSe ) ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( ( Min( ( CS - MLU ) ,MUM ) * RRSe ),RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.12167300380228137, "obj2": 0.6332661330324676}, {"determining": "( Max( Max( ( FirstVNF_RAM - ( FirstVNF_RAM_Server - PN ) ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + PN ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( ( DS - CS ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ) )", "obj1": 0.6064638783269962, "obj2": 0.26647883016902746}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) * Max( ( Max( PN,MDR ) + ( ( FirstVNF_RAM_Server - ACS ) - Max( ( ( FirstVNF_RAM_Server * ( AMS / PN ) ) + ( DDR + FirstVNF_CPU ) ),MDR ) ) ),DDR ) )", "choosing": "( ( MUM / RMSe ) - Max( ( ( RMSe / ( ( RRSe - ( MUR - Max( DS,MLU ) ) ) - ( MUM / ( MUC + MUC ) ) ) ) * DS ),CS ) )", "obj1": 0.27756653992395436, "obj2": 0.48890275438646913}, {"determining": "( Max( ( ( ( ( BR - FirstVNF_CPU ) - MDR ) + ( RRS - FirstVNF_Mem ) ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + PN ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( ( DS - CS ) * Max( Max( Min( CS ,RCSe ),( MUC + ( MLU / Min( DS ,RCSe ) ) ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.25825358452153074}, {"determining": "Min( ( ( AMS / ( AMS + FirstVNF_CPU ) ) * Const ) ,( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - MUM ) ,Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( Min( ( RRSe / RCSe ) ,Max( RCSe,MUR ) ) - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.2965779467680608, "obj2": 0.4872529097224908}, {"determining": "Max( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( ( FirstVNF_RAM_Server * MDR ) / FirstVNF_Mem ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( RMSe * DS ) )", "obj1": 0.23193916349809887, "obj2": 0.5308368872602557}, {"determining": "( ( ( ( BR - FirstVNF_CPU ) - MDR ) + ( RRS - FirstVNF_Mem ) ) + Max( FirstVNF_RAM_Server,( RRS / Const ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( MLU / Min( Min( MUR ,RRSe ) ,RCSe ) ) ) ) )", "obj1": 0.9752851711026616, "obj2": 0.0067323311128197815}, {"determining": "( ( FirstVNF_Mem - ( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,FirstVNF_RAM ),( DDR / ACS ) ) ) ) ) * Max( ( Const - ( Const / ( Const * ( FirstVNF_RAM_Server / AMS ) ) ) ),Min( FirstVNF_Mem_Server ,Max( Const,Max( Min( RRS ,AMS ),BR ) ) ) ) )", "choosing": "( Max( RRSe,RRSe ) - ( MUM * ( Min( MLU ,DS ) + MUR ) ) )", "obj1": 0.32129277566539927, "obj2": 0.47604417571363883}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + PN ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( ( DS - CS ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.25665399239543724, "obj2": 0.5204253129228913}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / Min( DS ,RCSe ) ) ) / RCSe ) * RMSe ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 0.8079847908745247, "obj2": 0.060787535366317036}, {"determining": "( ( FirstVNF_Mem - ( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( ( RRS / ACS ) - PN ) ) - Max( Max( DDR,FirstVNF_RAM ),( DDR / ACS ) ) ) ) ) * Max( ( Const - ( Const / ( Const * ( FirstVNF_RAM_Server / AMS ) ) ) ),Min( FirstVNF_Mem_Server ,Max( Const,Max( Min( RRS ,AMS ),BR ) ) ) ) )", "choosing": "( Max( RRSe,RRSe ) - ( MUM * ( Min( MLU ,( MUR * ( CS - MUC ) ) ) + MUR ) ) )", "obj1": 0.3155893536121673, "obj2": 0.4792355597995007}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * Min( ( ( FirstVNF_RAM_Server * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Min( MUM ,DS ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( Max( RMSe,RRSe ) + RMSe ) ) )", "obj1": 0.37072243346007605, "obj2": 0.43685494688940035}, {"determining": "Max( ( RRS - MRS ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5258712481710074}, {"determining": "Max( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( ( FirstVNF_RAM_Server * MDR ) / FirstVNF_Mem ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( RMSe * DS ) )", "obj1": 0.22433460076045628, "obj2": 0.5438874048737382}, {"determining": "Max( ( RRS - MRS ),Min( Max( ARS,MDR ) ,ACS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RMSe - RRSe ),( Min( CS ,CS ) * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.20722433460076045, "obj2": 0.5591979309788054}, {"determining": "Min( Max( Min( ( ( BR / Const ) / Min( Max( PN,BR ) ,FirstVNF_CPU_Server ) ) ,MDR ),ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( Max( ( DS * Min( MUR ,RMSe ) ),( ( MLU + MLU ) * Min( RMSe ,Min( ( Max( ( CS * RMSe ),DS ) + ( RRSe / MUC ) ) ,RCSe ) ) ) ) ,( DS - CS ) )", "obj1": 0.37832699619771865, "obj2": 0.4245661276344157}, {"determining": "( ( MDR - Min( Min( PN ,MDR ) ,DDR ) ) * ( ( BR * PN ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( MLU / Min( Max( ( MUR * Max( RMSe,MUC ) ),( ( DS * CS ) + RRSe ) ) ,RMSe ) ) ) - ( ( ( MLU + CS ) + ( Max( MUC,( RRSe * ( RMSe + RMSe ) ) ) * ( RMSe - ( RRSe * MUM ) ) ) ) * RMSe ) ) / ( MUM / ( ( RCSe * MLU ) * RMSe ) ) )", "obj1": 0.7832699619771863, "obj2": 0.06738761036535353}, {"determining": "( ( FirstVNF_RAM_Server * Const ) + ( Min( AMS ,FirstVNF_Mem ) / ( RRS - ( FirstVNF_Mem_Server / Max( Const,BR ) ) ) ) )", "choosing": "( MLU + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,( ( CS - Min( MUR ,RMSe ) ) + ( Min( CS ,RMSe ) + MUM ) ) ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.19011406844106463, "obj2": 0.5705349367197046}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( BR * PN ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( MLU + CS ) + ( Max( MUC,( RRSe * ( RMSe + RMSe ) ) ) * ( RMSe - ( RRSe * MUM ) ) ) ) * RMSe ) ) / ( MUM / ( ( RCSe * MLU ) * RMSe ) ) )", "obj1": 0.8231939163498099, "obj2": 0.057966493392943415}, {"determining": "Max( ( Min( DDR ,CRS ) - ( ACS / AMS ) ),( ARS + Min( FirstVNF_CPU_Server ,( MDR - ARS ) ) ) )", "choosing": "Max( ( ( MUM / ( ( Max( RMSe,RRSe ) + RMSe ) + ( DS + ( RMSe * ( MUM * DS ) ) ) ) ) / CS ),Min( DS ,MUR ) )", "obj1": 0.1958174904942966, "obj2": 0.564633339872906}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,RRS ) * Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( RRS - DDR ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Max( Min( ( ( MUR * RCSe ) / MLU ) ,( MLU / RCSe ) ),Min( ( ( MLU / RRSe ) - ( RCSe - MUM ) ) ,( MUM - ( RCSe * CS ) ) ) ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.188212927756654, "obj2": 0.5855109733661086}, {"determining": "( ( BR - RRS ) - Min( ( CRS - MRS ) ,MDR ) )", "choosing": "( Max( ( Min( MLU ,Max( RRSe,( RMSe * Max( MUC,MUM ) ) ) ) / RCSe ),MUR ) / ( MUM / ( RMSe + ( DS / ( Min( CS ,( DS - RRSe ) ) * MUM ) ) ) ) )", "obj1": 0.9961977186311787, "obj2": 0.0022568056857714346}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( Max( AMS,FirstVNF_Mem_Server ) - CRS ) )", "choosing": "( ( MUC - ( RMSe * ( MUC + RRSe ) ) ) + Min( ( Max( ( RCSe - RCSe ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.10646387832699619, "obj2": 0.6383116395484673}, {"determining": "Min( Max( Min( ACS ,MDR ),MRS ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( MLU ,MUC ) / RCSe ),MUR ) - MUM ) ,( DS - CS ) )", "obj1": 0.38593155893536124, "obj2": 0.41180439713236033}, {"determining": "Min( Max( Min( ACS ,MDR ),MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( MLU ,Max( RRSe,( RMSe * Min( DS ,MUR ) ) ) ) / RCSe ),MUR ) - MUM ) ,( DS - CS ) )", "obj1": 0.3973384030418251, "obj2": 0.40559318125039184}, {"determining": "( ( CRS / ( PN + ( ( PN + MRS ) + FirstVNF_RAM ) ) ) + Max( ACS,( ( ( RRS - DDR ) * ( PN - RRS ) ) + ACS ) ) )", "choosing": "( ( MUC - ( RMSe * ( MUC + RRSe ) ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( Min( MUM ,( MUR + CS ) ),MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MUC * MUR ) ) ) ) )", "obj1": 0.09885931558935361, "obj2": 0.6422060229895762}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / RRSe ) ) )", "obj1": 0.06653992395437262, "obj2": 0.7557772920799813}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * ( ( MDR - Min( MDR ,BR ) ) - ( Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) - MDR ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Min( MUM ,DS ) ) ) ,Max( Max( ( DS / DS ),Max( ( DS / ( ( RRSe - DS ) + RRSe ) ),MUM ) ),( ( ( MUM - CS ) - ( MLU + MUC ) ) + RMSe ) ) )", "obj1": 0.376425855513308, "obj2": 0.4325651544508852}, {"determining": "Max( ( ( ( FirstVNF_RAM_Server * MDR ) / FirstVNF_Mem ) * Const ),( ARS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ),Min( DS ,MUR ) )", "obj1": 0.21673003802281368, "obj2": 0.5530561924094913}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) + Max( ACS,( ( ( DDR - Const ) / CRS ) + ACS ) ) )", "choosing": "( ( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUR ) / Max( RRSe,MUR ) ) ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( Min( MUM ,Max( ( DS + MUR ),( RCSe / RRSe ) ) ),MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.11596958174904944, "obj2": 0.6334780968850513}, {"determining": "Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUM ) ,( DS - CS ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "Max( ( ( DDR - FirstVNF_RAM ) * ( MRS - MDR ) ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.22053231939163498, "obj2": 0.552111664410425}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( BR + Min( ACS ,( Const + PN ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + MLU ) / MUM ) ) / RCSe ) * RMSe ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 0.8136882129277566, "obj2": 0.0599134642882761}, {"determining": "( Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),FirstVNF_CPU ) + Max( ( AMS - ( FirstVNF_RAM_Server * CRS ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,Min( RRSe ,( MUR / RRSe ) ) ) ) ) )", "obj1": 0.08365019011406843, "obj2": 0.7093739022287103}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( BR * PN ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( MLU + CS ) + ( Max( MUC,( RRSe * ( RMSe + RMSe ) ) ) * ( RMSe - ( RRSe * MUM ) ) ) ) * RMSe ) ) / ( MUM / ( ( RCSe * MLU ) * RMSe ) ) )", "obj1": 0.7832699619771863, "obj2": 0.06738761036535353}, {"determining": "( ( RRS + ACS ) + Max( ( AMS - ( ( Min( ARS ,RRS ) + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( ( CS / MLU ) ,( ( MUR - CS ) - Max( MUM,Min( RRSe ,( MUC - MUR ) ) ) ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7125038037144046}, {"determining": "( ( Const * Const ) / ( ( ( ACS - FirstVNF_RAM ) - RRS ) - PN ) )", "choosing": "( ( MUM - MLU ) + ( MUR * Max( RRSe,( ( MUC * RMSe ) - Max( MUM,( MUR * MLU ) ) ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( ( RRS + ACS ) + Max( ( AMS - ( ( Min( ARS ,RRS ) + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( ( CS / MLU ) ,( ( MUR - CS ) - Max( MUM,Min( RRSe ,( MUC - MUR ) ) ) ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7125038037144046}, {"determining": "( Min( ARS ,DDR ) + ( FirstVNF_RAM - Max( ( FirstVNF_CPU_Server / CRS ),( AMS / DDR ) ) ) )", "choosing": "( ( MUM + RCSe ) - Max( CS,Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,DDR ) - FirstVNF_CPU ) * ( PN - RRS ) )", "choosing": "( ( MUR + MUC ) + ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( Min( MDR ,MDR ),CRS ) - MRS ) / MDR ) - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Max( ( Min( MLU ,Max( RRSe,( RMSe * MUC ) ) ) / RCSe ),MUR ) / ( MUM / ( RMSe + ( DS / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_Mem ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU - ( ( ( CRS + FirstVNF_RAM_Server ) + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUR * ( CS / RMSe ) ) / Max( MUC,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Max( ( BR + Min( ACS ,( Const + PN ) ) ),MDR ) ) + ACS ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( ( MUR * ( RCSe - RMSe ) ) - RMSe ) * Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( BR * ( AMS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( MUM - ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,MDR ) - ( ARS / PN ) ) - ( MDR * ( Const / ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( MLU / DS ) + Min( RMSe ,( MLU - ( ( MLU * MUC ) * MUM ) ) ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - ( Min( RRSe ,CS ) + Min( RMSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),Min( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( ( ( RRSe - DS ) / Min( ( Min( CS ,MUC ) * MUM ) ,( RRSe / RRSe ) ) ) - MUM ) - ( Max( ( ( ( RCSe + MUC ) / RMSe ) * ( RRSe * RRSe ) ),MUM ) - ( Min( ( RMSe + MUC ) ,MUR ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( FirstVNF_Mem - FirstVNF_RAM ) - FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( CS ,CS ),Min( RCSe ,Min( Min( MLU ,RCSe ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / Min( DS ,RCSe ) ) ) / RCSe ) * RMSe ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( Max( RRS,FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( MLU + MLU ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + FirstVNF_CPU ),BR ) + BR ) - Max( CRS,FirstVNF_CPU ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + Min( ( CS * MUR ) ,MUC ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - ( ( RCSe - MUR ) / Min( ( MLU * DS ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( AMS + ACS ) )", "choosing": "( ( RCSe - MUR ) / Min( Min( ( MUM / ( ( ( MUM * ( RRSe + MUC ) ) / CS ) + RMSe ) ) ,( Max( Min( MUM ,Max( ( DS + MUR ),( RCSe / RRSe ) ) ),( ( ( RCSe / MUC ) + ( MLU - RRSe ) ) * RMSe ) ) - ( Min( Min( MLU ,( MUC + RCSe ) ) ,( MLU + Max( RRSe,RCSe ) ) ) / ( CS + ( RMSe * ( MUM * DS ) ) ) ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - ( ( ARS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),( ( ( MRS - ( ( ( FirstVNF_RAM_Server / CRS ) / ( PN - FirstVNF_Mem ) ) + ( CRS + ARS ) ) ) / ACS ) / ( MDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) * ( ( MUR / ( MLU - RRSe ) ) * ( ( MUR * ( MUC * CS ) ) - ( ( Max( ( ( MLU + CS ) - DS ),RRSe ) * Max( RCSe,MUR ) ) / ( RMSe + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( AMS ,AMS ) ) * ( PN - RRS ) )", "choosing": "( ( MUR + MUC ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),Min( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( ( ( RRSe - DS ) / Min( ( Min( CS ,MUC ) * MUM ) ,( RRSe / RRSe ) ) ) - MUM ) - ( Max( ( ( ( RCSe + MUC ) / RMSe ) * ( RRSe * RRSe ) ),MUM ) - ( Min( ( RMSe + MUC ) ,MUR ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - AMS ) - Min( PN ,ARS ) )", "choosing": "( Min( ( MLU * Min( MUR ,( MUR * ( CS - MUC ) ) ) ) ,RRSe ) / ( ( RRSe / ( MUM / ( RCSe / ( DS / Max( CS,Max( RCSe,RCSe ) ) ) ) ) ) / ( CS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / Max( PN,ARS ) ) * Min( Min( ( FirstVNF_Mem_Server / PN ) ,Min( DDR ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( ( Max( MLU,Max( ( ( DS * MLU ) * CS ),( RRSe - Min( Max( MUR,RCSe ) ,( MUM / MUR ) ) ) ) ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ( AMS / PN ) ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( Min( Const ,MRS ) ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,AMS ),FirstVNF_CPU ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( Min( MUM ,CS ) * Min( RRSe ,DS ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( Min( BR ,ACS ),( Const - CRS ) ) ) )", "choosing": "Min( Min( RRSe ,MUC ) ,( ( DS * ( MLU / Min( Max( ( MUR * Max( RMSe,MUC ) ),( ( DS * CS ) + RRSe ) ) ,RMSe ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) ) * Max( ( ARS / Const ),( FirstVNF_Mem_Server - RRS ) ) ) + ( Max( Min( BR ,ACS ),Max( BR,PN ) ) * Max( ( Const - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "Max( ( Max( Min( RMSe ,MUC ),( RRSe / RMSe ) ) / Min( Max( MUR,MUC ) ,( MUM * MUR ) ) ),Min( ( ( RCSe - RMSe ) + ( RMSe * MLU ) ) ,( ( CS / MUC ) / ( MLU - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - ( PN * FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU + MLU ) * Max( MLU,MUR ) ) * Min( Max( RRSe,DS ) ,( MUC * RRSe ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_Mem ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU - ( ( ( CRS + FirstVNF_RAM_Server ) + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUR * ( CS / RMSe ) ) / Max( MUC,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - DDR ) * ( PN - RRS ) )", "choosing": "( ( ( MLU / RRSe ) - ( RCSe - MUM ) ) + ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - ( ( ARS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( ( ( Max( BR,MRS ) * ( FirstVNF_CPU_Server - MRS ) ) * ( ( ( BR * Const ) * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RMSe / ( MUM + MUR ) ) + MUM ) * ( ( ( Max( Max( MUR,RCSe ),RMSe ) / ( MUM / MUM ) ) / ( MLU - RRSe ) ) * ( ( MUR * ( MUC * CS ) ) - ( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Max( ( Const + DDR ),( AMS + ( ( RRS - FirstVNF_CPU ) * ( PN - RRS ) ) ) ) / AMS ) ) ) )", "choosing": "( ( RCSe - ( ( MUR + MUC ) + ( MUR + CS ) ) ) / Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( AMS + ACS ) )", "choosing": "( ( RCSe - MUR ) / Min( Min( ( MUM / ( ( ( MUM * ( RRSe + MUC ) ) / CS ) + RMSe ) ) ,( Max( Min( MUM ,Max( ( DS + MUR ),( RCSe / RRSe ) ) ),( ( ( RCSe / MUC ) + ( MLU - RRSe ) ) * RMSe ) ) - ( Min( Min( MLU ,( MUC + RCSe ) ) ,( MLU + Max( RRSe,RCSe ) ) ) / ( CS + ( RMSe * ( MUM * DS ) ) ) ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Min( AMS ,AMS ) ) * ( PN - RRS ) ) + ( Max( Min( BR ,ACS ),Max( BR,PN ) ) * Max( ( Const - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "Max( ( Max( Min( RMSe ,MUC ),( RRSe / RMSe ) ) / Min( Max( MUR,MUC ) ,( MUM * ( ( MUR + MUC ) + ( MUM * MUR ) ) ) ) ),Min( ( ( RCSe - RMSe ) + ( RMSe * MLU ) ) ,( ( CS / MUC ) / ( MLU - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * PN ) + ( RRS * FirstVNF_CPU_Server ) ) - DDR ) - Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ) )", "choosing": "( ( Max( ( MUR + RCSe ),( CS - MUR ) ) * Max( ( CS / ( ( DS * MUM ) / Max( DS,RRSe ) ) ),( DS / MUM ) ) ) / ( ( ( MUM * MUR ) / ( CS + RCSe ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR / ( ( FirstVNF_Mem_Server - AMS ) - AMS ) )", "choosing": "( Max( RCSe,DS ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( AMS ,AMS ) ) * ( PN + ARS ) )", "choosing": "( RCSe + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( ( ( RRS - Min( AMS ,AMS ) ) * ( PN - RRS ) ) ,Max( ( RRS - DDR ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( MUM + MUM ) + ( MLU + DS ) ),( MUR + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,ACS ) - AMS ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / ( FirstVNF_Mem / PN ) ) ) ) ,Min( MRS ,FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Min( MUM ,( RRSe + DS ) ),RMSe ),Min( RCSe ,( MUM - ( RCSe * ( ( Min( RCSe ,MUM ) / ( ( DS + RCSe ) + ( DS - RRSe ) ) ) * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,Max( MDR,BR ) ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),FirstVNF_CPU ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( MLU * ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( MLU * Min( RRSe ,DS ) ) + MUC ) ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( Min( FirstVNF_CPU ,ACS ) * ( ( ( Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - ( ( ARS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / MUM ) ) / RCSe ) * RMSe ) ) / ( MUM / ( ( MUR / ( MLU - RRSe ) ) * ( ( MUR * ( MUC * CS ) ) - ( MUR + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) + ( Min( CRS ,FirstVNF_RAM ) / CRS ) )", "choosing": "( ( RRSe - MUM ) - Max( CS,Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / PN ) ,Max( Const,ARS ) )", "choosing": "( ( MLU / DS ) * ( MUC * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.7690431770830667}, {"determining": "( ( MDR - Min( PN ,Min( Max( PN,BR ) ,FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / MUM ) ) / RCSe ) * RMSe ) ) / ( MUM / ( Min( MLU ,DS ) * RMSe ) ) )", "obj1": 0.7300380228136882, "obj2": 0.10626548820054091}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "Min( ( RRS / FirstVNF_CPU_Server ) ,( ( ACS - ( ( Max( BR,MRS ) * ( FirstVNF_CPU_Server - MRS ) ) * ( MDR * ( Const / ( MDR + Min( DDR ,PN ) ) ) ) ) ) + ARS ) )", "choosing": "( DS / ( ( Min( Max( CS,DS ) ,MUR ) - Min( ( RCSe * RRSe ) ,MUR ) ) + MUC ) )", "obj1": 0.5228136882129277, "obj2": 0.32982925667421076}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( PN * ( AMS / PN ) ) ) + FirstVNF_CPU_Server )", "choosing": "( DS / Max( ( MUM / MUM ),RRSe ) )", "obj1": 0.7262357414448669, "obj2": 0.20439735938950737}, {"determining": "Max( ( RRS - MRS ),( ( DDR - ( ( ( PN - MRS ) / MDR ) - RRS ) ) * ( MRS - MDR ) ) )", "choosing": "( ( Max( Max( ( MUC + CS ),( CS - ( RRSe - RCSe ) ) ),Max( CS,MUR ) ) / Max( ( RMSe * MUC ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.5741444866920152, "obj2": 0.31361362135051285}, {"determining": "( ( FirstVNF_RAM_Server * Const ) + ( Min( AMS ,FirstVNF_Mem ) / ( Max( ( MRS * FirstVNF_CPU ),Max( FirstVNF_CPU_Server,ACS ) ) - ( FirstVNF_Mem_Server / Max( Const,BR ) ) ) ) )", "choosing": "( MLU + ( DS / MUR ) )", "obj1": 0.48859315589353614, "obj2": 0.3533180904686711}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( ( ( ( BR - FirstVNF_CPU ) - MDR ) + ( RRS - FirstVNF_Mem ) ) + Max( FirstVNF_RAM_Server,( RRS / Const ) ) ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / Min( DS ,Max( MUC,CS ) ) ) ) / RCSe ) * RMSe ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 0.8612167300380228, "obj2": 0.05334584212927136}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( BR * ( FirstVNF_Mem * PN ) ) + ( ( ACS - AMS ) / CRS ) ) )", "choosing": "Min( Min( RRSe ,MUC ) ,( ( ( MLU / ( ( ( MUR - ( DS * MUR ) ) + ( RMSe * ( MUM * DS ) ) ) + ( RCSe * CS ) ) ) * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 0.6634980988593155, "obj2": 0.20490460656947962}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * ( ( MDR - Min( MDR ,BR ) ) - ( Min( MRS ,( ( FirstVNF_Mem_Server / PN ) * MRS ) ) - MDR ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Min( MUM ,DS ) ) ) ,Max( Max( ( DS / DS ),Max( ( DS / ( ( RRSe - DS ) + RRSe ) ),MUM ) ),( ( ( MUM - CS ) - ( MLU + MUC ) ) + RMSe ) ) )", "obj1": 0.15779467680608364, "obj2": 0.5976637565770878}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( BR * PN ) - ( ACS + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( MLU + CS ) + ( RMSe * Max( MUC,MUM ) ) ) * RMSe ) ) / ( MUM / ( ( RCSe * MLU ) * RMSe ) ) )", "obj1": 0.779467680608365, "obj2": 0.07523434148336544}, {"determining": "Min( ( RRS / FirstVNF_CPU_Server ) ,( ( ACS - Const ) + ARS ) )", "choosing": "( DS / ( ( Min( Max( CS,DS ) ,CS ) - MUM ) + MUC ) )", "obj1": 0.5798479087452472, "obj2": 0.27271806916962377}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( Max( ( ( RRS - Min( AMS ,AMS ) ) * ( PN + ARS ) ),BR ) / ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( ( ( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / ( ( MUR + MLU ) * ( MUR / RRSe ) ) ) / ( MLU - CS ) ) ) + CS ) + ( ( ( ( RRSe - DS ) / Min( MUC ,( RRSe / RRSe ) ) ) - MUM ) - ( Max( ( ( ( RCSe + MUC ) / RMSe ) * ( RRSe * RRSe ) ),MUM ) - ( Min( ( RMSe + MUC ) ,MUR ) - RRSe ) ) ) )", "obj1": 0.08745247148288973, "obj2": 0.6615383367522434}, {"determining": "( ( RRS + ACS ) + Max( ( AMS - ( Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) ) * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( ( ( RRSe * MUM ) + MUR ) ,( ( MUR - CS ) - Max( MUM,Min( RRSe ,( MUC - MUR ) ) ) ) ) )", "obj1": 0.06653992395437262, "obj2": 0.7099271619770751}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) + Max( ACS,( ( ( MRS - ( ( ( FirstVNF_RAM_Server / CRS ) / ( PN - FirstVNF_Mem ) ) + ( CRS + ARS ) ) ) / ACS ) / ( MDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( Min( MUM ,Max( ( DS + MUR ),( RCSe / RRSe ) ) ),MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6270134522173825}, {"determining": "( ( RRS + ACS ) + Max( ( AMS - ( ( Min( ( ( RRS - MRS ) + PN ) ,RRS ) + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( ( CS / MLU ) ,( ( MUR - CS ) - Max( MUM,Min( RRSe ,( RCSe - CS ) ) ) ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7075062707435509}, {"determining": "Min( ( RRS / FirstVNF_CPU_Server ) ,( ( ACS - ( ( Max( ( FirstVNF_CPU_Server - Const ),MRS ) * ( FirstVNF_CPU_Server - MRS ) ) * ( MDR * ( Const / ( MDR + Min( DDR ,PN ) ) ) ) ) ) + ARS ) )", "choosing": "( DS / ( ( Min( Max( CS,DS ) ,MUR ) - Min( ( RCSe * RRSe ) ,Max( MUC,CS ) ) ) + MUC ) )", "obj1": 0.6539923954372624, "obj2": 0.23900642480556392}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) * ( ( ( RRS - MRS ) + PN ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( ( DS - CS ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),CS ) )", "obj1": 0.34790874524714827, "obj2": 0.43996581269318186}, {"determining": "( ( ( ( Min( Min( MDR ,PN ) ,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),FirstVNF_CPU ) ) - FirstVNF_CPU ) - MDR ) + ( RRS - FirstVNF_Mem ) ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUC,CS ),CS )", "obj1": 0.9239543726235742, "obj2": 0.033402160363793294}, {"determining": "Max( ( RRS - MRS ),( ( DDR - FirstVNF_RAM ) * ( MRS - MDR ) ) )", "choosing": "( ( Max( Max( ( MUC + CS ),( CS - ( RRSe - RCSe ) ) ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.33079847908745247, "obj2": 0.4564361108096557}, {"determining": "( ( ( ( Min( Min( MDR ,PN ) ,Max( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,FirstVNF_RAM ),FirstVNF_CPU ) ) - FirstVNF_CPU ) - MDR ) + ( RRS - FirstVNF_Mem ) ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUC,( RMSe * RCSe ) ),CS )", "obj1": 0.9239543726235742, "obj2": 0.033402160363793294}, {"determining": "( ( Min( FirstVNF_CPU_Server ,MDR ) - ( ARS / PN ) ) - ( MDR * ( Const / ( MDR + ( ( MDR - Min( Min( PN ,MDR ) ,DDR ) ) * ( ( BR * PN ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( MLU / DS ) + Min( RMSe ,( MLU - ( ( MLU * MUC ) * MUM ) ) ) ) ) ,( ( RCSe * MLU ) * RMSe ) )", "obj1": 0.9657794676806084, "obj2": 0.026311164182789108}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) * Max( ( Max( PN,MDR ) + ( ( FirstVNF_RAM_Server - ACS ) - Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / PN ) ) + ( DDR + FirstVNF_CPU ) ),MDR ) ) ),DDR ) )", "choosing": "( ( MUM / RMSe ) - Max( ( ( RMSe / ( ( RRSe - ( MUR - Max( MUR,MLU ) ) ) - ( MUM / ( MUC + MUC ) ) ) ) * DS ),CS ) )", "obj1": 0.2585551330798479, "obj2": 0.49754714744980305}, {"determining": "Max( Max( Min( ( ( ACS - RRS ) + ( RRS - FirstVNF_CPU_Server ) ) ,Max( ( PN / FirstVNF_CPU ),( BR * MRS ) ) ),MRS ),( ( ( PN - MRS ) / MDR ) - RRS ) )", "choosing": "Max( ( DS - MUC ),Min( DS ,( Min( MLU ,Max( RRSe,( RMSe * MUC ) ) ) / RCSe ) ) )", "obj1": 0.7224334600760456, "obj2": 0.20443797887064313}, {"determining": "Min( Max( Min( ACS ,MDR ),ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( MLU ,Max( RRSe,( RMSe * MUC ) ) ) / RCSe ),MUR ) - MUM ) ,( DS - CS ) )", "obj1": 0.40304182509505704, "obj2": 0.40029709077810216}, {"determining": "( Max( ( ( ( ( BR - FirstVNF_CPU ) - MDR ) + ( RRS - FirstVNF_Mem ) ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + PN ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( ( DS - CS ) * Max( Max( Min( CS ,RCSe ),( MUC + ( MLU / Min( DS ,RCSe ) ) ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.25825358452153074}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) * Max( ( Max( PN,MDR ) + ( ( FirstVNF_RAM_Server - ACS ) - Max( ( ( FirstVNF_RAM_Server * ( AMS / PN ) ) + ( DDR + FirstVNF_CPU ) ),MDR ) ) ),DDR ) )", "choosing": "( ( MUM / RMSe ) - Max( ( ( RMSe / ( ( RRSe - ( MUR - Max( DS,MLU ) ) ) - ( MUM / ( MUC + MUC ) ) ) ) * DS ),CS ) )", "obj1": 0.27756653992395436, "obj2": 0.48890275438646913}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,MDR ),ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( MLU ,Max( RRSe,( RMSe * Min( RMSe ,MLU ) ) ) ) / RCSe ),MUR ) - MUM ) ,( DS - CS ) )", "obj1": 0.37072243346007605, "obj2": 0.42792735528299647}, {"determining": "Min( Max( Min( ( ( BR / Const ) / Min( Max( PN,BR ) ,( ( BR - FirstVNF_CPU ) - MDR ) ) ) ,MDR ),ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,( ( MLU + MLU ) * Min( RMSe ,Min( ( Max( ( CS * RMSe ),DS ) + ( RRSe / MUC ) ) ,RCSe ) ) ) ) ,( DS - CS ) )", "obj1": 0.40304182509505704, "obj2": 0.40029709077810216}, {"determining": "( ( ( ( BR - FirstVNF_CPU ) - MDR ) + ( RRS - FirstVNF_Mem ) ) + Max( FirstVNF_RAM_Server,( RRS / Const ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( MLU / Min( Min( MUR ,RRSe ) ,RCSe ) ) ) ) )", "obj1": 0.9752851711026616, "obj2": 0.0067323311128197815}, {"determining": "Max( ( RRS - MRS ),Min( Max( ARS,MDR ) ,ACS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RMSe - RRSe ),( Min( CS ,CS ) * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.20722433460076045, "obj2": 0.5591979309788054}, {"determining": "( ( ( RRS - AMS ) - ( RRS / ACS ) ) - ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( ( DDR - Const ) / CRS ) ) )", "choosing": "Min( Min( MUR ,MUC ) ,( ( ( MLU / ( ( DS + ( RMSe * ( MUM * DS ) ) ) + ( MUC / ( DS * Min( MUR ,RMSe ) ) ) ) ) * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 0.6311787072243346, "obj2": 0.24368899412195763}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / Min( DS ,RCSe ) ) ) / RCSe ) * RMSe ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 0.8079847908745247, "obj2": 0.060787535366317036}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * ( ( MDR - Min( MDR ,BR ) ) - ( Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) - MDR ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Min( MUM ,DS ) ) ) ,Max( Max( ( DS / DS ),Max( ( DS / ( ( RRSe - DS ) + RRSe ) ),MUM ) ),( ( ( MUM - CS ) - ( MLU + MUC ) ) + RMSe ) ) )", "obj1": 0.16730038022813687, "obj2": 0.5911738094354606}, {"determining": "Min( ( ( AMS / ( AMS + FirstVNF_CPU ) ) * Const ) ,( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - MUM ) ,Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( Min( ( RRSe / RCSe ) ,Max( RCSe,MUR ) ) - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.2965779467680608, "obj2": 0.4872529097224908}, {"determining": "Max( ( RRS - MRS ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5258712481710074}, {"determining": "( Max( Max( ( FirstVNF_RAM - ( FirstVNF_RAM_Server - PN ) ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + PN ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( ( DS - CS ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ) )", "obj1": 0.6064638783269962, "obj2": 0.26647883016902746}, {"determining": "Max( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( ( FirstVNF_RAM_Server * MDR ) / FirstVNF_Mem ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( RMSe * DS ) )", "obj1": 0.23193916349809887, "obj2": 0.5308368872602557}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( PN - ACS ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / MUM ) ) / RCSe ) * RMSe ) ) / RMSe )", "obj1": 0.8384030418250951, "obj2": 0.05407519338300281}, {"determining": "( ( FirstVNF_CPU + MRS ) + ( Max( AMS,FirstVNF_Mem_Server ) - CRS ) )", "choosing": "( ( MUC - ( RMSe * ( MUC + RRSe ) ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( ( Min( ( CS - MLU ) ,MUM ) * RRSe ),RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.09505703422053231, "obj2": 0.6483401383286346}, {"determining": "Min( Max( Min( ( ( BR / Const ) / Min( Max( PN,BR ) ,FirstVNF_CPU_Server ) ) ,MDR ),ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( Max( ( DS * Min( MUR ,RMSe ) ),( ( MLU + MLU ) * Min( RMSe ,Min( ( Max( ( CS * RMSe ),DS ) + ( RRSe / MUC ) ) ,RCSe ) ) ) ) ,( DS - CS ) )", "obj1": 0.37832699619771865, "obj2": 0.4245661276344157}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + PN ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( ( DS - CS ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.25665399239543724, "obj2": 0.5204253129228913}, {"determining": "( Const + Max( ( AMS - ( ( Min( ARS ,RRS ) + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( RCSe - RMSe ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( ( CS / MLU ) ,( ( MUR - CS ) - Max( MUM,Min( RRSe ,( MUC - MUR ) ) ) ) ) )", "obj1": 0.3231939163498099, "obj2": 0.47434623292543066}, {"determining": "( ( ( BR / Const ) / Min( Max( PN,BR ) ,FirstVNF_CPU_Server ) ) - ( ( ( MDR / Const ) * FirstVNF_RAM_Server ) + FirstVNF_CPU ) )", "choosing": "Max( ( DS * Min( MUR ,RMSe ) ),( ( MLU + MLU ) * Min( RMSe ,Min( ( Max( ( CS * RMSe ),DS ) + ( RRSe / MUC ) ) ,RCSe ) ) ) )", "obj1": 0.9695817490494296, "obj2": 0.02016400525625087}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( BR * PN ) - ( ( FirstVNF_RAM_Server * ACS ) + ( Max( Min( BR ,ACS ),( Const - CRS ) ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( MLU + CS ) + ( Max( MUC,( RRSe * ( MUR + RMSe ) ) ) * ( RMSe - ( RRSe * MUM ) ) ) ) * RMSe ) ) / ( MUM / ( ( RCSe * MLU ) * RMSe ) ) )", "obj1": 0.7832699619771863, "obj2": 0.06738761036535353}, {"determining": "( ( FirstVNF_RAM_Server * Const ) + ( Min( AMS ,FirstVNF_Mem ) / ( RRS - ( FirstVNF_Mem_Server / Max( Const,BR ) ) ) ) )", "choosing": "( MLU + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,( ( CS - Min( MUR ,RMSe ) ) + ( Min( CS ,RMSe ) + MUM ) ) ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.19011406844106463, "obj2": 0.5705349367197046}, {"determining": "Max( Min( PN ,DDR ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RMSe,MUR ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.547663526031449}, {"determining": "Max( ( Min( DDR ,CRS ) - ( ACS / AMS ) ),( ARS + Min( FirstVNF_CPU_Server ,( MDR - ARS ) ) ) )", "choosing": "Max( ( ( MUM / ( ( Max( RMSe,RRSe ) + RMSe ) + ( DS + ( RMSe * ( MUM * DS ) ) ) ) ) / CS ),Min( DS ,MUR ) )", "obj1": 0.1958174904942966, "obj2": 0.564633339872906}, {"determining": "Max( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( ( FirstVNF_RAM_Server * MDR ) / FirstVNF_Mem ) ) ) * Min( MDR ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( MUR + DS ) )", "obj1": 0.3060836501901141, "obj2": 0.4815288570724299}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * ( ( MDR - Min( MDR ,BR ) ) - ( Min( MRS ,Max( ACS,( ( ( DDR - Const ) / CRS ) + ACS ) ) ) - MDR ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Min( MUM ,DS ) ) ) ,Max( Max( ( DS / DS ),Max( ( DS / ( ( RRSe - DS ) + RRSe ) ),MUM ) ),( ( ( MUM - CS ) - ( ( DS + MUR ) + MUC ) ) + RMSe ) ) )", "obj1": 0.18631178707224336, "obj2": 0.5889095925117236}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( Max( AMS,FirstVNF_Mem_Server ) - CRS ) )", "choosing": "( ( MUC - ( RMSe * ( MUC + RRSe ) ) ) + Min( ( Max( ( RCSe - RCSe ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.10646387832699619, "obj2": 0.6383116395484673}, {"determining": "Min( Max( Min( ACS ,MDR ),MRS ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( MLU ,MUC ) / RCSe ),MUR ) - MUM ) ,( DS - CS ) )", "obj1": 0.38593155893536124, "obj2": 0.41180439713236033}, {"determining": "( ( MDR - BR ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / MUM ) ) / RCSe ) * CS ) ) / ( MUM / ( Min( MLU ,DS ) * RMSe ) ) )", "obj1": 0.9942965779467681, "obj2": 0.002667896252850626}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,RRS ) * Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( RRS - DDR ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Max( Min( ( ( MUR * RCSe ) / MLU ) ,( MLU / RCSe ) ),Min( ( ( MLU / RRSe ) - ( RCSe - MUM ) ) ,( MUM - ( RCSe * CS ) ) ) ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.188212927756654, "obj2": 0.5855109733661086}, {"determining": "( ( CRS / ( PN + ( ( PN + MRS ) + FirstVNF_RAM ) ) ) + Max( ACS,( ( ( RRS - DDR ) * ( PN - RRS ) ) + ACS ) ) )", "choosing": "( ( MUC - ( RMSe * ( MUC + RRSe ) ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( Min( MUM ,( MUR + CS ) ),MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MUC * MUR ) ) ) ) )", "obj1": 0.09885931558935361, "obj2": 0.6422060229895762}, {"determining": "Max( ( RRS - MRS ),Min( FirstVNF_CPU ,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( Min( CS ,CS ) * DS ) ) ) + ( ( CS / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2300380228136882, "obj2": 0.538782959377162}, {"determining": "( ( FirstVNF_Mem - ( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( ( RRS / ACS ) - PN ) ) - Max( Max( DDR,FirstVNF_RAM ),( DDR / ACS ) ) ) ) ) * Max( ( Const - ( Const / ( Const * ( FirstVNF_RAM_Server / AMS ) ) ) ),Min( FirstVNF_Mem_Server ,Max( Const,Max( Min( RRS ,AMS ),BR ) ) ) ) )", "choosing": "( Max( RRSe,RRSe ) - ( MUM * ( Min( MLU ,( MUR * ( CS - MUC ) ) ) + MUR ) ) )", "obj1": 0.3155893536121673, "obj2": 0.4792355597995007}, {"determining": "( ( Max( FirstVNF_CPU_Server,( Const - MRS ) ) + ( ( BR * PN ) - ( ACS / AMS ) ) ) - ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( ( DDR - Const ) / CRS ) ) )", "choosing": "Min( Min( RRSe ,MUC ) ,( ( ( MLU / ( ( DS + ( RMSe * ( MUM * DS ) ) ) + ( MUC / ( Min( RCSe ,RCSe ) * Min( MUR ,RMSe ) ) ) ) ) * Min( ( ( DS - MUR ) * ( MLU / MLU ) ) ,RMSe ) ) - DS ) )", "obj1": 0.6311787072243346, "obj2": 0.24368899412195763}, {"determining": "( ( MDR - Min( Min( PN ,MDR ) ,DDR ) ) * ( ( BR * PN ) - ( ( FirstVNF_RAM_Server * ACS ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( MLU / Min( Max( ( MUR * Max( RMSe,MUC ) ),( ( DS * CS ) + RRSe ) ) ,RMSe ) ) ) - ( ( ( MLU + CS ) + ( Max( MUC,( RRSe * ( RMSe + RMSe ) ) ) * ( RMSe - ( RRSe * MUM ) ) ) ) * MUR ) ) / ( MUM / ( ( RCSe * MLU ) * RMSe ) ) )", "obj1": 0.8269961977186312, "obj2": 0.054980537082228546}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( BR * PN ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( MLU + CS ) + ( Max( MUC,( RRSe * ( RMSe + RMSe ) ) ) * ( RMSe - ( RRSe * MUM ) ) ) ) * RMSe ) ) / ( MUM / ( ( RCSe * MLU ) * RMSe ) ) )", "obj1": 0.8231939163498099, "obj2": 0.057966493392943415}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( BR + Min( ACS ,( Const + PN ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + MLU ) / MUM ) ) / RCSe ) * RMSe ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 0.8136882129277566, "obj2": 0.0599134642882761}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) + Max( ACS,( ( ( DDR - Const ) / CRS ) + ACS ) ) )", "choosing": "( ( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUR ) / Max( RRSe,MUR ) ) ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( Min( MUM ,Max( ( DS + MUR ),( RCSe / RRSe ) ) ),MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.11596958174904944, "obj2": 0.6334780968850513}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + PN ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( ( DS - CS ) * Max( Max( Min( CS ,RCSe ),( Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) / MLU ) ),( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ) )", "obj1": 0.6064638783269962, "obj2": 0.26647883016902746}, {"determining": "Max( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( ( FirstVNF_RAM_Server * MDR ) / FirstVNF_Mem ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( RMSe * DS ) )", "obj1": 0.22433460076045628, "obj2": 0.5438874048737382}, {"determining": "Min( Max( Min( ACS ,MDR ),MRS ) ,Max( CRS,FirstVNF_CPU ) )", "choosing": "Min( DS ,( DS - CS ) )", "obj1": 0.39543726235741444, "obj2": 0.4022685327275111}, {"determining": "Min( Max( Min( ( ( BR / Const ) / Min( Max( PN,BR ) ,FirstVNF_CPU_Server ) ) ,MDR ),RRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( Max( ( DS * Min( MUR ,RMSe ) ),( ( MLU + MLU ) * Min( RMSe ,Min( ( Max( ( CS * RMSe ),DS ) + ( RRSe / MUC ) ) ,( MUM * MUR ) ) ) ) ) ,( DS - CS ) )", "obj1": 0.3935361216730038, "obj2": 0.40531005841784373}, {"determining": "( ( FirstVNF_Mem - ( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,FirstVNF_RAM ),( DDR / ACS ) ) ) ) ) * Max( ( Const - ( Const / ( Const * ( FirstVNF_RAM_Server / AMS ) ) ) ),Min( FirstVNF_Mem_Server ,Max( Const,Max( Min( RRS ,AMS ),BR ) ) ) ) )", "choosing": "( Max( RRSe,RRSe ) - ( MUM * ( Min( MLU ,DS ) + MUR ) ) )", "obj1": 0.32129277566539927, "obj2": 0.47604417571363883}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( ( Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - ( ( ARS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / MUM ) ) / RCSe ) * RMSe ) ) / ( MUM / ( ( MUR / ( MLU - RRSe ) ) * ( ( MUR * ( MUC * CS ) ) - ( MUR + DS ) ) ) ) )", "obj1": 0.7813688212927756, "obj2": 0.07425482030242812}, {"determining": "Max( ( RRS - MRS ),( CRS / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( Max( ( ( MLU + MUC ) * Min( RRSe ,DS ) ),RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( Min( CS ,CS ) * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5440889217147242}, {"determining": "Min( ( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + PN ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( MLU ,Max( RRSe,CS ) ) / RCSe ),MUR ) - MUM ) ,( DS - CS ) )", "obj1": 0.3897338403041825, "obj2": 0.4097171183017969}, {"determining": "( ( MDR - Min( Min( PN ,MDR ) ,DDR ) ) * ( ( BR * PN ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( MLU / Min( Max( ( MUR * Max( RMSe,MUC ) ),( ( DS * CS ) + RRSe ) ) ,RMSe ) ) ) - ( ( ( MLU + CS ) + ( Max( MUC,( RRSe * ( RMSe + RMSe ) ) ) * ( RMSe - ( RRSe * MUM ) ) ) ) * RMSe ) ) / ( MUM / ( ( RCSe * MLU ) * RMSe ) ) )", "obj1": 0.7832699619771863, "obj2": 0.06738761036535353}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / BR ) + Max( ACS,( ( ( DDR - Const ) / CRS ) + ACS ) ) )", "choosing": "( ( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUR ) / Max( RRSe,MUR ) ) ) ) + Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( Min( MUM ,Max( ( DS + MUR ),( RRSe / RRSe ) ) ),MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) ) )", "obj1": 0.11596958174904944, "obj2": 0.6334780968850513}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + PN ) * Min( Min( Max( Min( ACS ,MDR ),MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,( ACS / PN ) ) ) )", "choosing": "( ( DS - CS ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.25665399239543724, "obj2": 0.5204253129228913}, {"determining": "( ( Const * Const ) / ( ( ( ACS - FirstVNF_RAM ) - RRS ) - PN ) )", "choosing": "( ( MUM - MLU ) + ( MUR * Max( RRSe,( ( MUC * RMSe ) - Max( MUM,( MUR * MLU ) ) ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUM ) ,( DS - CS ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( ( BR - RRS ) - Min( ( CRS - MRS ) ,MDR ) )", "choosing": "( Max( ( Min( MLU ,Max( RRSe,( RMSe * Max( MUC,MUM ) ) ) ) / RCSe ),MUR ) / ( MUM / ( RMSe + ( DS / ( Min( CS ,( DS - RRSe ) ) * MUM ) ) ) ) )", "obj1": 0.9961977186311787, "obj2": 0.0022568056857714346}, {"determining": "Max( Max( Min( ( ( ACS - RRS ) + ( RRS - FirstVNF_CPU_Server ) ) ,Max( ( PN / FirstVNF_CPU ),( BR * ( RRS - MRS ) ) ) ),MRS ),( ( ( PN - MRS ) / MDR ) - RRS ) )", "choosing": "Max( ( DS - MUC ),Min( DS ,( Min( MLU ,Max( RRSe,( RMSe * MUC ) ) ) / CS ) ) )", "obj1": 0.7224334600760456, "obj2": 0.20443797887064313}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - ( ( ARS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( ( ( Max( BR,MRS ) * ( FirstVNF_CPU_Server - MRS ) ) * ( MDR * ( Const / ( MDR + FirstVNF_Mem ) ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) * Min( RMSe ,( MLU - ( ( MLU * MUC ) * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) + ( FirstVNF_RAM - Max( ( FirstVNF_CPU_Server / CRS ),( AMS / DDR ) ) ) )", "choosing": "( ( MUM + RCSe ) - Max( CS,Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,DDR ) - FirstVNF_CPU ) * ( PN - RRS ) )", "choosing": "( ( MUR + MUC ) + ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( Min( MDR ,MDR ),CRS ) - MRS ) / MDR ) - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Max( ( Min( MLU ,Max( RRSe,( RMSe * MUC ) ) ) / RCSe ),MUR ) / ( MUM / ( RMSe + ( DS / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_Mem ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU - ( ( ( CRS + FirstVNF_RAM_Server ) + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUR * ( CS / RMSe ) ) / Max( MUC,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Max( ( BR + Min( ACS ,( Const + PN ) ) ),MDR ) ) + ACS ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( ( MUR * ( RCSe - RMSe ) ) - RMSe ) * Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( BR * ( AMS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( MUM - ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,MDR ) - ( ARS / PN ) ) - ( MDR * ( Const / ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( MLU / DS ) + Min( RMSe ,( MLU - ( ( MLU * MUC ) * MUM ) ) ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - ( Min( RRSe ,CS ) + Min( RMSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),Min( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( ( ( RRSe - DS ) / Min( ( Min( CS ,MUC ) * MUM ) ,( RRSe / RRSe ) ) ) - MUM ) - ( Max( ( ( ( RCSe + MUC ) / RMSe ) * ( RRSe * RRSe ) ),MUM ) - ( Min( ( RMSe + MUC ) ,MUR ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( FirstVNF_Mem - FirstVNF_RAM ) - FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( CS ,CS ),Min( RCSe ,Min( Min( MLU ,RCSe ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( PN ,DDR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( ( ( RCSe + ( ( CS + ( RCSe / MLU ) ) / Min( DS ,RCSe ) ) ) / RCSe ) * RMSe ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( Max( RRS,FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( MLU + MLU ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + FirstVNF_CPU ),BR ) + BR ) - Max( CRS,FirstVNF_CPU ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + Min( ( CS * MUR ) ,MUC ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - ( ( RCSe - MUR ) / Min( ( MLU * DS ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( AMS + ACS ) )", "choosing": "( ( RCSe - MUR ) / Min( Min( ( MUM / ( ( ( MUM * ( RRSe + MUC ) ) / CS ) + RMSe ) ) ,( Max( Min( MUM ,Max( ( DS + MUR ),( RCSe / RRSe ) ) ),( ( ( RCSe / MUC ) + ( MLU - RRSe ) ) * RMSe ) ) - ( Min( Min( MLU ,( MUC + RCSe ) ) ,( MLU + Max( RRSe,RCSe ) ) ) / ( CS + ( RMSe * ( MUM * DS ) ) ) ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - ( ( ARS + FirstVNF_RAM ) / ( ARS / FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),( ( ( MRS - ( ( ( FirstVNF_RAM_Server / CRS ) / ( PN - FirstVNF_Mem ) ) + ( CRS + ARS ) ) ) / ACS ) / ( MDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) * ( ( MUR / ( MLU - RRSe ) ) * ( ( MUR * ( MUC * CS ) ) - ( ( Max( ( ( MLU + CS ) - DS ),RRSe ) * Max( RCSe,MUR ) ) / ( RMSe + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( AMS ,AMS ) ) * ( PN - RRS ) )", "choosing": "( ( MUR + MUC ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM ),Min( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( ( ( RRSe - DS ) / Min( ( Min( CS ,MUC ) * MUM ) ,( RRSe / RRSe ) ) ) - MUM ) - ( Max( ( ( ( RCSe + MUC ) / RMSe ) * ( RRSe * RRSe ) ),MUM ) - ( Min( ( RMSe + MUC ) ,MUR ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - AMS ) - Min( PN ,ARS ) )", "choosing": "( Min( ( MLU * Min( MUR ,( MUR * ( CS - MUC ) ) ) ) ,RRSe ) / ( ( RRSe / ( MUM / ( RCSe / ( DS / Max( CS,Max( RCSe,RCSe ) ) ) ) ) ) / ( CS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / Max( PN,ARS ) ) * Min( Min( ( FirstVNF_Mem_Server / PN ) ,Min( DDR ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( ( Max( MLU,Max( ( ( DS * MLU ) * CS ),( RRSe - Min( Max( MUR,RCSe ) ,( MUM / MUR ) ) ) ) ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ( AMS / PN ) ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( Min( Const ,MRS ) ,FirstVNF_CPU_Server ) ) + ( Max( PN,Max( Min( ( FirstVNF_CPU_Server - Const ) ,AMS ),FirstVNF_CPU ) ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( Min( MUM ,CS ) * Min( RRSe ,DS ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}]}