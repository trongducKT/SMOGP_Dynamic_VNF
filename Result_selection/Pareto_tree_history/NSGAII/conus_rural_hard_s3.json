{"1": [{"determining": "( ( CRS - PN ) - Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_RAM ) )", "choosing": "( ( Min( ( Min( ( MUC * CS ) ,DS ) + MLU ) ,( RRSe + MLU ) ) - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( CRS - AMS ) )", "choosing": "( ( RCSe / MLU ) - ( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / DDR ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( MLU * MLU ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - BR ) ,( Max( AMS,FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( ( MUR * RRSe ) / ( RCSe / Min( ( MLU / ( RCSe * RRSe ) ) ,CS ) ) )", "obj1": 0.7227722772277227, "obj2": 0.1985404808361048}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( RRSe * RRSe ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( DDR,DDR ) ) ,Min( ( RRS - BR ) ,Min( ARS ,ARS ) ) )", "choosing": "( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( MLU / MUM ) + ( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS - ACS ),( BR + ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( MUM + RRSe ) + CS ) ,( DS * MLU ) )", "obj1": 0.7683168316831683, "obj2": 0.1777426416750072}, {"determining": "( ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - Const ) ) / Const ) + ( ( FirstVNF_CPU - AMS ) * ( AMS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( CS - MLU ),Min( DS ,MUM ) ) ,Max( MUR,MLU ) )", "obj1": 0.7207920792079208, "obj2": 0.21309213076301906}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( ( BR / Max( ( Min( ( MRS / ( FirstVNF_CPU - CRS ) ) ,( FirstVNF_CPU * Max( CRS,BR ) ) ) / FirstVNF_RAM_Server ),Max( FirstVNF_CPU_Server,PN ) ) ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS / MUM ) / ( MUR * Min( Max( RRSe,MLU ) ,MUR ) ) ) + ( Min( MUM ,CS ) / Min( DS ,MUM ) ) )", "obj1": 0.900990099009901, "obj2": 0.08777331037851119}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( ( ACS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( ( CS * ( ( MLU - ( MUC - ( MUM * MLU ) ) ) + ( Min( ( ( MUM * Max( MLU,MUM ) ) - RMSe ) ,( ( ( MLU * MUM ) + Max( MUC,RRSe ) ) / MUR ) ) * DS ) ) ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,( FirstVNF_RAM * ACS ) ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( ( ( CS - RCSe ) / MLU ) - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU - Const ) ,( FirstVNF_RAM * CRS ) ) * Max( ( AMS + CRS ),( PN - CRS ) ) )", "choosing": "( ( ( MUC - DS ) + ( RMSe * CS ) ) * Min( ( MUR * CS ) ,( RMSe / CS ) ) )", "obj1": 0.8891089108910891, "obj2": 0.0983409402620279}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,AMS ) ),( Min( MDR ,PN ) + CRS ) )", "choosing": "( ( ( MUM - RMSe ) / ( RRSe - CS ) ) * ( ( RRSe + RMSe ) - ( MLU / MUR ) ) )", "obj1": 0.6653465346534654, "obj2": 0.2376004310649183}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUC - RCSe ) * DS ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ACS * Max( MDR,AMS ) ) )", "choosing": "Min( Max( ( RCSe + MUM ),( RMSe * MUR ) ) ,( CS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,ARS ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( Min( DS ,MUR ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ACS ) * FirstVNF_Mem ) - ( BR - ( AMS + ACS ) ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( ( RRSe * RMSe ) ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) )", "obj1": 0.6574257425742575, "obj2": 0.2445846006019251}, {"determining": "( ( Max( ( MDR / FirstVNF_CPU ),( Const / FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR * BR ) ) ) - ( ( ( BR * FirstVNF_CPU ) / ( BR - MRS ) ) + ( Max( BR,FirstVNF_RAM_Server ) - ( MDR + ACS ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) - CS ) * DS ) - Min( MLU ,RMSe ) )", "obj1": 0.7445544554455445, "obj2": 0.17871802528905986}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( ( CRS * ( FirstVNF_CPU / DDR ) ),PN ) / FirstVNF_RAM ) ) * ( ( Max( Min( MDR ,RRS ),AMS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( ( ( CS + RMSe ) + MUM ) / Min( ( Max( Min( RCSe ,MUC ),Min( RCSe ,( RCSe - Min( Max( RRSe,MUM ) ,RRSe ) ) ) ) - CS ) ,RMSe ) )", "obj1": 0.6831683168316832, "obj2": 0.21434056837208337}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - Min( ( MDR - FirstVNF_RAM ) ,ARS ) )", "choosing": "( ( RCSe * ( RRSe + MLU ) ) - ( RRSe / ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR - CRS ),( Const + FirstVNF_Mem_Server ) ) - Max( ( PN + FirstVNF_RAM ),Max( RRS,Const ) ) ) + ( ( ( DDR + RRS ) / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( ARS / Const ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) * ( MUC - RRSe ) ),Min( ( DS / RCSe ) ,Min( RRSe ,CS ) ) ) + ( Min( ( DS * DS ) ,Min( CS ,MLU ) ) + ( Min( MUC ,RCSe ) * ( RMSe + DS ) ) ) )", "obj1": 0.7821782178217822, "obj2": 0.16239188897462117}, {"determining": "( ( ( Min( Const ,ARS ) * Max( MRS,RRS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( Min( ( MUR / CS ) ,( RMSe * DS ) ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / MLU ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.8534653465346534, "obj2": 0.11662825307494426}], "2": [{"determining": "( ( CRS - PN ) - Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_RAM ) )", "choosing": "( ( Min( ( Min( ( MUC * CS ) ,DS ) + MLU ) ,( RRSe + MLU ) ) - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( CRS - AMS ) )", "choosing": "( ( RCSe / MLU ) - ( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / DDR ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( MLU * MLU ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( RRSe * RRSe ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( DDR,DDR ) ) ,Min( ( RRS - BR ) ,Min( ARS ,ARS ) ) )", "choosing": "( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( MLU / MUM ) + ( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( ( BR / Max( ( Min( ( MRS / ( FirstVNF_CPU - CRS ) ) ,( FirstVNF_CPU * Max( CRS,BR ) ) ) / FirstVNF_RAM_Server ),Max( FirstVNF_CPU_Server,PN ) ) ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS / MUM ) / ( MUR * Min( Max( RRSe,MLU ) ,MUR ) ) ) + ( Min( MUM ,CS ) / Min( DS ,MUM ) ) )", "obj1": 0.900990099009901, "obj2": 0.08777331037851119}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( ( ACS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( ( CS * ( ( MLU - ( MUC - ( MUM * MLU ) ) ) + ( Min( ( ( MUM * Max( MLU,MUM ) ) - RMSe ) ,( ( ( MLU * MUM ) + Max( MUC,RRSe ) ) / MUR ) ) * DS ) ) ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,( FirstVNF_RAM * ACS ) ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( ( ( CS - RCSe ) / MLU ) - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU - Const ) ,( FirstVNF_RAM * CRS ) ) * Max( ( AMS + CRS ),( PN - CRS ) ) )", "choosing": "( ( ( MUC - DS ) + ( RMSe * CS ) ) * Min( ( MUR * CS ) ,( RMSe / CS ) ) )", "obj1": 0.8891089108910891, "obj2": 0.0983409402620279}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,AMS ) ),( Min( MDR ,PN ) + CRS ) )", "choosing": "( ( ( MUM - RMSe ) / ( RRSe - CS ) ) * ( ( RRSe + RMSe ) - ( MLU / MUR ) ) )", "obj1": 0.6653465346534654, "obj2": 0.2376004310649183}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUC - RCSe ) * DS ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ACS * Max( MDR,AMS ) ) )", "choosing": "Min( Max( ( RCSe + MUM ),( RMSe * MUR ) ) ,( CS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,ARS ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( Min( DS ,MUR ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ACS ) * FirstVNF_Mem ) - ( BR - ( AMS + ACS ) ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( ( RRSe * RMSe ) ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) )", "obj1": 0.6574257425742575, "obj2": 0.2445846006019251}, {"determining": "( ( Max( ( MDR / FirstVNF_CPU ),( Const / FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR * BR ) ) ) - ( ( ( BR * FirstVNF_CPU ) / ( BR - MRS ) ) + ( Max( BR,FirstVNF_RAM_Server ) - ( MDR + ACS ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) - CS ) * DS ) - Min( MLU ,RMSe ) )", "obj1": 0.7445544554455445, "obj2": 0.17871802528905986}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - Min( ( MDR - FirstVNF_RAM ) ,ARS ) )", "choosing": "( ( RCSe * ( RRSe + MLU ) ) - ( RRSe / ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR - CRS ),( Const + FirstVNF_Mem_Server ) ) - Max( ( PN + FirstVNF_RAM ),Max( RRS,Const ) ) ) + ( ( ( DDR + RRS ) / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( ARS / Const ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) * ( MUC - RRSe ) ),Min( ( DS / RCSe ) ,Min( RRSe ,CS ) ) ) + ( Min( ( DS * DS ) ,Min( CS ,MLU ) ) + ( Min( MUC ,RCSe ) * ( RMSe + DS ) ) ) )", "obj1": 0.7821782178217822, "obj2": 0.16239188897462117}, {"determining": "( ( ( Min( Const ,ARS ) * Max( MRS,RRS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( Min( ( MUR / CS ) ,( RMSe * DS ) ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / MLU ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.8534653465346534, "obj2": 0.11662825307494426}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - ( ( ( AMS * CRS ) + Max( FirstVNF_CPU_Server,PN ) ) / ( ( ( ( AMS - FirstVNF_RAM ) + ( PN + FirstVNF_CPU_Server ) ) / RRS ) * Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "( ( RMSe - MUM ) - ( RRSe / ( ( CS + RMSe ) * ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,( ACS + AMS ) )", "choosing": "Max( ( ( MUC - RCSe ) * DS ),( CS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN * ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) ) ,Max( BR,PN ) )", "choosing": "( ( RCSe - RRSe ) * ( ( ( DS / MUM ) / ( MUR * MUC ) ) + ( Min( MUM ,CS ) / Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( ( ( Min( MLU ,CS ) + ( MUR * RMSe ) ) / RMSe ) / Min( ( RRSe - CS ) ,RMSe ) )", "obj1": 0.6792079207920793, "obj2": 0.21123387685915765}, {"determining": "( ( Max( CRS,FirstVNF_RAM_Server ) - Max( Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ),( FirstVNF_Mem + ARS ) ) ) + ( FirstVNF_Mem * DDR ) )", "choosing": "( Min( RRSe ,( MUR * RMSe ) ) / ( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( Const / PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( ( Min( ( RMSe * RMSe ) ,Max( RCSe,MUR ) ) + Min( ( MLU * MUR ) ,( MUC - MUR ) ) ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - ( FirstVNF_Mem / AMS ) ),( ( FirstVNF_CPU / RRS ) - ( ( FirstVNF_RAM_Server + ( BR / Const ) ) + ARS ) ) )", "choosing": "Max( ( Min( ( CS * MUR ) ,( DS + RMSe ) ) / ( MUC - MLU ) ),( MLU * CS ) )", "obj1": 0.9108910891089109, "obj2": 0.07287585662620422}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) - ARS ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( RMSe - Max( RCSe,RRSe ) ) / ( ( Max( MUC,MLU ) + Min( DS ,CS ) ) + Max( ( MUM * MUR ),Min( MUM ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( ( Max( MUC,MLU ) + Min( DS ,CS ) ) + Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Min( BR ,BR ) - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUC - ( MUM / DS ) ) * DS ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM / ACS ) + Max( ACS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( RCSe / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,Max( ( Min( RRS ,FirstVNF_RAM_Server ) / ( AMS - DDR ) ),( AMS - ( BR - MRS ) ) ) ) )", "choosing": "Max( Min( ( RMSe * ( RCSe * RMSe ) ) ,( RMSe / ( RRSe / MLU ) ) ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / Min( CRS ,DDR ) ) - PN ) - ( RRS * MDR ) )", "choosing": "( ( RCSe + DS ) / Max( Min( DS ,RCSe ),Min( MUM ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * DDR )", "choosing": "( ( RRSe / RMSe ) / Min( ( Max( ( RCSe / DS ),Min( RCSe ,( RCSe - Min( Max( RRSe,MUM ) ,RRSe ) ) ) ) - CS ) ,RMSe ) )", "obj1": 0.7069306930693069, "obj2": 0.19543115805224476}, {"determining": "( ( ARS / FirstVNF_RAM ) * ( ( ( FirstVNF_Mem_Server * MRS ) + Max( ARS,DDR ) ) / ( Min( FirstVNF_Mem ,DDR ) * ( ARS - CRS ) ) ) )", "choosing": "( ( CS * ( Max( ( RMSe / MUC ),( MUM * MUR ) ) * Min( ( DS * MLU ) ,( MUM * RCSe ) ) ) ) - ( MUR - CS ) )", "obj1": 0.6752475247524753, "obj2": 0.22655678537797566}, {"determining": "( ( ( Min( Const ,ARS ) * ( FirstVNF_CPU - AMS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( Min( ( MUR / CS ) ,( RMSe * DS ) ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( Min( Max( ( CS - MLU ),Min( DS ,MUM ) ) ,( ( RMSe * MLU ) - Min( RRSe ,MUM ) ) ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.80990099009901, "obj2": 0.1357738508239431}, {"determining": "( ( CRS - ( Max( AMS,DDR ) + Min( MRS ,( ( ARS * FirstVNF_CPU_Server ) - PN ) ) ) ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / RCSe ) / Min( MLU ,RMSe ) ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) ) + Min( MRS ,( ( ARS * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( ( RMSe / ( ( RRSe / RCSe ) / Min( MLU ,RMSe ) ) ) - ( ( Max( CS,RCSe ) + Max( RRSe,RMSe ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_RAM ) )", "choosing": "( ( Min( ( Min( ( MUC * CS ) ,DS ) + MLU ) ,( RRSe + MLU ) ) - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * Max( MDR,AMS ) ) * ( BR + DDR ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,( CS / MLU ) ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 0.996039603960396, "obj2": 0.003451117137982316}, {"determining": "( ( Const + Min( CRS ,ACS ) ) / ( ( ( PN - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,ACS ) ) / ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - ( ACS + FirstVNF_RAM_Server ) ) ) / Min( CRS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUM + RMSe ) / ( RRSe - MLU ) ) * ( ( MUC / RCSe ) * Max( RCSe,RRSe ) ) ) ,( ( ( ( ( MUM / RCSe ) + MUC ) * Min( CS ,MUR ) ) * ( Max( DS,MUR ) + Min( DS ,DS ) ) ) * Max( ( MUR * MUC ),( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( ARS - FirstVNF_RAM ) ) * MRS ) + BR ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MLU + RCSe ) + ( ( MUR / MUR ) - RRSe ) )", "obj1": 0.7544554455445545, "obj2": 0.1715439815761766}, {"determining": "( ACS * ( CRS - AMS ) )", "choosing": "( MUR - ( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ( FirstVNF_CPU_Server - AMS ) ) - ( RRS * MDR ) )", "choosing": "( ( RCSe + DS ) / ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) )", "obj1": 0.8950495049504951, "obj2": 0.09053196511246515}, {"determining": "( Min( Max( ( CRS - FirstVNF_Mem_Server ),AMS ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( RRS * MDR ) ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + Min( MLU ,MUM ) ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + ( MUM / DS ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( PN,( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + RCSe ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Const ) * ( AMS - FirstVNF_Mem ) )", "choosing": "Max( ( DS + RRSe ),( MUM / ( MUM / RMSe ) ) )", "obj1": 0.7960396039603961, "obj2": 0.1562517248585398}, {"determining": "( ( FirstVNF_RAM / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - ( ( CS * MLU ) - ( MUR - CS ) ) ),RCSe ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( Max( Min( ( MUR / CS ) ,( RMSe * DS ) ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / MLU ),Min( RMSe ,MUC ) ) ) ) )", "obj1": 0.9168316831683169, "obj2": 0.06917332216042256}, {"determining": "( ( ( Min( Const ,ARS ) * Max( MRS,RRS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( ( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) ) - Const ) ) ) )", "choosing": "( ( RCSe - DS ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / MLU ),Min( RMSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( ( Max( Min( MDR ,RRS ),AMS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * ( ( ( DDR / CRS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( MDR + ARS ) ) ) )", "choosing": "( ( RRSe / RMSe ) / Min( ( Max( Min( RCSe ,MUC ),Min( RCSe ,( RCSe - Min( Max( RRSe,MUM ) ,RRSe ) ) ) ) - ( Min( DS ,MUM ) / ( DS / MUR ) ) ) ,RMSe ) )", "obj1": 0.689108910891089, "obj2": 0.20359038979284994}, {"determining": "( Min( AMS ,ARS ) - ( FirstVNF_CPU_Server + ( ( ( ( Const * FirstVNF_Mem_Server ) + ( MRS + MDR ) ) / ( ( Const + MRS ) + ( PN + BR ) ) ) - AMS ) ) )", "choosing": "( ( Min( DS ,MUR ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( DS / RRSe ) / ( ( MUR + MLU ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( Const - AMS ) )", "choosing": "( ( RCSe / MLU ) - ( MUM * Max( ( Min( ( RCSe / RRSe ) ,( MUR + DS ) ) + ( ( RMSe * RCSe ) * Min( RCSe ,RMSe ) ) ),( Min( ( MUC / RMSe ) ,( RMSe + RCSe ) ) * ( ( MUR / RMSe ) - ( RMSe - RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( FirstVNF_RAM - PN ) )", "choosing": "( Min( MUC ,Max( ( CS - MLU ),Min( DS ,MUM ) ) ) - ( RRSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Const ) * ( AMS - ( ( Min( ( FirstVNF_Mem_Server - ( PN - FirstVNF_CPU ) ) ,FirstVNF_CPU ) + AMS ) + ACS ) ) )", "choosing": "Max( ( MUM * Min( MLU ,( MLU * RCSe ) ) ),( MUM / ( MUM / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,( FirstVNF_RAM * ACS ) ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( ( ( CS - RCSe ) / MLU ) - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - ( FirstVNF_Mem / AMS ) ),( ( FirstVNF_CPU / RRS ) - ( ( FirstVNF_RAM_Server + ( BR / Const ) ) + ARS ) ) )", "choosing": "Max( ( Min( ( CS * MUR ) ,( DS + RMSe ) ) / ( MUC - MLU ) ),( MLU * CS ) )", "obj1": 0.9108910891089109, "obj2": 0.07287585662620422}, {"determining": "( ( Max( ( MDR / FirstVNF_CPU ),( Const / FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR * BR ) ) ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / ( BR - MRS ) ) + ( Max( BR,FirstVNF_RAM_Server ) - ( MDR + ACS ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) - CS ) * DS ) - Max( MUC,RCSe ) )", "obj1": 0.7702970297029703, "obj2": 0.16527308771910387}, {"determining": "( Min( ( FirstVNF_CPU - Const ) ,( FirstVNF_RAM * CRS ) ) * Max( ( MDR + CRS ),( PN - CRS ) ) )", "choosing": "( ( ( MUC - DS ) + Min( RRSe ,( MLU / MLU ) ) ) * Min( ( MUR * CS ) ,( RMSe / CS ) ) )", "obj1": 0.897029702970297, "obj2": 0.09052274343245871}, {"determining": "( ( ( AMS - MDR ) + Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) ) / ( ( ACS * MDR ) - ( BR / Const ) ) )", "choosing": "Max( Max( ( RCSe + MLU ),( RCSe - DS ) ),( RRSe * DS ) )", "obj1": 0.9663366336633663, "obj2": 0.011665733690064203}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( AMS - MDR ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - ( CS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( Min( ( Const * ACS ) ,Max( ( Min( RRS ,FirstVNF_RAM_Server ) / ( AMS - DDR ) ),( AMS - ( ( ( AMS - RRS ) * ( PN * DDR ) ) - MRS ) ) ) ) - Max( ( AMS - MDR ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( RMSe,( RCSe - ( CS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_RAM ) )", "choosing": "( ( Min( ( Min( ( MUC * CS ) ,DS ) + MLU ) ,( RRSe + MLU ) ) - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS - RRS ) * ( PN * DDR ) ) ,( Min( FirstVNF_Mem_Server ,MRS ) / ( RRS * DDR ) ) )", "choosing": "( Max( Min( ( RMSe / MLU ) ,( RRSe - MUC ) ),MUR ) - Min( ( RMSe * ( RCSe * RMSe ) ) ,( RMSe / ( RRSe / DS ) ) ) )", "obj1": 0.6495049504950495, "obj2": 0.2679343807704292}, {"determining": "Max( ( MRS - ACS ),Min( ( PN - BR ) ,( RRS * FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RRSe + RRSe ) + CS ) ,( DS * MLU ) )", "obj1": 0.8792079207920792, "obj2": 0.08029683847839444}, {"determining": "( Max( CRS,Min( Max( Max( RRS,PN ),( ( MRS * Min( FirstVNF_Mem_Server ,( BR - Const ) ) ) * Min( DDR ,ARS ) ) ) ,BR ) ) - ( ( CRS / PN ) - ( PN * DDR ) ) )", "choosing": "( ( RMSe * ( MUC / MUC ) ) + Max( RRSe,MUM ) )", "obj1": 0.9504950495049505, "obj2": 0.018691067827562746}, {"determining": "( ( CRS * ( FirstVNF_CPU_Server - AMS ) ) - ( RRS * ( Max( ( ( AMS + MDR ) - ( MDR - FirstVNF_Mem ) ),RRS ) * Min( MRS ,ACS ) ) ) )", "choosing": "( ( RCSe + DS ) / ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RRSe / MUR ) + Max( MLU,MUC ) ) ) )", "obj1": 0.9287128712871288, "obj2": 0.05952208931439603}, {"determining": "Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),( Min( MRS ,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + BR ) + ARS ) ) )", "choosing": "Max( ( Min( ( CS * MUR ) ,( DS + RMSe ) ) / ( MUC - MLU ) ),( ( Min( DS ,MUR ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( DS / RRSe ) / ( ( MUR + MLU ) * MUC ) ) ) ) )", "obj1": 0.8653465346534653, "obj2": 0.1140592070556966}, {"determining": "( ( ( CRS * ACS ) * FirstVNF_Mem ) - ( BR - ( ( ( Min( Const ,ARS ) * Max( MRS,RRS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) ) ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( ( RRSe * RMSe ) ,( RCSe * MUC ) ),( MUM / Max( MUC,MLU ) ) ) )", "obj1": 0.9089108910891089, "obj2": 0.06847387130592335}, {"determining": "( Max( PN,Const ) * ( AMS - FirstVNF_Mem ) )", "choosing": "Max( ( DS + RRSe ),( MUM / ( MUM / RMSe ) ) )", "obj1": 0.7960396039603961, "obj2": 0.1562517248585398}, {"determining": "( ( ( Min( Const ,ARS ) * ( FirstVNF_CPU - AMS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Min( FirstVNF_RAM_Server ,PN ),DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( Min( Min( ( DS * MUM ) ,Min( RRSe ,( RRSe / MLU ) ) ) ,( RMSe * DS ) ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( Min( Max( ( CS - MLU ),Min( DS ,MUM ) ) ,( ( RMSe * MLU ) - Min( RRSe ,MUM ) ) ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.80990099009901, "obj2": 0.1357738508239431}, {"determining": "( Max( ACS,( Const - ACS ) ) * Min( ( ( ARS + ACS ) + FirstVNF_CPU ) ,ACS ) )", "choosing": "( ( ( RRSe * RCSe ) + ( MUM * ( ( MUC - RCSe ) * RMSe ) ) ) - ( RRSe / MUR ) )", "obj1": 0.6534653465346535, "obj2": 0.2395212930095678}, {"determining": "( Min( AMS ,ARS ) - ( FirstVNF_CPU_Server + ( ( ( ( Const * FirstVNF_Mem_Server ) + ( MRS + MDR ) ) / ( ( Const + MRS ) + ( ( FirstVNF_RAM_Server + ( BR / Const ) ) + BR ) ) ) - AMS ) ) )", "choosing": "( ( Min( DS ,MUR ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( DS / RRSe ) / ( ( ( Min( ( CS * MUR ) ,( DS + RMSe ) ) / ( MUC - MLU ) ) + MLU ) * MUC ) ) ) )", "obj1": 0.7346534653465346, "obj2": 0.17422803362665926}, {"determining": "( Min( Max( ( CRS - FirstVNF_Mem_Server ),( ACS / Max( MRS,BR ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( RRS * MDR ) ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + Min( MLU ,MUM ) ) + Max( MLU,MUC ) ) ) + Max( Min( DS ,MLU ),( DS + MUM ) ) )", "obj1": 0.8435643564356435, "obj2": 0.1346746307344788}, {"determining": "Max( ( Min( RRS ,FirstVNF_RAM_Server ) / Const ),( AMS - ( ( ( AMS - RRS ) * ( PN * DDR ) ) - MRS ) ) )", "choosing": "Min( ( RCSe * ( RCSe * RMSe ) ) ,( RMSe / ( RRSe / DS ) ) )", "obj1": 0.7168316831683168, "obj2": 0.1821292605363873}, {"determining": "( Max( CRS,Min( Max( Max( RRS,PN ),( ( MRS * Min( FirstVNF_Mem_Server ,( BR - Const ) ) ) * FirstVNF_CPU ) ) ,BR ) ) - ( ( CRS / PN ) - ( PN * DDR ) ) )", "choosing": "( ( RMSe * ( MUC / MUC ) ) + Min( ( DS * MUM ) ,Min( RRSe ,DS ) ) )", "obj1": 0.9821782178217822, "obj2": 0.006644455799155576}, {"determining": "( ( ( Min( Const ,ARS ) * Max( MRS,RRS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( Min( ( MUR / CS ) ,( RMSe * DS ) ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / MLU ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.8534653465346534, "obj2": 0.11662825307494426}, {"determining": "( ( Max( ( DDR - CRS ),( Const + FirstVNF_Mem_Server ) ) - Max( ( PN + FirstVNF_RAM ),Max( RRS,Const ) ) ) + ( ( ( DDR + RRS ) / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( ARS / Const ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) * ( MUC - RRSe ) ),Min( ( DS / RCSe ) ,Min( RRSe ,CS ) ) ) + ( Min( ( DS * DS ) ,Min( CS ,MLU ) ) + ( Min( MUC ,RCSe ) * ( RMSe + DS ) ) ) )", "obj1": 0.7821782178217822, "obj2": 0.16239188897462117}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * DDR )", "choosing": "( ( RRSe / RMSe ) / Min( ( Max( ( RCSe / DS ),Min( RCSe ,( RCSe - Min( Max( RRSe,MUM ) ,RRSe ) ) ) ) - CS ) ,RMSe ) )", "obj1": 0.7069306930693069, "obj2": 0.19543115805224476}, {"determining": "Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( ARS - FirstVNF_RAM ) ) * MRS ) + BR ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MLU + RCSe ) + ( ( MUR / MUR ) - RRSe ) )", "obj1": 0.7544554455445545, "obj2": 0.1715439815761766}, {"determining": "( ( ARS / FirstVNF_RAM ) * ( ( ( FirstVNF_Mem_Server * MRS ) + Max( ARS,DDR ) ) / ( Min( FirstVNF_Mem ,DDR ) * ( ARS - CRS ) ) ) )", "choosing": "( ( CS * ( Max( ( RMSe / MUC ),( MUM * MUR ) ) * Min( ( DS * MLU ) ,( MUM * RCSe ) ) ) ) - ( MUR - CS ) )", "obj1": 0.6752475247524753, "obj2": 0.22655678537797566}, {"determining": "( ( ( ( Min( Const ,( FirstVNF_RAM * ACS ) ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) / ( ACS / Max( MRS,BR ) ) )", "choosing": "( ( Max( Min( DS ,MLU ),( DS + MUM ) ) / ( ( MUC + RRSe ) - ( MLU + MUC ) ) ) / ( Max( ( RCSe + MUR ),( DS - RRSe ) ) + Min( ( RCSe / CS ) ,( MUR * ( Min( ( RRSe - ( CS + CS ) ) ,RMSe ) * RMSe ) ) ) ) )", "obj1": 0.8475247524752475, "obj2": 0.12929120163956012}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( ( ( Min( MLU ,CS ) + ( MUR * RMSe ) ) / RMSe ) / Min( ( RRSe - CS ) ,RMSe ) )", "obj1": 0.6792079207920793, "obj2": 0.21123387685915765}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( ( AMS - FirstVNF_RAM ),FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( ( Max( Min( MDR ,RRS ),AMS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( ( RRSe / RMSe ) / Min( ( RMSe - CS ) ,RMSe ) )", "obj1": 0.693069306930693, "obj2": 0.2034672982973897}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ARS ) * ( ( Max( Min( MDR ,RRS ),AMS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( ( RRSe / RMSe ) / Min( ( Max( Min( RCSe ,MUC ),Min( RCSe ,( RCSe - Min( Max( RRSe,MUM ) ,( CS * MUR ) ) ) ) ) - CS ) ,RMSe ) )", "obj1": 0.6633663366336634, "obj2": 0.23320985651252524}, {"determining": "Max( ( FirstVNF_Mem - ( FirstVNF_Mem / AMS ) ),( ( FirstVNF_CPU / RRS ) - ( ( FirstVNF_RAM_Server + Max( MRS,BR ) ) + ARS ) ) )", "choosing": "Max( ( Min( ( CS * MUR ) ,( ( Max( Min( DS ,MLU ),( DS + MUM ) ) / ( ( MUC + RRSe ) - ( MLU + MUC ) ) ) + RMSe ) ) / ( MUC - MLU ) ),( MLU * CS ) )", "obj1": 0.9227722772277228, "obj2": 0.06209471402309839}, {"determining": "Min( ( PN - BR ) ,( ( Const + ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( MUR * RRSe ) / ( ( Min( ( CS * MUR ) ,( DS + RMSe ) ) / Min( Min( MUC ,RCSe ) ,( RMSe * MUC ) ) ) + DS ) )", "obj1": 0.7148514851485148, "obj2": 0.19159149755270496}, {"determining": "( Min( ( ( ACS * Max( MDR,AMS ) ) * ( BR + DDR ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,( CS / MLU ) ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 0.996039603960396, "obj2": 0.003451117137982316}, {"determining": "( ( ( AMS - MDR ) + Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) ) / FirstVNF_RAM )", "choosing": "Max( Max( ( RCSe + MLU ),( RCSe - DS ) ),( RRSe * Max( CS,RRSe ) ) )", "obj1": 0.9663366336633663, "obj2": 0.011665733690064203}, {"determining": "( ( ( AMS - MDR ) + Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) ) / ( ( ACS * MDR ) - ( BR / Const ) ) )", "choosing": "Max( Max( ( RCSe + MLU ),( RCSe - DS ) ),( RRSe * DS ) )", "obj1": 0.9663366336633663, "obj2": 0.011665733690064203}, {"determining": "( ( Max( ( MDR / FirstVNF_CPU ),( Const / FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( AMS / CRS ) ) ) ) - ( ( ( BR * FirstVNF_CPU ) / ( BR - MRS ) ) + ( Max( BR,FirstVNF_RAM_Server ) - ( MDR + ACS ) ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) - CS ) * DS ) - Min( MLU ,RMSe ) )", "obj1": 0.6673267326732674, "obj2": 0.2289119562856221}, {"determining": "( ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - Const ) ) / Const ) + ( Max( CRS,BR ) * ( AMS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( Max( ( DS - DS ),RCSe ) - MLU ),Min( DS ,MUM ) ) ,Max( MUR,MLU ) )", "obj1": 0.7623762376237624, "obj2": 0.16857386891325057}, {"determining": "( ( Min( Min( DDR ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( ( Max( Min( MDR ,RRS ),AMS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( ( RMSe / RMSe ) / Min( ( Max( Min( RCSe ,MUC ),Min( RCSe ,( RCSe - Min( Max( RRSe,MUM ) ,RRSe ) ) ) ) - CS ) ,RMSe ) )", "obj1": 0.6831683168316832, "obj2": 0.20793652283254968}, {"determining": "( ( Max( ( MDR / FirstVNF_CPU ),( Const / FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR * BR ) ) ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / ( BR - MRS ) ) + ( Max( BR,FirstVNF_RAM_Server ) - ( MDR + ACS ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) - CS ) * DS ) - Max( MUC,RCSe ) )", "obj1": 0.7702970297029703, "obj2": 0.16527308771910387}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( ( Max( Min( MDR ,RRS ),AMS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * ( ( ( DDR / CRS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( MDR + ARS ) ) ) )", "choosing": "( ( RRSe / RMSe ) / Min( ( Max( Min( RCSe ,MUC ),Min( RCSe ,( RCSe - Min( Max( RRSe,MUM ) ,RRSe ) ) ) ) - ( Min( DS ,MUM ) / ( DS / MUR ) ) ) ,RMSe ) )", "obj1": 0.689108910891089, "obj2": 0.20359038979284994}, {"determining": "( ( ( Min( Const ,ARS ) * ( FirstVNF_CPU - AMS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( Min( ( MUR / CS ) ,( RMSe * DS ) ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( Min( Max( ( CS - MLU ),Min( DS ,MUM ) ) ,( ( RMSe * MLU ) - Min( RRSe ,MUM ) ) ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.80990099009901, "obj2": 0.1357738508239431}, {"determining": "( ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) / Const ) + ( ( FirstVNF_CPU - AMS ) * ( AMS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( CS - MLU ),Min( DS ,MUM ) ) ,Max( MUR,CS ) )", "obj1": 0.7663366336633664, "obj2": 0.16529565732137266}, {"determining": "( ( CRS * ( FirstVNF_CPU_Server - AMS ) ) - Min( RRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe + DS ) / ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + DS ) + Min( ( RMSe * ( RCSe * RMSe ) ) ,( RMSe / ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9267326732673268, "obj2": 0.06105548441414067}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( CRS - AMS ) )", "choosing": "( ( RCSe / MLU ) - ( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / DDR ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( MLU * MLU ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( RRSe * RRSe ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( DDR,DDR ) ) ,Min( ( RRS - BR ) ,Min( ARS ,ARS ) ) )", "choosing": "( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( MLU / MUM ) + ( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( ( ACS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( ( CS * ( ( MLU - ( MUC - ( MUM * MLU ) ) ) + ( Min( ( ( MUM * Max( MLU,MUM ) ) - RMSe ) ,( ( ( MLU * MUM ) + Max( MUC,RRSe ) ) / MUR ) ) * DS ) ) ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,( FirstVNF_RAM * ACS ) ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( ( ( CS - RCSe ) / MLU ) - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUC - RCSe ) * DS ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ACS * Max( MDR,AMS ) ) )", "choosing": "Min( Max( ( RCSe + MUM ),( RMSe * MUR ) ) ,( CS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,ARS ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( Min( DS ,MUR ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - Min( ( MDR - FirstVNF_RAM ) ,ARS ) )", "choosing": "( ( RCSe * ( RRSe + MLU ) ) - ( RRSe / ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - ( ( ( AMS * CRS ) + Max( FirstVNF_CPU_Server,PN ) ) / ( ( ( ( AMS - FirstVNF_RAM ) + ( PN + FirstVNF_CPU_Server ) ) / RRS ) * Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "( ( RMSe - MUM ) - ( RRSe / ( ( CS + RMSe ) * ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,( ACS + AMS ) )", "choosing": "Max( ( ( MUC - RCSe ) * DS ),( CS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN * ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) ) ,Max( BR,PN ) )", "choosing": "( ( RCSe - RRSe ) * ( ( ( DS / MUM ) / ( MUR * MUC ) ) + ( Min( MUM ,CS ) / Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( CRS,FirstVNF_RAM_Server ) - Max( Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ),( FirstVNF_Mem + ARS ) ) ) + ( FirstVNF_Mem * DDR ) )", "choosing": "( Min( RRSe ,( MUR * RMSe ) ) / ( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( Const / PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( ( Min( ( RMSe * RMSe ) ,Max( RCSe,MUR ) ) + Min( ( MLU * MUR ) ,( MUC - MUR ) ) ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) - ARS ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( RMSe - Max( RCSe,RRSe ) ) / ( ( Max( MUC,MLU ) + Min( DS ,CS ) ) + Max( ( MUM * MUR ),Min( MUM ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( ( Max( MUC,MLU ) + Min( DS ,CS ) ) + Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Min( BR ,BR ) - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUC - ( MUM / DS ) ) * DS ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM / ACS ) + Max( ACS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( RCSe / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,Max( ( Min( RRS ,FirstVNF_RAM_Server ) / ( AMS - DDR ) ),( AMS - ( BR - MRS ) ) ) ) )", "choosing": "Max( Min( ( RMSe * ( RCSe * RMSe ) ) ,( RMSe / ( RRSe / MLU ) ) ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / Min( CRS ,DDR ) ) - PN ) - ( RRS * MDR ) )", "choosing": "( ( RCSe + DS ) / Max( Min( DS ,RCSe ),Min( MUM ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( Max( AMS,DDR ) + Min( MRS ,( ( ARS * FirstVNF_CPU_Server ) - PN ) ) ) ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / RCSe ) / Min( MLU ,RMSe ) ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) ) + Min( MRS ,( ( ARS * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( ( RMSe / ( ( RRSe / RCSe ) / Min( MLU ,RMSe ) ) ) - ( ( Max( CS,RCSe ) + Max( RRSe,RMSe ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_RAM ) )", "choosing": "( ( Min( ( Min( ( MUC * CS ) ,DS ) + MLU ) ,( RRSe + MLU ) ) - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Min( CRS ,ACS ) ) / ( ( ( PN - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,ACS ) ) / ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - ( ACS + FirstVNF_RAM_Server ) ) ) / Min( CRS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUM + RMSe ) / ( RRSe - MLU ) ) * ( ( MUC / RCSe ) * Max( RCSe,RRSe ) ) ) ,( ( ( ( ( MUM / RCSe ) + MUC ) * Min( CS ,MUR ) ) * ( Max( DS,MUR ) + Min( DS ,DS ) ) ) * Max( ( MUR * MUC ),( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS * ( CRS - AMS ) )", "choosing": "( MUR - ( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( CRS - FirstVNF_Mem_Server ),AMS ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( RRS * MDR ) ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + Min( MLU ,MUM ) ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + ( MUM / DS ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( PN,( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + RCSe ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - ( ( CS * MLU ) - ( MUR - CS ) ) ),RCSe ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,ARS ) * Max( MRS,RRS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( ( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) ) - Const ) ) ) )", "choosing": "( ( RCSe - DS ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / MLU ),Min( RMSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,ARS ) - ( FirstVNF_CPU_Server + ( ( ( ( Const * FirstVNF_Mem_Server ) + ( MRS + MDR ) ) / ( ( Const + MRS ) + ( PN + BR ) ) ) - AMS ) ) )", "choosing": "( ( Min( DS ,MUR ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( DS / RRSe ) / ( ( MUR + MLU ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( Const - AMS ) )", "choosing": "( ( RCSe / MLU ) - ( MUM * Max( ( Min( ( RCSe / RRSe ) ,( MUR + DS ) ) + ( ( RMSe * RCSe ) * Min( RCSe ,RMSe ) ) ),( Min( ( MUC / RMSe ) ,( RMSe + RCSe ) ) * ( ( MUR / RMSe ) - ( RMSe - RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( FirstVNF_RAM - PN ) )", "choosing": "( Min( MUC ,Max( ( CS - MLU ),Min( DS ,MUM ) ) ) - ( RRSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Const ) * ( AMS - ( ( Min( ( FirstVNF_Mem_Server - ( PN - FirstVNF_CPU ) ) ,FirstVNF_CPU ) + AMS ) + ACS ) ) )", "choosing": "Max( ( MUM * Min( MLU ,( MLU * RCSe ) ) ),( MUM / ( MUM / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,( FirstVNF_RAM * ACS ) ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( ( ( CS - RCSe ) / MLU ) - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( AMS - MDR ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - ( CS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - ( Min( Const ,ARS ) * Max( MRS,RRS ) ) ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Max( ( RCSe / MLU ),Min( RMSe ,MUC ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,ARS ) * Max( MRS,RRS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( Min( ( MUR / CS ) ,( RMSe * DS ) ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / MLU ),Min( RMSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ( FirstVNF_CPU_Server - AMS ) ) - AMS )", "choosing": "( ( RCSe + DS ) / ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * Min( Max( ( CS - MLU ),Min( DS ,MUM ) ) ,Max( MUR,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( Min( MDR ,AMS ) * ( Const - ACS ) ) )", "choosing": "( ( RCSe / MLU ) - ( MUM * Max( ( Min( MUC ,( MUR + DS ) ) + ( ( RMSe * RCSe ) * Min( RCSe ,RMSe ) ) ),( Min( ( MUC / RMSe ) ,( RMSe + RCSe ) ) * ( ( MUR / RMSe ) - ( RMSe - RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU * ACS ) ,AMS ) * ( Const - ACS ) ) ,( ACS + AMS ) )", "choosing": "Max( ( ( ( ( RMSe * RCSe ) * Min( RCSe ,RMSe ) ) - RCSe ) * DS ),( CS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( Const / PN ) ) / ( ( ACS - FirstVNF_Mem_Server ) - PN ) )", "choosing": "( ( CS * Min( MUM ,CS ) ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( ( ACS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( ( CS * ( ( MLU - ( MUC - ( MUM * MLU ) ) ) + ( Min( ( ( MUM * Max( MLU,MUM ) ) - RMSe ) ,( ( ( MLU * MUM ) + Max( MUC,RRSe ) ) / MUR ) ) * DS ) ) ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,Min( MRS ,( ( ARS * FirstVNF_CPU_Server ) - PN ) ) ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUC - RCSe ) * DS ),( ( RRSe / RCSe ) / Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( Max( AMS,DDR ) + Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / RCSe ) / Min( MLU ,( CS - RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_RAM ) * ( CRS - AMS ) )", "choosing": "( MUR - ( MUM * ( ( Min( ( Min( ( MUC * CS ) ,DS ) + MLU ) ,( RRSe + MLU ) ) - MUR ) / Min( MUC ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ( CRS - AMS ) ) - Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_RAM ) )", "choosing": "( ( Min( ( Min( ( MUM * MUC ) ,DS ) + MLU ) ,( RRSe + MLU ) ) - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,( FirstVNF_RAM * ( ( DDR * ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) / ( ACS / Max( MRS,BR ) ) ) ) ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( ( ( CS - RCSe ) / MLU ) - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( CRS - AMS ) ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( MUM * MUC ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS * ( ( ( MRS / DDR ) - ( ACS / FirstVNF_Mem ) ) - AMS ) )", "choosing": "( MUR - ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),( ( FirstVNF_CPU / RRS ) - ( Const + ARS ) ) ) * Max( FirstVNF_CPU,CRS ) ) * FirstVNF_RAM_Server ) * ( BR + DDR ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( RRS * MDR ) ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + Min( MLU ,MUM ) ) + Max( RMSe,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - ( ( ( AMS * CRS ) + Max( FirstVNF_CPU_Server,PN ) ) / ( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),Min( ( ( BR * FirstVNF_RAM_Server ) * ( BR + DDR ) ) ,FirstVNF_Mem ) ) * Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( AMS - MDR ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / ( Max( BR,FirstVNF_RAM_Server ) - ( MDR + ACS ) ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / Const ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( Max( MUR,MLU ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ACS * Max( MDR,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( ( RCSe + MUM ),( RMSe * MUR ) ) ,( CS / Max( Min( DS ,MLU ),( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + MDR ) - ( MDR - FirstVNF_Mem ) ) ,Min( ( CRS - MDR ) ,Max( ( Min( RRS ,FirstVNF_RAM_Server ) / ( AMS - DDR ) ),( AMS - ( BR - MRS ) ) ) ) )", "choosing": "Max( Min( ( RMSe * ( RCSe * RMSe ) ) ,( RCSe / ( RRSe / MLU ) ) ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ACS * Min( ( Max( FirstVNF_Mem,ACS ) * ( BR / BR ) ) ,FirstVNF_Mem ) ) )", "choosing": "Min( Max( RCSe,( RMSe * MUR ) ) ,( CS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Const ) * ( AMS - ( ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) + ACS ) ) )", "choosing": "Max( ( ( ( DS - MLU ) - RMSe ) * Min( MLU ,MUM ) ),( MUM / ( MUM / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}]}