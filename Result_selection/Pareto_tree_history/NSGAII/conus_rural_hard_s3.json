{"1": [{"determining": "( Min( DDR ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,FirstVNF_CPU_Server ) ,( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * MLU ) / Max( RRSe,MLU ) )", "obj1": 0.7663366336633664, "obj2": 0.1744937238054545}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( MUC - MLU ) - Min( RCSe ,MUR ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + CS ) * ( RCSe / RMSe ) )", "obj1": 0.906930693069307, "obj2": 0.07976091548729129}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.697029702970297, "obj2": 0.2207295216943803}, {"determining": "( ( Min( MDR ,RRS ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) + ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MLU ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) / ( ( Const * MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "Max( Max( Max( ( CS - RCSe ),Max( MUM,MUR ) ),Max( Min( RCSe ,MUM ),( RMSe / DS ) ) ),Max( ( ( DS * RRSe ) - ( MLU * MUC ) ),( ( MUM - MLU ) + ( MUM / MUR ) ) ) )", "obj1": 0.6831683168316832, "obj2": 0.2635679065581331}, {"determining": "Min( Min( AMS ,ACS ) ,( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + Max( Const,( AMS - RRS ) ) ) )", "choosing": "( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) )", "obj1": 0.7346534653465346, "obj2": 0.21003984383345806}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( CS / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( AMS / ARS ) ) ,( ( ARS - FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) ) / ( ( ( BR * FirstVNF_Mem_Server ) - ( AMS / AMS ) ) - Max( ( FirstVNF_Mem_Server / AMS ),( MRS + CRS ) ) ) )", "choosing": "Min( ( Max( ( DS / MLU ),( CS * MUC ) ) + ( Max( MUM,RRSe ) / ( MUM * DS ) ) ) ,( ( Max( MUM,CS ) - Max( RRSe,MLU ) ) * ( ( MUR * MLU ) * ( RCSe / RMSe ) ) ) )", "obj1": 0.8316831683168316, "obj2": 0.12827975933877384}, {"determining": "( Max( Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( MDR + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( ( ( MLU / MUR ) - RRSe ) * ( CS + ( Max( CS,MUR ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( PN * MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - ARS ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUC * CS ) ) ) / Max( ( ( MUM + MUM ) - CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Max( ARS,Max( FirstVNF_RAM,Const ) ) ,FirstVNF_Mem ),Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "( ( ( ( RMSe - DS ) - ( MUR * MUR ) ) - Min( ( RCSe + DS ) ,( CS * MUM ) ) ) * ( ( Min( MLU ,RMSe ) + ( RCSe - RCSe ) ) * Min( ( MLU / DS ) ,( MUC / MUM ) ) ) )", "obj1": 0.695049504950495, "obj2": 0.23527857456557888}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( Max( Min( Max( BR,RRS ) ,Max( ACS,CRS ) ),( ( AMS * CRS ) + ( MDR + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( RMSe * ( CS + ( Max( MUR,RRSe ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MLU ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( ( RRSe / MLU ) / Max( MLU,RRSe ) ) - ( ( MLU + MUM ) + Max( RRSe,MLU ) ) )", "obj1": 0.900990099009901, "obj2": 0.07971447804310092}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( MDR + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( ( ( MLU / MUR ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / MUM ) ) )", "obj1": 0.996039603960396, "obj2": 0.004316943894557436}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Min( RMSe ,MLU ) ,( ( ( MUR + MLU ) - ( MUM - RRSe ) ) + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.8673267326732673, "obj2": 0.09682799681797183}, {"determining": "( Min( Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( AMS / ARS ) ) ,( ( ARS - FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) ) / ( ( ( BR * FirstVNF_Mem_Server ) - ( AMS / AMS ) ) - Max( ( FirstVNF_Mem_Server / AMS ),( MRS + CRS ) ) ) )", "choosing": "Min( ( Max( ( DS / MLU ),( CS * MUC ) ) + ( Max( MUM,RRSe ) / ( MUM * DS ) ) ) ,( ( Max( MUM,CS ) - Max( RRSe,MLU ) ) * ( ( MUR * MLU ) * ( RCSe / RMSe ) ) ) )", "obj1": 0.8316831683168316, "obj2": 0.12827975933877384}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.80990099009901, "obj2": 0.14644600215955744}, {"determining": "( ( ( ( BR - CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) / ( ( Const * MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "Max( Max( Max( ( CS - RCSe ),Max( MUM,MUR ) ),Max( Min( RCSe ,MUM ),( RMSe / DS ) ) ),Max( ( ( DS * RRSe ) - ( MLU * MUC ) ),( ( MUM - MLU ) + ( MUM / MUR ) ) ) )", "obj1": 0.6831683168316832, "obj2": 0.2635679065581331}, {"determining": "Min( Min( ARS ,FirstVNF_CPU_Server ) ,( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * MLU ) / Max( RRSe,MLU ) )", "obj1": 0.8, "obj2": 0.17351533601450433}, {"determining": "( ( FirstVNF_CPU * AMS ) + ( BR / ARS ) )", "choosing": "( ( DS * MLU ) / Max( RRSe,MLU ) )", "obj1": 0.7485148514851485, "obj2": 0.1825416517047466}, {"determining": "( ( FirstVNF_RAM * ARS ) - ( MRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RRSe + ( ( CS - RRSe ) - ( MUC / RCSe ) ) ) ,( Max( ( RCSe - MUC ),( MUC / RCSe ) ) * Min( Max( RRSe,CS ) ,( MUR / RMSe ) ) ) )", "obj1": 0.691089108910891, "obj2": 0.2514603629511062}, {"determining": "Min( Min( ( ( FirstVNF_CPU * AMS ) + ( BR / ARS ) ) ,FirstVNF_CPU_Server ) ,( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * RMSe ) / Max( RRSe,MLU ) )", "obj1": 0.7386138613861386, "obj2": 0.20081958095647273}, {"determining": "( Max( RRS,MRS ) * Max( ( ARS - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( MUM * DS ) )", "obj1": 0.7188118811881188, "obj2": 0.202648106766895}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.695049504950495, "obj2": 0.2305469129586716}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * ( FirstVNF_CPU - MRS ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,( DS + MUR ) ) ) )", "obj1": 0.7089108910891089, "obj2": 0.21695508464085816}, {"determining": "Min( Min( ARS ,FirstVNF_CPU_Server ) ,( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * MLU ) / Max( RRSe,MLU ) )", "obj1": 0.7663366336633664, "obj2": 0.1744937238054545}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,CS ) ) )", "obj1": 0.697029702970297, "obj2": 0.2207295216943803}, {"determining": "Min( Min( ARS ,FirstVNF_CPU_Server ) ,( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * MLU ) / Max( RRSe,MLU ) )", "obj1": 0.7663366336633664, "obj2": 0.1744937238054545}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.697029702970297, "obj2": 0.2207295216943803}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + RRS ) )", "choosing": "( ( ( MLU + RCSe ) + ( RCSe / MLU ) ) + ( ( CS - CS ) * ( RMSe * MLU ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( MUC - MLU ) - Min( RCSe ,MUR ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,RRS ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) + ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( CS / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( MDR + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( ( ( MLU / MUR ) - RRSe ) * ( CS + ( Max( CS,MUR ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( PN * MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - ARS ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUC * CS ) ) ) / Max( ( ( MUM + MUM ) - CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - ( PN - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU_Server + ARS ) ,Min( DDR ,MRS ) ) ) ,Min( ( ( Const / FirstVNF_CPU ) - Min( ACS ,ACS ) ) ,Max( ( FirstVNF_Mem / FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( Min( ( MRS - RRS ) ,( BR - ARS ) ) ,( Max( ACS,FirstVNF_CPU_Server ) + ( MDR + ARS ) ) ) * ( ( ( CRS + AMS ) / ( AMS - RRS ) ) - ( ( ACS * RRS ) - Min( Const ,FirstVNF_CPU ) ) ) ) ) ,( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + ( ACS * FirstVNF_CPU_Server ) ) * Min( Max( FirstVNF_CPU_Server,MRS ) ,( FirstVNF_Mem_Server * ACS ) ) ) / ( ( ( FirstVNF_Mem / RRS ) - ( FirstVNF_RAM_Server / ARS ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem ) * Max( MDR,MRS ) ) ) ) * ( ( ( ( FirstVNF_CPU_Server - PN ) + ( FirstVNF_RAM - CRS ) ) + ( Min( FirstVNF_Mem_Server ,AMS ) * ( ACS * DDR ) ) ) / ( Max( ( FirstVNF_RAM_Server * MDR ),( AMS + DDR ) ) + Min( Max( CRS,PN ) ,( Const / Const ) ) ) ) ) ) * Min( ( Min( ( ( ( RRS / Const ) + ( AMS + AMS ) ) * ( ( Const - FirstVNF_RAM ) - Max( FirstVNF_Mem,ACS ) ) ) ,( Min( ( ARS * PN ) ,( MDR + FirstVNF_RAM_Server ) ) / ( Max( MRS,BR ) - ( MDR + ACS ) ) ) ) + ( ( ( Max( FirstVNF_CPU_Server,DDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) - Max( ( CRS * CRS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) / ( Min( Min( ACS ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - ( ( DDR / BR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ,( Max( ( ( ( PN - FirstVNF_Mem_Server ) * ( BR - AMS ) ) + ( ( Const + FirstVNF_CPU ) + ( AMS - FirstVNF_CPU ) ) ),Min( ( ( FirstVNF_CPU / PN ) / ( BR * BR ) ) ,( Min( Const ,BR ) - ( MDR - FirstVNF_CPU_Server ) ) ) ) / Min( ( ( ( AMS + MRS ) - Min( AMS ,AMS ) ) * ( Min( RRS ,FirstVNF_RAM ) * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU - FirstVNF_CPU ) ) * Max( Min( BR ,FirstVNF_CPU ),( FirstVNF_RAM + FirstVNF_Mem ) ) ) ) ) ) ) / Min( ( Min( ( ( ( ( BR - FirstVNF_Mem_Server ) - Min( ACS ,ACS ) ) - Min( ( DDR / MRS ) ,( MRS - PN ) ) ) - ( ( Max( AMS,ARS ) - ( ACS / FirstVNF_RAM ) ) + ( ( ARS - FirstVNF_RAM ) + Max( CRS,FirstVNF_Mem_Server ) ) ) ) ,Min( ( ( ( RRS - FirstVNF_Mem ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server - PN ) - ( RRS + FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( FirstVNF_RAM ,RRS ) ) / ( ( ACS + FirstVNF_Mem_Server ) + ( Const - AMS ) ) ) ) ) + Max( Max( Min( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( ACS,Const ) ) ,Max( Max( Const,FirstVNF_CPU_Server ),Max( FirstVNF_Mem,MDR ) ) ),Min( ( ( MDR - MDR ) - Max( AMS,ACS ) ) ,( Min( FirstVNF_RAM_Server ,CRS ) * ( MDR + RRS ) ) ) ),Min( Max( ( ( PN * FirstVNF_Mem_Server ) - ( Const + PN ) ),( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) ,Max( ( Max( AMS,BR ) + ( FirstVNF_RAM - FirstVNF_Mem_Server ) ),( Min( PN ,RRS ) * ( BR / BR ) ) ) ) ) ) ,( Max( ( ( ( ( ACS / DDR ) * ( FirstVNF_RAM - BR ) ) * ( ( MDR - PN ) + ( FirstVNF_RAM_Server / PN ) ) ) - Min( Max( Min( ACS ,FirstVNF_CPU ),( AMS * BR ) ) ,( Min( FirstVNF_RAM ,AMS ) * ( FirstVNF_Mem - ACS ) ) ) ),Max( ( ( Min( MDR ,AMS ) + Min( ACS ,ARS ) ) + Min( ( ARS / PN ) ,( MDR * ARS ) ) ),Max( ( Min( FirstVNF_Mem_Server ,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM ) ),( ( DDR - MDR ) + ( FirstVNF_CPU * ARS ) ) ) ) ) - ( ( ( ( ( FirstVNF_Mem / ACS ) - ( FirstVNF_Mem_Server + ACS ) ) + ( ( FirstVNF_RAM_Server + CRS ) * ( FirstVNF_Mem_Server + ACS ) ) ) + ( Min( ( PN - CRS ) ,Max( DDR,RRS ) ) - ( ( BR - AMS ) - Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( Max( Min( ( FirstVNF_Mem_Server + Const ) ,Max( DDR,ACS ) ),( Min( MDR ,RRS ) + ( FirstVNF_Mem + MDR ) ) ) - ( Min( Min( FirstVNF_RAM ,PN ) ,( FirstVNF_CPU_Server * MDR ) ) + Min( ( ACS * FirstVNF_RAM_Server ) ,( MRS * FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) / ( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const + ( CRS - ACS ) )", "choosing": "( Min( RMSe ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( MUM * MLU ) ) * ( CS / Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( ( CS * RCSe ) - ( MUM * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( FirstVNF_RAM * Const ) ) - Min( ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( ( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) ) / Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * MRS ) / ( FirstVNF_RAM * Const ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( PN,MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUR * CS ) ) ) / Max( ( ( MUM - MUM ) - CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( PN * MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - ARS ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUC * CS ) ) ) / Max( ( ( MUM + MUM ) - CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Min( FirstVNF_CPU_Server ,ACS ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( ( MUR / CS ) / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( PN * MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) ) ,Min( PN ,FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,Max( ( ( MUM - MUM ) - CS ),RMSe ) ) + ( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( PN * MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( Max( PN,PN ) ,Min( PN ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUC * CS ) ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( PN * MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( Min( RCSe ,MLU ) + ( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) ,Max( RMSe,MUR ) ) ,( Min( MUM ,MUM ) / Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( MDR - ACS ) )", "choosing": "( Min( MUR ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( ( Max( RMSe,RCSe ) + ( MUR * MLU ) ),( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( ( Max( RMSe,RCSe ) + ( MUR * MLU ) ) * Max( ( MUC / RMSe ),( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( MRS - MDR ) + ( CRS - BR ) )", "choosing": "( ( MUM + MUC ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( BR,RRS ) ,Max( ACS,CRS ) ),( ( AMS * CRS ) + ( MDR + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( RMSe * ( CS + ( Max( MUR,RRSe ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MLU ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( ( ( ( BR - CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) / ( ( Const * MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "Max( Max( Max( ( CS - RCSe ),Max( MUM,MUR ) ),Max( Min( RCSe ,MUM ),( RMSe / DS ) ) ),Max( ( ( DS * RRSe ) - ( MLU * MUC ) ),( ( MUM - MLU ) + ( MUM / MUR ) ) ) )", "obj1": 0.6831683168316832, "obj2": 0.2635679065581331}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( ( Max( ( Max( RMSe,RCSe ) + ( MUR * MLU ) ),( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( MUC + MUC ) + ( DS - RCSe ) ) )", "obj1": 0.9326732673267327, "obj2": 0.03581269420551987}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( MUR - DS ) / ( MUR - DS ) )", "obj1": 0.9623762376237623, "obj2": 0.017905878032290833}, {"determining": "( ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) + ( BR / ARS ) )", "choosing": "( ( DS * MLU ) / Max( RRSe,( ( RCSe / RRSe ) + ( DS + MUM ) ) ) )", "obj1": 0.8495049504950495, "obj2": 0.11133476817632088}, {"determining": "( Max( RRS,MRS ) * Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS * MLU ) + Max( RRSe,MLU ) ) * ( MUM * MLU ) )", "obj1": 0.7386138613861386, "obj2": 0.17905551432385894}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( ( FirstVNF_RAM + MRS ) ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS - MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( MLU ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.9128712871287129, "obj2": 0.048168370241587065}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) * Max( ( FirstVNF_CPU - CRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.689108910891089, "obj2": 0.22972823196360712}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Min( RMSe ,MLU ) ,( ( ( MUR + MLU ) - ( MUM - RRSe ) ) + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.8673267326732673, "obj2": 0.09682799681797183}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( ( ( MUR + MLU ) - ( MUM - RRSe ) ) + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.8752475247524752, "obj2": 0.08812876102282946}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( CS / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 0.9841584158415841, "obj2": 0.007640017558650272}, {"determining": "( Max( RRS,MRS ) * Max( ( ARS - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( MUM * DS ) )", "obj1": 0.7346534653465346, "obj2": 0.20184959570938454}, {"determining": "( Min( Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( AMS / ARS ) ) ,( ( ARS - FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) ) / ( ( ( BR * FirstVNF_Mem_Server ) - ( AMS / AMS ) ) - Max( ( FirstVNF_Mem_Server / AMS ),( MRS + CRS ) ) ) )", "choosing": "Min( ( Max( ( DS / MLU ),( CS * MUC ) ) + ( Max( MUM,RRSe ) / ( MUM * DS ) ) ) ,( ( Max( MUM,CS ) - Max( RRSe,MLU ) ) * ( ( MUR * MLU ) * ( RCSe / RMSe ) ) ) )", "obj1": 0.8316831683168316, "obj2": 0.12827975933877384}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( DS + MUR ) * ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.7881188118811882, "obj2": 0.15426591027458386}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 0.9108910891089109, "obj2": 0.06905894216600643}, {"determining": "( ( ( ARS / Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + RCSe ) - Min( RRSe ,( DS + MUR ) ) ) ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.8277227722772277, "obj2": 0.13179609073493992}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) * Max( Min( Min( ( ( FirstVNF_CPU * AMS ) + ( BR / ARS ) ) ,FirstVNF_CPU_Server ) ,( BR + FirstVNF_CPU ) ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( DS * RMSe ) / Max( RRSe,MLU ) ) ) * ( ( RMSe / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.7049504950495049, "obj2": 0.20923924356709822}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,( DS + MUR ) ) ) )", "obj1": 0.7821782178217822, "obj2": 0.16163674156043917}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( ( RRSe / MLU ) / Max( MLU,RRSe ) ) - ( ( MLU + MUM ) + Max( RRSe,MLU ) ) )", "obj1": 0.900990099009901, "obj2": 0.07971447804310092}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.80990099009901, "obj2": 0.14644600215955744}, {"determining": "( Max( RRS,MRS ) * Max( ( ARS - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( MUM * DS ) )", "obj1": 0.7188118811881188, "obj2": 0.202648106766895}, {"determining": "Min( Min( ARS ,FirstVNF_CPU_Server ) ,( BR + FirstVNF_CPU ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) + ( DS - RCSe ) ) )", "obj1": 0.7603960396039604, "obj2": 0.17039660663978196}, {"determining": "( Max( RRS,MRS ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( DS * MLU ) / Max( RRSe,MLU ) )", "obj1": 0.7623762376237624, "obj2": 0.16940214445676863}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.80990099009901, "obj2": 0.14644600215955744}, {"determining": "Min( ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUC * CS ) ) ) / ( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) ) )", "obj1": 0.906930693069307, "obj2": 0.0784617514357794}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( AMS * CRS ) + ( MDR + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( Max( MUM,MUC ) / ( CS * MUR ) )", "obj1": 0.996039603960396, "obj2": 0.0033433691617252973}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,CS ) ) )", "obj1": 0.697029702970297, "obj2": 0.2207295216943803}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) - MRS ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) + Min( RRSe ,( DS + MUR ) ) ) )", "obj1": 0.693069306930693, "obj2": 0.2242034254302553}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.697029702970297, "obj2": 0.2207295216943803}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) * Max( MRS,Const ) )", "choosing": "( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) ) * ( ( MUR / MLU ) + ( RMSe - RMSe ) ) )", "obj1": 0.695049504950495, "obj2": 0.22395994990258386}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + RRS ) )", "choosing": "( ( ( MLU + RCSe ) + ( RCSe / MLU ) ) + ( ( CS - CS ) * ( RMSe * MLU ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( Min( DDR ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,RRS ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) + ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( CS / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( MDR + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( ( ( MLU / MUR ) - RRSe ) * ( CS + ( Max( CS,MUR ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( PN * MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - ARS ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUC * CS ) ) ) / Max( ( ( MUM + MUM ) - CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - ( PN - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU_Server + ARS ) ,Min( DDR ,MRS ) ) ) ,Min( ( ( Const / FirstVNF_CPU ) - Min( ACS ,ACS ) ) ,Max( ( FirstVNF_Mem / FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( Min( ( MRS - RRS ) ,( BR - ARS ) ) ,( Max( ACS,FirstVNF_CPU_Server ) + ( MDR + ARS ) ) ) * ( ( ( CRS + AMS ) / ( AMS - RRS ) ) - ( ( ACS * RRS ) - Min( Const ,FirstVNF_CPU ) ) ) ) ) ,( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + ( ACS * FirstVNF_CPU_Server ) ) * Min( Max( FirstVNF_CPU_Server,MRS ) ,( FirstVNF_Mem_Server * ACS ) ) ) / ( ( ( FirstVNF_Mem / RRS ) - ( FirstVNF_RAM_Server / ARS ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem ) * Max( MDR,MRS ) ) ) ) * ( ( ( ( FirstVNF_CPU_Server - PN ) + ( FirstVNF_RAM - CRS ) ) + ( Min( FirstVNF_Mem_Server ,AMS ) * ( ACS * DDR ) ) ) / ( Max( ( FirstVNF_RAM_Server * MDR ),( AMS + DDR ) ) + Min( Max( CRS,PN ) ,( Const / Const ) ) ) ) ) ) * Min( ( Min( ( ( ( RRS / Const ) + ( AMS + AMS ) ) * ( ( Const - FirstVNF_RAM ) - Max( FirstVNF_Mem,ACS ) ) ) ,( Min( ( ARS * PN ) ,( MDR + FirstVNF_RAM_Server ) ) / ( Max( MRS,BR ) - ( MDR + ACS ) ) ) ) + ( ( ( Max( FirstVNF_CPU_Server,DDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) - Max( ( CRS * CRS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) / ( Min( Min( ACS ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - ( ( DDR / BR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ,( Max( ( ( ( PN - FirstVNF_Mem_Server ) * ( BR - AMS ) ) + ( ( Const + FirstVNF_CPU ) + ( AMS - FirstVNF_CPU ) ) ),Min( ( ( FirstVNF_CPU / PN ) / ( BR * BR ) ) ,( Min( Const ,BR ) - ( MDR - FirstVNF_CPU_Server ) ) ) ) / Min( ( ( ( AMS + MRS ) - Min( AMS ,AMS ) ) * ( Min( RRS ,FirstVNF_RAM ) * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU - FirstVNF_CPU ) ) * Max( Min( BR ,FirstVNF_CPU ),( FirstVNF_RAM + FirstVNF_Mem ) ) ) ) ) ) ) / Min( ( Min( ( ( ( ( BR - FirstVNF_Mem_Server ) - Min( ACS ,ACS ) ) - Min( ( DDR / MRS ) ,( MRS - PN ) ) ) - ( ( Max( AMS,ARS ) - ( ACS / FirstVNF_RAM ) ) + ( ( ARS - FirstVNF_RAM ) + Max( CRS,FirstVNF_Mem_Server ) ) ) ) ,Min( ( ( ( RRS - FirstVNF_Mem ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server - PN ) - ( RRS + FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( FirstVNF_RAM ,RRS ) ) / ( ( ACS + FirstVNF_Mem_Server ) + ( Const - AMS ) ) ) ) ) + Max( Max( Min( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( ACS,Const ) ) ,Max( Max( Const,FirstVNF_CPU_Server ),Max( FirstVNF_Mem,MDR ) ) ),Min( ( ( MDR - MDR ) - Max( AMS,ACS ) ) ,( Min( FirstVNF_RAM_Server ,CRS ) * ( MDR + RRS ) ) ) ),Min( Max( ( ( PN * FirstVNF_Mem_Server ) - ( Const + PN ) ),( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) ,Max( ( Max( AMS,BR ) + ( FirstVNF_RAM - FirstVNF_Mem_Server ) ),( Min( PN ,RRS ) * ( BR / BR ) ) ) ) ) ) ,( Max( ( ( ( ( ACS / DDR ) * ( FirstVNF_RAM - BR ) ) * ( ( MDR - PN ) + ( FirstVNF_RAM_Server / PN ) ) ) - Min( Max( Min( ACS ,FirstVNF_CPU ),( AMS * BR ) ) ,( Min( FirstVNF_RAM ,AMS ) * ( FirstVNF_Mem - ACS ) ) ) ),Max( ( ( Min( MDR ,AMS ) + Min( ACS ,ARS ) ) + Min( ( ARS / PN ) ,( MDR * ARS ) ) ),Max( ( Min( FirstVNF_Mem_Server ,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM ) ),( ( DDR - MDR ) + ( FirstVNF_CPU * ARS ) ) ) ) ) - ( ( ( ( ( FirstVNF_Mem / ACS ) - ( FirstVNF_Mem_Server + ACS ) ) + ( ( FirstVNF_RAM_Server + CRS ) * ( FirstVNF_Mem_Server + ACS ) ) ) + ( Min( ( PN - CRS ) ,Max( DDR,RRS ) ) - ( ( BR - AMS ) - Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( Max( Min( ( FirstVNF_Mem_Server + Const ) ,Max( DDR,ACS ) ),( Min( MDR ,RRS ) + ( FirstVNF_Mem + MDR ) ) ) - ( Min( Min( FirstVNF_RAM ,PN ) ,( FirstVNF_CPU_Server * MDR ) ) + Min( ( ACS * FirstVNF_RAM_Server ) ,( MRS * FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) / ( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const + ( CRS - ACS ) )", "choosing": "( Min( RMSe ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( MUM * MLU ) ) * ( CS / Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( ( CS * RCSe ) - ( MUM * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( FirstVNF_RAM * Const ) ) - Min( ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( ( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) ) / Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server * MRS ) / ( FirstVNF_RAM * Const ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * RCSe )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( FirstVNF_Mem * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MLU ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),Max( PN,Max( MRS,Const ) ) ) - ( ( Max( FirstVNF_Mem_Server,MDR ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( ( ( DS / MUR ) - RRSe ) * ( CS + ( Max( MUR,RMSe ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - BR ) )", "choosing": "( ( MUM + MUC ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ARS * FirstVNF_CPU ) ) / ( Const - ARS ) )", "choosing": "( ( ( ( MLU / RRSe ) * ( CS - DS ) ) - ( Min( MUC ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR - ( RMSe * ( CS + ( Max( RCSe,RRSe ) / MUM ) ) ) ) / ( MUR - DS ) )", "obj1": 0.8653465346534653, "obj2": 0.05217055029180638}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( MLU ,( RMSe + MUM ) ) - ( Max( ( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ),CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.8613861386138614, "obj2": 0.09656434883220248}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.6475247524752475, "obj2": 0.26191991677599363}, {"determining": "( Max( RRS,PN ) * FirstVNF_CPU )", "choosing": "( ( ( DS * MUR ) * MUR ) * ( MUM * DS ) )", "obj1": 0.7207920792079208, "obj2": 0.19593134525881672}, {"determining": "( ( ( FirstVNF_RAM_Server - PN ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) + ( BR / ARS ) )", "choosing": "( ( DS * MLU ) / Max( RRSe,( ( RCSe / RRSe ) + ( DS + MUM ) ) ) )", "obj1": 0.8495049504950495, "obj2": 0.11133476817632088}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( ( FirstVNF_RAM + MRS ) ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( MLU ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.906930693069307, "obj2": 0.05091698492375087}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( FirstVNF_CPU,BR ) / ( Const + BR ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( ( Max( ( Max( RMSe,RCSe ) + ( MUR * MLU ) ),( MUC * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,Max( ( MUC + MUC ),( DS - RCSe ) ) )", "obj1": 0.9366336633663367, "obj2": 0.031626431832397085}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + Min( RRSe ,( DS + MUR ) ) )", "obj1": 0.8237623762376237, "obj2": 0.12881236833388607}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.80990099009901, "obj2": 0.14644600215955744}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( CS * RCSe ) - ( MUM * MLU ) )", "obj1": 0.9603960396039604, "obj2": 0.020981894513515183}, {"determining": "( Max( RRS,MRS ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( DS * MLU ) / Max( RRSe,MLU ) )", "obj1": 0.7544554455445545, "obj2": 0.16999525961335604}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) + Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) * Max( MRS,Const ) )", "choosing": "( ( MUM - RRSe ) + Max( RMSe,MUR ) )", "obj1": 0.6693069306930693, "obj2": 0.23964108248787194}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( MUM * DS ) )", "obj1": 0.8356435643564356, "obj2": 0.11310807872757604}, {"determining": "( Max( RRS,MRS ) * ( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( DS * MLU ) / Max( ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ),MLU ) )", "obj1": 0.7564356435643564, "obj2": 0.15980245158741296}, {"determining": "( Max( RRS,MRS ) * ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( Min( DS ,MUC ) / Max( RRSe,MLU ) ) * ( MUM * MLU ) )", "obj1": 0.7386138613861386, "obj2": 0.17905551432385894}, {"determining": "( ( ( ( BR - CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) / ( ( Const * MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "Max( Max( Max( ( CS - RCSe ),Max( MUM,MUR ) ),Max( Min( RCSe ,MUM ),( RMSe / DS ) ) ),Max( ( ( DS * RRSe ) - ( MLU * MUC ) ),( ( MUM - MLU ) + ( MUM / MUR ) ) ) )", "obj1": 0.6574257425742575, "obj2": 0.2502863716788851}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) * Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS * MLU ) / Max( RRSe,( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) ) ) * ( MUM * MLU ) )", "obj1": 0.7782178217821782, "obj2": 0.15836485757869148}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUC * CS ) ) ) / ( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) ) )", "obj1": 0.9683168316831683, "obj2": 0.015294770971914385}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( DS + MUR ) * ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.7881188118811882, "obj2": 0.15426591027458386}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( ( FirstVNF_RAM + MRS ) ,ARS ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 0.9207920792079208, "obj2": 0.041456214034932465}, {"determining": "( Min( Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( AMS / ARS ) ) ,( ( ARS - FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) ) / ( ( ( BR * FirstVNF_Mem_Server ) - ( AMS / AMS ) ) - Max( ( FirstVNF_Mem_Server / AMS ),( MRS + CRS ) ) ) )", "choosing": "Min( ( Max( ( DS / MLU ),( CS * MUC ) ) + ( Max( MUM,RRSe ) / ( MUM * DS ) ) ) ,( ( Max( MUM,CS ) - Max( RRSe,MLU ) ) * ( ( MUR * MLU ) * ( RCSe / RMSe ) ) ) )", "obj1": 0.8316831683168316, "obj2": 0.12827975933877384}, {"determining": "( Max( RRS,MRS ) * Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS * MLU ) + Max( RRSe,MLU ) ) * ( MUM * MLU ) )", "obj1": 0.7386138613861386, "obj2": 0.17905551432385894}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) * Max( ( FirstVNF_CPU - CRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.689108910891089, "obj2": 0.22972823196360712}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.80990099009901, "obj2": 0.14644600215955744}, {"determining": "( Max( RRS,MRS ) * Max( ( ARS - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,( DS + MUR ) ) ) )", "obj1": 0.695049504950495, "obj2": 0.21861165027019616}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) * Max( Min( Min( ( ( FirstVNF_CPU * AMS ) + ( BR / ARS ) ) ,FirstVNF_CPU_Server ) ,( BR + FirstVNF_CPU ) ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( DS * RMSe ) / Max( RRSe,MLU ) ) ) * ( ( RMSe / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.699009900990099, "obj2": 0.21084142735482012}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) - MRS ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) + Min( RRSe ,( DS + MUR ) ) ) )", "obj1": 0.693069306930693, "obj2": 0.2242034254302553}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( ( FirstVNF_RAM + MRS ) ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS - MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( MLU ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.9128712871287129, "obj2": 0.048168370241587065}, {"determining": "( Max( RRS,MRS ) * Max( ( ARS - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( MUM * DS ) )", "obj1": 0.7188118811881188, "obj2": 0.202648106766895}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( ( Max( ( Max( RMSe,RCSe ) + ( MUR * MLU ) ),( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( MUC + MUC ) + ( DS - RCSe ) ) )", "obj1": 0.9306930693069307, "obj2": 0.036476979206557035}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) * Max( ( Max( RRS,MRS ) - CRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) ) * ( Max( RRSe,MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.7128712871287128, "obj2": 0.20538200075755453}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.689108910891089, "obj2": 0.22972823196360712}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( ( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) ) / Max( RCSe,RCSe ) ) )", "obj1": 0.9861386138613861, "obj2": 0.007252525073903597}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) * Max( Min( Min( ( ( FirstVNF_CPU * AMS ) + ( BR / ARS ) ) ,FirstVNF_CPU_Server ) ,( BR + FirstVNF_CPU ) ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( ( ( MUR + MLU ) - ( MUM - RRSe ) ) + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6594059405940594, "obj2": 0.2429030644960236}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( CS / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 0.9841584158415841, "obj2": 0.007640017558650272}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( MUR - DS ) / ( MUR - DS ) )", "obj1": 0.9623762376237623, "obj2": 0.017905878032290833}, {"determining": "Min( ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 0.7861386138613862, "obj2": 0.15474065264672296}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,( ( DS + MUR ) * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.6613861386138614, "obj2": 0.2405467372109545}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( AMS * CRS ) + ( MDR + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( Max( MUM,MUC ) / ( CS * MUR ) )", "obj1": 0.996039603960396, "obj2": 0.0033433691617252973}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( ( FirstVNF_Mem - BR ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) ) - AMS ) ) )", "choosing": "Min( ( ( Max( ( Max( DS,DS ) - CS ),( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( MUC + MUC ) + ( DS - RCSe ) ) )", "obj1": 0.7069306930693069, "obj2": 0.20793227339273218}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( CS / CS ) ) * ( RRSe / RCSe ) )", "obj1": 0.9841584158415841, "obj2": 0.007640017558650272}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( ( Max( ( Max( RMSe,RCSe ) + ( MUR * MLU ) ),( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( MUC + MUC ) + ( DS - RCSe ) ) )", "obj1": 0.9326732673267327, "obj2": 0.03581269420551987}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) * Max( Min( Min( ( ( FirstVNF_CPU * AMS ) + ( BR / ARS ) ) ,FirstVNF_CPU_Server ) ,( BR + FirstVNF_CPU ) ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( DS * RMSe ) / Max( RRSe,MLU ) ) ) * ( ( RMSe / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.7049504950495049, "obj2": 0.20923924356709822}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( ( FirstVNF_RAM + MRS ) ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( MLU ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.9089108910891089, "obj2": 0.04827029122508397}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( AMS * CRS ) + ( MDR + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( Max( MUM,MUC ) / ( CS * MUR ) )", "obj1": 0.996039603960396, "obj2": 0.0033433691617252973}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + RRS ) )", "choosing": "( ( ( MLU + RCSe ) + ( RCSe / MLU ) ) + ( ( CS - CS ) * ( RMSe * MLU ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}], "5": [{"determining": "( ( FirstVNF_Mem * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MLU ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( ( FirstVNF_Mem_Server * ( ARS * FirstVNF_CPU ) ) / ( Const - ARS ) )", "choosing": "( ( ( DS * MLU ) / Max( RRSe,MLU ) ) * ( MUM * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),Max( PN,Max( MRS,Const ) ) ) - ( ( Max( FirstVNF_Mem_Server,MDR ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( ( ( DS / MUR ) - RRSe ) * ( CS + ( Max( MUR,RMSe ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) ) / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUC ) / ( DS / RCSe ) ) * Max( Max( RMSe,RMSe ),( MUC * CS ) ) ) / ( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) ) )", "obj1": 0.8198019801980198, "obj2": 0.08310988882631973}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) - Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( Min( Max( MUC,CS ) ,Min( MLU ,( ( DS + MUR ) * Max( DS,MUM ) ) ) ) / Max( RCSe,RCSe ) ) )", "obj1": 0.8158415841584158, "obj2": 0.13175921889742867}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR - ( RMSe * ( CS + ( Max( RCSe,RRSe ) / MUM ) ) ) ) / ( MUR - DS ) )", "obj1": 0.8653465346534653, "obj2": 0.05217055029180638}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( FirstVNF_RAM + MRS ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( RMSe * RCSe ) - ( MUM * MLU ) )", "obj1": 0.897029702970297, "obj2": 0.042271424335524894}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) + Min( RRSe ,( DS + MUR ) ) ) )", "obj1": 0.7940594059405941, "obj2": 0.14320375738274016}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( ( DS * MLU ) / Max( RRSe,MLU ) ) * ( MUM * MLU ) )", "obj1": 0.9168316831683169, "obj2": 0.03262652776865187}, {"determining": "( Max( RRS,PN ) * FirstVNF_CPU )", "choosing": "( ( ( DS * MUR ) * MUR ) * ( MUM * DS ) )", "obj1": 0.7207920792079208, "obj2": 0.19593134525881672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) * Max( MRS,Const ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + Max( RMSe,MUR ) )", "obj1": 0.6653465346534654, "obj2": 0.23144290940391712}, {"determining": "( Max( PN,Max( MRS,Const ) ) * ( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( DS * MLU ) / Max( ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( Max( DS,DS ) + RRSe ) ),MLU ) )", "obj1": 0.7544554455445545, "obj2": 0.16535410986317128}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR - ( RMSe * ( CS + ( Max( RCSe,RRSe ) / MUM ) ) ) ) / ( MUR - DS ) )", "obj1": 0.8712871287128713, "obj2": 0.04987108569757679}, {"determining": "( Max( RRS,MRS ) * Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS * MLU ) + Max( RRSe,MLU ) ) * ( MUM * MLU ) )", "obj1": 0.7386138613861386, "obj2": 0.17905551432385894}, {"determining": "( Max( RRS,MRS ) * ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( Min( DS ,MUC ) / Max( RRSe,MLU ) ) * ( MUM * MLU ) )", "obj1": 0.7386138613861386, "obj2": 0.17905551432385894}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "Min( ( ( Max( ( Max( DS,DS ) - CS ),( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( MUC + MUC ) + ( DS - RCSe ) ) )", "obj1": 0.6811881188118812, "obj2": 0.21856483774967772}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * CRS ) ) )", "choosing": "( ( ( Max( MUM,MUC ) / ( CS * MUR ) ) * RCSe ) - ( MUM * MLU ) )", "obj1": 0.9663366336633663, "obj2": 0.013803010878791275}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) * Max( Min( Min( ( ( FirstVNF_CPU * AMS ) + ( BR / ARS ) ) ,FirstVNF_CPU_Server ) ,( BR + FirstVNF_CPU ) ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( DS * RMSe ) / Max( RRSe,MLU ) ) ) * ( ( RMSe / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.699009900990099, "obj2": 0.21084142735482012}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.9504950495049505, "obj2": 0.02380393451581408}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.6475247524752475, "obj2": 0.26191991677599363}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( ( FirstVNF_Mem - ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) ) - AMS ) ) )", "choosing": "Min( ( ( ( ( RMSe + RCSe ) - CS ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( MUC + MUC ) + ( DS - RCSe ) ) )", "obj1": 0.7128712871287128, "obj2": 0.19777757338681015}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MUM,MUC ) / ( CS * MUR ) )", "obj1": 0.9564356435643564, "obj2": 0.017426897706671947}, {"determining": "( ( ( ( BR - CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) / ( ( Const * MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "Max( Max( Max( ( CS - RCSe ),Max( MUM,MUR ) ),Max( Min( RCSe ,MUM ),( RMSe / DS ) ) ),Max( ( ( DS * RRSe ) - ( MLU * MUC ) ),( ( MUM - MLU ) + ( MUM / MUR ) ) ) )", "obj1": 0.6574257425742575, "obj2": 0.2502863716788851}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( FirstVNF_CPU,BR ) / ( Const + BR ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( ( Max( ( Max( RMSe,RCSe ) + ( MUR * MLU ) ),( MUC * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,Max( ( MUC + MUC ),( DS - RCSe ) ) )", "obj1": 0.9366336633663367, "obj2": 0.031626431832397085}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( CS * RCSe ) - ( MUM * DS ) )", "obj1": 0.9821782178217822, "obj2": 0.010370673815533098}, {"determining": "( Max( RRS,MRS ) * ( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) + Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS * MLU ) / Max( ( ( MUM - RRSe ) * ( RRSe + RRSe ) ),MLU ) )", "obj1": 0.7564356435643564, "obj2": 0.1589263549165746}, {"determining": "( ARS - ( ( FirstVNF_Mem - BR ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) ) - AMS ) ) )", "choosing": "Min( ( ( Max( ( Max( DS,DS ) - CS ),( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( ( RRSe - ( ( RMSe + RCSe ) - CS ) ),( MLU + DS ) ) ) ) * MLU ) ,( ( MUC + MUC ) + ( DS - RCSe ) ) )", "obj1": 0.6811881188118812, "obj2": 0.21856483774967772}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( ( FirstVNF_Mem - BR ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) ) - AMS ) ) )", "choosing": "Min( ( ( Max( ( Max( DS,DS ) - CS ),( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( MUC + MUC ) + ( DS - RCSe ) ) )", "obj1": 0.7069306930693069, "obj2": 0.20793227339273218}, {"determining": "( ( ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) * ( ACS * FirstVNF_CPU ) ) / ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - ( ( MLU / MUR ) - RRSe ) ) )", "obj1": 0.6495049504950495, "obj2": 0.2566639160066738}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.9425742574257425, "obj2": 0.030647100373987622}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( DS + MUR ) * ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.7881188118811882, "obj2": 0.15426591027458386}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) / CS ) ) * ( RRSe / RCSe ) )", "obj1": 0.9841584158415841, "obj2": 0.006246805882034554}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + ( Max( MUM,MUC ) / ( CS * MUR ) ) ) - CS ) ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.7722772277227723, "obj2": 0.158622974840084}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( DS * RMSe ) / Max( RRSe,MLU ) ) ) * ( ( RMSe / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.994059405940594, "obj2": 0.002541144007117321}, {"determining": "( Max( RRS,MRS ) * Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( MUR - ( RMSe * ( CS + ( Max( MUR,RRSe ) / MUM ) ) ) ) / ( MUR - DS ) )", "obj1": 0.6594059405940594, "obj2": 0.24253247119896595}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,( ( DS + MUR ) * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.6613861386138614, "obj2": 0.2405467372109545}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) * Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS * MLU ) / Max( RRSe,( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) ) ) * ( MUM * MLU ) )", "obj1": 0.7782178217821782, "obj2": 0.15836485757869148}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.7841584158415842, "obj2": 0.15717100339021192}, {"determining": "( Max( FirstVNF_CPU,MRS ) * Max( ( ARS - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) ) * Max( DS,MUM ) ) * ( MUM * DS ) )", "obj1": 0.700990099009901, "obj2": 0.20824692820779747}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,( ( DS + MUR ) * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.6613861386138614, "obj2": 0.2405467372109545}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.6475247524752475, "obj2": 0.26191991677599363}, {"determining": "Min( ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 0.7861386138613862, "obj2": 0.15474065264672296}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + RRS ) )", "choosing": "( ( ( MLU + RCSe ) + ( RCSe / MLU ) ) + ( ( CS - CS ) * ( RMSe * MLU ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "Min( ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 0.7861386138613862, "obj2": 0.15474065264672296}, {"determining": "( ( MRS - MDR ) + ( CRS - BR ) )", "choosing": "( ( MUM + MUC ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_Mem - BR ) ) ) )", "choosing": "( ( ( DS + Max( MUM,( MLU + DS ) ) ) * ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) ) - Min( ( FirstVNF_RAM + MRS ) ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS - MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - ( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( DS * RMSe ) / Max( RRSe,MLU ) ) ) * ( ( RMSe / MLU ) + Min( RRSe ,MUC ) ) ) ) ) ) + ( Min( MLU ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( ( MUM + RRSe ) + Max( RMSe,MUR ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( ( FirstVNF_RAM + ( Const + ARS ) ) ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) ) + ( Max( MUM,RMSe ) + ( RMSe - MUC ) ) ) + ( Min( MLU ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( Min( Const ,Max( PN,( MRS - RRS ) ) ) * Min( FirstVNF_RAM_Server ,PN ) ) - Min( AMS ,DDR ) )", "choosing": "Max( ( Min( RRSe ,MUM ) - Min( RMSe ,MUR ) ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ARS * FirstVNF_CPU ) ) / ( Const - ARS ) )", "choosing": "( ( ( DS * MLU ) / Max( RRSe,MLU ) ) * ( MUM * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,MRS ) * Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR - ( ( DS * MLU ) * ( CS + ( Max( MUR,RRSe ) / MUM ) ) ) ) / ( MUR - DS ) )", "obj1": 0.6059405940594059, "obj2": 0.27269019309392994}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) ) / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MLU ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.7861386138613862, "obj2": 0.1051732310513175}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) ) / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RCSe ,MUC ) / ( DS / RCSe ) ) * Max( Max( RMSe,RMSe ),( MUC * CS ) ) ) / ( ( ( MLU / RRSe ) * ( CS - DS ) ) * Max( RRSe,RCSe ) ) )", "obj1": 0.8118811881188119, "obj2": 0.08233721527321901}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) ) ) - Max( ( DDR + MDR ),Min( PN ,CRS ) ) )", "choosing": "( Max( MUM,( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + RMSe ) ) ) ) / ( CS * MUR ) )", "obj1": 0.7485148514851485, "obj2": 0.14885611517023226}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR - ( RMSe * ( CS + ( Max( RCSe,RRSe ) / MUM ) ) ) ) / ( MUR - DS ) )", "obj1": 0.8653465346534653, "obj2": 0.05217055029180638}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) - Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + ( Max( MUM,MUC ) / ( CS * MUR ) ) ) - CS ) ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.7346534653465346, "obj2": 0.16669112896073104}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) ) - AMS ) ) )", "choosing": "Min( ( ( Max( ( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),DS ) - CS ),( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( MUC + MUC ) + ( DS - RCSe ) ) )", "obj1": 0.699009900990099, "obj2": 0.19618962531109155}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( ( ( DS + MUR ) * MUR ) * ( MUM * DS ) )", "obj1": 0.7267326732673267, "obj2": 0.18247711571482975}, {"determining": "( ( ( ( BR - CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) / ( ( Const * MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) )", "choosing": "Max( Max( Max( ( CS - RCSe ),( Max( ( RRSe * MLU ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ),Max( Min( RCSe ,MUM ),( RMSe / DS ) ) ),Max( ( ( DS * RRSe ) - ( MLU * MUC ) ),( ( MUM - MLU ) + ( MUM / MUR ) ) ) )", "obj1": 0.6396039603960396, "obj2": 0.2495124101609532}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) - Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.7089108910891089, "obj2": 0.18557235504303735}, {"determining": "( Max( RRS,MRS ) * ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( Min( DS ,MUC ) / Max( RRSe,MLU ) ) * ( MUM * MLU ) )", "obj1": 0.691089108910891, "obj2": 0.21807227325341283}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * CRS ) ) )", "choosing": "( ( ( Max( MUM,MUC ) / ( CS * MUR ) ) * RCSe ) - ( MUM * MLU ) )", "obj1": 0.9663366336633663, "obj2": 0.013803010878791275}, {"determining": "( ( FirstVNF_Mem_Server * ( Max( RRS,PN ) * FirstVNF_CPU ) ) / ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,( ( DS + MUR ) * DS ) ) ) ) )", "obj1": 0.6277227722772277, "obj2": 0.2584782160056433}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.8871287128712871, "obj2": 0.04504635621570666}, {"determining": "( CRS - Max( ( DDR + MDR ),( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * CRS ) ) )", "choosing": "( ( ( Max( MUM,MUC ) / ( CS * MUR ) ) * RCSe ) - ( MUM * Max( Max( Max( ( CS - RCSe ),Max( MUM,MUR ) ),Max( Min( RCSe ,MUM ),( RMSe / DS ) ) ),Max( ( Max( DS,RRSe ) - ( MLU * MUC ) ),( ( MUM - MLU ) + ( MUM / MUR ) ) ) ) ) )", "obj1": 0.902970297029703, "obj2": 0.035934622635052246}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) - ( ( FirstVNF_Mem - BR ) + ( Max( RRS,MRS ) * Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_RAM_Server + ACS ) ) ) ) )", "choosing": "Min( ( ( Max( ( Max( DS,DS ) - CS ),( MUC * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( DS * MLU ) / Max( RRSe,MLU ) ) )", "obj1": 0.9504950495049505, "obj2": 0.02241002123983423}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( FirstVNF_CPU,BR ) / ( Const + BR ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( ( Max( ( Max( RMSe,RCSe ) + ( MUR * MLU ) ),( MUC * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,Max( ( MUC + MUC ),( DS - RCSe ) ) )", "obj1": 0.9366336633663367, "obj2": 0.031626431832397085}, {"determining": "( Max( RRS,MRS ) * Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS + Max( MUM,( MLU + DS ) ) ) * ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.6574257425742575, "obj2": 0.24315042677918625}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( FirstVNF_RAM + MRS ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( RMSe * RCSe ) - ( MUM * MLU ) )", "obj1": 0.897029702970297, "obj2": 0.042271424335524894}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( ( ( DS + MUR ) * Max( DS,MUM ) ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.9821782178217822, "obj2": 0.008167302083041545}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MUM,MUC ) / ( CS * MUR ) )", "obj1": 0.9564356435643564, "obj2": 0.017426897706671947}, {"determining": "( ( FirstVNF_Mem * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MLU ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * Max( RCSe,RRSe ) ) - DS ) )", "obj1": 0.9425742574257425, "obj2": 0.029443142227435222}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( ( DS * MLU ) / Max( RRSe,MLU ) ) * ( MUM * MLU ) )", "obj1": 0.9168316831683169, "obj2": 0.03262652776865187}, {"determining": "( ACS / ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,AMS ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS * DS ) ),RCSe ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,( ( DS + MUR ) * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.6613861386138614, "obj2": 0.2380017700968266}, {"determining": "( Max( ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ),MRS ) * Max( ( ARS - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) ) * Max( DS,MUM ) ) * ( MUM * Max( RMSe,RCSe ) ) )", "obj1": 0.6772277227722773, "obj2": 0.22277517302689218}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) * Max( MRS,Const ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + Max( RMSe,MUR ) )", "obj1": 0.6653465346534654, "obj2": 0.23144290940391712}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR - ( RMSe * ( CS + ( Max( RCSe,RRSe ) / MUM ) ) ) ) / ( MUR - DS ) )", "obj1": 0.8712871287128713, "obj2": 0.04987108569757679}, {"determining": "( Max( FirstVNF_CPU,MRS ) * Max( ( ARS - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( Max( MUM,MUC ) / ( CS * MUR ) )", "obj1": 0.6732673267326733, "obj2": 0.22743914375250726}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "Min( ( ( Max( ( Max( DS,DS ) - CS ),( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( MUC + MUC ) + ( DS - RCSe ) ) )", "obj1": 0.6811881188118812, "obj2": 0.21856483774967772}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( ( DS * MLU ) / Max( RRSe,MLU ) ) * ( MUM * MLU ) )", "obj1": 0.9168316831683169, "obj2": 0.03262652776865187}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( ( Max( ( ACS / Max( ( ARS - MRS ),( FirstVNF_RAM_Server + ACS ) ) ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( ( Max( ( Max( RMSe,RCSe ) + ( MUR * MLU ) ),( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( ( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) ) * Max( DS,MUM ) ) * ( MUM * DS ) ) + ( DS - RCSe ) ) )", "obj1": 0.994059405940594, "obj2": 0.0022506003410549683}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( ( ( DS + Max( MUM,( MLU + DS ) ) ) * ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.6693069306930693, "obj2": 0.22975140580571946}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR - ( RMSe * ( CS + ( Max( RCSe,RRSe ) / MUM ) ) ) ) / ( MUR - DS ) )", "obj1": 0.8712871287128713, "obj2": 0.04987108569757679}, {"determining": "( Max( RRS,MRS ) * Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( MUR - ( RMSe * ( CS + ( Max( MUR,RRSe ) / MUM ) ) ) ) / ( MUR - DS ) )", "obj1": 0.6594059405940594, "obj2": 0.24253247119896595}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( ( DS * MLU ) / Max( RRSe,MLU ) ) * ( MUM * MLU ) )", "obj1": 0.9900990099009901, "obj2": 0.0049586361433829815}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) / CS ) ) * ( RRSe / RCSe ) )", "obj1": 0.9841584158415841, "obj2": 0.006246805882034554}, {"determining": "( Max( RRS,MRS ) * Max( ( BR - FirstVNF_CPU ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS - MLU ) / Max( RRSe,MLU ) ) * ( MUM * MLU ) )", "obj1": 0.691089108910891, "obj2": 0.21807227325341283}, {"determining": "( ( Max( ( FirstVNF_Mem - BR ),Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( ARS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( DS * RMSe ) / Max( RRSe,MLU ) ) ) * ( ( RMSe / MLU ) + Min( ( ( RRSe - ( ( RMSe + MUR ) - CS ) ) * ( Max( DS,DS ) + RRSe ) ) ,MUC ) ) )", "obj1": 0.9881188118811881, "obj2": 0.005929089592569201}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + RRS ) )", "choosing": "( ( ( MLU + RCSe ) + ( RCSe / MLU ) ) + ( ( CS - CS ) * ( RMSe * MLU ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "Min( ( ( Max( ( Max( DS,DS ) - CS ),( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( MUC + MUC ) + ( DS - RCSe ) ) )", "obj1": 0.6811881188118812, "obj2": 0.21856483774967772}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),Max( PN,Max( MRS,Const ) ) ) - ( ( Max( FirstVNF_Mem_Server,MDR ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( ( ( DS / MUR ) - RRSe ) * ( CS + ( Max( MUR,RMSe ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - BR ) )", "choosing": "( ( MUM + MUC ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - ( FirstVNF_CPU / ( FirstVNF_Mem - BR ) ) ) )", "choosing": "( ( ( DS + Max( MUM,( MLU + DS ) ) ) * ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) ) - Min( ( FirstVNF_RAM + MRS ) ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS - MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - ( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( DS * RMSe ) / Max( RRSe,MLU ) ) ) * ( ( RMSe / MLU ) + Min( RRSe ,MUC ) ) ) ) ) ) + ( Min( MLU ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( ( MUM + RRSe ) + Max( RMSe,MUR ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( ( FirstVNF_RAM + ( Const + ARS ) ) ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) ) + ( Max( MUM,RMSe ) + ( RMSe - MUC ) ) ) + ( Min( MLU ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( Max( RRS,MRS ) * ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "Max( Max( Max( ( CS - RCSe ),( Max( ( RRSe * MLU ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ),Max( Min( RCSe ,MUM ),( RMSe / DS ) ) ),Max( ( ( DS * RRSe ) - ( MLU * MUC ) ),( ( MUM - MLU ) + ( MUM / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,Max( PN,( MRS - RRS ) ) ) * Min( FirstVNF_RAM_Server ,PN ) ) - Min( AMS ,DDR ) )", "choosing": "Max( ( Min( RRSe ,MUM ) - Min( RMSe ,MUR ) ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,MRS ) * Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR - ( ( DS * MLU ) * ( CS + ( Max( MUR,RRSe ) / MUM ) ) ) ) / ( MUR - DS ) )", "obj1": 0.6059405940594059, "obj2": 0.27269019309392994}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR - ( RMSe * ( CS + ( Max( RCSe,RRSe ) / MUM ) ) ) ) / ( MUR - DS ) )", "obj1": 0.8653465346534653, "obj2": 0.05217055029180638}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) ) ) - Max( ( DDR + MDR ),Min( PN ,CRS ) ) )", "choosing": "( ( ( DS + MUR ) * MUR ) * ( MUM * DS ) )", "obj1": 0.7663366336633664, "obj2": 0.1300643609825588}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) - Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + ( Max( MUM,MUC ) / ( CS * MUR ) ) ) - CS ) ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.7346534653465346, "obj2": 0.16669112896073104}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) ) / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RCSe ,MUC ) / ( DS / RCSe ) ) * Max( Max( RMSe,RMSe ),( MUC * CS ) ) ) / ( ( ( MLU / RRSe ) * ( CS - DS ) ) * Max( RRSe,RCSe ) ) )", "obj1": 0.8118811881188119, "obj2": 0.08233721527321901}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) ) / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( MLU - ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) / CS ) ) * ( RRSe / RCSe ) )", "obj1": 0.8, "obj2": 0.091128200923802}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) ) / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RCSe ,MUC ) / ( DS / RCSe ) ) * Max( Max( RMSe,RMSe ),( MUC * CS ) ) ) / ( ( ( MLU / RRSe ) * ( CS - DS ) ) * Max( RRSe,RCSe ) ) )", "obj1": 0.8118811881188119, "obj2": 0.08233721527321901}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( RRS - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( ( DS + Max( MUM,( MLU + DS ) ) ) * ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MLU ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6495049504950495, "obj2": 0.2366777734541199}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( MUR - ( RMSe * ( CS + ( Max( MUR,RRSe ) / MUM ) ) ) ) / ( MUR - DS ) )", "obj1": 0.6376237623762376, "obj2": 0.24940766390795438}, {"determining": "( Max( ( Max( DDR,FirstVNF_RAM ) * ( Max( ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ),MRS ) / ACS ) ),MRS ) * Max( ( ARS - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( ( MUR / MLU ) ,MUC ) ) ) * Max( DS,MUM ) ) * ( MUM * Max( RMSe,RCSe ) ) )", "obj1": 0.695049504950495, "obj2": 0.2090228504068211}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) ) / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MLU ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.7861386138613862, "obj2": 0.1051732310513175}, {"determining": "( Max( ( Max( Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ),FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ),MRS ) * Max( ( ARS - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + MUM ) ) * Max( DS,MUM ) ) * ( MUM * Max( RMSe,RCSe ) ) )", "obj1": 0.6772277227722773, "obj2": 0.21620814460492294}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) ) - AMS ) ) )", "choosing": "Min( ( ( Max( ( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),DS ) - CS ),( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( MUC + MUC ) + ( DS - RCSe ) ) )", "obj1": 0.699009900990099, "obj2": 0.19618962531109155}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) - Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.7089108910891089, "obj2": 0.18557235504303735}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) ) ) - Max( ( DDR + MDR ),Min( PN ,CRS ) ) )", "choosing": "( Max( MUM,( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + RMSe ) ) ) ) / ( CS * MUR ) )", "obj1": 0.7485148514851485, "obj2": 0.14885611517023226}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) ) ) - Max( ( DDR + MDR ),Min( PN ,CRS ) ) )", "choosing": "( Max( MUM,( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + RMSe ) ) ) ) / ( CS * MUR ) )", "obj1": 0.7485148514851485, "obj2": 0.14885611517023226}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) ) / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MLU ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.7861386138613862, "obj2": 0.1051732310513175}, {"determining": "( ( FirstVNF_Mem_Server * ( Max( RRS,PN ) * FirstVNF_CPU ) ) / ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,( ( DS + MUR ) * DS ) ) ) ) )", "obj1": 0.6277227722772277, "obj2": 0.2584782160056433}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MLU ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.9821782178217822, "obj2": 0.007809057017835291}, {"determining": "( ( FirstVNF_Mem * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MLU ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) * Max( MRS,Const ) )", "choosing": "( ( Max( MUM,MUR ) + RRSe ) + Max( RMSe,MUR ) )", "obj1": 0.6653465346534654, "obj2": 0.23144290940391712}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * Max( RCSe,RRSe ) ) - DS ) )", "obj1": 0.9425742574257425, "obj2": 0.029443142227435222}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( ( ( DS + MUR ) * MUR ) * ( MUM * DS ) )", "obj1": 0.7267326732673267, "obj2": 0.18247711571482975}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( MUR - ( RMSe * ( CS + Max( MUM,MUR ) ) ) ) / ( MUR - DS ) )", "obj1": 0.8732673267326733, "obj2": 0.047968917528312185}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) ) - AMS ) ) )", "choosing": "( ( ( DS - MLU ) / Max( RRSe,MLU ) ) * ( MUM * MLU ) )", "obj1": 0.7247524752475247, "obj2": 0.1836272564517459}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ACS * FirstVNF_CPU ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( ( DS * MLU ) / Max( RRSe,MLU ) ) * ( ( ( ( Min( RCSe ,MUC ) / ( DS / RCSe ) ) * Max( Max( RMSe,RMSe ),( MUC * CS ) ) ) / ( ( ( MLU / RRSe ) * ( CS - DS ) ) * Max( RRSe,RCSe ) ) ) * MLU ) )", "obj1": 0.9287128712871288, "obj2": 0.029655888175649917}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * CRS ) ) )", "choosing": "( ( ( Max( MUM,MUC ) / ( CS * MUR ) ) * RCSe ) - ( MUM * MLU ) )", "obj1": 0.9663366336633663, "obj2": 0.013803010878791275}, {"determining": "( Max( FirstVNF_CPU,MRS ) * Max( ( ARS - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( Max( MUM,MUC ) / ( CS * MUR ) )", "obj1": 0.6732673267326733, "obj2": 0.22743914375250726}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( FirstVNF_RAM + MRS ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( RMSe * RCSe ) - ( MUM * MLU ) )", "obj1": 0.897029702970297, "obj2": 0.042271424335524894}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - PN ) - Max( ( DDR + MDR ),( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + ( Max( RCSe,RRSe ) / MUM ) ) - CS ) ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.9108910891089109, "obj2": 0.032666303551614005}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * CRS ) ) )", "choosing": "( ( ( Max( MUM,MUC ) / ( CS * MUR ) ) * RCSe ) - ( MUM * MLU ) )", "obj1": 0.9663366336633663, "obj2": 0.013803010878791275}, {"determining": "( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( DS + MUR ) * MUR ) * ( MUM * DS ) ) / ( ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.9465346534653465, "obj2": 0.024730492101285122}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.8871287128712871, "obj2": 0.04504635621570666}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MUM,MUC ) / ( CS * MUR ) )", "obj1": 0.9564356435643564, "obj2": 0.017426897706671947}, {"determining": "( FirstVNF_RAM_Server - Max( ( DDR + MDR ),( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * CRS ) ) )", "choosing": "( ( ( Max( MUM,MUC ) / ( CS * MUR ) ) * RCSe ) - ( MUM * Max( Max( Max( ( CS - RCSe ),Max( MUM,MUR ) ),Max( Min( RCSe ,MUM ),( RMSe / DS ) ) ),Max( ( ( DS * RRSe ) - ( MLU * MUC ) ),( ( MUM - MLU ) + ( MUM / MUR ) ) ) ) ) )", "obj1": 0.902970297029703, "obj2": 0.035934622635052246}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU_Server ) ) - Max( ( DDR + MDR ),( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - MUM ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.9227722772277228, "obj2": 0.030584828858098205}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MLU,MUR ) / ( ( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) ) - DS ) )", "obj1": 0.8871287128712871, "obj2": 0.04504635621570666}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) - ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + ( Max( RRS,MRS ) * Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_RAM_Server + ACS ) ) ) ) )", "choosing": "Min( ( ( Max( RRSe,( MUC * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( DS * MLU ) / Max( RRSe,MLU ) ) )", "obj1": 0.9841584158415841, "obj2": 0.004692453702228789}, {"determining": "( ( Max( ( ACS / Max( ( ARS - MRS ),( FirstVNF_RAM_Server + ACS ) ) ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( ( Max( ( Max( RMSe,RCSe ) + ( MUR * MLU ) ),( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( ( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) ) * Max( DS,MUM ) ) * ( MUM * DS ) ) + ( DS - RCSe ) ) )", "obj1": 0.994059405940594, "obj2": 0.0022506003410549683}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( ( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) ) / Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MLU ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.9544554455445544, "obj2": 0.017755665196589835}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) - ( ( FirstVNF_Mem - BR ) + ( Max( RRS,MRS ) * Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_RAM_Server + ACS ) ) ) ) )", "choosing": "Min( ( ( Max( ( Max( DS,DS ) - CS ),( MUC * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( DS * MLU ) / Max( RRSe,MLU ) ) )", "obj1": 0.9504950495049505, "obj2": 0.02241002123983423}, {"determining": "( CRS - Max( ( DDR + MDR ),( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * CRS ) ) )", "choosing": "( ( ( Max( MUM,MUC ) / ( CS * MUR ) ) * RCSe ) - ( MUM * Max( Max( Max( ( CS - RCSe ),Max( MUM,MUR ) ),Max( Min( RCSe ,MUM ),( RMSe / DS ) ) ),Max( ( Max( DS,RRSe ) - ( MLU * MUC ) ),( ( MUM - MLU ) + ( MUM / MUR ) ) ) ) ) )", "obj1": 0.902970297029703, "obj2": 0.035934622635052246}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( ( FirstVNF_RAM + MRS ) - ( FirstVNF_CPU * ACS ) ) * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( RMSe * RCSe ) - ( MUM * MLU ) )", "obj1": 0.897029702970297, "obj2": 0.042271424335524894}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( ( ( DS + MUR ) * MUR ) * ( MUM * DS ) )", "obj1": 0.7267326732673267, "obj2": 0.18247711571482975}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( RRSe ,MUM ) - Min( RMSe ,MUR ) ),( MUR - DS ) )", "obj1": 0.8693069306930693, "obj2": 0.05198629209107842}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - RRS ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( ( ( DS * MLU ) / Max( RRSe,MLU ) ) * ( MUM * MLU ) )", "obj1": 0.9168316831683169, "obj2": 0.03262652776865187}, {"determining": "( ( Max( ( ACS / Max( ( ( FirstVNF_RAM_Server + ACS ) - MRS ),( FirstVNF_RAM_Server + ACS ) ) ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( ( MUR - ( RMSe * ( CS + ( Max( MUR,RRSe ) / MUM ) ) ) ) / ( MUR - DS ) ) ,( ( ( ( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) ) * Max( DS,MUM ) ) * ( MUM * DS ) ) + ( DS - RCSe ) ) )", "obj1": 0.9900990099009901, "obj2": 0.0040860664637722205}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( Max( MRS,BR ) / ( Const + PN ) ) / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) - ( ( FirstVNF_Mem - BR ) + ( Max( RRS,MRS ) * Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_RAM_Server + ACS ) ) ) ) )", "choosing": "Min( ( ( Max( ( Max( DS,DS ) - CS ),( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ,( ( DS * MLU ) / Max( RRSe,MLU ) ) )", "obj1": 0.9504950495049505, "obj2": 0.02241002123983423}]}