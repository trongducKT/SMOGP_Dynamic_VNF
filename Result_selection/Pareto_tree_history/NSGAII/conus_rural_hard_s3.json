{"1": [{"determining": "( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) )", "choosing": "( ( CS * DS ) / Min( RRSe ,CS ) )", "obj1": 0.7386138613861386, "obj2": 0.18221576851365628}, {"determining": "( ( FirstVNF_RAM_Server * MDR ) + ( Const * Const ) )", "choosing": "Min( ( MUR + MLU ) ,( MUM - RMSe ) )", "obj1": 0.6831683168316832, "obj2": 0.2345743375147011}, {"determining": "Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),( RRS * DDR ) )", "choosing": "( ( MUR + CS ) + ( MUR - MUM ) )", "obj1": 0.6811881188118812, "obj2": 0.2464220802874649}, {"determining": "( ( CRS + FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Max( ( RMSe + DS ),Max( CS,MLU ) )", "obj1": 0.7069306930693069, "obj2": 0.20979772762713333}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) / Max( AMS,ARS ) ) * ( ( Const - FirstVNF_Mem ) + ( FirstVNF_RAM_Server * CRS ) ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) + ( MDR + ( PN * MDR ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe * MUR ) ) ) / Max( ( RCSe / DS ),( CS / RRSe ) ) )", "obj1": 0.8950495049504951, "obj2": 0.10076777008113041}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / ( Const - DDR ) ) )", "choosing": "( ( MUR - ( MUR * DS ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.6316831683168317, "obj2": 0.26120720568432615}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS / AMS ) ) - ( DDR / MDR ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( DS - DS ) ),( ( RRSe + MUM ) + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,MRS ) + ( CRS + ( ( Max( RRS,ACS ) - MDR ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem_Server * BR ) )", "choosing": "( ( ( MUM - MUM ) - ( Max( MUR,RMSe ) / MUR ) ) + Max( ( RCSe * MUC ),( RRSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - CRS ) - ( Const + PN ) ) ,Max( Max( ( CRS * DDR ),BR ),( MRS * ARS ) ) )", "choosing": "( ( ( MUC - ( ( ( ( MUR * ( RMSe * DS ) ) - RMSe ) + CS ) / Min( RMSe ,( MUC * RCSe ) ) ) ) / ( MUR - CS ) ) + ( Min( RCSe ,CS ) - Max( RMSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Min( MUR ,RRSe ),Min( RCSe ,RRSe ) ) * Max( ( MUC - DS ),Max( DS,CS ) ) ) ,( Min( Min( RMSe ,MUM ) ,( RRSe * MUM ) ) / ( ( DS * MUM ) / ( CS + DS ) ) ) )", "obj1": 0.7504950495049505, "obj2": 0.16951038159958245}, {"determining": "Min( ( MRS / ( Max( AMS,FirstVNF_Mem_Server ) - ( ACS + MRS ) ) ) ,Max( Max( Max( RRS,FirstVNF_RAM ),BR ),FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * ( ( RMSe - MUR ) / RCSe ) ) + ( RRSe - MUM ) )", "obj1": 0.8396039603960396, "obj2": 0.11233461513923604}, {"determining": "Max( Max( ( ( FirstVNF_RAM_Server + DDR ) - Min( BR ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU * FirstVNF_RAM ),( Const + RRS ) ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( MLU / RMSe ) / ( DS - Min( RCSe ,MUM ) ) )", "obj1": 0.6415841584158416, "obj2": 0.25507531768080494}, {"determining": "( Min( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) ,Max( PN,RRS ) ) - ( Max( ( Const * CRS ),( MRS + DDR ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * ( ( RMSe - RCSe ) - ( MUM * MUR ) ) ) - Min( ( Max( MLU,Min( RMSe ,MUM ) ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( CRS * ( ( Const / ARS ) - Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) + ( MLU * CS ) ) * ( MUC + ( Min( MUM ,MLU ) - Max( MUC,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) / Max( AMS,ARS ) ) * ( ( Const - FirstVNF_Mem ) + ( FirstVNF_RAM_Server * CRS ) ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ARS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Min( ( ( RRSe / RRSe ) - ( RRSe - RRSe ) ) ,Max( ( MUM * RRSe ),( MUC * MUR ) ) ) )", "obj1": 0.6178217821782178, "obj2": 0.2699039840517094}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) + Min( ( FirstVNF_CPU_Server * ACS ) ,FirstVNF_CPU ) )", "choosing": "( Min( RCSe ,MLU ) + ( RRSe + RRSe ) )", "obj1": 0.9643564356435643, "obj2": 0.029268772775609457}, {"determining": "Min( ( MRS / ( Max( AMS,FirstVNF_Mem_Server ) - ( ACS + MRS ) ) ) ,Max( Max( Max( RRS,FirstVNF_RAM ),BR ),FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * ( ( RMSe - MUR ) / RCSe ) ) + ( RRSe - MUM ) )", "obj1": 0.8396039603960396, "obj2": 0.11233461513923604}, {"determining": "( Max( Const,MDR ) / ( Min( ( Const + ( ( FirstVNF_Mem - ( FirstVNF_CPU + ACS ) ) / AMS ) ) ,FirstVNF_CPU ) / DDR ) )", "choosing": "( Max( RCSe,RMSe ) / ( ( RRSe * ( RRSe - MUR ) ) + ( RCSe / ( RMSe + MUR ) ) ) )", "obj1": 0.899009900990099, "obj2": 0.0841925265845001}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,MLU ) / ( MUR * CS ) )", "obj1": 0.7623762376237624, "obj2": 0.14926939247086998}, {"determining": "( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) )", "choosing": "( ( CS * DS ) / Min( RRSe ,CS ) )", "obj1": 0.7386138613861386, "obj2": 0.18221576851365628}, {"determining": "( ( CRS + FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Max( ( RMSe + DS ),Max( CS,MLU ) )", "obj1": 0.7029702970297029, "obj2": 0.20052789856547676}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / ( Const - DDR ) ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6435643564356436, "obj2": 0.22829116036357233}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) + Min( ( FirstVNF_CPU_Server * ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,ARS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( MUR,MUC ),( MUM * RRSe ) ) / ( ( RRSe * MUR ) + ( RCSe / CS ) ) )", "obj1": 0.8930693069306931, "obj2": 0.10367412107634921}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Min( MUR ,RRSe ),Min( RCSe ,RRSe ) ) * Max( ( MUC - DS ),Max( DS,CS ) ) ) ,( Min( Min( RMSe ,MUM ) ,( RRSe * MUM ) ) / ( ( DS * MUM ) / ( CS + DS ) ) ) )", "obj1": 0.7504950495049505, "obj2": 0.16951038159958245}, {"determining": "( Max( Const,MDR ) / ( FirstVNF_Mem / DDR ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 0.6752475247524753, "obj2": 0.2263930045440815}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( CS * Min( ( MUR + RCSe ) ,( RRSe + MUC ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.689108910891089, "obj2": 0.20215895486044008}, {"determining": "( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( MUR * DS ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.6811881188118812, "obj2": 0.21943943179831754}, {"determining": "Max( Max( ( ( FirstVNF_RAM_Server + DDR ) - Min( BR ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU * FirstVNF_RAM ),( Const + RRS ) ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( MLU / RMSe ) / ( DS - Min( RCSe ,MUM ) ) )", "obj1": 0.6415841584158416, "obj2": 0.25507531768080494}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / ( Const - DDR ) ) )", "choosing": "( ( MUR - ( MUR * DS ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.6316831683168317, "obj2": 0.26120720568432615}, {"determining": "( Min( ( AMS * ( MDR - Const ) ) ,AMS ) / ( ARS - DDR ) )", "choosing": "( ( MUR / RMSe ) * ( MUC - ( RRSe + Min( DS ,( MUR - Max( ( RCSe * CS ),MUM ) ) ) ) ) )", "obj1": 0.7584158415841584, "obj2": 0.15509914581706963}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) + Min( ( FirstVNF_CPU_Server * ACS ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( MUR,MUC ),( CS * RRSe ) ) / ( ( RRSe * MUR ) + ( RCSe / CS ) ) )", "obj1": 0.897029702970297, "obj2": 0.0996781391817269}, {"determining": "Max( Max( ( ( FirstVNF_RAM_Server + DDR ) - Min( BR ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU * FirstVNF_RAM ),( Const + RRS ) ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( MLU / RMSe ) / ( DS - Min( RCSe ,MUM ) ) )", "obj1": 0.6415841584158416, "obj2": 0.25507531768080494}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) + ( MDR + ( PN * MDR ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe * MUR ) ) ) / Max( ( RCSe / DS ),( CS / RRSe ) ) )", "obj1": 0.8950495049504951, "obj2": 0.10076777008113041}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS / AMS ) ) - ( DDR / MDR ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( DS - DS ) ),( ( RRSe + MUM ) + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,MRS ) + ( CRS + ( ( Max( RRS,ACS ) - MDR ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem_Server * BR ) )", "choosing": "( ( ( MUM - MUM ) - ( Max( MUR,RMSe ) / MUR ) ) + Max( ( RCSe * MUC ),( RRSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - CRS ) - ( Const + PN ) ) ,Max( Max( ( CRS * DDR ),BR ),( MRS * ARS ) ) )", "choosing": "( ( ( MUC - ( ( ( ( MUR * ( RMSe * DS ) ) - RMSe ) + CS ) / Min( RMSe ,( MUC * RCSe ) ) ) ) / ( MUR - CS ) ) + ( Min( RCSe ,CS ) - Max( RMSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) ,Max( PN,RRS ) ) - ( Max( ( Const * CRS ),( MRS + DDR ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * ( ( RMSe - RCSe ) - ( MUM * MUR ) ) ) - Min( ( Max( MLU,Min( RMSe ,MUM ) ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) / Max( AMS,ARS ) ) * ( ( Const - FirstVNF_Mem ) + ( FirstVNF_RAM_Server * CRS ) ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,ACS ) / Min( ( BR - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( Max( Min( RCSe ,( MUC / RMSe ) ),MUC ) - MUM ),CS ) - Min( DS ,MUC ) ) ,( RMSe * Min( MUM ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ARS + FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,RRS ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( AMS + PN ) ) ) ,( ( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) ) + ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) )", "choosing": "( ( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( MUM,MUR ) ) - ( ( RCSe + RCSe ) / ( MUR - CS ) ) ) * Max( ( Min( RMSe ,RRSe ) + ( RMSe + RMSe ) ),Min( ( MUR - MUC ) ,Min( RCSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,Min( RRS ,Const ) ) - Min( PN ,BR ) )", "choosing": "( Max( CS,RCSe ) / ( RRSe * Max( ( MUC - CS ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Max( DDR,FirstVNF_CPU ) ) - ( AMS + ( CRS + PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) - ( AMS + ( CRS + PN ) ) )", "choosing": "Min( Min( MUM ,MLU ) ,( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( Max( RRS,RRS ) + ( FirstVNF_RAM / MDR ) ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / RCSe ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( ( ( ( ( MDR + FirstVNF_Mem ) / FirstVNF_Mem_Server ) * CRS ) + RRS ) * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( RCSe + RCSe ) / Min( RRSe ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_RAM ) - ( FirstVNF_Mem_Server / PN ) )", "choosing": "( Min( MUM ,( ( RMSe * MUM ) / ( RMSe + RRSe ) ) ) - ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) + ( MDR + ( PN * MDR ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe * MUR ) ) ) / Max( ( RCSe / DS ),( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( RRSe + MUR ) + CS ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) + ( MDR + ( PN * MDR ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe * MUR ) ) ) / Max( ( RCSe / DS ),( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( RRSe + MUR ) + CS ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) + ( MDR + ( PN * MDR ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe * MUR ) ) ) / Max( ( RCSe / DS ),( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( RRSe + MUR ) + CS ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM - AMS ) ) ,FirstVNF_CPU ) + ( PN - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + PN ) - ( PN / Max( ( FirstVNF_RAM_Server * ARS ),FirstVNF_CPU ) ) )", "choosing": "( Max( Min( DS ,( ( MUM * MUR ) - RRSe ) ),DS ) + ( Max( RCSe,( ( Max( DS,DS ) + MUR ) + CS ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) / Max( AMS,ARS ) ) * ( ( Const - FirstVNF_Mem ) + ( FirstVNF_RAM_Server * CRS ) ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( Const,MDR ) / ( FirstVNF_Mem / DDR ) ) * ( FirstVNF_RAM - AMS ) ) ,FirstVNF_CPU ) + ( PN - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RMSe,RCSe ) / ( RCSe * MUC ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM - AMS ) ) ,FirstVNF_CPU ) + ( PN - FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,RCSe ) / ( RCSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) / Max( AMS,ARS ) ) * ( ( Const - FirstVNF_Mem ) + ( FirstVNF_RAM_Server * CRS ) ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / ( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) ) ) )", "choosing": "( ( MUR - ( MUR * DS ) ) * ( ( CS * DS ) / Min( RRSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( ( Min( RRS ,Const ) / MDR ) * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( Max( MUR,( RCSe / ( MUC - CS ) ) ) + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "Max( Max( MUR,( RCSe / ( MUC - CS ) ) ),Min( RCSe ,Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS * ( ( Const / ARS ) - Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) + ( MLU * CS ) ) * ( MUC + ( Min( MUM ,MLU ) - Max( MUC,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.6059405940594059, "obj2": 0.2777296079888138}, {"determining": "Min( ( MRS / ( Max( AMS,FirstVNF_Mem_Server ) - ( ACS + MRS ) ) ) ,Max( Max( Max( RRS,FirstVNF_RAM ),BR ),FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * ( ( RMSe - MUR ) / RCSe ) ) + ( RRSe - MUM ) )", "obj1": 0.8396039603960396, "obj2": 0.11233461513923604}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,MLU ) / ( MUR * CS ) )", "obj1": 0.7623762376237624, "obj2": 0.14926939247086998}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RMSe,RCSe ) / ( RCSe * MUC ) )", "obj1": 0.9227722772277228, "obj2": 0.06240080229813597}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) + Min( ( FirstVNF_CPU_Server * ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,ARS ) ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 0.9544554455445544, "obj2": 0.036358089279245144}, {"determining": "( Min( RRS ,Const ) / ( ( ( ( FirstVNF_CPU - CRS ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( ARS + FirstVNF_RAM_Server ) ) ) / ( ARS - DDR ) ) - DDR ) )", "choosing": "( ( Min( MUR ,( MUC / MLU ) ) / ( Min( ( RRSe + MUC ) ,( MUR + RCSe ) ) * Min( RRSe ,Max( MUC,( Max( RCSe,( MLU * CS ) ) + MUR ) ) ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.6237623762376238, "obj2": 0.24826274802334108}, {"determining": "Min( ( MRS / ( ( ACS + MRS ) - ( FirstVNF_RAM / ARS ) ) ) ,Max( Max( BR,Max( RRS,Const ) ),Min( ( Max( ACS,Min( ACS ,Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( MDR / Max( AMS,FirstVNF_Mem_Server ) ) * RRS ) ) ,MRS ) ) )", "choosing": "( ( RRSe * ( Max( RMSe,CS ) / RCSe ) ) + Min( RRSe ,MUM ) )", "obj1": 0.8514851485148515, "obj2": 0.10761030798450504}, {"determining": "( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.695049504950495, "obj2": 0.18677052704933597}, {"determining": "( ( ( Max( BR,ARS ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( RCSe / CS ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9623762376237623, "obj2": 0.02097620966093559}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / ( Const - DDR ) ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6435643564356436, "obj2": 0.22829116036357233}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ARS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Min( ( ( RRSe / RRSe ) - ( RRSe - RRSe ) ) ,Max( ( MUM * RRSe ),( MUC * MUR ) ) ) )", "obj1": 0.6178217821782178, "obj2": 0.2699039840517094}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) + Min( ( FirstVNF_CPU_Server * ACS ) ,FirstVNF_CPU ) )", "choosing": "( ( MLU / RMSe ) / ( DS - Min( RCSe ,MUM ) ) )", "obj1": 0.8930693069306931, "obj2": 0.09975456853221443}, {"determining": "( ( Const * ( FirstVNF_CPU_Server * ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,ARS ) ) ) ) / ( ARS - DDR ) )", "choosing": "( ( ( RCSe / CS ) / RMSe ) * ( DS * DS ) )", "obj1": 0.7465346534653465, "obj2": 0.16228031947611116}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( RRSe + MUR ) + CS ) ) + ( RCSe * MUC ) ) )", "obj1": 0.906930693069307, "obj2": 0.07811818167099227}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 0.7089108910891089, "obj2": 0.17275435268712905}, {"determining": "( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) )", "choosing": "( Max( Min( DS ,( ( MUM * MUR ) - RRSe ) ),DS ) + ( Max( RCSe,( ( RRSe + MUR ) + CS ) ) + RRSe ) )", "obj1": 0.7247524752475247, "obj2": 0.170538999804896}, {"determining": "( ( Max( ACS,ARS ) - Max( RRS,DDR ) ) - ( AMS / AMS ) )", "choosing": "( ( ( MLU / RMSe ) / ( DS - Min( MUM ,RCSe ) ) ) * ( ( Min( ( MLU * DS ) ,Max( ( DS + MUC ),MUR ) ) + RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.6752475247524753, "obj2": 0.19599544177090583}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( DS ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9861386138613861, "obj2": 0.012094411864427751}, {"determining": "( ( FirstVNF_CPU / RRS ) / ( ( FirstVNF_CPU - MRS ) * ( MDR + AMS ) ) )", "choosing": "( ( ( Min( CS ,MUR ) - MUM ) / RMSe ) / Max( RCSe,MUM ) )", "obj1": 0.6554455445544555, "obj2": 0.21714015910731674}, {"determining": "( Min( ( AMS * ( MDR - Const ) ) ,AMS ) / ( ARS - DDR ) )", "choosing": "( ( MUR / RMSe ) * ( MUC - ( RRSe + Min( DS ,( MUR - Max( ( RCSe * CS ),MUM ) ) ) ) ) )", "obj1": 0.7584158415841584, "obj2": 0.15509914581706963}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( CS * Min( Max( MUR,MUC ) ,( RRSe + MUC ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.6633663366336634, "obj2": 0.2059577978781451}, {"determining": "( Max( Const,MDR ) / ( Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM - AMS ) ) ,FirstVNF_CPU ) / DDR ) )", "choosing": "( Max( RMSe,RCSe ) / ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) )", "obj1": 0.899009900990099, "obj2": 0.0841925265845001}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) + Min( ( FirstVNF_CPU_Server * ( ( FirstVNF_RAM_Server * CRS ) + Max( BR,ARS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( CS,( MUM * RRSe ) ) / ( ( RRSe * MUR ) + ( RCSe / CS ) ) )", "obj1": 0.897029702970297, "obj2": 0.0993027051680201}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / Max( PN,Max( FirstVNF_CPU_Server,AMS ) ) ) ) / ( ARS - DDR ) )", "choosing": "( ( CS * Min( ( MUR + Max( CS,( ( RCSe / ( MUC - RRSe ) ) * RMSe ) ) ) ,( RRSe + MUC ) ) ) / ( RRSe * CS ) )", "obj1": 0.6534653465346535, "obj2": 0.2253872785594705}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( RRSe + MUR ) + CS ) ) + RRSe ) )", "obj1": 0.6732673267326733, "obj2": 0.20561424313198448}, {"determining": "( ( Const * ( ( CRS - FirstVNF_RAM_Server ) + Min( ( FirstVNF_CPU_Server * ACS ) ,FirstVNF_CPU ) ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR / ( CS * RRSe ) ) * ( DS * DS ) )", "obj1": 0.9881188118811881, "obj2": 0.007790726694626358}, {"determining": "( ( CRS - ARS ) + Min( ( FirstVNF_CPU_Server * ( BR + FirstVNF_RAM ) ) ,( DDR + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( ( RRSe * MUM ) + ( RCSe / CS ) ) )", "obj1": 0.998019801980198, "obj2": 0.0035419415912972436}, {"determining": "( Max( Const,MDR ) / ( Min( ( Const + ( ( FirstVNF_Mem - ( FirstVNF_CPU + ACS ) ) / AMS ) ) ,FirstVNF_CPU ) / DDR ) )", "choosing": "( Max( RCSe,RMSe ) / ( ( RRSe * ( RRSe - MUR ) ) + ( RCSe / ( RMSe + MUR ) ) ) )", "obj1": 0.899009900990099, "obj2": 0.0841925265845001}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) / Max( AMS,ARS ) ) * ( ( Const - FirstVNF_Mem ) + ( FirstVNF_RAM_Server * CRS ) ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS / AMS ) ) - ( DDR / MDR ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( DS - DS ) ),( ( RRSe + MUM ) + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,MRS ) + ( CRS + ( ( Max( RRS,ACS ) - MDR ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem_Server * BR ) )", "choosing": "( ( ( MUM - MUM ) - ( Max( MUR,RMSe ) / MUR ) ) + Max( ( RCSe * MUC ),( RRSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - CRS ) - ( Const + PN ) ) ,Max( Max( ( CRS * DDR ),BR ),( MRS * ARS ) ) )", "choosing": "( ( ( MUC - ( ( ( ( MUR * ( RMSe * DS ) ) - RMSe ) + CS ) / Min( RMSe ,( MUC * RCSe ) ) ) ) / ( MUR - CS ) ) + ( Min( RCSe ,CS ) - Max( RMSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) ,Max( PN,RRS ) ) - ( Max( ( Const * CRS ),( MRS + DDR ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * ( ( RMSe - RCSe ) - ( MUM * MUR ) ) ) - Min( ( Max( MLU,Min( RMSe ,MUM ) ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) / Max( AMS,ARS ) ) * ( ( Const - FirstVNF_Mem ) + ( FirstVNF_RAM_Server * CRS ) ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,ACS ) / Min( ( BR - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( Max( Min( RCSe ,( MUC / RMSe ) ),MUC ) - MUM ),CS ) - Min( DS ,MUC ) ) ,( RMSe * Min( MUM ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ARS + FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,RRS ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( AMS + PN ) ) ) ,( ( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) ) + ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) )", "choosing": "( ( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( MUM,MUR ) ) - ( ( RCSe + RCSe ) / ( MUR - CS ) ) ) * Max( ( Min( RMSe ,RRSe ) + ( RMSe + RMSe ) ),Min( ( MUR - MUC ) ,Min( RCSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,Min( RRS ,Const ) ) - Min( PN ,BR ) )", "choosing": "( Max( CS,RCSe ) / ( RRSe * Max( ( MUC - CS ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Max( DDR,FirstVNF_CPU ) ) - ( AMS + ( CRS + PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) - ( AMS + ( CRS + PN ) ) )", "choosing": "Min( Min( MUM ,MLU ) ,( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( Max( RRS,RRS ) + ( FirstVNF_RAM / MDR ) ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / RCSe ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( ( ( ( ( MDR + FirstVNF_Mem ) / FirstVNF_Mem_Server ) * CRS ) + RRS ) * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( RCSe + RCSe ) / Min( RRSe ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_RAM ) - ( FirstVNF_Mem_Server / PN ) )", "choosing": "( Min( MUM ,( ( RMSe * MUM ) / ( RMSe + RRSe ) ) ) - ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) + ( MDR + ( PN * MDR ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe * MUR ) ) ) / Max( ( RCSe / DS ),( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( RRSe + MUR ) + CS ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) + ( MDR + ( PN * MDR ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe * MUR ) ) ) / Max( ( RCSe / DS ),( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( RRSe + MUR ) + CS ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) + ( MDR + ( PN * MDR ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe * MUR ) ) ) / Max( ( RCSe / DS ),( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( FirstVNF_Mem_Server * Max( DDR,FirstVNF_CPU ) ) - ( AMS + ( CRS + PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.6059405940594059, "obj2": 0.2777296079888138}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.6059405940594059, "obj2": 0.2777296079888138}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.7465346534653465, "obj2": 0.13123111546298863}, {"determining": "Min( ( MRS / ( Max( AMS,FirstVNF_Mem_Server ) - ( ACS + MRS ) ) ) ,Max( Max( Max( RRS,FirstVNF_RAM ),BR ),FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * ( ( RMSe - MUR ) / RCSe ) ) + ( RRSe - MUM ) )", "obj1": 0.8396039603960396, "obj2": 0.11233461513923604}, {"determining": "( Min( RRS ,Const ) / ( ( ( ( FirstVNF_CPU - CRS ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( ARS + FirstVNF_RAM_Server ) ) ) / ( ARS - DDR ) ) - DDR ) )", "choosing": "( ( Min( MUR ,( MUC / MLU ) ) / ( Min( ( RRSe + MUC ) ,( MUR + RCSe ) ) * Min( RRSe ,Max( MUC,( Max( RCSe,( MLU * CS ) ) + MUR ) ) ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.6237623762376238, "obj2": 0.24826274802334108}, {"determining": "( Max( Const,MDR ) / ( Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM - AMS ) ) ,FirstVNF_CPU ) / DDR ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 0.9504950495049505, "obj2": 0.029833934445580176}, {"determining": "( ( Const * ( FirstVNF_CPU_Server * ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,ARS ) ) ) ) / ( ARS - DDR ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 0.7287128712871287, "obj2": 0.1617561247559577}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RMSe,RCSe ) / ( RCSe * MUC ) )", "obj1": 0.9267326732673268, "obj2": 0.05427502847776643}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM - AMS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( ( RMSe + MUR ) + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 0.8752475247524752, "obj2": 0.09905343830859117}, {"determining": "Min( ( MRS / ( ( ACS + MRS ) - ( FirstVNF_RAM / ARS ) ) ) ,Max( Max( BR,Max( RRS,Const ) ),Min( ( Max( ACS,Min( ACS ,Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( MDR / Max( AMS,FirstVNF_Mem_Server ) ) * RRS ) ) ,MRS ) ) )", "choosing": "( ( RRSe * ( Max( RMSe,CS ) / RCSe ) ) + Min( RRSe ,MUM ) )", "obj1": 0.8514851485148515, "obj2": 0.10761030798450504}, {"determining": "( Max( PN,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Min( ( RMSe / Min( RCSe ,RRSe ) ) ,( RCSe * ( ( ( Max( ( DS + RMSe ),MUC ) / MLU ) + MLU ) + ( DS / Max( RMSe,MUM ) ) ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 0.9188118811881189, "obj2": 0.06228597438089284}, {"determining": "( Max( Const,MDR ) / ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - AMS ) ) ,FirstVNF_CPU ) / DDR ) )", "choosing": "( Max( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ),RCSe ) / ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) )", "obj1": 0.8950495049504951, "obj2": 0.08655641324022677}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( DS ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9861386138613861, "obj2": 0.012094411864427751}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ARS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Min( ( ( RRSe / RRSe ) - ( RRSe - RRSe ) ) ,Max( ( MUM * RRSe ),( MUC * MUR ) ) ) )", "obj1": 0.6178217821782178, "obj2": 0.2699039840517094}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / ( Const - DDR ) ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6435643564356436, "obj2": 0.22829116036357233}, {"determining": "( ( FirstVNF_CPU / RRS ) / ( ( FirstVNF_CPU - MRS ) * ( MDR + AMS ) ) )", "choosing": "( ( ( Min( CS ,MUR ) - MUM ) / RMSe ) / Max( RCSe,MUM ) )", "obj1": 0.6554455445544555, "obj2": 0.21714015910731674}, {"determining": "( ( ( Max( BR,ARS ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( RCSe / CS ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9623762376237623, "obj2": 0.02097620966093559}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / ( Const - DDR ) ) ) / ( ARS - DDR ) )", "choosing": "Min( ( Max( ( MLU - MUM ),CS ) - Min( DS ,MUC ) ) ,( RMSe * Min( DS ,CS ) ) )", "obj1": 0.7148514851485148, "obj2": 0.16675720760298204}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( CS * Min( Max( MUR,MUC ) ,( RRSe + MUC ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.6633663366336634, "obj2": 0.2059577978781451}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.697029702970297, "obj2": 0.17934176123566622}, {"determining": "( ( Max( ACS,ARS ) - Max( RRS,DDR ) ) - ( AMS / AMS ) )", "choosing": "( ( ( MLU / RMSe ) / ( DS - Min( MUM ,RCSe ) ) ) * ( ( Min( ( MLU * DS ) ,Max( ( DS + MUC ),MUR ) ) + RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.6752475247524753, "obj2": 0.19599544177090583}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,CRS ) ) / ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe )", "obj1": 0.6811881188118812, "obj2": 0.18754706085743883}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( RRSe + MUR ) + CS ) ) + ( RCSe * MUC ) ) )", "obj1": 0.906930693069307, "obj2": 0.07811818167099227}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / Max( PN,Max( FirstVNF_CPU_Server,AMS ) ) ) ) / ( ARS - DDR ) )", "choosing": "( ( CS * Min( ( MUR + Max( CS,( ( RCSe / ( MUC - RRSe ) ) * RMSe ) ) ) ,( RRSe + MUC ) ) ) / ( RRSe * CS ) )", "obj1": 0.6534653465346535, "obj2": 0.2253872785594705}, {"determining": "( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.695049504950495, "obj2": 0.18677052704933597}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( RRSe + MUR ) + CS ) ) + RRSe ) )", "obj1": 0.6732673267326733, "obj2": 0.20561424313198448}, {"determining": "( ( ( Max( BR,ARS ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( RCSe / CS ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9623762376237623, "obj2": 0.02097620966093559}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / ( Const - DDR ) ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6435643564356436, "obj2": 0.22829116036357233}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) - ( AMS + ( CRS + PN ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( MUM ,MLU ),MUC ),( CS * RRSe ) ) )", "obj1": 0.6099009900990099, "obj2": 0.2746077669406066}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 0.7089108910891089, "obj2": 0.17275435268712905}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( RRSe + MUR ) + CS ) ) + ( RCSe * MUC ) ) )", "obj1": 0.906930693069307, "obj2": 0.07811818167099227}, {"determining": "( ( Const * ( ( CRS - FirstVNF_RAM_Server ) + Min( ( FirstVNF_CPU_Server * ACS ) ,FirstVNF_CPU ) ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR / ( CS * RRSe ) ) * ( DS * DS ) )", "obj1": 0.9881188118811881, "obj2": 0.007790726694626358}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 0.7089108910891089, "obj2": 0.17275435268712905}, {"determining": "( ( CRS - ARS ) + Min( ( FirstVNF_CPU_Server * ( BR + FirstVNF_RAM ) ) ,( DDR + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( ( RRSe * MUM ) + ( RCSe / CS ) ) )", "obj1": 0.998019801980198, "obj2": 0.0035419415912972436}, {"determining": "( AMS / ( Min( ( RRS * ( Max( Max( ( FirstVNF_CPU + FirstVNF_Mem ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ),FirstVNF_Mem ) - FirstVNF_RAM ) ) ,FirstVNF_CPU ) / DDR ) )", "choosing": "( Max( RMSe,RCSe ) / ( ( RRSe * MUR ) - ( RCSe / ( Max( ( MUM - MUM ),Min( RMSe ,MUM ) ) + MUR ) ) ) )", "obj1": 0.900990099009901, "obj2": 0.08163709077440813}, {"determining": "( Max( Const,MDR ) / ( Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM - AMS ) ) ,FirstVNF_CPU ) / DDR ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.899009900990099, "obj2": 0.0822991054070362}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ARS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Min( ( ( RRSe / RRSe ) - ( RRSe - RRSe ) ) ,Max( ( MUM * RRSe ),( MUC * MUR ) ) ) )", "obj1": 0.6178217821782178, "obj2": 0.2699039840517094}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) + Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM + BR ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) ),( MUM * RRSe ) ) / ( ( RRSe * MUR ) + ( RCSe / CS ) ) )", "obj1": 0.998019801980198, "obj2": 0.0035419415912972436}, {"determining": "( ( Const * ( ( CRS - FirstVNF_RAM_Server ) + Min( ( FirstVNF_CPU_Server * ACS ) ,FirstVNF_CPU ) ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR / ( CS * RRSe ) ) * ( DS * DS ) )", "obj1": 0.9881188118811881, "obj2": 0.007790726694626358}, {"determining": "( CRS * ( ( Const / ARS ) - Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) + ( MLU * CS ) ) * ( MUC + ( Min( MUM ,MLU ) - Max( MUC,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) / Max( AMS,ARS ) ) * ( ( Const - FirstVNF_Mem ) + ( FirstVNF_RAM_Server * CRS ) ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS / AMS ) ) - ( DDR / MDR ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( DS - DS ) ),( ( RRSe + MUM ) + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,MRS ) + ( CRS + ( ( Max( RRS,ACS ) - MDR ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem_Server * BR ) )", "choosing": "( ( ( MUM - MUM ) - ( Max( MUR,RMSe ) / MUR ) ) + Max( ( RCSe * MUC ),( RRSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - CRS ) - ( Const + PN ) ) ,Max( Max( ( CRS * DDR ),BR ),( MRS * ARS ) ) )", "choosing": "( ( ( MUC - ( ( ( ( MUR * ( RMSe * DS ) ) - RMSe ) + CS ) / Min( RMSe ,( MUC * RCSe ) ) ) ) / ( MUR - CS ) ) + ( Min( RCSe ,CS ) - Max( RMSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) ,Max( PN,RRS ) ) - ( Max( ( Const * CRS ),( MRS + DDR ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * ( ( RMSe - RCSe ) - ( MUM * MUR ) ) ) - Min( ( Max( MLU,Min( RMSe ,MUM ) ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) / Max( AMS,ARS ) ) * ( ( Const - FirstVNF_Mem ) + ( FirstVNF_RAM_Server * CRS ) ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,ACS ) / Min( ( BR - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( Max( Min( RCSe ,( MUC / RMSe ) ),MUC ) - MUM ),CS ) - Min( DS ,MUC ) ) ,( RMSe * Min( MUM ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ARS + FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,RRS ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( AMS + PN ) ) ) ,( ( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) ) + ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) )", "choosing": "( ( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( MUM,MUR ) ) - ( ( RCSe + RCSe ) / ( MUR - CS ) ) ) * Max( ( Min( RMSe ,RRSe ) + ( RMSe + RMSe ) ),Min( ( MUR - MUC ) ,Min( RCSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.6059405940594059, "obj2": 0.2777296079888138}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Max( DDR,FirstVNF_CPU ) ) - ( AMS + ( CRS + PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem + ACS ) + FirstVNF_RAM ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / Min( ( FirstVNF_RAM_Server + CRS ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + DS ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( RRSe ,RCSe ),MUC ),( CS * RRSe ) ) )", "obj1": 0.6059405940594059, "obj2": 0.2777296079888138}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) ) ) + ( RCSe * MUC ) ) )", "obj1": 0.8653465346534653, "obj2": 0.05486773594412239}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.7465346534653465, "obj2": 0.13123111546298863}, {"determining": "( ( ARS - Min( ACS ,ARS ) ) - Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - ( DDR + ( PN - MRS ) ) ) / ( ACS / AMS ) ) ) )", "choosing": "( ( Min( ( RMSe + MUR ) ,RCSe ) * Max( ( DS + MLU ),Min( RMSe ,MUR ) ) ) - MUM )", "obj1": 0.8237623762376237, "obj2": 0.12180087090520678}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( ( MRS / ( Max( AMS,FirstVNF_Mem_Server ) - ( ACS + MRS ) ) ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( ( RMSe - MUR ) / RCSe ) - Min( DS ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.8594059405940594, "obj2": 0.10289219900854533}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RMSe,RCSe ) / ( RCSe * MUC ) )", "obj1": 0.9267326732673268, "obj2": 0.05427502847776643}, {"determining": "( Min( RRS ,Const ) / ( ( ( ( FirstVNF_CPU - CRS ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( ARS + FirstVNF_RAM_Server ) ) ) / ( ARS - DDR ) ) - DDR ) )", "choosing": "( ( Min( MUR ,( MUC / MLU ) ) / ( Min( ( RRSe + MUC ) ,( MUR + RCSe ) ) * Min( RRSe ,Max( MUC,( Max( RCSe,( MLU * CS ) ) + MUR ) ) ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.6237623762376238, "obj2": 0.24826274802334108}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) + ( ( ( ( FirstVNF_CPU / ( FirstVNF_RAM - AMS ) ) * FirstVNF_CPU ) * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( ( ( Min( ( ( RMSe - RMSe ) - CS ) ,CS ) / ( ( MUC + ( MUC * ( RMSe / CS ) ) ) / RCSe ) ) * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / ( RMSe / ( ( ( MUR * RRSe ) - ( ( DS / CS ) - ( MLU + RMSe ) ) ) * Max( CS,( RRSe / MUC ) ) ) ) )", "obj1": 0.7386138613861386, "obj2": 0.15153179601865094}, {"determining": "( ( ( ACS + ARS ) - Max( DDR,RRS ) ) - Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( ( FirstVNF_CPU / Min( ( ( Const + FirstVNF_CPU ) * ARS ) ,FirstVNF_RAM ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( MLU * MUR ) + ( RCSe / ( ( RRSe / MUR ) + Max( MUC,RRSe ) ) ) ) / Max( Max( MUC,MUR ),( CS / RRSe ) ) ) ,( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) * ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9564356435643564, "obj2": 0.016511700551042743}, {"determining": "Min( ( MRS / ( Max( AMS,FirstVNF_Mem_Server ) - ( ACS + MRS ) ) ) ,Max( Max( Max( RRS,FirstVNF_RAM ),BR ),FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * ( ( RMSe - MUR ) / RCSe ) ) + ( RRSe - MUM ) )", "obj1": 0.8396039603960396, "obj2": 0.11233461513923604}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( Max( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ),RCSe ) / ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) )", "obj1": 0.6118811881188119, "obj2": 0.2588711717346417}, {"determining": "( ( ( Max( BR,ARS ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( MUR / ( CS * RRSe ) ) * ( DS * DS ) )", "obj1": 0.9782178217821782, "obj2": 0.009705215974077594}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / AMS ) ) / ( ARS - DDR ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 0.7188118811881188, "obj2": 0.16169855135691974}, {"determining": "( ( ( Max( BR,ARS ) / ( PN + FirstVNF_RAM ) ) - ( Min( PN ,Max( ( RRS * Const ),Min( DDR ,Max( Max( DDR,ACS ),FirstVNF_RAM_Server ) ) ) ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( ( ( MRS + MDR ) + FirstVNF_RAM ) + Max( Max( AMS,DDR ),( PN - Const ) ) ) )", "choosing": "( ( MUR / ( Min( ( MUR + RCSe ) ,( RRSe + MUC ) ) * Min( RRSe ,Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) ) ) ) / Min( RRSe ,( MUR / MUM ) ) )", "obj1": 0.9465346534653465, "obj2": 0.026407401235296807}, {"determining": "( ( Max( ACS,ARS ) - Max( RRS,DDR ) ) - ( AMS / AMS ) )", "choosing": "( ( ( MLU / RMSe ) / ( DS - Min( MUM ,RCSe ) ) ) * ( ( Min( ( MLU * DS ) ,Max( ( DS + MUC ),MUR ) ) + RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.6752475247524753, "obj2": 0.19599544177090583}, {"determining": "( ( ( Min( ( CRS * ACS ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + CRS ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( ( RMSe * MLU ) + MUR ) ) ) / Max( Max( MUR,MUC ),( CS + RRSe ) ) )", "obj1": 0.700990099009901, "obj2": 0.16718469529280905}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / ( Const - DDR ) ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6435643564356436, "obj2": 0.22829116036357233}, {"determining": "Min( ( MRS / ( ( ACS + MRS ) - ( FirstVNF_RAM / ARS ) ) ) ,Max( Max( BR,Max( RRS,Const ) ),Min( ( Max( ACS,Min( ACS ,Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( MDR / Max( AMS,FirstVNF_Mem_Server ) ) * RRS ) ) ,MRS ) ) )", "choosing": "( ( RRSe * ( Max( RMSe,CS ) / RCSe ) ) + Min( RRSe ,MUM ) )", "obj1": 0.8514851485148515, "obj2": 0.10761030798450504}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,CRS ) ) / ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe )", "obj1": 0.6811881188118812, "obj2": 0.18754706085743883}, {"determining": "( Max( ( FirstVNF_Mem_Server * DDR ),( AMS + ( CRS + PN ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server * ( ( Min( FirstVNF_Mem ,Const ) - AMS ) + Max( BR,ARS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( RRSe ,MLU ),MUC ),( CS * ( Min( ( Max( ( MLU * MUM ),MUC ) - MUC ) ,( ( ( CS - RRSe ) * MUR ) + ( ( MUR + CS ) / Min( MUR ,RRSe ) ) ) ) + ( RMSe - ( ( Max( CS,MLU ) - Min( CS ,MUR ) ) - RRSe ) ) ) ) ) )", "obj1": 0.6079207920792079, "obj2": 0.27075724092513537}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / ( Const - DDR ) ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6435643564356436, "obj2": 0.22829116036357233}, {"determining": "( ( MDR / BR ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( Max( ( RMSe - MUC ),( MUM * MUR ) ) * ( RMSe + CS ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.6495049504950495, "obj2": 0.22232924808057541}, {"determining": "( Max( Const,MDR ) / ( ( ( Max( BR,ARS ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + ( RCSe / CS ) )", "obj1": 0.9287128712871288, "obj2": 0.0390748237969981}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / ( Const - DDR ) ) ) / ( ARS - DDR ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( RRSe + MUR ) + CS ) ) + ( RCSe * MUC ) ) )", "obj1": 0.6673267326732674, "obj2": 0.20447642843428376}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / ( Const - DDR ) ) ) / ( ARS - DDR ) )", "choosing": "Min( ( Max( ( MLU - MUM ),CS ) - Min( DS ,MUC ) ) ,( RMSe * Min( DS ,CS ) ) )", "obj1": 0.7148514851485148, "obj2": 0.16675720760298204}, {"determining": "( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.695049504950495, "obj2": 0.18677052704933597}, {"determining": "( ( FirstVNF_CPU / RRS ) / ( ( FirstVNF_CPU - MRS ) * ( MDR + AMS ) ) )", "choosing": "( ( ( Min( CS ,MUR ) - MUM ) / RMSe ) / Max( RCSe,MUM ) )", "obj1": 0.6554455445544555, "obj2": 0.21714015910731674}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( ( Max( RRS,ACS ) / MDR ) / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( MLU / MUR ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.9861386138613861, "obj2": 0.004518178169158789}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( Max( ( MUM - MUM ),( MLU / MUR ) ) / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9900990099009901, "obj2": 0.0034628953672141563}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( CS * Min( Max( MUR,MUC ) ,( RRSe + MUC ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.6633663366336634, "obj2": 0.2059577978781451}, {"determining": "( ( ( Max( BR,ARS ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( RRSe * ( Max( RMSe,CS ) / RCSe ) ) + Min( RRSe ,MUM ) )", "obj1": 0.9425742574257425, "obj2": 0.03379302969541061}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.697029702970297, "obj2": 0.17934176123566622}, {"determining": "( ( PN / Min( ( ( Max( AMS,Const ) / Const ) - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( Max( CRS,( FirstVNF_CPU / PN ) ) / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( ( MUM - MUM ),( MLU / MUR ) ) + Max( ( Max( MUR,CS ) + ( ( MUC * RMSe ) - ( RMSe * RCSe ) ) ),( ( MUR / RRSe ) + ( RMSe * CS ) ) ) )", "obj1": 0.9405940594059405, "obj2": 0.036075819752196044}, {"determining": "( ( ( Max( BR,ARS ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),Max( Const,MDR ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( MUC * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( RCSe / CS ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9306930693069307, "obj2": 0.03851360578523675}, {"determining": "( ( ARS - ( FirstVNF_Mem_Server * ACS ) ) / Max( FirstVNF_CPU_Server,Min( CRS ,MDR ) ) )", "choosing": "( Min( RRSe ,CS ) / Max( MUR,Max( MUM,Max( Max( MUR,MUC ),RRSe ) ) ) )", "obj1": 0.6554455445544555, "obj2": 0.21714015910731674}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.697029702970297, "obj2": 0.17934176123566622}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( CS * Min( Max( MUR,MUC ) ,( RRSe + MUC ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.6633663366336634, "obj2": 0.2059577978781451}, {"determining": "( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.695049504950495, "obj2": 0.18677052704933597}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RMSe,RCSe ) / ( RCSe * MUC ) )", "obj1": 0.9267326732673268, "obj2": 0.05427502847776643}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS * ( ( Const / ARS ) - Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) + ( MLU * CS ) ) * ( MUC + ( Min( MUM ,MLU ) - Max( MUC,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) / Max( AMS,ARS ) ) * ( ( Const - FirstVNF_Mem ) + ( FirstVNF_RAM_Server * CRS ) ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS / AMS ) ) - ( DDR / MDR ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( DS - DS ) ),( ( RRSe + MUM ) + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,MRS ) + ( CRS + ( ( Max( RRS,ACS ) - MDR ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem_Server * BR ) )", "choosing": "( ( ( MUM - MUM ) - ( Max( MUR,RMSe ) / MUR ) ) + Max( ( RCSe * MUC ),( RRSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - CRS ) - ( Const + PN ) ) ,Max( Max( ( CRS * DDR ),BR ),( MRS * ARS ) ) )", "choosing": "( ( ( MUC - ( ( ( ( MUR * ( RMSe * DS ) ) - RMSe ) + CS ) / Min( RMSe ,( MUC * RCSe ) ) ) ) / ( MUR - CS ) ) + ( Min( RCSe ,CS ) - Max( RMSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) ,Max( PN,RRS ) ) - ( Max( ( Const * CRS ),( MRS + DDR ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * ( ( RMSe - RCSe ) - ( MUM * MUR ) ) ) - Min( ( Max( MLU,Min( RMSe ,MUM ) ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) / Max( AMS,ARS ) ) * ( ( Const - FirstVNF_Mem ) + ( FirstVNF_RAM_Server * CRS ) ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.6059405940594059, "obj2": 0.2777296079888138}, {"determining": "( ( PN / Min( ( ( Max( AMS,Const ) / Const ) - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( Max( CRS,( FirstVNF_CPU / PN ) ) / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( ( MUM - MUM ),( MLU / MUR ) ) + Max( ( Max( MUR,CS ) + ( ( MUC * RMSe ) - ( RMSe * RCSe ) ) ),( ( MUR / RRSe ) + ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.6059405940594059, "obj2": 0.2777296079888138}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( MLU / MUR ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.7663366336633664, "obj2": 0.11467789385604696}, {"determining": "( Max( ( MRS / ( Max( AMS,FirstVNF_Mem_Server ) - ( ACS + MRS ) ) ),FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( ( MUM - MUM ),( MLU / MUR ) ) + Max( ( ( ( RMSe - MUR ) / RCSe ) * MUM ),( RCSe * MUC ) ) )", "obj1": 0.8297029702970297, "obj2": 0.09771076119717274}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.7465346534653465, "obj2": 0.13123111546298863}, {"determining": "( Max( PN,FirstVNF_RAM ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( AMS / MDR ) ) / ( ARS - ( FirstVNF_CPU - PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe - MUR ) - RCSe ) ) + ( MUM * CS ) )", "obj1": 0.8554455445544554, "obj2": 0.09251394948006092}, {"determining": "( Min( RRS ,Const ) / ( ( ( ( FirstVNF_CPU - CRS ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( ARS + FirstVNF_RAM_Server ) ) ) / ( ARS - DDR ) ) - DDR ) )", "choosing": "( ( Min( MUR ,( MUC / MLU ) ) / ( Min( ( RRSe + MUC ) ,( MUR + RCSe ) ) * Min( RRSe ,Max( MUC,( Max( RCSe,( MLU * CS ) ) + MUR ) ) ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.6237623762376238, "obj2": 0.24826274802334108}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) ) ) + ( RCSe * MUC ) ) )", "obj1": 0.8653465346534653, "obj2": 0.05486773594412239}, {"determining": "( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / ( PN + ( CRS - ( CRS / FirstVNF_RAM ) ) ) ) ) / ( ARS - DDR ) ) / AMS ) - Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( RCSe / MLU ) + ( ( MUM / ( Max( RMSe,MLU ) / Min( RRSe ,CS ) ) ) + ( RCSe * MUC ) ) )", "obj1": 0.8871287128712871, "obj2": 0.0416454036912777}, {"determining": "( Max( PN,FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) + ( Max( CRS,( PN / RRS ) ) / AMS ) ) / Max( FirstVNF_Mem_Server,DDR ) ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe - Max( ( RCSe * CS ),Max( CS,Max( ( MUC * MUR ),Max( CS,DS ) ) ) ) ) / RCSe ) ) + ( MUM - MLU ) )", "obj1": 0.902970297029703, "obj2": 0.04105537809373251}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Max( ( ARS * DDR ),( DDR + MRS ) ) )", "choosing": "( ( ( MUR * RRSe ) + ( RMSe / ( ( ( RCSe + MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 0.9247524752475248, "obj2": 0.030225970240490188}, {"determining": "( Max( AMS,DDR ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6594059405940594, "obj2": 0.20048465567002383}, {"determining": "( FirstVNF_CPU_Server / ( ARS - DDR ) )", "choosing": "( ( MUM * MUR ) / Min( RRSe ,CS ) )", "obj1": 0.6415841584158416, "obj2": 0.22840774177930986}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( Max( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ),RCSe ) / ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) )", "obj1": 0.6118811881188119, "obj2": 0.2588711717346417}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) + ( ( ( ( FirstVNF_CPU / ( FirstVNF_RAM - AMS ) ) * FirstVNF_CPU ) * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( ( ( Min( ( ( RMSe - RMSe ) - CS ) ,CS ) / ( ( MUC + ( MUC * ( RMSe / CS ) ) ) / RCSe ) ) * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / ( RMSe / ( ( ( MUR * RRSe ) - ( ( DS / CS ) - ( MLU + RMSe ) ) ) * Max( CS,( RRSe / MUC ) ) ) ) )", "obj1": 0.7386138613861386, "obj2": 0.15153179601865094}, {"determining": "( ( Max( ACS,ARS ) - Max( RRS,DDR ) ) - ( AMS / AMS ) )", "choosing": "( ( ( MLU / RMSe ) / ( DS - Min( MUM ,RCSe ) ) ) * ( ( Min( ( MLU * DS ) ,Max( ( DS + MUC ),MUR ) ) + RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.6752475247524753, "obj2": 0.19599544177090583}, {"determining": "( Max( PN,FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( Max( CRS,( PN / RRS ) ) / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( ( MUM - MUM ),( MLU / MUR ) ) + Max( ( MUM * RRSe ),( ( MUR / RRSe ) + ( RMSe * CS ) ) ) )", "obj1": 0.8633663366336634, "obj2": 0.06897258499699127}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,CRS ) ) / ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe )", "obj1": 0.6811881188118812, "obj2": 0.18754706085743883}, {"determining": "( ( ( ACS + ARS ) - Max( DDR,RRS ) ) - Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( ( FirstVNF_CPU / Min( ( ( Const + FirstVNF_CPU ) * ARS ) ,FirstVNF_RAM ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( MLU * MUR ) + ( RCSe / ( ( RRSe / MUR ) + Max( MUC,RRSe ) ) ) ) / Max( Max( MUC,MUR ),( CS / RRSe ) ) ) ,( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) * ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9564356435643564, "obj2": 0.016511700551042743}, {"determining": "( ( Max( RRS,ACS ) - MDR ) - Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( ( RRSe * MUM ) ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.7207920792079208, "obj2": 0.15854771100234855}, {"determining": "( ( Min( BR ,MRS ) + ( CRS + ( ( Max( AMS,ACS ) - MDR ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem_Server * BR ) )", "choosing": "( ( ( MUM - MUM ) - ( Max( MUR,RMSe ) / MUR ) ) + Max( ( ( ( RRSe * MUR ) + ( RCSe / ( CS + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) ),( RRSe * MUM ) ) )", "obj1": 0.9722772277227723, "obj2": 0.008980624163940331}, {"determining": "( ( FirstVNF_CPU / RRS ) / ( ( FirstVNF_CPU - MRS ) * ( MDR + AMS ) ) )", "choosing": "( ( ( Min( CS ,MUR ) - MUM ) / RMSe ) / Max( RCSe,MUM ) )", "obj1": 0.6554455445544555, "obj2": 0.21714015910731674}, {"determining": "( ( ( Min( ( CRS * ACS ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + CRS ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( ( RMSe * MLU ) + MUR ) ) ) / Max( Max( MUR,MUC ),( CS + RRSe ) ) )", "obj1": 0.700990099009901, "obj2": 0.16718469529280905}, {"determining": "( ( ( Max( BR,ARS ) / ( PN + FirstVNF_RAM ) ) - ( Min( PN ,Max( ( RRS * Const ),Min( DDR ,Max( Max( DDR,ACS ),FirstVNF_RAM_Server ) ) ) ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( ( ( MRS + MDR ) + FirstVNF_RAM ) + Max( Max( AMS,DDR ),( PN - Const ) ) ) )", "choosing": "( ( MUR / ( Min( ( MUR + RCSe ) ,( RRSe + MUC ) ) * Min( RRSe ,Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) ) ) ) / Min( RRSe ,( MUR / MUM ) ) )", "obj1": 0.9465346534653465, "obj2": 0.026407401235296807}, {"determining": "( Max( PN,FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( Max( CRS,( PN / RRS ) ) / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( ( MUM - MUM ),( MLU / MUR ) ) + Max( ( MUM * RRSe ),( ( MUR / RRSe ) + ( RMSe * CS ) ) ) )", "obj1": 0.8633663366336634, "obj2": 0.06897258499699127}, {"determining": "( ( ( Min( ACS ,ARS ) + AMS ) - ( Max( ( BR * RRS ),FirstVNF_RAM ) / ( DDR - Const ) ) ) / ( ARS - DDR ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( RRSe + ( DS / RMSe ) ) + CS ) ) + ( ( ( RMSe + MUR ) / CS ) * MUC ) ) )", "obj1": 0.695049504950495, "obj2": 0.18508198971492243}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) / ( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) ) ) / ( ARS - DDR ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Max( ( RRSe * MUM ),( RCSe * MUC ) ) )", "obj1": 0.9346534653465347, "obj2": 0.026812644591813067}, {"determining": "( MRS / ( ARS - DDR ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUC + MUM ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.7049504950495049, "obj2": 0.1648216662380891}, {"determining": "( ( ( Min( BR ,MRS ) + ( CRS + ( ( Max( RRS,ACS ) - MDR ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( CS + MUR ) ) ) / Max( Max( MUR,MUC ),( ( ( MUM - MUM ) - ( Max( MUR,RMSe ) / MUR ) ) / RRSe ) ) )", "obj1": 0.9504950495049505, "obj2": 0.017890364264350516}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.697029702970297, "obj2": 0.17934176123566622}, {"determining": "( Max( ( FirstVNF_Mem_Server * DDR ),( AMS + ( CRS + PN ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server * ( ( Min( FirstVNF_Mem ,Const ) - AMS ) + Max( BR,ARS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( RRSe ,MLU ),MUC ),( CS * ( Min( ( Max( ( MLU * MUM ),MUC ) - MUC ) ,( ( ( CS - RRSe ) * MUR ) + ( ( MUR + CS ) / Min( MUR ,RRSe ) ) ) ) + ( RMSe - ( ( Max( CS,MLU ) - Min( CS ,MUR ) ) - RRSe ) ) ) ) ) )", "obj1": 0.6079207920792079, "obj2": 0.27075724092513537}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / AMS ) ) / ( ARS - DDR ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 0.7188118811881188, "obj2": 0.16169855135691974}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( MDR - FirstVNF_Mem ) + ( AMS / BR ) ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( Max( ( ( ( ( RRSe + MUC ) - MLU ) - RRSe ) + ( ( RMSe + CS ) + ( DS - ( CS + DS ) ) ) ),RCSe ),MUR ),( CS / RRSe ) ) )", "obj1": 0.7386138613861386, "obj2": 0.15153179601865094}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6475247524752475, "obj2": 0.22447884374872262}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) - ( AMS + ( CRS + PN ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server * ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,ARS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( CS ,MLU ),MUC ),( CS * RRSe ) ) )", "obj1": 0.6079207920792079, "obj2": 0.27075724092513537}, {"determining": "( Max( PN,FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( Max( CRS,( PN / RRS ) ) / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9782178217821782, "obj2": 0.008498181926057218}, {"determining": "( ( Min( ACS ,BR ) - ( ( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) / ( AMS * FirstVNF_RAM ) ) + FirstVNF_Mem ) ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Min( Max( MUR,( ( MUR / MUC ) + MLU ) ) ,( RRSe + MUC ) ) ) / Min( RRSe ,MUR ) )", "obj1": 0.9821782178217822, "obj2": 0.0062467725735753194}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.697029702970297, "obj2": 0.17934176123566622}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( ( Max( RRS,ACS ) / MDR ) / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( MLU / MUR ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.9861386138613861, "obj2": 0.004401247566896124}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( Max( ( MUM - MUM ),( MLU / MUR ) ) / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9900990099009901, "obj2": 0.0034628953672141563}, {"determining": "( ( ARS - ( FirstVNF_Mem_Server * ACS ) ) / Max( FirstVNF_CPU_Server,Min( CRS ,MDR ) ) )", "choosing": "( Min( RRSe ,CS ) / Max( MUR,Max( MUM,Max( Max( MUR,MUC ),RRSe ) ) ) )", "obj1": 0.6554455445544555, "obj2": 0.21714015910731674}, {"determining": "( ( MDR / BR ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( Max( ( RMSe - MUC ),( MUM * MUR ) ) * ( RMSe + CS ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.6495049504950495, "obj2": 0.22232924808057541}, {"determining": "( ( ( ( MRS - FirstVNF_Mem ) * Min( ( ( ( DDR / ARS ) * FirstVNF_Mem ) * ( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MRS ) + MRS ) ) ) ,PN ) ) * ( ( PN + DDR ) - ( FirstVNF_CPU_Server - MRS ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( Const * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( MLU,MLU ) * DS ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.6495049504950495, "obj2": 0.22232924808057541}, {"determining": "( ( ( Max( BR,ARS ) / ( BR + FirstVNF_RAM ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( ( ( MRS + MDR ) + FirstVNF_RAM ) + Max( Max( AMS,DDR ),( PN - Const ) ) ) )", "choosing": "( ( MUR / ( Min( ( RRSe + MUC ) ,( MUR + RCSe ) ) * Min( RRSe ,Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.994059405940594, "obj2": 0.0019685392751417146}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / ( Const - DDR ) ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6435643564356436, "obj2": 0.22829116036357233}, {"determining": "( ( ( Max( BR,ARS ) / ( PN + FirstVNF_RAM ) ) - ( Min( PN ,Max( ( RRS * Const ),Min( DDR ,Max( Max( DDR,ACS ),FirstVNF_RAM_Server ) ) ) ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( ( ( MRS + MDR ) + FirstVNF_RAM ) + Max( Max( AMS,DDR ),( PN - Const ) ) ) )", "choosing": "( ( MUR / ( Min( ( MUR + RCSe ) ,( RRSe + MUC ) ) * Min( RRSe ,Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) ) ) ) / Min( RRSe ,( MUR / MUM ) ) )", "obj1": 0.994059405940594, "obj2": 0.0019685392751417146}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( PN + AMS ) / ( Const - DDR ) ) ) / ( ( FirstVNF_RAM / RRS ) * Const ) )", "choosing": "Min( ( CS + MLU ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 0.7188118811881188, "obj2": 0.16169855135691974}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( BR / MRS ) / ( AMS - DDR ) ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( MUR * ( MUM + RCSe ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.6435643564356436, "obj2": 0.22829116036357233}], "7": [{"determining": "( ( Min( ACS ,BR ) - ( ( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) / ( AMS * FirstVNF_RAM ) ) + FirstVNF_Mem ) ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Max( ( RRSe * MUM ),( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / Min( ( ( Max( AMS,Const ) / Const ) - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( Max( CRS,( FirstVNF_CPU / PN ) ) / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( ( MUM - MUM ),( MLU / MUR ) ) + Max( ( Max( MUR,CS ) + ( ( MUC * RMSe ) - ( RMSe * RCSe ) ) ),( ( MUR / RRSe ) + ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) - ( AMS + ( CRS + PN ) ) ) + ( FirstVNF_CPU - MRS ) )", "choosing": "( Max( ( ( ( CS / ( DS + CS ) ) / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( CS ,MLU ),MUC ),( CS * RRSe ) ) )", "obj1": 0.596039603960396, "obj2": 0.2869582698718328}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( ( CRS / Min( RRS ,ACS ) ) - PN ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( MUR / ( MUR * DS ) ) / Min( Max( Min( MUC ,Max( MUC,MLU ) ),( RRSe - ( MUM * DS ) ) ) ,CS ) ) ) + ( RCSe * MUC ) ) )", "obj1": 0.8217821782178217, "obj2": 0.10470134682742402}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( ( FirstVNF_Mem / MDR ) / FirstVNF_CPU_Server ) * ( MDR / AMS ) ) / ( ACS - FirstVNF_Mem ) ) / AMS ) )", "choosing": "( Max( RCSe,RRSe ) / Min( RRSe ,( RMSe / RCSe ) ) )", "obj1": 0.8257425742574257, "obj2": 0.07099676390932863}, {"determining": "( Min( RRS ,Const ) / ( ( ( ( FirstVNF_CPU - CRS ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( ARS + FirstVNF_RAM_Server ) ) ) / ( ARS - DDR ) ) - DDR ) )", "choosing": "( ( Min( MUR ,( MUC / MLU ) ) / ( Min( ( RRSe + MUC ) ,( MUR + RCSe ) ) * Min( RRSe ,Max( MUC,( Max( RCSe,( MLU * CS ) ) + MUR ) ) ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.6237623762376238, "obj2": 0.24826274802334108}, {"determining": "( Max( FirstVNF_Mem_Server,PN ) - Max( ( MRS * DDR ),FirstVNF_CPU ) )", "choosing": "( ( MUR - ( ( Max( ( RCSe / CS ),MUC ) + RRSe ) * DS ) ) / ( RRSe / CS ) )", "obj1": 0.7465346534653465, "obj2": 0.12191839141099688}, {"determining": "( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / ( PN + ( CRS - ( CRS / FirstVNF_RAM ) ) ) ) ) / ( ARS - DDR ) ) / AMS ) - Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( RCSe / MLU ) + ( ( MUM / ( Max( RMSe,MLU ) / Min( RRSe ,CS ) ) ) + ( RCSe * MUC ) ) )", "obj1": 0.8871287128712871, "obj2": 0.0416454036912777}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( Min( MUM ,RRSe ) ,MUC ) + RRSe ) / Max( Max( Max( ( ( ( ( RRSe + MUC ) - MLU ) - RRSe ) + ( ( RMSe + RRSe ) + ( DS - ( CS + DS ) ) ) ),RCSe ),MUR ),( CS / RRSe ) ) )", "obj1": 0.7683168316831683, "obj2": 0.11185059519532156}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.900990099009901, "obj2": 0.03837879972983601}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ( MDR * ( ( ( MDR - FirstVNF_RAM ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( RCSe / MLU ) + ( Max( RRSe,( ( RRSe + ( CS - RMSe ) ) + CS ) ) + ( ( RCSe / ( RMSe + MUR ) ) * MUC ) ) )", "obj1": 0.8554455445544554, "obj2": 0.06368534387562132}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) ) ) + ( RCSe * MUC ) ) )", "obj1": 0.8653465346534653, "obj2": 0.05486773594412239}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Max( ( ARS * DDR ),( DDR + MRS ) ) )", "choosing": "( ( ( MUR * RRSe ) + ( RMSe / ( ( ( RCSe + MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 0.9247524752475248, "obj2": 0.030225970240490188}, {"determining": "( ( ( FirstVNF_CPU - Min( FirstVNF_CPU ,Min( ( CRS - BR ) ,FirstVNF_CPU ) ) ) * ( MDR / AMS ) ) / ( ARS * DDR ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( Min( MLU ,DS ) ,( RCSe + RMSe ) ) )", "obj1": 0.7425742574257426, "obj2": 0.14589555198185497}, {"determining": "( FirstVNF_CPU_Server / ( ARS - DDR ) )", "choosing": "( ( MUM * MUR ) / Min( RRSe ,CS ) )", "obj1": 0.6415841584158416, "obj2": 0.22840774177930986}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM + AMS ) ) / ( Min( FirstVNF_CPU ,DDR ) - DDR ) )", "choosing": "( Max( ( ( RRSe / DS ) + ( MUC + MUM ) ),( ( RRSe + CS ) - ( MUC * MLU ) ) ) + Max( ( CS + MUC ),( CS * RRSe ) ) )", "obj1": 0.6118811881188119, "obj2": 0.2562054277454414}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( MRS - DDR ) / ( ( ( ARS + FirstVNF_CPU_Server ) - MRS ) * ( MDR / AMS ) ) ) ) ) )", "choosing": "( ( MLU / MUR ) / ( ( RRSe / CS ) * ( RRSe * RMSe ) ) )", "obj1": 0.7564356435643564, "obj2": 0.11223608572263286}, {"determining": "( Max( AMS,DDR ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6594059405940594, "obj2": 0.20048465567002383}, {"determining": "( ( ( ACS + ARS ) - Max( DDR,RRS ) ) - Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( ( FirstVNF_CPU / Min( ( ( Const + FirstVNF_CPU ) * ARS ) ,FirstVNF_RAM ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( MLU * MUR ) + ( RCSe / ( ( RRSe / MUR ) + Max( MUC,RRSe ) ) ) ) / Max( Max( MUC,MUR ),( CS / RRSe ) ) ) ,( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) * ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9564356435643564, "obj2": 0.016511700551042743}, {"determining": "( ( Min( ACS ,ARS ) - Max( ( FirstVNF_CPU_Server - Const ),DDR ) ) - ( FirstVNF_Mem_Server * BR ) )", "choosing": "( ( ( MUM - MUM ) - ( Max( MUR,RMSe ) / MUR ) ) + Max( ( ( Max( RRSe,MUR ) + ( RCSe / ( ( CS * RRSe ) - MUR ) ) ) / Min( Max( MUR,MUC ) ,( RRSe + MUC ) ) ),( RRSe * MUM ) ) )", "obj1": 0.7207920792079208, "obj2": 0.1532733545476909}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,CRS ) ) / ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe )", "obj1": 0.6811881188118812, "obj2": 0.18754706085743883}, {"determining": "( ( FirstVNF_CPU / RRS ) / ( ( FirstVNF_CPU - MRS ) * ( MDR + AMS ) ) )", "choosing": "( ( ( Min( CS ,MUR ) - MUM ) / RMSe ) / Max( RCSe,MUM ) )", "obj1": 0.6554455445544555, "obj2": 0.21714015910731674}, {"determining": "( ( ( Max( BR,ARS ) / ( PN + FirstVNF_RAM ) ) - ( Min( PN ,Max( ( RRS * Const ),Min( DDR ,Max( Max( DDR,ACS ),FirstVNF_RAM_Server ) ) ) ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( ( ( MRS + MDR ) + FirstVNF_RAM ) + Max( Max( AMS,DDR ),( PN - Const ) ) ) )", "choosing": "( ( MUR / ( Min( ( MUR + RCSe ) ,( RRSe + MUC ) ) * Min( RRSe ,Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) ) ) ) / Min( RRSe ,( MUR / MUM ) ) )", "obj1": 0.9465346534653465, "obj2": 0.026407401235296807}, {"determining": "( ( ( Min( ACS ,ARS ) + AMS ) - ( Max( ( BR * RRS ),FirstVNF_RAM ) / ( DDR - Const ) ) ) / ( ARS - DDR ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( RRSe + ( DS / RMSe ) ) + CS ) ) + ( ( ( RMSe + MUR ) / CS ) * MUC ) ) )", "obj1": 0.695049504950495, "obj2": 0.18508198971492243}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) / ( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) ) ) / ( ARS - DDR ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Max( ( RRSe * MUM ),( RCSe * MUC ) ) )", "obj1": 0.9346534653465347, "obj2": 0.026812644591813067}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) + ( ( ( ( FirstVNF_CPU / ( FirstVNF_RAM - AMS ) ) * FirstVNF_CPU ) * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( ( ( Min( ( ( RMSe - RMSe ) - CS ) ,CS ) / ( ( MUC + ( MUC * ( RMSe / CS ) ) ) / RCSe ) ) * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / ( RMSe / ( ( ( MUR * RRSe ) - ( ( DS / CS ) - ( MLU + RMSe ) ) ) * Max( CS,( RRSe / MUC ) ) ) ) )", "obj1": 0.7386138613861386, "obj2": 0.15153179601865094}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / AMS ) ) / ( ARS - DDR ) )", "choosing": "Min( ( CS / ( DS + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 0.7188118811881188, "obj2": 0.16169855135691974}, {"determining": "( ( ( Min( BR ,MRS ) + ( CRS + ( ( Max( RRS,ACS ) - MDR ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * ( MDR / MRS ) ) / ( ARS - DDR ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( CS + MUR ) ) ) / ( ( MUR / RRSe ) + ( RMSe * CS ) ) )", "obj1": 0.9504950495049505, "obj2": 0.017740991952605336}, {"determining": "( ( ( Min( ( CRS * ACS ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + CRS ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( ( RMSe * MLU ) + MUR ) ) ) / Max( Max( MUR,MUC ),( CS + RRSe ) ) )", "obj1": 0.700990099009901, "obj2": 0.16718469529280905}, {"determining": "( Max( ( FirstVNF_Mem_Server * DDR ),( AMS + ( CRS + PN ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server * ( ( Min( FirstVNF_Mem ,Const ) - AMS ) + Max( BR,ARS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( RRSe ,MLU ),MUC ),( CS * ( Min( ( Max( ( MLU * MUM ),MUC ) - MUC ) ,( ( ( CS - RRSe ) * MUR ) + ( ( MUR + CS ) / Min( MUR ,RRSe ) ) ) ) + ( RMSe - ( ( Max( CS,MLU ) - Min( CS ,MUR ) ) - RRSe ) ) ) ) ) )", "obj1": 0.6079207920792079, "obj2": 0.27075724092513537}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( RMSe,( MUR - ( MUR * DS ) ) ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.8594059405940594, "obj2": 0.05749462535813894}, {"determining": "( ( ( Min( PN ,Max( ( RRS * Const ),Min( DDR ,Max( Max( DDR,ACS ),FirstVNF_RAM_Server ) ) ) ) - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) / Min( RRSe ,CS ) )", "obj1": 0.6633663366336634, "obj2": 0.1976937148474136}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( MDR - FirstVNF_Mem ) + ( AMS / BR ) ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( Max( ( ( ( ( RRSe + MUC ) - MLU ) - RRSe ) + ( ( RMSe + CS ) + ( DS - ( CS + DS ) ) ) ),RCSe ),MUR ),( CS / RRSe ) ) )", "obj1": 0.7683168316831683, "obj2": 0.11185059519532156}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server / ( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( ( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe ),( CS * RRSe ) ) )", "obj1": 0.699009900990099, "obj2": 0.1772630105955972}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / ( Const - DDR ) ) ) / ( ARS - DDR ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) ) ) + ( RCSe * MUC ) ) )", "obj1": 0.6772277227722773, "obj2": 0.19491614197213178}, {"determining": "( ( Max( ACS,ARS ) - Max( RRS,DDR ) ) - ( AMS / AMS ) )", "choosing": "( ( ( MLU / RMSe ) / ( DS - Min( MUM ,RCSe ) ) ) * ( ( Min( ( MLU * DS ) ,Max( ( DS + MUC ),MUR ) ) + RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.6752475247524753, "obj2": 0.19599544177090583}, {"determining": "( ( MDR * MDR ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + MLU ) + ( ( MUM - MUM ) - ( Max( MUR,RMSe ) / MUR ) ) )", "obj1": 0.9722772277227723, "obj2": 0.008950102457503979}, {"determining": "( Min( ARS ,FirstVNF_RAM_Server ) / ( ARS - DDR ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( ( DS + RMSe ) / ( DS / ( RMSe - MUR ) ) ) ,( ( MUC + MUM ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.7049504950495049, "obj2": 0.1648216662380891}, {"determining": "( Max( AMS,DDR ) / Min( CRS ,MDR ) )", "choosing": "( ( MUR - ( ( Max( MUM,Max( Max( MUR,MUC ),RRSe ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.601980198019802, "obj2": 0.2859263042578862}, {"determining": "( ( ( ( FirstVNF_CPU_Server / BR ) + DDR ) - Min( MRS ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ) )", "choosing": "( Max( ( ( CS + RRSe ) - ( MUC * MLU ) ),( ( RRSe / DS ) * ( ( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( DS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) ) + MUM ) ) ) + ( ( ( MUM / RRSe ) - DS ) + MUR ) )", "obj1": 0.6039603960396039, "obj2": 0.28124144899311115}, {"determining": "( ( Min( BR ,MRS ) + ( CRS + ( ( Max( AMS,ACS ) - MDR ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem_Server * BR ) )", "choosing": "( ( ( MUM - MUM ) - ( Max( MUR,RMSe ) / MUR ) ) + Max( ( ( ( RRSe * MUR ) + ( RCSe / ( CS + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) ),( RRSe * MUM ) ) )", "obj1": 0.9722772277227723, "obj2": 0.008950102457503979}, {"determining": "( ( Min( BR ,( FirstVNF_CPU - Min( ( FirstVNF_CPU_Server * ACS ) ,FirstVNF_CPU ) ) ) + ( CRS + ( ( Max( AMS,ACS ) - MDR ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem_Server * BR ) )", "choosing": "( ( ( MUM - MUM ) - ( Max( MUR,RMSe ) / MUR ) ) + Max( ( ( ( RRSe * MUR ) + ( RCSe / ( CS + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) ),MUR ) )", "obj1": 0.9762376237623762, "obj2": 0.0076450504097812}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Min( Max( MUR,MUC ) ,( RRSe + MUC ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.9821782178217822, "obj2": 0.005701771781278823}, {"determining": "( ( ( ( PN + MDR ) - Min( MRS ,CRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC / MLU ) ) ) + Max( Max( Min( CS ,MLU ),MUC ),( CS * Min( MUR ,( ( ( Max( MUR,CS ) - DS ) * Max( ( DS - MLU ),CS ) ) - MUM ) ) ) ) )", "obj1": 0.6079207920792079, "obj2": 0.27075724092513537}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.6059405940594059, "obj2": 0.2777296079888138}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( MDR / ( Const + FirstVNF_RAM_Server ) ) ) / ( MRS - ARS ) )", "choosing": "( ( MUR - ( MUR * MUR ) ) / Max( RRSe,( MUR * ( MLU * Max( ( MUM / RCSe ),CS ) ) ) ) )", "obj1": 0.6554455445544555, "obj2": 0.21714015910731674}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.697029702970297, "obj2": 0.17934176123566622}, {"determining": "( ( MDR / BR ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( Max( ( RMSe - MUC ),( MUM * MUR ) ) * ( RMSe + CS ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.6495049504950495, "obj2": 0.22232924808057541}, {"determining": "( ( ( ( MRS - FirstVNF_Mem ) * Min( ( ( ( DDR / ARS ) * FirstVNF_Mem ) * ( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MRS ) + MRS ) ) ) ,PN ) ) * ( ( PN + DDR ) - ( FirstVNF_CPU_Server - MRS ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( Const * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( MLU,MLU ) * DS ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.6495049504950495, "obj2": 0.22232924808057541}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( ARS - DDR ) )", "choosing": "Min( ( CS / ( RRSe + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 0.996039603960396, "obj2": 0.0009786430359895468}], "8": [{"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( ( FirstVNF_CPU / Min( ( PN * ARS ) ,FirstVNF_RAM ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + ( MUM * MLU ) ) ) ) / Max( CS,( CS / RRSe ) ) ) ,( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,BR ) - ( ( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) / ( AMS * FirstVNF_RAM ) ) + FirstVNF_Mem ) ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Max( ( RRSe * MUM ),( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) - ( AMS + ( CRS + PN ) ) ) + ( FirstVNF_CPU - MRS ) )", "choosing": "( Max( ( ( ( CS / ( DS + CS ) ) / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( CS ,MLU ),MUC ),( CS * RRSe ) ) )", "obj1": 0.596039603960396, "obj2": 0.2869582698718328}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( MDR - FirstVNF_Mem ) + ( AMS / BR ) ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( Max( ( ( ( ( RRSe + MUC ) - MLU ) - RRSe ) + ( ( RMSe + CS ) + ( DS - ( CS + DS ) ) ) ),RCSe ),MUR ),( CS / RRSe ) ) )", "obj1": 0.7900990099009901, "obj2": 0.10155941468162465}, {"determining": "( Max( FirstVNF_Mem_Server,PN ) - Max( ( MRS * DDR ),FirstVNF_CPU ) )", "choosing": "( ( MUR - ( ( Max( ( RCSe / CS ),MUC ) + RRSe ) * DS ) ) / ( RRSe / CS ) )", "obj1": 0.7465346534653465, "obj2": 0.12191839141099688}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) ) ) / ( ARS - DDR ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + RRSe )", "obj1": 0.6376237623762376, "obj2": 0.2400161658479188}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( ( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe ),( CS * RRSe ) ) )", "obj1": 0.8831683168316832, "obj2": 0.04787276500321618}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( Const * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server / ( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) ) ) ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( MLU,MLU ) * DS ) * Max( ( RMSe - RCSe ),Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.7306930693069307, "obj2": 0.15127576182064575}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * DDR ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( ( Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) / Min( RRSe ,CS ) ) ,CS ) * MUC ) )", "obj1": 0.8356435643564356, "obj2": 0.06880129190355912}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,CRS ) ) / ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe )", "obj1": 0.6811881188118812, "obj2": 0.18754706085743883}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) ) ) + ( RCSe * MUC ) ) )", "obj1": 0.8613861386138614, "obj2": 0.05474963077500855}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,Min( MDR ,( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - ( FirstVNF_CPU * ACS ) ) ) ) ) )", "choosing": "( ( ( ( Min( CS ,MUC ) + MUR ) * MUR ) + ( RCSe / ( RMSe + RRSe ) ) ) / ( RMSe / ( ( ( MUR * RRSe ) - ( ( DS / CS ) - ( MLU + RMSe ) ) ) * Max( CS,( RRSe / MUC ) ) ) ) )", "obj1": 0.7980198019801981, "obj2": 0.09314749272055914}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ( MDR * ( ( ( MDR - FirstVNF_RAM ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( RCSe / MLU ) + ( Max( RRSe,( ( RRSe + ( CS - RMSe ) ) + CS ) ) + ( ( RCSe / ( RMSe + MUR ) ) * MUC ) ) )", "obj1": 0.8554455445544554, "obj2": 0.06368534387562132}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( MRS - DDR ) / ( ( ( ARS + FirstVNF_CPU_Server ) - MRS ) * ( MDR / AMS ) ) ) ) ) )", "choosing": "( ( MLU / MUR ) / ( ( RRSe / CS ) * ( RRSe * RMSe ) ) )", "obj1": 0.7564356435643564, "obj2": 0.11223608572263286}, {"determining": "( Max( AMS,DDR ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6594059405940594, "obj2": 0.20048465567002383}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) / ( AMS * FirstVNF_RAM ) ) + FirstVNF_Mem ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Max( ( RRSe * MUM ),( RCSe * MUC ) ) ) + ( Max( MUM,( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) ) ) + ( RCSe * MUC ) ) )", "obj1": 0.807920792079208, "obj2": 0.08785400680990252}, {"determining": "( Min( RRS ,Const ) / ( ( ( ( FirstVNF_CPU - CRS ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( ARS + FirstVNF_RAM_Server ) ) ) / ( ARS - DDR ) ) - DDR ) )", "choosing": "( ( Min( MUR ,( MUC / MLU ) ) / ( Min( ( RRSe + MUC ) ,( MUR + RCSe ) ) * Min( RRSe ,Max( MUC,( Max( RCSe,( MLU * CS ) ) + MUR ) ) ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.6237623762376238, "obj2": 0.24826274802334108}, {"determining": "( Min( ARS ,FirstVNF_RAM_Server ) / ( ARS - DDR ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( ( DS + RMSe ) / ( DS / ( RMSe - MUR ) ) ) ,( ( MUC + MUM ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.7049504950495049, "obj2": 0.1648216662380891}, {"determining": "( ( ( ( MRS - FirstVNF_Mem ) * Min( ( ( ( DDR / ARS ) * FirstVNF_Mem ) * ( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MRS ) + MRS ) ) ) ,PN ) ) * ( ( PN + DDR ) - ( FirstVNF_CPU_Server - MRS ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( Const * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( MLU,MLU ) * DS ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) * Min( MUM ,Min( ( ( ( ( Max( MUR,MLU ) * RCSe ) + Max( RMSe,MUC ) ) + RCSe ) + RCSe ) ,Min( ( ( ( RMSe + MUR ) - RCSe ) / RRSe ) ,( DS - Max( ( ( CS * RCSe ) + MUC ),MUM ) ) ) ) ) )", "obj1": 0.693069306930693, "obj2": 0.17890737302884846}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUC + MUM ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.7148514851485148, "obj2": 0.15336177678820312}, {"determining": "( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / ( PN + ( CRS - ( CRS / FirstVNF_RAM ) ) ) ) ) / ( ARS - DDR ) ) / AMS ) - Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( RCSe / MLU ) + ( ( MUM / ( Max( RMSe,MLU ) / Min( RRSe ,CS ) ) ) + ( RCSe * MUC ) ) )", "obj1": 0.8871287128712871, "obj2": 0.0416454036912777}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / AMS ) ) / ( ARS - DDR ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( CS ,MLU ),MUC ),( CS * RRSe ) ) )", "obj1": 0.6118811881188119, "obj2": 0.2562054277454414}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( Min( MUM ,RRSe ) ,MUC ) + RRSe ) / Max( Max( Max( ( ( ( ( RRSe + MUC ) - MLU ) - RRSe ) + ( ( RMSe + RRSe ) + ( DS - ( CS + DS ) ) ) ),RCSe ),MUR ),( CS / RRSe ) ) )", "obj1": 0.7405940594059406, "obj2": 0.13631696652294273}, {"determining": "( ( FirstVNF_CPU / RRS ) / ( ( FirstVNF_CPU - MRS ) * ( MDR + AMS ) ) )", "choosing": "( ( ( Min( CS ,MUR ) - MUM ) / RMSe ) / Max( RCSe,MUM ) )", "obj1": 0.6554455445544555, "obj2": 0.21714015910731674}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) / ( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) ) ) / ( ARS - DDR ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Max( ( RRSe * MUM ),( RCSe * MUC ) ) )", "obj1": 0.9188118811881189, "obj2": 0.03358369480366333}, {"determining": "( ( Min( ACS ,ACS ) - Max( RRS,DDR ) ) - Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) ),( MUM * MUR ) ) ) - Max( Max( ( ( ( ( RRSe + MUC ) - MLU ) - RRSe ) + ( ( RMSe + CS ) + ( DS - ( CS + DS ) ) ) ),RCSe ),MUR ) )", "obj1": 0.9425742574257425, "obj2": 0.021606519630111204}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( RMSe,( MUR - ( MUR * DS ) ) ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.8138613861386138, "obj2": 0.07973092233176979}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) / ( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) ) ) / ( ARS - DDR ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Max( ( RRSe * MUM ),( RCSe * MUC ) ) )", "obj1": 0.9346534653465347, "obj2": 0.026812644591813067}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( Min( MUM ,RRSe ) ,MUC ) + RRSe ) / Max( Max( Max( ( ( ( ( RRSe + MUC ) - MLU ) - RRSe ) + ( ( RMSe + RRSe ) + ( DS - ( CS + DS ) ) ) ),RCSe ),MUR ),( CS / RRSe ) ) )", "obj1": 0.7405940594059406, "obj2": 0.13631696652294273}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( Min( MUM ,RRSe ) ,MUC ) + RRSe ) / Max( Max( Max( ( ( ( ( RRSe + MUC ) - MLU ) - RRSe ) + ( ( RMSe + RRSe ) + ( DS - ( CS + DS ) ) ) ),RCSe ),MUR ),( CS / RRSe ) ) )", "obj1": 0.7683168316831683, "obj2": 0.11185059519532156}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( ( FirstVNF_Mem / MDR ) / FirstVNF_CPU_Server ) * ( MDR / AMS ) ) / ( ACS - FirstVNF_Mem ) ) / AMS ) )", "choosing": "( Max( RCSe,RRSe ) / Min( RRSe ,( RMSe / RCSe ) ) )", "obj1": 0.8257425742574257, "obj2": 0.07099676390932863}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server / ( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( ( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe ),( CS * RRSe ) ) )", "obj1": 0.699009900990099, "obj2": 0.1772630105955972}, {"determining": "( FirstVNF_CPU_Server / ( ARS - DDR ) )", "choosing": "( ( MUM * MUR ) / Min( RRSe ,CS ) )", "obj1": 0.6415841584158416, "obj2": 0.22840774177930986}, {"determining": "( ( ( Min( ( CRS * ACS ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + CRS ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( ( RMSe * MLU ) + MUR ) ) ) / Max( Max( MUR,MUC ),( CS + RRSe ) ) )", "obj1": 0.700990099009901, "obj2": 0.16718469529280905}, {"determining": "( ( ( ACS + ARS ) - Max( DDR,RRS ) ) - Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( ( FirstVNF_CPU / Min( ( ( Const + FirstVNF_CPU ) * ARS ) ,FirstVNF_RAM ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( MLU * MUR ) + ( RCSe / ( ( RRSe / MUR ) + Max( MUC,RRSe ) ) ) ) / Max( Max( MUC,MUR ),( CS / RRSe ) ) ) ,( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) * ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9564356435643564, "obj2": 0.016511700551042743}, {"determining": "( ( ( ( PN + ( FirstVNF_RAM - Const ) ) - Min( MRS ,FirstVNF_CPU_Server ) ) - ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( CS / MUC ) + Max( ( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe ),( CS * ( Max( ( ( MUR - ( MUR * DS ) ) / ( RRSe + CS ) ),MUM ) + ( RCSe * MUC ) ) ) ) )", "obj1": 0.6217821782178218, "obj2": 0.252785534249907}, {"determining": "( Max( ( FirstVNF_Mem_Server * DDR ),( AMS + ( CRS + PN ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server * ( ( Min( FirstVNF_Mem ,Const ) - AMS ) + Max( BR,ARS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( RRSe ,MLU ),MUC ),( CS * ( Min( ( Max( ( MLU * MUM ),MUC ) - MUC ) ,( ( ( CS - RRSe ) * MUR ) + ( ( MUR + CS ) / Min( MUR ,RRSe ) ) ) ) + ( RMSe - ( ( Max( CS,MLU ) - Min( CS ,MUR ) ) - RRSe ) ) ) ) ) )", "obj1": 0.6079207920792079, "obj2": 0.27075724092513537}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.900990099009901, "obj2": 0.03837879972983601}, {"determining": "( ( Min( ACS ,ARS ) - Max( FirstVNF_CPU_Server,DDR ) ) - Min( ACS ,Const ) )", "choosing": "( ( ( RRSe * MUR ) + ( Max( DS,RCSe ) + MUR ) ) / Max( Max( Max( ( ( ( ( RRSe + MUC ) - MLU ) - RRSe ) + ( ( DS - ( CS + DS ) ) + ( MUR + CS ) ) ),RCSe ),MUR ),( CS / RRSe ) ) )", "obj1": 0.7683168316831683, "obj2": 0.11185059519532156}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.900990099009901, "obj2": 0.03837879972983601}, {"determining": "( ( ( Max( BR,ARS ) / ( PN + FirstVNF_RAM ) ) - ( Min( PN ,Max( ( RRS * Const ),Min( DDR ,Max( Max( DDR,ACS ),FirstVNF_RAM_Server ) ) ) ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( ( ( MRS + MDR ) + FirstVNF_RAM ) + Max( Max( AMS,DDR ),( PN - Const ) ) ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( RRSe + MUR ) + CS ) ) + ( ( RCSe / ( RMSe + MUR ) ) * MUC ) ) )", "obj1": 0.9900990099009901, "obj2": 0.005198211691133315}, {"determining": "( ( Min( ACS ,ARS ) - Max( ( FirstVNF_CPU_Server - Const ),DDR ) ) - ( FirstVNF_Mem_Server * BR ) )", "choosing": "( ( ( MUM - MUM ) - ( Max( MUR,RMSe ) / MUR ) ) + Max( ( ( Max( RRSe,MUR ) + ( RCSe / ( ( CS * RRSe ) - MUR ) ) ) / Min( Max( MUR,MUC ) ,( RRSe + MUC ) ) ),( RRSe * MUM ) ) )", "obj1": 0.7207920792079208, "obj2": 0.1532733545476909}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.8158415841584158, "obj2": 0.07344607779018437}, {"determining": "( ( ( ACS + ARS ) - Max( DDR,RRS ) ) - Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( ( FirstVNF_CPU / Min( ( ( Const + FirstVNF_CPU ) * ARS ) ,FirstVNF_RAM ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( MLU * MUR ) + ( RCSe / ( ( RRSe / MUR ) + Max( MUC,RRSe ) ) ) ) / Max( Max( MUC,MUR ),( CS / RRSe ) ) ) ,( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) * ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9683168316831683, "obj2": 0.013751079702083592}, {"determining": "( ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server + AMS ) / ( Const - DDR ) ) ) / ( ARS - DDR ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) ) ) + ( RCSe * MUC ) ) )", "obj1": 0.6772277227722773, "obj2": 0.19491614197213178}, {"determining": "( ( Max( ACS,ARS ) - Max( RRS,DDR ) ) - ( AMS / AMS ) )", "choosing": "( ( ( MLU / RMSe ) / ( DS - Min( MUM ,RCSe ) ) ) * ( ( Min( ( MLU * DS ) ,Max( ( DS + MUC ),MUR ) ) + RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.6752475247524753, "obj2": 0.19599544177090583}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Max( ( RRSe * MUM ),( RCSe * MUC ) ) )", "obj1": 0.9247524752475248, "obj2": 0.028650450861691226}, {"determining": "( Max( AMS,DDR ) / Min( CRS ,MDR ) )", "choosing": "( ( MUR - ( ( Max( MUM,Max( Max( MUR,MUC ),RRSe ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.601980198019802, "obj2": 0.2859263042578862}, {"determining": "( ( ( Min( PN ,Max( ( RRS * Const ),Min( DDR ,Max( Max( DDR,ACS ),FirstVNF_RAM_Server ) ) ) ) - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) / Min( RRSe ,CS ) )", "obj1": 0.6633663366336634, "obj2": 0.1976937148474136}, {"determining": "( ( ( ( FirstVNF_CPU_Server / BR ) + DDR ) - Min( MRS ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ) )", "choosing": "( Max( ( ( CS + RRSe ) - ( MUC * MLU ) ),( ( RRSe / DS ) * ( ( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( DS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) ) + MUM ) ) ) + ( ( ( MUM / RRSe ) - DS ) + MUR ) )", "obj1": 0.6039603960396039, "obj2": 0.28124144899311115}], "9": [{"determining": "( ( Max( ACS,ARS ) - Max( RRS,DDR ) ) - ( AMS / AMS ) )", "choosing": "( ( ( MLU / RMSe ) / ( DS - Min( MUM ,RCSe ) ) ) * ( ( Min( ( MLU * DS ) ,Max( ( DS + MUC ),MUR ) ) + RMSe ) + Min( DS ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( ( FirstVNF_CPU / Min( ( PN * ARS ) ,FirstVNF_RAM ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + ( MUM * MLU ) ) ) ) / Max( CS,( CS / RRSe ) ) ) ,( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) + ( FirstVNF_CPU - MRS ) )", "choosing": "( Max( ( ( ( CS / ( DS + CS ) ) / DS ) * ( MUC + MUM ) ),RMSe ) + Max( Max( Min( CS ,MLU ),MUC ),( CS * RRSe ) ) )", "obj1": 0.5861386138613861, "obj2": 0.2885553428255059}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,DDR ) ) / ( ( Const * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( MLU,MLU ) * DS ) * Max( ( RMSe - ( CS / RRSe ) ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) * Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.7148514851485148, "obj2": 0.146391248923102}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.7247524752475247, "obj2": 0.1272572695221424}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6356435643564357, "obj2": 0.23598611988363752}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( ( MDR * ( ( MRS - ( MRS * FirstVNF_Mem_Server ) ) / ( ARS - MRS ) ) ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RCSe ,( ( MUR - Max( ( MLU * MUM ),RRSe ) ) + DS ) ) + MUM ) / Min( RRSe ,CS ) )", "obj1": 0.807920792079208, "obj2": 0.07697923444644861}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,Min( MDR ,( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - ( FirstVNF_CPU * ACS ) ) ) ) ) )", "choosing": "( ( ( ( Min( CS ,MUC ) + MUR ) * MUR ) + ( RCSe / ( RMSe + RRSe ) ) ) / ( RMSe / ( ( ( MUR * RRSe ) - ( ( DS / CS ) - ( MLU + RMSe ) ) ) * Max( CS,( RRSe / MUC ) ) ) ) )", "obj1": 0.7980198019801981, "obj2": 0.09314749272055914}, {"determining": "( Max( ( FirstVNF_Mem_Server * DDR ),( AMS + ( CRS + PN ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server * ( ( Min( FirstVNF_Mem ,Const ) - AMS ) + Max( BR,ARS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( RRSe ,MLU ),MUC ),( CS * ( Min( ( Max( ( MLU * MUM ),MUC ) - MUC ) ,( ( ( CS - RRSe ) * MUR ) + ( ( MUR + CS ) / Min( MUR ,RRSe ) ) ) ) + ( RMSe - ( ( Max( CS,MLU ) - Min( CS ,MUR ) ) - RRSe ) ) ) ) ) )", "obj1": 0.6079207920792079, "obj2": 0.27075724092513537}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( MRS - DDR ) / ( ( ( ARS + FirstVNF_CPU_Server ) - MRS ) * ( MDR / AMS ) ) ) ) ) )", "choosing": "( ( MLU / MUR ) / ( ( RRSe / CS ) * ( RRSe * RMSe ) ) )", "obj1": 0.7564356435643564, "obj2": 0.11223608572263286}, {"determining": "( Max( FirstVNF_Mem_Server,PN ) - Max( ( MRS * DDR ),FirstVNF_CPU ) )", "choosing": "( ( MUR - ( ( Max( ( RCSe / CS ),MUC ) + RRSe ) * DS ) ) / ( RRSe / CS ) )", "obj1": 0.7465346534653465, "obj2": 0.12191839141099688}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / AMS ) ) / ( ARS - DDR ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( CS ,MLU ),MUC ),( CS * RRSe ) ) )", "obj1": 0.6118811881188119, "obj2": 0.2562054277454414}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,CRS ) ) / ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe )", "obj1": 0.6811881188118812, "obj2": 0.18754706085743883}, {"determining": "( Min( RRS ,Const ) / ( ( ( ( FirstVNF_CPU - CRS ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( ARS + FirstVNF_RAM_Server ) ) ) / ( ARS - DDR ) ) - DDR ) )", "choosing": "( ( Min( MUR ,( MUC / MLU ) ) / ( Min( ( RRSe + MUC ) ,( MUR + RCSe ) ) * Min( RRSe ,Max( MUC,( Max( RCSe,( MLU * CS ) ) + MUR ) ) ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.6237623762376238, "obj2": 0.24826274802334108}, {"determining": "( ( ( ( AMS + DDR ) - Min( ( FirstVNF_CPU + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server / ( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) ) ) )", "choosing": "( ( ( MUM - MUM ) - ( Max( RMSe,MUR ) / MUR ) ) + Max( ( ( ( RRSe * MUR ) + ( RCSe / ( ( Max( MUC,RRSe ) - CS ) / MUR ) ) ) / Min( Max( MUR,MUC ) ,( RRSe + MUC ) ) ),( RRSe * MUM ) ) )", "obj1": 0.7128712871287128, "obj2": 0.16217051990736592}, {"determining": "( FirstVNF_CPU_Server / ( ARS - DDR ) )", "choosing": "( ( MUM * MUR ) / Min( RRSe ,CS ) )", "obj1": 0.6415841584158416, "obj2": 0.22840774177930986}, {"determining": "( Max( AMS,DDR ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6594059405940594, "obj2": 0.20048465567002383}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( DDR - ARS ) ) / DDR ) * DDR ) / ( ARS - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( ( Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) / ( Max( ( DS + MLU ),Min( MLU ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) ) ,( RCSe / CS ) ) * MUC ) )", "obj1": 0.8594059405940594, "obj2": 0.05136392123736182}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * DDR ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( ( Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) / Min( RRSe ,CS ) ) ,CS ) * MUC ) )", "obj1": 0.8376237623762376, "obj2": 0.0660676121920586}, {"determining": "( Max( ( Max( FirstVNF_Mem,PN ) + BR ),FirstVNF_CPU_Server ) + ( ( ( FirstVNF_CPU_Server * MDR ) / Min( MRS ,ACS ) ) / ( ( Const * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( MUR * MUM ) / Min( DS ,MLU ) )", "obj1": 0.6495049504950495, "obj2": 0.22058538285573834}, {"determining": "( ( FirstVNF_CPU / RRS ) / ( ( FirstVNF_CPU - MRS ) * ( MDR + AMS ) ) )", "choosing": "( ( ( Min( CS ,MUR ) - MUM ) / RMSe ) / Max( RCSe,MUM ) )", "obj1": 0.6554455445544555, "obj2": 0.21714015910731674}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) / ( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) ) ) / ( ARS - DDR ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Max( ( RRSe * MUM ),( RCSe * MUC ) ) )", "obj1": 0.9188118811881189, "obj2": 0.03358369480366333}, {"determining": "( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) ) + MUM ) ),( ( CS + ( Min( Min( MUM ,RRSe ) ,MUC ) + RRSe ) ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.7346534653465346, "obj2": 0.1259307616939714}, {"determining": "( Max( AMS,FirstVNF_Mem ) / ( MDR * BR ) )", "choosing": "( ( MUR - ( ( RCSe + ( CS + ( DS * MUC ) ) ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6871287128712872, "obj2": 0.17440147627619304}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( MDR - FirstVNF_Mem ) + ( AMS / BR ) ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( Max( ( ( ( ( RRSe + MUC ) - MLU ) - RRSe ) + ( ( RMSe + CS ) + ( DS - ( CS + DS ) ) ) ),RCSe ),MUR ),( CS / RRSe ) ) )", "obj1": 0.7683168316831683, "obj2": 0.10707308210817379}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.8158415841584158, "obj2": 0.07344607779018437}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( ( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe ),( CS * RRSe ) ) )", "obj1": 0.8712871287128713, "obj2": 0.050459831784838226}, {"determining": "( ( ( ACS + ARS ) - Max( DDR,RRS ) ) - Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( ( FirstVNF_CPU / Min( ( ( Const + FirstVNF_CPU ) * ARS ) ,FirstVNF_RAM ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( MLU * MUR ) + ( RCSe / ( ( RRSe / MUR ) + Max( MUC,RRSe ) ) ) ) / Max( Max( MUC,MUR ),( CS / RRSe ) ) ) ,( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) * ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9564356435643564, "obj2": 0.016511700551042743}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * Max( MDR,( ( BR / Max( FirstVNF_Mem,ARS ) ) + FirstVNF_RAM ) ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( Max( ( DS + MLU ),( RMSe / MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Max( RMSe,MUC ) )", "obj1": 0.9247524752475248, "obj2": 0.02848782542283405}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server / ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( Max( MUM,( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) ) ) + ( RCSe * MUC ) ) ) ) + Max( ( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe ),( CS * RRSe ) ) )", "obj1": 0.8514851485148515, "obj2": 0.06051485796353842}, {"determining": "( ( ( RRS + DDR ) - ( ACS + ARS ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( RRSe * RCSe ) + ( RCSe / ( RMSe + Max( MUC,RRSe ) ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) ) ,( MUM * CS ) ) ) - Min( ( Min( DS ,RMSe ) * ( DS / MLU ) ) ,( ( Max( MLU,( MUM - DS ) ) + MUM ) / ( Min( RRSe ,( DS + ( RCSe * RRSe ) ) ) / ( DS + MLU ) ) ) ) )", "obj1": 0.9089108910891089, "obj2": 0.038166336857794525}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( FirstVNF_Mem_Server * BR ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.689108910891089, "obj2": 0.1735597602916107}, {"determining": "( ( ( ACS * ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( ARS + Max( PN,Const ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( Min( MUM ,RRSe ) ,MUC ) + RRSe ) / Max( Max( Max( ( ( ( ( RRSe + MLU ) - MLU ) / RRSe ) + ( ( RMSe + RRSe ) + ( DS - CS ) ) ),RCSe ),MUR ),( CS / RRSe ) ) )", "obj1": 0.7742574257425743, "obj2": 0.105802909470511}, {"determining": "( ( ( Min( PN ,Max( ( RRS * Const ),Min( DDR ,Max( Max( DDR,ACS ),FirstVNF_RAM_Server ) ) ) ) - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) / Min( RRSe ,CS ) )", "obj1": 0.6633663366336634, "obj2": 0.1976937148474136}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) / ( AMS * FirstVNF_RAM ) ) + FirstVNF_Mem ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( RCSe / MLU ) + ( Max( MUM,( ( RRSe + MUR ) + CS ) ) + ( ( RCSe / ( RMSe + MUR ) ) * MUC ) ) )", "obj1": 0.7861386138613862, "obj2": 0.10348824959432495}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU / Min( ( RRS * ARS ) ,FirstVNF_RAM ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( RCSe / MLU ) + ( ( ( DS - MUR ) - ( ( RMSe + ( MUM * MLU ) ) + CS ) ) + ( ( RCSe / ( RMSe + MUR ) ) * MUC ) ) )", "obj1": 0.8495049504950495, "obj2": 0.06213868674483998}, {"determining": "( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / ( PN + ( CRS - ( CRS / FirstVNF_RAM ) ) ) ) ) / ( ARS - DDR ) ) / AMS ) - Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( RCSe / MLU ) + ( ( MUM / ( Max( RMSe,MLU ) / Min( RRSe ,CS ) ) ) + ( RCSe * MUC ) ) )", "obj1": 0.8871287128712871, "obj2": 0.0416454036912777}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) ) ) / ( AMS * FirstVNF_RAM ) ) + FirstVNF_Mem ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( ( Max( ( ( DS - ( CS + DS ) ) + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Max( ( RRSe * MUM ),( RCSe * MUC ) ) ) + ( Max( MUM,( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) ) ) + ( RCSe * MUC ) ) )", "obj1": 0.7940594059405941, "obj2": 0.09881748210966802}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.8277227722772277, "obj2": 0.06871882159620872}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( ( FirstVNF_CPU / Min( ( FirstVNF_Mem_Server * ARS ) ,FirstVNF_RAM ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + ( MUM * MLU ) ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) ) ,( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9722772277227723, "obj2": 0.012126179338805084}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( ( FirstVNF_Mem / MDR ) / FirstVNF_CPU_Server ) * ( MDR / AMS ) ) / ( ACS - FirstVNF_Mem ) ) / AMS ) )", "choosing": "( Max( RCSe,RRSe ) / Min( RRSe ,( RMSe / RCSe ) ) )", "obj1": 0.8257425742574257, "obj2": 0.07099676390932863}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( CS + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 0.8910891089108911, "obj2": 0.03943591390597125}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) / ( ( FirstVNF_Mem / RRS ) * FirstVNF_RAM ) ) + FirstVNF_Mem ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR - AMS ) ) / ( ARS - DDR ) ) / ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) ) )", "choosing": "( ( ( Max( ( DS + MLU ),Min( RCSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Max( ( RRSe * MUM ),( RCSe * MUC ) ) ) + ( Max( MUM,( ( RRSe + MUR ) + CS ) ) + ( Max( Max( ( ( Max( RCSe,MUM ) / MUM ) * ( MLU + RCSe ) ),MUC ),MLU ) / CS ) ) )", "obj1": 0.9524752475247524, "obj2": 0.020787213670674907}, {"determining": "( ( Max( ACS,ARS ) - Max( RRS,DDR ) ) - ( AMS / AMS ) )", "choosing": "( ( ( MLU / RMSe ) / ( DS - Min( MUM ,RCSe ) ) ) * ( ( Min( ( MLU * DS ) ,Max( ( DS + MUC ),MUR ) ) + RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.6752475247524753, "obj2": 0.19599544177090583}, {"determining": "( ( ( Max( BR,ARS ) / ( PN + FirstVNF_RAM ) ) - ( Min( PN ,Max( ( RRS * Const ),Min( DDR ,Max( Max( DDR,ACS ),FirstVNF_RAM_Server ) ) ) ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( ( ( MRS + MDR ) + FirstVNF_RAM ) + Max( Max( AMS,DDR ),( PN - Const ) ) ) )", "choosing": "( ( ( ( Min( ( ( RMSe - RMSe ) - CS ) ,CS ) / ( ( MUC + ( MUC * ( RMSe / CS ) ) ) / RCSe ) ) * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / ( RMSe / ( ( ( MUR * RRSe ) - ( ( DS / CS ) - ( MLU + RMSe ) ) ) * Max( CS,( RRSe / MUC ) ) ) ) )", "obj1": 0.9900990099009901, "obj2": 0.0035267306379137965}, {"determining": "( ( ( ( FirstVNF_CPU_Server / BR ) + DDR ) - Min( MRS ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ) )", "choosing": "( Max( ( ( CS + RRSe ) - ( MUC * MLU ) ),( ( RRSe / DS ) * ( ( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( DS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) ) + MUM ) ) ) + ( ( ( MUM / RRSe ) - DS ) + MUR ) )", "obj1": 0.6039603960396039, "obj2": 0.28124144899311115}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( MUR - ( MUR * DS ) ) / Min( ( RRSe / DS ) ,CS ) )", "obj1": 0.9782178217821782, "obj2": 0.007538083751505834}, {"determining": "( ( ( ( PN + ( FirstVNF_RAM - Const ) ) - Min( MRS ,FirstVNF_CPU_Server ) ) - ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( CS / MUC ) + Max( ( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe ),( CS * ( Max( ( ( MUR - ( MUR * DS ) ) / ( RRSe + CS ) ),MUM ) + ( RCSe * MUC ) ) ) ) )", "obj1": 0.6217821782178218, "obj2": 0.252785534249907}, {"determining": "( Max( AMS,DDR ) / Min( CRS ,MDR ) )", "choosing": "( ( MUR - ( ( Max( MUM,Max( Max( MUR,MUC ),RRSe ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.601980198019802, "obj2": 0.2859263042578862}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( RCSe + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.9366336633663367, "obj2": 0.02502729793115469}], "10": [{"determining": "( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) + ( FirstVNF_CPU - MRS ) )", "choosing": "( Max( ( ( ( CS / ( DS + CS ) ) / DS ) * ( MUC + MUM ) ),RMSe ) + Max( Max( Min( CS ,MLU ),MUC ),( CS * RRSe ) ) )", "obj1": 0.5861386138613861, "obj2": 0.2885553428255059}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( MDR + AMS ) ) / ( Min( RRS ,ARS ) - DDR ) )", "choosing": "( ( ( Min( CS ,MUR ) - MUM ) / RMSe ) / Min( RRSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,ARS ) - Max( RRS,DDR ) ) - ( AMS / AMS ) )", "choosing": "( ( ( MLU / RMSe ) / ( DS - Min( MUM ,RCSe ) ) ) * ( ( Min( ( MLU * DS ) ,Max( ( DS + MUC ),MUR ) ) + RMSe ) + Min( DS ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,AMS ) ) + ( DDR - MRS ) )", "choosing": "( Max( ( ( DS / ( CS / ( DS + CS ) ) ) * ( MUC + MUM ) ),RMSe ) + Min( ( MLU + CS ) ,( ( RCSe - RCSe ) / MLU ) ) )", "obj1": 0.5861386138613861, "obj2": 0.2885553428255059}, {"determining": "( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) + ( ( ( FirstVNF_CPU - MRS ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) / AMS ) ) / ( ARS - DDR ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) ) + MUM ) ),( ( CS + ( Min( Min( MUM ,RRSe ) ,MUC ) + RRSe ) ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.6356435643564357, "obj2": 0.2282572676574331}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,DDR ) ) / ( ( Const * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( MLU,MLU ) * DS ) * Max( ( RMSe - ( CS / RRSe ) ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) * Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.7148514851485148, "obj2": 0.146391248923102}, {"determining": "( Min( RRS ,Const ) / ( ( ( ( FirstVNF_CPU - CRS ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( ARS + FirstVNF_RAM_Server ) ) ) / ( ARS - DDR ) ) - DDR ) )", "choosing": "( ( Min( MUR ,( MUC / MLU ) ) / ( Min( ( RRSe + MUC ) ,( MUR + RCSe ) ) * Min( RRSe ,Max( MUC,( Max( RCSe,( MLU * CS ) ) + MUR ) ) ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.6237623762376238, "obj2": 0.24826274802334108}, {"determining": "( Max( ( FirstVNF_Mem_Server * DDR ),( AMS + ( CRS + PN ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server * ( ( Min( FirstVNF_Mem ,Const ) - AMS ) + Max( BR,ARS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( RRSe ,MLU ),MUC ),( CS * ( Min( ( Max( ( MLU * MUM ),MUC ) - MUC ) ,( ( ( CS - RRSe ) * MUR ) + ( ( MUR + CS ) / Min( MUR ,RRSe ) ) ) ) + ( RMSe - ( ( Max( CS,MLU ) - Min( CS ,MUR ) ) - RRSe ) ) ) ) ) )", "obj1": 0.6079207920792079, "obj2": 0.27075724092513537}, {"determining": "( ( ( ( AMS + DDR ) - Min( ( FirstVNF_CPU + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server / ( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) ) ) )", "choosing": "( ( ( MUM - MUM ) - ( Max( RMSe,MUR ) / MUR ) ) + Max( ( ( ( RRSe * MUR ) + ( RCSe / ( ( Max( MUC,RRSe ) - CS ) / MUR ) ) ) / Min( Max( MUR,MUC ) ,( RRSe + MUC ) ) ),( RRSe * MUM ) ) )", "obj1": 0.7128712871287128, "obj2": 0.16217051990736592}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( Const * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( MUM * MUR ) / Min( RRSe ,CS ) )", "obj1": 0.689108910891089, "obj2": 0.1680417703075207}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( MRS - DDR ) / ( ( ( ARS + FirstVNF_CPU_Server ) - MRS ) * ( MDR / AMS ) ) ) ) ) )", "choosing": "( ( MLU / MUR ) / ( ( RRSe / CS ) * ( RRSe * RMSe ) ) )", "obj1": 0.7564356435643564, "obj2": 0.11223608572263286}, {"determining": "( ( FirstVNF_CPU / RRS ) / ( ( FirstVNF_CPU - MRS ) * ( MDR + AMS ) ) )", "choosing": "( ( ( Min( CS ,MUR ) - MUM ) / RMSe ) / Max( RCSe,MUM ) )", "obj1": 0.6554455445544555, "obj2": 0.21714015910731674}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.7247524752475247, "obj2": 0.1272572695221424}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) / ( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.7861386138613862, "obj2": 0.09595908477393136}, {"determining": "( ( ( BR / Max( FirstVNF_Mem,ARS ) ) - Min( PN ,FirstVNF_RAM_Server ) ) + ( MDR / Min( Const ,PN ) ) )", "choosing": "( ( Max( ( MUR - CS ),( MLU - RCSe ) ) * CS ) + Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 0.598019801980198, "obj2": 0.27986363472040493}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( Const * Max( FirstVNF_RAM,( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) / ( ARS - DDR ) ) ) )", "choosing": "( MUM / Min( RRSe ,CS ) )", "obj1": 0.6752475247524753, "obj2": 0.19317020116564948}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) / ( ( FirstVNF_Mem / RRS ) * FirstVNF_RAM ) ) + FirstVNF_Mem ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR - AMS ) ) / ( ARS - DDR ) ) / ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) ) )", "choosing": "( ( ( Max( ( DS + MLU ),Min( RCSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Max( ( RRSe * MUM ),( RCSe * MUC ) ) ) + ( Max( MUM,( ( RRSe + MUR ) + CS ) ) + ( Max( Max( ( ( Max( RCSe,MUM ) / MUM ) * ( MLU + RCSe ) ),MUC ),MLU ) / CS ) ) )", "obj1": 0.9524752475247524, "obj2": 0.020787213670674907}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / AMS ) ) / ( ARS - DDR ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( CS ,MLU ),MUC ),( CS * RRSe ) ) )", "obj1": 0.6118811881188119, "obj2": 0.2562054277454414}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( DDR + ( AMS / BR ) ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( Max( ( ( ( ( DS + MUC ) - MLU ) - RRSe ) + ( ( RMSe + CS ) + ( DS - ( CS + DS ) ) ) ),RCSe ),MUR ),( CS / RRSe ) ) )", "obj1": 0.7900990099009901, "obj2": 0.08549614548668392}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - PN ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,( ( Max( MUM,Max( Max( MUR,MUC ),RRSe ) ) + MUR ) * DS ) ) * MUC ) )", "obj1": 0.8, "obj2": 0.08444088200016041}, {"determining": "( Max( FirstVNF_Mem_Server,PN ) - Max( ( MRS * DDR ),FirstVNF_CPU ) )", "choosing": "( ( MUR - ( ( Max( ( RCSe / CS ),MUC ) + RRSe ) * DS ) ) / ( RRSe / CS ) )", "obj1": 0.7465346534653465, "obj2": 0.12191839141099688}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * DDR ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Max( ( RRSe * MUM ),( RCSe * MUC ) ) )", "obj1": 0.9148514851485149, "obj2": 0.03269756464732619}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,CRS ) ) / ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe )", "obj1": 0.6811881188118812, "obj2": 0.18754706085743883}, {"determining": "( Max( AMS,DDR ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6594059405940594, "obj2": 0.20048465567002383}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * Max( MDR,( ( BR / Max( FirstVNF_Mem,ARS ) ) + FirstVNF_RAM ) ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( Max( ( DS + MLU ),( RMSe / MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Max( RMSe,MUC ) )", "obj1": 0.9247524752475248, "obj2": 0.02848782542283405}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server / ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( Max( MUM,( ( MUR - ( MUR * DS ) ) / Min( RRSe ,CS ) ) ) + ( RCSe * MUC ) ) ) ) + Max( ( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe ),( CS * RRSe ) ) )", "obj1": 0.8514851485148515, "obj2": 0.06051485796353842}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( RCSe + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.9366336633663367, "obj2": 0.02502729793115469}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.8158415841584158, "obj2": 0.07344607779018437}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.7782178217821782, "obj2": 0.10236929505479113}, {"determining": "( ( ( RRS + DDR ) - ( ACS + ARS ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( RRSe * RCSe ) + ( RCSe / ( RMSe + Max( MUC,RRSe ) ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) ) ,( MUM * CS ) ) ) - Min( ( Min( DS ,RMSe ) * ( DS / MLU ) ) ,( ( Max( MLU,( MUM - DS ) ) + MUM ) / ( Min( RRSe ,( DS + ( RCSe * RRSe ) ) ) / ( DS + MLU ) ) ) ) )", "obj1": 0.9089108910891089, "obj2": 0.038166336857794525}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) * DDR ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( ( Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) / ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) ) ,CS ) * MUC ) )", "obj1": 0.8693069306930693, "obj2": 0.048083700935643854}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server / ( ( Const * FirstVNF_RAM ) / ( ARS - DDR ) ) ) )", "choosing": "( ( ( MUM - MUM ) - ( Max( MUR,RMSe ) / MUR ) ) + Max( ( ( ( RRSe * MUR ) + ( RCSe / ( CS + MUR ) ) ) / Min( Max( MUR,MUC ) ,( RRSe + MUC ) ) ),( RRSe * MUM ) ) )", "obj1": 0.6851485148514852, "obj2": 0.18053680134930206}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) + ( FirstVNF_CPU - MRS ) )", "choosing": "( Max( ( ( ( CS / ( DS + CS ) ) / DS ) * ( MUC + MUM ) ),RMSe ) + Min( ( Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) / Min( RRSe ,CS ) ) ,CS ) )", "obj1": 0.596039603960396, "obj2": 0.2860789694396291}, {"determining": "( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) ) + MUM ) ),( ( CS + ( Min( Min( MUM ,RRSe ) ,MUC ) + RRSe ) ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.7346534653465346, "obj2": 0.1259307616939714}, {"determining": "( ( ( ( PN + ( FirstVNF_RAM - Const ) ) - Min( MRS ,FirstVNF_CPU_Server ) ) - ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( CS / MUC ) + Max( ( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe ),( CS * ( Max( ( ( MUR - ( MUR * DS ) ) / ( RRSe + CS ) ),MUM ) + ( RCSe * MUC ) ) ) ) )", "obj1": 0.6217821782178218, "obj2": 0.252785534249907}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server / ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + Max( MUC,RRSe ) ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) ) ,( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) * ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.8792079207920792, "obj2": 0.04742033755815809}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.8415841584158416, "obj2": 0.060859465759192384}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) - MRS ) * DDR ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( ( Max( MUC,( Max( MUM,( MUM * MUR ) ) + MUR ) ) / Min( RRSe ,CS ) ) ,CS ) * MUC ) )", "obj1": 0.8574257425742574, "obj2": 0.05263708743007601}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( CS + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 0.8910891089108911, "obj2": 0.03943591390597125}, {"determining": "( ( ( ACS + ARS ) - Max( DDR,RRS ) ) - Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( ( FirstVNF_CPU / Min( ( ( Const + FirstVNF_CPU ) * ARS ) ,FirstVNF_RAM ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( MLU * MUR ) + ( RCSe / ( ( RRSe / MUR ) + Max( MUC,RRSe ) ) ) ) / Max( Max( MUC,MUR ),( CS / RRSe ) ) ) ,( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) * ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9564356435643564, "obj2": 0.016511700551042743}, {"determining": "( Max( ( Max( FirstVNF_Mem,PN ) + BR ),FirstVNF_CPU_Server ) + ( ( ( FirstVNF_CPU_Server * MDR ) / Min( MRS ,ACS ) ) / ( ( Const * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( MUR * MUM ) / Min( DS ,MLU ) )", "obj1": 0.6495049504950495, "obj2": 0.22058538285573834}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( ( FirstVNF_Mem / MDR ) / FirstVNF_CPU_Server ) * ( MDR / AMS ) ) / ( ACS - FirstVNF_Mem ) ) / AMS ) )", "choosing": "( Max( RCSe,RRSe ) / Min( RRSe ,( RMSe / RCSe ) ) )", "obj1": 0.8257425742574257, "obj2": 0.07099676390932863}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( MUR - ( ( Max( MUM,Max( Max( MUR,MUC ),RRSe ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.807920792079208, "obj2": 0.07697923444644861}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( ARS + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU / MUR ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.7405940594059406, "obj2": 0.1219862222599681}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server + CRS ) ) - ( ( ( ( FirstVNF_CPU - MRS ) * Max( ( RRS * FirstVNF_Mem_Server ),MDR ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( MUR * RCSe ) - Max( ( ( RRSe / DS ) * ( ( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) ) + RMSe ) ),MUC ) )", "obj1": 0.9663366336633663, "obj2": 0.015904574369477044}, {"determining": "( ( ( ( DDR + PN ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( Const * ( FirstVNF_RAM + ( FirstVNF_CPU_Server / PN ) ) ) / ( ARS - DDR ) ) ) )", "choosing": "( Min( RCSe ,CS ) / ( ( MUM * MUC ) * MUR ) )", "obj1": 0.6495049504950495, "obj2": 0.22058538285573834}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( RCSe + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.9346534653465347, "obj2": 0.027181574084399623}, {"determining": "( Max( FirstVNF_RAM_Server,Max( Max( BR,PN ),MDR ) ) - ( AMS / ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) - ( ARS - DDR ) ) ) )", "choosing": "( ( MUR - ( ( ( Max( ( DS + MUM ),( RCSe * DS ) ) / RRSe ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.8851485148514852, "obj2": 0.04312339042561289}, {"determining": "( ( ( Min( PN ,Max( ( RRS * Const ),Min( DDR ,Max( Max( DDR,ACS ),FirstVNF_RAM_Server ) ) ) ) - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) / Min( RRSe ,CS ) )", "obj1": 0.6633663366336634, "obj2": 0.1976937148474136}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( ( RRSe / DS ),RRSe ) / ( Min( MUC ,MLU ) * MUC ) )", "obj1": 0.9722772277227723, "obj2": 0.011526658790366972}], "11": [{"determining": "( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) + ( FirstVNF_CPU - MRS ) )", "choosing": "( Max( ( ( ( CS / ( DS + CS ) ) / DS ) * ( MUC + MUM ) ),RMSe ) + Max( Max( Min( CS ,MLU ),MUC ),( CS * RRSe ) ) )", "obj1": 0.5861386138613861, "obj2": 0.2885553428255059}, {"determining": "( ( PN / FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ACS * FirstVNF_CPU_Server ) / Min( ACS ,CRS ) ) ),( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / ( RRS + FirstVNF_Mem ) ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( MLU / DS ) / ( Min( ( ( Min( ( RCSe + Min( RCSe ,RMSe ) ) ,MUR ) / CS ) / RRSe ) ,CS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( MDR + AMS ) ) / ( Min( RRS ,ARS ) - DDR ) )", "choosing": "( ( ( Min( CS ,MUR ) - MUM ) / RMSe ) / Min( RRSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,AMS ) ) + ( DDR - MRS ) )", "choosing": "( Max( ( ( DS / ( CS / ( DS + CS ) ) ) * ( MUC + MUM ) ),RMSe ) + Min( ( MLU + CS ) ,( ( RCSe - RCSe ) / MLU ) ) )", "obj1": 0.5861386138613861, "obj2": 0.2885553428255059}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( MUM * MUR ) / Min( ( MUR - ( ( Max( MUM,Max( Max( MUR,MUC ),RRSe ) ) + MUR ) * DS ) ) ,CS ) )", "obj1": 0.6732673267326733, "obj2": 0.17349462426781692}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( Min( ACS ,ARS ) + Max( RRS,DDR ) ) ) )", "choosing": "( ( MUR - ( ( RRSe + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.7108910891089109, "obj2": 0.13848084539250152}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,DDR ) ) / ( ( Const * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( MLU,MLU ) * DS ) * Max( ( RMSe - ( CS / RRSe ) ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) * Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.689108910891089, "obj2": 0.15988201937293275}, {"determining": "( ( ( ( PN + DDR ) - Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( MRS + FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,DDR ) ) / ( Min( Min( DDR ,AMS ) ,MDR ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( ( ( RCSe - MUC ) / MLU ),MLU ) * DS ) * Max( ( RMSe - ( CS / RRSe ) ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) * Max( ( MUR * MUC ),( CS * RRSe ) ) )", "obj1": 0.7029702970297029, "obj2": 0.15679171941579118}, {"determining": "( Max( ( FirstVNF_Mem_Server * DDR ),( AMS + ( CRS + PN ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server * ( ( Min( FirstVNF_Mem ,Const ) - AMS ) + Max( BR,ARS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( RRSe ,MLU ),MUC ),( CS * ( Min( ( Max( ( MLU * MUM ),MUC ) - MUC ) ,( ( ( CS - RRSe ) * MUR ) + ( ( MUR + CS ) / Min( MUR ,RRSe ) ) ) ) + ( RMSe - ( ( Max( CS,MLU ) - Min( CS ,MUR ) ) - RRSe ) ) ) ) ) )", "obj1": 0.6079207920792079, "obj2": 0.27075724092513537}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) + ( FirstVNF_CPU_Server + DDR ) )", "choosing": "( Max( RCSe,Max( RMSe,CS ) ) + Min( ( Max( MUC,( Max( Min( CS ,CS ),MUM ) + MUR ) ) / Min( RRSe ,CS ) ) ,CS ) )", "obj1": 0.6316831683168317, "obj2": 0.23560259765729247}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / AMS ) ) / ( ARS - DDR ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( CS ,MLU ),MUC ),( CS * RRSe ) ) )", "obj1": 0.6118811881188119, "obj2": 0.2562054277454414}, {"determining": "( ( FirstVNF_CPU / RRS ) / ( ( FirstVNF_CPU - MRS ) * ( MDR + AMS ) ) )", "choosing": "( ( ( Min( CS ,MUR ) - MUM ) / RMSe ) / Max( RCSe,MUM ) )", "obj1": 0.6554455445544555, "obj2": 0.21714015910731674}, {"determining": "( ( ( Min( PN ,Max( ( RRS * Const ),Min( DDR ,Max( Max( DDR,ACS ),FirstVNF_RAM_Server ) ) ) ) - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) / Min( RRSe ,CS ) )", "obj1": 0.6633663366336634, "obj2": 0.1976937148474136}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( MRS - DDR ) / ( ( ( ARS + FirstVNF_CPU_Server ) - MRS ) * ( MDR / AMS ) ) ) ) ) )", "choosing": "( ( MLU / MUR ) / ( ( RRSe / CS ) * ( RRSe * RMSe ) ) )", "obj1": 0.7564356435643564, "obj2": 0.11223608572263286}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( CS + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 0.8910891089108911, "obj2": 0.03943591390597125}, {"determining": "( Min( RRS ,Const ) / ( ( ( ( FirstVNF_CPU - CRS ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( ARS + FirstVNF_RAM_Server ) ) ) / ( ARS - DDR ) ) - DDR ) )", "choosing": "( ( Min( MUR ,( MUC / MLU ) ) / ( Min( ( RRSe + MUC ) ,( MUR + RCSe ) ) * Min( RRSe ,Max( MUC,( Max( RCSe,( MLU * CS ) ) + MUR ) ) ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.6237623762376238, "obj2": 0.24826274802334108}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) / ( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.7861386138613862, "obj2": 0.09595908477393136}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( DDR * ( ( CRS - FirstVNF_Mem_Server ) / AMS ) ) / Min( ARS ,DDR ) ) / AMS ) )", "choosing": "( Max( MUC,( Max( MUM,Min( CS ,MUM ) ) + Max( CS,MUC ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.906930693069307, "obj2": 0.033904677215130095}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( MUR - ( ( Max( MUM,Max( Max( MUR,MUC ),RRSe ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.807920792079208, "obj2": 0.07697923444644861}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( DDR + ( AMS / BR ) ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( Max( ( ( ( ( DS + MUC ) - MLU ) - RRSe ) + ( ( RMSe + CS ) + ( DS - ( CS + DS ) ) ) ),RCSe ),MUR ),( CS / RRSe ) ) )", "obj1": 0.7900990099009901, "obj2": 0.08549614548668392}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.8356435643564356, "obj2": 0.06351638754804143}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - PN ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,( ( Max( MUM,Max( Max( MUR,MUC ),RRSe ) ) + MUR ) * DS ) ) * MUC ) )", "obj1": 0.8, "obj2": 0.08444088200016041}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.7465346534653465, "obj2": 0.12114928216579973}, {"determining": "( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) + ( ( ( FirstVNF_CPU - MRS ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) / AMS ) ) / ( ARS - DDR ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) ) + MUM ) ),( ( CS + ( Min( Min( MUM ,RRSe ) ,MUC ) + RRSe ) ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.6356435643564357, "obj2": 0.2282572676574331}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( ( FirstVNF_Mem / MDR ) / FirstVNF_CPU_Server ) * ( MDR / AMS ) ) / ( ACS - FirstVNF_Mem ) ) / AMS ) )", "choosing": "( Max( RCSe,RRSe ) / Min( RRSe ,( RMSe / RCSe ) ) )", "obj1": 0.8257425742574257, "obj2": 0.07099676390932863}, {"determining": "( Max( AMS,DDR ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6594059405940594, "obj2": 0.20048465567002383}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + Max( MUC,RRSe ) ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) ) ,( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) * ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9920792079207921, "obj2": 0.0024064120642262542}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.7247524752475247, "obj2": 0.1272572695221424}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) / AMS ) ) - ( ( ( ( FirstVNF_CPU - PN ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,( CS * RRSe ) ) * MUC ) )", "obj1": 0.9128712871287129, "obj2": 0.03179671059654741}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( Const * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( MUM * MUR ) / Min( RRSe ,CS ) )", "obj1": 0.6455445544554456, "obj2": 0.22489183897677717}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) + ( FirstVNF_CPU - MRS ) )", "choosing": "( Max( ( ( ( CS / ( DS + CS ) ) / DS ) * ( MUC + MUM ) ),RMSe ) + Min( ( Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) / Min( RRSe ,CS ) ) ,CS ) )", "obj1": 0.596039603960396, "obj2": 0.2860789694396291}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * Max( MDR,( ( BR / Max( FirstVNF_Mem,ARS ) ) + FirstVNF_RAM ) ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( Max( ( DS + MLU ),( RMSe / MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Max( RMSe,MUC ) )", "obj1": 0.9247524752475248, "obj2": 0.02848782542283405}, {"determining": "( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) ) + MUM ) ),( ( CS + ( Min( Min( MUM ,RRSe ) ,MUC ) + RRSe ) ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.7346534653465346, "obj2": 0.1259307616939714}, {"determining": "( ( ( ( PN + ( FirstVNF_RAM - Const ) ) - Min( MRS ,FirstVNF_CPU_Server ) ) - ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( CS / MUC ) + Max( ( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe ),( CS * ( Max( ( ( MUR - ( MUR * DS ) ) / ( RRSe + CS ) ),MUM ) + ( RCSe * MUC ) ) ) ) )", "obj1": 0.6217821782178218, "obj2": 0.252785534249907}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server + CRS ) ) - ( ( ( ( FirstVNF_CPU - MRS ) * Max( ( RRS * FirstVNF_Mem_Server ),MDR ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( MUR * RCSe ) - Max( ( ( RRSe / DS ) * ( ( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) ) + RMSe ) ),MUC ) )", "obj1": 0.9663366336633663, "obj2": 0.015904574369477044}, {"determining": "( Min( Max( FirstVNF_RAM_Server,AMS ) ,( MRS + FirstVNF_RAM_Server ) ) + ( FirstVNF_CPU - MRS ) )", "choosing": "( ( MUR - ( ( ( Max( ( RCSe * DS ),( RMSe + MUM ) ) / RRSe ) + MUR ) * DS ) ) / Min( ( MUM / RMSe ) ,CS ) )", "obj1": 0.6039603960396039, "obj2": 0.2790990058255064}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server / ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + Max( MUC,RRSe ) ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) ) ,( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) * ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.8792079207920792, "obj2": 0.04742033755815809}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RCSe + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.7782178217821782, "obj2": 0.10090863723543585}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) - MRS ) * DDR ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( ( Max( MUC,( Max( MUM,( MUM * MUR ) ) + MUR ) ) / Min( RRSe ,CS ) ) ,CS ) * MUC ) )", "obj1": 0.8574257425742574, "obj2": 0.05263708743007601}, {"determining": "( ( ( ACS + ARS ) - Max( DDR,RRS ) ) - Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( ( FirstVNF_CPU / Min( ( ( Const + FirstVNF_CPU ) * ARS ) ,FirstVNF_RAM ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( MLU * MUR ) + ( RCSe / ( ( RRSe / MUR ) + Max( MUC,RRSe ) ) ) ) / Max( Max( MUC,MUR ),( CS / RRSe ) ) ) ,( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) * ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9564356435643564, "obj2": 0.016511700551042743}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( Min( ( Max( FirstVNF_RAM_Server,PN ) + ( FirstVNF_CPU - MRS ) ) ,Max( FirstVNF_Mem,AMS ) ) / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( RCSe + Max( Max( MUR,MUC ),( CS * ( ( CS / ( DS + CS ) ) / DS ) ) ) )", "obj1": 0.9821782178217822, "obj2": 0.006674815345166094}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.7663366336633664, "obj2": 0.10805976110501768}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.8158415841584158, "obj2": 0.07344607779018437}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( ARS + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU / MUR ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.7405940594059406, "obj2": 0.1219862222599681}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.8415841584158416, "obj2": 0.060859465759192384}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( ( RRSe / DS ),RRSe ) / MUR )", "obj1": 0.7762376237623763, "obj2": 0.10476814629424028}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( ( RRSe / DS ),RRSe ) / ( Min( MUC ,MLU ) * MUC ) )", "obj1": 0.9722772277227723, "obj2": 0.011526658790366972}, {"determining": "( ( ( BR / Max( FirstVNF_Mem,ARS ) ) - Min( PN ,FirstVNF_RAM_Server ) ) + ( MDR / Min( Const ,PN ) ) )", "choosing": "( ( Max( ( MUR - CS ),( MLU - RCSe ) ) * CS ) + Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 0.598019801980198, "obj2": 0.27986363472040493}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( RCSe + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.9405940594059405, "obj2": 0.022084815237049065}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( RCSe + ( MUR - ( MUR * DS ) ) )", "obj1": 0.9326732673267327, "obj2": 0.023679765217248995}], "12": [{"determining": "( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) + ( FirstVNF_CPU - MRS ) )", "choosing": "( Max( ( ( ( CS / ( DS + CS ) ) / DS ) * ( MUC + MUM ) ),RMSe ) + Max( Max( Min( CS ,MLU ),MUC ),( CS * RRSe ) ) )", "obj1": 0.5861386138613861, "obj2": 0.2885553428255059}, {"determining": "( ( PN / FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ACS * FirstVNF_CPU_Server ) / Min( ACS ,CRS ) ) ),( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / ( RRS + FirstVNF_Mem ) ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( RCSe,Max( RMSe,CS ) ) + Min( ( Max( MUC,( Max( Min( CS ,CS ),MUM ) + MUR ) ) / Min( RRSe ,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ACS * FirstVNF_CPU_Server ) / Min( ACS ,CRS ) ) ),( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / ( RRS + FirstVNF_Mem ) ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( MLU / DS ) / ( Min( ( ( Min( ( RCSe + Min( RCSe ,RMSe ) ) ,MUR ) / CS ) / RRSe ) ,CS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,AMS ) ) + ( DDR - MRS ) )", "choosing": "( Max( ( ( DS / ( CS / ( DS + CS ) ) ) * ( MUC + MUM ) ),RMSe ) + Min( ( MLU + CS ) ,( ( RCSe - RCSe ) / MLU ) ) )", "obj1": 0.5861386138613861, "obj2": 0.2885553428255059}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( MUM * MUR ) / Min( ( MUR - ( ( Max( MUM,Max( Max( MUR,MUC ),RRSe ) ) + MUR ) * DS ) ) ,CS ) )", "obj1": 0.6732673267326733, "obj2": 0.17349462426781692}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( Min( ACS ,ARS ) + Max( RRS,DDR ) ) ) )", "choosing": "( ( MUR - ( ( RRSe + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.7108910891089109, "obj2": 0.13848084539250152}, {"determining": "( ( ( ( PN + DDR ) - Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( MRS + FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,DDR ) ) / ( Min( Min( DDR ,AMS ) ,MDR ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( ( ( RCSe - MUC ) / MLU ),MLU ) * DS ) * Max( ( RMSe - ( CS / RRSe ) ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) * Max( ( MUR * MUC ),( CS * RRSe ) ) )", "obj1": 0.7029702970297029, "obj2": 0.15679171941579118}, {"determining": "( ( FirstVNF_CPU / RRS ) / ( ( FirstVNF_CPU - MRS ) * ( MDR + AMS ) ) )", "choosing": "( ( ( Min( CS ,MUR ) - MUM ) / RMSe ) / Max( RCSe,MUM ) )", "obj1": 0.6554455445544555, "obj2": 0.21714015910731674}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( CS + MUR ) ) ) / Max( Max( MUR,MUC ),( CS / RRSe ) ) )", "obj1": 0.8910891089108911, "obj2": 0.03943591390597125}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) + ( FirstVNF_CPU_Server + DDR ) )", "choosing": "( Max( RCSe,Max( RMSe,CS ) ) + Min( ( Max( MUC,( Max( Min( CS ,CS ),MUM ) + MUR ) ) / Min( RRSe ,CS ) ) ,CS ) )", "obj1": 0.6316831683168317, "obj2": 0.23560259765729247}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( MRS - DDR ) / ( ( ( ARS + FirstVNF_CPU_Server ) - MRS ) * ( MDR / AMS ) ) ) ) ) )", "choosing": "( ( MLU / MUR ) / ( ( RRSe / CS ) * ( RRSe * RMSe ) ) )", "obj1": 0.7564356435643564, "obj2": 0.11223608572263286}, {"determining": "( ( ( Min( PN ,Max( ( RRS * Const ),Min( DDR ,Max( Max( DDR,ACS ),FirstVNF_RAM_Server ) ) ) ) - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) )", "choosing": "( Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) / Min( RRSe ,CS ) )", "obj1": 0.6633663366336634, "obj2": 0.1976937148474136}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.8415841584158416, "obj2": 0.060859465759192384}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( Const * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( MUM * MUR ) / Min( RRSe ,CS ) )", "obj1": 0.6455445544554456, "obj2": 0.22489183897677717}, {"determining": "( ( ( ACS + ARS ) - Max( DDR,RRS ) ) - Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( ( FirstVNF_CPU / Min( ( ( Const + FirstVNF_CPU ) * ARS ) ,FirstVNF_RAM ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Min( ( ( ( MLU * MUR ) + ( RCSe / ( ( RRSe / MUR ) + Max( MUC,RRSe ) ) ) ) / Max( Max( MUC,MUR ),( CS / RRSe ) ) ) ,( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) * ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.9564356435643564, "obj2": 0.016511700551042743}, {"determining": "( Min( RRS ,Const ) / ( ( ( ( FirstVNF_CPU - CRS ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( ARS + FirstVNF_RAM_Server ) ) ) / ( ARS - DDR ) ) - DDR ) )", "choosing": "( ( Min( MUR ,( MUC / MLU ) ) / ( Min( ( RRSe + MUC ) ,( MUR + RCSe ) ) * Min( RRSe ,Max( MUC,( Max( RCSe,( MLU * CS ) ) + MUR ) ) ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.6237623762376238, "obj2": 0.24826274802334108}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( RCSe + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.9405940594059405, "obj2": 0.022084815237049065}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) / ( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.7861386138613862, "obj2": 0.09595908477393136}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,DDR ) ) / ( ( Const * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( MLU,MLU ) * DS ) * Max( ( RMSe - ( CS / RRSe ) ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) * Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.689108910891089, "obj2": 0.15988201937293275}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( MUR - ( ( Max( MUM,Max( Max( MUR,MUC ),RRSe ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.807920792079208, "obj2": 0.07697923444644861}, {"determining": "( Max( AMS,DDR ) / ( ARS - DDR ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( CS ,MLU ),MUC ),( CS * RRSe ) ) )", "obj1": 0.6118811881188119, "obj2": 0.2562054277454414}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.7663366336633664, "obj2": 0.10805976110501768}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( RRSe ,CS ) * MUC ) )", "obj1": 0.8356435643564356, "obj2": 0.06254769682439867}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) - MRS ) * DDR ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( ( Max( MUC,( Max( MUM,( MUM * MUR ) ) + MUR ) ) / Min( RRSe ,CS ) ) ,CS ) * MUC ) )", "obj1": 0.8574257425742574, "obj2": 0.05263708743007601}, {"determining": "( Max( PN,( ( ARS + FirstVNF_CPU_Server ) - MRS ) ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( ( MUR - ( ( Max( MUM,Max( Max( MUR,MUC ),RRSe ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.7940594059405941, "obj2": 0.08077093115133568}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + ( ( FirstVNF_CPU - CRS ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,Min( ( RRSe + MUC ) ,( MUR + RCSe ) ) ) )", "obj1": 0.7207920792079208, "obj2": 0.13230323005406266}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( DDR + ( AMS / BR ) ) ) )", "choosing": "( ( ( RRSe * MUR ) + ( RCSe / ( RMSe + MUR ) ) ) / Max( Max( Max( ( ( ( ( DS + MUC ) - MLU ) - RRSe ) + ( ( RMSe + CS ) + ( DS - ( CS + DS ) ) ) ),RCSe ),MUR ),( CS / RRSe ) ) )", "obj1": 0.7900990099009901, "obj2": 0.08549614548668392}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( ( FirstVNF_Mem / MDR ) / FirstVNF_CPU_Server ) * ( MDR / AMS ) ) / ( ACS - FirstVNF_Mem ) ) / AMS ) )", "choosing": "( Max( RCSe,RRSe ) / Min( RRSe ,( RMSe / RCSe ) ) )", "obj1": 0.8257425742574257, "obj2": 0.07099676390932863}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / AMS ) ) / ( ARS - DDR ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.6594059405940594, "obj2": 0.20048465567002383}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,( MUR + RCSe ) ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.7445544554455445, "obj2": 0.1198558627712088}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_RAM / ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( ( RRSe / DS ),RRSe ) / ( Min( MUC ,MLU ) * MUC ) )", "obj1": 0.9722772277227723, "obj2": 0.011526658790366972}, {"determining": "( Max( ( FirstVNF_Mem_Server * DDR ),( AMS + ( CRS + PN ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server * ( ( Min( FirstVNF_Mem ,Const ) - AMS ) + Max( BR,ARS ) ) ) ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( RRSe ,MLU ),MUC ),( CS * ( Min( ( Max( ( MLU * MUM ),MUC ) - MUC ) ,( ( ( CS - RRSe ) * MUR ) + ( ( MUR + CS ) / Min( MUR ,RRSe ) ) ) ) + ( RMSe - ( ( Max( CS,MLU ) - Min( CS ,MUR ) ) - RRSe ) ) ) ) ) )", "obj1": 0.6079207920792079, "obj2": 0.27075724092513537}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) + ( FirstVNF_CPU - MRS ) )", "choosing": "( Max( ( ( ( CS / ( DS + CS ) ) / DS ) * ( MUC + MUM ) ),RMSe ) + Min( ( Max( MUC,( Max( MUM,Min( CS ,MLU ) ) + MUR ) ) / Min( RRSe ,CS ) ) ,CS ) )", "obj1": 0.596039603960396, "obj2": 0.2860789694396291}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( DDR / AMS ) ) / ( ARS - DDR ) ) - MRS ) * DDR ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( RMSe,RCSe ) / ( Min( ( Max( MUC,( MUR + MUR ) ) / Min( RRSe ,CS ) ) ,CS ) * MUC ) )", "obj1": 0.8792079207920792, "obj2": 0.04534459516796109}, {"determining": "( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,MRS ) ) / ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) ) + MUM ) ),( ( CS + ( Min( Min( MUM ,RRSe ) ,MUC ) + RRSe ) ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.7346534653465346, "obj2": 0.1259307616939714}, {"determining": "( ( ( ( PN + ( FirstVNF_RAM - Const ) ) - Min( MRS ,FirstVNF_CPU_Server ) ) - ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( CS / MUC ) + Max( ( ( ( ( DS + MLU ) * Min( RMSe ,MUR ) ) * ( Max( DS,RMSe ) - Max( MUR,RMSe ) ) ) - RRSe ),( CS * ( Max( ( ( MUR - ( MUR * DS ) ) / ( RRSe + CS ) ),MUM ) + ( RCSe * MUC ) ) ) ) )", "obj1": 0.6217821782178218, "obj2": 0.252785534249907}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server + CRS ) ) - ( ( ( ( FirstVNF_CPU - MRS ) * Max( ( RRS * FirstVNF_Mem_Server ),MDR ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( MUR * RCSe ) - Max( ( ( RRSe / DS ) * ( ( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) ) + RMSe ) ),MUC ) )", "obj1": 0.9663366336633663, "obj2": 0.015904574369477044}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RCSe + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.7782178217821782, "obj2": 0.10090863723543585}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - Max( FirstVNF_RAM_Server,( MDR * ( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) ) ) )", "choosing": "( Max( ( RRSe / DS ),RRSe ) / MUR )", "obj1": 0.7762376237623763, "obj2": 0.10476814629424028}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) * DDR ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( MUC,( MLU / MUR ) ) / Min( RRSe ,CS ) )", "obj1": 0.8673267326732673, "obj2": 0.048557739564430207}, {"determining": "( ( ( ( PN + ( FirstVNF_RAM - Const ) ) - Min( MRS ,FirstVNF_CPU_Server ) ) - ( ( MRS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) ) + MUM ) ),( ( CS + ( Min( Min( MUM ,RRSe ) ,MUC ) + RRSe ) ) - ( MUC * MLU ) ) ) + Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.6356435643564357, "obj2": 0.2282572676574331}, {"determining": "( ( ( ( PN + DDR ) - Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( MRS - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server * ACS ) / Min( ACS ,DDR ) ) / ( ( Const * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ARS - DDR ) ) ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( ( Max( MLU,MLU ) * DS ) * Max( ( RMSe - ( CS / RRSe ) ),( MUM * MUR ) ) ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) * Max( Max( MUR,MUC ),( CS * RRSe ) ) )", "obj1": 0.689108910891089, "obj2": 0.15988201937293275}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( DDR * ( ( CRS - FirstVNF_Mem_Server ) / AMS ) ) / Min( ARS ,DDR ) ) / AMS ) )", "choosing": "( Max( MUC,( Max( MUM,Min( CS ,MUM ) ) + Max( CS,MUC ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.906930693069307, "obj2": 0.033904677215130095}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( Min( ( Max( FirstVNF_RAM_Server,PN ) + ( FirstVNF_CPU - MRS ) ) ,Max( FirstVNF_Mem,AMS ) ) / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( RCSe + Max( Max( MUR,MUC ),( CS * ( ( CS / ( DS + CS ) ) / DS ) ) ) )", "obj1": 0.9821782178217822, "obj2": 0.006613856984298354}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server * ( ( Min( FirstVNF_Mem ,Const ) - AMS ) + Max( BR,ARS ) ) ) ),AMS ) ) + ( FirstVNF_CPU - MRS ) )", "choosing": "( ( MUR - ( ( ( Max( MUR,( RCSe * DS ) ) / RRSe ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.598019801980198, "obj2": 0.2797054307483504}, {"determining": "( Min( Max( FirstVNF_RAM_Server,AMS ) ,( MRS + FirstVNF_RAM_Server ) ) + ( FirstVNF_CPU - MRS ) )", "choosing": "( ( MUR - ( ( ( Max( ( RCSe * DS ),( RMSe + MUM ) ) / RRSe ) + MUR ) * DS ) ) / Min( ( MUM / RMSe ) ,CS ) )", "obj1": 0.6039603960396039, "obj2": 0.2790990058255064}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server + ( FirstVNF_RAM + BR ) ) + DDR ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUR - ( ( Max( MUM,Min( CS ,MLU ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.7247524752475247, "obj2": 0.1272572695221424}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( Min( ( Max( FirstVNF_RAM_Server,PN ) + ( FirstVNF_CPU - MRS ) ) ,Max( FirstVNF_Mem,AMS ) ) / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( RCSe + Max( Max( MUR,MUC ),( CS * ( ( CS / ( DS + CS ) ) / DS ) ) ) )", "obj1": 0.9801980198019802, "obj2": 0.007141559219233805}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * ( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) / AMS ) ) - ( ( ( ( FirstVNF_CPU - PN ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( ( MUR - ( ( Max( MUM,Max( Max( MUR,MUC ),RRSe ) ) + MUR ) * DS ) ) / Min( RRSe ,CS ) )", "obj1": 0.9227722772277228, "obj2": 0.02992988385246945}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) - ( ( ( ( FirstVNF_CPU - MRS ) * ( MDR / AMS ) ) / ( ARS - DDR ) ) / AMS ) )", "choosing": "( Max( ( ( RRSe / DS ) * ( MUC + MUM ) ),( ( CS + RRSe ) - ( MUC * MLU ) ) ) + Max( Max( Min( RRSe ,MLU ),MUC ),( CS * ( Min( ( Max( ( MLU * MUM ),MUC ) - MUC ) ,( ( ( CS - RRSe ) * MUR ) + ( ( MUR + CS ) / Min( MUR ,RRSe ) ) ) ) + ( RMSe - ( ( Max( CS,MLU ) - Min( CS ,MUR ) ) - RRSe ) ) ) ) ) )", "obj1": 0.8772277227722772, "obj2": 0.046642069392904405}]}