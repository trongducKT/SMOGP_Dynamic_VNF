{"1": [{"determining": "( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - Const ) )", "choosing": "( Max( MUM,RMSe ) - ( DS / DS ) )", "obj1": 0.9625984251968503, "obj2": 0.045070606492684254}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - MLU ),( DS - RRSe ) )", "obj1": 0.7440944881889764, "obj2": 0.2296898040612146}, {"determining": "( ( DDR - PN ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RRSe * DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),Max( Const,MDR ) )", "choosing": "( ( DS + MUC ) - Max( MUM,MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.49326687618096027}, {"determining": "( ( PN * DDR ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUR * MUC ) ,Max( MLU,RRSe ) )", "obj1": 0.7637795275590551, "obj2": 0.2113285753205982}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( BR - FirstVNF_CPU ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,AMS ) / ( CRS / CRS ) )", "choosing": "Max( ( MLU * MLU ),Max( MLU,MUC ) )", "obj1": 0.20275590551181102, "obj2": 0.7152036455929364}, {"determining": "( Min( ACS ,Const ) + ( Const + CRS ) )", "choosing": "( ( RRSe / RMSe ) * ( RMSe + DS ) )", "obj1": 0.13976377952755906, "obj2": 0.8035123874600938}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "Max( Min( FirstVNF_CPU ,PN ),Min( PN ,MRS ) )", "choosing": "( ( MUM / RRSe ) / Max( MUM,MUR ) )", "obj1": 0.21653543307086615, "obj2": 0.669992761515502}, {"determining": "( Max( PN,PN ) - ( ACS + FirstVNF_RAM ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - DS ) ) + ( MUM / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_CPU + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - Max( Min( MLU ,CS ),( RMSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + CRS ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * DS ) * ( MLU + CS ) ) * Min( ( MUC / MUM ) ,( MUR * MUR ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5624007670095407}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( MLU * RCSe ) / ( MUR * CS ) ) )", "obj1": 0.2795275590551181, "obj2": 0.6127628572745119}, {"determining": "( Min( Min( AMS ,ACS ) ,Max( DDR,BR ) ) * ( ( FirstVNF_CPU + DDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( CS / DS ) - Min( RMSe ,RMSe ) ),( Min( MUM ,RMSe ) * ( RRSe - MLU ) ) )", "obj1": 0.1220472440944882, "obj2": 0.8690571462261832}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * MRS ) )", "choosing": "Max( ( Max( MUM,MUR ) + ( RCSe * RMSe ) ),( ( MLU / RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6377706507066994}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7210444509263246}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) * Max( PN,MRS ) ) - ( Max( CRS,ACS ) / Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( CS,RRSe ) - ( MUM * ( MUM - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6639869249591888}, {"determining": "( ( ( Min( ACS ,Const ) * ( DDR + FirstVNF_RAM_Server ) ) * ( ( Const - BR ) - ( ARS * MRS ) ) ) / ( Max( ( FirstVNF_RAM - CRS ),( ARS + RRS ) ) * ( ( FirstVNF_RAM - AMS ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ),Min( DS ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( ACS + MRS ) ) - ( ( RRS + FirstVNF_CPU ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_Mem_Server / Const ) - ( FirstVNF_RAM_Server - CRS ) ) + ( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( ( ( RRSe / MUM ) - ( Min( MUM ,MUR ) * RCSe ) ) / ( MUC / Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( Min( FirstVNF_Mem ,Min( ( MDR - FirstVNF_Mem_Server ) ,MDR ) ) - Max( CRS,RRS ) )", "choosing": "Max( Max( ( ( DS * DS ) * ( DS / RMSe ) ),Max( Min( MUR ,DS ),( MUR - RMSe ) ) ),( ( ( RRSe - MUM ) + ( CS - MUC ) ) + ( Min( MUC ,RCSe ) / ( MUC + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) ),Max( Max( Min( ARS ,ARS ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6897015414652222}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - BR ) )", "choosing": "Min( ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) + ( MUM + MUM ) ) ) ,Max( ( ( MUR + MUM ) / ( MUM / MUC ) ),DS ) )", "obj1": 0.9094488188976378, "obj2": 0.0908498078247631}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) / Min( Min( CRS ,ARS ) ,( DDR * ARS ) ) ) / ( Min( ( FirstVNF_RAM_Server * CRS ) ,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + Max( Min( DDR ,FirstVNF_RAM ),( DDR * AMS ) ) ) )", "choosing": "Min( ( Min( Max( RRSe,RRSe ) ,( RCSe + MUM ) ) / RCSe ) ,Min( ( MLU - CS ) ,Min( MUR ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * ACS ) - ( MRS / FirstVNF_Mem_Server ) ) - ( ( PN / ACS ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( Min( FirstVNF_Mem_Server ,Const ) * ( BR + FirstVNF_Mem_Server ) ) * Max( ( DDR * ACS ),( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( RMSe - RCSe ) / Min( RCSe ,RRSe ) ) ,Min( ( RCSe * DS ) ,Min( MUC ,MUC ) ) ) * ( ( ( RMSe * CS ) * ( RMSe + RRSe ) ) / Max( ( RCSe - MLU ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5929298831984254}], "2": [{"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) / Min( Min( CRS ,ARS ) ,( DDR * ARS ) ) ) / ( Min( ( FirstVNF_RAM_Server * CRS ) ,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + Max( Min( DDR ,FirstVNF_RAM ),( DDR * AMS ) ) ) )", "choosing": "Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS * CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RRSe * DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MLU + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MDR - ( Max( FirstVNF_RAM_Server,MDR ) * FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) )", "choosing": "Min( Min( ( MUM + MUC ) ,RMSe ) ,Max( ( Min( MUM ,Min( MUR ,( Max( ( CS / MUR ),( CS * RRSe ) ) * Min( DS ,RRSe ) ) ) ) + MUR ),DS ) )", "obj1": 0.8641732283464567, "obj2": 0.1385218277036911}, {"determining": "( ( ( ( Const / AMS ) + ( FirstVNF_Mem * PN ) ) + ( ( ARS - Const ) / ( MRS / Const ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,Const ) / Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.26348813764104506}, {"determining": "( ( PN * DDR ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUR * MUC ) ,Max( MLU,RRSe ) )", "obj1": 0.7637795275590551, "obj2": 0.2113285753205982}, {"determining": "( ( AMS / BR ) * ( ( ACS - Const ) + ( Const + CRS ) ) )", "choosing": "( ( RMSe / DS ) + ( RCSe * RMSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7988890212739991}, {"determining": "( ( AMS / BR ) * Max( FirstVNF_CPU,Min( Const ,ARS ) ) )", "choosing": "Min( ( Min( Max( RRSe,RRSe ) ,( RCSe + MUM ) ) / RCSe ) ,Min( ( MLU - CS ) ,Min( MUR ,MUM ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6259428839208704}, {"determining": "Max( ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) ),Max( Max( Min( ARS ,ARS ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),ARS ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.5218339404437541}, {"determining": "Max( Min( ( DDR + FirstVNF_RAM_Server ) ,PN ),Min( PN ,MRS ) )", "choosing": "( ( MUM / RRSe ) / DS )", "obj1": 0.13385826771653545, "obj2": 0.7776541731574267}, {"determining": "( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RMSe ) - ( DS / Max( ( ( DS + MUC ) * ( RRSe - CS ) ),( RCSe / MUM ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7438308961041015}, {"determining": "Max( Min( FirstVNF_CPU ,PN ),Min( PN ,MRS ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.43503937007874016, "obj2": 0.46546115549938916}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7210444509263246}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RRSe ) ,( RCSe + MUM ) ) / RCSe ) ,Min( ( MLU - CS ) ,Min( MUR ,MUM ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6542287055880778}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - BR ) )", "choosing": "Min( ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) + ( MUM + MUM ) ) ) ,Max( ( ( MUR + MUM ) / ( MUM / MUC ) ),DS ) )", "obj1": 0.9094488188976378, "obj2": 0.0908498078247631}, {"determining": "( Max( CRS,ACS ) / ( CRS / RRS ) )", "choosing": "( Min( ( MUR + CS ) ,( DS / MUR ) ) / ( MUM - ( MUM - MUR ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5696847729051839}, {"determining": "( Max( Min( FirstVNF_CPU ,PN ),Min( PN ,MRS ) ) + ( BR - FirstVNF_CPU ) )", "choosing": "( RRSe * ( MUR / RRSe ) )", "obj1": 0.9881889763779528, "obj2": 0.006408653649723639}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( ( ( MUM / MUM ) * ( DS + CS ) ) * ( ( MLU / RRSe ) - Max( RMSe,RCSe ) ) ) / ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6945830893278119}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( MDR / ACS ) )", "choosing": "( ( CS + RCSe ) - ( MUR - DS ) )", "obj1": 0.4507874015748031, "obj2": 0.41826412892086456}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( MUM - MUC ) * ( RRSe + RCSe ) ) ,( ( RMSe * CS ) - ( DS + MUR ) ) ) - ( ( Min( CS ,RCSe ) / ( MUC + DS ) ) * ( ( MUR / DS ) / Max( RCSe,MUR ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5478500737752149}, {"determining": "( ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( ACS + MRS ) ) - ( ( RRS + FirstVNF_CPU ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_CPU + Const ) ) ) + ( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUM ) - ( Min( MUM ,MUR ) * RCSe ) ) / Min( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) ,Min( MUC ,MUR ) ) )", "obj1": 0.9645669291338582, "obj2": 0.0341874386660865}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - ACS ) )", "choosing": "Min( ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ,Max( ( ( MUR + MUM ) / ( MUM / MUC ) ),DS ) )", "obj1": 0.9094488188976378, "obj2": 0.0908498078247631}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - BR ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( MLU * RCSe ) / ( MUR * CS ) ) )", "obj1": 0.9251968503937008, "obj2": 0.06338905577451864}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( MDR - PN ),( ACS / MDR ) ) ) / ( ( ( Const + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( FirstVNF_RAM - AMS ) - Min( ARS ,PN ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5987746024907736}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - BR ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * DS ) * Min( MUM ,RMSe ) ) * Min( ( MUC / MUM ) ,( MUR * MUR ) ) )", "obj1": 0.937007874015748, "obj2": 0.0563020140520907}, {"determining": "Max( ( Const + ARS ),Max( Min( FirstVNF_Mem ,Min( ( MDR - FirstVNF_Mem_Server ) ,MDR ) ),MDR ) )", "choosing": "( ( DS + MUC ) - MUC )", "obj1": 0.42322834645669294, "obj2": 0.47658471187410983}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - MLU ),( DS - RRSe ) )", "obj1": 0.7440944881889764, "obj2": 0.2296898040612146}, {"determining": "Max( Min( FirstVNF_CPU ,PN ),Min( PN ,MRS ) )", "choosing": "( ( MUM / RRSe ) / Max( MUM,MUR ) )", "obj1": 0.21653543307086615, "obj2": 0.669992761515502}, {"determining": "( ( MDR - BR ) + ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) )", "choosing": "( ( CS * ( DS - RCSe ) ) - ( RRSe - DS ) )", "obj1": 0.3425196850393701, "obj2": 0.5511375396006235}, {"determining": "( Max( DDR,DDR ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( MUM / RMSe ) - ( DS / DS ) )", "obj1": 0.9625984251968503, "obj2": 0.04488442139666191}, {"determining": "( ( PN / ARS ) + CRS )", "choosing": "Min( Min( ( MUM + RCSe ) ,( DS * MUM ) ) ,( RRSe / MUC ) )", "obj1": 0.3956692913385827, "obj2": 0.5064968866058907}, {"determining": "Max( Min( ARS ,( BR - FirstVNF_CPU ) ),Min( PN ,MRS ) )", "choosing": "( ( MUR / RRSe ) / Max( MUM,RMSe ) )", "obj1": 0.19881889763779528, "obj2": 0.6862160724972467}, {"determining": "( ( ( Min( ( FirstVNF_RAM_Server - Const ) ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) / ( CRS * FirstVNF_Mem ) )", "choosing": "( DS - ( ( ( DS + MUC ) * ( RRSe - CS ) ) - ( RCSe / MUM ) ) )", "obj1": 0.3031496062992126, "obj2": 0.5832506852175909}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "Max( ( MUM - MLU ),( DS - RRSe ) )", "obj1": 0.7440944881889764, "obj2": 0.2296898040612146}, {"determining": "( Max( PN,DDR ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * MUC ) ,Max( MLU,RRSe ) )", "obj1": 0.7480314960629921, "obj2": 0.21655533904222724}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( ( Max( PN,DDR ) - ( DDR / FirstVNF_RAM_Server ) ) + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,RRSe ) ) )", "obj1": 0.4035433070866142, "obj2": 0.49883566059987067}, {"determining": "Max( ( Const + ARS ),Max( Const,MDR ) )", "choosing": "( ( DS + MUC ) - Max( DS,MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.49326687618096027}, {"determining": "Max( ( Const + ARS ),Max( Const,MDR ) )", "choosing": "( ( DS + MUC ) - Max( MUM,MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.49326687618096027}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( ( Min( ( CS + MUM ) ,RMSe ) * ( ( MLU * RCSe ) / ( MUR * CS ) ) ) ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5878145601222557}, {"determining": "( Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5960881782803822}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5929298831984254}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( FirstVNF_RAM_Server + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( CS / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5901815587370771}, {"determining": "( Max( ( ARS - BR ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - Max( CS,MUC ) ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5918483978894833}, {"determining": "( ( PN / ARS ) + ( AMS - BR ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5929298831984254}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( BR - FirstVNF_CPU ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,PN ) - ( ACS + FirstVNF_RAM ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - DS ) ) + ( MUM / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_CPU + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - Max( Min( MLU ,CS ),( RMSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) * Max( PN,MRS ) ) - ( Max( CRS,ACS ) / Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( CS,RRSe ) - ( MUM * ( MUM - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,Const ) * ( DDR + FirstVNF_RAM_Server ) ) * ( ( Const - BR ) - ( ARS * MRS ) ) ) / ( Max( ( FirstVNF_RAM - CRS ),( ARS + RRS ) ) * ( ( FirstVNF_RAM - AMS ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ),Min( DS ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_CPU + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - Max( Min( MLU ,CS ),( RMSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) / Min( Min( CRS ,ARS ) ,( DDR * ARS ) ) ) / ( Min( ( FirstVNF_RAM_Server * CRS ) ,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + Max( Min( DDR ,FirstVNF_RAM ),( DDR * AMS ) ) ) )", "choosing": "Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS * CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MLU + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( ( ACS * AMS ) * ( MDR / Max( FirstVNF_Mem,PN ) ) )", "choosing": "( Min( Min( RMSe ,DS ) ,( MLU - MUR ) ) / ( MUC - MUR ) )", "obj1": 0.5728346456692913, "obj2": 0.2653211463591873}, {"determining": "Max( Min( ( Min( ( ( Min( ( FirstVNF_Mem + AMS ) ,( RRS * RRS ) ) - ( Max( FirstVNF_RAM_Server,RRS ) * ( CRS / MDR ) ) ) - ( Max( ( PN / CRS ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * BR ) * ( RRS * CRS ) ) ) ) ,( ( Min( Max( Const,FirstVNF_RAM ) ,Max( BR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / Max( RRS,MRS ) ) ) / Min( Min( Min( DDR ,FirstVNF_RAM_Server ) ,( Const - ACS ) ) ,( Min( FirstVNF_RAM_Server ,MRS ) - ( CRS / CRS ) ) ) ) ) / ( Max( Min( ( Min( MDR ,FirstVNF_RAM ) / ( FirstVNF_CPU + MDR ) ) ,Min( ( MRS - MDR ) ,Min( FirstVNF_CPU ,RRS ) ) ),( Max( ( FirstVNF_CPU - AMS ),Max( AMS,AMS ) ) + ( ( CRS * FirstVNF_Mem_Server ) + ( ACS / MDR ) ) ) ) / ( ( ( ( Const + RRS ) - Min( ACS ,Const ) ) / ( ( FirstVNF_CPU_Server / Const ) - ( FirstVNF_RAM_Server / Const ) ) ) / ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem_Server / RRS ) ) - Min( Max( FirstVNF_RAM_Server,MRS ) ,Min( ACS ,PN ) ) ) ) ) ) ,Max( ( ( Min( Min( ( MDR * CRS ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( Min( Const ,RRS ) ,( DDR / Const ) ) ) - ( Min( ( FirstVNF_CPU_Server + MRS ) ,( RRS / FirstVNF_RAM ) ) * ( ( Const / ACS ) - ( FirstVNF_RAM_Server - Const ) ) ) ) / ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) * Min( BR ,BR ) ) + ( ( BR + FirstVNF_CPU_Server ) / ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_CPU / BR ),( AMS * ARS ) ),( ( CRS / FirstVNF_RAM_Server ) + Min( BR ,FirstVNF_RAM_Server ) ) ) ) ),( Max( Max( ( ( FirstVNF_RAM / FirstVNF_CPU ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ),( Max( ARS,CRS ) + Min( DDR ,FirstVNF_Mem ) ) ),Min( Max( Min( RRS ,ACS ),( FirstVNF_Mem - RRS ) ) ,( ( MRS / MRS ) / ( AMS / ARS ) ) ) ) * ( ( Max( ( AMS + FirstVNF_CPU_Server ),( CRS + FirstVNF_RAM ) ) + ( ( Const * ARS ) * Max( RRS,FirstVNF_RAM ) ) ) / ( ( Max( FirstVNF_CPU_Server,MDR ) - ( PN / FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem ,AMS ) + ( MRS - DDR ) ) ) ) ) ) ),( ( ( Min( Max( ( ( FirstVNF_CPU_Server - ACS ) * ( ACS * DDR ) ),( ( AMS / MDR ) / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_Mem ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) + ( ( Max( ( BR - Const ),( FirstVNF_RAM_Server + PN ) ) / ( ( PN / RRS ) * Min( Const ,FirstVNF_Mem ) ) ) * ( ( Max( DDR,FirstVNF_CPU_Server ) / ( DDR * FirstVNF_CPU ) ) - ( ( RRS / MDR ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * ( ( ( ( Max( Const,FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * MRS ) ) * Min( ( FirstVNF_RAM - PN ) ,( FirstVNF_Mem_Server * MRS ) ) ) / ( ( ( CRS * RRS ) - ( Const * MRS ) ) + Max( ( ACS - FirstVNF_Mem_Server ),( AMS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( MRS - ACS ) / Min( FirstVNF_RAM_Server ,MRS ) ) * Max( ( Const - FirstVNF_CPU_Server ),( ACS + ARS ) ) ) / ( ( ( CRS + BR ) + ( FirstVNF_CPU + RRS ) ) + ( ( MDR + CRS ) + ( BR + DDR ) ) ) ) ) ) / ( ( ( Min( ( ( CRS + MDR ) - Min( Const ,RRS ) ) ,Min( ( FirstVNF_CPU + ARS ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) + ( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) - ( MDR + FirstVNF_RAM_Server ) ) ) ) + ( Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),( FirstVNF_RAM * FirstVNF_Mem ) ) ,( ( CRS * MDR ) * ( AMS - FirstVNF_CPU_Server ) ) ) + ( ( Min( FirstVNF_RAM ,ACS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) - ( ( ACS / BR ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) + ( ( Min( ( ( RRS - ARS ) * Min( BR ,FirstVNF_RAM_Server ) ) ,Min( ( ARS - MRS ) ,( FirstVNF_CPU + MRS ) ) ) * Max( ( ( FirstVNF_Mem / AMS ) / ( ACS * FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem_Server - ACS ) * ( AMS - Const ) ) ) ) * ( ( ( ( FirstVNF_CPU_Server + CRS ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) * ( ( Const * DDR ) * Min( MRS ,MDR ) ) ) + ( Max( ( MRS * MDR ),Max( DDR,AMS ) ) - Max( Max( FirstVNF_Mem,ARS ),( MDR + BR ) ) ) ) ) ) ) )", "choosing": "( ( ( RCSe / MUR ) - MUC ) * ( Max( RCSe,MUR ) / ( ( MLU / RRSe ) / RCSe ) ) )", "obj1": 0.5610236220472441, "obj2": 0.3626380015414883}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - ACS ) )", "choosing": "( ( DS + MUC ) - Max( MUM,MUR ) )", "obj1": 0.8188976377952756, "obj2": 0.12608876084570236}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.8523622047244095, "obj2": 0.08512048078701735}, {"determining": "( Max( MRS,AMS ) * Min( MDR ,ACS ) )", "choosing": "( ( MUC + ( ( RRSe - MLU ) - RCSe ) ) - Max( MUR,( MUC - MUR ) ) )", "obj1": 0.6456692913385826, "obj2": 0.2551394181991046}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - DS ) ) + ( MUM / RMSe ) )", "obj1": 0.5295275590551181, "obj2": 0.3701750999370805}, {"determining": "( ( ( Min( Max( Max( ( Min( PN ,FirstVNF_Mem_Server ) - Max( AMS,FirstVNF_Mem ) ),Min( Max( FirstVNF_Mem_Server,MRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),( Min( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ,( BR * RRS ) ) * Min( ( Const - FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_Mem ) ) ) ) ,( ( Min( ( CRS - PN ) ,Min( MDR ,PN ) ) * Min( ( RRS + BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),Max( BR,ACS ) ) ) ) ) * ( Max( ( Min( ( FirstVNF_CPU + CRS ) ,( DDR - MRS ) ) * ( ( ACS / ARS ) * ( MDR * FirstVNF_RAM_Server ) ) ),( ( ( ACS / DDR ) / ( FirstVNF_CPU_Server - CRS ) ) + Min( Max( MDR,MDR ) ,( AMS + FirstVNF_Mem ) ) ) ) + Max( ( ( ( FirstVNF_RAM / DDR ) - ( BR + ACS ) ) / Min( ( PN * ACS ) ,( CRS * FirstVNF_RAM ) ) ),( ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( RRS,PN ) ) + ( ( MRS * BR ) / ( FirstVNF_CPU_Server / ARS ) ) ) ) ) ) + ( ( ( ( Min( ( RRS / ARS ) ,( RRS * CRS ) ) - Min( ( AMS + Const ) ,( FirstVNF_CPU_Server - BR ) ) ) - ( Min( ( DDR / ACS ) ,Max( PN,FirstVNF_RAM ) ) / Min( ( FirstVNF_CPU_Server - ACS ) ,( ACS + CRS ) ) ) ) / ( ( ( Min( RRS ,Const ) / ( BR - DDR ) ) / ( ( FirstVNF_Mem * CRS ) * ( ARS * Const ) ) ) * Min( Max( ( PN - FirstVNF_CPU ),Max( FirstVNF_Mem,FirstVNF_CPU ) ) ,Min( ( FirstVNF_Mem - FirstVNF_CPU ) ,( FirstVNF_RAM_Server - AMS ) ) ) ) ) * ( ( ( ( Max( BR,FirstVNF_CPU ) / ( DDR + FirstVNF_Mem_Server ) ) / ( ( MRS + MRS ) * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) - ( ( ( RRS * FirstVNF_RAM_Server ) + ( ACS / FirstVNF_CPU_Server ) ) + ( ( MDR - CRS ) + ( FirstVNF_Mem * ARS ) ) ) ) / ( ( ( ( FirstVNF_Mem_Server - ARS ) + ( FirstVNF_RAM_Server / DDR ) ) / ( ( BR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) - Max( ( ( AMS / ARS ) * ( ARS + ARS ) ),Max( Min( FirstVNF_RAM ,BR ),Max( RRS,ARS ) ) ) ) ) ) ) + ( Min( ( ( ( ( ( MDR + BR ) / ( BR + MDR ) ) - ( ( AMS + FirstVNF_Mem_Server ) / Max( CRS,ACS ) ) ) * ( ( ( FirstVNF_CPU * MRS ) + ( MRS * DDR ) ) + Min( Min( BR ,CRS ) ,( DDR / FirstVNF_RAM ) ) ) ) + ( Min( ( ( DDR + Const ) / ( MDR + CRS ) ) ,( ( DDR - BR ) + ( MRS / FirstVNF_RAM_Server ) ) ) * ( Min( ( AMS - AMS ) ,Min( ACS ,BR ) ) + ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ) ) ) ,Max( ( ( ( Max( FirstVNF_Mem_Server,MDR ) * ( FirstVNF_CPU_Server * BR ) ) + ( ( RRS + FirstVNF_RAM ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_Mem * MRS ) / Max( DDR,DDR ) ) - ( ( ACS / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,AMS ) ) ) ),Max( Min( ( ( RRS - DDR ) + ( ARS * RRS ) ) ,( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_RAM,MRS ) ) ),( Max( Min( BR ,ACS ),Max( FirstVNF_RAM,FirstVNF_Mem ) ) / Max( ( PN / FirstVNF_CPU_Server ),Min( RRS ,BR ) ) ) ) ) ) / ( ( Min( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,Min( CRS ,FirstVNF_RAM ) ) + Min( ( CRS * FirstVNF_CPU ) ,Min( DDR ,FirstVNF_RAM ) ) ) ,( ( ( MRS + RRS ) - ( FirstVNF_CPU_Server / MDR ) ) * Max( Max( ACS,FirstVNF_Mem_Server ),( Const * ACS ) ) ) ) - ( ( ( ( MDR - FirstVNF_Mem ) * ( Const * ACS ) ) + Min( ( DDR * DDR ) ,( PN * AMS ) ) ) / ( Max( Min( MDR ,DDR ),Max( DDR,FirstVNF_CPU ) ) + ( Max( FirstVNF_CPU,MRS ) + ( FirstVNF_Mem * DDR ) ) ) ) ) / ( ( ( ( ( FirstVNF_CPU_Server / MDR ) / ( FirstVNF_RAM - AMS ) ) * ( Min( FirstVNF_CPU_Server ,RRS ) - ( RRS + FirstVNF_RAM_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server - PN ),Max( PN,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,PN ) + ( FirstVNF_CPU + CRS ) ) ) ) / ( ( ( Max( PN,ARS ) / Max( FirstVNF_Mem_Server,DDR ) ) / ( Max( PN,FirstVNF_CPU_Server ) + ( ACS - ACS ) ) ) / Min( ( Max( FirstVNF_RAM_Server,ARS ) + ( DDR * FirstVNF_CPU_Server ) ) ,( ( DDR / ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( Max( Min( ( ( Max( Min( RRSe ,RCSe ),Max( CS,RMSe ) ) / ( ( RRSe + CS ) * ( DS - RMSe ) ) ) / ( Min( ( RMSe * MUC ) ,( MUR - CS ) ) - ( ( DS + MLU ) + ( CS * RCSe ) ) ) ) ,( Max( ( ( DS * MLU ) - ( RMSe + RRSe ) ),Min( Max( MUC,RMSe ) ,Max( MUC,MUC ) ) ) - ( ( Min( DS ,MUR ) - Max( CS,RCSe ) ) * ( ( MUC - MUM ) / Max( RRSe,RCSe ) ) ) ) ),Max( Max( ( Max( ( CS / MUM ),Min( RCSe ,MUC ) ) / ( Max( DS,RCSe ) + ( RCSe * RMSe ) ) ),Min( ( ( RMSe / MUC ) - ( MUR + MLU ) ) ,( Max( DS,MUR ) * ( RMSe - RRSe ) ) ) ),( ( ( Max( MUR,RCSe ) - ( RRSe + CS ) ) * Max( ( DS * RCSe ),( RMSe * RRSe ) ) ) + ( Max( ( MUR * RMSe ),( CS + MUR ) ) * Min( Max( RCSe,MUM ) ,( RRSe * MUC ) ) ) ) ) ) ,( ( ( ( Min( Min( MUM ,RCSe ) ,( RRSe / MLU ) ) + ( ( MUR + RRSe ) / ( RMSe * MLU ) ) ) + Min( Min( ( DS * RCSe ) ,( RMSe * RRSe ) ) ,( ( MUM + RMSe ) - Min( MUR ,MLU ) ) ) ) + ( Min( ( Min( MLU ,CS ) / Min( MUR ,MUM ) ) ,Min( Min( MUC ,MUM ) ,( MUC / CS ) ) ) * ( ( ( MUR - CS ) + Min( MUC ,RMSe ) ) + Min( ( DS / MUC ) ,Min( MUC ,MUM ) ) ) ) ) - ( Max( Min( ( Min( MUM ,RRSe ) / ( CS - RMSe ) ) ,( Max( RCSe,MUC ) * Max( MUC,RCSe ) ) ),Min( ( ( RRSe * MUC ) + ( MUC * MUC ) ) ,( ( RRSe / RMSe ) - ( MLU + RMSe ) ) ) ) / ( ( ( ( MLU * DS ) + ( RRSe + MLU ) ) - ( Min( RMSe ,MLU ) / ( RCSe + RCSe ) ) ) * ( Min( ( RCSe / MUR ) ,Min( MLU ,CS ) ) + Max( ( RCSe * DS ),( MUM + RCSe ) ) ) ) ) ) ) * Min( ( Max( Min( ( ( ( MLU + RRSe ) - ( MLU + CS ) ) / Max( ( RMSe + MLU ),( RCSe * MLU ) ) ) ,( ( ( RMSe * RMSe ) * ( MUR / MUM ) ) * ( Max( MUM,MLU ) + ( RMSe / RRSe ) ) ) ),( ( ( Max( MUM,DS ) * ( MUC - MUR ) ) * ( ( DS / RMSe ) + ( CS + RMSe ) ) ) + ( ( ( CS + MUM ) + ( CS * MUC ) ) + ( ( MUR - DS ) * Min( DS ,CS ) ) ) ) ) / ( ( ( Min( ( MUM - RRSe ) ,( DS * MUM ) ) + ( ( MUR * MLU ) + ( RCSe - MLU ) ) ) - ( ( Max( RCSe,MUM ) + ( MUR + MUM ) ) - Max( Max( MUR,MUM ),( RCSe * MLU ) ) ) ) / ( Max( ( Max( MUM,CS ) * ( MUM + MLU ) ),( ( MUC / MUM ) + ( RMSe / DS ) ) ) / Min( Max( Max( CS,RCSe ),Max( DS,RMSe ) ) ,Max( Max( CS,RRSe ),( RCSe / RCSe ) ) ) ) ) ) ,( ( ( ( ( ( DS - MLU ) * Min( MUC ,MUM ) ) * ( ( RCSe + MLU ) * ( CS / MUR ) ) ) / ( ( ( MUM / MUM ) / ( CS - RCSe ) ) * ( ( MUM + MLU ) + Min( CS ,CS ) ) ) ) / ( ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( RCSe / MUC ) + Min( MUM ,MUM ) ) ) + Min( Min( ( RRSe * RRSe ) ,( CS / RCSe ) ) ,Max( ( CS * MLU ),( MUC + MUM ) ) ) ) ) / ( ( ( Max( Min( MUR ,MLU ),Min( RMSe ,MUC ) ) + ( Min( MUR ,MUR ) * Min( MUR ,MUC ) ) ) / Max( ( Min( RRSe ,MUR ) * ( MUM - RMSe ) ),( ( MUM - CS ) - ( CS + MUM ) ) ) ) / ( Min( Max( ( RCSe + MUM ),Min( CS ,MUR ) ) ,( Max( MUC,MLU ) / ( MUC + RRSe ) ) ) / Max( ( ( MUR * CS ) + Min( RRSe ,RRSe ) ),( ( DS - MLU ) + ( MUM + RMSe ) ) ) ) ) ) ) )", "obj1": 0.484251968503937, "obj2": 0.4135580733829008}, {"determining": "( ( ACS - AMS ) * ( MDR / ( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR ) ) )", "choosing": "( Max( MUM,RCSe ) / DS )", "obj1": 0.687007874015748, "obj2": 0.23691106377277463}, {"determining": "Max( ( Const + ARS ),Max( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ),MDR ) )", "choosing": "( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8672092220269672}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( FirstVNF_RAM_Server + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7591071395443683}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / BR ) * ( ( ACS - Const ) + ( Const + CRS ) ) )", "choosing": "( ( RMSe / DS ) + ( RCSe * ( Min( RCSe ,DS ) - ( MUC / CS ) ) ) )", "obj1": 0.11220472440944881, "obj2": 0.8076928430477597}, {"determining": "( ( PN * DDR ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUR * MUC ) ,Max( MLU,RRSe ) )", "obj1": 0.7637795275590551, "obj2": 0.2113285753205982}, {"determining": "( Max( ( Max( ( FirstVNF_RAM - CRS ),( ARS + RRS ) ) * ( ( FirstVNF_RAM - AMS ) - Min( ARS ,PN ) ) ),FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - BR ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * Max( Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ),Min( DS ,DS ) ) )", "obj1": 0.9173228346456693, "obj2": 0.08178021130769869}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - ACS ) )", "choosing": "( ( DS + MUC ) - MUC )", "obj1": 0.8011811023622047, "obj2": 0.17810090909015983}, {"determining": "( PN - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUR / RRSe ) / Max( MUM,MUR ) ) ,Max( MLU,RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.017052518854257105}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),Max( ( Const + ARS ),Max( Min( FirstVNF_Mem ,Min( ( MDR - FirstVNF_Mem_Server ) ,MDR ) ),MDR ) ) ) - ACS ) )", "choosing": "Min( ( ( Min( MUM ,( DS + MUC ) ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ,Max( ( ( MUR + MUM ) / ( MUM / MUC ) ),DS ) )", "obj1": 0.797244094488189, "obj2": 0.1813651418931117}, {"determining": "( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RMSe ) - ( DS / Max( ( ( DS + MUC ) * ( RRSe - CS ) ),( RCSe / MUM ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7438308961041015}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - MLU ),( DS - RRSe ) )", "obj1": 0.7440944881889764, "obj2": 0.2296898040612146}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.3031496062992126, "obj2": 0.5568011104298819}, {"determining": "( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - Const ) )", "choosing": "( RMSe - Max( ( ( DS + MUC ) * ( RRSe - CS ) ),( RCSe / MUM ) ) )", "obj1": 0.9586614173228346, "obj2": 0.049302540123505156}, {"determining": "( ( AMS / BR ) * Max( FirstVNF_CPU,Min( Const ,ARS ) ) )", "choosing": "Min( ( Min( Max( RRSe,RRSe ) ,( RCSe + MUM ) ) / RCSe ) ,Min( ( MLU - CS ) ,Min( MUR ,MUM ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6259428839208704}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( MDR / ACS ) )", "choosing": "( ( CS + RCSe ) - ( MUR - DS ) )", "obj1": 0.4507874015748031, "obj2": 0.41826412892086456}, {"determining": "( ( Const + ARS ) + Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "( ( DS + MUC ) - Max( DS,MUC ) )", "obj1": 0.4389763779527559, "obj2": 0.459509423632066}, {"determining": "( Max( Min( FirstVNF_CPU ,PN ),Min( PN ,MRS ) ) + ( BR - FirstVNF_CPU ) )", "choosing": "( RRSe * ( MUR / RRSe ) )", "obj1": 0.9881889763779528, "obj2": 0.006408653649723639}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,( CS - CS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5294008380871531}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * Const ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "( MUC - ( ( Min( CS ,RCSe ) / ( MUC + DS ) ) * ( ( MUR / DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.3405511811023622, "obj2": 0.5481623227657311}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - BR ) ) * Min( Const ,FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * DS ) * Min( MUM ,RMSe ) ) * Min( ( MUC / MUM ) ,( MUR * MUR ) ) )", "obj1": 0.937007874015748, "obj2": 0.056149153694333785}, {"determining": "Max( Min( ARS ,( BR - FirstVNF_CPU ) ),Min( PN ,MRS ) )", "choosing": "( ( MUR / RRSe ) / Max( MUM,RMSe ) )", "obj1": 0.18110236220472442, "obj2": 0.7006008470844263}, {"determining": "Max( Min( FirstVNF_CPU ,PN ),Min( PN ,MRS ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6134228980159454}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( CS / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( DS / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5744743426960317}, {"determining": "Max( FirstVNF_Mem_Server,Min( PN ,MRS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( RRSe,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.21456692913385828, "obj2": 0.6727314899732649}, {"determining": "( ( AMS / BR ) * ( ( ACS - Const ) + ( Const + CRS ) ) )", "choosing": "( ( RMSe / DS ) + ( RCSe * RMSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7988890212739991}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7210444509263246}, {"determining": "( Max( PN,DDR ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * MUC ) ,Max( MLU,RRSe ) )", "obj1": 0.7480314960629921, "obj2": 0.21655533904222724}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) / Max( Min( FirstVNF_CPU ,PN ),Min( PN ,MRS ) ) )", "choosing": "( Min( Max( MUM,MUR ) ,RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5999572042258323}, {"determining": "Max( ( Const + ARS ),Max( Const,MDR ) )", "choosing": "( ( DS + MUC ) - Max( MUM,MUC ) )", "obj1": 0.4094488188976378, "obj2": 0.4919464834388601}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_RAM_Server ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,DS ) ,Min( MUM ,RRSe ) )", "obj1": 0.38188976377952755, "obj2": 0.5153107159921115}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - BR ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( MLU * RCSe ) / ( MUR * CS ) ) )", "obj1": 0.9251968503937008, "obj2": 0.06338905577451864}, {"determining": "( Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( ( MUM / RRSe ) / Max( MUM,MUR ) )", "obj1": 0.20275590551181102, "obj2": 0.6849754079197969}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7210444509263246}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( MDR - PN ),( ACS / MDR ) ) ) / ( ( ( Const + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( FirstVNF_RAM - AMS ) - Min( ARS ,PN ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6463553304691946}, {"determining": "( Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,Max( FirstVNF_RAM,DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6463553304691946}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - BR ) )", "choosing": "( Max( MUM,RMSe ) - ( DS / DS ) )", "obj1": 0.9232283464566929, "obj2": 0.07189047980802242}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( ( Min( ( CS + MUM ) ,RMSe ) * ( ( MLU * RCSe ) / ( MUR * CS ) ) ) ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5878145601222557}, {"determining": "Max( ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - DDR ) ) ),Max( Max( Min( ARS ,ARS ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),ARS ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),Min( MLU ,MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.5273673129365313}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) * Min( PN ,MRS ) )", "choosing": "Min( ( Min( Max( RRSe,RRSe ) ,( RCSe + MUM ) ) / ( MUM / RRSe ) ) ,Min( ( MLU - CS ) ,Min( MUR ,MUM ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6561165262804803}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( MUM - MUC ) * ( RRSe + RCSe ) ) ,( ( RMSe * CS ) - ( DS + MUR ) ) ) - ( ( Min( CS ,RCSe ) / ( MUC + DS ) ) * ( ( MUR / DS ) / Max( RCSe,MUR ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5478500737752149}], "4": [{"determining": "( ( PN * DDR ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_CPU + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - Max( Min( MLU ,CS ),( RMSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MLU + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( MUR,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2964683277624647}, {"determining": "( ( ACS * AMS ) * ( MDR / Max( FirstVNF_Mem,PN ) ) )", "choosing": "( Min( Min( RMSe ,DS ) ,( MLU - MUR ) ) / ( MUC - MUR ) )", "obj1": 0.5728346456692913, "obj2": 0.2653211463591873}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3764785205636626}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / ( MUC - RMSe ) )", "obj1": 0.6830708661417323, "obj2": 0.22758022761065333}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - ACS ) )", "choosing": "( ( DS + MUC ) - Max( MUM,MUR ) )", "obj1": 0.8188976377952756, "obj2": 0.12608876084570236}, {"determining": "( Max( MRS,AMS ) * Min( MDR ,ACS ) )", "choosing": "( ( MUC + ( ( RRSe - MLU ) - RCSe ) ) - Max( MUR,( MUC - MUR ) ) )", "obj1": 0.6456692913385826, "obj2": 0.2551394181991046}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.8523622047244095, "obj2": 0.08512048078701735}, {"determining": "( ( ( Min( Max( Max( ( Min( PN ,FirstVNF_Mem_Server ) - Max( AMS,FirstVNF_Mem ) ),Min( Max( FirstVNF_Mem_Server,MRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),( Min( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ,( BR * RRS ) ) * Min( ( Const - FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_Mem ) ) ) ) ,( ( Min( ( CRS - PN ) ,Min( MDR ,PN ) ) * Min( ( RRS + BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),Max( BR,ACS ) ) ) ) ) * ( Max( ( Min( ( FirstVNF_CPU + CRS ) ,( DDR - MRS ) ) * ( ( ACS / ARS ) * ( MDR * FirstVNF_RAM_Server ) ) ),( ( ( ACS / DDR ) / ( FirstVNF_CPU_Server - CRS ) ) + Min( Max( MDR,MDR ) ,( AMS + FirstVNF_Mem ) ) ) ) + Max( ( ( ( FirstVNF_RAM / DDR ) - ( BR + ACS ) ) / Min( ( PN * ACS ) ,( CRS * FirstVNF_RAM ) ) ),( ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( RRS,PN ) ) + ( ( MRS * BR ) / ( FirstVNF_CPU_Server / ARS ) ) ) ) ) ) + ( ( ( ( Min( ( RRS / ARS ) ,( RRS * CRS ) ) - Min( ( AMS + Const ) ,( FirstVNF_CPU_Server - BR ) ) ) - ( Min( ( DDR / ACS ) ,Max( PN,FirstVNF_RAM ) ) / Min( ( FirstVNF_CPU_Server - ACS ) ,( ACS + CRS ) ) ) ) / ( ( ( Min( RRS ,Const ) / ( BR - DDR ) ) / ( ( FirstVNF_Mem * CRS ) * ( ARS * Const ) ) ) * Min( Max( ( PN - FirstVNF_CPU ),Max( FirstVNF_Mem,FirstVNF_CPU ) ) ,Min( ( FirstVNF_Mem - FirstVNF_CPU ) ,( FirstVNF_RAM_Server - AMS ) ) ) ) ) * ( ( ( ( Max( BR,FirstVNF_CPU ) / ( DDR + FirstVNF_Mem_Server ) ) / ( ( MRS + MRS ) * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) - ( ( ( RRS * FirstVNF_RAM_Server ) + ( ACS / FirstVNF_CPU_Server ) ) + ( ( MDR - CRS ) + ( FirstVNF_Mem * ARS ) ) ) ) / ( ( ( ( FirstVNF_Mem_Server - ARS ) + ( FirstVNF_RAM_Server / DDR ) ) / ( ( BR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) - Max( ( ( AMS / ARS ) * ( ARS + ARS ) ),Max( Min( FirstVNF_RAM ,BR ),Max( RRS,ARS ) ) ) ) ) ) ) + ( Min( ( ( ( ( ( MDR + BR ) / ( BR + MDR ) ) - ( ( AMS + FirstVNF_Mem_Server ) / Max( CRS,ACS ) ) ) * ( ( ( FirstVNF_CPU * MRS ) + ( MRS * DDR ) ) + Min( Min( BR ,CRS ) ,( DDR / FirstVNF_RAM ) ) ) ) + ( Min( ( ( DDR + Const ) / ( MDR + CRS ) ) ,( ( DDR - BR ) + ( MRS / FirstVNF_RAM_Server ) ) ) * ( Min( ( AMS - AMS ) ,Min( ACS ,BR ) ) + ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ) ) ) ,Max( ( ( ( Max( FirstVNF_Mem_Server,MDR ) * ( FirstVNF_CPU_Server * BR ) ) + ( ( RRS + FirstVNF_RAM ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_Mem * MRS ) / Max( DDR,DDR ) ) - ( ( ACS / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,AMS ) ) ) ),Max( Min( ( ( RRS - DDR ) + ( ARS * RRS ) ) ,( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * Max( FirstVNF_RAM,MRS ) ) ),( Max( Min( BR ,ACS ),Max( FirstVNF_RAM,FirstVNF_Mem ) ) / Max( ( PN / FirstVNF_CPU_Server ),Min( RRS ,BR ) ) ) ) ) ) / ( ( Min( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,Min( CRS ,FirstVNF_RAM ) ) + Min( ( CRS * FirstVNF_CPU ) ,Min( DDR ,FirstVNF_RAM ) ) ) ,( ( ( MRS + RRS ) - ( FirstVNF_CPU_Server / MDR ) ) * Max( Max( ACS,FirstVNF_Mem_Server ),( Const * ACS ) ) ) ) - ( ( ( ( MDR - FirstVNF_Mem ) * ( Const * ACS ) ) + Min( ( DDR * DDR ) ,( PN * AMS ) ) ) / ( Max( Min( MDR ,DDR ),Max( DDR,FirstVNF_CPU ) ) + ( Max( FirstVNF_CPU,MRS ) + ( FirstVNF_Mem * DDR ) ) ) ) ) / ( ( ( ( ( FirstVNF_CPU_Server / MDR ) / ( FirstVNF_RAM - AMS ) ) * ( Min( FirstVNF_CPU_Server ,RRS ) - ( RRS + FirstVNF_RAM_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server - PN ),Max( PN,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,PN ) + ( FirstVNF_CPU + CRS ) ) ) ) / ( ( ( Max( PN,ARS ) / Max( FirstVNF_Mem_Server,DDR ) ) / ( Max( PN,FirstVNF_CPU_Server ) + ( ACS - ACS ) ) ) / Min( ( Max( FirstVNF_RAM_Server,ARS ) + ( DDR * FirstVNF_CPU_Server ) ) ,( ( DDR / ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( Max( Min( ( ( Max( Min( RRSe ,RCSe ),Max( CS,RMSe ) ) / ( ( RRSe + CS ) * ( DS - RMSe ) ) ) / ( Min( ( RMSe * MUC ) ,( MUR - CS ) ) - ( ( DS + MLU ) + ( CS * RCSe ) ) ) ) ,( Max( ( ( DS * MLU ) - ( RMSe + RRSe ) ),Min( Max( MUC,RMSe ) ,Max( MUC,MUC ) ) ) - ( ( Min( DS ,MUR ) - Max( CS,RCSe ) ) * ( ( MUC - MUM ) / Max( RRSe,RCSe ) ) ) ) ),Max( Max( ( Max( ( CS / MUM ),Min( RCSe ,MUC ) ) / ( Max( DS,RCSe ) + ( RCSe * RMSe ) ) ),Min( ( ( RMSe / MUC ) - ( MUR + MLU ) ) ,( Max( DS,MUR ) * ( RMSe - RRSe ) ) ) ),( ( ( Max( MUR,RCSe ) - ( RRSe + CS ) ) * Max( ( DS * RCSe ),( RMSe * RRSe ) ) ) + ( Max( ( MUR * RMSe ),( CS + MUR ) ) * Min( Max( RCSe,MUM ) ,( RRSe * MUC ) ) ) ) ) ) ,( ( ( ( Min( Min( MUM ,RCSe ) ,( RRSe / MLU ) ) + ( ( MUR + RRSe ) / ( RMSe * MLU ) ) ) + Min( Min( ( DS * RCSe ) ,( RMSe * RRSe ) ) ,( ( MUM + RMSe ) - Min( MUR ,MLU ) ) ) ) + ( Min( ( Min( MLU ,CS ) / Min( MUR ,MUM ) ) ,Min( Min( MUC ,MUM ) ,( MUC / CS ) ) ) * ( ( ( MUR - CS ) + Min( MUC ,RMSe ) ) + Min( ( DS / MUC ) ,Min( MUC ,MUM ) ) ) ) ) - ( Max( Min( ( Min( MUM ,RRSe ) / ( CS - RMSe ) ) ,( Max( RCSe,MUC ) * Max( MUC,RCSe ) ) ),Min( ( ( RRSe * MUC ) + ( MUC * MUC ) ) ,( ( RRSe / RMSe ) - ( MLU + RMSe ) ) ) ) / ( ( ( ( MLU * DS ) + ( RRSe + MLU ) ) - ( Min( RMSe ,MLU ) / ( RCSe + RCSe ) ) ) * ( Min( ( RCSe / MUR ) ,Min( MLU ,CS ) ) + Max( ( RCSe * DS ),( MUM + RCSe ) ) ) ) ) ) ) * Min( ( Max( Min( ( ( ( MLU + RRSe ) - ( MLU + CS ) ) / Max( ( RMSe + MLU ),( RCSe * MLU ) ) ) ,( ( ( RMSe * RMSe ) * ( MUR / MUM ) ) * ( Max( MUM,MLU ) + ( RMSe / RRSe ) ) ) ),( ( ( Max( MUM,DS ) * ( MUC - MUR ) ) * ( ( DS / RMSe ) + ( CS + RMSe ) ) ) + ( ( ( CS + MUM ) + ( CS * MUC ) ) + ( ( MUR - DS ) * Min( DS ,CS ) ) ) ) ) / ( ( ( Min( ( MUM - RRSe ) ,( DS * MUM ) ) + ( ( MUR * MLU ) + ( RCSe - MLU ) ) ) - ( ( Max( RCSe,MUM ) + ( MUR + MUM ) ) - Max( Max( MUR,MUM ),( RCSe * MLU ) ) ) ) / ( Max( ( Max( MUM,CS ) * ( MUM + MLU ) ),( ( MUC / MUM ) + ( RMSe / DS ) ) ) / Min( Max( Max( CS,RCSe ),Max( DS,RMSe ) ) ,Max( Max( CS,RRSe ),( RCSe / RCSe ) ) ) ) ) ) ,( ( ( ( ( ( DS - MLU ) * Min( MUC ,MUM ) ) * ( ( RCSe + MLU ) * ( CS / MUR ) ) ) / ( ( ( MUM / MUM ) / ( CS - RCSe ) ) * ( ( MUM + MLU ) + Min( CS ,CS ) ) ) ) / ( ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( RCSe / MUC ) + Min( MUM ,MUM ) ) ) + Min( Min( ( RRSe * RRSe ) ,( CS / RCSe ) ) ,Max( ( CS * MLU ),( MUC + MUM ) ) ) ) ) / ( ( ( Max( Min( MUR ,MLU ),Min( RMSe ,MUC ) ) + ( Min( MUR ,MUR ) * Min( MUR ,MUC ) ) ) / Max( ( Min( RRSe ,MUR ) * ( MUM - RMSe ) ),( ( MUM - CS ) - ( CS + MUM ) ) ) ) / ( Min( Max( ( RCSe + MUM ),Min( CS ,MUR ) ) ,( Max( MUC,MLU ) / ( MUC + RRSe ) ) ) / Max( ( ( MUR * CS ) + Min( RRSe ,RRSe ) ),( ( DS - MLU ) + ( MUM + RMSe ) ) ) ) ) ) ) )", "obj1": 0.484251968503937, "obj2": 0.4135580733829008}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( FirstVNF_RAM_Server + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7591071395443683}, {"determining": "Max( ( Const + ARS ),Max( Min( FirstVNF_Mem ,( RRS / FirstVNF_CPU ) ),MDR ) )", "choosing": "( DS - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8556309879579178}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - ACS ) )", "choosing": "( ( DS + MUC ) - MUC )", "obj1": 0.8011811023622047, "obj2": 0.17801714222876638}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - BR ) ) + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( RMSe / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.22234561997450664}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( DS - Max( ( ( DS + MUC ) * ( RRSe - CS ) ),( RCSe / MUM ) ) )", "obj1": 0.8366141732283464, "obj2": 0.09791520169404312}, {"determining": "( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RMSe ) - ( DS / Max( ( ( DS + MUC ) * ( RRSe - CS ) ),( RCSe / MUM ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7438308961041015}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - BR ) )", "choosing": "Min( ( MUR * MUC ) ,Max( MLU,RRSe ) )", "obj1": 0.9153543307086615, "obj2": 0.0818334607281143}, {"determining": "( Max( PN,DDR ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS * CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) )", "obj1": 0.7893700787401575, "obj2": 0.1877469405969998}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / BR ) * ( ( ACS - Const ) + ( Const + CRS ) ) )", "choosing": "( ( MUM / RRSe ) / Max( MUM,MUR ) )", "obj1": 0.18110236220472442, "obj2": 0.6914040354350357}, {"determining": "( PN - ( FirstVNF_RAM / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / MUR ) / Max( MUM,MUR ) )", "obj1": 0.9468503937007874, "obj2": 0.023179000729612438}, {"determining": "( ( PN * DDR ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUR * MUC ) ,Max( MLU,RRSe ) )", "obj1": 0.7637795275590551, "obj2": 0.2113285753205982}, {"determining": "( ( Const + ARS ) + Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "( ( DS + MUC ) - Max( DS,MUC ) )", "obj1": 0.4389763779527559, "obj2": 0.459509423632066}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( MDR / ACS ) )", "choosing": "( ( CS + RCSe ) - ( MUR - DS ) )", "obj1": 0.4507874015748031, "obj2": 0.41826412892086456}, {"determining": "Max( ( Const + ARS ),Max( Const,MDR ) )", "choosing": "( ( DS + MUC ) - Max( MUM,MUC ) )", "obj1": 0.4094488188976378, "obj2": 0.4919464834388601}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.3031496062992126, "obj2": 0.5568011104298819}, {"determining": "( Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( ( RMSe / DS ) + ( RCSe * ( Min( RCSe ,DS ) - ( MUC / CS ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7969323479898699}, {"determining": "Max( FirstVNF_Mem_Server,Min( PN ,MRS ) )", "choosing": "( ( RMSe / DS ) + ( RCSe * ( Min( RCSe ,DS ) - ( MUC / CS ) ) ) )", "obj1": 0.11220472440944881, "obj2": 0.8076928430477597}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * Max( Min( FirstVNF_CPU ,PN ),Min( PN ,MRS ) ) ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe * DS ) ,Min( MUM ,RRSe ) )", "obj1": 0.3858267716535433, "obj2": 0.5143714394052383}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * Const ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "( MUC - ( ( Min( CS ,RCSe ) / ( MUC + DS ) ) * ( ( MUR / DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.3405511811023622, "obj2": 0.5481623227657311}, {"determining": "Max( ( Const + ARS ),Max( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ),MDR ) )", "choosing": "( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8672092220269672}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.6456692913385826, "obj2": 0.2551394181991046}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_RAM_Server ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,DS ) ,Min( MUM ,RRSe ) )", "obj1": 0.41929133858267714, "obj2": 0.4803874130766223}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( CS / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( DS / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5744743426960317}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - ACS ) ) - AMS ) * ( MDR / ACS ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - ( DS * MUC ) ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.9389763779527559, "obj2": 0.0557558788892985}, {"determining": "( Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,Max( FirstVNF_RAM,DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( ( DS + MUC ) - MUC )", "obj1": 0.43700787401574803, "obj2": 0.4634815689175763}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,( CS - CS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5294008380871531}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( MUM - MUC ) * ( RRSe + RCSe ) ) ,( ( RMSe * CS ) - ( DS + MUR ) ) ) - ( ( Min( CS ,RCSe ) / ( MUC + DS ) ) * ( ( MUR / DS ) / Max( RCSe,MUR ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5478500737752149}, {"determining": "( Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM * DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7210444509263246}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) * Min( PN ,MRS ) )", "choosing": "Min( ( Min( Max( RRSe,RRSe ) ,( RCSe + MUM ) ) / ( MUM / RRSe ) ) ,Min( ( MLU - CS ) ,Min( MUR ,MUM ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6561165262804803}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7210444509263246}, {"determining": "( PN - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( MUM,MUR ) ,RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011742440117330912}, {"determining": "( ( ACS - AMS ) * ( ( Min( DDR ,RRS ) * ( FirstVNF_CPU_Server - AMS ) ) / ACS ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - DS ) - ( MLU - MUM ) ) ) ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5974397395116144}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe - MUM ) ) ,RCSe ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6321814604066301}, {"determining": "( PN - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUR / RRSe ) / Max( MUM,MUR ) ) ,Max( MLU,RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.017052518854257105}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "( ( RRSe - CS ) - Max( MUM,MUC ) )", "obj1": 0.25196850393700787, "obj2": 0.6090083063251552}, {"determining": "( Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5820736546965064}, {"determining": "Min( ( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( Const + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( FirstVNF_RAM - AMS ) - Min( ARS ,PN ) ) ) ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( MUR ,MUC ) * DS ) ,Min( MUM ,RRSe ) )", "obj1": 0.37401574803149606, "obj2": 0.5242826999581884}, {"determining": "Max( FirstVNF_Mem_Server,Min( PN ,MRS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( RRSe,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.21456692913385828, "obj2": 0.6727314899732649}, {"determining": "( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ACS ) )", "choosing": "( ( Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) ) + MUC ) - Max( MUM,MUR ) )", "obj1": 0.19291338582677164, "obj2": 0.6871315425180606}], "5": [{"determining": "( Max( PN,DDR ) - CRS )", "choosing": "Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS * CS ) ) ),Min( Min( Min( MLU ,RRSe ) ,Max( ( ( DS + MUC ) * ( RRSe - CS ) ),( RCSe - MUM ) ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MLU + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( ( PN * DDR ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( FirstVNF_RAM_Server + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( ( ACS * AMS ) * ( MDR / Max( FirstVNF_Mem,PN ) ) )", "choosing": "( Min( Min( RMSe ,DS ) ,( MLU - MUR ) ) / ( MUC - MUR ) )", "obj1": 0.5728346456692913, "obj2": 0.2653211463591873}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Min( DDR ,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / MUC ) )", "obj1": 0.7165354330708661, "obj2": 0.17374426830402323}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( DS - Max( ( ( DS + MUC ) * ( RRSe - CS ) ),( RCSe / MUM ) ) )", "obj1": 0.812992125984252, "obj2": 0.1302577058582617}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.8523622047244095, "obj2": 0.08512048078701735}, {"determining": "( PN - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.03912363151990383}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / Max( MUM,MUR ) )", "obj1": 0.5, "obj2": 0.2940383531623596}, {"determining": "( ( Const + ARS ) + Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "( ( DS + MUC ) - Max( DS,MUC ) )", "obj1": 0.4389763779527559, "obj2": 0.459509423632066}, {"determining": "( Max( MRS,AMS ) * Min( MDR ,ACS ) )", "choosing": "( ( MUC + ( ( RRSe - MLU ) - RCSe ) ) - Max( MUR,( MUC - MUR ) ) )", "obj1": 0.6456692913385826, "obj2": 0.2551394181991046}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( FirstVNF_RAM_Server + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7591071395443683}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( RRSe,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2964683277624647}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( ( RMSe / DS ) + ( RCSe * ( Min( RCSe ,DS ) - ( MUC / CS ) ) ) )", "obj1": 0.7145669291338582, "obj2": 0.20016389574297988}, {"determining": "( Min( ( Max( ACS,Max( DDR,CRS ) ) + CRS ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( Min( RRSe ,DS ) - ( DS * MUC ) ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7877316859999047}, {"determining": "( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RMSe ) - ( DS / Max( ( ( DS + MUC ) * ( RRSe - CS ) ),( RCSe / MUM ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7438308961041015}, {"determining": "( Max( DDR,ARS ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUM / CS ) / ( Min( ( ( Min( RMSe ,DS ) * Max( MUR,RRSe ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.6771653543307087, "obj2": 0.24146005914458724}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6276000922081404}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.3031496062992126, "obj2": 0.5568011104298819}, {"determining": "Max( ( Const + ARS ),Max( Min( FirstVNF_Mem ,( RRS / FirstVNF_CPU ) ),MDR ) )", "choosing": "( DS - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8556309879579178}, {"determining": "( Min( ACS ,AMS ) * ( MDR / ACS ) )", "choosing": "( Min( ( Max( ( CS - MUC ),( CS + DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.2199130954078857}, {"determining": "( PN - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / RRSe ) / Max( MUM,MUR ) )", "obj1": 0.9468503937007874, "obj2": 0.022982157264685343}, {"determining": "( Min( Max( Max( ACS,( DDR - AMS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( ( RMSe / DS ) + MLU )", "obj1": 0.11023622047244094, "obj2": 0.8109041077565545}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / BR ) * ( ( ACS - Const ) + ( Const + CRS ) ) )", "choosing": "( ( MUM / RRSe ) / Max( MUM,MUR ) )", "obj1": 0.18110236220472442, "obj2": 0.6914040354350357}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( FirstVNF_RAM_Server ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * ( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - ACS ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * MUM ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( ( DS + MUC ) - Max( MUM,MUR ) ) ) ) )", "obj1": 0.25, "obj2": 0.5962822841205951}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( MUR,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2964683277624647}, {"determining": "Max( ( Const + ARS ),Max( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ),MDR ) )", "choosing": "( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8672092220269672}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "Min( ( RRSe * DS ) ,Min( CS ,RRSe ) )", "obj1": 0.8228346456692913, "obj2": 0.12244529973347677}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( MDR / ACS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5610258401901964}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,( CS - CS ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5073245793077787}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM ) + ( FirstVNF_CPU / ARS ) )", "choosing": "( ( Min( Min( Min( MUR ,RMSe ) ,MUM ) ,Max( MUM,( MLU - RRSe ) ) ) / MUM ) + Min( DS ,CS ) )", "obj1": 0.3700787401574803, "obj2": 0.5211841899069563}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( PN - ( DDR / FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / ( ( MUR / RRSe ) / Max( MUM,MUR ) ) ),( RRSe / MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03515450286990972}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.6456692913385826, "obj2": 0.2551394181991046}, {"determining": "Max( FirstVNF_Mem_Server,Min( PN ,MRS ) )", "choosing": "( ( RMSe / DS ) + ( RCSe * ( Min( RCSe ,DS ) - ( MUC / CS ) ) ) )", "obj1": 0.11220472440944881, "obj2": 0.8076928430477597}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( DS - Max( ( ( DS + MUC ) * ( RRSe - CS ) ),( RCSe / MUM ) ) )", "obj1": 0.8366141732283464, "obj2": 0.09791520169404312}, {"determining": "( Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5820736546965064}, {"determining": "Max( ( Const + ARS ),Max( Min( FirstVNF_Mem ,( RRS / FirstVNF_CPU ) ),MDR ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7210444509263246}, {"determining": "( Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM * DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7210444509263246}, {"determining": "( Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5920901728978245}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * Const ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "( MUC - ( ( Min( CS ,RCSe ) / ( MUC + DS ) ) * ( ( MUR / DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.3405511811023622, "obj2": 0.5481623227657311}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / ( MUC - RMSe ) )", "obj1": 0.6830708661417323, "obj2": 0.22758022761065333}, {"determining": "( PN - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - DS ) - ( MLU - MUM ) ) ) ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011742440117330912}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) * ( Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) / CRS ) )", "choosing": "( Min( ( CS + MUM ) ,( Min( Max( RRSe,RRSe ) ,( RCSe + MUM ) ) / RCSe ) ) * ( ( ( ( MUM + RCSe ) - ( DS * MUM ) ) - Max( ( DS - ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6125309384415527}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) * Min( PN ,MRS ) )", "choosing": "Min( ( Min( Max( RRSe,RRSe ) ,( RCSe + MUM ) ) / ( MUM / RRSe ) ) ,Min( ( MLU - CS ) ,Min( MUR ,MUM ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6561165262804803}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6183289689021675}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_RAM_Server ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,DS ) ,Min( MUM ,RRSe ) )", "obj1": 0.41929133858267714, "obj2": 0.4803874130766223}, {"determining": "( ( DDR * DDR ) - ( FirstVNF_RAM_Server - ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,Min( CS ,CS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5263388938786585}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * Const ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( Max( RRSe,RRSe ) ,( RCSe + MUM ) ) / ( MUM / RRSe ) ) ,Min( ( MLU - CS ) ,Min( MUR ,MUM ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6561165262804803}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( DS - Max( ( ( DS + MUC ) * ( RRSe - CS ) ),( RCSe / MUM ) ) )", "obj1": 0.8366141732283464, "obj2": 0.09791520169404312}], "6": [{"determining": "( ( ( FirstVNF_Mem + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MLU + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,DDR ) - CRS )", "choosing": "Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS * CS ) ) ),Min( Min( Min( MLU ,RRSe ) ,Max( ( ( DS + MUC ) * ( RRSe - CS ) ),( RCSe - MUM ) ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( FirstVNF_RAM_Server + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( ( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) ) * ( MDR / ( FirstVNF_Mem - PN ) ) )", "choosing": "( Min( Min( RMSe ,( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) ,( MLU - MUR ) ) / ( MUC - MUM ) )", "obj1": 0.812992125984252, "obj2": 0.1172160676646997}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUC + ( Min( RRSe ,DS ) - ( DS * MUC ) ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.7421259842519685, "obj2": 0.17030443809087115}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( ( Const + ARS ) + Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "( ( DS + MUC ) - Max( DS,MUC ) )", "obj1": 0.4389763779527559, "obj2": 0.459509423632066}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.5551181102362205, "obj2": 0.2624647317153956}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.8661417322834646, "obj2": 0.08016190105005416}, {"determining": "( PN - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / DS ) + ( RCSe * ( Min( RCSe ,DS ) - ( MUC / CS ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.04283157968399715}, {"determining": "( Max( MRS,AMS ) * Min( MDR ,ACS ) )", "choosing": "( ( MUC + ( ( RRSe - MLU ) - RCSe ) ) - Max( MUR,( MUC - MUR ) ) )", "obj1": 0.6456692913385826, "obj2": 0.2551394181991046}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( MUR,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.5413385826771654, "obj2": 0.27330487136826376}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( PN - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / RRSe ) / Max( MUM,MUR ) )", "obj1": 0.9468503937007874, "obj2": 0.022982157264685343}, {"determining": "( Max( DDR,MRS ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( RMSe / DS ) + ( RCSe * ( Min( RCSe ,DS ) - ( MUM / CS ) ) ) )", "obj1": 0.7145669291338582, "obj2": 0.1996715950242704}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / MUM )", "obj1": 0.49606299212598426, "obj2": 0.29635557562515696}, {"determining": "Max( ( Const + ARS ),Max( Min( FirstVNF_Mem ,ACS ),MDR ) )", "choosing": "( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( Min( RMSe ,RRSe ) * MUC ) - ( MUM + MUM ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8307869428793659}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( MDR / ACS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5367483764445857}, {"determining": "( FirstVNF_CPU / ( ( ( FirstVNF_RAM_Server + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7664668615689169}, {"determining": "( Min( ACS ,AMS ) * ( MDR / ACS ) )", "choosing": "( Min( ( Max( ( CS - MUC ),( CS + DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.2199130954078857}, {"determining": "( ( ARS - AMS ) * Max( ( Const + ARS ),Max( Min( FirstVNF_Mem ,( RRS / FirstVNF_CPU ) ),MDR ) ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,RMSe ) ) )", "obj1": 0.3937007874015748, "obj2": 0.49222001612029437}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Min( DDR ,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / MUC ) )", "obj1": 0.7165354330708661, "obj2": 0.17374426830402323}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / BR ) * ( ( ACS - Const ) + ( Const + CRS ) ) )", "choosing": "( ( MUM / RRSe ) / Max( MUM,MUR ) )", "obj1": 0.18110236220472442, "obj2": 0.6914040354350357}, {"determining": "( RRS * ( MDR / ACS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6816107855199334}, {"determining": "Max( ( Const + ( MDR / ACS ) ),Max( Min( FirstVNF_Mem ,( RRS / FirstVNF_CPU ) ),MDR ) )", "choosing": "( DS - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * Max( RRSe,( MUC - MUR ) ) ) - ( MUM + MUM ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8627371179034757}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( ( Min( MUM ,RMSe ) / DS ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.49606299212598426, "obj2": 0.29635557562515696}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) * ( Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) / ACS ) )", "choosing": "( MUC - ( ( Min( CS ,RCSe ) / ( MUC + DS ) ) * ( ( MUR / DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5304252236157622}, {"determining": "( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RMSe ) - ( DS / Max( ( ( DS + MUC ) * ( RRSe - CS ) ),( RCSe / MUM ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7438308961041015}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6232355656156756}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( DS - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.25448412609749554}, {"determining": "( Max( MRS,AMS ) * Min( MDR ,ACS ) )", "choosing": "( ( MUC + ( ( RRSe - MLU ) - RCSe ) ) - Max( MUR,( MUC - MUR ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8046404283663786}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ACS ,( ( CRS * FirstVNF_RAM_Server ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * ( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - ACS ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( RMSe - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * MUM ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( ( DS + MUC ) - Max( DS,MUR ) ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.648235205068512}, {"determining": "( Max( DDR,ARS ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUM / CS ) / ( Min( ( ( Min( RMSe ,DS ) * Max( MUR,RRSe ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.6771653543307087, "obj2": 0.24146005914458724}, {"determining": "( Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5920901728978245}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29181229366825007}, {"determining": "( Min( Max( Max( ACS,Max( DDR,PN ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "Max( ( Max( CS,MLU ) - ( Min( Min( Max( MLU,RRSe ) ,Max( ( ( DS + MUC ) * ( RRSe - CS ) ),( RCSe / MUM ) ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.7128693492278347}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - DS ) - ( MLU - MUM ) ) ) ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5558550377068338}, {"determining": "( ( CRS + ARS ) + Max( Const,MDR ) )", "choosing": "( ( DS + MUC ) - Max( DS,DS ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,( CS - CS ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5073245793077787}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / ( MUC - RMSe ) )", "obj1": 0.6830708661417323, "obj2": 0.22758022761065333}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6183289689021675}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( MDR + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / ( MLU * RCSe ) ) ) ,RCSe ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6067145108731568}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( FirstVNF_RAM_Server + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7591071395443683}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( PN - ( DDR / FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / ( ( MUR / RRSe ) / Max( MUM,MUR ) ) ),( RRSe / MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03515450286990972}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( FirstVNF_RAM_Server + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7591071395443683}, {"determining": "( PN - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - DS ) - ( MLU - MUM ) ) ) ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011742440117330912}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5941895892575045}, {"determining": "( ( Const + Min( PN ,( RRS / FirstVNF_CPU ) ) ) + Max( Const,MDR ) )", "choosing": "( ( MLU / CS ) - Max( DS,MUC ) )", "obj1": 0.28937007874015747, "obj2": 0.5708357520914675}, {"determining": "( Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7210444509263246}, {"determining": "( ( DDR * DDR ) - ( FirstVNF_RAM_Server - ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,Min( CS ,CS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5263388938786585}], "7": [{"determining": "( ( ( FirstVNF_Mem + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MLU + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) - ( FirstVNF_RAM / ACS ) )", "choosing": "( MUC * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - ( ( MUM - DS ) - Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( Max( DDR,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( MUR + DS ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( ( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) ) * ( MDR / ( FirstVNF_Mem - PN ) ) )", "choosing": "( Min( Min( RMSe ,( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) ,( MLU - MUR ) ) / ( MUC - MUM ) )", "obj1": 0.812992125984252, "obj2": 0.1172160676646997}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.8661417322834646, "obj2": 0.08016190105005416}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,MLU ) ,( MLU - MUR ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( ( ARS - AMS ) * Max( ( Const + ARS ),Max( Min( FirstVNF_Mem ,( RRS / FirstVNF_CPU ) ),MDR ) ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,RMSe ) ) )", "obj1": 0.4389763779527559, "obj2": 0.4567502235173172}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7480314960629921, "obj2": 0.15711803211165026}, {"determining": "( PN - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / DS ) + ( RCSe * ( Min( RCSe ,DS ) - ( MUC / CS ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.04283157968399715}, {"determining": "Max( ( Const + ( MDR / ACS ) ),Max( Min( FirstVNF_Mem ,( RRS / FirstVNF_CPU ) ),MDR ) )", "choosing": "( DS - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * Max( RRSe,( MUC - MUR ) ) ) - ( MUM + MUM ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8627371179034757}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / ( MUC - RMSe ) )", "obj1": 0.47244094488188976, "obj2": 0.34224513249205474}, {"determining": "( ( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) ) * ( MDR / Max( FirstVNF_Mem,PN ) ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,( DS - CS ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.09809643501306384}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.6200787401574803, "obj2": 0.24346085629751435}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ACS ,( ( CRS * FirstVNF_RAM_Server ) + ( ( CRS * FirstVNF_RAM_Server ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * ( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - ACS ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( RMSe - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * MUM ) ) ) / ( ( ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( ( DS + MUC ) - Max( DS,MUR ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6442405756104578}, {"determining": "( Max( DDR,ARS ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUM / CS ) / ( Min( ( ( Min( RMSe ,DS ) * Max( MUR,RRSe ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.6771653543307087, "obj2": 0.24146005914458724}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( BR ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / RRSe )", "obj1": 0.7086614173228346, "obj2": 0.19945730852539253}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4862204724409449, "obj2": 0.3100890890343541}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6780812023578803}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Min( DDR ,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / MUC ) )", "obj1": 0.7165354330708661, "obj2": 0.17374426830402323}, {"determining": "( Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5920901728978245}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.5610236220472441, "obj2": 0.259177917977248}, {"determining": "( Min( Max( Max( ACS,Max( DDR,PN ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.603986009798549}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5941895892575045}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.25151205803394694}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( MDR / ACS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5367483764445857}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - DS ) - ( MLU - MUM ) ) ) ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5558550377068338}, {"determining": "( PN - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - DS ) - ( MLU - MUM ) ) ) ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011742440117330912}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / FirstVNF_CPU ) * ( ( ACS - Const ) + ( Const + CRS ) ) )", "choosing": "( ( MUM / RMSe ) / Max( MUM,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.7029261926576419}, {"determining": "( Min( ACS ,AMS ) * ( MDR / ACS ) )", "choosing": "( Min( ( Max( ( CS - MUC ),( CS + DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.2199130954078857}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUC + ( Min( RRSe ,DS ) - ( DS * MUC ) ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.7421259842519685, "obj2": 0.17030443809087115}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( PN - ( DDR / FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / ( ( MUR / RRSe ) / Max( MUM,MUR ) ) ),( RRSe / MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03515450286990972}, {"determining": "( PN - ( ( FirstVNF_Mem_Server + Min( ACS ,( ( CRS * FirstVNF_RAM_Server ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( RMSe / DS ) + MUM )", "obj1": 0.9921259842519685, "obj2": 0.0041458448740831185}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( PN - ( DDR / FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.016849102241438534}, {"determining": "( PN - ( ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / RRSe ) / Max( Min( RMSe ,RRSe ),MUR ) )", "obj1": 0.15551181102362205, "obj2": 0.7431410659370309}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,( CS - CS ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5073245793077787}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.535286279634305}, {"determining": "( ( CRS + ARS ) + Max( Const,MDR ) )", "choosing": "( ( DS + MUC ) - Max( DS,DS ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.5295275590551181, "obj2": 0.2863295318202576}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( DDR,PN ) ) )", "choosing": "( ( MUC + Min( RMSe ,DS ) ) * ( DS / Max( MLU,( CS - CS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4877544956133838}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + MUC ) - Max( DS,MUC ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041418}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.5255905511811023, "obj2": 0.2917559681217298}, {"determining": "( Max( MRS,AMS ) * ( MDR / ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( ( MUC / RRSe ),( MUC - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7347102848780726}, {"determining": "( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( ( Min( PN ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,( Min( ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) ,( RCSe + MUM ) ) / RCSe ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5242004974820821}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS + MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6227240077982746}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) - ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + MLU ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / ( ( MUR / RRSe ) / Max( MUM,MUR ) ) ),( RRSe / MUR ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7552050505205187}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.5551181102362205, "obj2": 0.2624647317153956}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) * ( Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) / ACS ) )", "choosing": "( MUC - ( ( Min( CS ,RCSe ) / ( MUC + DS ) ) * ( ( MUR / DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5304252236157622}, {"determining": "Max( ( Const + ( MDR / ACS ) ),Max( Min( FirstVNF_Mem ,( RRS / Min( FirstVNF_Mem ,( RRS / FirstVNF_CPU ) ) ) ),MDR ) )", "choosing": "( DS - ( ( Min( MUM ,RMSe ) / DS ) / ( ( Max( DS,MUC ) * Max( RRSe,( MUC - MUR ) ) ) - ( MUM + MUM ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8728707794295374}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}], "8": [{"determining": "( ( ( FirstVNF_Mem + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MLU + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( MUC * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) - ( FirstVNF_RAM / ACS ) )", "choosing": "( MUC * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - ( ( MUM - DS ) - Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( Max( DDR,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( MUR + DS ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( RRS / FirstVNF_Mem ) ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MLU - DS ) / RRSe )", "obj1": 0.4311023622047244, "obj2": 0.4421173646983946}, {"determining": "( Min( ACS ,AMS ) * ( MDR / ACS ) )", "choosing": "( Min( ( Max( ( CS - MUC ),( CS + DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.2199130954078857}, {"determining": "( Max( DDR,Min( ( Max( ACS,Max( DDR,CRS ) ) / CRS ) ,( Const + DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( MUC / RCSe )", "obj1": 0.7854330708661418, "obj2": 0.1446371888933227}, {"determining": "( ( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) ) * ( MDR / ( FirstVNF_Mem - PN ) ) )", "choosing": "( Min( Min( RMSe ,( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) ,( MLU - MUR ) ) / ( MUC - MUM ) )", "obj1": 0.812992125984252, "obj2": 0.1172160676646997}, {"determining": "Max( ( Const + ( MDR / ACS ) ),Max( Min( FirstVNF_Mem ,( RRS / FirstVNF_CPU ) ),MDR ) )", "choosing": "( DS - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * Max( RRSe,( MUC - MUR ) ) ) - ( MUM + MUM ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8627371179034757}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( Max( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ),( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,MUC ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( ( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) ) * ( MDR / Max( FirstVNF_Mem,PN ) ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,( DS - CS ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.09809643501306384}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6424676107354008}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.6200787401574803, "obj2": 0.22276606268456198}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) - ( Const + RRS ) ) - ( DDR / CRS ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RRSe ,DS ) * Max( MUR,CS ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.05163685542771715}, {"determining": "( Max( ARS,Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) ) ) ) )", "obj1": 0.5787401574803149, "obj2": 0.24933940926885892}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5759464375542127}, {"determining": "( ( CRS + ARS ) + ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( PN / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - Max( DS,DS ) )", "obj1": 0.19291338582677164, "obj2": 0.6765680868131936}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.5295275590551181, "obj2": 0.2863295318202576}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7480314960629921, "obj2": 0.15711803211165026}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) - ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + MLU ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / ( ( MUR / RRSe ) / Max( MUM,MUR ) ) ),( RRSe / MUR ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7552050505205187}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( MDR / ACS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3484251968503937, "obj2": 0.5184115258017564}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / ( MUC - RMSe ) )", "obj1": 0.47244094488188976, "obj2": 0.34224513249205474}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.6122047244094488, "obj2": 0.2312785356742249}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - DS ) - ( MLU - MUM ) ) ) ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5661413296171317}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.8661417322834646, "obj2": 0.08016190105005416}, {"determining": "Max( ( Const + ( MDR / ACS ) ),Max( Min( FirstVNF_Mem ,( RRS / FirstVNF_CPU ) ),MDR ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.16141732283464566, "obj2": 0.7157372098714546}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),Max( Const,RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RCSe * ( ( ( MLU - CS ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.8661417322834646, "obj2": 0.08016190105005416}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.4739568152439851}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,( CS - CS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5060585049862968}, {"determining": "( PN - ( ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / RRSe ) / Max( Min( RMSe ,RRSe ),MUR ) )", "obj1": 0.15551181102362205, "obj2": 0.7431410659370309}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - DS ) - ( MLU - MUM ) ) ) ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5558550377068338}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( MDR / ACS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5367483764445857}, {"determining": "( ( ACS - ACS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe )", "obj1": 0.17913385826771652, "obj2": 0.6903889015737461}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.46062992125984253, "obj2": 0.352518458210658}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( BR ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.5324108357249665}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( BR ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / RRSe )", "obj1": 0.7086614173228346, "obj2": 0.19945730852539253}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / BR )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RRSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.16929133858267717, "obj2": 0.7025866518709118}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4862204724409449, "obj2": 0.3100890890343541}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS + MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6227240077982746}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / RRSe )", "obj1": 0.7362204724409449, "obj2": 0.16639391219842628}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.5610236220472441, "obj2": 0.259177917977248}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( PN - ( DDR / FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / ( ( MUR / RRSe ) / Max( MUM,MUR ) ) ),( RRSe / MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03506759479388159}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + MUC ) - Max( DS,MUC ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041418}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( DDR,PN ) ) )", "choosing": "( ( MUC + Min( RMSe ,DS ) ) * ( DS / Max( MLU,( CS - CS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4877544956133838}, {"determining": "( Min( Max( Max( ACS,Max( DDR,( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( Min( ( MUM + RCSe ) ,( DS * MUM ) ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.603986009798549}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,( CS - CS ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5013691806191665}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5941895892575045}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( PN - ( DDR / FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.016849102241438534}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.5551181102362205, "obj2": 0.2624647317153956}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Min( DDR ,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / MUC ) )", "obj1": 0.7165354330708661, "obj2": 0.17374426830402323}], "9": [{"determining": "( Max( DDR,Min( Max( Max( ( RRS - FirstVNF_RAM ),Max( DDR,Const ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MLU + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( MUC * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( Max( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ),( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,MUC ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "Max( ( Const + ( MDR / ACS ) ),Max( Min( FirstVNF_Mem ,( RRS / FirstVNF_CPU ) ),MDR ) )", "choosing": "( DS - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * Max( RRSe,( MUC - MUR ) ) ) - ( MUM + MUM ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8627371179034757}, {"determining": "( Max( ARS,BR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - Max( Max( Min( MUM ,RMSe ),DS ),( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 0.6811023622047244, "obj2": 0.18934467094571916}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) - ( Const + RRS ) ) - ( DDR / CRS ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RRSe ,DS ) * Max( MUR,CS ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.05163685542771715}, {"determining": "( Max( Min( FirstVNF_Mem ,( RRS / FirstVNF_CPU ) ),MDR ) / BR )", "choosing": "( ( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe ) / RRSe )", "obj1": 0.1437007874015748, "obj2": 0.7522759856525711}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( ACS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( ( RMSe - MUC ),( RRSe / RRSe ) ) ,RCSe ) / RRSe )", "obj1": 0.6437007874015748, "obj2": 0.21537453913910215}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5542563441690276}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( RRS / FirstVNF_Mem ) ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MLU - DS ) / RRSe )", "obj1": 0.4311023622047244, "obj2": 0.4421173646983946}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5759464375542127}, {"determining": "( Max( ARS,Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) ) ) ) )", "obj1": 0.5787401574803149, "obj2": 0.24933940926885892}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Min( DDR ,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / MUC ) )", "obj1": 0.7165354330708661, "obj2": 0.17374426830402323}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( MDR / ACS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3484251968503937, "obj2": 0.5184115258017564}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.7699099434420847}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( MDR / ACS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5367483764445857}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6424676107354008}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7480314960629921, "obj2": 0.15711803211165026}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / ( MUC - RMSe ) )", "obj1": 0.47244094488188976, "obj2": 0.34224513249205474}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( DDR,PN ) ) )", "choosing": "( ( MUC + Min( RMSe ,DS ) ) * ( DS / Max( MLU,( CS - CS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4877544956133838}, {"determining": "( ( Max( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ),FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) ) * ( MDR / Max( FirstVNF_Mem,PN ) ) )", "choosing": "( ( MUM - DS ) / ( MUC - RRSe ) )", "obj1": 0.7992125984251969, "obj2": 0.13179825620642993}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / BR )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.15551181102362205, "obj2": 0.7222563443982367}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.4739568152439851}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,( CS - CS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5060585049862968}, {"determining": "( Max( DDR,Min( ( Max( ACS,Max( DDR,CRS ) ) / CRS ) ,( Const + DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( MUC / RCSe )", "obj1": 0.7854330708661418, "obj2": 0.1446371888933227}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),ACS ) ) )", "choosing": "( ( MUM / RCSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.5354330708661418, "obj2": 0.27608862048444677}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( RRS / FirstVNF_Mem ) ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MLU - DS ) / RRSe )", "obj1": 0.4311023622047244, "obj2": 0.4421173646983946}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.6200787401574803, "obj2": 0.22276606268456198}, {"determining": "( ( ( FirstVNF_Mem_Server + Max( DDR,( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) / Min( FirstVNF_CPU ,BR ) ) / FirstVNF_Mem_Server )", "choosing": "( ( MUC + ( Max( ( MUM / RCSe ),Min( Max( Min( ( MUM + RRSe ) ,( DS * MUM ) ),( RRSe / MUM ) ) ,RCSe ) ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6681324698084528}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.484251968503937, "obj2": 0.31770265682721843}, {"determining": "( ( CRS + ARS ) + ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( PN / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - Max( DS,DS ) )", "obj1": 0.19291338582677164, "obj2": 0.6765680868131936}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( BR ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.5324108357249665}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.49606299212598426, "obj2": 0.2964683277624647}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6273111698983314}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.2883045095824648}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.5551181102362205, "obj2": 0.2624647317153956}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.6122047244094488, "obj2": 0.2312785356742249}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( PN - ( DDR / FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.011071016793274456}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( FirstVNF_RAM_Server + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( MLU - CS ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) * ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.8661417322834646, "obj2": 0.08016190105005416}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + MUC ) - Max( DS,MUC ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041418}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( PN - ( DDR / FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / RRSe )", "obj1": 0.9448818897637795, "obj2": 0.0227341892890093}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.5610236220472441, "obj2": 0.259177917977248}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / RRSe )", "obj1": 0.7362204724409449, "obj2": 0.16639391219842628}, {"determining": "Max( ( Const + ( MDR / ACS ) ),Max( Min( FirstVNF_Mem ,( RRS / FirstVNF_CPU ) ),MDR ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.16141732283464566, "obj2": 0.7157372098714546}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( Max( ( PN - ( DDR / FirstVNF_RAM_Server ) ),( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( MUM + DS ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / ( ( MUR / RRSe ) / Max( MUM,MUR ) ) ),( RRSe / MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03506759479388159}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.5295275590551181, "obj2": 0.2863295318202576}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.8661417322834646, "obj2": 0.08016190105005416}, {"determining": "( Min( Max( Max( ACS,Max( DDR,( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8772849017411549}], "10": [{"determining": "( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MLU + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( Max( DDR,Min( Max( Max( ( RRS - FirstVNF_RAM ),Max( DDR,Const ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( ( Max( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ),FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) ) * ( MDR / Max( FirstVNF_Mem,PN ) ) )", "choosing": "( ( MUM - DS ) / ( MUC - RRSe ) )", "obj1": 0.7992125984251969, "obj2": 0.13179825620642993}, {"determining": "( Max( ( MDR - FirstVNF_Mem ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RMSe ,DS ) * Max( MUR,MLU ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - Min( CS ,CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.8641732283464567, "obj2": 0.08499155393434041}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( Max( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ),( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,MUC ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * Max( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ),( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUR ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4120062559210867}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8617564457443753}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / ( MUC - RMSe ) )", "obj1": 0.47244094488188976, "obj2": 0.34224513249205474}, {"determining": "( ( CRS + ARS ) + ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( PN / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - Max( DS,DS ) )", "obj1": 0.24015748031496062, "obj2": 0.6169483198607545}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) - ( Const + RRS ) ) - ( DDR / CRS ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RRSe ,DS ) * Max( MUR,CS ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.05163685542771715}, {"determining": "( Max( ARS,Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) ) ) ) )", "obj1": 0.5787401574803149, "obj2": 0.24933940926885892}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( MDR / ACS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3484251968503937, "obj2": 0.5184115258017564}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) + ( ( PN * CRS ) / Max( DDR,( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( MUM / RCSe ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe * MUR ) ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7506882460386969}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.484251968503937, "obj2": 0.31770265682721843}, {"determining": "( ( CRS + ARS ) + ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( PN / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - Max( DS,DS ) )", "obj1": 0.19291338582677164, "obj2": 0.6479319600278931}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),ACS ) ) )", "choosing": "( ( MUM / RCSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.6535433070866141, "obj2": 0.20470618725131448}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS + MUC ) - ( MUM * MUM ) ) ) ) ) / RRSe )", "obj1": 0.18503937007874016, "obj2": 0.686736471522522}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Min( DDR ,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / MUC ) )", "obj1": 0.7165354330708661, "obj2": 0.17374426830402323}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6424676107354008}, {"determining": "( Max( ARS,BR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - Max( Max( Min( MUM ,RMSe ),DS ),( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 0.6811023622047244, "obj2": 0.18934467094571916}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5759464375542127}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,( CS - CS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5060585049862968}, {"determining": "( Max( DDR,Min( ( Max( ACS,Max( DDR,CRS ) ) / CRS ) ,( Const + DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( MUC / RCSe )", "obj1": 0.7854330708661418, "obj2": 0.1446371888933227}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( ACS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( ( RMSe - MUC ),( RRSe / RRSe ) ) ,RCSe ) / RRSe )", "obj1": 0.6437007874015748, "obj2": 0.21537453913910215}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / RRSe )", "obj1": 0.6889763779527559, "obj2": 0.18601713752557159}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.7637795275590551, "obj2": 0.14842532286646137}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6273111698983314}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5467593790638332}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( Max( ( PN - ( DDR / FirstVNF_RAM_Server ) ),( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( MUM + DS ) - ( MLU - MUM ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / ( ( MUR / RRSe ) / Max( MUM,MUR ) ) ),( RRSe / MUR ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7673836485633113}, {"determining": "Max( ( Const + ( MDR / ACS ) ),Max( Min( FirstVNF_Mem ,( RRS / FirstVNF_CPU ) ),MDR ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.16141732283464566, "obj2": 0.7157372098714546}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5693157839355217}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( MDR / ACS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5367483764445857}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( RRS / FirstVNF_Mem ) ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MLU - DS ) / RRSe )", "obj1": 0.4311023622047244, "obj2": 0.4421173646983946}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.7699099434420847}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.8661417322834646, "obj2": 0.08016190105005416}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.6122047244094488, "obj2": 0.2312785356742249}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.4739568152439851}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Min( Min( RMSe ,( Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) / RRSe ) ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.5295275590551181, "obj2": 0.285843033187712}, {"determining": "( ( CRS + ARS ) + ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_RAM_Server / ACS ) ) ) - ( PN / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RRSe,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - Max( DS,DS ) )", "obj1": 0.17716535433070865, "obj2": 0.6986195039596301}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( BR ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.5324108357249665}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + MUC ) - Max( DS,MUC ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041418}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5542563441690276}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.5610236220472441, "obj2": 0.259177917977248}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( Const + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( MUC / RRSe )", "obj1": 0.9940944881889764, "obj2": 0.005028065797925416}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7480314960629921, "obj2": 0.15711803211165026}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5759464375542127}, {"determining": "( ( ACS - AMS ) * ( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( ( ( DS * MUC ) - ( MUM + MUM ) ) ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.41141732283464566, "obj2": 0.48209392843022647}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / BR )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.15551181102362205, "obj2": 0.7222563443982367}], "11": [{"determining": "( ( ( FirstVNF_Mem + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MLU + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RMSe ,DS ) * Max( MUR,MLU ) ) + Max( ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM * MUM ) ) ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - Min( CS ,CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8789138926556341}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8617564457443753}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + MUC ) - Max( DS,MUC ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041418}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) - ( Const + RRS ) ) - ( DDR / CRS ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RRSe ,DS ) * Max( MUR,CS ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.05163685542771715}, {"determining": "( Max( DDR,Min( Max( Max( FirstVNF_CPU,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / DS )", "obj1": 0.9921259842519685, "obj2": 0.008351330861502654}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.46653543307086615, "obj2": 0.3340226030647063}, {"determining": "( ( CRS + ARS ) + ( Max( ( ( ( PN * CRS ) / FirstVNF_CPU ) - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( PN / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.25393700787401574, "obj2": 0.6008389043083352}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.8661417322834646, "obj2": 0.08016190105005416}, {"determining": "( ( ACS - AMS ) * ( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( ( ( DS * MUC ) - ( MUM + MUM ) ) ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.41141732283464566, "obj2": 0.48209392843022647}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.568744953126999}, {"determining": "( ( CRS + ARS ) + ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( PN / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - Max( DS,DS ) )", "obj1": 0.19291338582677164, "obj2": 0.6479319600278931}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS + MUC ) - ( MUM * MUM ) ) ) ) ) / RRSe )", "obj1": 0.18503937007874016, "obj2": 0.686736471522522}, {"determining": "( Max( ( ACS - FirstVNF_Mem ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RMSe ,DS ) * Max( MUR,RRSe ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - Min( CS ,CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.8208661417322834, "obj2": 0.11805239102862057}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),ACS ) ) )", "choosing": "( ( MUM / RCSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.6535433070866141, "obj2": 0.20470618725131448}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( ACS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( ( RMSe - MUC ),( RRSe / RRSe ) ) ,RCSe ) / RRSe )", "obj1": 0.6437007874015748, "obj2": 0.21537453913910215}, {"determining": "( ( Max( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ),FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) ) * ( MDR / Max( FirstVNF_Mem,PN ) ) )", "choosing": "( ( MUM - DS ) / ( MUC - RRSe ) )", "obj1": 0.7992125984251969, "obj2": 0.13179825620642993}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( MDR / ACS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5367483764445857}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.6122047244094488, "obj2": 0.2312785356742249}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,( CS - CS ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5060585049862968}, {"determining": "( ( CRS + ARS ) + ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( PN / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - Max( DS,DS ) )", "obj1": 0.24015748031496062, "obj2": 0.6169483198607545}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6424676107354008}, {"determining": "( Max( ARS,BR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - Max( Max( Min( MUM ,RMSe ),DS ),( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 0.6811023622047244, "obj2": 0.18934467094571916}, {"determining": "( Max( DDR,Min( ( Max( ACS,Max( DDR,CRS ) ) / CRS ) ,( Const + DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( MUC / RCSe )", "obj1": 0.7854330708661418, "obj2": 0.1446371888933227}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * Max( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ),( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUR ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4120062559210867}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Min( DDR ,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.7165354330708661, "obj2": 0.17357916748370855}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.7637795275590551, "obj2": 0.14842532286646137}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( PN * BR ) + DDR ) + FirstVNF_Mem ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( ( MLU + CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) + Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7421674402448243}, {"determining": "( Max( ARS,Max( ( ( Min( MRS ,( FirstVNF_CPU / DDR ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),Min( Min( RMSe ,Min( RMSe ,RRSe ) ) ,( MLU - DS ) ) ) ) ) )", "obj1": 0.6161417322834646, "obj2": 0.230528943558499}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5467593790638332}, {"determining": "( FirstVNF_CPU / ( Max( ACS,Min( DDR ,CRS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7550773848528921}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.7699099434420847}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( Max( ( RRS - FirstVNF_RAM ),Max( DDR,Const ) ) / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.5570866141732284, "obj2": 0.26184988760228334}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.5063687874762844}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( MDR / ACS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3484251968503937, "obj2": 0.5184115258017564}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4120062559210867}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( RRS / FirstVNF_Mem ) ) / ( FirstVNF_CPU / DDR ) ) + Max( ARS,( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MLU - DS ) / Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / CS ) / ( ( CS * MUC ) - ( MUM * MUM ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.4483020231123871}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( Max( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ),( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,MUC ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( BR ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.5324108357249665}, {"determining": "( Max( ARS,Max( ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,MUM ) ) + Max( ( MLU - CS ),Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) ) ) ) )", "obj1": 0.5787401574803149, "obj2": 0.24933940926885892}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) + ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC * RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - Max( DS,DS ) )", "obj1": 0.8287401574803149, "obj2": 0.09790013097337404}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7480314960629921, "obj2": 0.15711803211165026}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7145669291338582, "obj2": 0.17471102379851636}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.484251968503937, "obj2": 0.31770265682721843}, {"determining": "( Max( ARS,Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2913786365733059}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.49606299212598426, "obj2": 0.29635557562515696}], "12": [{"determining": "( Max( DDR,Min( MRS ,PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( CS - MLU ) + Min( RRSe ,MLU ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RMSe ,DS ) * Max( MUR,MLU ) ) + Max( ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM * MUM ) ) ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - Min( CS ,CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + PN ) / ( FirstVNF_CPU / DDR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8777775244702047}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + MUC ) - Max( DS,MUC ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041418}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) - ( Const + RRS ) ) - ( DDR / CRS ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RRSe ,DS ) * Max( MUR,CS ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.05163685542771715}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8617564457443753}, {"determining": "( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) * ( MDR / ACS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( DS - MUC ) ) ,RCSe ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5974997777247566}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS + MUC ) - ( MUM * MUM ) ) ) ) ) / RRSe )", "obj1": 0.18503937007874016, "obj2": 0.686736471522522}, {"determining": "( Max( DDR,Min( Max( Max( FirstVNF_CPU,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( MUM / RRSe ) / ( MLU + ( ( RRSe - DS ) - RCSe ) ) )", "obj1": 0.9881889763779528, "obj2": 0.013096455014415857}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.07747259452307814}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( RRS / FirstVNF_Mem ) ) / ( FirstVNF_CPU / DDR ) ) + Max( ARS,( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MLU - DS ) / Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / CS ) / ( ( CS * MUC ) - ( MUM * MUM ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.4483020231123871}, {"determining": "( Max( ARS,BR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - Max( Max( Min( MUM ,RMSe ),DS ),( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 0.6811023622047244, "obj2": 0.18934467094571916}, {"determining": "( ( CRS + ( ( CRS + ARS ) + ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( PN / FirstVNF_RAM_Server ) ) ) ) + ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( AMS / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - Min( ( RMSe / ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7105732407930061}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * Max( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ),( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUR ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4120062559210867}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( PN * BR ) + DDR ) + FirstVNF_Mem ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( ( MLU + CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) + Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7421674402448243}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.568744953126999}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( Max( ( RRS - FirstVNF_RAM ),Max( DDR,Const ) ) / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( DDR / ( CRS + ARS ) ) )", "choosing": "Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.23622047244094488, "obj2": 0.6169014202657062}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) + RMSe ) * ( DS / Max( MLU,( CS - CS ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.4627374225731562}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( Max( DDR,Min( ( Max( ACS,Max( DDR,CRS ) ) / CRS ) ,( Const + DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( MUC / RCSe )", "obj1": 0.7854330708661418, "obj2": 0.1446371888933227}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "Min( ( RMSe * ( ( Max( Min( RMSe ,DS ),Max( MUR,RRSe ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - Min( CS ,CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.3937007874015748, "obj2": 0.4884168678149566}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( MDR / Max( ( ( Min( MRS ,( ( PN * CRS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) ,RCSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.48034192124005487}, {"determining": "( Max( ARS,Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ACS * ( RRS / FirstVNF_Mem ) ) ),PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) + Max( ( MLU - CS ),Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) ) ) ) )", "obj1": 0.5905511811023622, "obj2": 0.24420865230427194}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7145669291338582, "obj2": 0.17471102379851636}, {"determining": "( Max( ARS,Max( ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,MUM ) ) + Max( ( MLU - CS ),Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) ) ) ) )", "obj1": 0.5787401574803149, "obj2": 0.24933940926885892}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4120062559210867}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( Max( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ),( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,MUC ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4507874015748031, "obj2": 0.3600186472898068}, {"determining": "( ( ACS - AMS ) * ( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( Min( ( ( DS * MUC ) - ( MUM + MUM ) ) ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) / RRSe )", "obj1": 0.7637795275590551, "obj2": 0.14840325919453873}, {"determining": "( ( Max( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ),FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) ) * ( MDR / Max( FirstVNF_Mem,PN ) ) )", "choosing": "( ( MUM - DS ) / ( MUC - RRSe ) )", "obj1": 0.7992125984251969, "obj2": 0.13179825620642993}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.20366686776303006}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( ACS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( ( RMSe - MUC ),( RRSe / RRSe ) ) ,RCSe ) / RRSe )", "obj1": 0.6437007874015748, "obj2": 0.21537453913910215}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) + ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC * RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - Max( DS,DS ) )", "obj1": 0.8287401574803149, "obj2": 0.09790013097337404}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( ACS - FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( Min( RMSe ,DS ) * Max( MUR,RRSe ) ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5657825091843779}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.16929133858267717, "obj2": 0.7072331576606913}, {"determining": "( ( CRS + ARS ) + ( Max( ( ( ( PN * CRS ) / FirstVNF_CPU ) - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( PN / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.6484446276509022}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.6732283464566929, "obj2": 0.19573163440714775}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,Min( RMSe ,RRSe ) ) / RRSe )", "obj1": 0.7421259842519685, "obj2": 0.15753862498138407}, {"determining": "( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / MUR ) / ( DS - RMSe ) ) ) )", "obj1": 0.46653543307086615, "obj2": 0.3340226030647063}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( BR ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.5324108357249665}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5467593790638332}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + RMSe ) * ( DS / Max( MLU,Max( CS,CS ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.5128184026013145}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( DDR,FirstVNF_CPU ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( MLU + MUC ) / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.718503937007874, "obj2": 0.17220816247943538}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( MDR / ACS ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - Max( DS,DS ) )", "obj1": 0.22440944881889763, "obj2": 0.6315147224451854}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.7699099434420847}, {"determining": "( Max( ( ACS - FirstVNF_Mem ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RMSe ,DS ) * Max( MUR,RRSe ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - Min( CS ,CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.8208661417322834, "obj2": 0.11805239102862057}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( MDR / ACS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3484251968503937, "obj2": 0.5184115258017564}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.6122047244094488, "obj2": 0.2312785356742249}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( Min( Const ,FirstVNF_CPU ) * FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) + Max( ( PN * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU * RCSe ),( RRSe * MUR ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7647653540181049}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.5570866141732284, "obj2": 0.26184988760228334}], "13": [{"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( RRS / FirstVNF_Mem ) ) / ( FirstVNF_CPU / DDR ) ) + ( ARS * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "Min( RRSe ,Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,Min( MRS ,PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( CS - MLU ) + Min( RRSe ,MLU ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + PN ) / ( FirstVNF_CPU / DDR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8777775244702047}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( PN * BR ) + DDR ) + FirstVNF_Mem ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( ( MLU + CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) + Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7421674402448243}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) / ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.6122047244094488, "obj2": 0.22636879836143745}, {"determining": "( Max( ( ACS - ( MDR / Max( FirstVNF_Mem_Server,PN ) ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( DS,DS ) )", "obj1": 0.32677165354330706, "obj2": 0.5189719450211917}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29635557562515696}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU * RCSe ),( RRSe * MUR ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.09167042774503947}, {"determining": "( Max( ACS,FirstVNF_Mem ) - RRS )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) ,RCSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8520082710967741}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( Min( Const ,FirstVNF_CPU ) * FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) + Max( ( PN * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU * RCSe ),( RRSe * MUR ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7647653540181049}, {"determining": "( ( CRS + ARS ) + ( Max( ( ( ( PN * CRS ) / FirstVNF_CPU ) - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( PN / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.6484446276509022}, {"determining": "( Max( ARS,BR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - Max( Max( Min( MUM ,RMSe ),DS ),( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 0.6811023622047244, "obj2": 0.18934467094571916}, {"determining": "( Max( DDR,Min( Max( Max( FirstVNF_CPU,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( MUM / RRSe ) / ( MLU + ( ( RRSe - DS ) - RCSe ) ) )", "obj1": 0.9881889763779528, "obj2": 0.013096455014415857}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) - ( Const + RRS ) ) - ( DDR / CRS ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RRSe ,DS ) * Max( MUR,CS ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.05163685542771715}, {"determining": "( Max( ARS,Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ACS * ( RRS / FirstVNF_Mem ) ) ),PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) + Max( ( MLU - CS ),Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) ) ) ) )", "obj1": 0.5905511811023622, "obj2": 0.24420865230427194}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( Max( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ),( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RRSe / RRSe )", "obj1": 0.49803149606299213, "obj2": 0.2943267069043659}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.46653543307086615, "obj2": 0.3340226030647063}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * Max( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ),( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUR ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4120062559210867}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7145669291338582, "obj2": 0.17471102379851636}, {"determining": "( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / MUR ) / ( DS - RMSe ) ) ) )", "obj1": 0.46653543307086615, "obj2": 0.3340226030647063}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + MUC ) - Max( DS,MUC ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041418}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.07747259452307814}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( DDR / ( CRS + ARS ) ) )", "choosing": "Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.24015748031496062, "obj2": 0.6066958912885938}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( Const ,FirstVNF_CPU ) * FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ),PN ) ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RMSe ,DS ) * Max( MUR,RRSe ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - Min( CS ,CS ) ) ) ) ,Max( MLU,Max( ( MLU * RCSe ),( RRSe * MUR ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.47705685477914733}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( RRS / FirstVNF_Mem ) ) / ( FirstVNF_CPU / DDR ) ) + Max( ARS,( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MLU - DS ) / Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / CS ) / ( ( CS * MUC ) - ( MUM * MUM ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.4483020231123871}, {"determining": "( Max( ARS,Max( ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,MUM ) ) + Max( ( MLU - CS ),Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) ) ) ) )", "obj1": 0.5787401574803149, "obj2": 0.24933940926885892}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS + MUC ) - ( MUM * MUM ) ) ) ) ) / RRSe )", "obj1": 0.18503937007874016, "obj2": 0.686736471522522}, {"determining": "( ( FirstVNF_Mem - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( MDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Max( MUR,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4120062559210867}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5830730716954401}, {"determining": "( Max( ( Max( ( ACS - FirstVNF_Mem ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RMSe ,DS ) * Max( MUR,RRSe ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - Min( CS ,CS ) ) ) ) ,Max( MLU,MUR ) )", "obj1": 0.8858267716535433, "obj2": 0.06643763958329062}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( MDR / Max( ( ( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( RRSe + ( ( RRSe - ( MUR + DS ) ) - RCSe ) ) ,RCSe ) ) ) )", "obj1": 0.39173228346456695, "obj2": 0.4968562706517864}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5467593790638332}, {"determining": "( ( Max( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ),FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) ) * ( MDR / Max( FirstVNF_Mem,PN ) ) )", "choosing": "( ( MUM - DS ) / ( MUC - RRSe ) )", "obj1": 0.7992125984251969, "obj2": 0.13179825620642993}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) - Max( MUR,RCSe ) ) + Max( ( MLU - CS ),Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.03822612443041275}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( ACS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( ( RMSe - MUC ),( RRSe / RRSe ) ) ,RCSe ) / RRSe )", "obj1": 0.6437007874015748, "obj2": 0.21537453913910215}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.7699099434420847}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) + RMSe ) * ( DS / Max( MLU,( CS - CS ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.4627374225731562}, {"determining": "( ( CRS + ( ( CRS + ARS ) + ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( PN / FirstVNF_RAM_Server ) ) ) ) + FirstVNF_RAM_Server )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,Max( ( DS - MUC ),( RRSe / MUM ) ) ) ) - Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7105732407930061}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5593293047893607}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5467593790638332}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.5570866141732284, "obj2": 0.26184988760228334}, {"determining": "( ( FirstVNF_CPU / DDR ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( DS + MUC ) ) / RRSe )", "obj1": 0.1732283464566929, "obj2": 0.6971525353336518}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,Min( RMSe ,RRSe ) ) / RRSe )", "obj1": 0.7421259842519685, "obj2": 0.15753862498138407}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.5570866141732284, "obj2": 0.26184988760228334}, {"determining": "( Max( ( ACS - Max( ACS,Max( DDR,CRS ) ) ),( Const + RRS ) ) - ( MRS / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / RRSe ) - Max( DS,DS ) )", "obj1": 0.8169291338582677, "obj2": 0.1183462579554686}], "14": [{"determining": "( Max( DDR,( MRS + PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( ( DS + MUC ) - ( Max( Min( MUM ,RMSe ),DS ) / ( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + PN ) / ( FirstVNF_CPU / DDR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8777775244702047}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( RRS / FirstVNF_Mem ) ) / ( FirstVNF_CPU / DDR ) ) + ( ARS * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "Min( RRSe ,Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( PN * BR ) + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - DS ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8777775244702047}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + MUC ) - Max( DS,MUC ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041415}, {"determining": "( Max( MDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUR ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 0.7696850393700787, "obj2": 0.1475022591917246}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,Min( RMSe ,RRSe ) ) / RRSe )", "obj1": 0.7421259842519685, "obj2": 0.15753862498138407}, {"determining": "( Max( Max( ACS,( MDR / Max( FirstVNF_CPU_Server,PN ) ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) * ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( DS,DS ) )", "obj1": 0.32677165354330706, "obj2": 0.5189719450211917}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) / ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.6122047244094488, "obj2": 0.22636879836143745}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( Min( MRS ,PN ) / ACS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( DS - RMSe ) ) ) ) ) / MUR )", "obj1": 0.38188976377952755, "obj2": 0.5167892448224035}, {"determining": "( ( Max( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ),FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) ) * ( MDR / Max( FirstVNF_Mem,PN ) ) )", "choosing": "( ( MUM - DS ) / ( MUC - RRSe ) )", "obj1": 0.7992125984251969, "obj2": 0.13179825620642993}, {"determining": "( Max( ARS,BR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - Max( Max( Min( MUM ,RMSe ),DS ),( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 0.6811023622047244, "obj2": 0.18934467094571916}, {"determining": "( Max( DDR,Min( Max( Max( FirstVNF_CPU,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( MUC / RRSe ) - Max( DS,DS ) )", "obj1": 0.984251968503937, "obj2": 0.020689071697213138}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS + MUC ) - ( MUM * MUM ) ) ) ) ) / RRSe )", "obj1": 0.18503937007874016, "obj2": 0.686736471522522}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( RRS / FirstVNF_Mem ) ) / ( FirstVNF_CPU / DDR ) ) + Max( ARS,( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MLU - DS ) / Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / CS ) / ( ( CS * MUC ) - ( MUM * MUM ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.4483020231123871}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU * RCSe ),( RRSe * MUR ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.09167042774503947}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( DDR / ( CRS + ARS ) ) )", "choosing": "Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.24015748031496062, "obj2": 0.6066958912885938}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( ACS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( ( RMSe - MUC ),( RRSe / RRSe ) ) ,RCSe ) / RRSe )", "obj1": 0.6437007874015748, "obj2": 0.21537453913910215}, {"determining": "( Max( ACS,FirstVNF_Mem ) * ( AMS / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( ( MUR * MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),MUR ) ,RCSe ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.623546995769169}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM / PN ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( MUC / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5460213747736087}, {"determining": "( ( CRS + ARS ) + ( Max( ( ( ( PN * CRS ) / FirstVNF_CPU ) - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( PN / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.6484446276509022}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) - ( Const + RRS ) ) - ( DDR / CRS ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RRSe ,DS ) * Max( MUR,CS ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.05163685542771715}, {"determining": "( Max( ( ACS - Max( ACS,Max( DDR,CRS ) ) ),( Const + RRS ) ) - ( MRS / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / RRSe ) - Max( DS,DS ) )", "obj1": 0.8169291338582677, "obj2": 0.1183462579554686}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * Max( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ),( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUR ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4120062559210867}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.07747259452307814}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) + Max( DDR,Min( MRS ,AMS ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) - ( ( MUR - DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) ) ) ,Max( MLU,RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.21653543307086615, "obj2": 0.6422485296181971}, {"determining": "( ( ACS - AMS ) * ( ( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( DS + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2905333332625235}, {"determining": "( ( FirstVNF_Mem - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( MDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Max( MUR,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4120062559210867}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7145669291338582, "obj2": 0.17471102379851636}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.45866141732283466, "obj2": 0.3524767073217679}, {"determining": "( Max( ( Max( ( ACS - FirstVNF_Mem ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RMSe ,DS ) * Max( MUR,RRSe ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - Min( CS ,CS ) ) ) ) ,Max( MLU,MUR ) )", "obj1": 0.8858267716535433, "obj2": 0.06643763958329062}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.47834645669291337, "obj2": 0.3293115301345703}, {"determining": "( Max( ARS,Max( ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,MUM ) ) + Max( ( MLU - CS ),Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.19966312207414308}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( Const ,FirstVNF_CPU ) * FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ),PN ) ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RMSe ,DS ) * Max( MUR,RRSe ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - Min( CS ,CS ) ) ) ) ,Max( MLU,Max( ( MLU * RCSe ),( RRSe * MUR ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.47705685477914733}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7145669291338582, "obj2": 0.17471102379851636}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.7699099434420847}, {"determining": "( ( CRS + ( ( CRS + ARS ) + ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) - ( PN / ARS ) ) ) ) + FirstVNF_RAM_Server )", "choosing": "( Min( ( RMSe * ( Min( ( MLU - CS ) ,Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,Max( ( DS - MUC ),( RRSe / MUM ) ) ) ) - Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7105732407930061}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( PN * BR ) + DDR ) + FirstVNF_Mem ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( ( MLU + CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) + Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7421674402448243}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.4881889763779528, "obj2": 0.30940665255351}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.5570866141732284, "obj2": 0.26184988760228334}, {"determining": "( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( Max( DDR,Min( Max( Max( FirstVNF_CPU,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( MUM / RRSe ) / ( MLU + ( ( RRSe - DS ) - RCSe ) ) )", "obj1": 0.9881889763779528, "obj2": 0.013096455014415857}, {"determining": "( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR )", "choosing": "( ( MUC - ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC / Min( Min( ( RMSe + RRSe ) ,RCSe ) ,RRSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8650918610517753}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.5570866141732284, "obj2": 0.26184988760228334}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_CPU_Server / Max( ( Max( ( ARS - ( ( PN * BR ) + FirstVNF_RAM_Server ) ),( Const + FirstVNF_Mem ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( RMSe * Max( ( CS - MUC ),Min( CS ,DS ) ) ) + RMSe ) * ( DS / Max( MLU,( CS - CS ) ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4864630559580624}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.20366686776303006}, {"determining": "( Max( ( ARS + FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - DS ) / ( MUC + RRSe ) )", "obj1": 0.8287401574803149, "obj2": 0.10408627014477066}], "15": [{"determining": "( Min( MRS ,PN ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( MRS + PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( ( DS + MUC ) - ( Max( Min( MUM ,RMSe ),DS ) / ( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,DS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( FirstVNF_CPU / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4653867325164492}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( Max( ARS,FirstVNF_Mem ) - Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / ( RCSe + MUM ) ) / ( DS - RMSe ) ) ) )", "obj1": 0.3641732283464567, "obj2": 0.5066520028959689}, {"determining": "( Max( ARS,BR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - Max( Max( Min( MUM ,RMSe ),DS ),( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 0.6811023622047244, "obj2": 0.18934467094571916}, {"determining": "( Max( DDR,Min( Max( Max( FirstVNF_CPU,( DDR - CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( CS / RRSe ) - Max( DS,DS ) )", "obj1": 0.984251968503937, "obj2": 0.020078310778809904}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR )", "choosing": "( ( MUC - ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC / Min( Min( ( RMSe + RRSe ) ,RCSe ) ,RRSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8650918610517753}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.6122047244094488, "obj2": 0.22636879836143745}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.45866141732283466, "obj2": 0.3524767073217679}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) / ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.6122047244094488, "obj2": 0.22636879836143745}, {"determining": "( Max( MDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUR ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 0.7696850393700787, "obj2": 0.1475022591917246}, {"determining": "( Max( ( ACS - Max( ACS,Max( DDR,CRS ) ) ),( Const + RRS ) ) - ( MRS / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / RRSe ) - Max( DS,DS ) )", "obj1": 0.8169291338582677, "obj2": 0.1183462579554686}, {"determining": "( Max( Max( ACS,( MDR / Max( FirstVNF_CPU_Server,PN ) ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) * ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( DS,DS ) )", "obj1": 0.31299212598425197, "obj2": 0.5286498645549481}, {"determining": "( ( ACS - AMS ) * ( ( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.5570866141732284, "obj2": 0.26184988760228334}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU * RCSe ),( RRSe * MUR ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.09167042774503947}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + MUC ) - Max( DS,MUC ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041415}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.07747259452307814}, {"determining": "( Max( ( Max( ( ( MDR / Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + PN ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe * ( ( DS * MUC ) + ( Max( MUC,RMSe ) - Min( CS ,CS ) ) ) ) ,Max( MLU,MUR ) )", "obj1": 0.9192913385826772, "obj2": 0.03687272666512216}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) - ( Const + RRS ) ) - ( DDR / CRS ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RRSe ,DS ) * Max( MUR,CS ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.05163685542771715}, {"determining": "( ( ACS - BR ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( PN * CRS ) ) / Min( FirstVNF_CPU ,DDR ) ) + Max( ARS,( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MLU - DS ) / Min( ( RMSe * RRSe ) ,( ( DS + MUC ) - ( ( ( RRSe + ( ( MLU - DS ) - RCSe ) ) / CS ) / ( ( CS * MUC ) - ( MUM * MUM ) ) ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.49183237208370156}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( MUC / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( DS - CS ) )", "obj1": 0.25984251968503935, "obj2": 0.5894817814862218}, {"determining": "( Max( ( ARS + FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - DS ) / ( MUC + RRSe ) )", "obj1": 0.8287401574803149, "obj2": 0.10408627014477066}, {"determining": "( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,DS ) ) - Max( DS,DS ) )", "obj1": 0.32677165354330706, "obj2": 0.5189719450211917}, {"determining": "( Max( ARS,Max( ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,MUM ) ) + Max( ( MLU - CS ),Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.19966312207414308}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS + MUC ) - ( MUM * MUM ) ) ) ) ) / RRSe )", "obj1": 0.18503937007874016, "obj2": 0.686736471522522}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( PN / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6621684926458525}, {"determining": "( FirstVNF_CPU / ( ( ( ( ARS + FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7241807261805033}, {"determining": "( ( Max( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ),FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) ) * ( MDR / Max( FirstVNF_Mem,PN ) ) )", "choosing": "( ( MUM - DS ) / ( MUC - RRSe ) )", "obj1": 0.7992125984251969, "obj2": 0.13179825620642993}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.288564839114544}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_Mem_Server,( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,Min( RMSe ,RRSe ) ) / RRSe )", "obj1": 0.7421259842519685, "obj2": 0.15753862498138407}, {"determining": "( ACS - ( BR / ACS ) )", "choosing": "( ( MUM / MUM ) / ( Min( MUR ,( RCSe - MUM ) ) / RCSe ) )", "obj1": 0.7322834645669292, "obj2": 0.17173857813998097}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( Const ,RRS ) * FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ),PN ) ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RMSe ,DS ) * Max( MUR,RRSe ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - Min( CS ,CS ) ) ) ) ,Max( MLU,Max( ( MLU * RMSe ),( RRSe * MUR ) ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4867117026564715}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / RRSe )", "obj1": 0.5570866141732284, "obj2": 0.26184988760228334}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.47834645669291337, "obj2": 0.3293115301345703}, {"determining": "( ( CRS + ARS ) + ( DDR + Min( MRS ,PN ) ) )", "choosing": "( Min( ( MUM * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.6484446276509022}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) + Max( DDR,Min( MRS ,AMS ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) - ( ( MUR - DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) ) ) ,Max( MLU,RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.21653543307086615, "obj2": 0.6422485296181971}, {"determining": "( ( FirstVNF_Mem - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( MDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Max( MUR,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5562902587720201}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) + ARS ) / Max( FirstVNF_RAM,ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) - ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.763306334761334}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( ACS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( ( RMSe - MUC ),( RRSe / RRSe ) ) ,RCSe ) / RRSe )", "obj1": 0.6437007874015748, "obj2": 0.21537453913910215}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) - ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( RMSe - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.568744953126999}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( PN * BR ) + DDR ) + FirstVNF_Mem ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( ( MLU + CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) + Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7370101956100357}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.7699099434420847}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7145669291338582, "obj2": 0.17471102379851636}], "16": [{"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),( Const + RRS ) ) - Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( CS,( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,DS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( Min( MRS ,PN ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - DS ) - RCSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU * RCSe ),( RRSe * MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.01588779703365563}, {"determining": "( ( FirstVNF_Mem - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( MDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Max( MUR,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5562902587720201}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( FirstVNF_CPU / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4653867325164492}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( ACS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( ( RMSe - MUC ),( RRSe / RRSe ) ) ,RCSe ) / RRSe )", "obj1": 0.6437007874015748, "obj2": 0.21537453913910215}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( MUC / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( DS - CS ) )", "obj1": 0.25984251968503935, "obj2": 0.5894817814862218}, {"determining": "( Max( ( Max( ( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) - FirstVNF_Mem ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ARS / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( ( MLU + CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( RMSe / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.1306378304229875}, {"determining": "( Max( ARS,BR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - Max( Max( Min( MUM ,RMSe ),DS ),( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 0.6811023622047244, "obj2": 0.18934467094571916}, {"determining": "( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,DS ) ) - Max( DS,DS ) )", "obj1": 0.32677165354330706, "obj2": 0.5189719450211917}, {"determining": "( Max( Max( ACS,( MDR / Max( FirstVNF_CPU_Server,PN ) ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) * ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( DS,DS ) )", "obj1": 0.31299212598425197, "obj2": 0.5286498645549481}, {"determining": "( ( ACS * AMS ) * ( MDR / Max( ( ( Max( MDR,FirstVNF_Mem ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / Min( MUM ,CS ) ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.5570866141732284, "obj2": 0.25979217043547687}, {"determining": "( ( ACS - PN ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe - DS ) - RCSe ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6152529601995698}, {"determining": "( Max( MDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUR ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 0.7696850393700787, "obj2": 0.1475022591917246}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RRSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7145669291338582, "obj2": 0.17471102379851636}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) - ( Const + RRS ) ) - ( DDR / CRS ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RRSe ,DS ) * Max( MUR,CS ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) ) ,Max( MLU,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.05163685542771715}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( Max( ARS,Max( ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,MUM ) ) + Max( ( MLU - CS ),Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.19966312207414308}, {"determining": "( Max( ( ACS - Max( ACS,Max( DDR,CRS ) ) ),( Const + RRS ) ) - ( MRS / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / RRSe ) - Max( DS,DS ) )", "obj1": 0.8169291338582677, "obj2": 0.1183462579554686}, {"determining": "( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR )", "choosing": "( ( MUC - ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC / Min( Min( ( RMSe + RRSe ) ,RCSe ) ,RRSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8650918610517753}, {"determining": "( Max( ARS,Max( ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / ACS ) ) * ( PN * ( RRS / FirstVNF_Mem ) ) ),PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,MUM ) ) + Max( ( MLU - CS ),Min( Min( RMSe ,Max( ( DS - MUC ),( MUC / MUM ) ) ) ,( MLU - DS ) ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.259433773604708}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "( Min( ( MUM * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.49803149606299213, "obj2": 0.2935714711667018}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5025859060354653}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( CRS / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * CS ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU * RCSe ),( RRSe * MUR ) ) ) )", "obj1": 0.8405511811023622, "obj2": 0.08984600296339494}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( DS / DS )", "obj1": 0.17913385826771652, "obj2": 0.6994069170977896}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.07747259452307814}, {"determining": "( Max( Max( ACS,FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.8779527559055118, "obj2": 0.07814401784713461}, {"determining": "( FirstVNF_CPU / ( ( ( ( ARS + FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( CS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7131101945793031}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const + RRS ) ) - ( DDR / BR ) )", "choosing": "( ( DS / MUC ) - Max( MLU,RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041415}, {"determining": "( ( ACS - BR ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RRSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4653867325164492}, {"determining": "( Max( ( ARS + FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - DS ) / ( MUC + RRSe ) )", "obj1": 0.8287401574803149, "obj2": 0.10408627014477066}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS + MUC ) - ( MUM * MUM ) ) ) ) ) / RRSe )", "obj1": 0.18503937007874016, "obj2": 0.686736471522522}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.45866141732283466, "obj2": 0.3524767073217679}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( PN / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6621684926458525}, {"determining": "( ( ACS - BR ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( PN * CRS ) ) / Min( FirstVNF_CPU ,DDR ) ) + Max( ARS,( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MLU - DS ) / Min( ( RMSe * RRSe ) ,( ( DS + MUC ) - ( ( ( RRSe + ( ( MLU - DS ) - RCSe ) ) / CS ) / ( ( CS * MUC ) - ( MUM * MUM ) ) ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.49183237208370156}, {"determining": "( ( Min( MRS ,PN ) / ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.47244094488188976, "obj2": 0.3438021647957993}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.6122047244094488, "obj2": 0.22636879836143745}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * FirstVNF_RAM ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( Max( ( MLU + CS ),( MLU + MUC ) ) - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.568744953126999}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.47834645669291337, "obj2": 0.3293115301345703}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( Const ,RRS ) * FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ),PN ) ) )", "choosing": "Min( ( RMSe * ( ( ( Min( RMSe ,DS ) * Max( MUR,RRSe ) ) + Max( ( DS - CS ),( RMSe - RRSe ) ) ) + ( Max( MUC,RMSe ) - Min( CS ,CS ) ) ) ) ,Max( MLU,Max( ( MLU * RMSe ),( RRSe * MUR ) ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4867117026564715}, {"determining": "( ACS - ( BR / ACS ) )", "choosing": "( ( MUM / MUM ) / ( Min( MUR ,( RCSe - MUM ) ) / RCSe ) )", "obj1": 0.7322834645669292, "obj2": 0.17173857813998097}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( AMS,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RCSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7480314960629921, "obj2": 0.15711803211165026}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}], "17": [{"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,DS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( DDR / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( MUC ,Min( MLU ,DS ) ) / RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),( Const + RRS ) ) - Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( CS,( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( CS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const + RRS ) ) - ( DDR / BR ) )", "choosing": "( ( DS / MUC ) - Max( MLU,RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041415}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5025859060354653}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( FirstVNF_CPU / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4653867325164492}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5827731122445564}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( Max( ARS,BR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - Max( Max( Min( MUM ,RMSe ),DS ),( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 0.6811023622047244, "obj2": 0.18934467094571916}, {"determining": "( ( ACS * AMS ) * ( MDR / Max( ( ( Max( MDR,FirstVNF_Mem ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / Min( MUM ,CS ) ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.5570866141732284, "obj2": 0.25979217043547687}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( RRSe - DS ) - RCSe ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6424676107354008}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.6122047244094488, "obj2": 0.22636879836143745}, {"determining": "( ( ACS - FirstVNF_CPU ) * ( MDR / Max( Max( ( ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ),PN ),PN ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( DS + MUC ) - ( ( Max( MUM,RMSe ) / CS ) / ( ( ( DS / DS ) * ( MUC * RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.7125984251968503, "obj2": 0.17466456971308658}, {"determining": "( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR )", "choosing": "( ( MUC - ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC / Min( Min( ( RMSe + RRSe ) ,RCSe ) ,RRSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8650918610517753}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( PN / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6621684926458525}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( FirstVNF_CPU / ( ( ( ( ARS + FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6337828107942899}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( AMS,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RCSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7480314960629921, "obj2": 0.15711803211165026}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( CS - MUC ) ,( Max( ( MLU + CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04534193920983543}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) - ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RCSe - DS ) / ( ( Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) / RRSe ) - RRSe ) )", "obj1": 0.968503937007874, "obj2": 0.021722932779023207}, {"determining": "( Max( ARS,Max( ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / ACS ) ) * ( PN * ( RRS / FirstVNF_Mem ) ) ),PN ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( ( CS + MUM ) / RMSe ) * ( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( MUM - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,MUM ) ) + Max( ( MLU - CS ),Min( Min( RMSe ,Max( ( DS - MUC ),( MUC / MUM ) ) ) ,( MLU - DS ) ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.259433773604708}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( ( MLU + CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( RMSe / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7673535647212218}, {"determining": "( ACS - ( BR / ACS ) )", "choosing": "( ( MUM / MUM ) / ( Min( MUR ,( RCSe - MUM ) ) / RCSe ) )", "obj1": 0.7322834645669292, "obj2": 0.17173857813998097}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( ( CS * MLU ) - ( RCSe + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - Max( DS,DS ) )", "obj1": 0.9015748031496063, "obj2": 0.04345436135573577}, {"determining": "( Max( Max( ACS,FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.8779527559055118, "obj2": 0.07814401784713461}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( ACS - BR ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( PN * CRS ) ) / Min( FirstVNF_CPU ,DDR ) ) + Max( ARS,( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MLU - DS ) / Min( ( RMSe * RRSe ) ,( ( DS + MUC ) - ( ( ( RRSe + ( ( MLU - DS ) - RCSe ) ) / CS ) / ( ( CS * MUC ) - ( MUM * MUM ) ) ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.49183237208370156}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( ACS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( ( RMSe - MUC ),( RRSe / RRSe ) ) ,RCSe ) / RRSe )", "obj1": 0.6437007874015748, "obj2": 0.21537453913910215}, {"determining": "( ( ACS - BR ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RRSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4653867325164492}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( ( ACS - PN ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe - DS ) - RCSe ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6152529601995698}, {"determining": "( Max( ( Max( ( ( MDR / Max( FirstVNF_Mem_Server,PN ) ) - FirstVNF_Mem ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( RRSe - DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU * RCSe ),( RRSe * MUR ) ) ) )", "obj1": 0.8405511811023622, "obj2": 0.08984600296339494}, {"determining": "( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,DS ) ) - Max( DS,DS ) )", "obj1": 0.32677165354330706, "obj2": 0.5189719450211917}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - DS ) - RCSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.984251968503937, "obj2": 0.009523831571352752}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( Max( MDR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUR ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 0.7696850393700787, "obj2": 0.1475022591917246}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( Const ,RRS ) * FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "( Min( ( MUM * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( Max( MUC,RMSe ) ,( CS - CS ) ) ) ) ,Max( MLU,RRSe ) ) - ( MLU + MUC ) )", "obj1": 0.49803149606299213, "obj2": 0.2935714711667018}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),( Const - RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,Max( MLU,DS ) ) / RCSe )", "obj1": 0.7992125984251969, "obj2": 0.12259388379736652}, {"determining": "( Max( ( ACS - Max( ACS,Max( DDR,CRS ) ) ),( Const + RRS ) ) - ( MRS / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / RRSe ) - Max( DS,DS ) )", "obj1": 0.8169291338582677, "obj2": 0.1183462579554686}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( Max( Max( ACS,( MDR / Max( FirstVNF_CPU_Server,PN ) ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) * ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( DS,DS ) )", "obj1": 0.8267716535433071, "obj2": 0.10049438366394717}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * FirstVNF_RAM ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( Max( ( MLU + CS ),( MLU + MUC ) ) - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.568744953126999}], "18": [{"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,DS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const - RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_RAM_Server ,ACS ) )", "choosing": "( Max( ( MUM / MLU ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / ( Min( MUR ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( MUC ,Min( MLU ,DS ) ) / RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) + MUM ) ) ) ) ) / RRSe )", "obj1": 0.4015748031496063, "obj2": 0.4647542971041254}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( DDR ,( AMS / FirstVNF_CPU ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( Min( MUM ,RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU / DDR ) * PN ),PN ) - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( ( CS * MLU ) - ( RCSe + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.8681102362204725, "obj2": 0.07025992955019002}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( Max( ARS,BR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - Max( Max( Min( MUM ,RMSe ),DS ),( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 0.6811023622047244, "obj2": 0.18934467094571916}, {"determining": "( ( ACS * AMS ) * ( MDR / Max( ( ( Max( MDR,FirstVNF_Mem ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / Min( MUM ,CS ) ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.5570866141732284, "obj2": 0.25979217043547687}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( PN / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6621684926458525}, {"determining": "( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,DS ) ) - Max( DS,DS ) )", "obj1": 0.32677165354330706, "obj2": 0.5189719450211917}, {"determining": "( ( ACS - FirstVNF_CPU ) * ( MDR / Max( Max( ( ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ),PN ),PN ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( DS + MUC ) - ( ( Max( MUM,RMSe ) / CS ) / ( ( ( DS / DS ) * ( MUC * RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.7125984251968503, "obj2": 0.17466456971308658}, {"determining": "( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR )", "choosing": "( ( MUC - ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC / Min( Min( ( RMSe + RRSe ) ,RCSe ) ,RRSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8650918610517753}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( FirstVNF_CPU / FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - ( DS * MUC ) ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5435811702384886}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( ACS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( ( RMSe - MUC ),( RRSe / RRSe ) ) ,RCSe ) / RRSe )", "obj1": 0.6437007874015748, "obj2": 0.21537453913910215}, {"determining": "( ( ACS - BR ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( PN * CRS ) ) / Min( FirstVNF_CPU ,DDR ) ) + Max( ARS,( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MLU - DS ) / Min( ( RMSe * RRSe ) ,( ( DS + MUC ) - ( ( ( RRSe + ( ( MLU - DS ) - RCSe ) ) / CS ) / ( ( CS * MUC ) - ( MUM * MUM ) ) ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.49183237208370156}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe )", "obj1": 0.6594488188976378, "obj2": 0.2062560245004524}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( CS - MUC ) ,Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.4966537009010596}, {"determining": "( Max( ARS,ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RCSe ) / DS ) / ( ( ( DS / DS ) * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.5826771653543307, "obj2": 0.24947740401618856}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( RRS / FirstVNF_RAM_Server ),PN ) ) )", "choosing": "( ( RMSe * ( ( RCSe + MUR ) + Max( MLU,RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5059135753885198}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( FirstVNF_CPU / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.552870278055537}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const + RRS ) ) - ( DDR / BR ) )", "choosing": "( ( DS / MUC ) - Max( MLU,RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041415}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.7952755905511811, "obj2": 0.12424376900585532}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ACS - ( BR / ACS ) )", "choosing": "( ( MUM / MUM ) / ( Min( MUR ,( RCSe - MUM ) ) / RCSe ) )", "obj1": 0.7322834645669292, "obj2": 0.17173857813998097}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * FirstVNF_RAM ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( Max( ( MLU + CS ),( MLU + MUC ) ) - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.29090976271015023}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( AMS,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RCSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7480314960629921, "obj2": 0.15711803211165026}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( RRSe - DS ) - RCSe ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6424676107354008}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.844488188976378, "obj2": 0.08655351131470253}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - DS ) - RCSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.9212598425196851, "obj2": 0.039211863294420855}, {"determining": "( ( ACS - BR ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RRSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6064417464624667}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.6122047244094488, "obj2": 0.22636879836143745}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) * ( Const + RRS ) ) - ( DDR / ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) + ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( DS,DS ) )", "obj1": 0.9606299212598425, "obj2": 0.021885785302822928}, {"determining": "( ( ACS - AMS ) * ( ARS / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( CS,( RRSe / MUM ) ) / RCSe ) ) ) )", "obj1": 0.3956692913385827, "obj2": 0.46594964871035355}, {"determining": "( ACS - Min( ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( FirstVNF_CPU / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ) + PN ) ) ,ACS ) )", "choosing": "( ( MUM / CS ) / ( Min( MUR ,( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) + MUM ) ) / RCSe ) )", "obj1": 0.18503937007874016, "obj2": 0.6942411582202392}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),Max( Max( ACS,Max( DDR,CRS ) ),CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5827731122445564}, {"determining": "( ( ACS - AMS ) * FirstVNF_RAM )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( Max( ( MLU + CS ),( MLU + MUC ) ) - MUC ),( RRSe / DS ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.568744953126999}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( Const ,RRS ) * FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - DS ) - RCSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.984251968503937, "obj2": 0.009523831571352752}, {"determining": "( Max( Min( ACS ,( PN / Max( FirstVNF_CPU_Server,( Const + RRS ) ) ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC + DS ) ) + ( Max( DS,MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.8267716535433071, "obj2": 0.10049438366394715}], "19": [{"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,DS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / BR ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( Max( ( MLU + CS ),( MLU + MUC ) ) - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const - RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_RAM_Server ,ACS ) )", "choosing": "( Max( ( MUM / MLU ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / ( Min( MUR ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_CPU / DDR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,Max( MUC,( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.7952755905511811, "obj2": 0.12424376900585532}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( AMS,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RCSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7480314960629921, "obj2": 0.15711803211165026}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) + MUM ) ) ) ) ) / RRSe )", "obj1": 0.4015748031496063, "obj2": 0.4647542971041254}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( Max( ARS,BR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - Max( Max( Min( MUM ,RMSe ),DS ),( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 0.6811023622047244, "obj2": 0.18934467094571916}, {"determining": "( Max( ( Max( ( ( MRS / DDR ) * PN ),PN ) - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( ( CS * MLU ) - ( RCSe + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - ( ( CS * MLU ) - ( RCSe + RCSe ) ) )", "obj1": 0.8996062992125984, "obj2": 0.04512292835876124}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( PN / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6621684926458525}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ( ACS - FirstVNF_CPU ) * ( MDR / Max( Max( ( ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ),PN ),PN ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( DS + MUC ) - ( ( Max( MUM,RMSe ) / CS ) / ( ( ( DS / DS ) * ( MUC * RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.7125984251968503, "obj2": 0.17466456971308658}, {"determining": "( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR )", "choosing": "( ( MUC - ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC / Min( Min( ( RMSe + RRSe ) ,RCSe ) ,RRSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8650918610517753}, {"determining": "( ( ACS - BR ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( PN * CRS ) ) / Min( FirstVNF_CPU ,DDR ) ) + Max( ARS,( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MLU - DS ) / Min( ( RMSe * RRSe ) ,( ( DS + MUC ) - ( ( ( RRSe + ( ( MLU - DS ) - RCSe ) ) / CS ) / ( ( CS * MUC ) - ( MUM * MUM ) ) ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.49183237208370156}, {"determining": "( ACS - Min( ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( FirstVNF_CPU / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ) + PN ) ) ,ACS ) )", "choosing": "( ( MUM / CS ) / ( Min( MUR ,( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) + MUM ) ) / RCSe ) )", "obj1": 0.18503937007874016, "obj2": 0.6942411582202392}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( CS - MUC ) ,Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.4966537009010596}, {"determining": "( Max( Min( ACS ,( PN / Max( FirstVNF_CPU_Server,( Const + RRS ) ) ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC + DS ) ) + ( Max( DS,MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.8267716535433071, "obj2": 0.10049438366394715}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( RRS / FirstVNF_RAM_Server ),PN ) ) )", "choosing": "( ( RMSe * ( ( RCSe + MUR ) + Max( MLU,RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5059135753885198}, {"determining": "( ( ( Max( ( ( ARS - FirstVNF_CPU_Server ) * ( Const + RRS ) ),( Const + RRS ) ) - MRS ) - ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC * RMSe ) ) + ( ( DS * MUC ) - ( ( CS - MLU ) - ( CS + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.8720472440944882, "obj2": 0.06752984933784373}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const + RRS ) ) - ( DDR / BR ) )", "choosing": "( ( DS / MUC ) - Max( MLU,RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041415}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe )", "obj1": 0.6594488188976378, "obj2": 0.2062560245004524}, {"determining": "( ACS - ( BR / ACS ) )", "choosing": "( ( MUM / MUM ) / ( Min( MUR ,( RCSe - MUM ) ) / RCSe ) )", "obj1": 0.7322834645669292, "obj2": 0.17173857813998097}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( RRS / FirstVNF_Mem ),PN ) ) )", "choosing": "( ( RMSe * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.599696920405065}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( ACS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( ( RMSe - MUC ),( RRSe / RRSe ) ) ,RCSe ) / RRSe )", "obj1": 0.6437007874015748, "obj2": 0.21537453913910215}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( DDR ,( AMS / FirstVNF_CPU ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( Min( MUM ,RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( ACS * AMS ) * ( MDR / Max( ( ( Max( MDR,FirstVNF_Mem ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / Min( MUM ,CS ) ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.5570866141732284, "obj2": 0.25979217043547687}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - DS ) - RCSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.984251968503937, "obj2": 0.009523831571352752}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,DS ) ) - Max( DS,DS ) )", "obj1": 0.3090551181102362, "obj2": 0.5252026100124322}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.6122047244094488, "obj2": 0.22636879836143745}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * FirstVNF_RAM ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / RRSe ) / ( Min( MUR ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.5511811023622047, "obj2": 0.26505123966596555}, {"determining": "( ( ACS - DDR ) * ( MDR / ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.07884537206101203}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( Max( ARS,ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RCSe ) / DS ) / ( ( ( DS / DS ) * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.5826771653543307, "obj2": 0.24947740401618856}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( MUR * MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6298396791272052}, {"determining": "( Max( ( ACS - ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - ( ( CS * MLU ) - ( RCSe + RCSe ) ) ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,DS ) ) - Max( DS,DS ) )", "obj1": 0.2106299212598425, "obj2": 0.6304868715704903}, {"determining": "( ( ACS - BR ) * ( MDR / Max( ( ( ( Min( FirstVNF_CPU_Server ,( PN * CRS ) ) / ( FirstVNF_CPU / DDR ) ) + Max( ARS,( RRS / FirstVNF_Mem ) ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( DS + MUC ) ) / ( ( ( CS * DS ) - ( RCSe + RCSe ) ) * Max( ( MUM / RRSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6224780085102867}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( FirstVNF_CPU / FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.49803149606299213, "obj2": 0.294462122871911}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( FirstVNF_CPU / ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / DDR ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUM ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - RRSe ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7346490391289162}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / PN ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RMSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) - Max( ( MUM / RCSe ),Min( Max( CS,( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3956692913385827, "obj2": 0.46594964871035355}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( Const ,RRS ) * FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * FirstVNF_RAM ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( Max( ( MLU + CS ),( MLU + MUC ) ) - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.29090976271015023}], "20": [{"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,DS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ACS - AMS ) - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / PN ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RMSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) - Max( ( MUM / RCSe ),Min( Max( CS,( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / BR ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( Max( ( MLU + CS ),( MLU + MUC ) ) - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_CPU / DDR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,Max( MUC,( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) + MUM ) ) ) ) ) / RRSe )", "obj1": 0.4015748031496063, "obj2": 0.4647542971041254}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - DS ) - RCSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.984251968503937, "obj2": 0.009523831571352752}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( PN / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6621684926458525}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const + RRS ) ) - ( DDR / BR ) )", "choosing": "( ( DS / MUC ) - Max( MLU,RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041415}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( Max( ARS,BR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - Max( Max( Min( MUM ,RMSe ),DS ),( ( DS * MUC ) - ( MUM * MUM ) ) ) ) ) / MUR )", "obj1": 0.6811023622047244, "obj2": 0.18934467094571916}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ( ACS - AMS ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( RRS / FirstVNF_Mem ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( Max( ( MUM / RCSe ),( MUR * MLU ) ) / ( ( ( DS / DS ) * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.765748031496063, "obj2": 0.14155024475568825}, {"determining": "( ( ACS - FirstVNF_CPU ) * ( MDR / Max( Max( ( ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ),PN ),PN ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( DS + MUC ) - ( ( Max( MUM,RMSe ) / CS ) / ( ( ( DS / DS ) * ( MUC * RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.7125984251968503, "obj2": 0.17466456971308658}, {"determining": "( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR )", "choosing": "( ( MUC - ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC / Min( Min( ( RMSe + RRSe ) ,RCSe ) ,RRSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8650918610517753}, {"determining": "( ( ACS - BR ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( PN * CRS ) ) / Min( FirstVNF_CPU ,DDR ) ) + Max( ARS,( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MLU - DS ) / Min( ( RMSe * RRSe ) ,( ( DS + MUC ) - ( ( ( RRSe + ( ( MLU - DS ) - RCSe ) ) / CS ) / ( ( CS * MUC ) - ( MUM * MUM ) ) ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.49183237208370156}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( AMS,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RCSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7480314960629921, "obj2": 0.15711803211165026}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( Max( Min( ACS ,( PN / Max( FirstVNF_CPU_Server,( Const + RRS ) ) ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC + DS ) ) + ( Max( DS,MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.8267716535433071, "obj2": 0.10049438366394715}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( CS - MUC ) ,Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.4966537009010596}, {"determining": "( Max( ( ACS - ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - ( ( CS * MLU ) - ( RCSe + RCSe ) ) ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,DS ) ) - Max( DS,DS ) )", "obj1": 0.2106299212598425, "obj2": 0.6304868715704903}, {"determining": "( ( ( Max( ( ( ARS - FirstVNF_CPU_Server ) * ( Const + RRS ) ),( Const + RRS ) ) - MRS ) - ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC * RMSe ) ) + ( ( DS * MUC ) - ( ( CS - MLU ) - ( CS + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.8720472440944882, "obj2": 0.06752984933784373}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.7952755905511811, "obj2": 0.12424376900585532}, {"determining": "( ( ACS - AMS ) * ( BR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5379266916021386}, {"determining": "( ACS - ( BR / ACS ) )", "choosing": "( ( MUM / MUM ) / ( Min( MUR ,( RCSe - MUM ) ) / RCSe ) )", "obj1": 0.7322834645669292, "obj2": 0.17173857813998097}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe )", "obj1": 0.6594488188976378, "obj2": 0.2062560245004524}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) + ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.05314046601262776}, {"determining": "( ( ACS - DDR ) * ( MDR / ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.07884537206101203}, {"determining": "( ( ACS - DDR ) * ( MDR / ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.7952755905511811, "obj2": 0.12424376900585532}, {"determining": "( Max( ( ACS - ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - ( ( CS * MLU ) - ( RCSe + RCSe ) ) ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,DS ) ) - Max( DS,DS ) )", "obj1": 0.2283464566929134, "obj2": 0.6231763726850634}, {"determining": "( Max( ( ACS - ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - ( ( CS * MLU ) - ( RCSe + RCSe ) ) ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,DS ) ) - Max( DS,DS ) )", "obj1": 0.2421259842519685, "obj2": 0.6109120998246773}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( ACS * AMS ) * ( MDR / Max( ( ( Max( MDR,FirstVNF_Mem ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / Min( MUM ,CS ) ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.5570866141732284, "obj2": 0.25979217043547687}, {"determining": "( ACS - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( MLU / RRSe ) / ( Min( MUR ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.18110236220472442, "obj2": 0.6929957220510128}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / PN ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RMSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) - Max( ( MUM / RCSe ),Min( Max( CS,( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3956692913385827, "obj2": 0.46594964871035355}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( PN ,( AMS / FirstVNF_CPU ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( Min( MUM ,RCSe ),Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,MUC ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.5243373433508848}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_Mem_Server / Max( ( ( Min( Const ,RRS ) * FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe )", "obj1": 0.639763779527559, "obj2": 0.22436525612733832}, {"determining": "( ACS - Min( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( FirstVNF_CPU / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ,ACS ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( ( CS * MLU ) - ( RCSe + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.265748031496063, "obj2": 0.5848669397102396}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( PN * BR ) + FirstVNF_RAM_Server ) + ( MDR / Max( ( RRS / FirstVNF_RAM_Server ),PN ) ) ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,DS ) - RCSe ) ) - ( MLU - ( ( MUM / RCSe ) - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7380537605793357}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.6122047244094488, "obj2": 0.22636879836143745}, {"determining": "( FirstVNF_CPU / ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / DDR ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUM ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - RRSe ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7346490391289162}, {"determining": "( Max( ARS,ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RCSe ) / DS ) / ( ( ( DS / DS ) * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.5826771653543307, "obj2": 0.24947740401618856}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + Min( MDR ,( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.4468503937007874, "obj2": 0.36381141842594833}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( RRSe - ( ( CS * MLU ) - ( RCSe + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.8464566929133859, "obj2": 0.09074361746179693}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,DS ) ) - Max( DS,DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5048363604004191}], "21": [{"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,DS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) - FirstVNF_CPU_Server ) + ( Const + RRS ) ) - ( DDR / MRS ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - Max( MUM,MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - AMS ) - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / PN ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU * RMSe ) ) ) / ( ( ( MUR * MLU ) - ( RCSe + RCSe ) ) - Max( ( MUM / RCSe ),Min( Max( CS,( RRSe / MUM ) ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,PN ) / Min( PN ,( AMS / FirstVNF_CPU ) ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) + MUM ) ) ) ) ) / RRSe )", "obj1": 0.4015748031496063, "obj2": 0.4647542971041254}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( ( ARS - ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.18557680781933025}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const + RRS ) ) - ( DDR / BR ) )", "choosing": "( ( DS / MUC ) - Max( MLU,RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041415}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - DS ) - RCSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.984251968503937, "obj2": 0.009523831571352752}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( ACS - AMS ) * ARS )", "choosing": "( Min( ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.2952755905511811, "obj2": 0.5738934312364683}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ACS - FirstVNF_CPU_Server ) + ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ),PN ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,RRSe ) / RRSe )", "obj1": 0.5570866141732284, "obj2": 0.25926891292558046}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( PN / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6621684926458525}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR )", "choosing": "( ( MUC - ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC / Min( Min( ( RMSe + RRSe ) ,RCSe ) ,RRSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8650918610517753}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( AMS,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RCSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7480314960629921, "obj2": 0.15711803211165026}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) * MUM ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( Max( ARS,ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RCSe ) / DS ) / ( ( ( DS / DS ) * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.5826771653543307, "obj2": 0.24947740401618856}, {"determining": "( ACS - Min( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( FirstVNF_CPU / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ,ACS ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( ( CS * MLU ) - ( RCSe + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.265748031496063, "obj2": 0.5848669397102396}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( CS - MUC ) ,Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.4966537009010596}, {"determining": "( ACS - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( MLU / RRSe ) / ( Min( MUR ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.18110236220472442, "obj2": 0.6929957220510128}, {"determining": "( ( Min( MRS ,PN ) + ( ( ACS * AMS ) - ( MDR / Max( ( ( Min( DDR ,PN ) / ( PN / ACS ) ) * ( ( RRS - ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) ) / MDR )", "choosing": "( Min( Min( RMSe ,( ( ( MLU - CS ) - Max( RCSe,RMSe ) ) + Min( ( DS * MUC ) ,Max( MUM,MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.20275590551181102, "obj2": 0.639686248730162}, {"determining": "( ( ACS - AMS ) * ( BR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - DS ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5379266916021386}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.7952755905511811, "obj2": 0.12424376900585532}, {"determining": "( ( ACS - AMS ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( RRS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,DS ) ) - Max( DS,DS ) )", "obj1": 0.5019685039370079, "obj2": 0.2922724177768954}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_RAM_Server / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / ( ( ( CS / MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.37189713364452476}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - DS ) ) / RRSe )", "obj1": 0.7952755905511811, "obj2": 0.12424376900585532}, {"determining": "( Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) - Min( DDR ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - DS ) - RCSe ) / ( Max( Min( RMSe ,RRSe ),RRSe ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.905511811023622, "obj2": 0.04400513147629364}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,DS ) ) - Max( DS,DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5048363604004191}, {"determining": "( ACS - ( BR / ACS ) )", "choosing": "( ( MUM / MUM ) / ( Min( MUR ,( RCSe - MUM ) ) / RCSe ) )", "obj1": 0.7322834645669292, "obj2": 0.17173857813998097}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ( ACS - BR ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,( PN * CRS ) ) / Min( FirstVNF_CPU ,DDR ) ) + Max( ARS,( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MLU - DS ) / Min( ( RMSe * RRSe ) ,( ( DS + MUC ) - ( ( ( RRSe + ( ( MLU - DS ) - RCSe ) ) / CS ) / ( ( CS * MUC ) - ( MUM * MUM ) ) ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.49183237208370156}, {"determining": "( ( ACS / AMS ) * ( PN + ( RRS / FirstVNF_Mem ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( Max( RCSe,( MUR * MLU ) ) / ( ( ( DS / DS ) - ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.765748031496063, "obj2": 0.14155024475568825}, {"determining": "( ( ACS - AMS ) * ( BR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( RRS + FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( DS ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5277190074602118}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - DS ) - RCSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.9212598425196851, "obj2": 0.039211863294420855}, {"determining": "( Max( ( ACS - ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - ( ( CS * MLU ) - ( RCSe + RCSe ) ) ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,DS ) ) - Max( DS,DS ) )", "obj1": 0.2106299212598425, "obj2": 0.6304868715704903}, {"determining": "( ( ( Max( ( ( ARS - FirstVNF_CPU_Server ) * ( Const + RRS ) ),( Const + RRS ) ) - MRS ) - ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC * RMSe ) ) + ( ( DS * MUC ) - ( ( CS - MLU ) - ( CS + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.8720472440944882, "obj2": 0.06752984933784373}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_Mem_Server / Max( ( ( Min( Const ,RRS ) * FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe )", "obj1": 0.639763779527559, "obj2": 0.22436525612733832}, {"determining": "( ( ACS - DDR ) * ( MDR / ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) ) ) - Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MLU ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4822744413669473}, {"determining": "( FirstVNF_CPU / ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / DDR ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUM ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - RRSe ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7346490391289162}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - ( DDR - FirstVNF_RAM_Server ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + DS ) ) * Max( ( MUM / RCSe ),( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) / RCSe ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.05221887769878817}, {"determining": "( ( ACS - AMS ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( RRS / FirstVNF_Mem ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( Max( ( MUM / RCSe ),( MUR * MLU ) ) / ( ( ( DS / DS ) * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.765748031496063, "obj2": 0.14155024475568825}, {"determining": "( ( ACS - FirstVNF_CPU ) * ( MDR / Max( Max( ( ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ),PN ),PN ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( DS + MUC ) - ( ( Max( MUM,RMSe ) / CS ) / ( ( ( DS / DS ) * ( MUC * RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.7125984251968503, "obj2": 0.17466456971308658}, {"determining": "( Max( Min( ACS ,( PN / Max( FirstVNF_CPU_Server,( Const + RRS ) ) ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC + DS ) ) + ( Max( DS,MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.8267716535433071, "obj2": 0.10049438366394715}], "22": [{"determining": "( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + DS ) ) * Max( ( MUM / RCSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,DS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) - FirstVNF_CPU_Server ) + ( Const + RRS ) ) - ( DDR / MRS ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - Max( MUM,MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( Min( MRS ,PN ) + ( ( ACS * AMS ) - ( MDR / Max( ( ( Min( DDR ,PN ) / ( PN / ACS ) ) * ( ( RRS - ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) ) / MDR )", "choosing": "( Min( Min( RMSe ,( ( ( MLU - CS ) - Max( RCSe,RMSe ) ) + Min( ( DS * MUC ) ,Max( MUM,MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.7933070866141733, "obj2": 0.07778660983194809}, {"determining": "( ( ACS - AMS ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( RRS / FirstVNF_Mem ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( Max( ( MUM / RCSe ),( MUR * MLU ) ) / ( ( ( DS / DS ) * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.7775590551181102, "obj2": 0.1405916824248505}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const + RRS ) ) - ( DDR / BR ) )", "choosing": "( ( DS / MUC ) - Max( MLU,RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041415}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( ACS - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * ( MUC / RRSe ) ) - ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) + MUM ) ) ) ) ) / RRSe )", "obj1": 0.4153543307086614, "obj2": 0.4534704072762396}, {"determining": "( ACS - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ) - PN ) ) )", "choosing": "( ( DS / MUM ) / ( Min( CS ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.8248031496062992, "obj2": 0.07109196639489894}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_Mem_Server / Max( ( ( Min( Const ,RRS ) * FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe )", "obj1": 0.639763779527559, "obj2": 0.22436525612733832}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( ( ( Max( ( ( ARS - FirstVNF_CPU_Server ) * ( Const + RRS ) ),( Const + RRS ) ) - MRS ) - ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC * RMSe ) ) + ( ( DS * MUC ) - ( ( CS - MLU ) - ( CS + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.8720472440944882, "obj2": 0.06752984933784373}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) * MUM ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( Max( ( Max( ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( CS - MUC ) ,Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( MUR * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.47887016015472167}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - DS ) - RCSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.984251968503937, "obj2": 0.009523831571352752}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ACS - FirstVNF_CPU_Server ) + ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ),PN ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,RRSe ) / RRSe )", "obj1": 0.5570866141732284, "obj2": 0.25926891292558046}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( PN / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6621684926458525}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( RRSe / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( ACS - AMS ) * ( BR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - DS ),( DS / RMSe ) ) ,MUC ) ) ) )", "obj1": 0.3464566929133858, "obj2": 0.4883995745534427}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_RAM_Server / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / ( ( ( CS / MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.37189713364452476}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ( ARS - ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.18557680781933025}, {"determining": "( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR )", "choosing": "( ( MUC - ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC / Min( Min( ( RMSe + RRSe ) ,RCSe ) ,RRSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8650918610517753}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( AMS,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RCSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7480314960629921, "obj2": 0.15711803211165026}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,ACS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.6029451890689411}, {"determining": "( ACS - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( MLU / RRSe ) / ( Min( MUR ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.18110236220472442, "obj2": 0.6929957220510128}, {"determining": "( ACS - ( BR / ACS ) )", "choosing": "( ( MUM / MUM ) / ( Min( MUR ,( RCSe - MUM ) ) / RCSe ) )", "obj1": 0.7322834645669292, "obj2": 0.17173857813998097}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( Max( ARS,ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RCSe ) / DS ) / ( ( ( DS / DS ) * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.5826771653543307, "obj2": 0.24947740401618856}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.2736220472440945, "obj2": 0.5770427573288955}, {"determining": "( ( ACS - FirstVNF_CPU ) * ( MDR / Max( Max( ( ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ),PN ),PN ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( DS + MUC ) - ( ( Max( MUM,RMSe ) / CS ) / ( ( ( DS / DS ) * ( MUC * RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.7125984251968503, "obj2": 0.17466456971308658}, {"determining": "( ( ACS - AMS ) * ( BR / Max( ( ( FirstVNF_CPU / DDR ) + ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( RMSe + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2917936403726169}, {"determining": "( Max( ARS,BR ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( CS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( Max( CS,MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - DS ) - ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.1794722497906139}, {"determining": "( ACS - Min( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( Min( FirstVNF_Mem ,( FirstVNF_CPU / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ,ACS ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( ( CS * MLU ) - ( RCSe + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.265748031496063, "obj2": 0.5848669397102396}, {"determining": "( ( ACS - AMS ) * ( BR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( MUC + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - DS ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5581564447732242}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,RRS ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) - Max( DS,DS ) )", "obj1": 0.32677165354330706, "obj2": 0.5131544592085464}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - ( DDR - FirstVNF_RAM_Server ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + DS ) ) * Max( ( MUM / RCSe ),( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) / RCSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6184348814405375}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( ( CS * MLU ) - ( RCSe + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.905511811023622, "obj2": 0.04307318194463353}, {"determining": "( FirstVNF_CPU / ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / DDR ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUM ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - RRSe ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7346490391289162}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( MUC / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) + ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.05221887769878817}, {"determining": "( ( ACS - AMS ) * ( BR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - DS ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5379266916021386}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,MUC ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5536216581027472}, {"determining": "( ( ACS - AMS ) * ( BR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( RRS + FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( DS ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5277190074602118}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) ,RCSe ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.626689272168768}, {"determining": "( ACS - ( BR / ACS ) )", "choosing": "( ( MUM / MUM ) / ( Min( MUR ,( RCSe - MUM ) ) / RCSe ) )", "obj1": 0.4940944881889764, "obj2": 0.29720308746706575}], "23": [{"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,DS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) - FirstVNF_CPU_Server ) + ( Const + RRS ) ) - ( DDR / MRS ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - Max( MUM,MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + DS ) ) * Max( ( MUM / RCSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - ( RRSe - ( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ACS - AMS ) * ( BR / Max( ( ( FirstVNF_CPU / DDR ) * ( ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) + ( RRS + FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( DS ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( DS / RCSe ),Min( Max( ( DS - MUC ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.4367360405233935}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( Max( ( Max( ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( CS - MUC ) ,Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( MUR * ( MUC / RRSe ) ) - ( MUM + MUM ) ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.47887016015472167}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( DS ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.10332213964200541}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - DS ) - RCSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.984251968503937, "obj2": 0.009523831571352752}, {"determining": "( Max( DDR,Min( Max( Max( ACS,Max( AMS,CRS ) ),CRS ) ,( FirstVNF_RAM + DDR ) ) ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( ( MUM / RCSe ) / ( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.7480314960629921, "obj2": 0.15711803211165026}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_Mem_Server / Max( ( ( Min( Const ,RRS ) * FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe )", "obj1": 0.639763779527559, "obj2": 0.22436525612733832}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const + RRS ) ) - ( DDR / BR ) )", "choosing": "( ( DS / MUC ) - Max( MLU,RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041415}, {"determining": "( ACS - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( MLU / RRSe ) / ( Min( MUR ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.18110236220472442, "obj2": 0.6929957220510128}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,RRS ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) - Max( DS,DS ) )", "obj1": 0.32677165354330706, "obj2": 0.5131544592085464}, {"determining": "( ( ( Max( ( ( ARS - FirstVNF_CPU_Server ) * ( Const + RRS ) ),( Const + RRS ) ) - MRS ) - ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC * RMSe ) ) + ( ( DS * MUC ) - ( ( CS - MLU ) - ( CS + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.8720472440944882, "obj2": 0.06752984933784373}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) * MUM ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_RAM_Server / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / ( ( ( CS / MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.37189713364452476}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( FirstVNF_CPU / ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / DDR ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUM ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - RRSe ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7346490391289162}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( ( Min( DDR ,PN ) / ( PN / ACS ) ) * ( ( RRS - ACS ) * ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( Max( MLU,RRSe ),RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) - Max( DS,DS ) )", "obj1": 0.2125984251968504, "obj2": 0.661679740486513}, {"determining": "( ( Min( MRS ,PN ) / ( ( ACS * AMS ) - ( MDR / Max( ( ( Min( DDR ,PN ) / ( PN / ACS ) ) * ( ( RRS - ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) ) / MDR )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) - Max( DS,DS ) )", "obj1": 0.7834645669291339, "obj2": 0.08114137083721129}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( PN / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6621684926458525}, {"determining": "( ( ACS - AMS ) * ( BR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) + ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - DS ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.3464566929133858, "obj2": 0.4883995745534427}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) + ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.05221887769878817}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR )", "choosing": "( ( MUC - ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC / Min( Min( ( RMSe + RRSe ) ,RCSe ) ,RRSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8650918610517753}, {"determining": "( Max( ( ACS - FirstVNF_CPU_Server ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( ( CS * MLU ) - ( RCSe + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.905511811023622, "obj2": 0.04307318194463353}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( Min( ( FirstVNF_CPU / DDR ) ,( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( CRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * MUM ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ACS - FirstVNF_CPU_Server ) + ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ),PN ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,RRSe ) / RRSe )", "obj1": 0.5570866141732284, "obj2": 0.25926891292558046}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( ACS - ( BR / ACS ) )", "choosing": "( ( MUM / MUM ) / ( Min( MUR ,( RCSe - MUM ) ) / RCSe ) )", "obj1": 0.7322834645669292, "obj2": 0.17173857813998097}, {"determining": "( ACS - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ) - PN ) ) )", "choosing": "( ( DS / MUM ) / ( Min( CS ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.8248031496062992, "obj2": 0.07109196639489894}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC + ( ( CS * MUC ) - ( RCSe + RCSe ) ) ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.3051181102362205, "obj2": 0.5264831983779703}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_CPU ) * Const ) + FirstVNF_RAM_Server ) + ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ),Max( ( PN * CRS ),FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS + MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - DS ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6201600021900912}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - RRSe ),RRSe ) ,MUC ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5578833137409038}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / AMS ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + DS ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) ,RCSe ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.626689272168768}, {"determining": "( ( ACS - FirstVNF_CPU ) * ( MDR / Max( Max( ( ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ),PN ),PN ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( DS + MUC ) - ( ( Max( MUM,RMSe ) / CS ) / ( ( ( DS / DS ) * ( MUC * RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.7125984251968503, "obj2": 0.17466456971308658}, {"determining": "( ( ( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / DS )", "obj1": 0.09448818897637795, "obj2": 0.8334923127029409}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * BR ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),( RRSe + ( Min( RRSe ,DS ) - RCSe ) ) ) / RRSe )", "obj1": 0.5787401574803149, "obj2": 0.2473192336491281}, {"determining": "( Max( ARS,BR ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( CS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( Max( CS,MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - DS ) - ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.1794722497906139}, {"determining": "( ( ACS - AMS ) * ( BR / Max( ( ( FirstVNF_CPU / DDR ) + ( Min( FirstVNF_Mem ,( FirstVNF_CPU / FirstVNF_CPU ) ) + ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,DS ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ),( Min( Min( RMSe ,RRSe ) ,( ( RMSe + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5059055118110236, "obj2": 0.29005997442148485}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + ( Max( Const,CRS ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe - MLU ) - RCSe ) / Max( ( Max( CS,MLU ) - ( RCSe + RCSe ) ),( ( Min( RMSe ,RRSe ) + ( CS - DS ) ) / RRSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.03595167648694695}, {"determining": "( Max( ARS,BR ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( CS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( Max( CS,MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - DS ) - ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.2578740157480315, "obj2": 0.5915454517598652}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - DS ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5392632918852605}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / ( RCSe + RCSe ) )", "obj1": 0.8208661417322834, "obj2": 0.07275011955672603}, {"determining": "( ( ARS - ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.18557680781933025}], "24": [{"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,DS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ( Max( ( ( ARS - FirstVNF_CPU_Server ) * ( Const + RRS ) ),( Const + RRS ) ) - MRS ) - ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) - FirstVNF_CPU_Server ) + ( Const + RRS ) ) - ( DDR / MRS ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - Max( MUM,MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - ( RRSe - ( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.39173228346456695, "obj2": 0.4162739798638561}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS * FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe / DS ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( ACS - ( BR / ACS ) )", "choosing": "( ( MUM / MUM ) / ( Min( MUR ,( RCSe - MUM ) ) / RCSe ) )", "obj1": 0.7322834645669292, "obj2": 0.17173857813998097}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - DS ) - RCSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.984251968503937, "obj2": 0.009523831571352752}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / ( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) ) )", "obj1": 0.7460629921259843, "obj2": 0.11132246252553765}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const + RRS ) ) - ( DDR / BR ) )", "choosing": "( ( DS / MUC ) - Max( MLU,RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041415}, {"determining": "( ACS - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( MLU / RRSe ) / ( Min( MUR ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.18110236220472442, "obj2": 0.6929957220510128}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) * MUM ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( ( ( Max( ( ( ARS - FirstVNF_CPU_Server ) * ( Const + RRS ) ),( Const + RRS ) ) - MRS ) - ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC * RMSe ) ) + ( ( DS * MUC ) - ( ( CS - MLU ) - ( CS + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.8720472440944882, "obj2": 0.06752984933784373}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,RRS ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) - Max( DS,DS ) )", "obj1": 0.32677165354330706, "obj2": 0.5131544592085464}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) ,RCSe ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6563601874050933}, {"determining": "( ( ARS - ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.18557680781933025}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( PN / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6621684926458525}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) + ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.05221887769878817}, {"determining": "( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR )", "choosing": "( ( MUC - ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC / Min( Min( ( RMSe + RRSe ) ,RCSe ) ,RRSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8650918610517753}, {"determining": "( ACS - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ) - PN ) ) )", "choosing": "( ( DS / MUM ) / ( Min( CS ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.8248031496062992, "obj2": 0.07109196639489894}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( FirstVNF_CPU / ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU * DDR ) ) + ( ( PN * FirstVNF_CPU ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUM ),Min( CS ,DS ) ) * MUM ) ,( Max( ( MLU + CS ),( MLU + MUC ) ) - RRSe ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe - MUR ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7317054978223431}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server / ACS ) + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( Min( MUR ,( RCSe + MUM ) ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.483177388271896}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.6338582677165354, "obj2": 0.21984948461886886}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - DS ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5392632918852605}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / ( RCSe + RCSe ) )", "obj1": 0.8208661417322834, "obj2": 0.07275011955672603}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / AMS ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + DS ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) ,RCSe ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.626689272168768}, {"determining": "( ( ACS - FirstVNF_CPU ) * ( MDR / Max( Max( ( ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ),PN ),PN ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( DS + MUC ) - ( ( Max( MUM,RMSe ) / CS ) / ( ( ( DS / DS ) * ( MUC * RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.7125984251968503, "obj2": 0.17466456971308658}, {"determining": "( ( ( Max( Max( ACS,Max( DDR,CRS ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,( RCSe + MUM ) ) / DS )", "obj1": 0.09448818897637795, "obj2": 0.8334923127029409}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( Min( ( FirstVNF_CPU / DDR ) ,( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( CRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * MUM ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( Min( MRS ,PN ) / ( ( ACS * AMS ) - ( MDR / Max( ( ( Min( DDR ,PN ) / ( PN / ACS ) ) * ( ( RRS - ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) ) / MDR )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) - Max( DS,DS ) )", "obj1": 0.7834645669291339, "obj2": 0.08114137083721129}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * Min( ( FirstVNF_CPU / ACS ) ,( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - DS ),Max( DS,MUM ) ) ,MUC ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08322083689903456}, {"determining": "( MRS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( DS ,MUC ) - ( DS - DS ) ) * ( ( RCSe + DS ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RCSe + MUR ) ) ,MUC ) ) ) )", "obj1": 0.7559055118110236, "obj2": 0.10251811168949994}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.43700787401574803, "obj2": 0.36692369402779296}, {"determining": "( Max( ARS,BR ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( CS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( Max( CS,MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - DS ) - ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.1794722497906139}, {"determining": "( Max( ( Max( ACS,( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * Max( MDR,Max( ( ( Min( MRS ,RRS ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC + ( ( CS * MUC ) - ( RCSe + RCSe ) ) ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( ( ( DS - MUC ) + ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) - Max( DS,DS ) )", "obj1": 0.2755905511811024, "obj2": 0.5747500101566685}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + ( Max( Const,CRS ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe - MLU ) - RCSe ) / Max( ( Max( CS,MLU ) - ( RCSe + RCSe ) ),( ( Min( RMSe ,RRSe ) + ( CS - DS ) ) / RRSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.03595167648694695}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * BR ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( MUR - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5531496062992126, "obj2": 0.271796291227498}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_CPU ) * Const ) + FirstVNF_RAM_Server ) + ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ),Max( ( PN * CRS ),FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS + MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - DS ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6201600021900912}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) - Max( DS,DS ) )", "obj1": 0.30708661417322836, "obj2": 0.5258442303199508}, {"determining": "( ( ACS - FirstVNF_CPU ) * ( MDR / Max( Max( ( ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ),( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,Min( Max( ( DS - MUC ),Min( MUR ,( RCSe + MUM ) ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.265748031496063, "obj2": 0.5798458581633452}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6338582677165354, "obj2": 0.21984948461886886}], "25": [{"determining": "( ( ARS - ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( Min( MUR ,( RCSe + MUM ) ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,DS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ( Max( ( ( ARS - FirstVNF_CPU_Server ) * ( Const + RRS ) ),( Const + RRS ) ) - MRS ) - ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / MDR )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS * FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe / DS ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ACS - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( MLU / RRSe ) / ( Min( MUR ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.18110236220472442, "obj2": 0.6929957220510128}, {"determining": "( ( ( Max( ( ( ARS - FirstVNF_CPU_Server ) * ( Const + RRS ) ),( Const + RRS ) ) - MRS ) - ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC * RMSe ) ) + ( ( DS * MUC ) - ( ( CS - MLU ) - ( CS + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.8720472440944882, "obj2": 0.06752984933784373}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( PN / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6621684926458525}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,RRS ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) - Max( DS,DS ) )", "obj1": 0.32677165354330706, "obj2": 0.5131544592085464}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const + RRS ) ) - ( DDR / BR ) )", "choosing": "( ( DS / MUC ) - Max( MLU,RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.030549235639041415}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / RRSe ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.16509630686024837}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const + RRS ) ) - ( DDR / BR ) )", "choosing": "( ( DS / MUC ) - Max( MLU,RRSe ) )", "obj1": 0.9783464566929134, "obj2": 0.013060980266004489}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) - ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,MUC ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.39173228346456695, "obj2": 0.4162739798638561}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.27718718468701153}, {"determining": "( ( ARS - ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.18557680781933025}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + ( Max( Const,CRS ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe - MLU ) - RCSe ) / Max( ( Max( CS,MLU ) - ( RCSe + RCSe ) ),( ( Min( RMSe ,RRSe ) + ( CS - DS ) ) / RRSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.03595167648694695}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / ( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) ) )", "obj1": 0.7440944881889764, "obj2": 0.1125179675495503}, {"determining": "( ( ACS - AMS ) * ( MDR + Max( DDR,PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( Min( RMSe ,RRSe ) ,RCSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41238434016319175}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) + ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.889763779527559, "obj2": 0.050601935712801756}, {"determining": "( ACS - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ) - PN ) ) )", "choosing": "( ( DS / MUM ) / ( Min( CS ,( RCSe + MUM ) ) / RCSe ) )", "obj1": 0.8248031496062992, "obj2": 0.07109196639489894}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * BR ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( MUR - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5531496062992126, "obj2": 0.271796291227498}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.6338582677165354, "obj2": 0.21984948461886886}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) + ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU * RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2917936403726169}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.39173228346456695, "obj2": 0.4162739798638561}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_CPU ) * Const ) + FirstVNF_RAM_Server ) + ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ),Max( ( PN * CRS ),FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS + MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - DS ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6201600021900912}, {"determining": "( ( ACS - FirstVNF_CPU ) * ( MDR / Max( Max( ( ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ),PN ),PN ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( DS + MUC ) - ( ( Max( MUM,RMSe ) / CS ) / ( ( ( DS / DS ) * ( MUC * RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.7125984251968503, "obj2": 0.17466456971308658}, {"determining": "( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR )", "choosing": "( ( MUC - ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC / Min( Min( ( RMSe + RRSe ) ,RCSe ) ,RRSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8650918610517753}, {"determining": "( FirstVNF_RAM - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( Min( CS ,RRSe ),Min( ( ( DS - MUC ) / ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5531496062992126, "obj2": 0.271796291227498}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( Min( ( FirstVNF_CPU / DDR ) ,( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( CRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * MUM ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ,MUC ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5652849050585376}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( ( Min( MRS ,PN ) / ( PN / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.20866141732283464, "obj2": 0.6431024741677593}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.2874015748031496, "obj2": 0.5547658295034251}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) * MUM ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.2559055118110236, "obj2": 0.579277738100966}, {"determining": "( Max( ARS,BR ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( CS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( Max( CS,MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - DS ) - ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.1794722497906139}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( RRSe ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.09869331969122208}, {"determining": "( Max( ACS,AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / ( ( ( DS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.43700787401574803, "obj2": 0.36692369402779296}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / AMS ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + DS ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) ,RCSe ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.626689272168768}, {"determining": "( FirstVNF_CPU / ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU * DDR ) ) + ( ( PN * FirstVNF_CPU ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUM ),Min( CS ,DS ) ) * MUM ) ,( Max( ( MLU + CS ),( MLU + MUC ) ) - RRSe ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe - MUR ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7317054978223431}, {"determining": "( ACS - ( BR / ACS ) )", "choosing": "( ( MUM / MUM ) / ( Min( MUR ,( RCSe - MUM ) ) / RCSe ) )", "obj1": 0.7322834645669292, "obj2": 0.17173857813998097}, {"determining": "( ( ( Max( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,CRS ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Max( DS,RRSe ) ,RCSe ) / DS )", "obj1": 0.09251968503937008, "obj2": 0.836984104758728}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( MRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( RMSe / MUC ) - Max( MLU,MUC ) )", "obj1": 0.812992125984252, "obj2": 0.07505408290693683}], "26": [{"determining": "( FirstVNF_CPU - ( FirstVNF_RAM_Server / ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( CS ,RRSe ),Min( ( ( DS - MUC ) - ( ( DS - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,DS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ARS - ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( Min( MUR ,( RCSe + MUM ) ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( Min( FirstVNF_CPU ,ACS ) * ( RRS / FirstVNF_Mem ) ) ) - Const ) ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,MUC ) ,RCSe ) / DS ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS * FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe / DS ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( ACS - ( BR / ACS ) )", "choosing": "( ( MUM / MUM ) / ( Min( MUR ,( RCSe - MUM ) ) / RCSe ) )", "obj1": 0.7322834645669292, "obj2": 0.17173857813998097}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ( ( Max( ( ( ARS - FirstVNF_CPU_Server ) * ( Const + RRS ) ),( Const + RRS ) ) - MRS ) - ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC * RMSe ) ) + ( ( DS * MUC ) - ( ( CS - MLU ) - ( CS + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.8720472440944882, "obj2": 0.06752984933784373}, {"determining": "( ACS - ( MDR / Max( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / ACS ) ) * ( ( FirstVNF_CPU / ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / ( DS - MUC ) )", "obj1": 0.7421259842519685, "obj2": 0.11363619921773582}, {"determining": "( Max( ACS,AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / ( ( ( DS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.43700787401574803, "obj2": 0.36692369402779296}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.39173228346456695, "obj2": 0.4162739798638561}, {"determining": "( FirstVNF_CPU / ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU * DDR ) ) + ( ( PN * FirstVNF_CPU ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUM ),Min( CS ,DS ) ) * MUM ) ,( Max( ( MLU + CS ),( MLU + MUC ) ) - RRSe ) ) / ( ( ( CS * MUC ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe - MUR ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7317054978223431}, {"determining": "( ( ACS - AMS ) * ( MDR / ( ( ( Min( Const ,FirstVNF_CPU ) * Const ) + FirstVNF_RAM_Server ) + ARS ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),( ( CS + MLU ) - ( RCSe + RCSe ) ) ) / RRSe )", "obj1": 0.5787401574803149, "obj2": 0.2473192336491281}, {"determining": "( ( ARS - ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.18557680781933025}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( DS / MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) ) )", "obj1": 0.8248031496062992, "obj2": 0.07067053881740401}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + ( Max( Const,CRS ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe - MLU ) - RCSe ) / Max( ( Max( CS,MLU ) - ( RCSe + RCSe ) ),( ( Min( RMSe ,RRSe ) + ( CS - DS ) ) / RRSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.03595167648694695}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( BR / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2212825838465312}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) + ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.889763779527559, "obj2": 0.050601935712801756}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,RRS ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.33070866141732286, "obj2": 0.5115031909135411}, {"determining": "( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR )", "choosing": "( ( MUC - ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC / Min( Min( ( RMSe + RRSe ) ,RCSe ) ,RRSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8650918610517753}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) - ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,MUC ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.39173228346456695, "obj2": 0.4162739798638561}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const + RRS ) ) - ( DDR / BR ) )", "choosing": "( ( DS / MUC ) - Max( MLU,RRSe ) )", "obj1": 0.9783464566929134, "obj2": 0.013060980266004489}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( RMSe / MUC ) - Max( MLU,MUC ) )", "obj1": 0.812992125984252, "obj2": 0.07505408290693683}, {"determining": "( ( ACS - FirstVNF_CPU ) * ( MDR / Max( Max( ( ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ),PN ),PN ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( DS + MUC ) - ( ( Max( MUM,RMSe ) / CS ) / ( ( ( DS / DS ) * ( MUC * RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.7125984251968503, "obj2": 0.17466456971308658}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,CRS ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.09055118110236221, "obj2": 0.8356485566026891}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( Min( ( FirstVNF_CPU / DDR ) ,( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( CRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * MUM ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( FirstVNF_RAM - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( Min( CS ,RRSe ),Min( ( ( DS - MUC ) / ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.9606299212598425, "obj2": 0.030238618670491397}, {"determining": "( ( ACS - CRS ) * Min( ( ( FirstVNF_Mem_Server - ARS ) * PN ) ,( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * BR ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( MUR - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5531496062992126, "obj2": 0.271796291227498}, {"determining": "( Max( ARS,BR ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( CS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( Max( CS,MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - DS ) - ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.1794722497906139}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.2888285470273146}, {"determining": "( ACS - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ) - PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / RRSe )", "obj1": 0.1732283464566929, "obj2": 0.6986292996747954}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.7854330708661418, "obj2": 0.08127868439525644}, {"determining": "( ( Min( MRS ,PN ) / ( ( ACS * AMS ) * ( PN / Max( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) ) / MDR )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( DS - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6837211707575206}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( MRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ACS - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,( MLU * RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.2559055118110236, "obj2": 0.579277738100966}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const + RRS ) ) - ( BR / BR ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe * RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.018700584739296665}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.6338582677165354, "obj2": 0.21984948461886886}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) * MUM ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / AMS ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + DS ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) ,RCSe ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.626689272168768}, {"determining": "( ( ACS - AMS ) * ( MDR * Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * DDR ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) / ( DS - DS ) ) * ( Max( RCSe,MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( DS * MUC ) ) ,MUC ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5340082381630477}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( FirstVNF_RAM_Server / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.3090551181102362, "obj2": 0.5252026100124322}, {"determining": "( BR - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( RRSe ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,MUC ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( Max( CS,MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.7637795275590551, "obj2": 0.09781442725561018}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08305550965304773}], "27": [{"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ( FirstVNF_CPU / ( Const + RRS ) ) - AMS ) * ( MDR / Max( ( ( Min( MRS ,RRS ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ),RRSe ) ) - Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,DS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( FirstVNF_CPU - ( FirstVNF_RAM_Server / ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( CS ,RRSe ),Min( ( ( DS - MUC ) - ( ( DS - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( Min( FirstVNF_CPU ,ACS ) * ( RRS / FirstVNF_Mem ) ) ) - Const ) ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,MUC ) ,RCSe ) / DS ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_CPU / ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU * DDR ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( Max( ( MLU / RCSe ),( RRSe - MUR ) ),( DS * MUC ) ) ,MUC ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5284808435814156}, {"determining": "( ( ACS * AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / RRS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - Min( RCSe ,RCSe ) ) * Max( ( MUM / MUR ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( RRSe / MUM ) ) ,MUC ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5787041490049601}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( ACS - ( BR / ACS ) )", "choosing": "( ( MUM / MUM ) / ( Min( MUR ,( RCSe - MUM ) ) / RCSe ) )", "obj1": 0.7322834645669292, "obj2": 0.17173857813998097}, {"determining": "( ( ( Max( ( ( ARS - FirstVNF_CPU_Server ) * ( Const + RRS ) ),( Const + RRS ) ) - MRS ) - ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC * RMSe ) ) + ( ( DS * MUC ) - ( ( CS - MLU ) - ( CS + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.8720472440944882, "obj2": 0.06752984933784373}, {"determining": "( ACS - ( MDR / Max( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / ACS ) ) * ( ( FirstVNF_CPU / ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / ( DS - MUC ) )", "obj1": 0.7421259842519685, "obj2": 0.11363619921773582}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + ( Max( Const,CRS ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe - MLU ) - RCSe ) / Max( ( Max( CS,MLU ) - ( RCSe + RCSe ) ),( ( Min( RMSe ,RRSe ) + ( CS - DS ) ) / RRSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.03595167648694695}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * BR ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( MUR - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5531496062992126, "obj2": 0.271796291227498}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45462183458827965}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * BR ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( DS - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / RRSe ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.47244094488188976, "obj2": 0.3113217478340288}, {"determining": "( ( ARS - ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.18557680781933025}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4148455860775099}, {"determining": "( FirstVNF_RAM - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( Min( CS ,RRSe ),Min( ( ( DS - MUC ) / ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.9606299212598425, "obj2": 0.030238618670491397}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( BR / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2212825838465312}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( DS / MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) ) )", "obj1": 0.8248031496062992, "obj2": 0.07067053881740401}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( ( Min( MRS ,PN ) / ( ( ACS * AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( PN / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) ) / ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( DS - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / RRSe ) - Max( RRSe,( MUC - ( Min( Min( Min( RMSe ,RRSe ) ,RCSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6542665257015148}, {"determining": "( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR )", "choosing": "( ( MUC - ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC / Min( Min( ( RMSe + RRSe ) ,RCSe ) ,RRSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8650918610517753}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( RMSe / MUC ) - Max( MLU,MUC ) )", "obj1": 0.8937007874015748, "obj2": 0.04137805546766739}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( Min( ( FirstVNF_CPU / DDR ) ,( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( CRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * MUM ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( DS / DS ) * ( MUC / RRSe ) ) - ( MUM + MUM ) ) )", "obj1": 0.9763779527559056, "obj2": 0.012536914843319783}, {"determining": "( ( ACS - FirstVNF_CPU ) * ( MDR / Max( Max( ( ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ),PN ),PN ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( DS + MUC ) - ( ( Max( MUM,RMSe ) / CS ) / ( ( ( DS / DS ) * ( MUC * RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.7125984251968503, "obj2": 0.17466456971308658}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,CRS ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.09055118110236221, "obj2": 0.8356485566026891}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) + ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( RRSe / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.889763779527559, "obj2": 0.050601935712801756}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,RRS ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.33267716535433073, "obj2": 0.5072950966880042}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) * MUM ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( Max( ARS,BR ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( CS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( Max( CS,MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - DS ) - ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.1794722497906139}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU - MDR ) ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,CRS ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - RMSe ) * ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.2888285470273146}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44150663582322364}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_RAM_Server / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,DS ) / RRSe )", "obj1": 0.5334645669291339, "obj2": 0.2756022606795554}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / ( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ) / PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,DS ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.43700787401574803, "obj2": 0.36692369402779296}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( Min( MRS ,RRS ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( MLU,RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.33070866141732286, "obj2": 0.5115031909135411}, {"determining": "( ( ACS - AMS ) * ( ( MDR / ( ( ( Min( Const ,FirstVNF_CPU ) * Const ) + FirstVNF_RAM_Server ) + ARS ) ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,( CS + MLU ) ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.43939624358563306}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( FirstVNF_RAM_Server / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.3090551181102362, "obj2": 0.5252026100124322}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( MRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / MDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS * FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe / DS ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) ,RCSe ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.626689272168768}, {"determining": "( FirstVNF_CPU / ( Min( Min( MRS ,( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * AMS ) ) ,( FirstVNF_CPU * DDR ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUM ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - RRSe ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe - MUR ) ) ) )", "obj1": 0.13976377952755906, "obj2": 0.740941651133065}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) ) - Max( DS,DS ) )", "obj1": 0.18503937007874016, "obj2": 0.6621265355565893}, {"determining": "( ( ACS - CRS ) * Min( ( ( FirstVNF_Mem_Server - ARS ) * PN ) ,( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}], "28": [{"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,DS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( ( ACS - ( Const * FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_Mem_Server + ARS ) * PN ) / ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( RCSe ,RRSe ) ,RCSe ) * MUM ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ( FirstVNF_CPU / ( Const + RRS ) ) - AMS ) * ( MDR / Max( ( ( Min( MRS ,RRS ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ),RRSe ) ) - Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( Min( FirstVNF_CPU ,ACS ) * ( RRS / FirstVNF_Mem ) ) ) - Const ) ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,MUC ) ,RCSe ) / DS ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8766162582071376}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( MRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( Min( Min( RMSe ,RRSe ) ,RRSe ) / RRSe ) ) ,MUC ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5582549352086904}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ACS - ( BR / ACS ) )", "choosing": "( ( MUM / MUM ) / ( Min( MUR ,( RCSe - MUM ) ) / RCSe ) )", "obj1": 0.7322834645669292, "obj2": 0.17173857813998097}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ),RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.2559055118110236, "obj2": 0.5784493245128748}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4148455860775099}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4922092258188905}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,CRS ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,DS ) / RRSe )", "obj1": 0.18110236220472442, "obj2": 0.6920888016724425}, {"determining": "( ACS - ( MDR / Max( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / ACS ) ) * ( ( FirstVNF_CPU / ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / ( DS - MUC ) )", "obj1": 0.7421259842519685, "obj2": 0.11363619921773582}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + ( Max( Const,CRS ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe - MLU ) - RCSe ) / Max( ( Max( CS,MLU ) - ( RCSe + RCSe ) ),( ( Min( RMSe ,RRSe ) + ( CS - DS ) ) / RRSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.03595167648694695}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) ,RCSe ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.626689272168768}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( DS - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / RRSe ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.09852764296561906}, {"determining": "( ( ( Max( ( ( ARS - FirstVNF_CPU_Server ) * ( Const + RRS ) ),( Const + RRS ) ) - MRS ) - ( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - ( MUC * RMSe ) ) + ( ( DS * MUC ) - ( ( CS - MLU ) - ( CS + RCSe ) ) ) ) ) ,Max( MLU,DS ) ) - MUC )", "obj1": 0.8720472440944882, "obj2": 0.06752984933784373}, {"determining": "( FirstVNF_RAM - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( Min( CS ,RRSe ),Min( ( ( DS - MUC ) / ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.9606299212598425, "obj2": 0.030238618670491397}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( DS / DS ) * ( MUC / RRSe ) ) - ( MUM + MUM ) ) )", "obj1": 0.9763779527559056, "obj2": 0.012536914843319783}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( ( ARS - ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.18557680781933025}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( BR / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2212825838465312}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( RMSe / MUC ) - Max( MLU,MUC ) )", "obj1": 0.8937007874015748, "obj2": 0.04137805546766739}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( FirstVNF_RAM_Server / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.3090551181102362, "obj2": 0.5252026100124322}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_CPU / ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU * DDR ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( Max( ( MLU / RCSe ),( RRSe - MUR ) ),( DS * MUC ) ) ,MUC ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5284808435814156}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * BR ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( MUR - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5531496062992126, "obj2": 0.271796291227498}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.08858267716535433, "obj2": 0.836243339688406}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,FirstVNF_CPU ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) / RRSe )", "obj1": 0.6122047244094488, "obj2": 0.2312785356742249}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( Min( ( FirstVNF_CPU / DDR ) ,( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( CRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * MUM ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( DS / MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( RMSe - ( Min( Max( RMSe,RRSe ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.06981443793095266}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) ) - Max( DS,DS ) )", "obj1": 0.18503937007874016, "obj2": 0.6621265355565893}, {"determining": "( ACS - ( MDR / Max( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / ACS ) ) * ( ( FirstVNF_CPU / ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.7834645669291339, "obj2": 0.08114137083721128}, {"determining": "( ( ACS - FirstVNF_CPU ) * ( MDR / Max( Max( ( ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ),PN ),PN ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( DS + MUC ) - ( ( Max( MUM,RMSe ) / CS ) / ( ( ( DS / DS ) * ( MUC * RRSe ) ) - ( MUM + MUM ) ) ) ) ) / RRSe )", "obj1": 0.7125984251968503, "obj2": 0.17466456971308658}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( Min( MRS ,PN ) * ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( ( Max( ( CS / ( MUM - DS ) ),Min( RRSe ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.8779527559055118, "obj2": 0.048209074126810414}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * BR ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( DS - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / RRSe ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.47244094488188976, "obj2": 0.3113217478340288}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ( PN * BR ),FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RRSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5531496062992126, "obj2": 0.271796291227498}, {"determining": "( ( ACS - CRS ) * Min( ( ( FirstVNF_Mem_Server - ARS ) * PN ) ,( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( FirstVNF_CPU / ( Min( Min( MRS ,( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * AMS ) ) ,( FirstVNF_CPU * DDR ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUM ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - RRSe ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe - MUR ) ) ) )", "obj1": 0.13976377952755906, "obj2": 0.740941651133065}, {"determining": "( Max( ARS,BR ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( CS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( Max( CS,MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - DS ) - ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.1794722497906139}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( DS - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45462183458827965}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.2888285470273146}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) / ( DS - DS ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.7893700787401575, "obj2": 0.07935424889899388}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( MRS - Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( Min( Min( MUR ,RRSe ) ,RRSe ) / RRSe ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),Max( ( Max( ( ( PN * BR ) + FirstVNF_RAM_Server ),( FirstVNF_CPU / ACS ) ) * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) ) )", "choosing": "( ( DS / MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( ( DS - MUM ) - RRSe ) ) ) ) )", "obj1": 0.8188976377952756, "obj2": 0.07573145345839606}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44150663582322364}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU - MDR ) ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,CRS ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - RMSe ) * ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}], "29": [{"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ( FirstVNF_CPU / ( Const + RRS ) ) - AMS ) * ( MDR / Max( ( ( Min( MRS ,RRS ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ),RRSe ) ) - Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( Const * FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_Mem_Server + ARS ) * PN ) / ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( RCSe ,RRSe ) ,RCSe ) * MUM ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( Min( FirstVNF_CPU ,ACS ) * ( RRS / FirstVNF_Mem ) ) ) - Const ) ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,MUC ) ,RCSe ) / DS ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8761591999477656}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) / ( DS - DS ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) / ( DS - RMSe ) ) ) )", "obj1": 0.7047244094488189, "obj2": 0.14700040684257382}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ACS - CRS ) * Min( ( ( FirstVNF_Mem_Server - ARS ) * PN ) ,( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * MRS ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * ( MUM + MUM ) ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5590551181102362, "obj2": 0.25970330269633535}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + ( Max( Const,CRS ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) - Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe - MLU ) - RCSe ) / Max( ( Max( CS,MLU ) - ( RCSe + RCSe ) ),( ( Min( RMSe ,RRSe ) + ( CS - DS ) ) / RRSe ) ) )", "obj1": 0.9271653543307087, "obj2": 0.03595167648694695}, {"determining": "( ACS - ( MDR / Max( ( Const * ( ( DDR / ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( Min( RRSe ,DS ) / MUM ) / ( DS - MUC ) )", "obj1": 0.7421259842519685, "obj2": 0.11349880417584297}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) ) - Max( DS,DS ) )", "obj1": 0.18503937007874016, "obj2": 0.6621265355565893}, {"determining": "( ( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( DDR / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( RCSe / MUR )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ACS - ( ( FirstVNF_Mem_Server + ( Max( Const,CRS ) - ( FirstVNF_RAM_Server / ACS ) ) ) / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( DS / MUC ) - ( ( ( ( Min( RMSe ,RRSe ) + ( CS - DS ) ) / RRSe ) + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.026813344473827744}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / ( DS - MUC ) )", "obj1": 0.8720472440944882, "obj2": 0.05478667329540846}, {"determining": "( ( Min( MRS ,PN ) / ( ( ACS * AMS ) * ( MDR / Max( ( ( Min( DDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( DS - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / RRSe ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6542665257015148}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( DS - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45462183458827965}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * BR ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( DS - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / RRSe ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.47244094488188976, "obj2": 0.3113217478340288}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.08858267716535433, "obj2": 0.836243339688406}, {"determining": "( ( ARS - ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.18557680781933025}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU - MDR ) ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,CRS ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - RMSe ) * ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}, {"determining": "( Max( ARS,BR ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( CS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( Max( CS,MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - DS ) - ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.1794722497906139}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( BR / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2212825838465312}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( DS / MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( RMSe - ( Min( Max( RMSe,RRSe ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.06981443793095266}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4148455860775099}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * BR ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( MUR - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5531496062992126, "obj2": 0.271796291227498}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.41141732283464566, "obj2": 0.4074953980674098}, {"determining": "( Max( ( ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) * ( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / RCSe ) ) ,( ( ( ( RCSe - MUC ) - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.3188976377952756, "obj2": 0.5206079841171836}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ),RRSe ) ) - Max( RCSe,DS ) )", "obj1": 0.2559055118110236, "obj2": 0.5784493245128748}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( RMSe / MUC ) - Max( MLU,MUC ) )", "obj1": 0.8937007874015748, "obj2": 0.04137805546766739}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( RRS ,( Min( MRS ,ARS ) + ( FirstVNF_CPU / ACS ) ) ) - ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RRSe ),( Max( ( DS - RMSe ),( RRSe / MUM ) ) / MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( MRS,CRS ) - ( FirstVNF_RAM_Server / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( ( ( CS - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.28346456692913385, "obj2": 0.566283626633039}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( Min( ( FirstVNF_CPU / DDR ) ,( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( CRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * MUM ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,MUM ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6241978113387379}, {"determining": "( Max( Min( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) ,( FirstVNF_RAM_Server / ACS ) ),Max( ( ( ( Const + PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( ACS / FirstVNF_Mem ) ) ),PN ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( FirstVNF_RAM_Server / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - DS ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( ( ( MLU - CS ) - Max( ( MUM + MUM ),RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5557680303087895}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,CRS ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,DS ) / RRSe )", "obj1": 0.18110236220472442, "obj2": 0.6920888016724425}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,CRS ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,MUM ) / RRSe )", "obj1": 0.17716535433070865, "obj2": 0.6994520467621052}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.2888285470273146}, {"determining": "( FirstVNF_CPU / ( Min( Min( MRS ,( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * AMS ) ) ,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( Max( ( CS - MUM ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - RRSe ) ) / ( ( Min( ( RMSe * ( ( ( MUM * CS ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) ) * Max( ( MLU / RCSe ),( RRSe - MUR ) ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7311532112146354}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) ,RCSe ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.626689272168768}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) / FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + MLU ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4922092258188905}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_CPU / ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU * DDR ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( Max( ( MLU / RCSe ),( RRSe - MUR ) ),( DS * MUC ) ) ,MUC ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5284808435814156}, {"determining": "( FirstVNF_CPU / ( Min( Min( MRS ,( ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ACS ) ) * AMS ) ) ,( FirstVNF_CPU * DDR ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( CS - MUM ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - RRSe ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe - MUR ) ) ) )", "obj1": 0.13976377952755906, "obj2": 0.740941651133065}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / AMS ) ),PN ) ) )", "choosing": "( ( ( MUM / RCSe ) / MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 0.8090551181102362, "obj2": 0.0743180170322649}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44150663582322364}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( Min( MDR ,FirstVNF_CPU ),( FirstVNF_CPU - DDR ) ) / MDR ) / DDR ) * ( DDR / ( Const + DDR ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe - MUC ) + ( MLU * RRSe ) ) ) / ( ( ( CS * RCSe ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - DS ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.5877225997304746}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU * MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) * RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09554079549425176}], "30": [{"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( Min( FirstVNF_CPU ,ACS ) * ( RRS / FirstVNF_Mem ) ) ) - Const ) ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,MUC ) ,RCSe ) / DS ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8761591999477656}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - FirstVNF_Mem ),( Const + RRS ) ) - ( ( ( FirstVNF_CPU / ( Const + RRS ) ) - AMS ) * ( MDR / Max( ( ( Min( MRS ,RRS ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( RMSe,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ,Max( Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ),RRSe ) ) - Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ) - Const ) ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,MUC ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8761591999477656}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( ( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUC ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.020847222597122524}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) / ( DS - DS ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) / ( DS - RMSe ) ) ) )", "obj1": 0.7047244094488189, "obj2": 0.14700040684257382}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( BR / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2212825838465312}, {"determining": "( ( ACS - CRS ) * Min( ( ( FirstVNF_Mem_Server - ARS ) * PN ) ,( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * MRS ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * ( MUM + MUM ) ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5590551181102362, "obj2": 0.25970330269633535}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) )", "obj1": 0.9094488188976378, "obj2": 0.03456122117609868}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( ( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8280847951459914}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( MRS,CRS ) - ( FirstVNF_RAM_Server / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( ( ( CS - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.28346456692913385, "obj2": 0.566283626633039}, {"determining": "( ( ARS - ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.18557680781933025}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU - MDR ) ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,CRS ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - RMSe ) * ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( DS / MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( RMSe - ( Min( Max( RMSe,RRSe ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.06981443793095266}, {"determining": "( Max( ARS,BR ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( CS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( Max( CS,MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - DS ) - ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.1794722497906139}, {"determining": "( Max( ARS,( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,MLU ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5352920895813718}, {"determining": "( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) - AMS ) * Min( ( ( FirstVNF_Mem_Server - ARS ) * PN ) ,( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,RCSe ) / RRSe )", "obj1": 0.5413385826771654, "obj2": 0.28407945034460197}, {"determining": "( Max( ( ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) * ( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / RCSe ) ) ,( ( ( ( RCSe - MUC ) - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.3188976377952756, "obj2": 0.5206079841171836}, {"determining": "( ( Min( MRS ,PN ) / ( ( ACS * AMS ) * ( MDR / Max( ( Min( MRS ,PN ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( ( DS - MUM ) ,Max( ( DS - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / RRSe ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6475817240219633}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.41141732283464566, "obj2": 0.4074953980674098}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( RMSe / MUC ) - Max( MLU,MUC ) )", "obj1": 0.8937007874015748, "obj2": 0.04137805546766739}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.08858267716535433, "obj2": 0.836243339688406}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU * MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) * RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09554079549425176}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4148455860775099}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,MUC ) ,RCSe ) / DS ) ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8758485535311646}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( DS - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / RRSe ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.47244094488188976, "obj2": 0.3113217478340288}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / ( DS - MUC ) )", "obj1": 0.8720472440944882, "obj2": 0.05478667329540846}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( Min( ( FirstVNF_CPU / DDR ) ,( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( FirstVNF_CPU / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * Min( Min( RMSe ,MUC ) ,RCSe ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( ( MUM / RCSe ) - RRSe ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.43044683892566743}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,MUM ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6241978113387379}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.2888285470273146}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4922092258188905}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * BR ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( MUR - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5531496062992126, "obj2": 0.271796291227498}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( DS - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45462183458827965}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( RRS ,( Min( MRS ,ARS ) + ( FirstVNF_CPU / ACS ) ) ) - ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RRSe ),( Max( ( DS - RMSe ),( RRSe / MUM ) ) / MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU * MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) * RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.1018271760137175}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,CRS ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,DS ) / RRSe )", "obj1": 0.18110236220472442, "obj2": 0.6920888016724425}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( ( ( MLU - CS ) - Max( ( MUM + MUM ),RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.7834645669291339, "obj2": 0.08114137083721128}, {"determining": "( ACS - ( MDR / Max( ( Const * ( ( DDR / ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( Min( RRSe ,DS ) / MUM ) / ( DS - MUC ) )", "obj1": 0.7421259842519685, "obj2": 0.11349880417584297}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) ,RCSe ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.626689272168768}, {"determining": "( ACS - ( MDR / Max( ( Const * ( ( FirstVNF_CPU / ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( Min( RRSe ,DS ) / MUM ) / ( DS - MUC ) )", "obj1": 0.7421259842519685, "obj2": 0.11349880417584297}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( Min( MDR ,FirstVNF_CPU ),( FirstVNF_CPU - DDR ) ) / MDR ) / DDR ) * ( DDR / ( Const + DDR ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe - MUC ) + ( MLU * RRSe ) ) ) / ( ( ( CS * RCSe ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - DS ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.5877225997304746}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server - ARS ) * PN ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( Min( Min( RCSe ,RRSe ) ,RCSe ) / MUM ) / ( DS - MUC ) )", "obj1": 0.8740157480314961, "obj2": 0.05192626190134323}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) ) - Max( DS,DS ) )", "obj1": 0.18503937007874016, "obj2": 0.6621265355565893}], "31": [{"determining": "( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( MDR / Max( Max( ( ( ( Const + PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( ACS / FirstVNF_Mem ) ) ),MRS ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - Max( MUM,MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( FirstVNF_Mem_Server + RRS ) ) ) * ( Min( FirstVNF_CPU ,ACS ) * ( ARS / FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( ( RRSe - DS ) / MUC ) ) - Max( RRSe,( Min( RRSe ,DS ) / MUM ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8716571829225804}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( DS / MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( RMSe - ( Min( Max( RMSe,RRSe ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.06981443793095266}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ACS - CRS ) * Min( ( ( FirstVNF_Mem_Server - ARS ) * PN ) ,( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,CRS ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,DS ) / RRSe )", "obj1": 0.18110236220472442, "obj2": 0.6920888016724425}, {"determining": "( Max( ( ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) * ( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / RCSe ) ) ,( ( ( ( RCSe - MUC ) - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.3188976377952756, "obj2": 0.5206079841171836}, {"determining": "( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,MUM ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.014969893910482071}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( Min( MRS ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( Min( ( DS - MUM ) ,Max( ( DS - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) ,RCSe ) ) )", "obj1": 0.9094488188976378, "obj2": 0.034513285902066454}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) / ( DS - DS ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) / ( DS - RMSe ) ) ) )", "obj1": 0.7322834645669292, "obj2": 0.13174268331658426}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( ( ARS - ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.18557680781933025}, {"determining": "( Max( ARS,BR ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( CS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( Max( CS,MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - DS ) - ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.1794722497906139}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.08858267716535433, "obj2": 0.836243339688406}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4922092258188905}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( ( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8280847951459914}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( RRS / FirstVNF_Mem ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) ) / RRSe )", "obj1": 0.531496062992126, "obj2": 0.27864160419514117}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,MUC ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.05658072054531309}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) / ( DS - DS ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( Max( Max( MLU,CS ),( MLU + MUC ) ) - Max( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ),( MLU - ( CS - CS ) ) ) ) / ( DS - CS ) ) ) )", "obj1": 0.7047244094488189, "obj2": 0.14700040684257382}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( DS - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / RRSe ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.4704724409448819, "obj2": 0.3371417467926598}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.41141732283464566, "obj2": 0.4074953980674098}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - DDR ) ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - RMSe ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5804381483720813}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( BR / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2212825838465312}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,FirstVNF_CPU_Server ) + ACS ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,MUM ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) - Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6238810595074885}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * BR ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.38188976377952755, "obj2": 0.43700220367603476}, {"determining": "( Max( ARS,( ( ACS - AMS ) * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,MLU ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5352920895813718}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * MRS ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * ( MUM + MUM ) ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5590551181102362, "obj2": 0.25970330269633535}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45462183458827965}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( FirstVNF_CPU / ACS ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( RCSe * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - RMSe ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5644715800887844}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( RRS ,( Min( MRS ,ARS ) + ( FirstVNF_CPU / ACS ) ) ) - ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RRSe ),( Max( ( DS - RMSe ),( RRSe / MUM ) ) / MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.43700787401574803, "obj2": 0.36975802010505243}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * BR ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( MUR - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5531496062992126, "obj2": 0.271796291227498}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4148455860775099}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU * MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) * RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09554079549425176}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( MRS * PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MLU ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) ) - Max( DS,DS ) )", "obj1": 0.7834645669291339, "obj2": 0.08114137083721128}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / MRS ) ),( Const + RRS ) ) - ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) )", "choosing": "( Min( ( RMSe + ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( ( ( MLU - CS ) - Max( ( MUM + MUM ),RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.18503937007874016, "obj2": 0.6621125988852679}, {"determining": "( ( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUC ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.020847222597122524}, {"determining": "( ( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUC ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.020847222597122524}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU - MDR ) ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,CRS ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - RMSe ) * ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.2888285470273146}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( Min( MRS ,( ( ( Const + PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( ACS / FirstVNF_Mem ) ) ) ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( MLU * CS ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) ) - Max( DS,DS ) )", "obj1": 0.20669291338582677, "obj2": 0.6335631862126636}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU * MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) * RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.1018271760137175}, {"determining": "( ( ARS + FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS + RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2212825838465312}, {"determining": "( ( ACS - AMS ) * Min( ( ( ( Min( Const ,PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( DS - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / RRSe ) - Max( RRSe,( DS - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.47244094488188976, "obj2": 0.3113217478340288}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.49606299212598426, "obj2": 0.29598832070630937}], "32": [{"determining": "( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( MDR / Max( Max( ( ( ( Const + PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( ACS / FirstVNF_Mem ) ) ),PN ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( MDR / Max( Max( ( ( ( Const + PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( ACS / FirstVNF_Mem ) ) ),MRS ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - Max( MUM,MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( FirstVNF_Mem_Server + RRS ) ) ) * ( Min( FirstVNF_CPU ,ACS ) * ( ARS / FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( ( RRSe - DS ) / MUC ) ) - Max( RRSe,( Min( RRSe ,DS ) / MUM ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8716571829225804}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( ARS - ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.18557680781933025}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,CRS ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,DS ) / RRSe )", "obj1": 0.18110236220472442, "obj2": 0.6920888016724425}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) / ( DS - DS ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) / ( DS - RMSe ) ) ) )", "obj1": 0.7322834645669292, "obj2": 0.13174268331658426}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( MUC - ( Min( Min( RMSe ,MUC ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.05658072054531308}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) / ( DS - DS ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( Max( Max( MLU,CS ),( MLU + MUC ) ) - Max( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ),( MLU - ( CS - CS ) ) ) ) / ( DS - CS ) ) ) )", "obj1": 0.7047244094488189, "obj2": 0.14700040684257382}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4922092258188905}, {"determining": "Max( Max( Min( ( ACS - AMS ) ,Max( FirstVNF_Mem_Server,PN ) ),DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( ( RRSe + RCSe ),CS ) / ( MUR + RMSe ) ) - RCSe ) * ( DS + Min( MUC ,( ( MUR + RMSe ) - ( MLU * RCSe ) ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7420839327600507}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU - MDR ) ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,CRS ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - RMSe ) * ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}, {"determining": "( ( PN * FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,Min( MUM ,RCSe ) ) / ( ( ( CS * MUC ) / ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.15908137718957957}, {"determining": "( ( ACS - CRS ) * Min( ( ( FirstVNF_Mem_Server - ARS ) * PN ) ,( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( ( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8280847951459914}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4148455860775099}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( DS / MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( RMSe - ( Min( Max( RMSe,RRSe ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.06981443793095266}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * MRS ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * ( MUM + MUM ) ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5590551181102362, "obj2": 0.25970330269633535}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( RRS ,( Min( MRS ,ARS ) + ( FirstVNF_CPU / ACS ) ) ) - ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RRSe ),( Max( ( DS - RMSe ),( RRSe / MUM ) ) / MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.08858267716535433, "obj2": 0.836243339688406}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUC ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4625984251968504, "obj2": 0.33563189362561074}, {"determining": "( Max( ARS,( ARS * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,MLU ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5806635287494404}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - RMSe ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.27689490892198637}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( Min( MRS ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( Min( ( DS - MUM ) ,Max( ( DS - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) ,RCSe ) ) )", "obj1": 0.9094488188976378, "obj2": 0.034513285902066454}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / MRS ) ),( Const + RRS ) ) - ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) )", "choosing": "( Min( ( RMSe + ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( ( ( MLU - CS ) - Max( ( MUM + MUM ),RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.18503937007874016, "obj2": 0.6621125988852679}, {"determining": "( Max( ARS,( FirstVNF_RAM_Server / ARS ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) )", "obj1": 0.7460629921259843, "obj2": 0.10964650548763867}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45462183458827965}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * BR ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.38188976377952755, "obj2": 0.43700220367603476}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5807086614173228, "obj2": 0.24772165258409434}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( RRS * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( MUC / MUM ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5452755905511811, "obj2": 0.2709542362477717}, {"determining": "( ( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUC ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.020847222597122524}, {"determining": "( Max( ( ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) * ( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / RCSe ) ) ,( ( ( ( RCSe - MUC ) - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.297244094488189, "obj2": 0.5519053898054707}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( Min( MRS ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.8818897637795275, "obj2": 0.04355603780097788}, {"determining": "( ( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( PN + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( MUC - ( Min( Min( RMSe ,MUC ) ,RCSe ) / RRSe ) ) ,MUM ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.012194458505720889}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,FirstVNF_CPU_Server ) + ACS ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,MUM ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) - Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6238810595074885}, {"determining": "( ( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.013070775401638045}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.41141732283464566, "obj2": 0.4074953980674098}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( Min( MRS ,Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( Min( ( DS - MUM ) ,Max( RCSe,( MUC / MUM ) ) ) * ( MLU - DS ) ) ) ,RCSe ) ) )", "obj1": 0.90748031496063, "obj2": 0.03559017055934515}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( BR / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2212825838465312}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU * MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) * RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09554079549425176}, {"determining": "( ( ( Max( ( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( FirstVNF_Mem - PN ) ) - Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,( AMS + Const ) ) ) - ( Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,Max( DDR,CRS ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( AMS * FirstVNF_CPU ) ) ) ),( ( ( Min( MRS ,FirstVNF_Mem_Server ) + ( MRS * AMS ) ) - ( ( FirstVNF_Mem + BR ) + ( BR + BR ) ) ) / Max( ( Max( MRS,FirstVNF_Mem ) - ( PN + FirstVNF_Mem_Server ) ),( ( FirstVNF_CPU_Server + AMS ) * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) - ( ( ( ( ( FirstVNF_CPU_Server + Const ) * ( FirstVNF_Mem + PN ) ) - ( Max( BR,FirstVNF_Mem ) / Max( Const,Const ) ) ) + ( ( Max( DDR,FirstVNF_Mem_Server ) + Max( DDR,CRS ) ) * Min( Min( FirstVNF_CPU ,ACS ) ,( PN - MRS ) ) ) ) - Min( Max( Min( ( ACS - MRS ) ,Min( RRS ,BR ) ),Max( ( AMS - FirstVNF_RAM_Server ),Max( RRS,FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_CPU_Server ,Const ) + ( BR / FirstVNF_CPU_Server ) ) + ( Min( FirstVNF_RAM ,PN ) * ( FirstVNF_CPU_Server * ACS ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_CPU_Server * MDR ) / ( FirstVNF_RAM * ARS ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( MRS + RRS ) ) ) * Max( ( Max( BR,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,ACS ) ),( Max( FirstVNF_RAM,ACS ) * Max( BR,MRS ) ) ) ) - ( Min( Min( Max( FirstVNF_Mem_Server,MDR ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,Min( ( DDR * FirstVNF_RAM_Server ) ,( ACS + ARS ) ) ) * Max( Max( ( PN - ARS ),Min( FirstVNF_RAM_Server ,PN ) ),Min( ( ACS * DDR ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Max( ( ( ( Min( ACS ,PN ) / ( PN / FirstVNF_RAM_Server ) ) - ( Min( PN ,BR ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) + ( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server * DDR ) ) / Max( Max( MDR,FirstVNF_RAM ),Min( ACS ,FirstVNF_Mem_Server ) ) ) ),Max( Min( ( Min( Const ,MDR ) - Max( PN,BR ) ) ,( ( Const * FirstVNF_Mem ) / Min( BR ,FirstVNF_CPU_Server ) ) ),( ( ( DDR - FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server - Const ) ) / Max( Min( ACS ,RRS ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ) ) ) / Min( ( Min( Min( ( ( ( DDR - FirstVNF_RAM ) * ( ARS * Const ) ) * ( ( MDR + AMS ) * ( MDR / PN ) ) ) ,( ( ( CRS / FirstVNF_RAM ) + Min( ARS ,FirstVNF_RAM ) ) * Max( ( DDR / RRS ),Max( ARS,DDR ) ) ) ) ,( Min( Min( Min( CRS ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,( ( CRS + CRS ) + Max( FirstVNF_Mem,MRS ) ) ) - ( ( ( RRS - BR ) - ( MRS * MDR ) ) - ( ( CRS - FirstVNF_CPU ) / ( BR - FirstVNF_CPU ) ) ) ) ) / ( Max( ( ( ( BR - FirstVNF_Mem_Server ) / ( DDR - DDR ) ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) - ( RRS - MDR ) ) ),( ( Max( FirstVNF_RAM,PN ) - Max( ACS,PN ) ) / ( ( FirstVNF_CPU - PN ) + Max( BR,FirstVNF_CPU_Server ) ) ) ) + Min( ( Min( Max( PN,PN ) ,Max( BR,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem * FirstVNF_RAM ) + ( ARS * BR ) ) ) ,( ( ( PN / BR ) + Max( BR,MDR ) ) + ( ( MDR * AMS ) + ( AMS + DDR ) ) ) ) ) ) ,( ( ( ( ( Max( DDR,FirstVNF_RAM ) + ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) * ( ( MDR - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) - ( ( Min( CRS ,RRS ) + ( CRS + BR ) ) + ( Max( FirstVNF_Mem_Server,ACS ) - ( PN * ARS ) ) ) ) / ( Max( ( ( RRS * FirstVNF_CPU_Server ) - ( AMS * MRS ) ),( ( RRS / MDR ) / ( FirstVNF_CPU / DDR ) ) ) - Max( Max( ( PN / FirstVNF_Mem_Server ),( DDR - RRS ) ),( Min( FirstVNF_CPU_Server ,DDR ) - ( AMS + CRS ) ) ) ) ) / Min( Min( ( ( ( AMS / MRS ) / ( MDR - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( DDR * DDR ) ) ) ,( Min( ( FirstVNF_Mem + FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem,AMS ) ) + ( ( FirstVNF_RAM_Server + MDR ) * Max( DDR,FirstVNF_Mem ) ) ) ) ,( Max( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( DDR + Const ) ),( ( AMS + Const ) - ( ARS - FirstVNF_RAM_Server ) ) ) + Min( Min( ( FirstVNF_CPU - RRS ) ,Min( BR ,FirstVNF_CPU ) ) ,( ( RRS * FirstVNF_Mem ) + Min( BR ,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( ( ( Max( Max( RRSe,MUM ),( DS / MLU ) ) + ( Max( CS,DS ) - Min( MUM ,DS ) ) ) - ( Max( ( RCSe + CS ),( RCSe / RCSe ) ) * ( ( RCSe - RMSe ) + ( RCSe - DS ) ) ) ) / ( Max( ( ( RMSe / MUM ) * Max( MUC,MUC ) ),Max( ( MUM / RCSe ),( MUM * CS ) ) ) * Max( ( Min( MUM ,MUC ) * ( MUR / MUM ) ),( Min( MLU ,MUR ) * ( CS * MUR ) ) ) ) ) * Max( Max( ( ( ( CS / RCSe ) / ( RRSe + MUC ) ) / ( Max( CS,MUM ) + ( MUM * MUR ) ) ),( Max( ( MUM / MUM ),Min( MUM ,MUM ) ) + ( ( MUR * MUM ) * ( MLU + DS ) ) ) ),( ( Max( ( DS / RCSe ),( MUR + RMSe ) ) * ( ( DS + MLU ) * ( MUM + MUM ) ) ) - ( Max( ( MLU + MLU ),Min( MLU ,RMSe ) ) * Max( ( RRSe - CS ),( CS + MUR ) ) ) ) ) ) + ( ( Min( Max( ( Min( RRSe ,RCSe ) + ( MUR * DS ) ),( ( MLU * RMSe ) - ( RRSe - RRSe ) ) ) ,( Max( ( MUM * DS ),Max( CS,DS ) ) + ( ( MUR + MUM ) / ( DS / MUR ) ) ) ) + Max( ( ( ( RCSe * DS ) + ( RMSe / MUC ) ) - Max( Min( RMSe ,MUR ),( RMSe + RRSe ) ) ),( ( ( MLU + DS ) - ( MUC / DS ) ) / ( ( MLU / RMSe ) * Max( DS,RRSe ) ) ) ) ) * ( Min( Max( ( ( MUM / RRSe ) * Max( RMSe,RRSe ) ),Min( ( DS + RCSe ) ,Min( MUR ,MUM ) ) ) ,( Min( ( MLU / MUC ) ,( RMSe * RRSe ) ) / ( ( RCSe / DS ) * ( MUM - DS ) ) ) ) + Max( Min( ( ( MUR - MUC ) * ( CS + MUM ) ) ,( Min( MUM ,RCSe ) - ( MUM + MUC ) ) ),Max( ( ( MUC + MUC ) / ( RRSe - MUC ) ),Min( ( MUM + MUC ) ,( RMSe * DS ) ) ) ) ) ) ),Max( ( ( ( ( ( ( MLU / RRSe ) + Max( CS,DS ) ) / Min( ( CS - MUC ) ,( MLU / RRSe ) ) ) + Max( Max( Max( MUM,MLU ),( MUM - RRSe ) ),Min( Min( RMSe ,MUR ) ,( MUM + RMSe ) ) ) ) + ( ( Min( ( CS - MUR ) ,Min( RRSe ,MUM ) ) / Max( Min( MUR ,RCSe ),Max( MLU,MLU ) ) ) * ( ( Min( CS ,RRSe ) * ( RMSe * MUM ) ) + Max( Min( RRSe ,MUM ),( MUM * MUM ) ) ) ) ) - ( ( ( ( Min( MUR ,RRSe ) + ( RMSe + DS ) ) + ( Min( MUC ,RCSe ) / ( RRSe - MUM ) ) ) - Max( Max( ( MUR + MUC ),Max( MUC,MLU ) ),Max( ( MUM - MUM ),( MUR + RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS / RMSe ) ) + Max( Min( CS ,CS ),( MUM / DS ) ) ) ,( ( ( MUC + DS ) * ( MUM * RRSe ) ) / ( Max( MUR,RCSe ) / Max( CS,MUM ) ) ) ) ) ),( ( Min( ( ( Max( RCSe,CS ) / ( RCSe * DS ) ) - Max( Max( MLU,RRSe ),Min( DS ,RCSe ) ) ) ,( Min( Min( RMSe ,CS ) ,( MUM - MLU ) ) / Min( ( RRSe - MLU ) ,( MLU + RRSe ) ) ) ) * Max( ( ( Max( MUC,MLU ) + Max( RMSe,MUM ) ) * Min( ( RMSe * RCSe ) ,Min( MUC ,MUM ) ) ),( ( ( CS - DS ) * Max( MUM,RMSe ) ) - ( ( MUM / MUR ) - ( RCSe / RCSe ) ) ) ) ) - Min( ( ( ( ( MUC + RCSe ) * Min( MUM ,RRSe ) ) + Min( Min( MLU ,DS ) ,( RRSe * CS ) ) ) * ( ( ( RMSe / RMSe ) + Min( RMSe ,RCSe ) ) * ( ( RMSe / DS ) / ( RMSe - CS ) ) ) ) ,( ( ( ( MUC / DS ) * ( CS - MUC ) ) + ( ( MUR - MUC ) + Min( RRSe ,MUR ) ) ) + ( ( Min( MLU ,MUR ) - ( MUM * CS ) ) - Max( ( RCSe + MUR ),( MUC - DS ) ) ) ) ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0025447701598224964}, {"determining": "( ( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) * ( FirstVNF_CPU / DDR ) ) ),PN ) - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS + MUC ) - ( MUM + MUC ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.020847222597122524}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( FirstVNF_CPU / ACS ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( RCSe * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( RRSe - RMSe ),( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5644715800887844}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.31496062992125984, "obj2": 0.52130636055311}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / MRS ) ),( Const + RRS ) ) - ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) )", "choosing": "( Min( ( RMSe + ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( ( ( MLU - CS ) - Max( ( MUM + MUM ),RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.1968503937007874, "obj2": 0.6461852313517238}], "33": [{"determining": "( ( Min( MRS ,PN ) - ( ( ACS * AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( ( Min( MUR ,MUR ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS + MUC ) - ( MUM + MUC ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( MDR / Max( Max( ( ( ( Const + PN ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( ACS / FirstVNF_Mem ) ) ),PN ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( FirstVNF_Mem_Server + RRS ) ) ) * ( Min( FirstVNF_CPU ,ACS ) * ( ARS / FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( ( RRSe - DS ) / MUC ) ) - Max( RRSe,( Min( RRSe ,DS ) / MUM ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8716571829225804}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( ( MRS + PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ARS ) ) ),PN ) ) )", "choosing": "( Max( ( ( DS + DS ) - ( ( Min( DS ,RMSe ) / DS ) / Min( ( DS * RMSe ) ,( DS - RCSe ) ) ) ),Min( Max( ( DS - MUC ),( ( ( RRSe * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.18110236220472442, "obj2": 0.6583490472409438}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ( ARS - ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.18557680781933025}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( BR / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2212825838465312}, {"determining": "( ( ACS - CRS ) * Min( ( ( FirstVNF_Mem_Server - ARS ) * PN ) ,( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45462183458827965}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( Max( ARS,( ARS * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,MLU ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5806635287494404}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( DS / MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( RMSe - ( Min( Max( RMSe,RRSe ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.06981443793095266}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.43700787401574803, "obj2": 0.36975802010505243}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( FirstVNF_Mem - ( MDR * Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / DDR ) ) ),PN ) ) )", "choosing": "( Max( ( RMSe * RRSe ),Min( ( ( DS - MUC ) - ( ( ( CS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.8700787401574803, "obj2": 0.05610211949488544}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU - MDR ) ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,CRS ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - RMSe ) * ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}, {"determining": "( ( PN * FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,Min( MUM ,RCSe ) ) / ( ( ( CS * MUC ) / ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.15908137718957957}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( RRS ,( Min( MRS ,ARS ) + ( FirstVNF_CPU / ACS ) ) ) - ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RRSe ),( Max( ( DS - RMSe ),( RRSe / MUM ) ) / MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( ( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8280847951459914}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * MRS ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * ( MUM + MUM ) ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5590551181102362, "obj2": 0.25970330269633535}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( Min( Min( MRS ,PN ) ,( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) / ( DS - DS ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( Max( Max( MLU,CS ),( MLU + MUC ) ) - Max( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ),( MLU - ( CS - CS ) ) ) ) / ( DS - CS ) ) ) )", "obj1": 0.7047244094488189, "obj2": 0.14700040684257382}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / MRS ) ),( Const + RRS ) ) - ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) )", "choosing": "( Min( ( RMSe + ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,( ( ( MLU - CS ) - Max( ( MUM + MUM ),RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.1968503937007874, "obj2": 0.6461852313517238}, {"determining": "( Max( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.31496062992125984, "obj2": 0.52130636055311}, {"determining": "( ( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - Max( MUM,MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.9468503937007874, "obj2": 0.020817841891897435}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4148455860775099}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5807086614173228, "obj2": 0.24772165258409434}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.08858267716535433, "obj2": 0.836243339688406}, {"determining": "( Max( ARS,( FirstVNF_RAM_Server / ARS ) ) - ( ( MDR / Max( ( ( RRS / RRS ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( Max( RCSe,( MUC / MUM ) ),CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12903236742322324}, {"determining": "( Max( ( ( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ) * ( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / RCSe ) ) ,( ( ( ( RCSe - MUC ) - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.2933070866141732, "obj2": 0.5497202334456769}, {"determining": "( ( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ) / FirstVNF_Mem ) - ( ( Const - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( DS - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,( Max( ( RCSe - MUC ),( MUC / MUM ) ) / RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.2125984251968504, "obj2": 0.634579034049191}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU * MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) * RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09554079549425176}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4922092258188905}, {"determining": "( Max( ARS,( FirstVNF_RAM_Server / ARS ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.07807468362525988}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,ARS ) + ( RRS - FirstVNF_RAM ) ) ) - ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( DS - RMSe ),( RRSe / ( MUM + MUM ) ) ) / MUC ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.567588996776195}, {"determining": "( ( ACS - AMS ) * ( MDR + Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( ( ACS - MRS ) + ( FirstVNF_CPU / ACS ) ) ) - ( RRS / BR ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( DS - DS ) ) * ( ( RCSe / MUR ) - ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( DS - RMSe ),MUC ) / MUC ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5307349570826819}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( AMS / FirstVNF_CPU ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( DS / MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( RMSe - ( Min( ( ( DS * MUC ) - ( RCSe + MUM ) ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.07647469005598473}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) / ( DS - DS ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) / ( DS - RMSe ) ) ) )", "obj1": 0.7244094488188977, "obj2": 0.1351761554684329}, {"determining": "( ( BR / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( RRSe - RMSe ),( CS / MUR ) ) / MUC ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.27996620372838393}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( Min( FirstVNF_RAM ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( Min( ( MLU - MUM ) ,Max( ( DS - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) ,RCSe ) ) )", "obj1": 0.9094488188976378, "obj2": 0.034513285902066454}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.41141732283464566, "obj2": 0.4074953980674098}, {"determining": "Max( Max( Min( ( ACS - AMS ) ,Max( FirstVNF_Mem_Server,PN ) ),DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( ( RRSe + RCSe ),CS ) / ( MUR + RMSe ) ) - RCSe ) * ( DS + Min( MUC ,( ( MUR + RMSe ) - ( MLU * RCSe ) ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7420839327600507}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUC ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4625984251968504, "obj2": 0.33563189362561074}, {"determining": "( ( ACS - AMS ) * ( ( ( ( Min( FirstVNF_Mem ,( Min( DDR ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( RRSe * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.5059055118110236, "obj2": 0.2889863667780188}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_CPU / ACS ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - RRSe ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4347334971097038}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,FirstVNF_CPU_Server ) + ACS ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,MUM ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) - Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6238810595074885}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( Min( MRS ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( ( Max( Max( RRSe,MUM ),( DS / MLU ) ) + ( Max( CS,DS ) - Min( MUM ,DS ) ) ) - ( Max( ( RCSe + CS ),( RCSe / RCSe ) ) * ( ( RCSe - RMSe ) + ( RCSe - DS ) ) ) ) / ( Max( ( ( RMSe / MUM ) * Max( MUC,MUC ) ),Max( ( MUM / RCSe ),( MUM * CS ) ) ) * Max( ( Min( MUM ,MUC ) * ( MUR / MUM ) ),( Min( MLU ,MUR ) * ( CS * MUR ) ) ) ) ) * Max( Max( ( ( ( CS / RCSe ) / ( RRSe + MUC ) ) / ( Max( CS,MUM ) + ( MUM * MUR ) ) ),( Max( ( MUM / MUM ),Min( MUM ,MUM ) ) + ( ( MUR * MUM ) * ( MLU + DS ) ) ) ),( ( Max( ( DS / RCSe ),( MUR + RMSe ) ) * ( ( DS + MLU ) * ( MUM + MUM ) ) ) - ( Max( ( MLU + MLU ),Min( MLU ,RMSe ) ) * Max( ( RRSe - CS ),( CS + MUR ) ) ) ) ) ) + ( ( Min( Max( ( Min( RRSe ,RCSe ) + ( MUR * DS ) ),( ( MLU * RMSe ) - ( RRSe - RRSe ) ) ) ,( Max( ( MUM * DS ),Max( CS,DS ) ) + ( ( MUR + MUM ) / ( DS / MUR ) ) ) ) + Max( ( ( ( RCSe * DS ) + ( RMSe / MUC ) ) - Max( Min( RMSe ,MUR ),( RMSe + RRSe ) ) ),( ( ( MLU + DS ) - ( MUC / DS ) ) / ( ( MLU / RMSe ) * Max( DS,RRSe ) ) ) ) ) * ( Min( Max( ( ( MUM / RRSe ) * Max( RMSe,RRSe ) ),Min( ( DS + RCSe ) ,Min( MUR ,MUM ) ) ) ,( Min( ( MLU / MUC ) ,( RMSe * RRSe ) ) / ( ( RCSe / DS ) * ( MUM - DS ) ) ) ) + Max( Min( ( ( MUR - MUC ) * ( CS + MUM ) ) ,( Min( MUM ,RCSe ) - ( MUM + MUC ) ) ),Max( ( ( MUC + MUC ) / ( RRSe - MUC ) ),Min( ( MUM + MUC ) ,( RMSe * DS ) ) ) ) ) ) ),Max( ( ( ( ( ( ( MLU / RRSe ) + Max( CS,DS ) ) / Min( ( CS - MUC ) ,( MLU / RRSe ) ) ) + Max( Max( Max( MUM,MLU ),( MUM - RRSe ) ),Min( Min( RMSe ,MUR ) ,( MUM + RMSe ) ) ) ) + ( ( Min( ( CS - MUR ) ,Min( RRSe ,MUM ) ) / Max( Min( MUR ,RCSe ),Max( MLU,MLU ) ) ) * ( ( Min( CS ,RRSe ) * ( RMSe * MUM ) ) + Max( Min( RRSe ,MUM ),( MUM * MUM ) ) ) ) ) - ( ( ( ( Min( MUR ,RRSe ) + ( RMSe + DS ) ) + ( Min( MUC ,RCSe ) / ( RRSe - MUM ) ) ) - Max( Max( ( MUR + MUC ),Max( MUC,MLU ) ),Max( ( MUM - MUM ),( MUR + RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS / RMSe ) ) + Max( Min( CS ,CS ),( MUM / DS ) ) ) ,( ( ( MUC + DS ) * ( MUM * RRSe ) ) / ( Max( MUR,RCSe ) / Max( CS,MUM ) ) ) ) ) ),( ( Min( ( ( Max( RCSe,CS ) / ( RCSe * DS ) ) - Max( Max( MLU,RRSe ),Min( DS ,RCSe ) ) ) ,( Min( Min( RMSe ,CS ) ,( MUM - MLU ) ) / Min( ( RRSe - MLU ) ,( MLU + RRSe ) ) ) ) * Max( ( ( Max( MUC,MLU ) + Max( RMSe,MUM ) ) * Min( ( RMSe * RCSe ) ,Min( MUC ,MUM ) ) ),( ( ( CS - DS ) * Max( MUM,RMSe ) ) - ( ( MUM / MUR ) - ( RCSe / RCSe ) ) ) ) ) - Min( ( ( ( ( MUC + RCSe ) * Min( MUM ,RRSe ) ) + Min( Min( MLU ,DS ) ,( RRSe * CS ) ) ) * ( ( ( RMSe / RMSe ) + Min( RMSe ,RCSe ) ) * ( ( RMSe / DS ) / ( RMSe - CS ) ) ) ) ,( ( ( ( MUC / DS ) * ( CS - MUC ) ) + Max( ( MUR - MUC ),Min( RRSe ,MUR ) ) ) + ( ( Min( MLU ,MUR ) - ( MUM * CS ) ) - Max( ( RCSe + MUR ),( MUC - DS ) ) ) ) ) ) ) )", "obj1": 0.889763779527559, "obj2": 0.041090021800594165}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUC ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4625984251968504, "obj2": 0.33563189362561074}], "34": [{"determining": "( ( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ) / FirstVNF_Mem ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( DS - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,( Max( ( RCSe - MUC ),( RRSe / MUM ) ) / RCSe ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS * AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( ( Min( MUR ,MUR ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS + MUC ) - ( MUM + MUC ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( FirstVNF_Mem_Server + RRS ) ) ) * ( Min( FirstVNF_CPU ,ACS ) * ( ARS / FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( ( RRSe - DS ) / MUC ) ) - Max( RRSe,( Min( RRSe ,DS ) / MUM ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8716571829225804}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( Max( ARS,( ARS * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,MLU ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5806635287494404}, {"determining": "( Max( ( ( Max( ( ARS - FirstVNF_CPU_Server ),( ( Min( MRS ,ARS ) + ( RRS - FirstVNF_RAM ) ) + RRS ) ) * ( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( Max( ( DS - RMSe ),( RRSe / ( MUM + MUM ) ) ) / MUC ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / RCSe ) ) ,( ( ( ( RCSe - MUC ) - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.281496062992126, "obj2": 0.5424886845519}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45462183458827965}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( BR / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2212825838465312}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU / RRS ) * ( RRS / FirstVNF_Mem ) ) / ARS ) ) ),PN ) ) )", "choosing": "( Max( ( ( ( ( MUC / DS ) * ( CS - MUC ) ) + ( ( MUR - MUC ) + Min( RRSe ,MUR ) ) ) - ( ( Min( DS ,RMSe ) / CS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( DS - MUC ) - ( ( ( RRSe * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.16929133858267717, "obj2": 0.7100959058674758}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_CPU / ACS ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - RRSe ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4347334971097038}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * MRS ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * ( MUM + MUM ) ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5590551181102362, "obj2": 0.25970330269633535}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU - MDR ) ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,CRS ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - RMSe ) * ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_RAM ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( ( MRS - PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ARS ) ) ),PN ) ) )", "choosing": "( Max( ( ( DS + MUC ) - ( ( Min( CS ,RMSe ) / DS ) / ( ( MUC * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( RRSe - MUC ) - ( ( ( RRSe * MUC ) - ( MUM + RMSe ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.18110236220472442, "obj2": 0.6583490472409438}, {"determining": "( ACS - ( MDR / Max( ( ( ( MRS / PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( DS + MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( RMSe - ( Min( Max( RMSe,RRSe ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.06978859751001282}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4922092258188905}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( FirstVNF_Mem - ( MDR * Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / DDR ) ) ),PN ) ) )", "choosing": "( Max( ( RMSe * RRSe ),Min( ( ( DS - MUC ) - ( ( ( CS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.8700787401574803, "obj2": 0.05610211949488544}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( ( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8280847951459914}, {"determining": "( ( ARS - ACS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RMSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.18557680781933025}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( RRS ,( Min( MRS ,ARS ) + ( FirstVNF_CPU / ACS ) ) ) - ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RRSe ),( Max( ( DS - RMSe ),( RRSe / MUM ) ) / MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.41141732283464566, "obj2": 0.4074953980674098}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( ( ACS - AMS ) * ( MDR + Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( ( ACS - MRS ) + ( FirstVNF_CPU / ACS ) ) ) - ( RRS / BR ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( DS - DS ) ) * ( ( RCSe / MUR ) - ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( DS - RMSe ),MUC ) / MUC ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5307349570826819}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.08858267716535433, "obj2": 0.836243339688406}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( Min( FirstVNF_RAM ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( Min( ( MLU - MUM ) ,Max( ( DS - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) ,RCSe ) ) )", "obj1": 0.9094488188976378, "obj2": 0.034513285902066454}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4148455860775099}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09935247125960175}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) ) )", "choosing": "( Min( ( ( ( CS - DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + Max( ( MLU * RCSe ),( RRSe * MUR ) ) ) )", "obj1": 0.7460629921259843, "obj2": 0.12423996181538842}, {"determining": "Max( Max( Min( ( ACS - AMS ) ,Max( FirstVNF_Mem_Server,PN ) ),DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( ( RRSe + RCSe ),CS ) / ( MUR + RMSe ) ) - RCSe ) * ( DS + Min( MUC ,( ( MUR + RMSe ) - ( MLU * RCSe ) ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7420839327600507}, {"determining": "( ( BR / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( RRSe - RMSe ),( CS / MUR ) ) / MUC ) ) ) )", "obj1": 0.5334645669291339, "obj2": 0.27510195946883415}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.43700787401574803, "obj2": 0.36975802010505243}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Min( ( RMSe * ( ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - Max( MUM,MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.3169291338582677, "obj2": 0.5115176201814353}, {"determining": "( ( ACS - CRS ) * Min( ( ( FirstVNF_Mem_Server - ARS ) * PN ) ,( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( FirstVNF_CPU - ( MDR / Max( ( Min( FirstVNF_RAM ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( Min( ( MLU - MUM ) ,Max( ( DS - RRSe ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) ,RCSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.011184553067058503}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.468503937007874, "obj2": 0.3329159953204231}, {"determining": "( ( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - Max( MUM,MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.9468503937007874, "obj2": 0.020817841891897435}, {"determining": "( ( ACS - AMS ) * ( ( ( ( Min( FirstVNF_Mem ,( Min( DDR ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( RRSe * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.5059055118110236, "obj2": 0.2889863667780188}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU * MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) * RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09554079549425176}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + RRS ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) / ( DS - DS ) ) ) ) ) / MUR ) ) * ( ( ( ( Min( RRSe ,DS ) / MUM ) - MLU ) + Min( RRSe ,MLU ) ) / ( ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) / ( DS - RMSe ) ) ) )", "obj1": 0.6771653543307087, "obj2": 0.2008252734486904}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - PN ) * ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS + MUC ) ) ) ) ) / MUR ) ) * ( ( ( CS + MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6100986677499032}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) / ( DS - DS ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) / ( DS - RMSe ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13486224448689943}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) + ( FirstVNF_CPU - DDR ) ) ),PN ) ) * Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( MUM / RCSe ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( RMSe / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.15908137718957957}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU * ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( RRSe - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Min( ( RRSe - RMSe ) ,( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.7047244094488189, "obj2": 0.14468660837982925}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( ARS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),RRS ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( DS - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( RCSe * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.49606299212598426, "obj2": 0.29439786573484317}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - ( ACS * AMS ) ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.4330708661417323, "obj2": 0.37354545837087527}, {"determining": "( ( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ) / FirstVNF_Mem ) - ( ( Const - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( DS - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,( Max( ( RCSe - MUC ),( MUC / MUM ) ) / RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.2125984251968504, "obj2": 0.634579034049191}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5807086614173228, "obj2": 0.24772165258409434}], "35": [{"determining": "( ( ( MRS + PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUM - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ) / FirstVNF_Mem ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( DS - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,( Max( ( RCSe - MUC ),( RRSe / MUM ) ) / RCSe ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( FirstVNF_Mem_Server + RRS ) ) ) * ( Min( FirstVNF_CPU ,ACS ) * ( ARS / FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( ( RRSe - DS ) / MUC ) ) - Max( RRSe,( Min( RRSe ,DS ) / MUM ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8716571829225804}, {"determining": "( ACS - ( MDR / Max( ( ( ( MRS / PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( DS + MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( RMSe - ( Min( Max( RMSe,RRSe ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.06978859751001282}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( Min( FirstVNF_RAM ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( Min( ( MLU - MUM ) ,Max( ( DS - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) ,RCSe ) ) )", "obj1": 0.9094488188976378, "obj2": 0.034513285902066454}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( Max( ( ( Max( ( ARS - FirstVNF_CPU_Server ),( ( Min( MRS ,ARS ) + ( RRS - FirstVNF_RAM ) ) + RRS ) ) * ( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( Max( ( DS - RMSe ),( RRSe / ( MUM + MUM ) ) ) / MUC ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / RCSe ) ) ,( ( ( ( RCSe - MUC ) - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.281496062992126, "obj2": 0.5424886845519}, {"determining": "( ( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ) / FirstVNF_Mem ) - ( ( Const - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( DS - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,( Max( ( RCSe - MUC ),( MUC / MUM ) ) / RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.2125984251968504, "obj2": 0.634579034049191}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU * ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( RRSe - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Min( ( RRSe - RMSe ) ,( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.6692913385826772, "obj2": 0.1805407888730903}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( BR / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2212825838465312}, {"determining": "( Max( ARS,( AMS + ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Min( ( RRSe - RMSe ) ,MUC ) ,MUC ) ) ) )", "obj1": 0.7854330708661418, "obj2": 0.08192402963022624}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU / RRS ) * ( RRS / FirstVNF_Mem ) ) / ARS ) ) ),PN ) ) )", "choosing": "( Max( ( ( ( ( MUC / DS ) * ( CS - MUC ) ) + ( ( MUR - MUC ) + Min( RRSe ,MUR ) ) ) - ( ( Min( DS ,RMSe ) / CS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( DS - MUC ) - ( ( ( RRSe * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.16929133858267717, "obj2": 0.7100959058674758}, {"determining": "( ( ACS - CRS ) * Min( ( ( FirstVNF_Mem_Server - ARS ) * PN ) ,( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_CPU / ACS ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - RRSe ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4347334971097038}, {"determining": "( Max( ARS,( ARS * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,MLU ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5806635287494404}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_RAM ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( ( MRS - PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ARS ) ) ),PN ) ) )", "choosing": "( Max( ( ( DS + MUC ) - ( ( Min( CS ,RMSe ) / DS ) / ( ( MUC * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( RRSe - MUC ) - ( ( ( RRSe * MUC ) - ( MUM + RMSe ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.18110236220472442, "obj2": 0.6583490472409438}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - Max( MUM,MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.46653543307086615, "obj2": 0.3317519802136855}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "Max( Max( Min( ( ACS - AMS ) ,Max( FirstVNF_Mem_Server,PN ) ),DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( ( RRSe + RCSe ),CS ) / ( MUR + RMSe ) ) - RCSe ) * ( DS + Min( MUC ,( ( MUR + RMSe ) - ( MLU * RCSe ) ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7420839327600507}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.7322834645669292, "obj2": 0.12234514404800269}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( ( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8280847951459914}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - PN ) * ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS + MUC ) ) ) ) ) / MUR ) ) * ( ( ( CS + MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6100986677499032}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.8720472440944882, "obj2": 0.05525460765297668}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.5807086614173228, "obj2": 0.24772165258409434}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_RAM ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( ( MRS - PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ARS ) ) ),PN ) ) )", "choosing": "( Max( ( ( DS + MUC ) - ( ( Min( CS ,RMSe ) / DS ) / ( ( MUC * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( RRSe - MUC ) - ( ( ( RRSe * MUC ) - ( MUM + RMSe ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.1830708661417323, "obj2": 0.6561701053963086}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU - MDR ) ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,CRS ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - RMSe ) * ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45462183458827965}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( RRS ,( Min( MRS ,ARS ) + ( FirstVNF_CPU / ACS ) ) ) - ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RRSe ),( Max( ( DS - RMSe ),( RRSe / MUM ) ) / MUC ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38886182724231255}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.08858267716535433, "obj2": 0.836243339688406}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4148455860775099}, {"determining": "( ( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - Max( MUM,MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.9448818897637795, "obj2": 0.02158721719101762}, {"determining": "( ( BR / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( RRSe - RMSe ),( CS / MUR ) ) / MUC ) ) ) )", "obj1": 0.5334645669291339, "obj2": 0.27510195946883415}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU * MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) * RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09554079549425176}, {"determining": "( ( ACS - AMS ) * ( MDR + Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( ( ACS - MRS ) + ( FirstVNF_CPU / ACS ) ) ) - ( RRS / BR ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( DS - DS ) ) * ( ( RCSe / MUR ) - ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( DS - RMSe ),MUC ) / MUC ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5307349570826819}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4922092258188905}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( FirstVNF_CPU - ( MDR / Max( ( Min( FirstVNF_RAM ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS + MUC ) - ( MUM + MUC ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.010921411377044977}, {"determining": "( FirstVNF_Mem - ( MDR * Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / DDR ) ) ),PN ) ) )", "choosing": "( Max( ( RMSe * RRSe ),Min( ( ( DS - MUC ) - ( ( ( CS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.8700787401574803, "obj2": 0.05610211949488544}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Min( ( RRSe - RMSe ) ,( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.718503937007874, "obj2": 0.13454959477510622}, {"determining": "( Min( ARS ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) / ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( MUM * RCSe ) * Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.27910217365685097}, {"determining": "( ( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.012897319130485366}, {"determining": "( ( ACS - AMS ) * ( ( ( ( Min( FirstVNF_Mem ,( Min( DDR ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( RRSe * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.5059055118110236, "obj2": 0.2889863667780188}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,( RRS * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( DS * MUC ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.5840677708387529}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * MRS ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * ( MUM + MUM ) ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5590551181102362, "obj2": 0.25970330269633535}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * MRS ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( Min( MDR ,PN ) / ( PN - ACS ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * ( MUM + MUM ) ) - ( MUC + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5590551181102362, "obj2": 0.25970330269633535}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.41141732283464566, "obj2": 0.4074953980674098}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) + ( FirstVNF_CPU - DDR ) ) ),PN ) ) * Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( MUM / RCSe ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( RMSe / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.15908137718957957}], "36": [{"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / Min( MRS ,PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( DS - RCSe ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUM - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( FirstVNF_Mem_Server + RRS ) ) ) * ( Min( FirstVNF_CPU ,ACS ) * ( ARS / FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( ( RRSe - DS ) / MUC ) ) - Max( RRSe,( Min( RRSe ,DS ) / MUM ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8716571829225804}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( Max( ARS,( ARS * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.42322834645669294, "obj2": 0.37766722019552157}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45462183458827965}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU * ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( RRSe - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Min( ( RRSe - RMSe ) ,( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.6692913385826772, "obj2": 0.1805407888730903}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( Min( FirstVNF_RAM ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( Min( ( MLU - MUM ) ,Max( ( DS - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) ,RCSe ) ) )", "obj1": 0.9094488188976378, "obj2": 0.034513285902066454}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU / RRS ) * ( RRS / FirstVNF_Mem ) ) / ARS ) ) ),PN ) ) )", "choosing": "( Max( ( ( ( ( MUC / DS ) * ( CS - MUC ) ) + ( ( MUR - MUC ) + Min( RRSe ,MUR ) ) ) - ( ( Min( DS ,RMSe ) / CS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( DS - MUC ) - ( ( ( RRSe * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.16929133858267717, "obj2": 0.7100959058674758}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( ( ACS - CRS ) * Min( ( ( FirstVNF_Mem_Server - ARS ) * PN ) ,( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Min( ( RRSe - RMSe ) ,( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.718503937007874, "obj2": 0.13454959477510622}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_CPU / ACS ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - RRSe ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4347334971097038}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_RAM ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( ( MRS - PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ARS ) ) ),PN ) ) )", "choosing": "( Max( ( ( DS + MUC ) - ( ( Min( CS ,RMSe ) / DS ) / ( ( MUC * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( RRSe - MUC ) - ( ( ( RRSe * MUC ) - ( MUM + RMSe ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.18110236220472442, "obj2": 0.6583490472409438}, {"determining": "Max( Max( Min( ( ACS - AMS ) ,Max( FirstVNF_Mem_Server,PN ) ),DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( ( RRSe + RCSe ),CS ) / ( MUR + RMSe ) ) - RCSe ) * ( DS + Min( MUC ,( ( MUR + RMSe ) - ( MLU * RCSe ) ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7420839327600507}, {"determining": "( Max( ARS,( Const * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( RMSe * ( ( ( ( DS - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,MLU ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.41141732283464566, "obj2": 0.3971495503277104}, {"determining": "( ( ACS - AMS ) * ( MDR + Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( ( ACS - MRS ) + ( FirstVNF_CPU / ACS ) ) ) - ( RRS / BR ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( DS - DS ) ) * ( ( RCSe / MUR ) - ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( DS - RMSe ),MUC ) / MUC ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5307349570826819}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU - MDR ) ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,CRS ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - RMSe ) * ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - DDR ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) * Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.0984251968503937, "obj2": 0.8263064068473337}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( RRSe - MUM ),( CS / MUM ) ) / MUC ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5216865826282123}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( ( ARS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4148455860775099}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4922092258188905}, {"determining": "( ( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ) / FirstVNF_Mem ) - ( ( Const - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( DS - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,( Max( ( RCSe - MUC ),( MUC / MUM ) ) / RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.2125984251968504, "obj2": 0.634579034049191}, {"determining": "( ( ACS - AMS ) * ( ( ( ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - MDR ) ) + ( RRS / RRS ) ) + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( RRSe * MUC ) - RRSe ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5678794670305717}, {"determining": "( FirstVNF_Mem - ( MDR * Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / DDR ) ) ),PN ) ) )", "choosing": "( Max( ( RMSe * RRSe ),Min( ( ( DS - MUC ) - ( ( ( CS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.8700787401574803, "obj2": 0.05610211949488544}, {"determining": "( ACS - ( MDR / Max( ( ( ( MRS / PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( DS + MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( RMSe - ( Min( Max( RMSe,RRSe ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.06978859751001282}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS + MUC ) - ( MUM + MUC ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.8818897637795275, "obj2": 0.043728168373896974}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU * MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) * RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10195241360886764}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( BR / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2212825838465312}, {"determining": "( Max( ( ( Max( ( ARS - FirstVNF_CPU_Server ),( ( Min( MRS ,ARS ) * ( RRS - FirstVNF_RAM ) ) + RRS ) ) * ( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( Max( ( DS - RMSe ),( RRSe / ( CS + MUM ) ) ) / MUC ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / RCSe ) ) ,( ( ( ( RCSe - MUC ) - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.281496062992126, "obj2": 0.5424886845519}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( ( MRS - PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / Const ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ARS ) ) ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( DS - CS ) - Max( MUC,RMSe ) ) + ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,( Max( ( RCSe - MUC ),( MUC / MUM ) ) / RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.19094488188976377, "obj2": 0.6508682513138762}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU * MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) * RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09554079549425176}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) + ( FirstVNF_CPU - DDR ) ) ),PN ) ) * Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( MUM / RCSe ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( RMSe / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.15908137718957957}, {"determining": "( ( BR / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( RRSe - RMSe ),( CS / MUR ) ) / MUC ) ) ) )", "obj1": 0.5334645669291339, "obj2": 0.27510195946883415}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) + ( FirstVNF_CPU - DDR ) ) ),PN ) ) * Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( MUM / RCSe ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( RMSe / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.15908137718957957}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( ( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.012897319130485366}, {"determining": "( Max( ARS,( ARS * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,MLU ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5806635287494404}, {"determining": "( ( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - Max( MUM,MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.9448818897637795, "obj2": 0.02158721719101762}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS + MUC ) - ( MUM + MUC ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.08180892708222023}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.08858267716535433, "obj2": 0.836243339688406}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.47244094488188976, "obj2": 0.32963945051569277}, {"determining": "( Min( ARS ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) / ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( MUM * RCSe ) * Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.27910217365685097}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,( RRS * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( DS * MUC ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.5840677708387529}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / Max( FirstVNF_CPU,( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( DS - MUC ) - ( ( ( DS + MUC ) - ( MUM + MUC ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.7381889763779528, "obj2": 0.12090098308653786}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * MRS ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * ( MUM + MUM ) ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5590551181102362, "obj2": 0.25970330269633535}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ),Min( ( ( DS - MUC ) - ( ( ( DS * ( MUM + MUM ) ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5590551181102362, "obj2": 0.25970330269633535}], "37": [{"determining": "( ACS - ( ( ( Const - FirstVNF_CPU ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe - DS ) - ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + Max( ( MLU * RCSe ),( RRSe * MUR ) ) ) ) ) - Max( RRSe,( RMSe - ( Min( Max( RMSe,RRSe ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / Min( MRS ,PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( ( DS - RCSe ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( FirstVNF_Mem_Server + RRS ) ) ) * ( Min( FirstVNF_CPU ,ACS ) * ( ARS / FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( ( RRSe - DS ) / MUC ) ) - Max( RRSe,( Min( RRSe ,DS ) / MUM ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8716571829225804}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( BR / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2212825838465312}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_RAM ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( ( MRS - PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ARS ) ) ),PN ) ) )", "choosing": "( Max( ( ( DS + MUC ) - ( ( Min( CS ,RMSe ) / DS ) / ( ( MUC * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( RRSe - MUC ) - ( ( ( RRSe * MUC ) - ( MUM + RMSe ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.18110236220472442, "obj2": 0.6583490472409438}, {"determining": "( FirstVNF_Mem - ( MDR * Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / DDR ) ) ),PN ) ) )", "choosing": "( Max( ( RMSe * RRSe ),Min( ( ( DS - MUC ) - ( ( ( CS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.8700787401574803, "obj2": 0.05610211949488544}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( ( ACS - CRS ) * Min( ( ( FirstVNF_Mem_Server - ARS ) * PN ) ,( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU / RRS ) * ( RRS / FirstVNF_Mem ) ) / ARS ) ) ),PN ) ) )", "choosing": "( Max( ( ( ( ( MUC / DS ) * ( CS - MUC ) ) + ( ( MUR - MUC ) + Min( RRSe ,MUR ) ) ) - ( ( Min( DS ,RMSe ) / CS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( DS - MUC ) - ( ( ( RRSe * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.16929133858267717, "obj2": 0.7100959058674758}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.47244094488188976, "obj2": 0.32963945051569277}, {"determining": "Max( Max( Min( ( ACS - AMS ) ,Max( FirstVNF_Mem_Server,PN ) ),DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( ( RRSe + RCSe ),CS ) / ( MUR + RMSe ) ) - RCSe ) * ( DS + Min( MUC ,( ( MUR + RMSe ) - ( MLU * RCSe ) ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7420839327600507}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU - MDR ) ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,CRS ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - RMSe ) * ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - DDR ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) * Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.0984251968503937, "obj2": 0.8263064068473337}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4922092258188905}, {"determining": "( ACS - ( MDR / Max( ( ( ( MRS / PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( DS + MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( RMSe - ( Min( Max( RMSe,RRSe ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.06978859751001282}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( RMSe * ( ( ( ( DS - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,MLU ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6292988368076817}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( ( MRS - PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / Const ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ARS ) ) ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( DS - CS ) - Max( MUC,RMSe ) ) + ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,( Max( ( RCSe - MUC ),( MUC / MUM ) ) / RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.19094488188976377, "obj2": 0.6508682513138762}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ),Min( ( ( DS - MUC ) - ( ( ( DS * ( MUM + MUM ) ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5590551181102362, "obj2": 0.25970330269633535}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( RRSe - MUM ),( CS / MUM ) ) / MUC ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5216865826282123}, {"determining": "( Max( ( ( Max( ( ARS - FirstVNF_CPU_Server ),( ( Min( MRS ,ARS ) * ( RRS - FirstVNF_RAM ) ) + RRS ) ) * ( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( Max( ( DS - RMSe ),( RRSe / ( CS + MUM ) ) ) / MUC ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / RCSe ) ) ,( ( ( ( RCSe - MUC ) - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.281496062992126, "obj2": 0.5424886845519}, {"determining": "( Max( ARS,BR ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.5019685039370079, "obj2": 0.2901990751507685}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( RRS / Const ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( ( Min( ( Max( ( DS - RMSe ),MUC ) / MUC ) ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.44517984295468377}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( PN * MRS ) + FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * ( MUM + MUM ) ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5590551181102362, "obj2": 0.25970330269633535}, {"determining": "( ( BR / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( RRSe - RMSe ),( CS / MUR ) ) / MUC ) ) ) )", "obj1": 0.5334645669291339, "obj2": 0.27510195946883415}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - RRSe ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.7086614173228346, "obj2": 0.14017663131568714}, {"determining": "( Min( ARS ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) / ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( MUM * RCSe ) * Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.27910217365685097}, {"determining": "( ( ACS - AMS ) * ( MDR + Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( ( ACS - MRS ) + ( FirstVNF_CPU / ACS ) ) ) - ( RRS / BR ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( DS - DS ) ) * ( ( RCSe / MUR ) - ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( DS - RMSe ),MUC ) / MUC ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5307349570826819}, {"determining": "( ( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ) / FirstVNF_Mem ) - ( ( Const - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( DS - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,( Max( ( RCSe - MUC ),( MUC / MUM ) ) / RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.2125984251968504, "obj2": 0.634579034049191}, {"determining": "( ( ACS - AMS ) * ( ( ( ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - MDR ) ) + ( RRS / RRS ) ) + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( RRSe * MUC ) - RRSe ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5678794670305717}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU * ( Const + DDR ) ) ) * Min( FirstVNF_Mem ,( Min( MRS ,CRS ) + ( FirstVNF_CPU / ACS ) ) ) ),PN ) ) * ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( RRSe - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( MLU * RRSe ) ,MUC ) ) ) )", "obj1": 0.6673228346456693, "obj2": 0.18395677796799675}, {"determining": "( ( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - Max( MUM,MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.9448818897637795, "obj2": 0.02158721719101762}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / Max( ARS,CRS ) ) ) * ( Min( MRS ,PN ) + ( FirstVNF_CPU - DDR ) ) ),PN ) ) * Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( MUM / RCSe ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * CS ) )", "obj1": 0.6771653543307087, "obj2": 0.1802986535662247}, {"determining": "( Max( ARS,( ARS * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.42322834645669294, "obj2": 0.37766722019552157}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.08858267716535433, "obj2": 0.836243339688406}, {"determining": "( FirstVNF_Mem - ( CRS / Max( ( Min( FirstVNF_RAM_Server ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / Max( ( MUM / RCSe ),Min( Max( Min( DS ,MUC ),( Min( ( MLU - MUM ) ,Max( ( RRSe / MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) ,RCSe ) ) )", "obj1": 0.9094488188976378, "obj2": 0.034513285902066454}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS + MUC ) - ( MUM + MUC ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.8818897637795275, "obj2": 0.043728168373896974}, {"determining": "( ( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.012897319130485366}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / ( ( ( Min( MRS ,PN ) / Max( FirstVNF_CPU,( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ) - PN ) ) * Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( MUM / RCSe ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * ( ( RMSe / RCSe ) / ( RRSe + MUR ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.15908137718957957}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( RRS - ( FirstVNF_RAM_Server / ACS ) ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45462183458827965}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,( RRS * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( DS * MUC ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.5840677708387529}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU * MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) * RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10195241360886764}, {"determining": "( ACS - ( FirstVNF_RAM_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,MLU ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( MUC * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.7952755905511811, "obj2": 0.07653061281977366}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( Min( FirstVNF_RAM ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),DDR ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,MLU ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) * ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.8937007874015748, "obj2": 0.039924277250184284}, {"determining": "( ( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - Max( MUM,MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.9448818897637795, "obj2": 0.02158721719101762}, {"determining": "( ( Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + RRS ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.012897319130485366}], "38": [{"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe / MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( DS - RMSe ),MUC ) / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( ( ( Const - FirstVNF_CPU ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe - DS ) - ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + Max( ( MLU * RCSe ),( RRSe * MUR ) ) ) ) ) - Max( RRSe,( RMSe - ( Min( Max( RMSe,RRSe ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( FirstVNF_Mem_Server + RRS ) ) ) * ( Min( FirstVNF_CPU ,ACS ) * ( ARS / FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( ( RRSe - DS ) / MUC ) ) - Max( RRSe,( Min( RRSe ,DS ) / MUM ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8716571829225804}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( ACS - ( MDR / Max( ( ( ( MRS / PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( DS + MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( RMSe - ( Min( Max( RMSe,RRSe ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.06978859751001282}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( BR / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2212825838465312}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( RRS - FirstVNF_RAM ) * ( RRS * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ACS ) ) * ( RRS / Const ) ),RRS ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( ( Min( ( Max( ( DS - RMSe ),MUC ) / MUC ) ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.44517984295468377}, {"determining": "( Max( ARS,( ARS * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.42322834645669294, "obj2": 0.37766722019552157}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_RAM ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( ( MRS - PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ARS ) ) ),PN ) ) )", "choosing": "( Max( ( ( DS + MUC ) - ( ( Min( CS ,RMSe ) / DS ) / ( ( MUC * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( RRSe - MUC ) - ( ( ( RRSe * MUC ) - ( MUM + RMSe ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.18110236220472442, "obj2": 0.6583490472409438}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( FirstVNF_Mem - ( MDR * Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / DDR ) ) ),PN ) ) )", "choosing": "( Max( ( RMSe * RRSe ),Min( ( ( DS - MUC ) - ( ( ( CS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.8700787401574803, "obj2": 0.05610211949488544}, {"determining": "( ( ACS - AMS ) * ( ( ( ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - MDR ) ) + ( RRS / RRS ) ) + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( RRSe * MUC ) - RRSe ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5678794670305717}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,( RRS * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( DS * MUC ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.5840677708387529}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - DDR ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) * Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.0984251968503937, "obj2": 0.8263064068473337}, {"determining": "( FirstVNF_Mem - ( CRS / Max( ( Min( FirstVNF_RAM_Server ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / Max( ( MUM / RCSe ),Min( Max( Min( DS ,MUC ),( Min( ( MLU - MUM ) ,Max( ( RRSe / MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) ,RCSe ) ) )", "obj1": 0.9094488188976378, "obj2": 0.034513285902066454}, {"determining": "Max( Max( Min( ( ACS - AMS ) ,Max( FirstVNF_Mem_Server,PN ) ),DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( ( RRSe + RCSe ),CS ) / ( MUR + RMSe ) ) - RCSe ) * ( DS + Min( MUC ,( ( MUR + RMSe ) - ( MLU * RCSe ) ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7420839327600507}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) ) - PN ) ) * ARS ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - RRSe ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - MLU ) ) / RRSe ) ) )", "obj1": 0.7401574803149606, "obj2": 0.12807442395680105}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU - MDR ) ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,CRS ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - RMSe ) * ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + PN ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) / ARS ) ) ),PN ) ) )", "choosing": "( Max( ( ( ( ( MUC / DS ) * ( CS - MUC ) ) + ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( DS - MUC ) - ( ( ( RRSe * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.17125984251968504, "obj2": 0.7079449854592634}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) )", "choosing": "( ( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( MUC * RMSe ) / ( DS - RCSe ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * CS ) )", "obj1": 0.08464566929133858, "obj2": 0.8294111889439557}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( RRSe - MUM ),( CS / MUM ) ) / MUC ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5216865826282123}, {"determining": "( ( ACS - CRS ) * Min( ( ( FirstVNF_Mem_Server - ARS ) * PN ) ,( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( Max( ARS,( ARS * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.42322834645669294, "obj2": 0.37766722019552157}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.43700787401574803, "obj2": 0.36692369402779296}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - MDR ) ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,CRS ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( ( Max( ( DS - RMSe ),MUC ) / MUC ) ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.44517984295468377}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( ( ACS - ( MDR / Max( ( ( ( MRS / PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) ) / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( RMSe - ( Min( Max( RMSe,RRSe ) ,MUC ) / RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0953384726811413}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( ( MRS - PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / Const ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ARS ) ) ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( DS - CS ) - Max( MUC,RMSe ) ) + ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,( Max( ( RCSe - MUC ),( MUC / MUM ) ) / RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.19094488188976377, "obj2": 0.6508682513138762}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU * MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) * RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10195241360886764}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( RRS / Min( MRS ,PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( DS * ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ),( ( DS - RCSe ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.622167160143585}, {"determining": "( ( ACS - AMS ) * FirstVNF_RAM_Server )", "choosing": "( Max( Min( RMSe ,Max( ( MUM / RCSe ),Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) ),Min( ( ( DS - MUC ) - ( ( ( DS * ( MUM + MUM ) ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5590551181102362, "obj2": 0.25970330269633535}, {"determining": "( Min( ARS ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) / ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( MUM * RCSe ) * Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.27910217365685097}, {"determining": "( Max( ( ( Max( ( ARS - FirstVNF_CPU_Server ),( ( Min( MRS ,ARS ) * ( RRS - FirstVNF_RAM ) ) + RRS ) ) * ( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / BR ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( Max( ( DS - RMSe ),( RRSe / ( CS + MUM ) ) ) / MUC ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / RCSe ) ) ,( ( ( ( RCSe - MUC ) - CS ) + Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.281496062992126, "obj2": 0.5424886845519}, {"determining": "( Max( ARS,BR ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Min( ( RMSe * ( ( Max( ( DS - RMSe ),( RRSe / ( CS + MUM ) ) ) / MUC ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / RCSe ) ) ,( ( ( ( RCSe - MUC ) - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.5019685039370079, "obj2": 0.29018790552808255}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.47244094488188976, "obj2": 0.32963945051569277}, {"determining": "( ACS - ( FirstVNF_RAM_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,MLU ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( MUC * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.7952755905511811, "obj2": 0.07653061281977366}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / ( ( ( Min( MRS ,PN ) / Max( FirstVNF_CPU,( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ) - PN ) ) * Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( MUM / RCSe ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * ( ( RMSe / RCSe ) / ( RRSe + MUR ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.15908137718957957}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( RMSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4922092258188905}, {"determining": "( ( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ) / FirstVNF_Mem ) - ( ( Const - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( DS - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,( Max( ( RCSe - MUC ),( MUC / MUM ) ) / RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.2125984251968504, "obj2": 0.634579034049191}, {"determining": "( ( ACS - AMS ) * ( MDR + Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( ( ACS - MRS ) + ( FirstVNF_CPU / ACS ) ) ) - ( RRS / BR ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( DS - DS ) ) * ( ( RCSe / MUR ) - ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( DS - RMSe ),MUC ) / MUC ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5307349570826819}, {"determining": "( ACS - ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( MUM / RCSe ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * CS ) )", "obj1": 0.7440944881889764, "obj2": 0.10948007169294811}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU * ( Const + DDR ) ) ) * FirstVNF_Mem_Server ),PN ) ) * ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( RRSe - DS ) ) * ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( MLU * RRSe ) ,MUC ) ) ) )", "obj1": 0.6653543307086615, "obj2": 0.192184806515574}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( RRS - ( FirstVNF_RAM_Server / ACS ) ) * ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ),PN ) ) )", "choosing": "( Max( ( RRSe + ( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45462183458827965}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( MRS * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( MLU - MUC ) - ( ( ( DS * ( MUM + MUM ) ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5531496062992126, "obj2": 0.271796291227498}, {"determining": "( ( BR / RRS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( RRSe - RMSe ),( CS / MUM ) ) / MUC ) ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5350870650050031}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,( RRS * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( MLU - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - Max( MUM,MUM ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.4645669291338583, "obj2": 0.33500849749796363}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( Min( FirstVNF_RAM ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),DDR ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,MLU ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) * ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.8937007874015748, "obj2": 0.039924277250184284}], "39": [{"determining": "( ( CRS - AMS ) * FirstVNF_RAM_Server )", "choosing": "( Max( Min( RMSe ,Max( ( MUM / RCSe ),Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) ),Min( ( ( DS - MUC ) - ( ( ( CS * ( MUM + MUM ) ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe / MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( DS - RMSe ),MUC ) / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( MDR / ( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( FirstVNF_Mem_Server + RRS ) ) ) * ( Min( FirstVNF_CPU ,ACS ) * ( ARS / FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( ( RRSe - DS ) / MUC ) ) - Max( RRSe,( Min( RRSe ,DS ) / MUM ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8716571829225804}, {"determining": "( ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( ( ACS - AMS ) + ( FirstVNF_CPU / ACS ) ) ) - ( RRS / BR ) ) ),PN ) ) - ( MDR / Max( ( Min( FirstVNF_RAM ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - ( DS - DS ) ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,MLU ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.9665354330708661, "obj2": 0.025965798584670206}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - MDR ) ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,CRS ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / DDR ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( ( RMSe / MUC ) ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.38188976377952755, "obj2": 0.43842518240004896}, {"determining": "( ( ARS / FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.5964566929133859, "obj2": 0.23782347347133137}, {"determining": "( FirstVNF_CPU / Max( Max( ( ( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) + ARS ),( Const - FirstVNF_Mem_Server ) ),Max( ( FirstVNF_RAM * CRS ),FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( CS * DS ) * Min( CS ,DS ) ) * RCSe ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RMSe + ( ( MUR - DS ) - RCSe ) ) - ( MLU - Max( CS,CS ) ) ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) + ( ( MLU * RCSe ) + ( RRSe * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7785606458936736}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( BR / ARS ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2212825838465312}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU * ( Const + PN ) ) ) * FirstVNF_Mem_Server ),PN ) ) * ARS ) )", "choosing": "( Min( RCSe ,RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( MLU * RRSe ) ,MUC ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.1443552047543365}, {"determining": "( ACS - ( MDR / Max( ( ( ( MRS / PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( ( DS + MUC ) - ( ( MUC + ( ( RRSe - DS ) - RCSe ) ) - Max( RRSe,( RMSe - ( Min( Max( RMSe,RRSe ) ,MUC ) / RRSe ) ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.06978859751001282}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_RAM ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( ( MRS - PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ARS ) ) ),PN ) ) )", "choosing": "( Max( ( ( DS + MUC ) - ( ( Min( CS ,RMSe ) / DS ) / ( ( MUC * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( RRSe - MUC ) - ( ( ( RRSe * MUC ) - ( MUM + RMSe ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.18110236220472442, "obj2": 0.6583490472409438}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( ARS / BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RMSe - CS ),Min( CS ,DS ) ) * MUM ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe + ( Min( RRSe ,MUR ) - RCSe ) ) - Max( RCSe,( CS - CS ) ) ) ) ) / ( ( ( CS * MUR ) - ( RCSe + RCSe ) ) * Max( ( MLU / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7497041635941215}, {"determining": "( FirstVNF_Mem - ( MDR * Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / DDR ) ) ),PN ) ) )", "choosing": "( Max( ( RMSe * RRSe ),Min( ( ( DS - MUC ) - ( ( ( CS * CS ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.8700787401574803, "obj2": 0.05610211949488544}, {"determining": "( Max( ARS,( ARS * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.42322834645669294, "obj2": 0.37766722019552157}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - DDR ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) * Min( ( ( DS - MUC ) - ( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.0984251968503937, "obj2": 0.8263064068473337}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + PN ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) / ARS ) ) ),PN ) ) )", "choosing": "( Max( ( ( ( ( MUC / DS ) * ( CS - MUC ) ) + ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ) - ( ( Min( DS ,RMSe ) / DS ) / ( ( DS * RMSe ) - ( DS - RCSe ) ) ) ),Min( ( ( DS - MUC ) - ( ( ( RRSe * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / DS )", "obj1": 0.17125984251968504, "obj2": 0.7079449854592634}, {"determining": "Max( Max( Min( ( ACS - AMS ) ,Max( FirstVNF_Mem_Server,PN ) ),DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( ( RRSe + RCSe ),CS ) / ( MUR + RMSe ) ) - RCSe ) * ( DS + Min( MUC ,( ( MUR + RMSe ) - ( MLU * RCSe ) ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7420839327600507}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU - MDR ) ) / DDR ) / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,CRS ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RRSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( ( RRSe - RMSe ) * ( DS / MUM ) ) ,MUC ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4785146535192226}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) )", "choosing": "( ( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( MUC * RMSe ) / ( DS - RCSe ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * CS ) )", "obj1": 0.08464566929133858, "obj2": 0.8294111889439557}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / Max( FirstVNF_CPU,( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.7362204724409449, "obj2": 0.12026340960988015}, {"determining": "( FirstVNF_CPU / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) * Max( RRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( Max( Max( MLU,CS ),( MLU + MUC ) ) - ( ( RRSe - ( ( RRSe - RCSe ) - RCSe ) ) - ( MLU - ( CS - CS ) ) ) ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * Max( ( MLU / RCSe ),( RRSe + MUR ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7104555147834927}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / ( ( ( Min( MRS ,PN ) / Max( FirstVNF_CPU,( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ) - PN ) ) * Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) ) )", "choosing": "( Min( ( Max( ( CS - ( RCSe - DS ) ),Min( DS ,DS ) ) * Min( RMSe ,RRSe ) ) ,( MUM / RCSe ) ) / ( ( ( CS * MUC ) - ( RCSe + MUR ) ) * ( ( RMSe / RCSe ) / ( RRSe + MUR ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.15908137718957957}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( RMSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4922092258188905}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( ( ( ( ( ARS * BR ) / FirstVNF_RAM_Server ) + ARS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( DS / MUM ) / Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( Min( ( MLU - MUM ) ,Max( ( RRSe / MLU ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) ,RCSe ) ) )", "obj1": 0.9094488188976378, "obj2": 0.034513285902066454}, {"determining": "( ACS - ( FirstVNF_RAM_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ( Const + DDR ) ) ) + ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_CPU / DDR ) ) ),PN ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,MLU ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( MUC * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.7952755905511811, "obj2": 0.07653061281977366}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU + ( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.7637795275590551, "obj2": 0.09424169079017336}, {"determining": "( Max( ARS,( AMS + FirstVNF_CPU ) ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU * Max( RRS,FirstVNF_Mem ) ) ) * FirstVNF_Mem_Server ),PN ) ) * ARS ) )", "choosing": "( Max( ( CS - ( MUM - DS ) ),Min( DS ,DS ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( ( MLU * RRSe ) ,MUC ) ) ) )", "obj1": 0.6771653543307087, "obj2": 0.17454648901982167}, {"determining": "( ( BR * FirstVNF_CPU ) * ( MDR / Max( Max( ( Min( ( Const + PN ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( RRS - FirstVNF_RAM ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( MLU * CS ) - ( MUC + DS ) ) * ( ( DS * MUC ) - ( RRSe - RCSe ) ) ) ) ,Max( MLU,Min( Max( ( RCSe - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.23818897637795275, "obj2": 0.5969014922137752}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( RRSe - MUM ),( CS / MUM ) ) / MUC ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5216865826282123}, {"determining": "( ( ACS - CRS ) * Min( ( ( FirstVNF_Mem_Server - ARS ) * PN ) ,( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / RRSe )", "obj1": 0.6496062992125984, "obj2": 0.2043616124078198}, {"determining": "( ( ACS - AMS ) * ( ( ( ( ( Min( MDR ,FirstVNF_CPU ) / ( FirstVNF_CPU - MDR ) ) + ( RRS / RRS ) ) + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( ( ( RRSe * MUC ) - RRSe ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5678794670305717}, {"determining": "( Max( ARS,( ARS * Min( ( ( FirstVNF_Mem_Server + ARS ) * PN ) ,( CRS * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.42322834645669294, "obj2": 0.37766722019552157}, {"determining": "( ( ACS - DDR ) * ( MDR / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( AMS / FirstVNF_CPU ) ) * Min( RRS ,FirstVNF_Mem ) ) ),( Max( ( ACS - ( MDR / ACS ) ),( Const + BR ) ) - ( DDR / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * Max( ( RCSe + MUR ),( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),Min( Max( ( DS + MUC ),( ( ( DS * MUC ) - ( RCSe + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.35054410859796886}, {"determining": "( ( ACS - AMS ) * FirstVNF_RAM_Server )", "choosing": "( Max( Min( RMSe ,Max( ( MUM / RCSe ),Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ) ) ),Min( ( ( DS - MUC ) - ( ( ( DS * ( MUM + MUM ) ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5590551181102362, "obj2": 0.25970330269633535}, {"determining": "( ( Min( MRS ,PN ) - ( ( ACS + AMS ) * ( MDR / Max( ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / PN ) ) ),PN ) ) ) ) / MDR )", "choosing": "( ( Max( ( MLU - CS ),( Min( RMSe ,Max( ( MUC - MUM ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ) / CS ) - ( RRSe + ( MUC - ( Min( Min( RMSe ,CS ) ,RCSe ) / RRSe ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.30651197184150214}, {"determining": "( Max( ( ( Max( ( ARS - FirstVNF_CPU_Server ),( ( Min( MRS ,ARS ) * ( RRS - FirstVNF_RAM ) ) + RRS ) ) * ( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ),( Const + RRS ) ) - ( ( ACS - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / BR ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( Max( ( DS - RMSe ),( RRSe / ( CS + MUM ) ) ) / MUC ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / RCSe ) ) ,( ( ( ( RCSe - MUC ) - CS ) + Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.281496062992126, "obj2": 0.5424886845519}, {"determining": "( Max( ARS,BR ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Min( ( RMSe * ( ( Max( ( DS - RMSe ),( RRSe / ( CS + MUM ) ) ) / MUC ) + ( ( DS * MUC ) - ( MUM + MUM ) ) ) ) ,Min( Max( ( DS - MUC ),( ( ( DS * CS ) - ( MUM + MUM ) ) / RCSe ) ) ,( ( ( ( RCSe - MUC ) - CS ) - Max( MUC,RMSe ) ) + Min( ( DS * MUC ) ,( MUM + MUM ) ) ) ) ) - Max( DS,DS ) )", "obj1": 0.5019685039370079, "obj2": 0.29018790552808255}, {"determining": "( Min( ARS ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe + MUR ) / ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( MUM * RCSe ) * Min( Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.27910217365685097}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( MRS * ( ( ( ACS - FirstVNF_CPU_Server ) + ( RRS + RRS ) ) - Max( DDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),Min( ( ( MLU - MUC ) - ( ( ( DS * ( MUM + MUM ) ) - ( MUM + MUM ) ) / MUM ) ) ,RCSe ) ) / RRSe )", "obj1": 0.5531496062992126, "obj2": 0.271796291227498}, {"determining": "( ( ACS - AMS ) * ( MDR / Max( ( ( RRS - ( FirstVNF_RAM_Server / ACS ) ) * ( ( Min( MDR ,PN ) / ( PN - ACS ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) ),PN ) ) )", "choosing": "( Max( ( RRSe + ( MUC - ( Min( Min( RMSe ,RRSe ) ,RCSe ) / RRSe ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45462183458827965}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,( RRS * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( DS * MUC ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.5840677708387529}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( Min( FirstVNF_RAM ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - DS ) ) * ( ( RCSe / MUR ) + ( MLU * RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( DS - RMSe ),MUC ) / MUC ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.04470701972412013}, {"determining": "( FirstVNF_Mem - ( MDR / Max( ( Min( FirstVNF_RAM ,PN ) * ( ( RRS / RRS ) * ( RRS / FirstVNF_Mem ) ) ),DDR ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,MLU ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( ( DS * RMSe ) / ( DS - RCSe ) ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) * ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.8937007874015748, "obj2": 0.039924277250184284}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / ACS ) ) + ( ( RRS - DDR ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.20275590551181102, "obj2": 0.647357897732516}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( ( MDR / Max( ( ( Min( MRS ,PN ) / Min( FirstVNF_CPU ,( Const + DDR ) ) ) * ( Min( MRS ,PN ) / ( FirstVNF_CPU - DDR ) ) ),PN ) ) * ARS ) )", "choosing": "( Max( Max( ( MLU - MLU ),( Min( RMSe ,Max( ( MUC - RRSe ),( MUC / MLU ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - Max( ( DS - MUC ),( ( ( DS * MUC ) - ( MUM + MUM ) ) / MUM ) ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.8051181102362205, "obj2": 0.07482996873744001}, {"determining": "( ( BR / RRS ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - RCSe ) ) * ( ( RCSe + MUR ) + ( MLU * RRSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( Max( ( RRSe - RMSe ),( CS / MUM ) ) / MUC ) ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5350870650050031}, {"determining": "( ( ( Max( Max( ( ARS - FirstVNF_CPU_Server ),( Const + RRS ) ),( Const + RRS ) ) - ( FirstVNF_RAM_Server / ACS ) ) / FirstVNF_Mem ) - ( ( Const - AMS ) * ( MDR / Max( ( ( ( Max( ARS,CRS ) - ( PN / ACS ) ) / ( FirstVNF_CPU / ACS ) ) * ( ( FirstVNF_CPU / ACS ) * ( RRS / FirstVNF_Mem ) ) ),PN ) ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( DS - CS ) - Max( MUC,RMSe ) ) - ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,( Max( ( RCSe - MUC ),( MUC / MUM ) ) / RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.2125984251968504, "obj2": 0.634579034049191}, {"determining": "( ( ( Max( Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ),Max( DDR,( ( MRS - PN ) + ( FirstVNF_CPU / ACS ) ) ) ),CRS ) + ( FirstVNF_CPU / Const ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( MRS ,PN ) / ( FirstVNF_CPU / DDR ) ) * ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ARS ) ) ),PN ) ) )", "choosing": "( Min( ( RMSe * ( ( ( ( DS - CS ) - Max( MUC,RMSe ) ) + ( MUC + DS ) ) + ( ( DS * MUC ) - ( MUM - MUM ) ) ) ) ,Max( MLU,( Max( ( RCSe - MUC ),( MUC / MUM ) ) / RCSe ) ) ) - Max( DS,DS ) )", "obj1": 0.19094488188976377, "obj2": 0.6508682513138762}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.43700787401574803, "obj2": 0.36692369402779296}, {"determining": "( ( ACS - AMS ) * ( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) / Max( ( ( FirstVNF_CPU / DDR ) * ( Min( FirstVNF_Mem ,( Min( MRS ,PN ) + ( FirstVNF_CPU / ACS ) ) ) + ( RRS / RRS ) ) ),PN ) ) )", "choosing": "( Max( Max( ( ( CS * MLU ) - ( RCSe + RCSe ) ),( Min( RMSe ,Max( ( MUC - MUC ),( MUC / MUM ) ) ) * ( MLU - DS ) ) ),RRSe ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * ( ( Min( RMSe ,RRSe ) + ( MLU - DS ) ) / RRSe ) ) )", "obj1": 0.43700787401574803, "obj2": 0.36692369402779296}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,( RRS * ( ( RRS - BR ) * ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( ( MUM / RCSe ),Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ) ),( Min( Min( RMSe ,RRSe ) ,( ( DS + MUC ) - ( ( Min( MUM ,RMSe ) / DS ) + ( DS * MUC ) ) ) ) / MUR ) ) * ( ( ( CS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.5840677708387529}]}