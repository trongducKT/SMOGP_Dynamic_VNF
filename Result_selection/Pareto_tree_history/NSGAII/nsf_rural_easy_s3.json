{"1": [{"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( CRS + DDR ) )", "choosing": "( ( DS / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.3661417322834646, "obj2": 0.5466050145260434}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + MDR ) )", "choosing": "Min( ( RRSe / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.45866141732283466, "obj2": 0.4496066832853467}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,MUR ) / ( RRSe - DS ) )", "obj1": 0.3464566929133858, "obj2": 0.5748186488955874}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Min( PN ,DDR ) )", "choosing": "Max( Min( Min( MUM ,Min( MLU ,MUR ) ) ,DS ),( RRSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_RAM ) - Min( FirstVNF_RAM ,PN ) )", "choosing": "( ( MUM - MUR ) / ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS / ( DDR / FirstVNF_CPU ) ),( FirstVNF_RAM_Server + AMS ) )", "choosing": "( ( MLU / Max( MLU,DS ) ) / Max( MLU,MUR ) )", "obj1": 0.1830708661417323, "obj2": 0.6999354736839013}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "( Min( MUC ,MUM ) * ( RMSe * RMSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28863990552272434}, {"determining": "( ( Const + DDR ) + ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.9625984251968503, "obj2": 0.04624123735644682}, {"determining": "( Max( PN,( FirstVNF_RAM + BR ) ) * Max( CRS,CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,( DS * RRSe ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6203592920139329}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM ) * Max( FirstVNF_RAM,( FirstVNF_CPU * FirstVNF_CPU ) ) )", "choosing": "( ( DS * MUM ) + Max( MUC,( CS - ( Min( Min( ( ( MLU - MUC ) * RRSe ) ,MUC ) ,MLU ) * Max( Max( ( Min( MLU ,RMSe ) / ( MLU / RMSe ) ),( MLU / MUM ) ),RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + CRS ) ,Max( AMS,MRS ) )", "choosing": "Max( ( MLU - RCSe ),( RMSe - DS ) )", "obj1": 0.17125984251968504, "obj2": 0.7454476966048986}, {"determining": "( ( BR * FirstVNF_RAM ) + Min( CRS ,ACS ) )", "choosing": "( Max( MUC,RMSe ) / ( ( ( RRSe + RCSe ) + CS ) / Max( MLU,Max( MLU,RMSe ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.8471497170121559}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6784244889898579}, {"determining": "Min( Min( MDR ,FirstVNF_Mem_Server ) ,( Const - FirstVNF_CPU ) )", "choosing": "( ( RRSe / RMSe ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS - RRS ),( AMS - FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( RRSe ,( ( ( MUC * MUM ) / Max( MUM,( DS + MLU ) ) ) + DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.47584271103263387}, {"determining": "( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - ( ACS / ARS ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( MUC * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * AMS ) ) )", "choosing": "Min( ( CS - ( ( MLU / Max( ( MLU / CS ),RRSe ) ) * RCSe ) ) ,( DS / DS ) )", "obj1": 0.2559055118110236, "obj2": 0.6143039654417172}, {"determining": "( Max( ( FirstVNF_Mem * Const ),Const ) + Max( Max( ACS,ACS ),FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( DS * RCSe ) + ( MUM - CS ) ),( ( RMSe / RCSe ) / ( RRSe / MUR ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6530571733949192}, {"determining": "( ( Min( FirstVNF_CPU ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( MUM + Min( MUM ,RMSe ) ) / ( RRSe - RMSe ) )", "obj1": 0.7401574803149606, "obj2": 0.22329344869173343}, {"determining": "Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( PN - PN ) )", "choosing": "( ( Min( RMSe ,MUC ) + ( MUM * DS ) ) - Min( ( MUR - RMSe ) ,Max( ( RRSe - MUR ),MUC ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5619305432143454}, {"determining": "Max( ( PN * FirstVNF_RAM ),( Min( AMS ,BR ) / ( FirstVNF_Mem / DDR ) ) )", "choosing": "Min( ( ( RRSe + RCSe ) + ( CS + RCSe ) ) ,( ( MUR + RCSe ) / ( MUC * RCSe ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7522641384316933}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( MRS,MDR ) ) )", "choosing": "Min( ( DS - RMSe ) ,Min( ( MUC - MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,RCSe ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( Max( FirstVNF_CPU,( Max( ( CRS - RRS ),FirstVNF_RAM ) - FirstVNF_RAM ) ) * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( MUR + MLU ),RRSe ) + RCSe ) / ( ( RMSe / RCSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( Max( DS,DS ) + ( RRSe + ( DS + CS ) ) )", "obj1": 0.9133858267716536, "obj2": 0.09167260199523555}, {"determining": "Max( Max( ( ( ACS * FirstVNF_Mem ) - Min( ACS ,MDR ) ),( ( ACS - FirstVNF_Mem_Server ) * ( CRS / FirstVNF_RAM_Server ) ) ),( Min( ( PN * FirstVNF_CPU_Server ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Max( ( PN + ARS ),Max( FirstVNF_RAM,CRS ) ) ) )", "choosing": "( Min( MUC ,( Min( RCSe ,MLU ) + DS ) ) - Max( RCSe,MUM ) )", "obj1": 0.1968503937007874, "obj2": 0.6885792759925061}, {"determining": "Min( Max( Min( ( FirstVNF_RAM / AMS ) ,( PN * FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem + MDR ),( MRS / ARS ) ) ) ,( Min( Max( PN,BR ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( CS,RMSe ) * ( RRSe - MUM ) ) / ( ( RMSe - MLU ) / ( MUC / MUC ) ) ) - ( ( ( DS + RCSe ) - ( CS - RMSe ) ) - Min( ( CS / RCSe ) ,( RRSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( ( MDR + ACS ) + ( ARS - ARS ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7582329153227932}, {"determining": "Max( ( FirstVNF_CPU + BR ),Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( ( Max( ( RRSe / RMSe ),( RRSe - MLU ) ) / ( ( CS / CS ) / ( MUC * MUM ) ) ) ,Min( ( Max( RRSe,MUC ) * ( DS - RCSe ) ) ,( Min( DS ,MLU ) + ( MUM / CS ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.5849731262836957}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,Max( RRS,FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + ( Min( PN ,MDR ) + BR ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - PN ) / ( DDR - AMS ) ) ),( ( ( FirstVNF_CPU + FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( ( ( MLU * MUM ) / Min( RCSe ,MUR ) ) + ( ( MUM - RCSe ) - ( MLU - RRSe ) ) ) - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - MUR ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6484745386820782}, {"determining": "Max( ( ( CRS - Min( DDR ,CRS ) ) - PN ),Min( ( FirstVNF_Mem * PN ) ,Max( ( Const + Const ),ACS ) ) )", "choosing": "( ( MUM * ( RRSe - CS ) ) / ( Min( MLU ,RRSe ) / MUR ) )", "obj1": 0.2874015748031496, "obj2": 0.5988214964929385}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 0.5216535433070866, "obj2": 0.4023352424008532}], "2": [{"determining": "( ( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Min( PN ,DDR ) )", "choosing": "Max( Min( Min( MUM ,Min( MLU ,MUR ) ) ,DS ),( RRSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( DDR,PN ),PN ) * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8630420918752786}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( MUM + Min( MUM ,RMSe ) ) / ( RRSe - RMSe ) )", "obj1": 0.7401574803149606, "obj2": 0.22329344869173343}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( FirstVNF_CPU_Server * Const ) + ( AMS + RRS ) ) )", "choosing": "Min( ( RRSe * DS ) ,Min( CS ,DS ) )", "obj1": 0.8503937007874016, "obj2": 0.09921364480998501}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUC ) )", "obj1": 0.6279527559055118, "obj2": 0.24325193070078424}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 0.5216535433070866, "obj2": 0.4023352424008532}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "( ( ( MUR - RCSe ) / ( MUR / CS ) ) + ( ( MUM * MUM ) / Max( MLU,MUC ) ) )", "obj1": 0.6062992125984252, "obj2": 0.27845340583286055}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.5748031496062992, "obj2": 0.3311992820624603}, {"determining": "Max( Max( ( Min( ACS ,AMS ) * ( Const - MDR ) ),( ( RRS - ARS ) * Max( ACS,BR ) ) ),( Max( Min( MDR ,FirstVNF_Mem ),Max( BR,AMS ) ) - ( ( ARS / FirstVNF_Mem_Server ) + ( BR / BR ) ) ) )", "choosing": "Min( Min( ( Min( MUM ,CS ) + ( MLU / DS ) ) ,( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) ,( ( RMSe * RMSe ) / ( ( MUR / RMSe ) - ( RMSe / RRSe ) ) ) )", "obj1": 0.5570866141732284, "obj2": 0.3596595135624696}, {"determining": "( ( Const * DDR ) + ( MRS - ( DDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU + MUR ) + RRSe ) * Min( RMSe ,MUR ) )", "obj1": 0.9625984251968503, "obj2": 0.04579231678575206}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / PN ) ) ) ) + ( Max( AMS,FirstVNF_CPU ) + BR ) )", "choosing": "( Min( ( ( RMSe * RMSe ) + ( RCSe / ( ( RCSe * Max( MUM,MUC ) ) / RMSe ) ) ) ,( ( MLU * RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.0735770238767347}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 0.49015748031496065, "obj2": 0.4405713191940235}, {"determining": "( ( ( ( CRS * RRS ) * DDR ) + ( FirstVNF_Mem - CRS ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe * MUC ) + Max( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ),RCSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.8523622047244095, "obj2": 0.09848558814354019}, {"determining": "( ( BR + DDR ) * ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5475365557470863}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * Max( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( ARS / FirstVNF_CPU_Server ) ) * Max( ACS,BR ) ) ),( ( ( ARS / FirstVNF_Mem_Server ) + ( BR / BR ) ) - Max( Min( MDR ,FirstVNF_Mem ),Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( ( DS - Max( Max( Min( MUC ,( Min( CS ,RCSe ) / RCSe ) ),RCSe ),CS ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6369004551074258}, {"determining": "( Min( ACS ,AMS ) * ( Max( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( ( RRS - ARS ) * Max( ACS,BR ) ) ),( Max( Min( MDR ,FirstVNF_Mem ),Max( BR,PN ) ) - ( ( ARS / FirstVNF_Mem_Server ) + ( ( Min( FirstVNF_Mem ,MRS ) / RRS ) / BR ) ) ) ) - MDR ) )", "choosing": "( CS * ( ( Min( MUR ,( RRSe + ( CS * ( MUR * MUR ) ) ) ) / RRSe ) * RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( MRS - RRS ) - ( AMS - FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( RRSe ,( ( ( MUC * MUM ) / Max( MUM,( DS + MLU ) ) ) + DS ) ) )", "obj1": 0.9350393700787402, "obj2": 0.06623262203755435}, {"determining": "( Max( PN,ACS ) * ( ( ( ACS / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - RMSe )", "obj1": 0.16141732283464566, "obj2": 0.7116093835333058}, {"determining": "( ( BR / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7903029109217262}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,( Max( Max( DDR,PN ),PN ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.11220472440944881, "obj2": 0.8206158001303092}, {"determining": "Max( ( MDR + ( CRS + DDR ) ),( FirstVNF_RAM - ( Min( MRS ,FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / RMSe ) * DS ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7721455834522035}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + MDR ) )", "choosing": "Min( ( RRSe / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.45866141732283466, "obj2": 0.4496066832853467}, {"determining": "( ( AMS + ( Max( AMS,AMS ) - Min( Const ,BR ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( MUM + Min( MUM ,RMSe ) ) / Min( ( MUC * DS ) ,( RCSe + RMSe ) ) )", "obj1": 0.4507874015748031, "obj2": 0.4618451339967333}, {"determining": "Min( ( ARS + CRS ) ,Max( AMS,MRS ) )", "choosing": "Max( ( MLU - RCSe ),( RMSe - DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7431263608727038}, {"determining": "Min( Min( ( ( BR / ACS ) + Const ) ,FirstVNF_CPU_Server ) ,( ARS + Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,Max( RRS,FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) ) ) )", "choosing": "( Min( MUC ,( MUR + MUC ) ) * ( ( Min( ( DS / MUM ) ,RRSe ) - MLU ) / ( Min( MLU ,CS ) / CS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5443873514104548}, {"determining": "Max( ( FirstVNF_CPU + BR ),Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( ( Max( ( RRSe / RMSe ),( RRSe - MLU ) ) / ( ( CS / CS ) / ( MUC * MUM ) ) ) ,Min( ( Max( RRSe,MUC ) * ( DS - RCSe ) ) ,( Min( DS ,MLU ) + ( MUM / CS ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.5849731262836957}, {"determining": "Max( ( AMS / ( DDR / FirstVNF_CPU ) ),( FirstVNF_RAM_Server + AMS ) )", "choosing": "( ( MLU / Max( MLU,DS ) ) / Max( MLU,MUR ) )", "obj1": 0.1830708661417323, "obj2": 0.6999354736839013}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,Max( FirstVNF_CPU_Server,( ( Const + CRS ) * AMS ) ) ) )", "choosing": "Max( Max( ( MLU / CS ),RRSe ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6329547375077723}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6784244889898579}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( ( DDR + RRS ) - Max( ARS,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) + ( MUM * DS ) ) - Min( ( CS / RMSe ) ,( MUR - DS ) ) )", "obj1": 0.3799212598425197, "obj2": 0.5287620029893628}, {"determining": "( Min( FirstVNF_RAM_Server ,( CRS - ( ( CRS + DDR ) + FirstVNF_RAM_Server ) ) ) / Min( RRS ,Max( ACS,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RRSe ,( ( DS / RRSe ) * ( RMSe / RMSe ) ) ) + Max( MUR,DS ) )", "obj1": 0.37598425196850394, "obj2": 0.5437735030360413}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * AMS ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4937559948333039}, {"determining": "( ( Min( FirstVNF_CPU ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( Const + ( FirstVNF_RAM * MDR ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.10433070866141732, "obj2": 0.8423093587913005}, {"determining": "( Max( ( FirstVNF_CPU - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ),( Min( FirstVNF_CPU ,MDR ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( MUC + CS ) )", "obj1": 0.2578740157480315, "obj2": 0.5991395592650234}, {"determining": "Max( ( MRS - RRS ),( AMS - FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( RRSe ,( ( ( MUC * MUM ) / Max( MUM,( DS + MLU ) ) ) + DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.47584271103263387}, {"determining": "( ( FirstVNF_RAM + ( ( MDR + ACS ) + ( ARS - ARS ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7582329153227932}, {"determining": "Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / RRSe ) ,Min( RRSe ,DS ) )", "obj1": 0.4251968503937008, "obj2": 0.47584271103263387}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * AMS )", "choosing": "Min( ( ( MUC / RMSe ) * Min( RCSe ,RMSe ) ) ,( Max( CS,RMSe ) - ( MUM + ( MUR + MLU ) ) ) )", "obj1": 0.27755905511811024, "obj2": 0.5981053632498675}, {"determining": "Max( Max( ( DDR + FirstVNF_CPU_Server ),( MRS + BR ) ),( ( DDR / FirstVNF_RAM ) * ( Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( DS ,MUC ) )", "obj1": 0.25393700787401574, "obj2": 0.6121386645063563}, {"determining": "( Min( AMS ,MDR ) / ( AMS / ( Min( AMS ,RRS ) * ( ARS - MDR ) ) ) )", "choosing": "Max( Max( ( ( RMSe + ( ( DS / DS ) * DS ) ) / ( RRSe - ( Max( ( MLU / MUR ),( RCSe * CS ) ) * Min( Max( RMSe,CS ) ,( RCSe / MUC ) ) ) ) ),( ( DS * ( RCSe + RMSe ) ) + RMSe ) ),Max( Max( MUR,MUC ),( MUR / RCSe ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5851939257336591}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * AMS ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( Max( ( BR - MDR ),RRS ) + ( FirstVNF_RAM * MDR ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( Max( Max( RCSe,RCSe ),MLU ) - ( CS / RMSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6970407129057259}, {"determining": "( Max( PN,ACS ) * ( CRS - CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.24015748031496062, "obj2": 0.622752963934346}, {"determining": "Max( Min( ACS ,DDR ),Max( ( BR - MDR ),( Min( AMS ,BR ) / ( FirstVNF_Mem / DDR ) ) ) )", "choosing": "Min( ( Min( ( ( RRSe + RCSe ) + ( CS + RCSe ) ) ,( ( MUR + RCSe ) / ( MUC * RCSe ) ) ) + Max( RCSe,RCSe ) ) ,Min( ( RMSe - MUM ) ,Min( RMSe ,MUR ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6850838124129}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8484137254714258}, {"determining": "( ( FirstVNF_RAM + ( ( MDR + ACS ) + ( ARS - ARS ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7582329153227932}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.09448818897637795, "obj2": 0.851967650059606}, {"determining": "( ( ( ( CRS / FirstVNF_Mem_Server ) * ( AMS / RRS ) ) / ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Min( RRS ,FirstVNF_Mem_Server ) ) ) + Max( ( Max( ARS,BR ) + ( ACS - Const ) ),( FirstVNF_Mem_Server + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU * RRSe ) - ( Min( MLU ,MUC ) / ( MLU / DS ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5897140650329997}, {"determining": "( ( Min( FirstVNF_CPU ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( Max( PN,( FirstVNF_RAM + BR ) ) * Max( CRS,CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,( DS * RRSe ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6203592920139329}, {"determining": "( Min( AMS ,MDR ) / ( AMS / ( Min( AMS ,RRS ) * Const ) ) )", "choosing": "Max( Max( ( ( RMSe + ( ( DS / DS ) * DS ) ) / ( RRSe - CS ) ),( ( DS * ( RCSe + RMSe ) ) + RMSe ) ),Max( Max( MUR,MUC ),( MUR / RCSe ) ) )", "obj1": 0.2854330708661417, "obj2": 0.58946668797876}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( DDR - AMS ) / ( FirstVNF_CPU_Server - PN ) ) ),( ( ( FirstVNF_CPU + Const ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( DDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( RMSe,DS ) - Min( MUR ,RCSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6784244889898579}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.09448818897637795, "obj2": 0.851967650059606}, {"determining": "( Max( PN,ACS ) * ( CRS - CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.24606299212598426, "obj2": 0.6203592920139329}, {"determining": "Max( ( FirstVNF_CPU + BR ),Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( ( Max( ( RRSe / RMSe ),( RRSe - MLU ) ) / ( ( CS / CS ) / ( MUC * MUM ) ) ) ,Min( ( Max( RRSe,MUC ) * ( DS - RCSe ) ) ,( Min( DS ,MLU ) + ( MUM / CS ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.5849731262836957}, {"determining": "Min( ( ( FirstVNF_CPU - PN ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( RRSe - CS ) )", "obj1": 0.9960629921259843, "obj2": 0.002377069254485528}, {"determining": "( Min( AMS ,MDR ) / ( AMS / ( Min( AMS ,RRS ) * Const ) ) )", "choosing": "Max( Max( ( ( RMSe + ( ( DS / DS ) * DS ) ) / ( RRSe - CS ) ),( ( DS * ( RCSe + RMSe ) ) + RMSe ) ),Max( Max( MUR,MUC ),( MUR / RCSe ) ) )", "obj1": 0.2854330708661417, "obj2": 0.58946668797876}, {"determining": "( ( MRS / FirstVNF_RAM ) - Min( FirstVNF_RAM ,PN ) )", "choosing": "( ( MUM - MUR ) / ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM ) * Max( FirstVNF_RAM,( FirstVNF_CPU * FirstVNF_CPU ) ) )", "choosing": "( ( DS * MUM ) + Max( MUC,( CS - ( Min( Min( ( ( MLU - MUC ) * RRSe ) ,MUC ) ,MLU ) * Max( Max( ( Min( MLU ,RMSe ) / ( MLU / RMSe ) ),( MLU / MUM ) ),RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MDR ,FirstVNF_Mem_Server ) ,( Const - FirstVNF_CPU ) )", "choosing": "( ( RRSe / RMSe ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - ( ACS / ARS ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( MUC * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( MRS,MDR ) ) )", "choosing": "Min( ( DS - RMSe ) ,Min( ( MUC - MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,RCSe ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( Max( FirstVNF_CPU,( Max( ( CRS - RRS ),FirstVNF_RAM ) - FirstVNF_RAM ) ) * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( MUR + MLU ),RRSe ) + RCSe ) / ( ( RMSe / RCSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( ( FirstVNF_RAM / AMS ) ,( PN * FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem + MDR ),( MRS / ARS ) ) ) ,( Min( Max( PN,BR ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( CS,RMSe ) * ( RRSe - MUM ) ) / ( ( RMSe - MLU ) / ( MUC / MUC ) ) ) - ( ( ( DS + RCSe ) - ( CS - RMSe ) ) - Min( ( CS / RCSe ) ,( RRSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,Max( RRS,FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + ( Min( PN ,MDR ) + BR ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( ( BR / ACS ) ,Max( RRS,FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - ( Min( MLU ,CS ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,Max( RRS,FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * BR ),Max( MRS,MDR ) ) - ( AMS - Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe + ( ( DS / ( ( MUM + CS ) * DS ) ) + RCSe ) ) ,( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( MRS,MDR ) ) )", "choosing": "( ( ( MLU * RRSe ) - RMSe ) * Min( Min( RCSe ,RMSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( CRS - ( PN + FirstVNF_RAM_Server ) ) ) * FirstVNF_CPU_Server ) / ( CRS + DDR ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( PN,ACS ) * ( CRS - CRS ) ) + ( ( BR - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,MDR ) ) ) + ( Max( Min( FirstVNF_CPU ,BR ),Max( RRS,BR ) ) / ( ( ACS / AMS ) + Min( RRS ,AMS ) ) ) )", "choosing": "( ( ( ( RCSe + RMSe ) * Max( DS,( ( RMSe / RCSe ) - Min( CS ,MUM ) ) ) ) - ( ( DS * RRSe ) / Max( MLU,RMSe ) ) ) / Min( ( ( MUR + MUR ) + ( RCSe + MUM ) ) ,( ( MUM - MUC ) + Min( MUR ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * CRS ) ),( AMS - Max( ACS,FirstVNF_Mem ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( CS + MLU ),RRSe ) + ( ( ( MLU * RRSe ) - RMSe ) * Min( Min( RCSe ,RMSe ) ,MUC ) ) ) / ( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( ( MLU * RRSe ) - RMSe ) * Min( Min( RCSe ,RMSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,( CRS - ( PN + FirstVNF_RAM_Server ) ) ) / Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,Max( ACS,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( ( MLU + MUM ) / RMSe ) / ( RRSe - ( MLU - MUR ) ) ) ,MUM ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,MDR ) / ( AMS / ( Const * ( CRS - ( PN + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUM ) + Max( MUR,DS ) ),Max( Max( MUR,MUC ),( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,( Const - FirstVNF_CPU ) )", "choosing": "( ( RRSe / RMSe ) / ( MLU + Min( ( MLU - Max( MUC,MUM ) ) ,( ( MUR - RCSe ) / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MDR ,FirstVNF_Mem_Server ) ,( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - Max( MUC,MUM ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + ( Min( PN ,MDR ) + BR ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,MRS ) + ( DDR - AMS ) )", "choosing": "( ( Max( ( MLU / MLU ),( DS * MUR ) ) / MUC ) + ( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( Min( AMS ,MRS ) + ( ( BR * RRS ) + MDR ) ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( Max( ( MLU / MLU ),RRSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / ( BR + ( DDR - DDR ) ) ) - Const ) + Max( MDR,RRS ) )", "choosing": "( Min( CS ,MUC ) - ( ( MLU * ( DS + RCSe ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,MDR ) / ( AMS / ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) ) * Const ) ) )", "choosing": "Max( Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ),Max( Max( MUR,MUC ),( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,RRS ) * Const ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RRSe ,MLU ),( RRSe / ( ( RMSe + ( ( DS / DS ) * DS ) ) / ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RRSe ,MLU ),( RRSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Max( ( ( FirstVNF_RAM * ARS ) * ( ARS - FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_RAM ,AMS ),Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe + ( MLU + ( ( RCSe + RRSe ) * Min( RMSe ,RMSe ) ) ) ) ,( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_RAM ) - Min( FirstVNF_RAM ,PN ) )", "choosing": "( ( RRSe + RCSe ) - ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + ( Min( PN ,MDR ) + BR ) )", "choosing": "( ( MUM + Min( MUM ,RMSe ) ) / ( RRSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) + Min( Max( CRS,FirstVNF_Mem ) ,Const ) )", "choosing": "( ( RCSe + ( Min( RCSe ,MUR ) * RRSe ) ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( CS + MLU ),RRSe ) + RCSe ) / ( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( Max( FirstVNF_CPU,( Max( ( CRS - RRS ),FirstVNF_RAM ) - FirstVNF_RAM ) ) * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( MUR + MLU ),RRSe ) + RCSe ) / ( ( RMSe / RCSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( Max( FirstVNF_CPU,( Max( ( CRS - RRS ),FirstVNF_RAM ) - FirstVNF_RAM ) ) * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) * ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( MUR + MLU ),RRSe ) + RCSe ) / ( ( RMSe / RCSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( Max( FirstVNF_CPU,( Max( ( CRS - RRS ),FirstVNF_RAM ) - FirstVNF_RAM ) ) * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( MUR + MLU ),RRSe ) + RCSe ) / ( ( RMSe / RCSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( Max( FirstVNF_CPU,( Max( ( CRS - RRS ),FirstVNF_RAM ) - FirstVNF_RAM ) ) * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( MUR + MLU ),RRSe ) + RCSe ) / ( ( RMSe / RCSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,( ( ( RRS * MDR ) / Max( FirstVNF_Mem,FirstVNF_CPU ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) / ( CRS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Max( ( Min( Min( MUR ,RCSe ) ,RRSe ) - ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) ),RCSe ) / Max( DS,CS ) ) ,( MUC * ( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( Min( ARS ,Min( ( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ,RRS ) ) ,( Const - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Min( MUM ,DS ) ) / ( MLU + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * ARS ) * Min( ( AMS / PN ) ,PN ) ) / AMS ) * ( ( ( Min( ACS ,Min( DDR ,FirstVNF_RAM_Server ) ) / MRS ) / ( Const * DDR ) ) + ARS ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + ( ( Min( RRSe ,( MUM * MLU ) ) + ( MUM * DS ) ) / MUR ) ) ) ,RCSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8623837570038622}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( ( MLU / RCSe ),MUM ) ) ) - Min( Min( ( ( MUC * MUR ) / Max( DS,CS ) ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2966299676356561}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 0.49015748031496065, "obj2": 0.4405713191940235}, {"determining": "( Max( PN,ACS ) * ( ( ACS * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - ( Min( MUR ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27529243591518715}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( CRS - ( PN + FirstVNF_RAM_Server ) ) ) * FirstVNF_CPU_Server ) / ( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) + ( MUR + DS ) ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.7716535433070866, "obj2": 0.19586824828640134}, {"determining": "( ( AMS + ( FirstVNF_Mem - ( ( MRS - Min( RRS ,PN ) ) / FirstVNF_CPU_Server ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RCSe + ( Min( ( MUM + RCSe ) ,( Max( ( CS * MLU ),MLU ) * ( ( MUC / RMSe ) - RRSe ) ) ) - MUR ) ) * RMSe ) - Min( ( DS / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.7244094488188977, "obj2": 0.2202340736410595}, {"determining": "( ( PN * ACS ) * ( ( Min( ACS ,AMS ) * ( ( Min( ( MRS / FirstVNF_CPU ) ,RRS ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( RCSe / RMSe ) - Min( CS ,Min( RMSe ,( MUM - ( DS - ( Max( MLU,CS ) - MLU ) ) ) ) ) )", "obj1": 0.6279527559055118, "obj2": 0.23989802267001767}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - Min( Min( MUR ,RCSe ) ,MUM ) ),RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) )", "obj1": 0.7992125984251969, "obj2": 0.14772628296569476}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.6633858267716536, "obj2": 0.22511589522006245}, {"determining": "( ( AMS + Min( FirstVNF_Mem ,Min( RRS ,( ( ( RRS * MDR ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + ( ( AMS * MRS ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( ( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - Min( Min( MUR ,RCSe ) ,MUM ) ),RCSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( ( ( Max( DS,MLU ) - RMSe ) * MUM ) / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.12348016813813227}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( MLU / RRSe ) / Min( Max( MLU,RCSe ) ,DS ) ) ) - Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.09615909119526456}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) * ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5316607796701766}, {"determining": "( ( MRS - RRS ) - ( AMS - FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( RRSe ,( ( ( MUC * MUM ) / Max( MUM,( DS + MLU ) ) ) + DS ) ) )", "obj1": 0.9330708661417323, "obj2": 0.0645112354688265}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.4409448818897638, "obj2": 0.4481188369181869}, {"determining": "( ( ( PN / FirstVNF_RAM_Server ) - ARS ) + Max( Min( FirstVNF_Mem ,DDR ),RRS ) )", "choosing": "( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( RCSe / RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.022642498732241546}, {"determining": "( ( BR + DDR ) * ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5475365557470863}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / PN ) ) ) ) + ( Max( AMS,FirstVNF_CPU ) + BR ) )", "choosing": "( Min( ( ( RMSe * RMSe ) + ( RCSe / ( ( RCSe * Max( MUM,MUC ) ) / RMSe ) ) ) ,( ( MLU * RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.0735770238767347}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( FirstVNF_CPU_Server * Const ) + ( AMS + RRS ) ) )", "choosing": "Min( ( RRSe * DS ) ,Min( CS ,DS ) )", "obj1": 0.8503937007874016, "obj2": 0.09921364480998501}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + MDR ) )", "choosing": "Min( ( Max( ( Min( Min( MUR ,RCSe ) ,RRSe ) - ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) ),RCSe ) / Max( DS,CS ) ) ,( MUC * ( CS + MUC ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5728050617705963}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( ( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * AMS ),CRS ) )", "choosing": "Max( Max( ( ( Min( ( ( CS / Max( RRSe,RCSe ) ) * Min( RCSe ,RMSe ) ) ,( MUM - ( Min( MUR ,MUM ) / MUM ) ) ) / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( DS ,RCSe ) ,MUM ) )", "obj1": 0.4153543307086614, "obj2": 0.47245943758500764}, {"determining": "Min( ( ARS + CRS ) ,Max( AMS,MRS ) )", "choosing": "Max( ( MLU - RCSe ),( RMSe - DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7431263608727038}, {"determining": "( ( Const * DDR ) + ( MRS - ( DDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU + MUR ) + RRSe ) * Min( RMSe ,MUR ) )", "obj1": 0.9625984251968503, "obj2": 0.04579231678575206}, {"determining": "( ( Max( DDR,PN ) + Max( ( MDR + ( MDR / Const ) ),( MRS + FirstVNF_RAM ) ) ) + ( ( Max( DDR,MRS ) - ( MRS * AMS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Max( ( ( ( RMSe / CS ) + ( MUR + DS ) ) / ( ( MUM + CS ) / ( CS - DS ) ) ),( CS + RMSe ) )", "obj1": 0.4311023622047244, "obj2": 0.458383955257705}, {"determining": "( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.652796545836997}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,( Max( Max( DDR,PN ),PN ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.11220472440944881, "obj2": 0.8206158001303092}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * Max( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( ARS / FirstVNF_CPU_Server ) ) * Max( ACS,BR ) ) ),( ( ( ARS / FirstVNF_Mem_Server ) + ( BR / BR ) ) - Max( Min( MDR ,FirstVNF_Mem ),Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( ( DS - Max( Max( Min( MUC ,( Min( CS ,RCSe ) / RCSe ) ),RCSe ),CS ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6369004551074258}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,Max( FirstVNF_CPU_Server,( ( Const + CRS ) * AMS ) ) ) )", "choosing": "Max( Max( ( MLU / CS ),RRSe ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6329547375077723}, {"determining": "( ( ( FirstVNF_CPU_Server + Min( AMS ,Min( FirstVNF_Mem ,Min( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server * MDR ) ) ,RRS ) ) ) ) - ARS ) * ( ( ( ACS / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( ( ( RMSe * RRSe ) + Min( MLU ,MLU ) ) / RCSe ) - RMSe )", "obj1": 0.16141732283464566, "obj2": 0.7116093835333058}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + ( Max( AMS,FirstVNF_CPU ) + BR ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( ( MLU * RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.0735770238767347}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( Max( PN,MRS ) - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Max( ( PN + BR ),Max( Min( MDR ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - MLU ) )", "obj1": 0.2952755905511811, "obj2": 0.5781610187438517}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / Max( RRS,( ( PN * PN ) / FirstVNF_Mem ) ) ) ,( Max( Max( DDR,PN ),PN ) * Const ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( Max( ( Min( DS ,( MUC + MUM ) ) - MLU ),( CS * Min( DS ,MLU ) ) ) + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) + ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4924228064088578}, {"determining": "Min( ( ( FirstVNF_CPU - PN ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,Max( Min( ACS ,DDR ),Max( ( BR - MDR ),( Min( AMS ,BR ) / ( FirstVNF_Mem / DDR ) ) ) ) )", "choosing": "( Min( ( ( RRSe + RCSe ) + ( CS + RCSe ) ) ,( ( MUR + RCSe ) / ( MUC * RCSe ) ) ) - ( RRSe - CS ) )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( ( CRS * Min( ( DDR + ACS ) ,( Max( ACS,MDR ) * Max( ARS,( MDR + ACS ) ) ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( DS + Min( ( Max( ( RCSe / RMSe ),RCSe ) - MLU ) ,( MLU + CS ) ) ) ),( ( MUM + CS ) / ( CS - DS ) ) ),RRSe )", "obj1": 0.37401574803149606, "obj2": 0.5135198387086665}, {"determining": "Min( ( ( MRS + FirstVNF_CPU_Server ) / AMS ) ,( Max( Max( DDR,PN ),PN ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.27755905511811024, "obj2": 0.5933796701553311}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "( ( RMSe / RMSe ) - Min( RRSe ,RCSe ) )", "obj1": 0.17519685039370078, "obj2": 0.7013392608565668}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7903029109217262}, {"determining": "( Max( ( Max( ARS,BR ) + ( ACS - Const ) ),Min( ( Min( FirstVNF_CPU ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) ,Min( FirstVNF_RAM ,BR ) ) ) + ( ( ( CRS / FirstVNF_Mem_Server ) * ( AMS / RRS ) ) / ( ( FirstVNF_Mem + FirstVNF_Mem ) * Min( RRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.25, "obj2": 0.6104364990490243}, {"determining": "( ( Const + DDR ) + ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.9625984251968503, "obj2": 0.04579231678575206}, {"determining": "( Max( ( FirstVNF_CPU - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ),( Min( FirstVNF_CPU ,MDR ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( MUC + CS ) )", "obj1": 0.2578740157480315, "obj2": 0.5991395592650234}, {"determining": "( ( Const + ( FirstVNF_RAM * MDR ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.10433070866141732, "obj2": 0.8423093587913005}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6784244889898579}, {"determining": "( Min( FirstVNF_RAM ,Min( FirstVNF_RAM_Server ,CRS ) ) - FirstVNF_Mem_Server )", "choosing": "( ( RMSe + MUC ) / Max( DS,RMSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8260690896649929}, {"determining": "( ( Max( ( BR - MDR ),RRS ) + ( FirstVNF_RAM * MDR ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( Max( Max( RCSe,RCSe ),MLU ) - ( CS / RMSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6970407129057259}, {"determining": "( Max( Max( Max( ARS,DDR ),( ( DDR + Const ) * DDR ) ),FirstVNF_CPU_Server ) * ( ARS + ( DDR / Const ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / Min( MLU ,( ( MUC + RMSe ) / Max( ( DS / ( MUC / MUC ) ),Max( ( CS + RRSe ),MUC ) ) ) ) ) ,RCSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8511960137850357}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * AMS ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( FirstVNF_RAM + ( ( MDR + ACS ) + ( ARS - ARS ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7649100969551655}, {"determining": "( ( FirstVNF_RAM + ( ( MDR + ACS ) + ( ARS - ARS ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7794146096985186}, {"determining": "( ( FirstVNF_RAM + ( ( MDR + ACS ) + ( ARS - ARS ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7582329153227932}, {"determining": "( Max( Max( ( FirstVNF_CPU + BR ),Max( FirstVNF_Mem_Server,AMS ) ),ACS ) * ( CRS - CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( Max( RRSe,MUC ) ,MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6973564996126841}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * ( ACS - ( Max( ( ( PN - RRS ) + BR ),MRS ) * ( ( Min( Max( MDR,( ARS - FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / BR ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( MUR / ( ( RMSe + RCSe ) + MLU ) ) )", "obj1": 0.37401574803149606, "obj2": 0.5135198387086665}, {"determining": "Max( Max( ( DDR + FirstVNF_CPU_Server ),( MRS + BR ) ),( ( DDR / FirstVNF_RAM ) * ( Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( DS ,MUC ) )", "obj1": 0.2421259842519685, "obj2": 0.6161903267220418}, {"determining": "Min( Min( ( ( BR / ACS ) + Const ) ,FirstVNF_CPU_Server ) ,( ARS + Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,Max( RRS,FirstVNF_CPU_Server ) ),( ( MRS / FirstVNF_RAM ) - Min( FirstVNF_RAM ,PN ) ) ) ) ) )", "choosing": "( Min( MUC ,( MUR + MUC ) ) * ( ( Min( ( MUM - MUR ) ,RRSe ) - MLU ) / ( Min( MLU ,CS ) / CS ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5876272276565467}, {"determining": "( ( BR / AMS ) * ( Const / CRS ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,Min( ( ( RMSe * RCSe ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) ) ) * ( Max( ( DS - DS ),CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7872712883004617}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * AMS ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( Min( ( RRSe / RCSe ) ,Min( DS ,MUM ) ) + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "Max( ( ( CRS + PN ) + MDR ),( MRS - ( Max( ( ARS * DDR ),ACS ) - ACS ) ) )", "choosing": "( RMSe / ( RCSe * ( ( ( ( RRSe / ( DS + CS ) ) * MUC ) / DS ) * ( MLU - RMSe ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7654838512707329}, {"determining": "( ( Min( FirstVNF_CPU ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( Max( Max( DDR,PN ),PN ) * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "Min( ( Min( ( ( RRSe + RCSe ) + ( CS + RCSe ) ) ,( ( MUR + RCSe ) / ( MUC * RCSe ) ) ) + Max( RCSe,RCSe ) ) ,Min( ( RMSe - MUM ) ,Min( RMSe ,MUR ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6850838124129}, {"determining": "( ( CRS + FirstVNF_RAM_Server ) * Max( BR,MDR ) )", "choosing": "Max( Max( ( ( RMSe / ( MUR - DS ) ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( DS + ( Min( RCSe ,MUR ) * RRSe ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.5074381901396947}, {"determining": "( Max( PN,ACS ) * ( CRS - CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.24015748031496062, "obj2": 0.622752963934346}, {"determining": "( Max( PN,ACS ) * ( ( ( ACS / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - RMSe )", "obj1": 0.16141732283464566, "obj2": 0.7116093835333058}, {"determining": "( Max( ( FirstVNF_CPU - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ),( Min( FirstVNF_CPU ,MDR ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( MUC + CS ) )", "obj1": 0.2578740157480315, "obj2": 0.5991395592650234}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * AMS ) ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.24015748031496062, "obj2": 0.622752963934346}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8484137254714258}, {"determining": "( ( ( ( CRS / FirstVNF_Mem_Server ) * ( AMS / RRS ) ) / ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Min( RRS ,FirstVNF_Mem_Server ) ) ) + Max( ( Max( ARS,BR ) + ( ACS - Const ) ),( FirstVNF_Mem_Server + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU * RRSe ) - ( Min( MLU ,MUC ) / ( MLU / DS ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5897140650329997}, {"determining": "( ( BR / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7903029109217262}, {"determining": "( ( FirstVNF_RAM + ( ( MDR + ACS ) + ( ARS - ARS ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7582329153227932}, {"determining": "Max( ( FirstVNF_RAM_Server + AMS ),( ACS - FirstVNF_RAM ) )", "choosing": "( ( RMSe / RRSe ) - Min( MUR ,RCSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6784244889898579}, {"determining": "Max( ( MDR + ( CRS + ( ( Max( Min( DDR ,AMS ),FirstVNF_CPU ) + MRS ) + ( FirstVNF_CPU / Max( FirstVNF_RAM,ACS ) ) ) ) ),( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + DS ) / ( ( RMSe / Min( MUC ,MUR ) ) * ( Max( MUM,CS ) + DS ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7721455834522035}, {"determining": "Max( ( MDR + ( CRS + DDR ) ),( FirstVNF_RAM - ( Min( MRS ,FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / RMSe ) * DS ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7721455834522035}, {"determining": "Max( Min( ACS ,DDR ),Max( ( BR - MDR ),( Min( AMS ,BR ) / ( FirstVNF_Mem / DDR ) ) ) )", "choosing": "Min( ( Min( ( ( RRSe + RCSe ) + ( CS + RCSe ) ) ,( ( MUR + RCSe ) / ( MUC * RCSe ) ) ) + Max( RCSe,RCSe ) ) ,Min( ( RMSe - MUM ) ,Min( RMSe ,MUR ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6850838124129}, {"determining": "( ( ( ( CRS * RRS ) * DDR ) + ( FirstVNF_Mem - CRS ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe * MUC ) + Max( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ),RCSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.8523622047244095, "obj2": 0.09848558814354019}, {"determining": "( ( Min( FirstVNF_CPU ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( BR / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8484137254714258}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( Min( AMS ,MRS ) + ( ( BR * RRS ) + MDR ) ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.9980314960629921, "obj2": 0.001939409661468402}, {"determining": "( Min( ACS ,AMS ) * ( Max( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( ( RRS - ARS ) * Max( ACS,BR ) ) ),( Max( Min( MDR ,FirstVNF_Mem ),Max( BR,PN ) ) - ( ( ARS / FirstVNF_Mem_Server ) + ( ( Min( FirstVNF_Mem ,MRS ) / RRS ) / BR ) ) ) ) - MDR ) )", "choosing": "( CS * ( ( Min( MUR ,( RRSe + ( CS * ( MUR * MUR ) ) ) ) / RRSe ) * RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( Min( AMS ,MDR ) / ( AMS / ( Min( AMS ,RRS ) * Const ) ) )", "choosing": "Max( Max( ( ( RMSe + ( ( DS / DS ) * DS ) ) / ( RRSe - CS ) ),( ( DS * ( RCSe + RMSe ) ) + RMSe ) ),Max( Max( MUR,MUC ),( MUR / RCSe ) ) )", "obj1": 0.2854330708661417, "obj2": 0.58946668797876}, {"determining": "Min( ( ( FirstVNF_CPU - PN ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( RRSe - CS ) )", "obj1": 0.9960629921259843, "obj2": 0.002377069254485528}, {"determining": "( Min( AMS ,MDR ) / ( AMS / ( Min( AMS ,RRS ) * Const ) ) )", "choosing": "Max( Max( ( ( RMSe + ( ( DS / DS ) * DS ) ) / ( RRSe - CS ) ),( ( DS * ( RCSe + RMSe ) ) + RMSe ) ),Max( Max( MUR,MUC ),( MUR / RCSe ) ) )", "obj1": 0.2854330708661417, "obj2": 0.58946668797876}, {"determining": "Min( ( ( FirstVNF_CPU - PN ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( RRSe - CS ) )", "obj1": 0.9960629921259843, "obj2": 0.002377069254485528}, {"determining": "( Min( ACS ,AMS ) * ( Max( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( ( RRS - ARS ) * Max( ACS,BR ) ) ),( Max( Min( MDR ,FirstVNF_Mem ),Max( BR,PN ) ) - ( ( ARS / FirstVNF_Mem_Server ) + ( ( Min( FirstVNF_Mem ,MRS ) / RRS ) / BR ) ) ) ) - MDR ) )", "choosing": "( CS * ( ( Min( MUR ,( RRSe + ( CS * ( MUR * MUR ) ) ) ) / RRSe ) * RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Min( PN ,DDR ) )", "choosing": "Max( Min( Min( MUM ,Min( MLU ,MUR ) ) ,DS ),( RRSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_RAM ) - Min( FirstVNF_RAM ,PN ) )", "choosing": "( ( MUM - MUR ) / ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM ) * Max( FirstVNF_RAM,( FirstVNF_CPU * FirstVNF_CPU ) ) )", "choosing": "( ( DS * MUM ) + Max( MUC,( CS - ( Min( Min( ( ( MLU - MUC ) * RRSe ) ,MUC ) ,MLU ) * Max( Max( ( Min( MLU ,RMSe ) / ( MLU / RMSe ) ),( MLU / MUM ) ),RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MDR ,FirstVNF_Mem_Server ) ,( Const - FirstVNF_CPU ) )", "choosing": "( ( RRSe / RMSe ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - ( ACS / ARS ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( MUC * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( MRS,MDR ) ) )", "choosing": "Min( ( DS - RMSe ) ,Min( ( MUC - MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,RCSe ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( Max( FirstVNF_CPU,( Max( ( CRS - RRS ),FirstVNF_RAM ) - FirstVNF_RAM ) ) * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( MUR + MLU ),RRSe ) + RCSe ) / ( ( RMSe / RCSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( ( FirstVNF_RAM / AMS ) ,( PN * FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem + MDR ),( MRS / ARS ) ) ) ,( Min( Max( PN,BR ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( CS,RMSe ) * ( RRSe - MUM ) ) / ( ( RMSe - MLU ) / ( MUC / MUC ) ) ) - ( ( ( DS + RCSe ) - ( CS - RMSe ) ) - Min( ( CS / RCSe ) ,( RRSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,Max( RRS,FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + ( Min( PN ,MDR ) + BR ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( ( BR / ACS ) ,Max( RRS,FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - ( Min( MLU ,CS ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,Max( RRS,FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS * BR ),Max( MRS,MDR ) ) - ( AMS - Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe + ( ( DS / ( ( MUM + CS ) * DS ) ) + RCSe ) ) ,( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( MRS,MDR ) ) )", "choosing": "( ( ( MLU * RRSe ) - RMSe ) * Min( Min( RCSe ,RMSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( CRS - ( PN + FirstVNF_RAM_Server ) ) ) * FirstVNF_CPU_Server ) / ( CRS + DDR ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( PN,ACS ) * ( CRS - CRS ) ) + ( ( BR - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,MDR ) ) ) + ( Max( Min( FirstVNF_CPU ,BR ),Max( RRS,BR ) ) / ( ( ACS / AMS ) + Min( RRS ,AMS ) ) ) )", "choosing": "( ( ( ( RCSe + RMSe ) * Max( DS,( ( RMSe / RCSe ) - Min( CS ,MUM ) ) ) ) - ( ( DS * RRSe ) / Max( MLU,RMSe ) ) ) / Min( ( ( MUR + MUR ) + ( RCSe + MUM ) ) ,( ( MUM - MUC ) + Min( MUR ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( AMS + Min( FirstVNF_Mem ,Min( RRS ,( ( ( RRS * MDR ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + ( ( AMS * MRS ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( ( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - Min( Min( MUR ,RCSe ) ,MUM ) ),RCSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( ( ( Max( DS,MLU ) - RMSe ) * MUM ) / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,Min( ( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ,RRS ) ) ,( Const - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Min( MUM ,DS ) ) / ( MLU + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / Const ) ),( FirstVNF_RAM - ( ( MRS / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - ( MRS / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( Max( CS,RMSe ) * ( ( Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) ) / MUC ) * DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8675268220749567}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( ( MLU / RCSe ),MUM ) ) ) - Min( Min( ( ( MUC * MUR ) / Max( DS,CS ) ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2966299676356561}, {"determining": "( Max( PN,ACS ) * ( ( ACS * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - ( Min( MUR ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27529243591518715}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.4881889763779528, "obj2": 0.3954787223640377}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( ( RRS * MDR ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.7362204724409449, "obj2": 0.17840573564338447}, {"determining": "( ( AMS + ( FirstVNF_Mem - ( ( MRS - Min( RRS ,PN ) ) / FirstVNF_CPU_Server ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RCSe + ( Min( ( MUM + RCSe ) ,( Max( ( CS * MLU ),MLU ) * ( ( MUC / RMSe ) - RRSe ) ) ) - MUR ) ) * RMSe ) - Min( ( DS / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.7244094488188977, "obj2": 0.2202340736410595}, {"determining": "( ( PN * ACS ) * ( ( Min( ACS ,AMS ) * ( ( Min( ( MRS / FirstVNF_CPU ) ,RRS ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( RCSe / RMSe ) - Min( CS ,Min( RMSe ,( MUM - ( DS - ( Max( MLU,CS ) - MLU ) ) ) ) ) )", "obj1": 0.6279527559055118, "obj2": 0.23989802267001767}, {"determining": "( Max( ( ACS / AMS ),ACS ) * ( ( ( Max( Max( FirstVNF_Mem_Server,CRS ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) - CRS ) )", "choosing": "( ( Min( Min( ( MUC * MUM ) ,RCSe ) ,( CS - ( MLU - Min( RRSe ,CS ) ) ) ) / RCSe ) - RMSe )", "obj1": 0.45866141732283466, "obj2": 0.4408283613900025}, {"determining": "( ( AMS - Max( ACS,FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * RMSe ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.797244094488189, "obj2": 0.17293530422693892}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( MLU / RRSe ) / Min( Max( MLU,RCSe ) ,DS ) ) ) - Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.09615909119526456}, {"determining": "Max( ( AMS + DDR ),( FirstVNF_RAM - ( Min( ( ( BR - BR ) - MDR ) ,FirstVNF_CPU_Server ) * ACS ) ) )", "choosing": "( ( MUC + MUR ) / Max( MUC,MUR ) )", "obj1": 0.17913385826771652, "obj2": 0.6665649882928079}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / PN ) ) ) ) + ( Max( AMS,FirstVNF_CPU ) + BR ) )", "choosing": "( Min( ( ( RMSe * RMSe ) + ( RCSe / ( ( RCSe * Max( MUM,MUC ) ) / RMSe ) ) ) ,( ( MLU * RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.0735770238767347}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "( ( RMSe / RMSe ) - Min( RRSe ,RCSe ) )", "obj1": 0.17519685039370078, "obj2": 0.7013392608565668}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.6633858267716536, "obj2": 0.22511589522006245}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( ( RRS * MDR ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( ( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - Min( Min( MUR ,RCSe ) ,MUM ) ),RCSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.8248031496062992, "obj2": 0.11753945061261101}, {"determining": "( Max( PN,ACS ) * ( ( ( MRS - MDR ) - Min( ACS ,( Max( Const,DDR ) * MDR ) ) ) - CRS ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUM * MUC ) ),( ( MUM + DS ) / ( CS - DS ) ) ),( MUR / ( ( RMSe + RCSe ) + ( RCSe + DS ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.22880440168391328}, {"determining": "( ( BR + DDR ) * ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5265831418171107}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( FirstVNF_CPU_Server * Const ) + ( AMS + RRS ) ) )", "choosing": "Min( ( RRSe * DS ) ,Min( CS ,DS ) )", "obj1": 0.8503937007874016, "obj2": 0.09921364480998501}, {"determining": "( Max( PN,ACS ) * ( ( ( ACS / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - RMSe )", "obj1": 0.16141732283464566, "obj2": 0.7116093835333058}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( ( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * AMS ),CRS ) )", "choosing": "Max( Max( ( ( Min( ( ( CS / Max( RRSe,RCSe ) ) * Min( RCSe ,RMSe ) ) ,( MUM - ( Min( MUR ,MUM ) / MUM ) ) ) / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( DS ,RCSe ) ,MUM ) )", "obj1": 0.4153543307086614, "obj2": 0.47245943758500764}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + ( Max( AMS,FirstVNF_CPU ) + BR ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( ( MLU * RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.0735770238767347}, {"determining": "Min( ( ARS + CRS ) ,Max( AMS,MRS ) )", "choosing": "Max( ( MLU - RCSe ),( RMSe - DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7431263608727038}, {"determining": "( ( ( AMS + Const ) + FirstVNF_CPU ) - ( CRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( ( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - Min( Min( MUR ,RRSe ) ,MUM ) ),RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( ( ( ( ( ( MUC - MUM ) + MUM ) * RCSe ) * ( MLU - MUC ) ) * ( RMSe + MLU ) ) * MUC ) ) )", "obj1": 0.7992125984251969, "obj2": 0.14274819880035816}, {"determining": "( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.652796545836997}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * Max( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( ARS / FirstVNF_CPU_Server ) ) * Max( ACS,BR ) ) ),( ( ( ARS / FirstVNF_Mem_Server ) + ( BR / BR ) ) - Max( Min( MDR ,FirstVNF_Mem ),Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( ( DS - Max( Max( Min( MUC ,( Min( CS ,RCSe ) / RCSe ) ),RCSe ),CS ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6369004551074258}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + MDR ) )", "choosing": "Min( ( Max( ( Min( Min( MUR ,RCSe ) ,RRSe ) - ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) ),RCSe ) / Max( DS,CS ) ) ,( MUC * ( CS + MUC ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5728050617705963}, {"determining": "Min( ( ( MRS + FirstVNF_CPU_Server ) / AMS ) ,( Max( Max( DDR,PN ),PN ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5968156398260183}, {"determining": "( ( Const + DDR ) + ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.03837130576001069}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( Min( Min( RCSe ,MUM ) ,DS ),( RRSe / RCSe ) )", "obj1": 0.8031496062992126, "obj2": 0.1381592193344835}, {"determining": "( ( CRS + MRS ) * Max( Min( MRS ,Max( DDR,( FirstVNF_CPU_Server / PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( DS - RCSe ),Max( DS,RCSe ) ) + ( Max( MUC,CS ) - Min( MUM ,( CS - ( Min( RRSe ,( MLU * MLU ) ) - ( ( MUM * RMSe ) - CS ) ) ) ) ) ) - ( ( MUM / RRSe ) + ( MUC - ( MLU + ( CS + MUC ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.747260154675004}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( Max( PN,MRS ) - PN ) ) / Max( ( RRS + FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ) ,Max( Max( ( PN + BR ),Max( Min( MDR ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( MUR - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.328740157480315, "obj2": 0.5410244662828856}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( FirstVNF_CPU_Server / ARS ) ) * Max( ACS,BR ) ) ) + ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS / ( ( RCSe / DS ) * Max( MUC,MUC ) ) ) ,( ( DS * Max( Max( Min( MUC ,( Min( CS ,RCSe ) / RCSe ) ),RCSe ),CS ) ) - CS ) )", "obj1": 0.2204724409448819, "obj2": 0.628826565196591}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,( Max( Max( DDR,PN ),PN ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.11220472440944881, "obj2": 0.8206158001303092}, {"determining": "( ( AMS + Min( FirstVNF_Mem ,Min( RRS ,( ( ( RRS * MDR ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + ( ( AMS * MRS ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( ( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - Min( Min( MUR ,RCSe ) ,MUM ) ),RCSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( ( ( Max( DS,MLU ) - RMSe ) * MUM ) / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.12348016813813227}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.39960629921259844, "obj2": 0.47771699464383366}, {"determining": "( ( ( ( BR / ACS ) + Const ) + DDR ) * ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / Min( MUC ,( MUR + MUC ) ) ) ) - ( DS * CS ) ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5648103707257889}, {"determining": "( ( ( MRS / MRS ) / FirstVNF_Mem ) * ( DDR * Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "( ( MUC / Max( ( ( MUC - ( MUC - ( MUR + RMSe ) ) ) - DS ),( CS + MLU ) ) ) - Min( Min( ( MUR / DS ) ,( DS - RCSe ) ) ,( ( MUR * RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7903029109217262}, {"determining": "( ( FirstVNF_RAM + ( ( MDR + ACS ) + ( ARS - ARS ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7649100969551655}, {"determining": "( ( ( PN / FirstVNF_RAM_Server ) - ARS ) + Max( Min( FirstVNF_Mem ,DDR ),RRS ) )", "choosing": "( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( RCSe / RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.022642498732241546}, {"determining": "( Max( ( Max( ARS,BR ) + ( ACS - Const ) ),Min( ( Min( FirstVNF_CPU ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) ,Min( FirstVNF_RAM ,BR ) ) ) + ( ( ( CRS / FirstVNF_Mem_Server ) * ( AMS / RRS ) ) / ( ( FirstVNF_Mem + FirstVNF_Mem ) * Min( RRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.25, "obj2": 0.6104364990490243}, {"determining": "( ( ( PN / FirstVNF_RAM_Server ) - ARS ) + Max( Min( FirstVNF_Mem ,DDR ),RRS ) )", "choosing": "( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( RCSe / RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.022642498732241546}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( RMSe / RCSe ) - RMSe )", "obj1": 0.4271653543307087, "obj2": 0.4616542963346958}, {"determining": "( ( CRS * Min( ( DDR + ACS ) ,( Max( ACS,MDR ) * Max( ARS,( MDR + ACS ) ) ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( DS + Min( ( Max( ( RCSe / RMSe ),RCSe ) - MLU ) ,( MLU + CS ) ) ) ),( ( MUM + CS ) / ( CS - DS ) ) ),RRSe )", "obj1": 0.37401574803149606, "obj2": 0.5135198387086665}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( Max( PN,MRS ) - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Max( ( PN + BR ),Max( Min( MDR ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - MLU ) )", "obj1": 0.2952755905511811, "obj2": 0.5781610187438517}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),Min( RRS ,FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( PN * MRS ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( RMSe / RMSe ) * ( DS - RMSe ) )", "obj1": 0.4409448818897638, "obj2": 0.4481188369181869}, {"determining": "( Max( Max( Max( ARS,DDR ),( ( DDR + Const ) * DDR ) ),FirstVNF_CPU_Server ) * ( ARS + ( DDR / Const ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / Min( MLU ,( ( MUC + RMSe ) / Max( ( DS / ( MUC / MUC ) ),Max( ( CS + RRSe ),MUC ) ) ) ) ) ,RCSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8511960137850357}, {"determining": "( ( Const * DDR ) + ( MRS - ( DDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU + MUR ) + RRSe ) * Min( RMSe ,MUR ) )", "obj1": 0.9625984251968503, "obj2": 0.04579231678575206}, {"determining": "( ( MRS - RRS ) - ( AMS - FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( RRSe ,( ( ( MUC * MUM ) / Max( MUM,( DS + MLU ) ) ) + DS ) ) )", "obj1": 0.9330708661417323, "obj2": 0.0645112354688265}, {"determining": "Max( ( MDR + ( CRS + DDR ) ),( MRS - ( Min( MRS ,FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( RCSe + ( Min( RCSe ,MUR ) * RRSe ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4887325057539588}, {"determining": "( ( ( ( BR * ARS ) * Min( ( AMS / PN ) ,PN ) ) / AMS ) * ( ( ( Min( ACS ,Min( DDR ,FirstVNF_RAM_Server ) ) / MRS ) / ( Const * DDR ) ) + ARS ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + ( ( Min( RRSe ,( MUM * MLU ) ) + ( MUM * DS ) ) / MUR ) ) ) ,RCSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8623837570038622}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + ( Max( AMS,FirstVNF_CPU ) + BR ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.046606789741763355}, {"determining": "( Max( FirstVNF_CPU_Server,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( MLU / MUM ) ),( ( ( MLU + RRSe ) / ( MUR + MUR ) ) - Max( Max( MUR,DS ),( MLU + MUM ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4924228064088578}, {"determining": "Min( ( ( MRS + FirstVNF_CPU_Server ) / AMS ) ,( Max( Max( Min( RRS ,( ( ( RRS * MDR ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ),PN ),PN ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( Max( ( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - Min( Min( MUR ,RCSe ) ,MUM ) ),RCSe ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5900505026561746}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( ( MUM + CS ) / ( CS - DS ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.05724902257241456}, {"determining": "Min( Min( ( ( BR / ACS ) + Const ) ,FirstVNF_CPU_Server ) ,( ARS + Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,Max( RRS,FirstVNF_CPU_Server ) ),( ( MRS / FirstVNF_RAM ) - Min( FirstVNF_RAM ,PN ) ) ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5475365557470863}, {"determining": "Max( Max( ( DDR + FirstVNF_CPU_Server ),( MRS + BR ) ),( ( DDR / FirstVNF_RAM ) * ( Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( DS ,MUC ) )", "obj1": 0.2421259842519685, "obj2": 0.6161903267220418}, {"determining": "Min( ( ( MRS + DDR ) / AMS ) ,( FirstVNF_CPU_Server * Max( Max( ( FirstVNF_RAM - Const ),PN ),PN ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - RCSe ) ) ),( ( ( MLU + DS ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( Min( RCSe ,MUR ) ,RCSe ) )", "obj1": 0.2854330708661417, "obj2": 0.5821163353019472}, {"determining": "Min( ( ( FirstVNF_CPU - PN ) * Max( ( FirstVNF_CPU - Const ),Min( RRS ,Max( FirstVNF_CPU_Server,( ( Const + CRS ) * AMS ) ) ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.2736220472440945, "obj2": 0.5829011830571614}, {"determining": "( Max( ( Max( ARS,BR ) + ( ACS - Const ) ),Min( ( Min( FirstVNF_CPU ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) ,Min( FirstVNF_RAM ,BR ) ) ) + ( ( ( CRS / FirstVNF_Mem_Server ) * ( AMS / RRS ) ) / ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( AMS - FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC - ( ( MUC * MUM ) / Max( MUM,( DS + MLU ) ) ) ) - ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6212883249622029}, {"determining": "Min( ( ( FirstVNF_CPU - PN ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,Max( Min( ACS ,DDR ),Max( ( BR - MDR ),( Min( AMS ,BR ) / ( FirstVNF_Mem / DDR ) ) ) ) )", "choosing": "( Min( ( ( RRSe + RCSe ) + ( CS + RCSe ) ) ,( ( MUR + RCSe ) / ( MUC * RCSe ) ) ) - ( RRSe - CS ) )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( FirstVNF_Mem_Server - Min( FirstVNF_RAM ,PN ) )", "choosing": "( MUC / ( DS + MUC ) )", "obj1": 0.10826771653543307, "obj2": 0.8260690896649929}, {"determining": "( ( Const + ( FirstVNF_RAM * MDR ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.10433070866141732, "obj2": 0.8423093587913005}, {"determining": "Max( ( MDR + ( CRS + DDR ) ),( FirstVNF_RAM - ( Min( MRS ,FirstVNF_CPU_Server ) - ( ( Const + DDR ) + ( MRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / RCSe ) * DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.780473878346336}, {"determining": "Max( ( ( CRS + PN ) + MDR ),( MRS - ( Max( ( ARS * DDR ),ACS ) - ACS ) ) )", "choosing": "( RMSe / ( RCSe * ( ( ( ( RRSe / ( DS + CS ) ) * MUC ) / DS ) * ( MLU - RMSe ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7654838512707329}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) * ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5316607796701766}, {"determining": "( ( Min( FirstVNF_CPU ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "Min( ( ( FirstVNF_CPU - PN ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,Max( Min( ACS ,DDR ),Max( ( BR - MDR ),( Min( AMS ,BR ) / ( FirstVNF_Mem / DDR ) ) ) ) )", "choosing": "( Min( ( ( RRSe + RCSe ) + ( CS + RCSe ) ) ,( ( MUR + RCSe ) / ( MUC * RCSe ) ) ) - ( RRSe - CS ) )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * ( ACS - ( Max( ( ( PN - RRS ) + BR ),MRS ) * ( ( Min( Max( MDR,( ARS - FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / BR ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5316607796701766}, {"determining": "( ( ( ARS + ( RRS / DDR ) ) * FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server + DDR ) )", "choosing": "Max( Max( ( ( MUM + CS ) / ( CS - DS ) ),( ( RMSe / CS ) + ( RRSe + DS ) ) ),( MUR / ( ( MUM - Min( MUC ,RCSe ) ) + MLU ) ) )", "obj1": 0.37401574803149606, "obj2": 0.5135198387086665}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.4409448818897638, "obj2": 0.4481188369181869}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.6633858267716536, "obj2": 0.22511589522006245}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( CS / RMSe ) * DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7721959532801816}, {"determining": "( ( FirstVNF_Mem / ( ( MRS + ( ( Max( MRS,RRS ) * FirstVNF_RAM ) * ( MRS * ( RRS * ( DDR + RRS ) ) ) ) ) * MDR ) ) * ( DDR * FirstVNF_CPU ) )", "choosing": "( Min( ( Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) / ( ( DS - MLU ) / MUM ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.652796545836997}, {"determining": "( ( FirstVNF_CPU_Server + Min( DDR ,Const ) ) - ( AMS - FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Max( RRSe,( ( ( MUC * ( MUM + MUM ) ) / Max( MUM,( DS + MLU ) ) ) + DS ) ) )", "obj1": 0.9330708661417323, "obj2": 0.0645112354688265}, {"determining": "( ( CRS + FirstVNF_RAM_Server ) * Max( BR,MDR ) )", "choosing": "Max( Max( ( ( RMSe / ( MUR - DS ) ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( DS + ( Min( RCSe ,MUR ) * RRSe ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.5074381901396947}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - Min( ( ACS + FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Max( AMS,FirstVNF_CPU ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + Max( DS,RMSe ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - ( ( MLU + MUM ) * Max( MUR,DS ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.0490883303967193}, {"determining": "( ( ( FirstVNF_CPU_Server + Min( AMS ,Min( FirstVNF_Mem ,Min( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server * MDR ) ) ,RRS ) ) ) ) - ARS ) * ( ( ( ACS / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( ( ( RMSe * RRSe ) + Min( MLU ,MLU ) ) / RCSe ) - RMSe )", "obj1": 0.16141732283464566, "obj2": 0.7116093835333058}, {"determining": "( ( Max( DDR,PN ) + Max( ( MDR + ( MDR / Const ) ),( MRS + FirstVNF_RAM ) ) ) + ( ( Max( DDR,MRS ) - ( MRS * AMS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Max( ( ( ( RMSe / CS ) + ( MUR + DS ) ) / ( ( MUM + CS ) / ( CS - DS ) ) ),( CS + RMSe ) )", "obj1": 0.4311023622047244, "obj2": 0.458383955257705}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( PN / ( RRS * MDR ) ) + Max( Min( ARS ,FirstVNF_Mem ),( ( DDR * Const ) * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + RRS ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( ( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - Min( Min( MUR ,RCSe ) ,Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ),MUR ) + Min( MUC ,MLU ) ) ) - ( RRSe * DS ) )", "obj1": 0.8208661417322834, "obj2": 0.12143943694392094}, {"determining": "Min( ( ( MRS + FirstVNF_CPU_Server ) / ( FirstVNF_CPU * ( AMS * DDR ) ) ) ,( Max( PN,Max( DDR,PN ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) / ( CS + DS ) ) ,RCSe ) )", "obj1": 0.2933070866141732, "obj2": 0.5800103914909662}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * Max( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( ARS / FirstVNF_CPU_Server ) ) * Max( ACS,BR ) ) ),( ( ( ARS / FirstVNF_Mem_Server ) + ( BR / BR ) ) - Max( Min( MDR ,FirstVNF_Mem ),Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( ( DS - Max( Max( Min( MUC ,( Min( CS ,RCSe ) / RCSe ) ),RCSe ),CS ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6252301253460446}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,( Max( Max( DDR,PN ),PN ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.11220472440944881, "obj2": 0.8206158001303092}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * Max( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( ( RRS - ARS ) * Max( ACS,BR ) ) ),( Max( Min( MDR ,FirstVNF_Mem ),Max( BR,AMS ) ) - ( ( ARS / FirstVNF_Mem_Server ) + ( BR / BR ) ) ) ) )", "choosing": "Min( ( ( DS - RCSe ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5885072666740969}, {"determining": "( ( Max( DDR,PN ) + Max( ( ( ( MDR * FirstVNF_CPU_Server ) * ( ARS + DDR ) ) - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - RCSe ) )", "obj1": 0.4311023622047244, "obj2": 0.458383955257705}, {"determining": "Max( ( MDR + ( CRS + ( ( Max( Min( DDR ,AMS ),FirstVNF_CPU ) + MRS ) + ( FirstVNF_CPU / Max( FirstVNF_RAM,ACS ) ) ) ) ),( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + DS ) / ( ( RMSe / Min( MUC ,MUR ) ) * ( Max( MUM,CS ) + DS ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7721455834522035}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8484137254714258}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * Max( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( ARS / FirstVNF_CPU_Server ) ) * Max( ACS,BR ) ) ),( ( ( ARS / FirstVNF_Mem_Server ) + ( BR / BR ) ) - Max( Min( MDR ,FirstVNF_Mem ),Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( ( DS - Max( Max( Min( MUC ,( Min( CS ,RCSe ) / RCSe ) ),RCSe ),CS ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6252301253460446}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7903029109217262}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,Max( FirstVNF_CPU_Server,( ( Const + CRS ) * AMS ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.10433070866141732, "obj2": 0.8423093587913005}, {"determining": "( Min( ACS ,AMS ) * ( Max( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( ( RRS - ARS ) * Max( ACS,BR ) ) ),( Max( Min( MDR ,FirstVNF_Mem ),Max( BR,PN ) ) - ( ( ARS / FirstVNF_Mem_Server ) + ( ( Min( FirstVNF_Mem ,MRS ) / RRS ) / BR ) ) ) ) - MDR ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( RMSe / RMSe ),Max( MUR,DS ) ) ) )", "obj1": 0.9940944881889764, "obj2": 0.001987621770308655}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / Max( RRS,( ( PN * PN ) / FirstVNF_Mem ) ) ) ,( Max( Max( DDR,PN ),PN ) * Const ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( Max( ( Min( DS ,( MUC + MUM ) ) - MLU ),( CS * Min( DS ,MLU ) ) ) + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) + ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4924228064088578}, {"determining": "( Min( FirstVNF_RAM ,Min( FirstVNF_RAM_Server ,CRS ) ) - FirstVNF_Mem_Server )", "choosing": "( ( RMSe + MUC ) / Max( DS,RMSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8260690896649929}, {"determining": "( ( BR / AMS ) * ( Const / CRS ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,Min( ( ( RMSe * RCSe ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) ) ) * ( Max( ( DS - DS ),CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7872712883004617}, {"determining": "( ( BR + DDR ) * ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5475365557470863}, {"determining": "Min( ( ARS + CRS ) ,Max( AMS,MRS ) )", "choosing": "Max( ( MLU - RCSe ),( RMSe - DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7431263608727038}, {"determining": "Min( ( ( FirstVNF_CPU - PN ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,Max( Min( ACS ,DDR ),Max( ( BR - MDR ),( Min( AMS ,BR ) / ( FirstVNF_Mem / DDR ) ) ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( ( CRS * RRS ) * DDR ) + ( FirstVNF_Mem - CRS ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe * MUC ) + Max( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ),RCSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.8523622047244095, "obj2": 0.09848558814354019}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * ( ACS - ( Max( ( ( PN - RRS ) + BR ),MRS ) * ( ( Min( Max( MDR,( ARS - FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / BR ) ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}], "5": [{"determining": "Max( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / Const ) ),( FirstVNF_RAM - ( ( MRS / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - ( MRS / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( Max( CS,RMSe ) * ( ( Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) ) / MUC ) * DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8675268220749567}, {"determining": "( ( AMS + ( FirstVNF_Mem - ARS ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( RMSe / ( RCSe / MUR ) ) - Min( ( DS / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + Min( FirstVNF_Mem ,Min( RRS ,( ( ( RRS * MDR ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + ( ( AMS * MRS ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( ( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - Min( Min( MUR ,RCSe ) ,MUM ) ),RCSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( ( ( Max( DS,MLU ) - RMSe ) * MUM ) / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * Max( Max( Min( ( FirstVNF_RAM_Server + BR ) ,( FirstVNF_Mem + Min( ACS ,FirstVNF_CPU ) ) ),( Min( RRS ,( ARS / FirstVNF_CPU_Server ) ) * Max( ACS,BR ) ) ),( Min( Max( FirstVNF_RAM,FirstVNF_Mem ) ,PN ) - Max( Min( MDR ,FirstVNF_Mem ),Max( BR,AMS ) ) ) ) )", "choosing": "( ( MUC + MLU ) / ( RCSe * ( ( Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * ( RMSe / DS ) ) ) ) / RMSe ) * DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8675268220749567}, {"determining": "( ACS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( Max( DS,RCSe ) / ( MUC * MUR ) ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2966299676356561}, {"determining": "( ACS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Min( RCSe ,MUM ) ,DS ),( RRSe / RCSe ) )", "obj1": 0.5413385826771654, "obj2": 0.2841931647963464}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.4881889763779528, "obj2": 0.3954787223640377}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.7244094488188977, "obj2": 0.21969095997625943}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( Max( DS,RCSe ) / ( MUC * MUR ) ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.7854330708661418, "obj2": 0.16403198809356348}, {"determining": "( Max( PN,ACS ) * ( Min( ARS ,Min( ( MRS / CRS ) ,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUM ) / ( Max( MLU,RRSe ) / ( MUM / CS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.03679496872055998}, {"determining": "( Max( ( ACS / AMS ),ACS ) * ( ( ( Max( Max( FirstVNF_Mem_Server,CRS ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) - CRS ) )", "choosing": "( ( Min( Min( ( MUC * MUM ) ,RCSe ) ,( CS - ( MLU - Min( RRSe ,CS ) ) ) ) / RCSe ) - RMSe )", "obj1": 0.45866141732283466, "obj2": 0.4408283613900025}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( Max( ( MDR + ( CRS + DDR ) ),( MRS - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem - ARS ) ) ) ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( Min( ( ( RCSe + ( Min( RCSe ,MUR ) * RRSe ) ) + Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ,Max( MLU,CS ) ),( RRSe / RCSe ) )", "obj1": 0.8779527559055118, "obj2": 0.07683033178147794}, {"determining": "Max( ( AMS + DDR ),( FirstVNF_RAM - ( Min( ( ( BR - BR ) - MDR ) ,FirstVNF_CPU_Server ) * ACS ) ) )", "choosing": "( ( MUC + MUR ) / Max( MUC,MUR ) )", "obj1": 0.17913385826771652, "obj2": 0.6665649882928079}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Min( Min( ( MDR - Min( FirstVNF_RAM_Server ,PN ) ) ,Min( ( RRS - AMS ) ,FirstVNF_RAM_Server ) ) ,( Max( MRS,AMS ) + ( FirstVNF_Mem_Server - PN ) ) ) ) * Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / DS ) - Min( Min( Max( DS,( RMSe - MUC ) ) ,Max( Min( RRSe ,( Min( MLU ,MUC ) - Max( MLU,MUR ) ) ),Max( MUC,MUC ) ) ) ,RCSe ) )", "obj1": 0.4822834645669291, "obj2": 0.4069618039818946}, {"determining": "( ( ( PN / FirstVNF_RAM_Server ) - ARS ) + Max( Min( FirstVNF_Mem ,DDR ),RRS ) )", "choosing": "( RMSe / ( MUC * ( ( CS / ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.9665354330708661, "obj2": 0.028901782460844797}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / PN ) ) ) ) + ( Max( AMS,FirstVNF_CPU ) + BR ) )", "choosing": "( Min( ( ( RMSe * RMSe ) + ( RCSe / ( ( RCSe * Max( MUM,MUC ) ) / RMSe ) ) ) ,( ( MLU * RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.0735770238767347}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6043307086614174, "obj2": 0.2559045798429227}, {"determining": "( Max( PN,ACS ) * ( ( ACS * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - ( Min( MUR ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27529243591518715}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.6633858267716536, "obj2": 0.22511589522006245}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( Max( ( AMS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( AMS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS * MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.7303149606299213, "obj2": 0.1819366580731651}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),PN ) * ( ( ( MRS - RRS ) / Max( FirstVNF_CPU_Server,( ( Const + Max( FirstVNF_CPU,ARS ) ) * AMS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( MLU + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - ( ( RMSe + RRSe ) - ( DS * RMSe ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5604631517366797}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( ( RRS * MDR ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.7362204724409449, "obj2": 0.17840573564338447}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "( ( RMSe / RMSe ) - Min( RRSe ,RCSe ) )", "obj1": 0.17519685039370078, "obj2": 0.7013392608565668}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( MLU / RRSe ) / Min( Max( MLU,RCSe ) ,DS ) ) ) - Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.09615909119526456}, {"determining": "( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.652796545836997}, {"determining": "( ( PN * ACS ) * ( ( Min( ACS ,AMS ) * ( ( Min( ( MRS / FirstVNF_CPU ) ,RRS ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( RCSe / RMSe ) - Min( CS ,Min( RMSe ,( MUM - ( DS - ( Max( MLU,CS ) - MLU ) ) ) ) ) )", "obj1": 0.6279527559055118, "obj2": 0.23989802267001767}, {"determining": "( Max( PN,ACS ) * ( ( ( ACS / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - RMSe )", "obj1": 0.16141732283464566, "obj2": 0.7116093835333058}, {"determining": "Max( ( MDR + ( CRS + DDR ) ),( FirstVNF_RAM - ( Min( MRS ,FirstVNF_CPU_Server ) - ( ( Const + DDR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + DS ) / ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) * ( ( CS / RCSe ) * DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8189396800206609}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * Max( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( ARS / FirstVNF_CPU_Server ) ) * Max( ACS,BR ) ) ),( ( ( ARS / FirstVNF_Mem_Server ) + ( BR / BR ) ) - Max( Min( MDR ,FirstVNF_Mem ),Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( ( DS - Max( Max( Min( MUC ,( Min( CS ,RCSe ) / RCSe ) ),RCSe ),CS ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6369004551074258}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUC ) )", "obj1": 0.6259842519685039, "obj2": 0.2445602839154538}, {"determining": "Max( AMS,( FirstVNF_RAM - ( Min( MRS ,FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) ) / RMSe ) * DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.8168406405982631}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( RRSe * DS ) ,Min( CS ,DS ) )", "obj1": 0.8484251968503937, "obj2": 0.10339896060435852}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( MUR / ( ( RMSe + RCSe ) + MLU ) ) )", "obj1": 0.8287401574803149, "obj2": 0.1163232341958082}, {"determining": "( ( ( FirstVNF_Mem + MRS ) + DDR ) * ( ARS + DDR ) )", "choosing": "( ( ( ( ( CS * ( MUM - ( MLU * MLU ) ) ) * Min( MUM ,MUC ) ) - Max( RRSe,MUR ) ) - MUC ) - Min( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.1594488188976378, "obj2": 0.7380594917494367}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8484137254714258}, {"determining": "Min( Min( ( ( BR / ACS ) + Const ) ,FirstVNF_CPU_Server ) ,( ARS + BR ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( Min( DS ,MUC ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5177721088996484}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( FirstVNF_CPU_Server / ARS ) ) * Max( ACS,BR ) ) ) + ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS / ( ( RCSe / DS ) * Max( MUC,MUC ) ) ) ,( ( DS * Max( Max( Min( MUC ,( Min( CS ,RCSe ) / RCSe ) ),RCSe ),CS ) ) - CS ) )", "obj1": 0.2204724409448819, "obj2": 0.628826565196591}, {"determining": "( ( AMS + Min( FirstVNF_Mem ,Min( RRS ,( ( ( RRS * MDR ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + ( ( AMS * MRS ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( ( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - Min( Min( MUR ,RCSe ) ,MUM ) ),RCSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( ( ( Max( DS,MLU ) - RMSe ) * MUM ) / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.12348016813813227}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + ( ( ( FirstVNF_RAM * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * RCSe )", "obj1": 0.9901574803149606, "obj2": 0.010664134651508318}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( Max( PN,MRS ) - PN ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ,Max( Max( ( PN / BR ),Max( ( MDR * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MUR ) * DS ) + ( Min( ( DS / MUM ) ,RCSe ) - Min( Min( CS ,( ( ( ( MUM + RCSe ) + CS ) + RRSe ) / DS ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5748399946186271}, {"determining": "( ( FirstVNF_RAM + ( ( MDR + ACS ) + ( ARS - ARS ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7649100969551655}, {"determining": "( ( CRS + MRS ) * Max( Min( MRS ,Max( DDR,( FirstVNF_CPU_Server / PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( DS - RCSe ),Max( DS,RCSe ) ) + ( Max( MUC,CS ) - Min( MUM ,( CS - ( Min( RRSe ,( MLU * MLU ) ) - ( ( MUM * RMSe ) - CS ) ) ) ) ) ) - ( ( MUM / RRSe ) + ( MUC - ( MLU + ( CS + MUC ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.747260154675004}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7903029109217262}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Min( ( MRS + FirstVNF_RAM ) ,( MDR - ( MRS * BR ) ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,MUM ) / RRSe ) * ( ( ( MUR - RRSe ) - ( CS - ( MLU * Min( RCSe ,Max( MLU,MLU ) ) ) ) ) / RMSe ) )", "obj1": 0.4409448818897638, "obj2": 0.4481188369181869}, {"determining": "( Max( Max( Max( ARS,DDR ),( ( DDR + Const ) * DDR ) ),FirstVNF_CPU_Server ) * ( ARS + ( DDR / Const ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / Min( MLU ,( ( MUC + RMSe ) / Max( ( DS / ( MUC / MUC ) ),Max( ( CS + RRSe ),MUC ) ) ) ) ) ,RCSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8511960137850357}, {"determining": "( Max( PN,ACS ) * ( ( ( MRS - MDR ) - Min( ACS ,( Max( Const,DDR ) * MDR ) ) ) - CRS ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUM * MUC ) ),( ( MUM + DS ) / ( CS - DS ) ) ),( MUR / ( ( RMSe + RCSe ) + ( RCSe + DS ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.22880440168391328}, {"determining": "( ( CRS * Min( ( DDR + ACS ) ,( Max( ACS,MDR ) * Max( ARS,( MDR + ACS ) ) ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( DS + Min( ( Max( ( RCSe / RMSe ),RCSe ) - MLU ) ,( MLU + CS ) ) ) ),( ( MUM + CS ) / ( CS - DS ) ) ),RRSe )", "obj1": 0.37401574803149606, "obj2": 0.5135198387086665}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.39960629921259844, "obj2": 0.47771699464383366}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - Min( Min( MUR ,RCSe ) ,MUM ) ),RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) )", "obj1": 0.7992125984251969, "obj2": 0.14274819880035816}, {"determining": "Min( ( ( FirstVNF_CPU - PN ) * Max( ( FirstVNF_CPU - Const ),Min( RRS ,Max( FirstVNF_CPU_Server,( ( Const + CRS ) * AMS ) ) ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.2736220472440945, "obj2": 0.5829011830571614}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * Max( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( ARS / FirstVNF_CPU_Server ) ) * Max( ACS,BR ) ) ),( ( ( ARS / FirstVNF_Mem_Server ) + ( BR / BR ) ) - ( FirstVNF_Mem - BR ) ) ) )", "choosing": "Min( ( ( DS - Max( Max( Min( MUC ,( DS / RCSe ) ),RCSe ),CS ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6230791817167574}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - ( Min( ( MUM * ( CS + MUM ) ) ,DS ) * ( MUR * MUM ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27529243591518715}, {"determining": "Max( ( MDR + ( CRS + DDR ) ),( FirstVNF_RAM - ( Min( MRS ,FirstVNF_CPU_Server ) - ( ( Const + DDR ) + ( MRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5968156398260183}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - CRS ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( MUR / ( ( RMSe + RCSe ) + MLU ) ) )", "obj1": 0.6515748031496063, "obj2": 0.22880440168391328}, {"determining": "Max( ( MDR + ( MDR + FirstVNF_CPU ) ),( ( Min( FirstVNF_RAM_Server ,MRS ) / DDR ) * ( AMS / MRS ) ) )", "choosing": "( ( RMSe + RCSe ) / ( MUC * Min( Max( ( Min( MUM ,( ( MLU + RRSe ) * MLU ) ) / DS ),CS ) ,DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.46990207131362577}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( Max( PN,MRS ) - PN ) ) / Max( ( RRS + FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ) ,Max( Max( ( PN + BR ),Max( Min( MDR ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( MUR - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5748399946186271}, {"determining": "( ( ( PN / FirstVNF_RAM_Server ) - ARS ) + Max( Min( FirstVNF_Mem ,DDR ),RRS ) )", "choosing": "( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( RCSe / RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.022642498732241546}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,( Max( Max( DDR,PN ),PN ) * FirstVNF_CPU_Server ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4924228064088578}, {"determining": "Max( ( MDR + ( CRS + DDR ) ),( MRS - ( Min( MRS ,FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( RCSe + ( Min( RCSe ,MUR ) * RRSe ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4887325057539588}, {"determining": "( ( Max( Max( DDR,PN ),PN ) * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.2637795275590551, "obj2": 0.5946357531283404}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( ( RRS * MDR ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.7362204724409449, "obj2": 0.17840573564338447}, {"determining": "( Max( ( Max( ARS,BR ) + ( ACS - Const ) ),Min( ( Min( FirstVNF_CPU ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) ,Min( FirstVNF_RAM ,BR ) ) ) + ( ( ( CRS / FirstVNF_Mem_Server ) * ( AMS / RRS ) ) / ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( AMS - FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC - ( ( MUC * MUM ) / Max( MUM,( DS + MLU ) ) ) ) - ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6212883249622029}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( ( MLU / RCSe ),MUM ) ) ) - Min( Min( ( ( MUC * MUR ) / Max( DS,CS ) ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2966299676356561}, {"determining": "( Min( ( PN / FirstVNF_RAM_Server ) ,MDR ) + ( ( Const / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( ( ( ( ( ( MLU / CS ) - ( ( MUM + CS ) - MLU ) ) / ( CS / MLU ) ) * MLU ) * Max( ( RMSe + Max( MLU,Max( RCSe,( MUM + RMSe ) ) ) ),( Max( ( MLU - RRSe ),RRSe ) * CS ) ) ) / RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.022642498732241546}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS + RRS ),Min( ( Const - PN ) ,MDR ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( ( MLU + Min( ( Max( MUM,MUR ) * Max( RMSe,Min( DS ,DS ) ) ) ,( RCSe * ( MLU + MLU ) ) ) ) / ( MUR - MUC ) ) ,RCSe ) )", "obj1": 0.4881889763779528, "obj2": 0.3954787223640377}, {"determining": "Max( ( MDR + ( CRS + DDR ) ),( FirstVNF_RAM - ( Min( MRS ,FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / RMSe ) * DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7777317617686943}, {"determining": "Max( ( ( CRS + PN ) + MDR ),( MRS - ( Max( ( ARS * DDR ),ACS ) - ACS ) ) )", "choosing": "( RMSe / ( RCSe * ( ( ( ( RRSe / ( DS + CS ) ) * MUC ) / DS ) * ( MLU - RMSe ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7654838512707329}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( Min( Min( RCSe ,MUM ) ,DS ),( RRSe / RCSe ) )", "obj1": 0.8031496062992126, "obj2": 0.1381592193344835}, {"determining": "( ( BR + DDR ) * ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5256009684601144}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( Min( Min( RCSe ,MUM ) ,DS ),( RRSe / RCSe ) )", "obj1": 0.8031496062992126, "obj2": 0.1381592193344835}, {"determining": "( ( ( AMS + Const ) + FirstVNF_CPU ) - ( CRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( ( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - Min( Min( MUR ,RRSe ) ,MUM ) ),RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( ( ( ( ( ( MUC - MUM ) + MUM ) * RCSe ) * ( MLU - MUC ) ) * ( RMSe + MLU ) ) * MUC ) ) )", "obj1": 0.7992125984251969, "obj2": 0.14274819880035816}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( ( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * AMS ),CRS ) )", "choosing": "Max( Max( ( ( Min( ( ( CS / Max( RRSe,RCSe ) ) * Min( RCSe ,RMSe ) ) ,( MUM - ( Min( MUR ,MUM ) / MUM ) ) ) / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( DS ,RCSe ) ,MUM ) )", "obj1": 0.4153543307086614, "obj2": 0.47245943758500764}, {"determining": "Min( ( ( MRS + FirstVNF_CPU_Server ) / AMS ) ,( Max( Max( DDR,PN ),PN ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.25196850393700787, "obj2": 0.6103968069746696}, {"determining": "Max( ( MDR + ( CRS + ( ARS + CRS ) ) ),( FirstVNF_RAM - ( Min( MRS ,FirstVNF_CPU_Server ) - ( ( Const + DDR ) + ( MRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + DS ) / Max( ( MLU - RCSe ),( RMSe - DS ) ) )", "obj1": 0.31496062992125984, "obj2": 0.555236904859663}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.6633858267716536, "obj2": 0.22511589522006245}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),Min( RRS ,FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( PN * MRS ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( RMSe / RMSe ) * ( DS - RMSe ) )", "obj1": 0.4409448818897638, "obj2": 0.4481188369181869}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,( ( Max( FirstVNF_CPU,( AMS / FirstVNF_RAM_Server ) ) + Const ) * ACS ) ) )", "choosing": "( Min( ( Max( Min( RRSe ,MLU ),( RRSe / RRSe ) ) / ( MLU - RRSe ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.652796545836997}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,( Max( Min( Min( MDR ,AMS ) ,AMS ),Min( ( Min( ARS ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) ,Min( FirstVNF_RAM ,BR ) ) ) + Min( ( ( ( MRS + FirstVNF_RAM ) - ACS ) * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - Const ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),Min( Max( RCSe,( ( DS / Max( ( RRSe + RRSe ),Max( MUC,MLU ) ) ) / MUR ) ) ,( DS * Min( ( RCSe - Min( MLU ,MUM ) ) ,DS ) ) ) ),( ( ( MLU + RRSe ) / ( CS + MUR ) ) - Max( ( MLU + MUM ),( RMSe / RCSe ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.5043697239262512}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( ( AMS * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RMSe ,MLU ) ,MUM ) ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5549708915616834}, {"determining": "( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.4153543307086614, "obj2": 0.47245943758500764}, {"determining": "Min( ( ( FirstVNF_CPU - PN ) * Max( ( FirstVNF_CPU - Const ),Min( RRS ,Max( FirstVNF_CPU_Server,( ( Const + CRS ) * AMS ) ) ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.539570154843934}, {"determining": "Max( ( MDR + ( CRS + ( ( Max( Min( DDR ,AMS ),FirstVNF_CPU ) + MRS ) + ( FirstVNF_CPU / Max( FirstVNF_RAM,ACS ) ) ) ) ),( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + DS ) / ( ( RMSe / Min( MUC ,MUR ) ) * ( Max( MUM,CS ) + DS ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7721455834522035}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "( ( RMSe / RMSe ) - Min( RRSe ,RCSe ) )", "obj1": 0.17519685039370078, "obj2": 0.7013392608565668}, {"determining": "( ( Max( DDR,PN ) + Max( ( MDR + ( MDR / Const ) ),( MRS + FirstVNF_RAM ) ) ) + ( ( Max( DDR,MRS ) - ( MRS * AMS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Max( ( ( ( RMSe / CS ) + ( MUR + DS ) ) / ( ( MUM + CS ) / ( CS - DS ) ) ),( CS + RMSe ) )", "obj1": 0.4311023622047244, "obj2": 0.458383955257705}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) * ( Max( ( FirstVNF_Mem_Server - ( CRS * FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MDR ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS + CS ) ) ) ,( CS + ( MLU - MUC ) ) )", "obj1": 0.3464566929133858, "obj2": 0.526599728902886}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,Min( Const ,PN ) ) ) )", "choosing": "( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7448958363875577}, {"determining": "( Max( PN,ACS ) * ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + DS ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.24606299212598426, "obj2": 0.6104444009016141}, {"determining": "( ( ( ( BR * ARS ) * Min( ( AMS / PN ) ,PN ) ) / AMS ) * ( ( ( Min( ACS ,Min( DDR ,FirstVNF_RAM_Server ) ) / MRS ) / ( Const * DDR ) ) + ARS ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + ( ( Min( RRSe ,( MUM * MLU ) ) + ( MUM * DS ) ) / MUR ) ) ) ,RCSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8623837570038622}, {"determining": "( ( ( ARS + ( RRS / DDR ) ) * FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server + DDR ) )", "choosing": "Max( Max( ( ( MUM + CS ) / ( CS - DS ) ),( ( RMSe / CS ) + ( RRSe + DS ) ) ),( MUR / ( ( MUM - Min( MUC ,RCSe ) ) + MLU ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5036094689847957}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( CS / RMSe ) * DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7721959532801816}, {"determining": "( ( Max( Max( DDR,PN ),PN ) * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8623837570038622}, {"determining": "( ( Max( DDR,PN ) + Max( ( ( ( MDR * FirstVNF_CPU_Server ) * ( ARS + DDR ) ) - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - RCSe ) )", "obj1": 0.4311023622047244, "obj2": 0.458383955257705}, {"determining": "Min( ( ( FirstVNF_CPU - PN ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,Min( ACS ,( ( BR + ( BR * FirstVNF_CPU ) ) / Max( BR,Max( FirstVNF_Mem,MDR ) ) ) ) )", "choosing": "( Min( ( ( RRSe + RCSe ) + ( CS + RCSe ) ) ,( ( ( ( Min( RCSe ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / Max( Max( MUR,CS ),CS ) ) ) + RCSe ) / ( MUC * RCSe ) ) ) - ( RRSe - CS ) )", "obj1": 0.9921259842519685, "obj2": 0.004191336590887381}, {"determining": "( Max( PN,ACS ) * ( ( ( ACS / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - RMSe )", "obj1": 0.16141732283464566, "obj2": 0.7116093835333058}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * Max( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( ARS / FirstVNF_CPU_Server ) ) * Max( ACS,BR ) ) ),( ( ( ARS / FirstVNF_Mem_Server ) + ( BR / BR ) ) - Max( Min( MDR ,FirstVNF_Mem ),Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5430010820844907}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / Min( ( FirstVNF_CPU_Server + MDR ) ,Max( BR,( FirstVNF_CPU_Server / DDR ) ) ) ) )", "choosing": "( ( RCSe / RMSe ) - ( RCSe + MUM ) )", "obj1": 0.4271653543307087, "obj2": 0.4616542963346958}, {"determining": "Min( ( ( FirstVNF_CPU - PN ) * Max( ( FirstVNF_CPU - Const ),Min( RRS ,Max( FirstVNF_CPU_Server,( ( Const + CRS ) * AMS ) ) ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.2677165354330709, "obj2": 0.5898330484209953}, {"determining": "( ( BR / AMS ) * ( Const / CRS ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,Min( ( ( RMSe * RCSe ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) ) ) * ( Max( ( DS - DS ),CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7872712883004617}, {"determining": "Max( Max( ( DDR + FirstVNF_CPU_Server ),( MRS + BR ) ),( ( DDR / FirstVNF_RAM ) * ( Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5475365557470863}, {"determining": "( ( FirstVNF_RAM + ( MRS * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) - ( ( AMS + ( FirstVNF_RAM_Server / ACS ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( DS / ( MLU + ( RCSe + MUR ) ) ) ,RCSe ) - ( DS / ( Min( MUR ,( ( MUR - ( RCSe - DS ) ) * RRSe ) ) * Max( MUR,RRSe ) ) ) )", "obj1": 0.7244094488188977, "obj2": 0.21969095997625943}], "6": [{"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) ) )", "choosing": "Max( Min( Min( RCSe ,MUM ) ,DS ),( RRSe / Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( FirstVNF_Mem - ARS ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( RMSe / ( RCSe / MUR ) ) - Min( ( DS / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Max( ( PN * Const ),Min( RRS ,FirstVNF_CPU ) ) / Const ),FirstVNF_CPU_Server ) - ACS ) - ( FirstVNF_Mem_Server * ( CRS + MDR ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Min( ( DS / ( MLU + ( Min( ( ( MUR * RMSe ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) / MUM ) ) ) ,RCSe ) )", "obj1": 0.08070866141732283, "obj2": 0.869045109580726}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,PN ) * ( Const - MDR ) ) - CRS ) )", "choosing": "Max( Max( ( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) + ( RRSe + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( MUR / ( ( RMSe + RCSe ) + MLU ) ) )", "obj1": 0.7992125984251969, "obj2": 0.08606700541048477}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( Max( ( MDR + ( CRS + DDR ) ),( MRS - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem - ARS ) ) ) ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( Min( ( ( RCSe + ( Min( RCSe ,MUR ) * RRSe ) ) + Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ,Max( MLU,CS ) ),( RRSe / RCSe ) )", "obj1": 0.8779527559055118, "obj2": 0.07683033178147794}, {"determining": "( Max( ( Min( ARS ,FirstVNF_CPU_Server ) - DDR ),ARS ) - ( FirstVNF_Mem - Max( PN,MRS ) ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,( MUC * RRSe ) ) - ( MUR / DS ) ) ) - Min( Min( ( Max( DS,RCSe ) / ( MUC * MUR ) ) ,( DS / MLU ) ) ,( Max( MUR,RRSe ) - Min( ( Max( DS,RCSe ) / ( MUC * MUR ) ) ,( MUR / DS ) ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( Max( PN,ACS ) * Min( FirstVNF_CPU_Server ,( ( DDR - FirstVNF_Mem_Server ) * Const ) ) )", "choosing": "( ( Max( Max( Max( ( MUM / RRSe ),( CS - RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS - MUR ) ,RCSe ) )", "obj1": 0.6673228346456693, "obj2": 0.1841656929222104}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.4881889763779528, "obj2": 0.3954787223640377}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "Max( ( RMSe / RCSe ),( Min( ( MUM * ( CS + MUM ) ) ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.6496062992125984, "obj2": 0.22459865888851763}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.547244094488189, "obj2": 0.2636504758112807}, {"determining": "( Max( FirstVNF_RAM,PN ) * ( CRS - ( Max( ( FirstVNF_CPU_Server * PN ),MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( CS * ( DS / Max( ( RMSe / Max( ( MUR / MUM ),RMSe ) ),RCSe ) ) ),( MUR / ( ( RMSe + RCSe ) + ( RCSe + DS ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.045493017765476165}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8081604365385994}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( CRS + DDR ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) / ( CS - DS ) ) ),( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.7303149606299213, "obj2": 0.18192223913840166}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( ACS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) / ( ( Min( MUR ,DS ) * ( MUM * MUR ) ) - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.7933070866141733, "obj2": 0.13565292648413035}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - DDR ) ) - CRS ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.0271730063226635}, {"determining": "( ACS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Min( RCSe ,MUM ) ,DS ),( RRSe / RCSe ) )", "obj1": 0.5413385826771654, "obj2": 0.2841931647963464}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6003937007874016, "obj2": 0.256867513664807}, {"determining": "( ( ( PN / FirstVNF_RAM_Server ) - ARS ) + Max( Min( FirstVNF_Mem ,DDR ),RRS ) )", "choosing": "( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( RCSe / RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.02226330316375233}, {"determining": "Max( ( AMS + DDR ),( FirstVNF_RAM - ( Min( MRS ,FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6665649882928079}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) ) / RCSe ) - RMSe )", "obj1": 0.7775590551181102, "obj2": 0.16346517475127575}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.46653543307086615, "obj2": 0.4265446052312947}, {"determining": "Min( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) )", "obj1": 0.5078740157480315, "obj2": 0.28857499625891}, {"determining": "( ( CRS * ( ( ( FirstVNF_RAM * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.11614173228346457, "obj2": 0.7899720752033212}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Min( Min( ( MDR - Min( FirstVNF_RAM_Server ,PN ) ) ,Min( ( RRS - AMS ) ,FirstVNF_RAM_Server ) ) ,( Max( MRS,AMS ) + ( FirstVNF_Mem_Server - PN ) ) ) ) * Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / DS ) - Min( Min( Max( DS,( RMSe - MUC ) ) ,Max( Min( RRSe ,( Min( MLU ,MUC ) - Max( MLU,MUR ) ) ),Max( MUC,MUC ) ) ) ,RCSe ) )", "obj1": 0.4822834645669291, "obj2": 0.4069618039818946}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8484137254714258}, {"determining": "( Max( PN,ACS ) * ( ( Max( AMS,ACS ) + Min( ( MRS + AMS ) ,( RRS + ACS ) ) ) - CRS ) )", "choosing": "( ( RMSe * RCSe ) - ( ( MUR + MUC ) + ( ( DS * ( Min( ( MLU + RMSe ) ,DS ) - ( CS + MUR ) ) ) / RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7112875777334753}, {"determining": "( ( Max( DDR,PN ) + Max( ( ( ( MDR * FirstVNF_CPU_Server ) * ( ARS + DDR ) ) - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4871473591473225}, {"determining": "( ( PN * ACS ) * ( ( Min( ACS ,AMS ) * ( ( Min( ( MRS / FirstVNF_CPU ) ,RRS ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( RCSe / RMSe ) - Min( CS ,Min( RMSe ,( MUM - ( DS - ( Max( MLU,CS ) - MLU ) ) ) ) ) )", "obj1": 0.6279527559055118, "obj2": 0.23989802267001767}, {"determining": "( ( ( FirstVNF_Mem + MRS ) + DDR ) * ( ARS + DDR ) )", "choosing": "( ( ( ( ( CS * ( MUM - ( MLU * MLU ) ) ) * Min( MUM ,MUC ) ) - Max( RRSe,MUR ) ) - MUC ) - Min( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.1594488188976378, "obj2": 0.7380594917494367}, {"determining": "( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.652796545836997}, {"determining": "( Max( ( FirstVNF_CPU_Server * PN ),PN ) * ( Max( ( MRS - MRS ),Max( FirstVNF_CPU_Server,( ( Const + Max( ARS,FirstVNF_CPU ) ) * AMS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5643809968421842}, {"determining": "( ( FirstVNF_CPU + DDR ) - ( FirstVNF_CPU + ( AMS / DDR ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS + MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( ( ( RRSe * DS ) + MUC ) * ( ( RCSe - RCSe ) * RRSe ) ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( MUR / DS ) ,RCSe ) )", "obj1": 0.7381889763779528, "obj2": 0.17745118383512504}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "( ( RMSe / RMSe ) - Min( RRSe ,RCSe ) )", "obj1": 0.17519685039370078, "obj2": 0.7013392608565668}, {"determining": "( ( AMS + ( ( FirstVNF_RAM_Server * MRS ) - BR ) ) - ( ( DDR + AMS ) + FirstVNF_CPU ) )", "choosing": "( RMSe / ( MUC * ( ( CS / ( ( ( ( DS / MLU ) / DS ) + Max( DS,( DS * MUM ) ) ) * MUC ) ) * DS ) ) )", "obj1": 0.7874015748031497, "obj2": 0.1406749104680092}, {"determining": "( Max( PN,ACS ) * Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( Min( RRSe ,RRSe ) / ( Min( MUC ,MUC ) * ( MLU / ( RRSe + CS ) ) ) )", "obj1": 0.9212598425196851, "obj2": 0.035384949912612}, {"determining": "( ( ( FirstVNF_Mem - Min( Max( ACS,FirstVNF_RAM_Server ) ,( ( ( RRS + MDR ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS / FirstVNF_CPU ) ) ) ) ) + DDR ) * Max( RRS,( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( DS / Min( ( ( RMSe / DS ) * MUM ) ,Max( RCSe,RMSe ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.3641732283464567, "obj2": 0.512826458874226}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - Min( Min( MUR ,RCSe ) ,MUM ) ),RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) )", "obj1": 0.7834645669291339, "obj2": 0.1617965836585107}, {"determining": "Max( ( ( CRS + PN ) + MDR ),( MRS - ( Max( ( ARS * DDR ),ACS ) - ACS ) ) )", "choosing": "( RMSe / ( RCSe * ( ( ( ( RRSe / ( DS + CS ) ) * MUC ) / DS ) * ( MLU - RMSe ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7654838512707329}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + ( ( ( FirstVNF_RAM * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.9881889763779528, "obj2": 0.011929742745441101}, {"determining": "( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7533066136153196}, {"determining": "( Max( PN,ACS ) * ( Min( ARS ,Min( ( MRS / CRS ) ,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUM ) / ( Max( MLU,RRSe ) / ( MUM / CS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.03679496872055998}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( CS / RMSe ) * DS ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7746881588370781}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.39960629921259844, "obj2": 0.47771699464383366}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * Max( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( ARS / FirstVNF_CPU_Server ) ) * Max( ACS,BR ) ) ),( ( ( ARS / FirstVNF_Mem_Server ) + ( BR / BR ) ) - Max( Min( MDR ,FirstVNF_Mem ),Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( ( DS - Max( Max( Min( MUC ,( Min( CS ,RCSe ) / RCSe ) ),RCSe ),CS ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6369004551074258}, {"determining": "( Max( PN,ACS ) * ( ( ( ACS / AMS ) + DDR ) - CRS ) )", "choosing": "( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) - RMSe )", "obj1": 0.3562992125984252, "obj2": 0.5169081258571182}, {"determining": "Max( ( MDR + ( CRS + FirstVNF_CPU ) ),( ( Min( ( FirstVNF_Mem / CRS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe + RCSe ) / ( MUC * Min( Max( Max( ( MLU - ( Min( MUC ,MUM ) + RRSe ) ),( RCSe - DS ) ),CS ) ,DS ) ) )", "obj1": 0.08661417322834646, "obj2": 0.851345548231684}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUC ) )", "obj1": 0.6259842519685039, "obj2": 0.2445602839154538}, {"determining": "( ( BR / FirstVNF_Mem ) * ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( RCSe ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5361257828500874}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.2637795275590551, "obj2": 0.5889763556426139}, {"determining": "( ( Max( DDR,PN ) + Max( ( ( ( PN * FirstVNF_CPU_Server ) * ( ARS + DDR ) ) - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU * ( DS + RCSe ) ) / MUR ) - RCSe ) )", "obj1": 0.44881889763779526, "obj2": 0.4451231666291315}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,( Max( Min( Min( MDR ,AMS ) ,AMS ),Min( ( Min( ARS ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) ,Min( FirstVNF_RAM ,BR ) ) ) + Min( ( ( ( MRS + FirstVNF_RAM ) - ACS ) * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - Const ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),Min( Max( RCSe,( ( DS / Max( ( RRSe + RRSe ),Max( MUC,MLU ) ) ) / MUR ) ) ,( DS * Min( ( RCSe - Min( MLU ,MUM ) ) ,DS ) ) ) ),( ( ( MLU + RRSe ) / ( CS + MUR ) ) - Max( ( MLU + MUM ),( RMSe / RCSe ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.5043697239262512}, {"determining": "( ( ( ARS + ( RRS / DDR ) ) * FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server + DDR ) )", "choosing": "Max( Max( ( ( MUM + CS ) / ( CS - DS ) ),( ( RMSe / CS ) + ( RRSe + DS ) ) ),( MUR / ( ( MUM - Min( MUC ,RCSe ) ) + MLU ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5036094689847957}, {"determining": "( Max( ( ACS / AMS ),ACS ) * ( ( ( Max( Max( FirstVNF_Mem_Server,CRS ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) - CRS ) )", "choosing": "( ( Min( Min( ( MUC * MUM ) ,RCSe ) ,( CS - ( MLU - Min( RRSe ,CS ) ) ) ) / RCSe ) - RMSe )", "obj1": 0.45866141732283466, "obj2": 0.4408283613900025}, {"determining": "Min( ( ( FirstVNF_CPU - PN ) * Max( ( FirstVNF_CPU - Const ),Min( RRS ,Max( FirstVNF_CPU_Server,( ( Const + CRS ) * AMS ) ) ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.2736220472440945, "obj2": 0.5829011830571614}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) * ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( RMSe / RMSe ) - Max( RRSe,MUM ) )", "obj1": 0.1732283464566929, "obj2": 0.7023475744869536}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( Max( PN,MRS ) - PN ) ) / Max( ( RRS + FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ) ,Max( Max( ( PN + BR ),Max( Min( MDR ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( MUR - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5748399946186271}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * Max( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( ARS / FirstVNF_CPU_Server ) ) * Max( ACS,BR ) ) ),( ( ( ARS / FirstVNF_Mem_Server ) + ( BR / BR ) ) - Max( Min( MDR ,FirstVNF_Mem ),Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5430010820844907}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - ( Min( ( MUM * ( CS + MUM ) ) ,DS ) * ( MUR * MUM ) ) )", "obj1": 0.610236220472441, "obj2": 0.24871708429592912}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( ( Max( MRS,( FirstVNF_RAM_Server * ( MDR / Const ) ) ) * BR ) + AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( ( ( ( ( ( ( MUM / CS ) + CS ) - RRSe ) + CS ) + MUM ) * ( ( MLU * RRSe ) / ( ( MLU - Max( CS,RRSe ) ) / MUC ) ) ) / RMSe ) )", "obj1": 0.42322834645669294, "obj2": 0.46168291356488944}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( ( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * AMS ),CRS ) )", "choosing": "Max( Max( ( ( Min( ( ( CS / Max( RRSe,RCSe ) ) * Min( RCSe ,RMSe ) ) ,( MUM - ( Min( MUR ,MUM ) / MUM ) ) ) / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( DS ,RCSe ) ,MUM ) )", "obj1": 0.4153543307086614, "obj2": 0.47245943758500764}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),PN ) * ( ( ( MRS - RRS ) / Max( FirstVNF_CPU_Server,( ( Const + Max( FirstVNF_CPU,ARS ) ) * AMS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( MLU + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - ( ( RMSe + RRSe ) - ( DS * RMSe ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5604631517366797}, {"determining": "( Max( PN,ACS ) * Min( Max( MDR,( ARS - Const ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Max( ( ( MUM + CS ) / ( CS - DS ) ),( ( RMSe / CS ) + ( MUR + DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) + RMSe ) - Min( ( DS * CS ) ,RCSe ) ) - RMSe )", "obj1": 0.2125984251968504, "obj2": 0.6340692138942758}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.4035433070866142, "obj2": 0.47582745775693935}, {"determining": "Max( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / Const ) ),( FirstVNF_RAM - ( ( MRS / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - ( MRS / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( Max( CS,RMSe ) * ( ( Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) ) / MUC ) * DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8675268220749567}, {"determining": "( ( CRS + MRS ) * Max( Min( MRS ,Max( DDR,( FirstVNF_CPU_Server / PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( DS - RCSe ),Max( DS,RCSe ) ) + ( Max( MUC,CS ) - Min( MUM ,( CS - ( Min( RRSe ,( MLU * MLU ) ) - ( ( MUM * RMSe ) - CS ) ) ) ) ) ) - ( ( MUM / RRSe ) + ( MUC - ( MLU + ( CS + MUC ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.747260154675004}, {"determining": "( ( BR + DDR ) * ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5256009684601144}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.4881889763779528, "obj2": 0.3954787223640377}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / MDR ) ,( Max( Max( AMS,DDR ),Max( DDR,PN ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( DS - Max( Max( Min( MUC ,( DS / RCSe ) ),RCSe ),CS ) ) - CS ) ,( ( MLU + RCSe ) / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6213540115526721}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( Max( PN,MRS ) - PN ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ,Max( Max( ( PN / BR ),Max( ( MDR * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MUR ) * DS ) + ( Min( ( DS / MUM ) ,RCSe ) - Min( Min( CS ,( ( ( ( MUM + RCSe ) + CS ) + RRSe ) / DS ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5748399946186271}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),Min( RRS ,FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( PN * MRS ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( RMSe / RMSe ) * ( DS - RMSe ) )", "obj1": 0.4409448818897638, "obj2": 0.4481188369181869}, {"determining": "( Max( PN,ACS ) * ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + DS ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.24606299212598426, "obj2": 0.6104444009016141}, {"determining": "Max( ( AMS + DDR ),( FirstVNF_RAM - ( Min( ( ( BR - BR ) - MDR ) ,FirstVNF_CPU_Server ) * ACS ) ) )", "choosing": "( ( MUC + MUR ) / Max( MUC,MUR ) )", "obj1": 0.17913385826771652, "obj2": 0.6665649882928079}, {"determining": "Max( Max( ( DDR + FirstVNF_CPU_Server ),( MRS + BR ) ),( ( DDR / FirstVNF_RAM ) * ( Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5475365557470863}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( Max( ( AMS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( AMS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS * MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.7381889763779528, "obj2": 0.17745118383512504}, {"determining": "Max( ( MDR + ( CRS + DDR ) ),( FirstVNF_RAM - ( Min( MRS ,FirstVNF_CPU_Server ) - ( ( Const + DDR ) + ( MRS - ( ( RRS - ARS ) / RRS ) ) ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + DS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( MLU - RMSe ) ,RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5968156398260183}, {"determining": "( Max( PN,ACS ) * ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + DS ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.2440944881889764, "obj2": 0.6183009050769644}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,( ( Max( FirstVNF_CPU,( AMS / FirstVNF_RAM_Server ) ) + Const ) * ACS ) ) )", "choosing": "( Min( ( Max( Min( RRSe ,MLU ),( RRSe / RRSe ) ) / ( MLU - RRSe ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.652796545836997}, {"determining": "( FirstVNF_Mem_Server * Max( ( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * AMS ),CRS ) )", "choosing": "Max( Max( ( ( Min( ( ( CS / Max( RRSe,RCSe ) ) * Min( RCSe ,RMSe ) ) ,( MUM - ( Min( MUR ,MUM ) / MUM ) ) ) / CS ) + ( MUR + DS ) ),( ( MUM + ( CS / RMSe ) ) / ( CS - DS ) ) ),Min( Min( DS ,RCSe ) ,MUM ) )", "obj1": 0.2677165354330709, "obj2": 0.5852524950505169}, {"determining": "( ( Max( Max( DDR,PN ),PN ) * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.3169291338582677, "obj2": 0.5504545360091425}, {"determining": "Max( ( MDR + ( CRS + DDR ) ),( FirstVNF_RAM - ( Min( MRS ,FirstVNF_CPU_Server ) - ( ( Const + DDR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.22440944881889763, "obj2": 0.6262664536484068}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( FirstVNF_CPU_Server / ARS ) ) * Max( ACS,BR ) ) ) + ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS / ( ( RCSe / DS ) * Max( MUC,MUC ) ) ) ,( ( DS * Max( Max( Min( MUC ,( Min( CS ,RCSe ) / RCSe ) ),RCSe ),CS ) ) - CS ) )", "obj1": 0.33858267716535434, "obj2": 0.5288525892939746}, {"determining": "( ( AMS + ( ( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) ) - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - ( MLU + ( RCSe / MUR ) ) ),RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) )", "obj1": 0.9901574803149606, "obj2": 0.004010575046908247}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) * ( Max( ( FirstVNF_Mem_Server - ( CRS * FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MDR ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS + CS ) ) ) ,( CS + ( MLU - MUC ) ) )", "obj1": 0.3464566929133858, "obj2": 0.526599728902886}, {"determining": "Max( Max( FirstVNF_Mem_Server,ARS ),( AMS + ( DDR + Min( Const ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUM ) / ( MUC * Min( Max( ( RRSe * ( RMSe / RMSe ) ),MLU ) ,DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7718579112680265}, {"determining": "( ( Max( DDR,PN ) + Max( ( MDR + ( MDR / Const ) ),( MRS + FirstVNF_RAM ) ) ) + ( ( Max( DDR,MRS ) - ( MRS * AMS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Max( ( ( ( RMSe / CS ) + ( MUR + DS ) ) / ( ( MUM + CS ) / ( CS - DS ) ) ),( CS + RMSe ) )", "obj1": 0.4311023622047244, "obj2": 0.458383955257705}, {"determining": "Min( ( ( FirstVNF_CPU - PN ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,Max( Min( ACS ,DDR ),( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - CRS ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( RRSe ,RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0030480880493476982}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) * ( Max( ( MRS - RRS ),Max( FirstVNF_CPU_Server,( ( Const + CRS ) * AMS ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.25196850393700787, "obj2": 0.6032619684859745}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( ( MDR * FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( ( RMSe / RMSe ) - Min( RRSe ,RCSe ) ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.25, "obj2": 0.6063810670332939}, {"determining": "( ( ( ( MRS + ( ( ACS / AMS ) + Min( RRS ,AMS ) ) ) * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( RMSe / RCSe ) + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.31299212598425197, "obj2": 0.557943370904732}, {"determining": "( ( Max( DDR,PN ) + Max( ( ( ( MDR * FirstVNF_CPU_Server ) * ( ARS + DDR ) ) - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - RCSe ) )", "obj1": 0.4311023622047244, "obj2": 0.458383955257705}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,Min( Const ,PN ) ) ) )", "choosing": "( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7448958363875577}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Min( ( MRS + FirstVNF_RAM ) ,( MDR - ( MRS * BR ) ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,MUM ) / RRSe ) * ( ( ( MUR - RRSe ) - ( CS - ( MLU * Min( RCSe ,Max( MLU,MLU ) ) ) ) ) / RMSe ) )", "obj1": 0.4409448818897638, "obj2": 0.4481188369181869}, {"determining": "( Max( ( Max( ARS,BR ) + ( ACS - Const ) ),Min( ( Min( FirstVNF_CPU ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) ,Min( FirstVNF_RAM ,BR ) ) ) + ( ( ( CRS / FirstVNF_Mem_Server ) * ( AMS / RRS ) ) / ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( AMS - FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC - ( ( MUC * MUM ) / Max( MUM,( DS + MLU ) ) ) ) - ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6212883249622029}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ARS + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( RMSe - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.7362204724409449, "obj2": 0.17840022096741}, {"determining": "( Max( PN,ACS ) * ( ( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) - CRS ) )", "choosing": "( ( Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) ) / RCSe ) - RMSe )", "obj1": 0.45866141732283466, "obj2": 0.4408283613900025}, {"determining": "Max( ( MDR + ( CRS + ( ARS + CRS ) ) ),( FirstVNF_RAM - ( Min( MRS ,FirstVNF_CPU_Server ) - ( ( Const + DDR ) + ( MRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + DS ) / Max( ( MLU - RCSe ),( RMSe - DS ) ) )", "obj1": 0.31496062992125984, "obj2": 0.555236904859663}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6043307086614174, "obj2": 0.2559045798429227}, {"determining": "( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.4153543307086614, "obj2": 0.47245943758500764}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / Min( ( FirstVNF_CPU_Server + MDR ) ,Max( BR,( FirstVNF_CPU_Server / DDR ) ) ) ) )", "choosing": "( ( RCSe / RMSe ) - ( RCSe + MUM ) )", "obj1": 0.4271653543307087, "obj2": 0.4616542963346958}, {"determining": "( Max( Max( Max( ARS,DDR ),( ( DDR + Const ) * DDR ) ),FirstVNF_CPU_Server ) * ( ARS + ( DDR / Const ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / Min( MLU ,( ( MUC + RMSe ) / Max( ( DS / ( MUC / MUC ) ),Max( ( CS + RRSe ),MUC ) ) ) ) ) ,RCSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8511960137850357}], "7": [{"determining": "( ( AMS + ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / Const ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - ( MLU + ( RCSe / MUR ) ) ),RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) ) )", "choosing": "Max( Min( Min( RCSe ,MUM ) ,DS ),( RRSe / Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Max( ( PN * Const ),Min( RRS ,FirstVNF_CPU ) ) / Const ),FirstVNF_CPU_Server ) - ACS ) - ( FirstVNF_Mem_Server * ( CRS + MDR ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Min( ( DS / ( MLU + ( Min( ( ( MUR * RMSe ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) / MUM ) ) ) ,RCSe ) )", "obj1": 0.08070866141732283, "obj2": 0.869045109580726}, {"determining": "( Max( PN,ACS ) * Min( FirstVNF_CPU_Server ,( ( DDR - FirstVNF_Mem_Server ) * Const ) ) )", "choosing": "( ( Max( Max( Max( ( MUM / RRSe ),( CS - RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS - MUR ) ,RCSe ) )", "obj1": 0.6673228346456693, "obj2": 0.1841656929222104}, {"determining": "( Max( ( Min( ARS ,FirstVNF_CPU_Server ) - DDR ),ARS ) - ( FirstVNF_Mem - Max( PN,MRS ) ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,( MUC * RRSe ) ) - ( MUR / DS ) ) ) - Min( Min( ( Max( DS,RCSe ) / ( MUC * MUR ) ) ,( DS / MLU ) ) ,( Max( MUR,RRSe ) - Min( ( Max( DS,RCSe ) / ( MUC * MUR ) ) ,( MUR / DS ) ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,PN ) * ( Const - MDR ) ) - CRS ) )", "choosing": "Max( Max( ( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) + ( RRSe + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( MUR / ( ( RMSe + RCSe ) + MLU ) ) )", "obj1": 0.7992125984251969, "obj2": 0.08606700541048477}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.4921259842519685, "obj2": 0.39259222757653267}, {"determining": "( ( ( Min( ACS ,AMS ) * ( Const - DDR ) ) / FirstVNF_Mem ) * ( MRS + ( Max( Const,Min( RRS ,FirstVNF_Mem_Server ) ) - ( ACS + ( Min( RRS ,MRS ) + ( Const + CRS ) ) ) ) ) )", "choosing": "( ( Max( ( DS - DS ),Max( RCSe,DS ) ) * ( Max( MUC,CS ) - Max( MLU,MUM ) ) ) - ( MUR * RCSe ) )", "obj1": 0.8582677165354331, "obj2": 0.08596288321439399}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8081604365385994}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( Max( ( MDR + ( CRS + DDR ) ),( MRS - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem - ARS ) ) ) ) + DDR ) + FirstVNF_CPU ) )", "choosing": "Max( Min( ( ( RCSe + ( Min( RCSe ,MUR ) * RRSe ) ) + Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ,Max( MLU,CS ) ),( RRSe / RCSe ) )", "obj1": 0.8779527559055118, "obj2": 0.07683033178147794}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( Max( FirstVNF_CPU,Max( MRS,Max( FirstVNF_RAM_Server,MDR ) ) ) ,( ( Max( Max( AMS,RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( AMS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR - RMSe ) + ( ( ( RMSe - Max( MUC,( DS + MLU ) ) ) * CS ) / ( ( RMSe + ( RRSe * RRSe ) ) * MUC ) ) ) * ( DS - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.765748031496063, "obj2": 0.1549984286069789}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( ACS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) / ( ( Min( MUR ,DS ) * ( MUM * MUR ) ) - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.7933070866141733, "obj2": 0.13565292648413035}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( ( ACS + DDR ),Min( ARS ,FirstVNF_Mem ) ) ) ) ) ) - ( ( Min( AMS ,DDR ) + PN ) + FirstVNF_CPU ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) / Min( RCSe ,DS ) ) ),( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( MUM - Min( RCSe ,MUM ) ) ) - ( ( MLU + MUM ) * Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.7303149606299213, "obj2": 0.18192223913840164}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( BR,RRS ) ) ) ) / Const ) * Min( PN ,MDR ) )", "choosing": "( ( Max( Max( ( ( CS / ( ( RCSe / MUC ) + ( MUC * CS ) ) ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) + MUR ) ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.6364808078217272}, {"determining": "( ACS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Min( RCSe ,MUM ) ,DS ),( RRSe / RCSe ) )", "obj1": 0.5413385826771654, "obj2": 0.2841931647963464}, {"determining": "( ( CRS + DDR ) * ( ARS + DDR ) )", "choosing": "( ( ( MLU / CS ) + ( ( Min( Min( Max( ( RMSe - RRSe ),( RRSe * RMSe ) ) ,MLU ) ,( RCSe * RRSe ) ) - DS ) + ( ( ( CS - ( ( MUM + MUR ) - ( RCSe * MUM ) ) ) * Max( Max( ( MUM - RRSe ),MUR ),MUC ) ) - Min( MUM ,CS ) ) ) ) - Min( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.16929133858267717, "obj2": 0.6911534282421287}, {"determining": "( Max( PN,ACS ) * ( ( Max( AMS,ACS ) + Min( ( MRS + AMS ) ,( RRS + ACS ) ) ) - CRS ) )", "choosing": "( ( RMSe * RCSe ) - ( ( MUR + MUC ) + ( ( DS * ( Min( ( MLU + RMSe ) ,DS ) - ( CS + MUR ) ) ) / RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7112875777334753}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.24590951591095564}, {"determining": "( Max( PN,ACS ) * ( ( ( ACS * AMS ) * ( Const - ( Const / ARS ) ) ) - CRS ) )", "choosing": "( ( Min( RRSe ,MUM ) / ( ( Min( DS ,MUM ) * CS ) + Max( RCSe,DS ) ) ) * ( RMSe / RMSe ) )", "obj1": 0.8976377952755905, "obj2": 0.05027988243184715}, {"determining": "Max( ( MDR + ( ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) + FirstVNF_CPU ) ),( ( Min( ( FirstVNF_Mem / CRS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe + RCSe ) / ( MUC * Min( Max( Max( ( MLU - ( Min( MUC ,MUM ) + RRSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),CS ) ,DS ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8462484367520415}, {"determining": "( Max( PN,ACS ) * ( ( Min( AMS ,( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * Min( FirstVNF_Mem ,( ACS + FirstVNF_CPU_Server ) ) ) * CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( MUR / DS ),RCSe ) )", "obj1": 0.6220472440944882, "obj2": 0.24425655951557967}, {"determining": "Max( ( AMS + DDR ),( FirstVNF_RAM - ( Min( ( ( BR - BR ) - MDR ) ,FirstVNF_CPU_Server ) * ACS ) ) )", "choosing": "( ( MUC + MUR ) / Max( MUC,MUR ) )", "obj1": 0.17913385826771652, "obj2": 0.6665649882928079}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "Max( ( RMSe / RCSe ),( Min( ( MUM * ( CS + MUM ) ) ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.6496062992125984, "obj2": 0.22459865888851763}, {"determining": "( ( RRS - BR ) + ( ( ( MRS * AMS ) - ( DDR + MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( Min( ( ( ( MUM * RMSe ) * ( ( Max( CS,DS ) + RMSe ) * MLU ) ) / MUR ) ,RCSe ) - ( CS * MUC ) )", "obj1": 0.46062992125984253, "obj2": 0.4204045852142636}, {"determining": "( ( ( PN / FirstVNF_RAM_Server ) - ARS ) + Max( Min( FirstVNF_Mem ,DDR ),RRS ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU * ( DS + RCSe ) ) / MUR ) - RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.02201067875755727}, {"determining": "( ( ( FirstVNF_Mem + MRS ) + DDR ) * ( ARS + DDR ) )", "choosing": "( ( ( ( ( CS * ( MUM - ( MLU * MLU ) ) ) * Min( MUM ,MUC ) ) - Max( RRSe,MUR ) ) - MUC ) - Min( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.1594488188976378, "obj2": 0.7380594917494367}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS * MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.5078740157480315, "obj2": 0.28853306143909857}, {"determining": "Max( ( AMS + DDR ),( FirstVNF_RAM - ( Min( MRS ,FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6665649882928079}, {"determining": "( ( PN * ACS ) * ( ( Min( ACS ,AMS ) * ( ( Min( ( MRS / FirstVNF_CPU ) ,RRS ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( RCSe / RMSe ) - Min( CS ,Min( RMSe ,( MUM - ( DS - ( Max( MLU,CS ) - MLU ) ) ) ) ) )", "obj1": 0.6279527559055118, "obj2": 0.23989802267001767}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - DDR ) ) - CRS ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( RRSe ,MUM ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.025571674548616783}, {"determining": "( Max( ( FirstVNF_CPU_Server * PN ),PN ) * ( Max( ( MRS - MRS ),Max( FirstVNF_CPU_Server,( ( Const + Max( ARS,FirstVNF_CPU ) ) * AMS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5643809968421842}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - Min( AMS ,ACS ) ) )", "choosing": "Max( ( RMSe / RCSe ),( Min( ( RCSe * ( ( CS - MUC ) + MUM ) ) ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.6456692913385826, "obj2": 0.2276821598314542}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.547244094488189, "obj2": 0.2636504758112807}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( Max( ( MRS - Const ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( CRS + DDR ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) / ( CS - DS ) ) ),( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / ( CS / RMSe ) ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.781496062992126, "obj2": 0.1456546767506364}, {"determining": "( ( CRS * ( ( ( FirstVNF_RAM * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * ( FirstVNF_Mem - BR ) ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( CS / ( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.11614173228346457, "obj2": 0.7897175613136378}, {"determining": "( ( Max( DDR,PN ) + Max( ( ( ( PN * FirstVNF_CPU_Server ) * ( ARS + DDR ) ) - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU * ( DS + ( ( CS / RMSe ) * DS ) ) ) / MUR ) - RCSe ) )", "obj1": 0.48031496062992124, "obj2": 0.4174036134984533}, {"determining": "( Max( PN,ACS ) * Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( Min( RRSe ,RRSe ) / ( Min( MUC ,MUC ) * ( MLU / ( RRSe + CS ) ) ) )", "obj1": 0.9212598425196851, "obj2": 0.035384949912612}, {"determining": "( Max( PN,ACS ) * ( ( Max( FirstVNF_Mem_Server,( ( ACS * ( ( CRS - AMS ) / ( MDR * FirstVNF_RAM_Server ) ) ) / DDR ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / MUR ) - ( RRSe + RCSe ) )", "obj1": 0.3228346456692913, "obj2": 0.5419934972447664}, {"determining": "( Max( ( ACS / AMS ),ACS ) * ( ( ( Max( Max( FirstVNF_Mem_Server,CRS ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) - CRS ) )", "choosing": "( ( Min( Min( ( MUC * MUM ) ,RCSe ) ,( CS - ( MLU - Min( RRSe ,CS ) ) ) ) / RCSe ) - RMSe )", "obj1": 0.45866141732283466, "obj2": 0.4408283613900025}, {"determining": "Max( ( ( CRS + PN ) + MDR ),( MRS - ( Max( ( ARS * DDR ),ACS ) - ACS ) ) )", "choosing": "( RMSe / ( RCSe * ( ( ( ( RRSe / ( DS + CS ) ) * MUC ) / DS ) * ( MLU - RMSe ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7654838512707329}, {"determining": "Min( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - Min( ( Max( CS,RCSe ) - RCSe ) ,Max( RMSe,MUC ) ) )", "obj1": 0.562992125984252, "obj2": 0.25838024799586407}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Min( Min( ( MDR - Min( FirstVNF_RAM_Server ,PN ) ) ,Min( ( RRS - AMS ) ,FirstVNF_RAM_Server ) ) ,( Max( MRS,AMS ) + ( FirstVNF_Mem_Server - PN ) ) ) ) * Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / DS ) - Min( Min( Max( DS,( RMSe - MUC ) ) ,Max( Min( RRSe ,( Min( MLU ,MUC ) - Max( MLU,MUR ) ) ),Max( MUC,MUC ) ) ) ,RCSe ) )", "obj1": 0.4822834645669291, "obj2": 0.4069618039818946}, {"determining": "( Max( PN,ACS ) * ( ( ( ACS / AMS ) + DDR ) - CRS ) )", "choosing": "( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) - RMSe )", "obj1": 0.3562992125984252, "obj2": 0.5169081258571182}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( Max( ( AMS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( AMS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS * MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.7381889763779528, "obj2": 0.17745118383512504}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + ( ( PN - Min( Min( ( MDR - Min( FirstVNF_RAM_Server ,PN ) ) ,Min( Min( RRS ,AMS ) ,FirstVNF_RAM_Server ) ) ,CRS ) ) * Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( RCSe / MLU ) + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( CS + MUR ) ) - Max( ( MLU + MUM ),( RMSe / RCSe ) ) ) )", "obj1": 0.42913385826771655, "obj2": 0.4561301340318007}, {"determining": "( ( Max( DDR,PN ) + Max( ( ( ( MDR * FirstVNF_CPU_Server ) * ( ARS + DDR ) ) - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4871473591473225}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( ACS - FirstVNF_Mem ) ) + RRS ) )", "choosing": "Min( ( DS / Min( ( RCSe / DS ) ,Max( MUC,RCSe ) ) ) ,( ( DS * Max( Max( ( DS + ( MUC * RRSe ) ),RCSe ),CS ) ) - CS ) )", "obj1": 0.33267716535433073, "obj2": 0.5316764148614913}, {"determining": "( Max( PN,ACS ) * ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + DS ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.2440944881889764, "obj2": 0.6183009050769644}, {"determining": "( ( FirstVNF_CPU + DDR ) - ( FirstVNF_CPU + ( AMS / DDR ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS + MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( ( ( RRSe * DS ) + MUC ) * ( ( RCSe - RCSe ) * RRSe ) ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( MUR / DS ) ,RCSe ) )", "obj1": 0.7381889763779528, "obj2": 0.17745118383512504}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.4448818897637795, "obj2": 0.44473343669963106}, {"determining": "( Max( FirstVNF_RAM,ACS ) * ( CRS - ( ( PN / AMS ) + Min( Min( Const ,DDR ) ,AMS ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( MUC * ( Max( Max( Min( Min( RRSe ,MUC ) ,( RRSe + RRSe ) ),( RCSe - DS ) ),CS ) - DS ) ) )", "obj1": 0.08661417322834646, "obj2": 0.851345548231684}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( MDR - DDR ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( Max( ( ( RMSe / CS ) + ( RCSe / Min( CS ,RRSe ) ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / DS ) ,RCSe ) ) - RMSe )", "obj1": 0.9114173228346457, "obj2": 0.04336754770594467}, {"determining": "( ( ( FirstVNF_Mem - Min( Max( ACS,FirstVNF_RAM_Server ) ,( ( ( RRS + MDR ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS / FirstVNF_CPU ) ) ) ) ) + DDR ) * Max( RRS,( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( DS / Min( ( ( RMSe / DS ) * MUM ) ,Max( RCSe,RMSe ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.3641732283464567, "obj2": 0.512826458874226}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( MDR,( Const / ( MDR * Min( PN ,ACS ) ) ) ) - ACS ) - ACS ) ) )", "choosing": "( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) - RMSe )", "obj1": 0.38188976377952755, "obj2": 0.4939365160765063}, {"determining": "( ( FirstVNF_CPU_Server * Max( ( CRS / FirstVNF_CPU_Server ),PN ) ) * ( ARS + DDR ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + RRSe ) / ( RMSe + Max( MLU,DS ) ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.24606299212598426, "obj2": 0.6044071653029227}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( Max( PN,MRS ) - PN ) ) / Max( ( RRS + FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ) ,Max( Max( ( PN + BR ),Max( Min( MDR ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.37598425196850394, "obj2": 0.5121058365684208}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),PN ) * ( ( ( MRS - RRS ) / Max( FirstVNF_CPU_Server,( ( Const + Max( FirstVNF_CPU,ARS ) ) * AMS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( MLU + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - ( ( RMSe + RRSe ) - ( DS * RMSe ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5604631517366797}, {"determining": "( ( ( MRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) + ( Min( Max( ( ( ( MDR - FirstVNF_CPU ) * ( CRS + DDR ) ) - Const ),( MRS + FirstVNF_RAM ) ) ,DDR ) / RRS ) )", "choosing": "( ( RMSe / MUR ) - ( ( ( Min( RRSe ,RCSe ) - ( RMSe + CS ) ) * Max( Max( RRSe,MUR ),Min( ( MLU - RMSe ) ,MUR ) ) ) + RRSe ) )", "obj1": 0.9803149606299213, "obj2": 0.01814926065188107}, {"determining": "( ( Max( Max( DDR,PN ),PN ) * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.3169291338582677, "obj2": 0.5504545360091425}, {"determining": "( ( Max( DDR,PN ) + Max( ( ( ( MDR * FirstVNF_CPU_Server ) * ( ARS + DDR ) ) - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.48249519359768617}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,Min( Const ,PN ) ) ) )", "choosing": "( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7448958363875577}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - DDR ) ) - CRS ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.0271730063226635}, {"determining": "( ACS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5728346456692913, "obj2": 0.25014776157889607}, {"determining": "( Max( FirstVNF_RAM,PN ) * ( CRS - ( Max( ( FirstVNF_CPU_Server * PN ),MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( CS * ( DS / Max( ( RMSe / Max( ( MUR / MUM ),RMSe ) ),RCSe ) ) ),( MUR / ( ( RMSe + RCSe ) + ( RCSe + DS ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.045493017765476165}, {"determining": "Max( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / Const ) ),( FirstVNF_RAM - ( ( MRS / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - ( MRS / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( Max( CS,RMSe ) * ( ( Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) ) / MUC ) * DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8675268220749567}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "Max( ( RMSe / RCSe ),( Min( ( MUM * ( CS + MUM ) ) ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.6496062992125984, "obj2": 0.22459865888851763}, {"determining": "Max( Max( ( DDR + FirstVNF_CPU_Server ),( MRS + BR ) ),( ( DDR / FirstVNF_RAM ) * ( Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_CPU_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( ( MUR + DS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.3484251968503937, "obj2": 0.5252124728696542}, {"determining": "( ( CRS + MRS ) * Max( Min( MRS ,Max( DDR,( FirstVNF_CPU_Server / PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( DS - RCSe ),Max( DS,RCSe ) ) + ( Max( MUC,CS ) - Min( MUM ,( CS - ( Min( RRSe ,( MLU * MLU ) ) - ( ( MUM * RMSe ) - CS ) ) ) ) ) ) - ( ( MUM / RRSe ) + ( MUC - ( MLU + ( CS + MUC ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.747260154675004}, {"determining": "Min( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( CS * ( DS - Max( CS,Min( ( MUM * ( CS + MUM ) ) ,DS ) ) ) ) - Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2896730976253804}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( Max( PN,MRS ) - PN ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ,Max( Max( ( PN / BR ),Max( ( MDR * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MUR ) * DS ) + ( Min( ( DS / MUM ) ,RCSe ) - Min( Min( CS ,( ( ( ( MUM + RCSe ) + CS ) + RRSe ) / DS ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5748399946186271}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( MRS - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( ( MUM - Min( RCSe ,MUM ) ) ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.41929133858267714, "obj2": 0.4649532682071183}, {"determining": "Max( ( MDR + ( CRS + DDR ) ),( FirstVNF_RAM - ( Min( MRS ,FirstVNF_CPU_Server ) - ( ( Const + DDR ) + ( MRS - ( ( RRS - ARS ) / RRS ) ) ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + DS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( MLU - RMSe ) ,RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5968156398260183}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / MDR ) ,( Max( Max( AMS,DDR ),Max( DDR,PN ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( DS - Max( Max( Min( MUC ,( DS / RCSe ) ),RCSe ),CS ) ) - CS ) ,( ( MLU + RCSe ) / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6213540115526721}, {"determining": "( Max( ( Max( ARS,BR ) + ( ACS - Const ) ),Min( ( Min( FirstVNF_CPU ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) ,Min( FirstVNF_RAM ,BR ) ) ) + ( ( ( CRS / FirstVNF_Mem_Server ) * ( AMS / RRS ) ) / ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( AMS - FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC - ( ( MUC * MUM ) / Max( MUM,( DS + MLU ) ) ) ) - ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6212883249622029}, {"determining": "( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7533066136153196}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * AMS ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ACS - Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + MUM ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5688976377952756, "obj2": 0.25283569592062194}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_RAM - ( Max( ( Const / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) ) ) )", "choosing": "( RMSe / ( MUC * ( DS * ( CS / ( ( Max( DS,( DS * RMSe ) ) / ( RRSe / RRSe ) ) * ( CS * MUC ) ) ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7795507620577139}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( FirstVNF_CPU_Server / ARS ) ) * Max( ACS,BR ) ) ) + Min( FirstVNF_CPU_Server ,MDR ) ) )", "choosing": "Min( ( DS / ( ( RCSe / DS ) * Max( MUC,MUC ) ) ) ,( ( DS * Max( Max( Min( MUC ,( Min( MUR ,RCSe ) / RCSe ) ),RCSe ),CS ) ) - CS ) )", "obj1": 0.3346456692913386, "obj2": 0.5281959937255207}, {"determining": "( Max( PN,ACS ) * ( Min( ARS ,Min( ( MRS / CRS ) ,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUM ) / ( Max( MLU,RRSe ) / ( MUM / CS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.03679496872055998}, {"determining": "( Max( PN,ACS ) * Min( Max( MDR,( ARS - Const ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Max( ( ( MUM + CS ) / ( CS - DS ) ),( ( RMSe / CS ) + ( MUR + DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) + RMSe ) - Min( ( DS * CS ) ,RCSe ) ) - RMSe )", "obj1": 0.2125984251968504, "obj2": 0.6340692138942758}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( Max( PN,MRS ) - PN ) ) / Max( ( RRS + FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ) ,Max( Max( ( PN + BR ),Max( Min( MDR ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( MUR - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5748399946186271}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( FirstVNF_CPU_Server / ARS ) ) * Max( ACS,BR ) ) ) + ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS / ( ( RCSe / DS ) * Max( MUC,MUC ) ) ) ,( ( DS * Max( Max( Min( MUC ,( Min( CS ,RCSe ) / RCSe ) ),RCSe ),CS ) ) - CS ) )", "obj1": 0.34448818897637795, "obj2": 0.5253756043967771}, {"determining": "Min( ( ( FirstVNF_CPU - PN ) * Max( ( FirstVNF_CPU - Const ),Min( RRS ,Max( FirstVNF_CPU_Server,( PN * AMS ) ) ) ) ) ,( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) + ( ( FirstVNF_Mem_Server + ACS ) + ( ( ACS + ( ( ( MDR / Const ) - ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS * ( DS - Max( ( ( MLU + MUC ) / ( ( MUM + CS ) + ( CS - DS ) ) ),RCSe ) ) ) - MLU )", "obj1": 0.2755905511811024, "obj2": 0.5788243117839533}, {"determining": "( FirstVNF_Mem_Server * Max( ( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * AMS ),CRS ) )", "choosing": "Max( Max( ( ( Min( ( ( CS / Max( RRSe,RCSe ) ) * Min( RCSe ,RMSe ) ) ,( MUM - ( Min( MUR ,MUM ) / MUM ) ) ) / CS ) + ( MUR + DS ) ),( ( MUM + ( CS / RMSe ) ) / ( CS - DS ) ) ),Min( Min( DS ,RCSe ) ,MUM ) )", "obj1": 0.2677165354330709, "obj2": 0.5852524950505169}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + ( ( ( FirstVNF_RAM * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.9881889763779528, "obj2": 0.011929742745441101}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.4881889763779528, "obj2": 0.3954787223640377}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( CS / RMSe ) * DS ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7746881588370781}, {"determining": "( ( BR / FirstVNF_Mem ) * ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( MUR - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.25, "obj2": 0.6021801611798032}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( ( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * AMS ),CRS ) )", "choosing": "Max( Max( ( ( Min( ( ( CS / Max( RRSe,RCSe ) ) * Min( RCSe ,RMSe ) ) ,( MUM - ( Min( MUR ,MUM ) / MUM ) ) ) / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( DS ,RCSe ) ,MUM ) )", "obj1": 0.4153543307086614, "obj2": 0.47245943758500764}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),Min( RRS ,FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( PN * MRS ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( RMSe / RMSe ) * ( DS - RMSe ) )", "obj1": 0.4409448818897638, "obj2": 0.4481188369181869}, {"determining": "( Max( PN,ACS ) * ( ( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) - CRS ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.4074803149606299, "obj2": 0.47333251767166495}, {"determining": "( Max( Max( Max( ARS,DDR ),( ( DDR + Const ) * DDR ) ),FirstVNF_CPU_Server ) * ( ARS + ( DDR / Const ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / Min( MLU ,( ( MUC + RMSe ) / Max( ( DS / ( MUC / MUC ) ),Max( ( CS + RRSe ),MUC ) ) ) ) ) ,RCSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8511960137850357}, {"determining": "( Max( PN,ACS ) * ( ( Min( PN ,ACS ) + DDR ) - CRS ) )", "choosing": "( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( ( DS + CS ) ,RCSe ) ,MUM ) ) - RMSe )", "obj1": 0.3799212598425197, "obj2": 0.5023324360474605}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7884657872006157}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,( Max( Min( Min( MDR ,AMS ) ,AMS ),Min( ( Min( ARS ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) ,Min( FirstVNF_RAM ,BR ) ) ) + Min( ( ( ( MRS + FirstVNF_RAM ) - ACS ) * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - Const ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),Min( Max( RCSe,( ( DS / Max( ( RRSe + RRSe ),Max( MUC,MLU ) ) ) / MUR ) ) ,( DS * Min( ( RCSe - Min( MLU ,MUM ) ) ,DS ) ) ) ),( ( ( MLU + RRSe ) / ( CS + MUR ) ) - Max( ( MLU + MUM ),( RMSe / RCSe ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.5043697239262512}, {"determining": "( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7533066136153196}, {"determining": "Max( Max( FirstVNF_Mem_Server,ARS ),( AMS + ( DDR + Min( Const ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUM ) / ( MUC * Min( Max( ( RRSe * ( RMSe / RMSe ) ),MLU ) ,DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7718579112680265}, {"determining": "( ( ( FirstVNF_RAM_Server * Min( CRS ,Max( Const,RRS ) ) ) / FirstVNF_Mem ) * ( ARS * DDR ) )", "choosing": "Min( Min( ( DS - Max( Max( Min( MUC ,( Min( MUC ,RCSe ) / RCSe ) ),RCSe ),CS ) ) ,CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.630192088674265}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.4035433070866142, "obj2": 0.47582745775693935}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Min( ( MRS + FirstVNF_RAM ) ,( MDR - ( MRS * BR ) ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,MUM ) / RRSe ) * ( ( ( MUR - RRSe ) - ( CS - ( MLU * Min( RCSe ,Max( MLU,MLU ) ) ) ) ) / RMSe ) )", "obj1": 0.4409448818897638, "obj2": 0.4481188369181869}], "8": [{"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) ) )", "choosing": "Max( Min( Min( RCSe ,MUM ) ,DS ),( RRSe / Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / Const ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( ( ( MLU * MLU ) + Min( RMSe ,MLU ) ) - ( MLU + ( RCSe / MUR ) ) ),RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Max( ( PN * Const ),Min( RRS ,FirstVNF_CPU ) ) / Const ),FirstVNF_CPU_Server ) - ACS ) - ( FirstVNF_Mem_Server * ( CRS + MDR ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Min( ( DS / ( MLU + ( Min( ( ( MUR * RMSe ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) / MUM ) ) ) ,RCSe ) )", "obj1": 0.08070866141732283, "obj2": 0.869045109580726}, {"determining": "( Max( PN,ACS ) * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,Max( CS,RCSe ) ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,MUM ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08366730558711752}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( RCSe + DS ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.0727726772565637}, {"determining": "( Max( PN,ACS ) * Min( FirstVNF_CPU_Server ,( ( DDR - FirstVNF_Mem_Server ) * Const ) ) )", "choosing": "( ( Max( Max( Max( ( MUM / RRSe ),( CS - RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS - MUR ) ,RCSe ) )", "obj1": 0.6673228346456693, "obj2": 0.1841656929222104}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( Max( FirstVNF_CPU,Max( MRS,Max( FirstVNF_RAM_Server,MDR ) ) ) ,( ( Max( Max( AMS,RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( AMS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR - RMSe ) + ( ( ( RMSe - Max( MUC,( DS + MLU ) ) ) * CS ) / ( ( RMSe + ( RRSe * RRSe ) ) * MUC ) ) ) * ( DS - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.765748031496063, "obj2": 0.1549984286069789}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS + MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( ( ( RRSe * DS ) + MUC ) * ( ( RCSe - RCSe ) * RRSe ) ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( MUR / DS ) ,RCSe ) )", "obj1": 0.4940944881889764, "obj2": 0.38001904204107817}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( Const - DDR ) ) / FirstVNF_Mem ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( ( Max( ( DS - RCSe ),Max( DS,RCSe ) ) * ( Max( MUC,CS ) - Max( RRSe,MUM ) ) ) - Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,Min( ( DS - RCSe ) ,( MUR / DS ) ) ) ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Min( ( Max( DS,RCSe ) / ( MUC * MUR ) ) ,( MUR / DS ) ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( Max( ( AMS - Const ),ACS ) * ( ( Min( ACS ,AMS ) * ( Const - ( FirstVNF_RAM / ( FirstVNF_CPU_Server / BR ) ) ) ) - FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) * ( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( Min( ( MUM * ( CS + ( MLU + ( MUR * RCSe ) ) ) ) ,DS ) - Min( RRSe ,MUM ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.06195155615107844}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( ( ACS + DDR ),Min( ARS ,FirstVNF_Mem ) ) ) ) ) ) - ( ( Min( AMS ,DDR ) + PN ) + FirstVNF_CPU ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) / Min( RCSe ,DS ) ) ),( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( MUM - Min( RCSe ,MUM ) ) ) - ( ( MLU + MUM ) * Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.7303149606299213, "obj2": 0.18192223913840164}, {"determining": "( ( RRS - BR ) + ( ( ( MRS * AMS ) - ( DDR + MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( Min( ( ( ( MUM * RMSe ) * ( ( Max( CS,DS ) + RMSe ) * MLU ) ) / MUR ) ,RCSe ) - ( CS * MUC ) )", "obj1": 0.46062992125984253, "obj2": 0.4204045852142636}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( BR,RRS ) ) ) ) / Const ) * Min( PN ,MDR ) )", "choosing": "( ( Max( Max( ( ( CS / ( ( RCSe / MUC ) + ( MUC * CS ) ) ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) + MUR ) ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.6364808078217272}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "Max( ( RMSe / RCSe ),( Min( ( MUM * ( CS + MUM ) ) ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.6496062992125984, "obj2": 0.22409095892830372}, {"determining": "( Max( ( ( AMS / ACS ) / ( MDR / AMS ) ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / DS ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RRSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.48542524178069485}, {"determining": "( ( CRS + DDR ) * ( ARS + DDR ) )", "choosing": "( ( ( MLU / CS ) + ( ( Min( Min( Max( ( RMSe - RRSe ),( RRSe * RMSe ) ) ,MLU ) ,( RCSe * RRSe ) ) - DS ) + ( ( ( CS - ( ( MUM + MUR ) - ( RCSe * MUM ) ) ) * Max( Max( ( MUM - RRSe ),MUR ),MUC ) ) - Min( MUM ,CS ) ) ) ) - Min( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.16929133858267717, "obj2": 0.6911534282421287}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + ( ( MDR - Const ) - ( MRS + FirstVNF_RAM ) ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - ( ( DS / Min( CS ,DS ) ) * MUM ) ) ) / RMSe ) - Min( ( DS + MUR ) ,RCSe ) )", "obj1": 0.4330708661417323, "obj2": 0.4369963048729528}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( Max( ( AMS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( AMS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.7539370078740157, "obj2": 0.1653392858271305}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * AMS ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + MUM ) ) ) ) / RMSe ) - Min( ( MUM * ( CS + MUM ) ) ,DS ) )", "obj1": 0.6200787401574803, "obj2": 0.24041225002720562}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8081604365385994}, {"determining": "( ( Max( Max( DDR,ARS ),( ( Const + DDR ) * DDR ) ) * FirstVNF_CPU_Server ) * ( ( MRS / ( FirstVNF_Mem / CRS ) ) / MDR ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( Max( Min( MUC ,Min( RMSe ,MUR ) ),( ( MUM * Min( DS ,MUM ) ) - RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6665649882928079}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - CS ) ) ),( ( ( ( MLU * MUM ) + RRSe ) / ( MUR + RMSe ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5295275590551181, "obj2": 0.2755191418446757}, {"determining": "( ( ( FirstVNF_Mem + MRS ) + DDR ) * ( ARS + DDR ) )", "choosing": "( ( ( ( ( CS * ( MUM - ( MLU * MLU ) ) ) * Min( MUM ,MUC ) ) - Max( RRSe,MUR ) ) - MUC ) - Min( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.1594488188976378, "obj2": 0.7380594917494367}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.24590951591095564}, {"determining": "Max( ( AMS + DDR ),( FirstVNF_RAM - ( Min( ( ( BR - BR ) - MDR ) ,FirstVNF_CPU_Server ) * ACS ) ) )", "choosing": "( ( MUC + MUR ) / Max( MUC,MUR ) )", "obj1": 0.17913385826771652, "obj2": 0.6665649882928079}, {"determining": "( ACS - Max( Max( Min( ( MRS + FirstVNF_RAM ) ,( MDR - ( MRS * BR ) ) ),MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( CS * ( DS - Max( ( ( Max( RRSe,MUM ) / RRSe ) * ( ( ( MUR - RRSe ) - ( RMSe / MUR ) ) / RMSe ) ),RCSe ) ) ) - MLU )", "obj1": 0.547244094488189, "obj2": 0.26358996568860116}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( Max( ( AMS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS * MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - MUC )", "obj1": 0.7362204724409449, "obj2": 0.17697632920864975}, {"determining": "( ( Max( ( ( Min( ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ,AMS ) * ( Const - MDR ) ) - CRS ),( RRS - FirstVNF_CPU ) ) + Min( ( MRS + FirstVNF_RAM ) ,( MDR - ( MRS * BR ) ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( CS * ( ( ( MUR - RRSe ) - ( RMSe / MUR ) ) / RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.01603427770731541}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Min( FirstVNF_Mem ,( ( ( FirstVNF_Mem_Server / ( Const + ( ACS * FirstVNF_RAM ) ) ) + ARS ) / DDR ) ) ) )", "choosing": "( ( CS / ( DS - Max( CS,RRSe ) ) ) - Min( MLU ,RMSe ) )", "obj1": 0.31496062992125984, "obj2": 0.5345954665897775}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( MUC - ( ( MUC * MUM ) / Max( MUM,( DS + MLU ) ) ) ) - ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.42913385826771655, "obj2": 0.4464358374406441}, {"determining": "( ( Max( DDR,PN ) + Max( ( ( ( MDR * FirstVNF_CPU_Server ) * ( ARS + DDR ) ) - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.48249519359768617}, {"determining": "( Max( PN,ACS ) * ( ( ( ACS / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - RMSe )", "obj1": 0.16141732283464566, "obj2": 0.7112875777334753}, {"determining": "( ( Max( DDR,PN ) + Max( ( ( ( PN * FirstVNF_CPU_Server ) * ( ARS + DDR ) ) - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU * ( DS + ( ( CS / RMSe ) * DS ) ) ) / MUR ) - RCSe ) )", "obj1": 0.48031496062992124, "obj2": 0.4174036134984533}, {"determining": "( ( BR / FirstVNF_Mem ) * MDR )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5918460328902079}, {"determining": "( ( ( FirstVNF_Mem - Min( Max( ACS,FirstVNF_RAM_Server ) ,( ( ( RRS + MDR ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS / FirstVNF_CPU ) ) ) ) ) + DDR ) * Max( RRS,( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( DS / Min( ( ( RMSe / DS ) * MUM ) ,Max( RCSe,RMSe ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.3641732283464567, "obj2": 0.512826458874226}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - DDR ) ) - CRS ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.0255217663824033}, {"determining": "Max( ( ( CRS + PN ) + MDR ),( MRS - ( Max( ( ARS * DDR ),ACS ) - ACS ) ) )", "choosing": "( RMSe / ( RCSe * ( ( ( ( RRSe / ( DS + CS ) ) * MUC ) / DS ) * ( MLU - RMSe ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7654838512707329}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),PN ) * ( ( ( MRS - RRS ) / Max( FirstVNF_CPU_Server,( ( Const + Max( FirstVNF_CPU,ARS ) ) * AMS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( MLU + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - ( ( RMSe + RRSe ) - ( DS * RMSe ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5604631517366797}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Max( ( PN * Const ),Min( RRS ,FirstVNF_CPU ) ) / Const ),FirstVNF_CPU_Server ) - ACS ) - ( FirstVNF_Mem_Server * ( CRS + MDR ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Min( ( DS / ( MLU + ( Min( ( ( MUR * RMSe ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) / MUM ) ) ) ,RCSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8355228341439892}, {"determining": "( ACS - Max( Max( PN,ACS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / ( ( MUM + CS ) / ( CS - DS ) ) ) ,RCSe ) )", "obj1": 0.5196850393700787, "obj2": 0.2821717846781629}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Min( Min( ( MDR - Min( FirstVNF_RAM_Server ,PN ) ) ,Min( ( RRS - AMS ) ,FirstVNF_RAM_Server ) ) ,( Max( MRS,AMS ) + ( FirstVNF_Mem_Server - PN ) ) ) ) * Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / DS ) - Min( Min( Max( DS,( RMSe - MUC ) ) ,Max( Min( RRSe ,( Min( MLU ,MUC ) - Max( MLU,MUR ) ) ),Max( MUC,MUC ) ) ) ,RCSe ) )", "obj1": 0.4822834645669291, "obj2": 0.4069618039818946}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),Max( RRSe,RCSe ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6338582677165354, "obj2": 0.22948584665382737}, {"determining": "( ( Max( PN,ACS ) * ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( MLU - ( Min( MUC ,MUM ) + RRSe ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.009189206549366842}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,( Max( Max( DDR,PN ),PN ) * Max( FirstVNF_CPU_Server,( ( Const + Max( FirstVNF_CPU,ARS ) ) * AMS ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104898847424823}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( MRS - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( ( MUM - Min( RCSe ,MUM ) ) ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.42322834645669294, "obj2": 0.4623222216610482}, {"determining": "( Max( FirstVNF_RAM,ACS ) * ( CRS - ( ( PN / AMS ) + Min( Min( Const ,DDR ) ,AMS ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( MUC * ( Max( Max( Min( Min( RRSe ,MUC ) ,( RRSe + RRSe ) ),( RCSe - DS ) ),CS ) - DS ) ) )", "obj1": 0.08661417322834646, "obj2": 0.851345548231684}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7986338446952419}, {"determining": "( Max( FirstVNF_RAM,Min( ARS ,RRS ) ) * ( ( Min( ACS ,AMS ) * Min( ( ( FirstVNF_RAM / ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ,FirstVNF_RAM ) ) / FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUR - MUR ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( Max( DS,RCSe ) / ( MUC * MUR ) ) ,( ( RMSe + MUR ) - CS ) ) ,( Max( MUR,Min( RRSe ,( ( ( RMSe - MUR ) - ( MUR + DS ) ) + RMSe ) ) ) - Min( ( ( MUC * MUR ) / Max( RCSe,DS ) ) ,( MUR - DS ) ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.05580817876652296}, {"determining": "( ( PN * ACS ) * ( ( Min( ACS ,AMS ) * ( ( Min( ( MRS / FirstVNF_CPU ) ,RRS ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( RCSe / RMSe ) - Min( CS ,Min( RMSe ,( MUM - ( DS - ( Max( MLU,CS ) - MLU ) ) ) ) ) )", "obj1": 0.6279527559055118, "obj2": 0.23989802267001767}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( ( ( Min( ACS ,AMS ) * ( Const - DDR ) ) - CRS ) - MDR ) ) - CRS ) )", "choosing": "Max( ( RMSe / RCSe ),( Min( ( MUM * ( CS + RRSe ) ) ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.9881889763779528, "obj2": 0.004885106592238272}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.4881889763779528, "obj2": 0.3954787223640377}, {"determining": "( FirstVNF_Mem_Server * Max( ( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * AMS ),CRS ) )", "choosing": "Max( Max( ( ( Min( ( ( CS / Max( RRSe,RCSe ) ) * Min( RCSe ,RMSe ) ) ,( MUM - ( Min( MUR ,MUM ) / MUM ) ) ) / CS ) + ( MUR + DS ) ),( ( MUM + ( CS / RMSe ) ) / ( CS - DS ) ) ),Min( Min( DS ,RCSe ) ,MUM ) )", "obj1": 0.2677165354330709, "obj2": 0.5852524950505169}, {"determining": "Max( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / Const ) ),( FirstVNF_RAM - ( ( MRS / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - ( MRS / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( Max( CS,RMSe ) * ( ( Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) ) / MUC ) * DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8675268220749567}, {"determining": "Max( ( MDR + ( PN + CRS ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) - Max( FirstVNF_Mem_Server,( FirstVNF_Mem + CRS ) ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + ( RCSe / Max( ( DS / ( MUC / MUC ) ),Max( ( CS + RRSe ),MUC ) ) ) ) ) ,RCSe ) )", "obj1": 0.09055118110236221, "obj2": 0.8471795652420053}, {"determining": "( Max( PN,ACS ) * ( ( ( ACS * AMS ) * ( Const - ( Const / ARS ) ) ) - CRS ) )", "choosing": "( ( Min( RRSe ,MUM ) / ( ( Min( DS ,MUM ) * CS ) + Max( RCSe,DS ) ) ) * ( RMSe / RMSe ) )", "obj1": 0.8976377952755905, "obj2": 0.05027988243184715}, {"determining": "( ACS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + ( CS - DS ) ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5610236220472441, "obj2": 0.25822437682614746}, {"determining": "( Max( PN,ACS ) * ( ( ( ACS / AMS ) + DDR ) - CRS ) )", "choosing": "( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) - RMSe )", "obj1": 0.3562992125984252, "obj2": 0.5169081258571182}, {"determining": "( Max( ( Max( ARS,( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) ) + ( ACS - Const ) ),Min( ( Min( FirstVNF_CPU ,DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) ,Min( FirstVNF_RAM ,BR ) ) ) + ( ( ( CRS / FirstVNF_Mem_Server ) * ( AMS / RRS ) ) / ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( AMS - FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) - ( ( MUC * MUM ) / Max( MUM,( DS + MLU ) ) ) ) - ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.234251968503937, "obj2": 0.621154065628515}, {"determining": "( Max( PN,ACS ) * ( ( Max( AMS,ACS ) + Min( ( MRS + AMS ) ,( RRS + ACS ) ) ) - CRS ) )", "choosing": "( ( RMSe * RCSe ) - ( ( MUR + MUC ) + ( ( DS * ( Min( ( MLU + RMSe ) ,DS ) - ( CS + MUR ) ) ) / RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7112875777334753}, {"determining": "( Max( PN,ACS ) * Min( Max( MDR,( ARS - Const ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Max( ( ( MUM + CS ) / ( CS - DS ) ),( ( RMSe / CS ) + ( MUR + DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) + RMSe ) - Min( ( DS * CS ) ,RCSe ) ) - RMSe )", "obj1": 0.2125984251968504, "obj2": 0.6340692138942758}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.4921259842519685, "obj2": 0.39259222757653267}, {"determining": "Max( Max( FirstVNF_Mem_Server,ARS ),( AMS + ( DDR + Min( Const ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUM ) / ( MUC * Min( Max( ( RRSe * ( RMSe / RMSe ) ),MLU ) ,DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7718579112680265}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( ACS - FirstVNF_Mem ) ) + RRS ) )", "choosing": "Min( ( DS / Min( ( RCSe / DS ) ,Max( MUC,RCSe ) ) ) ,( ( DS * Max( Max( ( DS + ( MUC * RRSe ) ),RCSe ),CS ) ) - CS ) )", "obj1": 0.33267716535433073, "obj2": 0.5316764148614913}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,MUM ) ) ) ) )", "obj1": 0.3484251968503937, "obj2": 0.5226452408007165}, {"determining": "( ( CRS + MRS ) * Max( Min( MRS ,Max( DDR,( FirstVNF_CPU_Server / PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( DS - RCSe ),Max( DS,RCSe ) ) + ( Max( MUC,CS ) - Min( MUM ,( CS - ( Min( RRSe ,( MLU * MLU ) ) - ( ( MUM * RMSe ) - CS ) ) ) ) ) ) - ( ( MUM / RRSe ) + ( MUC - ( MLU + ( CS + MUC ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.747260154675004}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( ( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * AMS ),CRS ) )", "choosing": "Max( Max( ( ( Min( ( ( CS / Max( RRSe,RCSe ) ) * Min( RCSe ,RMSe ) ) ,( MUM - ( Min( MUR ,MUM ) / MUM ) ) ) / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( DS ,RCSe ) ,MUM ) )", "obj1": 0.4153543307086614, "obj2": 0.47245943758500764}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * AMS ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ACS - Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + MUM ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5688976377952756, "obj2": 0.25283569592062194}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * AMS ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ACS - Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + MUM ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.31299212598425197, "obj2": 0.5481211322260161}, {"determining": "Max( ( MDR + ( PN + CRS ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) - Max( FirstVNF_Mem_Server,( FirstVNF_Mem + CRS ) ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8355228341439892}, {"determining": "Min( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( CS * ( DS - Max( CS,Min( ( MUM * ( CS + MUM ) ) ,DS ) ) ) ) - Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2896730976253804}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( FirstVNF_CPU_Server / ARS ) ) * Max( ACS,BR ) ) ) + ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS / ( ( RCSe / DS ) * Max( MUC,MUC ) ) ) ,( ( DS * Max( Max( Min( MUC ,( Min( CS ,RCSe ) / RCSe ) ),RCSe ),CS ) ) - CS ) )", "obj1": 0.34448818897637795, "obj2": 0.5253756043967771}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.4035433070866142, "obj2": 0.47582745775693935}, {"determining": "( ACS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5551181102362205, "obj2": 0.2621862358974731}, {"determining": "( ( CRS * ( ( CRS * ARS ) * ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,( Const - AMS ) ),( ( Min( ( DDR + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( DS * ( CS / ( ( Max( DS,Max( RRSe,DS ) ) * ( Max( MUR,RCSe ) - RMSe ) ) - Min( ( Max( MUR,RRSe ) - ( MUM + RCSe ) ) ,Min( ( DS - RCSe ) ,( MUR / RMSe ) ) ) ) ) ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7921291322926904}, {"determining": "( Max( PN,ACS ) * ( ( ( PN / AMS ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) - CRS ) )", "choosing": "( ( RMSe + RCSe ) / ( MUC * Min( Max( Max( ( MLU - ( Min( MUC ,MUM ) + RRSe ) ),( RCSe - DS ) ),CS ) ,DS ) ) )", "obj1": 0.968503937007874, "obj2": 0.014645443753864729}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.027415074847241355}, {"determining": "( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7533066136153196}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS * MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.5098425196850394, "obj2": 0.2877588421616728}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_RAM - ( Max( ( Const / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) ) ) )", "choosing": "( RMSe / ( MUC * ( DS * ( CS / ( ( Max( DS,( DS * RMSe ) ) / ( RRSe / RRSe ) ) * ( CS * MUC ) ) ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7795507620577139}, {"determining": "( Max( PN,ACS ) * ( Min( ARS ,Min( ( MRS / CRS ) ,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUM ) / ( Max( MLU,RRSe ) / ( MUM / CS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.03679496872055998}, {"determining": "( Max( PN,ACS ) * ( ( Min( AMS ,( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * Min( FirstVNF_Mem ,( ACS + FirstVNF_CPU_Server ) ) ) * CRS ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5643809968421842}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - DDR ) ) - CRS ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.0271730063226635}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,MUM ) ) ) ) )", "obj1": 0.9173228346456693, "obj2": 0.03149530992198971}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( CS / RMSe ) * DS ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7746881588370781}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.24590951591095564}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - Min( AMS ,ACS ) ) )", "choosing": "Max( ( RMSe / RCSe ),( Min( ( RCSe * ( ( CS - MUC ) + MUM ) ) ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.6456692913385826, "obj2": 0.2276821598314542}, {"determining": "( Max( PN,ACS ) * ( ( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) ) - CRS ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.4074803149606299, "obj2": 0.47333251767166495}, {"determining": "Min( ( Max( ( BR - ( ( ( FirstVNF_Mem_Server / ARS ) - FirstVNF_Mem ) - BR ) ),AMS ) / MDR ) ,( Max( Max( BR,DDR ),Max( DDR,PN ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( MUC,( Max( ( Min( RRSe ,RMSe ) + ( DS / MLU ) ),( Min( MLU ,RCSe ) - Max( CS,MUM ) ) ) * MUM ) ),MUR ) - CS ) ,( ( MLU + RCSe ) / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6213540115526721}, {"determining": "( ( ( FirstVNF_RAM_Server * Min( CRS ,Max( Const,RRS ) ) ) / FirstVNF_Mem ) * ( ARS * DDR ) )", "choosing": "Min( Min( ( DS - Max( Max( Min( MUC ,( Min( MUC ,RCSe ) / RCSe ) ),RCSe ),CS ) ) ,CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.630192088674265}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * AMS ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ACS - Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + MUM ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.31299212598425197, "obj2": 0.5481211322260161}, {"determining": "( ( BR / FirstVNF_Mem ) * ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( MUR - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.25, "obj2": 0.6021801611798032}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( MDR - DDR ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( Max( ( ( RMSe / CS ) + ( RCSe / Min( CS ,RRSe ) ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / DS ) ,RCSe ) ) - RMSe )", "obj1": 0.9114173228346457, "obj2": 0.04336754770594467}, {"determining": "Min( Max( PN,MRS ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( CS * ( DS - Max( MUR,RCSe ) ) ) - MLU )", "obj1": 0.26968503937007876, "obj2": 0.5833083551936591}, {"determining": "Min( ( ( FirstVNF_CPU - PN ) * Max( ( FirstVNF_CPU - Const ),Min( RRS ,Max( FirstVNF_CPU_Server,( PN * AMS ) ) ) ) ) ,( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) + ( ( FirstVNF_Mem_Server + ACS ) + ( ( ACS + ( ( ( MDR / Const ) - ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS * ( DS - Max( ( ( MLU + MUC ) / ( ( MUM + CS ) + ( CS - DS ) ) ),RCSe ) ) ) - MLU )", "obj1": 0.2874015748031496, "obj2": 0.5725207530838102}, {"determining": "( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7533066136153196}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "Max( Min( ( ( RCSe + ( Min( RCSe ,MUR ) * RRSe ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ,DS ),( RRSe / RCSe ) )", "obj1": 0.9251968503937008, "obj2": 0.030272290859544745}, {"determining": "( Max( ( FirstVNF_CPU_Server * PN ),PN ) * ( Max( ( MRS - MRS ),Max( FirstVNF_CPU_Server,( ( Const + Max( ARS,FirstVNF_CPU ) ) * AMS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5643809968421842}, {"determining": "( ( Max( Max( DDR,ARS ),( ( DDR + Const ) * DDR ) ) * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "Min( ( ( DS - Max( Max( Min( MUC ,( Min( CS ,RCSe ) / RCSe ) ),RCSe ),CS ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.630192088674265}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( FirstVNF_CPU_Server / ARS ) ) * Max( ACS,BR ) ) ) + Min( FirstVNF_CPU_Server ,MDR ) ) )", "choosing": "Min( ( DS / ( ( RCSe / DS ) * Max( MUC,MUC ) ) ) ,( ( DS * Max( Max( Min( MUC ,( Min( MUR ,RCSe ) / RCSe ) ),RCSe ),CS ) ) - CS ) )", "obj1": 0.3346456692913386, "obj2": 0.5281959937255207}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,Min( Const ,PN ) ) ) )", "choosing": "( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7448958363875577}], "9": [{"determining": "( ( Max( PN,ACS ) * ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( Min( Max( PN,MRS ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( MLU - ( Min( MUC ,MUM ) + RRSe ) ) ),( ( CS / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) ) )", "choosing": "Max( Min( Min( RCSe ,MUM ) ,DS ),( RRSe / Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Max( ( PN * Const ),Min( RRS ,FirstVNF_CPU ) ) / Const ),FirstVNF_CPU_Server ) - ACS ) - ( FirstVNF_Mem_Server * ( CRS + MDR ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Min( ( DS / ( MLU + ( Min( ( ( MUR * RMSe ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) / MUM ) ) ) ,RCSe ) )", "obj1": 0.08070866141732283, "obj2": 0.869045109580726}, {"determining": "( Max( PN,DDR ) * Min( Const ,( ( MDR + RRS ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( MUC / CS ) ) ,RRSe ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,Max( Max( RRSe,( MUC - MUC ) ),MUC ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08241930695325018}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( RCSe + DS ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.0727726772565637}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.8740157480314961, "obj2": 0.05309425780568191}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS + MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( ( ( RRSe * DS ) + MUC ) * ( ( RCSe - RCSe ) * RRSe ) ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( MUR / DS ) ,RCSe ) )", "obj1": 0.4940944881889764, "obj2": 0.38001904204107817}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6673228346456693, "obj2": 0.1841656929222104}, {"determining": "( FirstVNF_Mem_Server - Max( ARS,RRS ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( ( Max( ( DS - RCSe ),Max( DS,RCSe ) ) * ( Max( MUC,CS ) - Max( RRSe,MUM ) ) ) - Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,Min( ( MLU - RCSe ) ,( MUR / DS ) ) ) ) ,( MUR / DS ) ) ,( Min( RCSe ,CS ) / ( ( Min( Min( RCSe ,( MLU / DS ) ) ,MUR ) / Max( ( DS - ( RRSe * MLU ) ),( MUC + RMSe ) ) ) * ( MLU + ( ( ( MUM * MUM ) + MUM ) * Max( Max( DS,RMSe ),( MUM * MLU ) ) ) ) ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( Max( FirstVNF_CPU,Max( MRS,Max( FirstVNF_RAM_Server,MDR ) ) ) ,( ( Max( Max( AMS,RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( AMS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR - RMSe ) + ( ( ( RMSe - Max( MUC,( DS + MLU ) ) ) * CS ) / ( ( RMSe + ( RRSe * RRSe ) ) * MUC ) ) ) * ( DS - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.765748031496063, "obj2": 0.1549984286069789}, {"determining": "( Max( ( ( AMS / ACS ) / ( MDR / AMS ) ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / DS ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RRSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.48542524178069485}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( PN / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( AMS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( CS * ( DS - ( MUM + CS ) ) ) - MLU )", "obj1": 0.7283464566929134, "obj2": 0.1825729253834933}, {"determining": "( ( CRS + DDR ) * ( ARS + DDR ) )", "choosing": "( ( ( MLU / CS ) + ( ( Min( Min( Max( ( RMSe - RRSe ),( RRSe * RMSe ) ) ,MLU ) ,( RCSe * RRSe ) ) - DS ) + ( ( ( CS - ( ( MUM + MUR ) - ( RCSe * MUM ) ) ) * Max( Max( ( MUM - RRSe ),MUR ),MUC ) ) - Min( MUM ,CS ) ) ) ) - Min( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.16929133858267717, "obj2": 0.6911534282421287}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5515425295522425}, {"determining": "( ( ( FirstVNF_Mem - Min( Max( ACS,FirstVNF_RAM_Server ) ,( ( ( RRS + MDR ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS / FirstVNF_CPU ) ) ) ) ) + DDR ) * Max( RRS,( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( DS / Min( ( ( RMSe / DS ) * MUM ) ,Max( RCSe,RMSe ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.3641732283464567, "obj2": 0.512826458874226}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6556466733955632}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * ( FirstVNF_Mem_Server - PN ) ) ) ) - CRS ) )", "choosing": "Min( ( Min( RRSe ,( Min( MLU ,MUC ) - Max( MLU,MUR ) ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.022725571708879025}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( FirstVNF_Mem_Server * CRS ) ) / FirstVNF_CPU ) * ( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( ( FirstVNF_Mem_Server - PN ) * ARS ) ) ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ACS - Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( Min( RMSe ,( RRSe * DS ) ) + ( RRSe + RCSe ) ) ) ) ) / RMSe ) - Min( ( Min( MUC ,Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.3051181102362205, "obj2": 0.5462948752582863}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( BR,RRS ) ) ) ) / Const ) * Min( PN ,MDR ) )", "choosing": "( ( Max( Max( ( ( CS / ( ( RCSe / MUC ) + ( MUC * CS ) ) ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) + MUR ) ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.6364808078217272}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "Max( ( RMSe / RCSe ),( Min( ( MUM * ( CS + MUM ) ) ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.6496062992125984, "obj2": 0.22409095892830372}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * ( DS - Max( ( ( Max( RRSe,MUM ) / RRSe ) * ( ( ( MUR - RRSe ) - ( RMSe / MUR ) ) / RMSe ) ),RCSe ) ) ) - MLU )", "obj1": 0.33661417322834647, "obj2": 0.5149727445498148}, {"determining": "( ( ( FirstVNF_Mem + MRS ) + DDR ) * ( ARS + DDR ) )", "choosing": "( ( ( ( ( CS * ( MUM - ( MLU * MLU ) ) ) * Min( MUM ,MUC ) ) - Max( RRSe,MUR ) ) - MUC ) - Min( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.1594488188976378, "obj2": 0.7380594917494367}, {"determining": "( ACS - Min( AMS ,Const ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / ( RMSe * MUR ) ) ) ,( ( ( MUC - CS ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.5846456692913385, "obj2": 0.244158630730342}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + ( ( MDR - Const ) - ( MRS + FirstVNF_RAM ) ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - ( ( DS / Min( CS ,DS ) ) * MUM ) ) ) / RMSe ) - Min( ( DS + MUR ) ,RCSe ) )", "obj1": 0.4330708661417323, "obj2": 0.4369963048729528}, {"determining": "( ( RRS - BR ) + ( ( ( MRS * AMS ) - ( DDR + MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( Min( ( ( ( MUM * RMSe ) * ( ( Max( CS,DS ) + RMSe ) * MLU ) ) / MUR ) ,RCSe ) - ( CS * MUC ) )", "obj1": 0.46062992125984253, "obj2": 0.4204045852142636}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8081604365385994}, {"determining": "( FirstVNF_Mem_Server * Max( ( FirstVNF_Mem * AMS ),CRS ) )", "choosing": "Max( Max( ( ( Min( ( ( CS / Max( RRSe,RCSe ) ) * Min( RCSe ,RMSe ) ) ,( MUM - ( Min( MUR ,MUM ) / MUM ) ) ) / CS ) + ( MUR + DS ) ),( ( MUM + ( CS / RMSe ) ) / ( CS - DS ) ) ),Min( Min( DS ,RCSe ) ,( DS - Max( CS,RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5784679704461904}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( MUC - ( ( MUC * MUM ) / Max( MUM,( DS + MLU ) ) ) ) - ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.42913385826771655, "obj2": 0.4464358374406441}, {"determining": "( ( Max( DDR,PN ) + Max( ( ( ( MDR * FirstVNF_CPU_Server ) * ( ARS + DDR ) ) - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.48249519359768617}, {"determining": "( Max( PN,ACS ) * ( ( Max( AMS,ACS ) + Min( ( MRS + AMS ) ,( RRS + ACS ) ) ) - CRS ) )", "choosing": "( ( RMSe * RCSe ) - ( ( MUR + MUC ) + ( ( DS * ( Min( ( MLU + RMSe ) ,DS ) - ( CS + MUR ) ) ) / RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7112875777334753}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * AMS ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + MUM ) ) ) ) / RMSe ) - Min( ( MUM * ( CS + MUM ) ) ,DS ) )", "obj1": 0.6200787401574803, "obj2": 0.24041225002720562}, {"determining": "( Max( PN,ACS ) * Min( Max( MDR,( ARS - Const ) ) ,( ( Min( ACS ,AMS ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) ) )", "choosing": "( ( ( Max( Max( ( ( MUM + CS ) / ( CS - DS ) ),( ( RMSe / CS ) + ( MUR + DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( Min( RCSe ,MUM ) + MUM ),Max( MUR,DS ) ) ) ) + RMSe ) - Min( ( DS * CS ) ,RCSe ) ) - RMSe )", "obj1": 0.47834645669291337, "obj2": 0.4099924712206236}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( MRS - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( ( MUM - Min( RCSe ,MUM ) ) ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.42322834645669294, "obj2": 0.4623222216610482}, {"determining": "( Max( FirstVNF_CPU,ARS ) - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * ( DS - ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ) ) - MLU )", "obj1": 0.4507874015748031, "obj2": 0.42818885878042207}, {"determining": "Max( ( AMS + DDR ),( FirstVNF_RAM - ( Min( MRS ,FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6665649882928079}, {"determining": "Max( ( ( CRS + PN ) + MDR ),( MRS - ( Max( ( ARS * DDR ),ACS ) - ACS ) ) )", "choosing": "( RMSe / ( RCSe * ( ( ( ( RRSe / ( DS + CS ) ) * MUC ) / DS ) * ( MLU - RMSe ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7654838512707329}, {"determining": "( Max( PN,ACS ) * ( ( ( ACS * AMS ) * ( Const - ( Const / ARS ) ) ) - CRS ) )", "choosing": "( ( Min( RRSe ,MUM ) / ( ( Min( DS ,MUM ) * CS ) + Max( RCSe,DS ) ) ) * ( RMSe / RMSe ) )", "obj1": 0.8976377952755905, "obj2": 0.05027988243184715}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Min( FirstVNF_Mem ,( ( ( FirstVNF_Mem_Server / ( Const + ( ACS * FirstVNF_RAM ) ) ) + ARS ) / DDR ) ) ) )", "choosing": "( ( CS / ( DS - Max( CS,RRSe ) ) ) - Min( MLU ,RMSe ) )", "obj1": 0.31496062992125984, "obj2": 0.5345954665897775}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),Max( RRSe,RCSe ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6338582677165354, "obj2": 0.22948584665382737}, {"determining": "Max( Max( FirstVNF_Mem_Server,ARS ),( AMS + ( DDR + Min( Const ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUM ) / ( MUC * Min( Max( ( RRSe * ( RMSe / RMSe ) ),MLU ) ,DS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8293449667039362}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( Max( ( AMS - RRS ),FirstVNF_Mem_Server ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS * MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / ( ( Min( ( ( CS / Max( RRSe,RCSe ) ) * Min( RCSe ,RMSe ) ) ,( MUM - ( Min( MUR ,MUM ) / MUM ) ) ) / CS ) + ( MUR + DS ) ) ) - MUC )", "obj1": 0.7421259842519685, "obj2": 0.17486813478306273}, {"determining": "Max( ( MDR + ( PN + CRS ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) - Max( FirstVNF_Mem_Server,( FirstVNF_Mem + CRS ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6067634324510424}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_RAM - ( Max( ( Const / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) ) ) )", "choosing": "( RMSe / ( MUC * ( DS * ( CS / ( ( Max( DS,( DS * RMSe ) ) / ( RRSe / RRSe ) ) * ( CS * MUC ) ) ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7795507620577139}, {"determining": "( ( ( FirstVNF_Mem - Min( RRS ,( ( ( RRS * MDR ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) + DDR ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( CS * ( ( ( MUR - RRSe ) - ( RMSe / MUR ) ) / ( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ) - Min( RRSe ,RCSe ) ) ) )", "obj1": 0.41338582677165353, "obj2": 0.46507073443611396}, {"determining": "( PN + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( ( ( RRSe / ( DS + CS ) ) * MUC ) / CS ) - ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.9763779527559056, "obj2": 0.00918920654936684}, {"determining": "( ( FirstVNF_Mem / BR ) * ( AMS - FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( ( ( CS * CS ) + ( RRSe - ( CS * CS ) ) ) ,( ( Min( CS ,MUC ) - ( RRSe * MUC ) ) / CS ) ) - Min( CS ,MUM ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),Min( ( Max( RCSe,MUR ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.5989912053117775}, {"determining": "( ( Max( ( ( Min( ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ,AMS ) * ( Const - MDR ) ) - CRS ),( RRS - FirstVNF_CPU ) ) + Min( ( MRS + FirstVNF_RAM ) ,( MDR - ( MRS * BR ) ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( CS * ( ( ( MUR - RRSe ) - ( RMSe / MUR ) ) / RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.01603427770731541}, {"determining": "Min( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.5374015748031497, "obj2": 0.2695604131607669}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( CS * ( DS - Max( CS,RRSe ) ) ) / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6170841188807363}, {"determining": "( ( PN * ACS ) * ( ( Min( ACS ,AMS ) * ( ( Min( ( MRS / FirstVNF_CPU ) ,RRS ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( RCSe / RMSe ) - Min( CS ,Min( RMSe ,( MUM - ( DS - ( Max( MLU,CS ) - MLU ) ) ) ) ) )", "obj1": 0.6279527559055118, "obj2": 0.23989802267001767}, {"determining": "Max( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / Const ) ),( FirstVNF_RAM - ( ( MRS / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - ( MRS / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( Max( CS,RMSe ) * ( ( Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) ) / MUC ) * DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8675268220749567}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.027415074847241355}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,( Max( Max( DDR,PN ),PN ) * Max( FirstVNF_CPU_Server,( ( Const + Max( FirstVNF_CPU,ARS ) ) * AMS ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6294156292398139}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS * MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.5098425196850394, "obj2": 0.2877588421616728}, {"determining": "( ACS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + ( CS - DS ) ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5610236220472441, "obj2": 0.25822437682614746}, {"determining": "( ACS - Max( Max( PN,ACS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / ( ( MUM + CS ) / ( CS - DS ) ) ) ,RCSe ) )", "obj1": 0.5196850393700787, "obj2": 0.2821717846781629}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - CS ) ) ),( ( ( ( MLU * MUM ) + RRSe ) / ( MUR + RMSe ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5295275590551181, "obj2": 0.2755191418446757}, {"determining": "( Max( PN,ACS ) * ( ( ( ACS / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - RMSe )", "obj1": 0.16141732283464566, "obj2": 0.7112875777334753}, {"determining": "( Max( PN,ACS ) * Min( Max( MDR,( ARS - Const ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Max( ( ( MUM + CS ) / ( CS - DS ) ),( ( RMSe / CS ) + ( MUR + DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) + RMSe ) - Min( ( DS * CS ) ,RCSe ) ) - RMSe )", "obj1": 0.2125984251968504, "obj2": 0.6340692138942758}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.4921259842519685, "obj2": 0.39259222757653267}, {"determining": "Max( Max( FirstVNF_Mem_Server,ARS ),( AMS + ( DDR + Min( Const ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUM ) / ( MUC * Min( Max( ( RRSe * ( RMSe / RMSe ) ),MLU ) ,DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7718579112680265}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,Min( Const ,PN ) ) ) )", "choosing": "( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7448958363875577}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "Max( ( RMSe / RCSe ),( Min( ( MUM * ( CS + MUM ) ) ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.6496062992125984, "obj2": 0.22409095892830372}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - Min( AMS ,ACS ) ) )", "choosing": "Max( ( RMSe / RCSe ),( Min( ( RCSe * ( ( CS - MUC ) + MUM ) ) ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.6456692913385826, "obj2": 0.2276821598314542}, {"determining": "( ( Max( Max( DDR,ARS ),( ( Const + DDR ) * DDR ) ) * FirstVNF_CPU_Server ) * ( ( MRS / ( FirstVNF_Mem / CRS ) ) / MDR ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( Max( Min( MUC ,Min( RMSe ,MUR ) ),( ( MUM * Min( DS ,MUM ) ) - RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6665649882928079}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - DDR ) ) - CRS ) )", "choosing": "( ( ( MLU / CS ) + ( ( Min( Min( Max( ( RMSe - RRSe ),( RRSe * RMSe ) ) ,MLU ) ,( RCSe * RRSe ) ) - DS ) + ( ( ( CS - ( ( MUM + MUR ) - ( RCSe * MUM ) ) ) * Max( Max( ( MUM - RRSe ),MUR ),MUC ) ) - Min( MUM ,CS ) ) ) ) - Min( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.9015748031496063, "obj2": 0.047801043656865536}, {"determining": "( ( CRS + MRS ) * Max( Min( MRS ,Max( DDR,( FirstVNF_CPU_Server / PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( DS - RCSe ),Max( DS,RCSe ) ) + ( Max( MUC,CS ) - Min( MUM ,( CS - ( Min( RRSe ,( MLU * MLU ) ) - ( ( MUM * RMSe ) - CS ) ) ) ) ) ) - ( ( MUM / RRSe ) + ( MUC - ( MLU + ( CS + MUC ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.747260154675004}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( Min( RRS ,( FirstVNF_CPU_Server / ARS ) ) * Max( ACS,BR ) ) ) + Min( FirstVNF_CPU_Server ,MDR ) ) )", "choosing": "Min( ( DS / ( ( RCSe / DS ) * Max( MUC,MUC ) ) ) ,( ( DS * Max( Max( Min( MUC ,( Min( MUR ,RCSe ) / RCSe ) ),RCSe ),CS ) ) - CS ) )", "obj1": 0.3346456692913386, "obj2": 0.5281959937255207}, {"determining": "( ( ( Const / Max( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( FirstVNF_CPU * ACS ) ) ) ),Max( AMS,FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem ) * MDR )", "choosing": "( ( RMSe - ( MLU / Min( MUR ,Min( RMSe ,( ( ( DS + RCSe ) * RCSe ) / CS ) ) ) ) ) - Min( RCSe ,( DS / ( MLU + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8441984871005789}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.4881889763779528, "obj2": 0.3954787223640377}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.4035433070866142, "obj2": 0.47582745775693935}, {"determining": "( ACS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5551181102362205, "obj2": 0.2621862358974731}, {"determining": "( Max( PN,ACS ) * Min( FirstVNF_CPU_Server ,( ( DDR - FirstVNF_Mem_Server ) * Const ) ) )", "choosing": "( ( Max( Max( Max( ( MUM / RRSe ),( CS - RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS - MUR ) ,RCSe ) )", "obj1": 0.6673228346456693, "obj2": 0.1841656929222104}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( Max( ( AMS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS * MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - MUC )", "obj1": 0.7362204724409449, "obj2": 0.17697632920864975}, {"determining": "( ( CRS * ( ( CRS * ARS ) * ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,( Const - AMS ) ),( ( Min( ( DDR + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( DS * ( CS / ( ( Max( DS,Max( RRSe,DS ) ) * ( Max( MUR,RCSe ) - RMSe ) ) - Min( ( Max( MUR,RRSe ) - ( MUM + RCSe ) ) ,Min( ( DS - RCSe ) ,( MUR / RMSe ) ) ) ) ) ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7921291322926904}, {"determining": "( Max( PN,ACS ) * ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( RMSe + RCSe ) / ( MUC * Min( Max( Max( ( MLU - ( Min( MUC ,MUM ) + RRSe ) ),( RCSe - DS ) ),CS ) ,DS ) ) )", "obj1": 0.08661417322834646, "obj2": 0.851345548231684}, {"determining": "( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * MDR )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - CS ) )", "obj1": 0.23228346456692914, "obj2": 0.6110082832862936}, {"determining": "( ( ( FirstVNF_Mem * ( ARS / ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Min( ( MLU * RMSe ) ,( RCSe - MUC ) ) / ( ( ( MLU * ( DS + ( RCSe + RMSe ) ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7533066136153196}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * AMS ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ACS - Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + MUM ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5688976377952756, "obj2": 0.25283569592062194}, {"determining": "( Max( PN,ACS ) * ( Min( ARS ,Min( ( MRS / CRS ) ,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUM ) / ( Max( MLU,RRSe ) / ( MUM / CS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.03679496872055998}, {"determining": "( ( BR / ( AMS - ( DDR - FirstVNF_Mem ) ) ) * BR )", "choosing": "( ( ( ( ( Max( ( ( MUM - MLU ) * ( MLU - MUC ) ),RRSe ) - DS ) / ( Max( RCSe,RCSe ) / Max( MUM,( MUR - ( RCSe / MUC ) ) ) ) ) + MUR ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5918460328902079}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( ( RRS / ( FirstVNF_CPU_Server / ARS ) ) * Max( ACS,BR ) ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( Min( CS ,RCSe ) / RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( Min( ( MLU - RMSe ) ,MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.452755905511811, "obj2": 0.42331042931880924}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Max( Max( ( ( MUM + CS ) / ( CS - DS ) ),( ( RMSe / CS ) + ( MUR + DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) + RMSe ) - Min( ( DS * CS ) ,RCSe ) ) - RMSe )", "obj1": 0.484251968503937, "obj2": 0.4036210325437336}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) ) )", "obj1": 0.5767716535433071, "obj2": 0.24889397579050893}, {"determining": "( ( ( Min( ( ACS * FirstVNF_RAM ) ,( FirstVNF_RAM + ARS ) ) / MDR ) + ( FirstVNF_Mem - Min( RRS ,( Min( Max( ( AMS - RRS ),( Const - MDR ) ) ,( ARS / FirstVNF_RAM_Server ) ) + Max( Min( AMS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( CS * ( DS - Max( ( MUR - RCSe ),Min( ( RRSe / RRSe ) ,Max( Max( Max( MUM,MUC ),CS ),Min( RMSe ,( RRSe / RCSe ) ) ) ) ) ) ) - MLU )", "obj1": 0.7578740157480315, "obj2": 0.16280154712058792}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( Max( ( AMS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( AMS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.765748031496063, "obj2": 0.1549984286069789}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * AMS ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ACS - Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + MUM ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.3228346456692913, "obj2": 0.5332329630001681}, {"determining": "( ACS - Max( FirstVNF_Mem,PN ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + ( CS - DS ) ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( RMSe ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.328740157480315, "obj2": 0.5313942001938465}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( Const - DDR ) ) / FirstVNF_Mem ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.5236220472440944, "obj2": 0.2785390148190225}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( MDR - DDR ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( Max( ( ( RMSe / CS ) + ( RCSe / Min( CS ,RRSe ) ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / DS ) ,RCSe ) ) - RMSe )", "obj1": 0.9114173228346457, "obj2": 0.04336754770594467}, {"determining": "( ( Max( PN,ACS ) * ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) ) + ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( CS * ( ( RRSe * ( RRSe / Min( MUC ,( Min( MLU ,RMSe ) + DS ) ) ) ) - Max( MUR,RCSe ) ) ) - MLU )", "obj1": 0.9862204724409449, "obj2": 0.0055793448802533025}, {"determining": "Min( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.5452755905511811, "obj2": 0.26598671938019763}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( Max( ( AMS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( AMS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.7637795275590551, "obj2": 0.15825139253113077}, {"determining": "( ( Min( Min( DDR ,ARS ) ,( Min( MDR ,PN ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "( RMSe / ( MUC * ( ( ( MLU * MUM ) / ( ( RRSe + RCSe ) * ( Max( DS,( DS * RMSe ) ) + ( RRSe / ( DS / MLU ) ) ) ) ) * DS ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7986338446952419}, {"determining": "( FirstVNF_Mem_Server * Max( ( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * AMS ),CRS ) )", "choosing": "Max( Max( ( ( Min( ( ( CS / Max( RRSe,RCSe ) ) * Min( RCSe ,RMSe ) ) ,( MUM - ( Min( MUR ,MUM ) / MUM ) ) ) / CS ) + ( MUR + DS ) ),( ( MUM + ( CS / RMSe ) ) / ( CS - DS ) ) ),Min( Min( DS ,RCSe ) ,MUM ) )", "obj1": 0.2677165354330709, "obj2": 0.5852524950505169}, {"determining": "( ( CRS * ( ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * ( PN / ACS ) ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / ( ( ( ( RRSe + DS ) - MUM ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8383367744568094}, {"determining": "( FirstVNF_Mem_Server * Max( ( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * Min( RRS ,( FirstVNF_CPU_Server / ARS ) ) ),CRS ) )", "choosing": "Max( Max( ( ( Min( ( ( Min( CS ,RCSe ) / RCSe ) * Min( RCSe ,RMSe ) ) ,( MUM - ( Min( MUR ,MUM ) / MUM ) ) ) / CS ) + ( MUR + DS ) ),( ( MUM + ( CS / RMSe ) ) / ( CS - DS ) ) ),Min( Min( DS ,RCSe ) ,MUM ) )", "obj1": 0.27755905511811024, "obj2": 0.5821742719982788}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7921291322926904}, {"determining": "( ( AMS + ( FirstVNF_Mem - Min( RRS ,( ( Max( ( AMS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( AMS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) ) ) ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.7539370078740157, "obj2": 0.1653392858271305}, {"determining": "( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7533066136153196}], "10": [{"determining": "( ( Max( PN,ACS ) * ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) ) + ( ( ( MDR * MRS ) - ( DDR + MRS ) ) / ( Min( Max( PN,MRS ) ,( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) + ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) ) ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( MLU - ( Min( MUC ,MLU ) + RRSe ) ) ),( ( MUC + MLU ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( MUR / DS ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,ACS ) * ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( Min( Max( PN,MRS ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( MLU - ( Min( MUC ,MUM ) + RRSe ) ) ),( ( CS / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Max( ( PN * Const ),Min( RRS ,FirstVNF_CPU ) ) / Const ),FirstVNF_CPU_Server ) - ACS ) - ( FirstVNF_Mem_Server * ( CRS + MDR ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Min( ( DS / ( MLU + ( Min( ( ( MUR * RMSe ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) / MUM ) ) ) ,RCSe ) )", "obj1": 0.08070866141732283, "obj2": 0.869045109580726}, {"determining": "( Max( PN,PN ) * Max( RRS,( Max( ( BR / ( AMS - MRS ) ),( ( ( ( PN / AMS ) + ( RRS * BR ) ) + ( PN + FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) + CRS ) ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + DS ) ),( ( MUM + DS ) - ( CS - DS ) ) ) ) ) ),( MUR * ( ( ( ( MUR * ( DS + DS ) ) * Max( DS,RMSe ) ) + Max( MLU,Max( ( ( DS / MUC ) / RCSe ),DS ) ) ) / RMSe ) ) )", "obj1": 0.7244094488188977, "obj2": 0.14733584578526318}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS + MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( ( ( RRSe * DS ) + MUC ) * ( ( RCSe - RCSe ) * RRSe ) ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( MUR / DS ) ,RCSe ) )", "obj1": 0.4862204724409449, "obj2": 0.3860362701301146}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( DS / MUR ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - ( ( RRSe / RMSe ) + Max( DS,MUM ) ) )", "obj1": 0.3799212598425197, "obj2": 0.441165729635228}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.4921259842519685, "obj2": 0.29957277974565394}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( RCSe + DS ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.0727726772565637}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ACS ) - DDR ) ) / FirstVNF_Mem ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - RMSe ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.6968503937007874, "obj2": 0.18112704014753697}, {"determining": "( Max( ( ACS - Max( Max( PN,ACS ),FirstVNF_CPU_Server ) ),ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( ( ( MUM + CS ) / ( CS - DS ) ) / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.8740157480314961, "obj2": 0.0529983462707256}, {"determining": "( Max( ( ( AMS / ACS ) / ( MDR / AMS ) ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / DS ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RRSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.48542524178069485}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * ( ( Const + Max( FirstVNF_CPU,ARS ) ) * AMS ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,RCSe ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08241930695325018}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - Const ) * ( ( Const + Max( FirstVNF_CPU,ARS ) ) * Max( BR,ARS ) ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Min( CS ,MUR ) ) ) - CS ) ,( DS / ( ( RCSe / ( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,RCSe ) ) ) ) * ( RMSe * RMSe ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5196139027577872}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( CRS * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( ( Min( ( DS / MUM ) ,RRSe ) - CS ) ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6653543307086615, "obj2": 0.1832488613058397}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( FirstVNF_Mem_Server * CRS ) ) / FirstVNF_CPU ) * ( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( ( FirstVNF_Mem_Server - PN ) * ARS ) ) ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ACS - Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( Min( RMSe ,( RRSe * DS ) ) + ( RRSe + RCSe ) ) ) ) ) / RMSe ) - Min( ( Min( MUC ,Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.3051181102362205, "obj2": 0.5462948752582863}, {"determining": "( Max( FirstVNF_CPU,ARS ) - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * ( DS - ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ) ) - MLU )", "obj1": 0.4311023622047244, "obj2": 0.4379629227510763}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * ( DS - Max( ( ( Max( RRSe,MUM ) / RRSe ) * ( ( ( MUR - RRSe ) - ( RMSe / MUR ) ) / RMSe ) ),RCSe ) ) ) - MLU )", "obj1": 0.33661417322834647, "obj2": 0.5149727445498148}, {"determining": "( Max( PN,DDR ) * Min( Const ,( ( MDR + RRS ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( MUC / CS ) ) ,RRSe ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,Max( Max( RRSe,( MUC - MUC ) ),MUC ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08241930695325018}, {"determining": "( Min( ( AMS + RRS ) ,DDR ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( Min( Min( MUR ,RMSe ) ,MUC ),( ( MUM + CS ) / ( ( MUC + ( MUR / DS ) ) + Max( MUM,Min( RRSe ,MUC ) ) ) ) ),Min( Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.9566929133858267, "obj2": 0.014966787767122023}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "Max( ( RMSe / RCSe ),( Min( ( MUM * ( CS + MUM ) ) ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.6496062992125984, "obj2": 0.22409095892830372}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Max( Max( ( ( MUM + CS ) / ( CS - DS ) ),( ( RMSe / CS ) + ( MUR + DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) + RMSe ) - Min( ( DS * CS ) ,RCSe ) ) - RMSe )", "obj1": 0.484251968503937, "obj2": 0.4036210325437336}, {"determining": "( ( ( FirstVNF_Mem + MRS ) + DDR ) * ( ARS + DDR ) )", "choosing": "( ( ( ( ( CS * ( MUM - ( MLU * MLU ) ) ) * Min( MUM ,MUC ) ) - Max( RRSe,MUR ) ) - MUC ) - Min( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.1594488188976378, "obj2": 0.7380594917494367}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( Const - DDR ) ) / Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / DS ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.4645669291338583, "obj2": 0.4081466451071454}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * AMS ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + MUM ) ) ) ) / RMSe ) - Min( ( MUM * ( CS + MUM ) ) ,DS ) )", "obj1": 0.6200787401574803, "obj2": 0.24041225002720562}, {"determining": "( Max( PN,ACS ) * ( ( ( FirstVNF_RAM / ( Max( Const,RRS ) + Const ) ) + FirstVNF_RAM ) - RRS ) )", "choosing": "( ( ( Max( ( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ),Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + ( DS / RMSe ) ) / ( CS - DS ) ) ) ) - RMSe ) - Min( Min( ( MUM - ( RCSe / RRSe ) ) ,DS ) ,RCSe ) ) - RMSe )", "obj1": 0.7952755905511811, "obj2": 0.07668235141998272}, {"determining": "( Max( ( ( AMS / ACS ) / ARS ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.487658043134881}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_RAM - ( Max( ( Const / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) ) ) )", "choosing": "( RMSe / ( MUC * ( DS * ( CS / ( ( Max( DS,( DS * RMSe ) ) / ( RRSe / RRSe ) ) * ( CS * MUC ) ) ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7795507620577139}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( BR + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( ( Const + DDR ) / FirstVNF_Mem ) + ( Max( PN,ACS ) * CRS ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( Max( Max( ( ( RMSe / CS ) + ( MUR / DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,Max( DS,RCSe ) ) ,MUM ) ) / Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) ) * DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.826733588694843}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * ( FirstVNF_Mem_Server - PN ) ) ) ) - CRS ) )", "choosing": "Min( ( Min( RRSe ,( Min( MLU ,MUC ) - Max( MLU,MUR ) ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.022725571708879025}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( FirstVNF_CPU + RRS ),Const ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( ( MUC * CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / Max( Min( RMSe ,MLU ),RCSe ) ) ) - ( DS * CS ) ) ) )", "obj1": 0.5846456692913385, "obj2": 0.244158630730342}, {"determining": "( Max( PN,ACS ) * ( ( ( ACS / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - RMSe )", "obj1": 0.16141732283464566, "obj2": 0.7112875777334753}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6493160507499814}, {"determining": "( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * ( ARS + DDR ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6732271337973889}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6692913385826772, "obj2": 0.1821604263349359}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * Max( FirstVNF_RAM,ARS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - ( Max( Min( ( DS / CS ) ,( Max( ( RRSe / DS ),MLU ) / Max( RRSe,Min( RCSe ,( MUR / MUC ) ) ) ) ),( DS * RCSe ) ) + ( DS - Min( MUR ,DS ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6259182633701079}, {"determining": "( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * ( FirstVNF_RAM - ( Max( ( Const / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / CS ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - CS ) )", "obj1": 0.2440944881889764, "obj2": 0.5970296452133974}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_RAM - ( ACS - Max( ( ( ( MDR * FirstVNF_CPU ) / ( CRS * FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( CS * ( Max( RMSe,CS ) - Min( MUR ,RCSe ) ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7652290709653714}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Min( FirstVNF_Mem ,( ( ( FirstVNF_Mem_Server / ( Const + ( ACS * FirstVNF_RAM ) ) ) + ARS ) / DDR ) ) ) )", "choosing": "( ( CS / ( DS - Max( CS,RRSe ) ) ) - Min( Max( Max( ( MUM - RRSe ),MUR ),MUC ) ,RMSe ) )", "obj1": 0.281496062992126, "obj2": 0.5616202403310396}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / AMS ) * ( ( ( FirstVNF_RAM * FirstVNF_Mem ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ACS - Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),DS ),( ( ( DS / CS ) * RMSe ) - ( Max( MUR,DS ) - ( MLU + ( RRSe + RCSe ) ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.2736220472440945, "obj2": 0.5734945434437706}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5515425295522425}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( BR,RRS ) ) ) ) / Const ) * Min( PN ,MDR ) )", "choosing": "( ( Max( Max( ( ( CS / ( ( RCSe / MUC ) + ( MUC * CS ) ) ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) + MUR ) ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.6364808078217272}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) ) ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "Max( Max( FirstVNF_Mem_Server,ARS ),( AMS + ( DDR + Min( Const ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUM ) / ( MUC * Min( Max( ( RRSe * ( RMSe / RMSe ) ),MLU ) ,DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7718579112680265}, {"determining": "( Max( PN,ACS ) * Min( Max( MDR,( ARS - Const ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Max( ( ( MUM + CS ) / ( CS - DS ) ),( ( RMSe / CS ) + ( MUR + DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) + RMSe ) - Min( ( DS * CS ) ,RCSe ) ) - RMSe )", "obj1": 0.2125984251968504, "obj2": 0.6340692138942758}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS * MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.5098425196850394, "obj2": 0.2877588421616728}, {"determining": "( Max( PN,ACS ) * ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( RMSe + RCSe ) / ( MUC * Min( Max( Max( ( MLU - ( Min( MUC ,MUM ) + RRSe ) ),( RCSe - DS ) ),CS ) ,DS ) ) )", "obj1": 0.08661417322834646, "obj2": 0.851345548231684}, {"determining": "( ( RRS - BR ) + ( ( ( MRS * AMS ) - ( DDR + MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( Min( ( ( ( MUM * RMSe ) * ( ( Max( CS,DS ) + RMSe ) * MLU ) ) / MUR ) ,RCSe ) - ( CS * MUC ) )", "obj1": 0.46062992125984253, "obj2": 0.4204045852142636}, {"determining": "( Max( PN,ACS ) * ( ( ( ACS * AMS ) * ( Const - ( Const / ARS ) ) ) - CRS ) )", "choosing": "( ( Min( RRSe ,MUM ) / ( ( Min( DS ,MUM ) * CS ) + Max( RCSe,DS ) ) ) * ( RMSe / RMSe ) )", "obj1": 0.8976377952755905, "obj2": 0.05027988243184715}, {"determining": "( ( CRS + DDR ) * ( ARS + DDR ) )", "choosing": "( ( ( MLU / CS ) + ( ( Min( Min( Max( ( RMSe - RRSe ),( RRSe * RMSe ) ) ,MLU ) ,( RCSe * RRSe ) ) - DS ) + ( ( ( CS - ( ( MUM + MUR ) - ( RCSe * MUM ) ) ) * Max( Max( ( MUM - RRSe ),MUR ),MUC ) ) - Min( MUM ,CS ) ) ) ) - Min( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.16929133858267717, "obj2": 0.6911534282421287}, {"determining": "( ( Min( Min( DDR ,ARS ) ,( Min( MDR ,PN ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "( RMSe / ( MUC * ( ( ( MLU * MUM ) / ( ( RRSe + RCSe ) * ( Max( DS,( DS * RMSe ) ) + ( RRSe / ( DS / MLU ) ) ) ) ) * DS ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7986338446952419}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6556466733955632}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( ( ( Min( Max( MRS,FirstVNF_CPU ) ,CRS ) * ( PN + MDR ) ) + FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM - Max( Max( MUR,Max( MUC,Min( Min( MUM ,RMSe ) ,RRSe ) ) ),RCSe ) ) * CS ) - MLU )", "obj1": 0.33661417322834647, "obj2": 0.5149727445498148}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / ( ( MUM + CS ) / ( CS - DS ) ) ) ,RCSe ) )", "obj1": 0.8759842519685039, "obj2": 0.05243487910141447}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),Max( RRSe,RCSe ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6338582677165354, "obj2": 0.22948584665382737}, {"determining": "Min( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.5452755905511811, "obj2": 0.26598671938019763}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),Max( RRSe,RCSe ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6279527559055118, "obj2": 0.23548366804247528}, {"determining": "( ( FirstVNF_CPU + ARS ) - Max( ACS,BR ) )", "choosing": "( ( ( Max( CS,Max( MUM,( MUC / ( DS * ( DS - RRSe ) ) ) ) ) - ( CS * ( DS - Max( ( RMSe / DS ),RCSe ) ) ) ) * CS ) - MLU )", "obj1": 0.44291338582677164, "obj2": 0.43542027111884635}, {"determining": "Max( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / Const ) ),( FirstVNF_RAM - ( ( MRS / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - ( MRS / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( Max( CS,RMSe ) * ( ( Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) ) / MUC ) * DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8675268220749567}, {"determining": "( Max( ( ( AMS / ACS ) / ( MDR / AMS ) ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / DS ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RRSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.487658043134881}, {"determining": "( ACS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + ( CS - DS ) ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5610236220472441, "obj2": 0.25822437682614746}, {"determining": "( ( ( FirstVNF_Mem + MRS ) + DDR ) * ( ARS + DDR ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8081604365385994}, {"determining": "( ( CRS + DDR ) * ( ARS + DDR ) )", "choosing": "( ( ( MLU / CS ) + ( ( Min( Min( Max( ( RMSe - RRSe ),( RRSe * RMSe ) ) ,MLU ) ,( RCSe * RRSe ) ) - DS ) + ( ( ( CS - ( ( MUM + MUR ) - ( RCSe * MUM ) ) ) * Max( Max( ( MUM - RRSe ),MUR ),MUC ) ) - Min( MUM ,CS ) ) ) ) - Min( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.16929133858267717, "obj2": 0.6911534282421287}, {"determining": "( Max( PN,ACS ) * ( ( Max( AMS,ACS ) + Min( ( MRS + AMS ) ,( RRS + ACS ) ) ) - CRS ) )", "choosing": "( ( RMSe * RCSe ) - ( ( MUR + MUC ) + ( ( DS * ( Min( ( MLU + RMSe ) ,DS ) - ( CS + MUR ) ) ) / RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7112875777334753}, {"determining": "( PN + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( ( ( RRSe / ( DS + CS ) ) * MUC ) / CS ) - ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.9763779527559056, "obj2": 0.00918920654936684}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.42607252796200157}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03028570826594922}, {"determining": "( Max( PN,ACS ) * ( Min( ARS ,Min( ( MRS / CRS ) ,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUM ) / ( Max( MLU,RRSe ) / ( MUM / CS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.03679496872055998}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * AMS ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ACS - Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + MUM ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5688976377952756, "obj2": 0.25283569592062194}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( ( RRS / ( FirstVNF_CPU_Server / ARS ) ) * Max( ACS,BR ) ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( Min( CS ,RCSe ) / RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( Min( ( MLU - RMSe ) ,MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.452755905511811, "obj2": 0.42331042931880924}, {"determining": "( ( ( Const / Max( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( FirstVNF_CPU * ACS ) ) ) ),Max( AMS,FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem ) * MDR )", "choosing": "( ( RMSe - ( MLU / Min( MUR ,Min( RMSe ,( ( ( DS + RCSe ) * RCSe ) / CS ) ) ) ) ) - Min( RCSe ,( DS / ( MLU + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8441984871005789}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - CS ) ) ),( ( ( ( MLU * MUM ) + RRSe ) / ( MUR + RMSe ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5295275590551181, "obj2": 0.2755191418446757}, {"determining": "( ( BR / ( AMS - ( DDR - FirstVNF_Mem ) ) ) * BR )", "choosing": "( ( ( ( ( Max( ( ( MUM - MLU ) * ( MLU - MUC ) ),RRSe ) - DS ) / ( Max( RCSe,RCSe ) / Max( MUM,( MUR - ( RCSe / MUC ) ) ) ) ) + MUR ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5918460328902079}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "Max( ( RMSe / RCSe ),( Min( ( MUM * ( CS + MUM ) ) ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.6496062992125984, "obj2": 0.22409095892830372}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( FirstVNF_RAM + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUM + CS ) / ( CS - DS ) ) * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6634728472331349}, {"determining": "( ( CRS * ( ( CRS * ARS ) * ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,( Const - AMS ) ),( ( Min( ( DDR + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( DS * ( CS / ( ( Max( DS,Max( RRSe,DS ) ) * ( Max( MUR,RCSe ) - RMSe ) ) - Min( ( Max( MUR,RRSe ) - ( MUM + RCSe ) ) ,Min( ( DS - RCSe ) ,( MUR / RMSe ) ) ) ) ) ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7921291322926904}, {"determining": "Max( ( MDR + ( PN + CRS ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( DDR - FirstVNF_RAM_Server ) ) - ACS ) - Max( FirstVNF_Mem_Server,( FirstVNF_Mem + CRS ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( CS,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5810471488884787}, {"determining": "( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7533066136153196}, {"determining": "( ( CRS + MRS ) * Max( Min( MRS ,Max( DDR,( FirstVNF_CPU_Server / PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( DS - RCSe ),Max( DS,RCSe ) ) + ( Max( MUC,CS ) - Min( MUM ,( CS - ( Min( RRSe ,( MLU * MLU ) ) - ( ( MUM * RMSe ) - CS ) ) ) ) ) ) - ( ( MUM / RRSe ) + ( MUC - ( MLU + ( CS + MUC ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.747260154675004}, {"determining": "Max( ( MDR + ( PN + CRS ) ),( ( FirstVNF_RAM * RRS ) - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) - ( CRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU - Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( RMSe ,RCSe ) ) ,( Min( MUR ,CS ) - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8355228341439892}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.027415074847241355}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS * MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - MUC )", "obj1": 0.9311023622047244, "obj2": 0.025507419242253592}, {"determining": "( FirstVNF_Mem_Server * Max( ( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * AMS ),CRS ) )", "choosing": "Max( Max( ( ( Min( ( ( CS / Max( RRSe,RCSe ) ) * Min( RCSe ,RMSe ) ) ,( MUM - ( Min( MUR ,MUM ) / MUM ) ) ) / CS ) + ( MUR + DS ) ),( ( MUM + ( CS / RMSe ) ) / ( CS - DS ) ) ),Min( Min( DS ,RCSe ) ,MUM ) )", "obj1": 0.265748031496063, "obj2": 0.5839317650967555}, {"determining": "( FirstVNF_Mem_Server * Max( ( ( Const + ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) * AMS ),CRS ) )", "choosing": "Max( Max( MUC,( ( MUM + ( CS / RMSe ) ) / ( CS - DS ) ) ),Min( Min( DS ,RCSe ) ,MUM ) )", "obj1": 0.2618110236220472, "obj2": 0.5889107986871781}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - Min( AMS ,ACS ) ) )", "choosing": "Max( ( RMSe / RCSe ),( Min( ( RCSe * ( ( CS - MUC ) + MUM ) ) ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.6456692913385826, "obj2": 0.2276821598314542}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,Min( Const ,PN ) ) ) )", "choosing": "( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7448958363875577}, {"determining": "( ( CRS * ( ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * ( PN / ACS ) ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / ( ( ( ( RRSe + DS ) - MUM ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8383367744568094}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( MDR - DDR ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( Max( ( ( RMSe / CS ) + ( RCSe / Min( CS ,RRSe ) ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / DS ) ,RCSe ) ) - RMSe )", "obj1": 0.9114173228346457, "obj2": 0.04336754770594467}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7921291322926904}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( Const - DDR ) ) - CRS ) )", "choosing": "( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04713186020217944}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + ( ( MDR - Const ) - ( MRS + FirstVNF_RAM ) ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - ( ( DS / Min( CS ,DS ) ) * MUM ) ) ) / RMSe ) - Min( ( DS + MUR ) ,RCSe ) )", "obj1": 0.4330708661417323, "obj2": 0.4369963048729528}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.081768220106004}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( CS * ( DS - Max( CS,RRSe ) ) ) / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6170841188807363}, {"determining": "( ( ( FirstVNF_Mem * ( ARS / ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( Min( ( Min( ( MLU * RMSe ) ,( RCSe - MUC ) ) / ( ( ( MLU * ( DS + ( RCSe + RMSe ) ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7533066136153196}, {"determining": "Max( ( MDR + ( PN + CRS ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) - Max( FirstVNF_Mem_Server,( FirstVNF_Mem + CRS ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6067634324510424}, {"determining": "( ACS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( CS * ( DS - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.5374015748031497, "obj2": 0.2695604131607669}, {"determining": "( ACS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5551181102362205, "obj2": 0.2621862358974731}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8081604365385994}, {"determining": "( PN + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( ( ( RRSe / ( DS + CS ) ) * MUC ) / CS ) - ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.9763779527559056, "obj2": 0.00918920654936684}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + ( RRSe + RCSe ) ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5728346456692913, "obj2": 0.2501131666683747}, {"determining": "( ( Max( PN,ACS ) * ( ( ( PN / AMS ) + Min( ( FirstVNF_Mem / ARS ) ,AMS ) ) - CRS ) ) + ( ( ( MRS * AMS ) - Min( DDR ,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( CS * ( ( Max( ( MUR - ( CS / ( MUC / RCSe ) ) ),( RMSe * RRSe ) ) * MLU ) - Max( CS,RCSe ) ) ) - MLU )", "obj1": 0.984251968503937, "obj2": 0.00626175590184738}], "11": [{"determining": "( ( ( ( ( AMS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - Max( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * Min( ( ( ( ( MUM / ( CS - DS ) ) - MUR ) * RMSe ) / MUR ) ,RMSe ) ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,ACS ) * ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) ) + ( ( ( MDR * MRS ) - ( DDR + MRS ) ) / ( Min( Max( PN,MRS ) ,( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) + ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) ) ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( MLU - ( Min( MUC ,MLU ) + RRSe ) ) ),( ( MUC + MLU ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( MUR / DS ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Max( ( PN * Const ),Min( RRS ,FirstVNF_CPU ) ) / Const ),FirstVNF_CPU_Server ) - ACS ) - ( FirstVNF_Mem_Server * ( CRS + MDR ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Min( ( DS / ( MLU + ( Min( ( ( MUR * RMSe ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) / MUM ) ) ) ,RCSe ) )", "obj1": 0.08070866141732283, "obj2": 0.869045109580726}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS + MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( ( ( RRSe * DS ) + MUC ) * ( ( RCSe - RCSe ) * RRSe ) ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( MUR / DS ) ,RCSe ) )", "obj1": 0.4862204724409449, "obj2": 0.3860362701301146}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( DS / MUR ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - ( ( RRSe / RMSe ) + Max( DS,MUM ) ) )", "obj1": 0.3799212598425197, "obj2": 0.441165729635228}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.4921259842519685, "obj2": 0.29957277974565394}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( RCSe + DS ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.0727726772565637}, {"determining": "( ( ( FirstVNF_Mem + MRS ) + DDR ) * ( Max( ( ACS - Max( Max( PN,ACS ),FirstVNF_CPU_Server ) ),ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) ) )", "choosing": "( ( ( ( ( CS * ( MUM - ( MLU * MLU ) ) ) * Min( MUM ,MUC ) ) - Max( RRSe,MUR ) ) - MUC ) - Min( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( ( CS - DS ) + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.8720472440944882, "obj2": 0.06818892017899175}, {"determining": "( Max( ( ( AMS / ACS ) / ARS ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5130829002481757}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ( ( FirstVNF_CPU / Min( MRS ,CRS ) ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( ( RCSe + RCSe ) + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( RMSe ,MUM ) ) ,( MUC - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.1140110336481162}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.7696850393700787, "obj2": 0.09424525227980751}, {"determining": "( Max( ( ( AMS / ACS ) / ( MDR / AMS ) ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / DS ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RRSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.48542524178069485}, {"determining": "( Max( PN,( ARS * RRS ) ) * ( ( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * Max( Const,MDR ) ) - CRS ) )", "choosing": "( ( RCSe * Max( DS,( RRSe - RMSe ) ) ) - ( RRSe + RCSe ) )", "obj1": 0.6594488188976378, "obj2": 0.1877113496547402}, {"determining": "( Max( FirstVNF_CPU,ARS ) - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * ( DS - ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ) ) - MLU )", "obj1": 0.4311023622047244, "obj2": 0.4379629227510763}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.1377318529578684}, {"determining": "( Max( PN,PN ) * Max( RRS,( Max( ( BR / ( AMS - MRS ) ),( ( ( ( PN / AMS ) + ( RRS * BR ) ) + ( PN + FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) + CRS ) ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + DS ) ),( ( MUM + DS ) - ( CS - DS ) ) ) ) ) ),( MUR * ( ( ( ( MUR * ( DS + DS ) ) * Max( DS,RMSe ) ) + Max( MLU,Max( ( ( DS / MUC ) / RCSe ),DS ) ) ) / RMSe ) ) )", "obj1": 0.7244094488188977, "obj2": 0.14733584578526318}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6850393700787402, "obj2": 0.15417185294760924}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( FirstVNF_Mem * ( ARS / ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MLU * RMSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.7066929133858267, "obj2": 0.15365429427022495}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( CS * ( DS - Max( ( ( Max( RRSe,MUM ) / RRSe ) * ( ( ( MUR - RRSe ) - ( RMSe / MUR ) ) / RMSe ) ),RCSe ) ) ) - MLU )", "obj1": 0.6791338582677166, "obj2": 0.17436984197194033}, {"determining": "( ( ( FirstVNF_Mem + MRS ) + DDR ) * ( ARS + DDR ) )", "choosing": "( ( ( ( ( CS * ( MUM - ( MLU * MLU ) ) ) * Min( MUM ,MUC ) ) - Max( RRSe,MUR ) ) - MUC ) - Min( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.1594488188976378, "obj2": 0.7380594917494367}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "Max( ( RMSe / RCSe ),( Min( ( MUM * ( CS + MUM ) ) ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.6496062992125984, "obj2": 0.22409095892830372}, {"determining": "( ACS - Max( ( FirstVNF_Mem + Const ),( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - ARS ) ) * MDR ) ) )", "choosing": "( ( ( Max( ( DS * MUM ),DS ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / RCSe ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.59251968503937, "obj2": 0.2424822784500608}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.42016497717110457}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,AMS ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Max( Max( ( ( MUM + CS ) / ( CS - DS ) ),( ( RMSe / CS ) + ( MUR + DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) + RMSe ) - Min( ( DS * CS ) ,RCSe ) ) - RMSe )", "obj1": 0.484251968503937, "obj2": 0.4036210325437336}, {"determining": "( Max( PN,ACS ) * ( ( Max( AMS,ACS ) + Min( ( MRS + AMS ) ,( RRS + ACS ) ) ) - CRS ) )", "choosing": "( ( RMSe * RCSe ) - ( ( MUR + MUC ) + ( ( DS * ( Min( ( MLU + RMSe ) ,DS ) - ( CS + MUR ) ) ) / RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7112875777334753}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6493160507499814}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - Const ) * ( ( Const + Max( FirstVNF_CPU,ARS ) ) * Max( BR,ARS ) ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Min( CS ,MUR ) ) ) - CS ) ,( DS / ( ( RCSe / ( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,RCSe ) ) ) ) * ( RMSe * RMSe ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5196139027577872}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( BR,RRS ) ) ) ) / Const ) * Min( PN ,MDR ) )", "choosing": "( ( Max( Max( ( ( CS / ( ( RCSe / MUC ) + ( MUC * CS ) ) ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) + MUR ) ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.6364808078217272}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_RAM - ( ACS - Max( ( ( ( MDR * FirstVNF_CPU ) / ( CRS * FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( CS * ( Max( RMSe,CS ) - Min( MUR ,RCSe ) ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7652290709653714}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.8976377952755905, "obj2": 0.044857382062746594}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * AMS ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + MUM ) ) ) ) / RMSe ) - Min( ( MUM * ( CS + MUM ) ) ,DS ) )", "obj1": 0.6200787401574803, "obj2": 0.24041225002720562}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ( CRS * FirstVNF_Mem_Server ) ) - DDR ) ) / FirstVNF_Mem ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( Max( ( MUR + DS ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - RMSe ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.5236220472440944, "obj2": 0.2785390148190225}, {"determining": "( Max( ( ( AMS / ACS ) / ARS ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.487658043134881}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / ( ( MUM + CS ) / ( CS - DS ) ) ) ,RCSe ) )", "obj1": 0.8759842519685039, "obj2": 0.05243487910141447}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( FirstVNF_Mem_Server * CRS ) ) / FirstVNF_CPU ) * ( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( ( FirstVNF_Mem_Server - PN ) * ARS ) ) ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ACS - Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( Min( RMSe ,( RRSe * DS ) ) + ( RRSe + RCSe ) ) ) ) ) / RMSe ) - Min( ( Min( MUC ,Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.3051181102362205, "obj2": 0.5462948752582863}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * ( ( Const + Max( FirstVNF_CPU,ARS ) ) * AMS ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / ( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,RCSe ) ) ) ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5582683067920121}, {"determining": "( Max( ( ( AMS / ACS ) / ( MDR / AMS ) ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / DS ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RRSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.487658043134881}, {"determining": "( Min( ( AMS + RRS ) ,DDR ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( Min( Min( MUR ,RMSe ) ,MUC ),( ( MUM + CS ) / ( ( MUC + ( MUR / DS ) ) + Max( MUM,Min( RRSe ,MUC ) ) ) ) ),Min( Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.9566929133858267, "obj2": 0.014966787767122023}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * ( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ACS - Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.27165354330708663, "obj2": 0.5706146263042969}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS * MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.5098425196850394, "obj2": 0.2877588421616728}, {"determining": "Max( Max( FirstVNF_Mem_Server,ARS ),( AMS + ( DDR + Min( Const ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUM ) / ( MUC * Min( Max( ( RRSe * ( RMSe / RMSe ) ),MLU ) ,DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7718579112680265}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( MDR / FirstVNF_Mem ) + ( CRS * Max( PN,ACS ) ) ) ) ) ) )", "choosing": "( ( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.2125984251968504, "obj2": 0.6318337656338519}, {"determining": "( Max( PN,ACS ) * ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( RMSe + RCSe ) / ( MUC * Min( Max( Max( ( MLU - ( Min( MUC ,MUM ) + RRSe ) ),( RCSe - DS ) ),CS ) ,DS ) ) )", "obj1": 0.08661417322834646, "obj2": 0.851345548231684}, {"determining": "( ACS - ( FirstVNF_RAM - MDR ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - ( ( DS - CS ) - MUC ) ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.30118110236220474, "obj2": 0.547797395088056}, {"determining": "( ( CRS + DDR ) * ( ARS + DDR ) )", "choosing": "( ( ( MLU / CS ) + ( ( Min( Min( Max( ( RMSe - RRSe ),( RRSe * RMSe ) ) ,MLU ) ,( RCSe * RRSe ) ) - DS ) + ( ( ( CS - ( ( MUM + MUR ) - ( RCSe * MUM ) ) ) * Max( Max( ( MUM - RRSe ),MUR ),MUC ) ) - Min( MUM ,CS ) ) ) ) - Min( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.16929133858267717, "obj2": 0.6911534282421287}, {"determining": "( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * ( ( ACS / CRS ) + DDR ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS + RMSe ) ) / Min( ( DS / RRSe ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6732271337973889}, {"determining": "( ( Min( Min( DDR ,ARS ) ,( Min( MDR ,PN ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "( RMSe / ( MUC * ( ( ( MLU * MUM ) / ( ( RRSe + RCSe ) * ( Max( DS,( DS * RMSe ) ) + ( RRSe / ( DS / MLU ) ) ) ) ) * DS ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7986338446952419}, {"determining": "( ( Max( PN,ACS ) * ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( ( ( Const + Max( FirstVNF_CPU,ARS ) ) * AMS ),BR ) ) ) )", "choosing": "( ( CS * ( DS - Max( MUR,( MLU + MUM ) ) ) ) - MLU )", "obj1": 0.952755905511811, "obj2": 0.018593550045949904}, {"determining": "( Max( PN,ACS ) * ( ( ( FirstVNF_RAM / ( Max( Const,RRS ) + Const ) ) + FirstVNF_RAM ) - RRS ) )", "choosing": "( ( ( Max( ( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ),Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + ( DS / RMSe ) ) / ( CS - DS ) ) ) ) - RMSe ) - Min( Min( ( MUM - ( RCSe / RRSe ) ) ,DS ) ,RCSe ) ) - RMSe )", "obj1": 0.7952755905511811, "obj2": 0.07668235141998272}, {"determining": "( PN + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.9744094488188977, "obj2": 0.010321062864174616}, {"determining": "Min( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.5452755905511811, "obj2": 0.26598671938019763}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_RAM - ( Max( ( Const / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) ) ) )", "choosing": "( RMSe / ( MUC * ( DS * ( CS / ( ( Max( DS,( DS * RMSe ) ) / ( RRSe / RRSe ) ) * ( CS * MUC ) ) ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7795507620577139}, {"determining": "( ( FirstVNF_CPU + ARS ) - Max( ACS,BR ) )", "choosing": "( ( ( Max( CS,Max( MUM,( MUC / ( DS * ( DS - RRSe ) ) ) ) ) - ( CS * ( DS - Max( ( RMSe / DS ),RCSe ) ) ) ) * CS ) - MLU )", "obj1": 0.44291338582677164, "obj2": 0.43542027111884635}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5515425295522425}, {"determining": "( Max( Max( ( ( Min( ACS ,AMS ) * ( Const - DDR ) ) / Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU_Server ),ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * ( FirstVNF_Mem_Server - PN ) ) ) ) - CRS ) )", "choosing": "Min( ( Min( RRSe ,( Min( MLU ,MUC ) - Max( MLU,MUR ) ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + ( MUM + CS ) ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.022702986455980217}, {"determining": "Max( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / Const ) ),( FirstVNF_RAM - ( ( MRS / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - ( MRS / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( Max( CS,RMSe ) * ( ( Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) ) / MUC ) * DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8675268220749567}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( MDR + FirstVNF_RAM ) - CRS ) ),Max( RRS,Const ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) + CS ) ,( DS / ( Min( ( ( ( ( MLU * DS ) * Max( MUC,MUC ) ) * RRSe ) / ( MUC + DS ) ) ,CS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5185922207660704}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( FirstVNF_Mem_Server - PN ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / DS ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ,RCSe ) ) - RMSe )", "obj1": 0.46653543307086615, "obj2": 0.4059559645036864}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6684157245430851}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( CRS * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( Min( ( DDR + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( MLU / CS ) + ( ( Min( Min( Max( ( RMSe - RRSe ),( RRSe * RMSe ) ) ,MLU ) ,( RCSe * RRSe ) ) - DS ) + ( ( ( CS - ( ( MUM + MUR ) - ( RCSe * MUM ) ) ) * Max( Max( ( MUM - RRSe ),MUR ),MUC ) ) - Min( MUM ,CS ) ) ) ) - Min( ( Min( Min( RCSe ,RMSe ) ,MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) )", "obj1": 0.16929133858267717, "obj2": 0.6911534282421287}, {"determining": "( Max( PN,ACS ) * ( ( ( ACS / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( RMSe / RCSe ) - RMSe )", "obj1": 0.16141732283464566, "obj2": 0.7112875777334753}, {"determining": "( Max( PN,ACS ) * ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + Max( RMSe,RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( ( ( CS / RMSe ) + ( MUR + CS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS + MUR ) ) / ( CS - DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6692913385826772, "obj2": 0.18140203799925578}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "( RMSe / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.9035433070866141, "obj2": 0.04025108561687982}, {"determining": "( Max( PN,ACS ) * ( Min( ARS ,Min( ( MRS / CRS ) ,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUM ) / ( Max( MLU,RRSe ) / ( MUM / CS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.03679496872055998}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),Max( RRSe,RCSe ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6338582677165354, "obj2": 0.22948584665382737}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,Min( Const ,PN ) ) ) )", "choosing": "( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7448958363875577}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - Min( AMS ,ACS ) ) )", "choosing": "Max( ( RMSe / RCSe ),( Min( ( RCSe * ( ( CS - MUC ) + MUM ) ) ,DS ) * ( MUM * MUR ) ) )", "obj1": 0.6456692913385826, "obj2": 0.2276821598314542}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( FirstVNF_RAM + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUM + CS ) / ( CS - DS ) ) * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6634728472331349}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( ( RMSe / CS ) + ( RRSe + DS ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7828121016512025}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( CS * ( DS - Max( CS,RRSe ) ) ) / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6170841188807363}, {"determining": "( ( CRS + MRS ) * Max( Min( MRS ,Max( DDR,( FirstVNF_CPU_Server / PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( DS - RCSe ),Max( DS,RCSe ) ) + ( Max( MUC,CS ) - Min( MUM ,( CS - ( Min( RRSe ,( MLU * MLU ) ) - ( ( MUM * RMSe ) - CS ) ) ) ) ) ) - ( ( MUM / RRSe ) + ( MUC - ( MLU + ( CS + MUC ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.747260154675004}, {"determining": "( Max( ( ACS - Max( Max( PN,ACS ),FirstVNF_CPU_Server ) ),ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( ( ( MUM + CS ) / ( CS - DS ) ) / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.8740157480314961, "obj2": 0.0529983462707256}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * AMS ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ACS - Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + MUM ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5688976377952756, "obj2": 0.25283569592062194}, {"determining": "( ( FirstVNF_Mem + PN ) - ( RRS + MRS ) )", "choosing": "Min( ( ( CS * ( ( MUC + MUC ) - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( MUR / DS ) * Min( RMSe ,RRSe ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5861808523670727}, {"determining": "( Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * ( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) ,DDR ) * ( FirstVNF_RAM - ( Max( ( Const / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "( ( ( ( Min( RMSe ,( RMSe / CS ) ) - Min( MUM ,CS ) ) / CS ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - CS ) )", "obj1": 0.2440944881889764, "obj2": 0.5970296452133974}, {"determining": "Max( ( MDR + ( PN + CRS ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( DDR - FirstVNF_RAM_Server ) ) - ACS ) - Max( FirstVNF_Mem_Server,( FirstVNF_Mem + CRS ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( CS,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5810471488884787}, {"determining": "( ( ( Const / Max( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( FirstVNF_CPU * ACS ) ) ) ),Max( AMS,FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem ) * MDR )", "choosing": "( ( RMSe - ( MLU / Min( MUR ,Min( RMSe ,( ( ( DS + RCSe ) * RCSe ) / CS ) ) ) ) ) - Min( RCSe ,( DS / ( MLU + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8441984871005789}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( FirstVNF_CPU + RRS ),Const ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( ( MUC * CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + ( CS / Max( Min( RMSe ,MLU ),RCSe ) ) ) - ( DS * CS ) ) ) )", "obj1": 0.5846456692913385, "obj2": 0.244158630730342}, {"determining": "( ( CRS * ( ( ( Max( PN,ACS ) * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( CS / ( ( Min( ( MUR - DS ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8183600986052366}, {"determining": "( ( DDR * RRS ) * ( ( ( ( FirstVNF_CPU_Server * Max( Min( BR ,( BR + FirstVNF_Mem ) ),FirstVNF_CPU_Server ) ) - MDR ) * ( ( Const + Max( Max( FirstVNF_RAM,BR ),FirstVNF_CPU ) ) * RRS ) ) - CRS ) )", "choosing": "( ( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( Min( MUC ,( MUC + MLU ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( Max( ( ( CS * ( Max( MUR,RRSe ) - DS ) ) - MLU ),MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.7913385826771654, "obj2": 0.07856831612594323}, {"determining": "( ACS - Min( Min( ARS ,( CRS - ( DDR - FirstVNF_CPU_Server ) ) ) ,Max( DDR,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( ( ( DS / ( RRSe - MUR ) ) / MUC ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6149361481395429}, {"determining": "( ( CRS / ( FirstVNF_Mem * ( RRS * PN ) ) ) * ( RRS * ARS ) )", "choosing": "( Min( ( Max( Min( MUM ,MUR ),Min( MLU ,( RRSe * ( MUC / ( MUR * MUM ) ) ) ) ) / ( ( ( ( RCSe - DS ) * MLU ) / MUR ) - ( RRSe - MLU ) ) ) ,MUM ) - ( RRSe + RRSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7533066136153196}, {"determining": "Max( Max( MDR,( PN + CRS ) ),( ( FirstVNF_RAM * AMS ) - ( ( ( FirstVNF_CPU_Server / DDR ) * ( CRS - AMS ) ) - Max( FirstVNF_Mem_Server,( FirstVNF_Mem + CRS ) ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( Min( CS ,( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( ( MLU + RMSe ) + MUC ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6556466733955632}, {"determining": "( ACS - Max( Max( ( Min( Max( PN,MRS ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * Max( FirstVNF_RAM,BR ) ),MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + ( MUR + DS ) ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5787401574803149, "obj2": 0.24770893945618655}, {"determining": "( ( ( Const - FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) * ( CRS * ARS ) ) ) * Max( FirstVNF_CPU_Server,( Max( Const,CRS ) * Max( Max( FirstVNF_Mem_Server,RRS ),( ( Min( ( BR + ACS ) ,CRS ) + Min( Min( PN ,FirstVNF_CPU ) ,MDR ) ) * ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RCSe / ( ( DS * ( CS / ( ( Max( MLU,Max( RRSe,DS ) ) * ( Max( MUR,CS ) - Min( RRSe ,RRSe ) ) ) - ( RRSe - MUC ) ) ) ) * ( ( MLU * ( RMSe - MUM ) ) - ( CS + RRSe ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8207548111044064}, {"determining": "Max( ( MDR + ( PN + CRS ) ),( ( FirstVNF_RAM * RRS ) - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) - ( CRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU - Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( RMSe ,RCSe ) ) ,( Min( MUR ,CS ) - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8355228341439892}, {"determining": "( Max( Const,ACS ) * ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( RMSe + RCSe ) / ( MUC * Min( Max( Max( ( MLU - ( Min( MUC ,MUM ) + RRSe ) ),( RCSe - DS ) ),CS ) ,Max( MUR,DS ) ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6255831661973343}, {"determining": "( Max( PN,ACS ) * Min( Max( MDR,( ARS - Const ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6067634324510424}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( CRS * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( ( Min( ( DS / MUM ) ,RRSe ) - CS ) ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6653543307086615, "obj2": 0.1832488613058397}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * Max( FirstVNF_RAM,ARS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - ( Max( Min( ( DS / CS ) ,( Max( ( RRSe / DS ),MLU ) / Max( RRSe,Min( RCSe ,( MUR / MUC ) ) ) ) ),( DS * RCSe ) ) + ( DS - Min( MUR ,DS ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6259182633701079}, {"determining": "( Max( ACS,PN ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),Max( RRSe,RCSe ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6279527559055118, "obj2": 0.23548366804247528}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.081768220106004}, {"determining": "( ( BR / ( AMS - ( DDR - FirstVNF_Mem ) ) ) * BR )", "choosing": "( ( ( ( ( Max( ( ( MUM - MLU ) * ( MLU - MUC ) ),RRSe ) - DS ) / ( Max( RCSe,RCSe ) / Max( MUM,( MUR - ( RCSe / MUC ) ) ) ) ) + MUR ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5918460328902079}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.42607252796200157}, {"determining": "( ( CRS * ( ( CRS * ARS ) * ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,( Const - AMS ) ),( ( Min( ( DDR + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( DS * ( CS / ( ( Max( DS,Max( RRSe,DS ) ) * ( Max( MUR,RCSe ) - RMSe ) ) - Min( ( Max( MUR,RRSe ) - ( MUM + RCSe ) ) ,Min( ( DS - RCSe ) ,( MUR / RMSe ) ) ) ) ) ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7921291322926904}, {"determining": "( ( CRS * ( ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * ( PN / ACS ) ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / ( ( ( ( RRSe + DS ) - MUM ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8383367744568094}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8081604365385994}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( Const - DDR ) ) / Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / DS ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.4645669291338583, "obj2": 0.4081466451071454}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + ( ( MDR - Const ) - ( MRS + FirstVNF_RAM ) ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - ( ( DS / Min( CS ,DS ) ) * MUM ) ) ) / RMSe ) - Min( ( DS + MUR ) ,RCSe ) )", "obj1": 0.4330708661417323, "obj2": 0.4369963048729528}, {"determining": "( Max( PN,DDR ) * Min( Const ,( ( MDR + RRS ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( MUC / CS ) ) ,RRSe ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,Max( Max( RRSe,( MUC - MUC ) ),MUC ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08241930695325018}], "12": [{"determining": "( ACS - Max( ( ( FirstVNF_Mem + MDR ) + FirstVNF_Mem ),( ( ( ACS + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) )", "choosing": "( ( ( Max( ( DS * MUM ),DS ) + ( ( DS / MLU ) / RRSe ) ) * Max( MUM,DS ) ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / RCSe ) ,CS ) ) + ( ( RMSe / CS ) * Min( CS ,DS ) ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - Max( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * Min( ( ( ( ( MUM / ( CS - DS ) ) - MUR ) * RMSe ) / MUR ) ,RMSe ) ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Max( ( PN * Const ),Min( RRS ,FirstVNF_CPU ) ) / Const ),FirstVNF_CPU_Server ) - ACS ) - ( FirstVNF_Mem_Server * ( CRS + MDR ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Min( ( DS / ( MLU + ( Min( ( ( MUR * RMSe ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) / MUM ) ) ) ,RCSe ) )", "obj1": 0.08070866141732283, "obj2": 0.869045109580726}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( DS / MUR ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - ( ( RRSe / RMSe ) + Max( DS,MUM ) ) )", "obj1": 0.3799212598425197, "obj2": 0.441165729635228}, {"determining": "( ( RRS / FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( Min( ( RMSe / RRSe ) ,CS ) / MUC ) - ( ( RMSe / CS ) * ( CS + MUC ) ) ) ) * DS ) ) )", "obj1": 0.3464566929133858, "obj2": 0.4654482674208326}, {"determining": "( Max( ( MRS / PN ),CRS ) * ( ( ( ( ( ( AMS + DDR ) * Max( ( FirstVNF_Mem_Server - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( Min( RRSe ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - ( MUR - RRSe ) ) ) ) ) ) - ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) )", "obj1": 0.43503937007874016, "obj2": 0.37135242514011485}, {"determining": "( Max( FirstVNF_CPU,ARS ) - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3362864336140025}, {"determining": "( FirstVNF_RAM * ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - ACS ) ) - CRS ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU / ( RCSe - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( Min( ( ( MUR - MUC ) / ( ( DS / MUM ) + ( RCSe / MUR ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.8661417322834646, "obj2": 0.056372768853712986}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.13558329106041822}, {"determining": "( Max( PN,ACS ) * ( FirstVNF_RAM - Const ) )", "choosing": "Max( ( Min( RMSe ,MLU ) / RMSe ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) )", "obj1": 0.6437007874015748, "obj2": 0.20015198424996009}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + ( ( MDR - Const ) - ( MRS + FirstVNF_RAM ) ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - ( ( DS / Min( CS ,DS ) ) * MUM ) ) ) / RMSe ) - Min( ( DS + MUR ) ,RCSe ) )", "obj1": 0.4330708661417323, "obj2": 0.4369963048729528}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.4881889763779528, "obj2": 0.3018899672224938}, {"determining": "Max( Min( Min( PN ,FirstVNF_RAM ) ,( FirstVNF_RAM * ( ( BR / Min( PN ,CRS ) ) * MDR ) ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( MUR / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / MUR ) ,CS ) ) - ( ( RMSe / CS ) * Min( MUM ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6927520571804918}, {"determining": "( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) * Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,Min( Const ,PN ) ) ) )", "choosing": "( ( DS / ( MLU + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.812992125984252, "obj2": 0.0724677966355429}, {"determining": "Min( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.5452755905511811, "obj2": 0.26598671938019763}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,Min( Const ,PN ) ) ) )", "choosing": "( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7448958363875577}, {"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,Const ) ) - Max( RRS,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MLU * MLU ) * ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.452755905511811, "obj2": 0.35522063027873174}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( ( Min( ( DS / MUM ) ,RRSe ) - CS ) ,RCSe ) ,MUC ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6259842519685039, "obj2": 0.22701599175885143}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ( ( FirstVNF_CPU / Min( MRS ,CRS ) ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / DS ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RRSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.1133506774581114}, {"determining": "( Max( ( ( AMS / ACS ) / ( MDR / AMS ) ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( DS / MUR ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - ( ( RRSe / RMSe ) + Max( DS,MUM ) ) )", "obj1": 0.3405511811023622, "obj2": 0.5058833368383253}, {"determining": "( Max( PN,ACS ) * ( Min( ARS ,Min( ( MRS / CRS ) ,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUM ) / ( Max( MLU,RRSe ) / ( MUM / CS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.03679496872055998}, {"determining": "( Max( FirstVNF_CPU,ARS ) - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * ( DS - ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ) ) - MLU )", "obj1": 0.4311023622047244, "obj2": 0.4379629227510763}, {"determining": "( ( ( Min( BR ,ARS ) - DDR ) * FirstVNF_CPU_Server ) * ( ( ( AMS - Const ) * ( Const - ACS ) ) - CRS ) )", "choosing": "( ( ( Max( DS,MUR ) / RMSe ) + Min( ( ( DS + RCSe ) / ( RRSe / MUM ) ) ,( MUM + ( ( Min( MUM ,DS ) / ( MUR - MLU ) ) - ( Min( ( RRSe * RCSe ) ,Min( MUM ,MUR ) ) / ( DS * RMSe ) ) ) ) ) ) - Min( ( MUM * ( CS + MUM ) ) ,DS ) )", "obj1": 0.6220472440944882, "obj2": 0.2382035488369675}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( CS * ( DS - Max( ( ( Max( RRSe,MUM ) / RRSe ) * ( ( ( MUR - RRSe ) - ( RMSe / MUR ) ) / RMSe ) ),RCSe ) ) ) - MLU )", "obj1": 0.6791338582677166, "obj2": 0.17436984197194033}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * AMS ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ACS - Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + MUM ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5688976377952756, "obj2": 0.25283569592062194}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6850393700787402, "obj2": 0.15417185294760924}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ( CRS * FirstVNF_Mem_Server ) ) - DDR ) ) / FirstVNF_Mem ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( Max( ( MUR + DS ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - RMSe ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.5236220472440944, "obj2": 0.2785390148190225}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( FirstVNF_Mem_Server * CRS ) ) / FirstVNF_CPU ) * ( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( ( FirstVNF_Mem_Server - PN ) * ARS ) ) ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ACS - Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( Min( RMSe ,( RRSe * DS ) ) + ( RRSe + RCSe ) ) ) ) ) / RMSe ) - Min( ( Min( MUC ,Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.3051181102362205, "obj2": 0.5462948752582863}, {"determining": "( ACS - Max( Max( ( Min( Max( PN,MRS ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( CRS * ( PN / ACS ) ) ) ) * Max( FirstVNF_RAM,BR ) ),MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( ( Max( MUR,RRSe ) - Max( RRSe,MUC ) ) + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + ( MUR + DS ) ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.59251968503937, "obj2": 0.23963276916484313}, {"determining": "( Max( Max( ( ( Min( ACS ,AMS ) * ( Const - DDR ) ) / Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU_Server ),ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * ( FirstVNF_Mem_Server - PN ) ) ) ) - CRS ) )", "choosing": "Min( ( Min( RRSe ,( Min( MLU ,MUC ) - Max( MLU,MUR ) ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + ( MUM + CS ) ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.022702986455980217}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( FirstVNF_Mem * ( ARS / ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MLU * RMSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.7066929133858267, "obj2": 0.15365429427022495}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6493160507499814}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5710836047267743}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - Const ) * ( ( Const + Max( FirstVNF_CPU,ARS ) ) * Max( BR,ARS ) ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Min( CS ,MUR ) ) ) - CS ) ,( DS / ( ( RCSe / ( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,RCSe ) ) ) ) * ( RMSe * RMSe ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5196139027577872}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5130091020233731}, {"determining": "( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * ( ( ACS / CRS ) + DDR ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS + RMSe ) ) / Min( ( DS / RRSe ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6732271337973889}, {"determining": "( Max( PN,( ARS * RRS ) ) * ( ( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * Max( Const,MDR ) ) - CRS ) )", "choosing": "( ( RCSe * Max( DS,( RRSe - RMSe ) ) ) - ( RRSe + RCSe ) )", "obj1": 0.6594488188976378, "obj2": 0.1877113496547402}, {"determining": "( ACS - Max( ( FirstVNF_RAM / ( MDR / FirstVNF_CPU_Server ) ),Max( FirstVNF_RAM,MRS ) ) )", "choosing": "( ( Max( ( ( ( RMSe / CS ) + ( MUR + DS ) ) * ( ( MUM + CS ) / ( CS - DS ) ) ),Min( ( Max( Max( MLU,MUM ),( ( RCSe + MUM ) * RCSe ) ) - RCSe ) ,MUM ) ) / RMSe ) - ( Max( Min( ( DS / CS ) ,( Max( ( RRSe / DS ),MLU ) / Max( RRSe,Min( RCSe ,( MUR / MUC ) ) ) ) ),( DS * RCSe ) ) + ( DS - Min( MUR ,DS ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.569217628426457}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( CRS * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,RRS ),( ( Min( ( Const + ACS ) ,CRS ) / ( DDR + FirstVNF_RAM_Server ) ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Max( Max( ( ( MUR + DS ) + ( ( ( RRSe + CS ) / ( CS - DS ) ) / CS ) ),( ( MUM + CS ) / ( RRSe * ( ( RMSe * RCSe ) - ( RMSe * MUR ) ) ) ) ),Min( Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) / ( MUC * ( ( CS / ( ( Max( DS,Max( RRSe,DS ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( ( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ,Min( ( DS - RCSe ) ,( MUR / RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6891865879954165}, {"determining": "( ( DDR * CRS ) * ( Min( ( ( ( MRS + ( ( BR - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) * MDR ) / FirstVNF_Mem ) ,( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / DS ) + ( MUR + DS ) ),RCSe ),( ( DS - RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + ( MUR + ( RCSe * MUR ) ) ) ) ) ) / RMSe ) - ( RMSe / Max( MLU,RCSe ) ) )", "obj1": 0.8759842519685039, "obj2": 0.05222834456080096}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( Min( Min( RCSe ,RMSe ) ,MUC ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.9566929133858267, "obj2": 0.014964991670698593}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_RAM - ( Max( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) ) ) )", "choosing": "( RMSe / ( MUC * ( DS * ( CS / Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7665957830887403}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8081604365385994}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ( ( FirstVNF_CPU_Server * MDR ) * Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,Min( Const ,PN ) ) ) ) ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + Min( MUM ,DS ) ) ) ,RCSe ) )", "obj1": 0.9862204724409449, "obj2": 0.005715820970912438}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( BR,RRS ) ) ) ) / Const ) * Min( PN ,MDR ) )", "choosing": "( ( Max( Max( ( ( CS / ( ( RCSe / MUC ) + ( MUC * CS ) ) ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) + MUR ) ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.6364808078217272}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.2952755905511811, "obj2": 0.5464238122594951}, {"determining": "( ( Min( Min( DDR ,ARS ) ,( Min( MDR ,PN ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "( RMSe / ( MUC * ( ( ( MLU * MUM ) / ( ( RRSe + RCSe ) * ( Max( DS,( DS * RMSe ) ) + ( RRSe / ( DS / MLU ) ) ) ) ) * DS ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7986338446952419}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.8976377952755905, "obj2": 0.044857382062746594}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "( RMSe / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.9035433070866141, "obj2": 0.04025108561687982}, {"determining": "( ( BR / ( AMS - ( DDR - FirstVNF_Mem ) ) ) * BR )", "choosing": "( ( ( ( ( Max( ( ( MUM - MLU ) * ( MLU - MUC ) ),RRSe ) - DS ) / ( Max( RCSe,RCSe ) / Max( MUM,( MUR - ( RCSe / MUC ) ) ) ) ) + MUR ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5918460328902079}, {"determining": "( ( CRS * ( ( CRS * ARS ) * ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,( Const - AMS ) ),( ( Min( ( DDR + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( DS * ( CS / ( ( Max( DS,Max( RRSe,DS ) ) * ( Max( MUR,RCSe ) - RMSe ) ) - Min( ( Max( MUR,RRSe ) - ( MUM + RCSe ) ) ,Min( ( DS - RCSe ) ,( MUR / RMSe ) ) ) ) ) ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7921291322926904}, {"determining": "( Max( PN,( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( Max( ( RRSe + MUM ),MUR ) - Min( ( DS / ( MLU + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( RMSe ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.7559055118110236, "obj2": 0.10316205180134738}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( MDR + FirstVNF_RAM ) - CRS ) ),Max( RRS,Const ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) + CS ) ,( DS / ( Min( ( ( ( ( MLU * DS ) * Max( MUC,MUC ) ) * RRSe ) / ( MUC + DS ) ) ,CS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5185922207660704}, {"determining": "Max( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / Const ) ),( FirstVNF_RAM - ( ( MRS / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - ( MRS / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( Max( CS,RMSe ) * ( ( Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) ) / MUC ) * DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8675268220749567}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_RAM - ( Max( ( Const / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) ) ) )", "choosing": "( RMSe / ( MUC * ( DS * ( CS / ( ( Max( DS,( DS * RMSe ) ) / ( RRSe / RRSe ) ) * ( CS * MUC ) ) ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7795507620577139}, {"determining": "( Max( PN,ACS ) * ( ( ( FirstVNF_RAM / ( Max( Const,RRS ) + Const ) ) + FirstVNF_RAM ) - RRS ) )", "choosing": "( ( ( Max( ( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ),Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + ( DS / RMSe ) ) / ( CS - DS ) ) ) ) - RMSe ) - Min( Min( ( MUM - ( RCSe / RRSe ) ) ,DS ) ,RCSe ) ) - RMSe )", "obj1": 0.7952755905511811, "obj2": 0.07668235141998272}, {"determining": "( Max( PN,ACS ) * ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + Max( RMSe,RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( ( ( CS / RMSe ) + ( MUR + CS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS + MUR ) ) / ( CS - DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6692913385826772, "obj2": 0.18140203799925578}, {"determining": "( PN + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.9744094488188977, "obj2": 0.010321062864174616}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( DS,( ( Min( RCSe ,MUM ) * Min( ( MUR - RCSe ) ,Min( DS ,CS ) ) ) * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08647947785809826}, {"determining": "( ACS - Max( Max( ( Min( Max( PN,MRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * Max( FirstVNF_RAM,BR ) ),MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( DS / MLU ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5846456692913385, "obj2": 0.2419237417633837}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( RCSe + DS ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.0727726772565637}, {"determining": "( ( ( Const - FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) * ( CRS * ARS ) ) ) * Max( FirstVNF_CPU_Server,( Max( Const,CRS ) * Max( Max( FirstVNF_Mem_Server,RRS ),( ( Min( ( BR + ACS ) ,CRS ) + Min( Min( PN ,FirstVNF_CPU ) ,MDR ) ) * ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RCSe / ( ( DS * ( CS / ( ( Max( MLU,Max( RRSe,DS ) ) * ( Max( MUR,CS ) - Min( RRSe ,RRSe ) ) ) - ( RRSe - MUC ) ) ) ) * ( ( MLU * ( RMSe - MUM ) ) - ( CS + RRSe ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8207548111044064}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.7696850393700787, "obj2": 0.09424525227980751}, {"determining": "Max( Max( MDR,( PN + CRS ) ),( ( FirstVNF_RAM * AMS ) - ( ( ( FirstVNF_CPU_Server / DDR ) * ( CRS - AMS ) ) - Max( FirstVNF_Mem_Server,( FirstVNF_Mem + CRS ) ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( Min( CS ,( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( ( MLU + RMSe ) + MUC ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6556466733955632}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( ( Min( RRSe ,MUM ) / RRSe ) - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5069365471573983}, {"determining": "( ( CRS + MRS ) * Max( Min( MRS ,Max( DDR,( FirstVNF_CPU_Server / PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( DS - RCSe ),Max( DS,RCSe ) ) + ( Max( MUC,CS ) - Min( MUM ,( CS - ( Min( RRSe ,( MLU * MLU ) ) - ( ( MUM * RMSe ) - CS ) ) ) ) ) ) - ( ( MUM / RRSe ) + ( MUC - ( MLU + ( CS + MUC ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.747260154675004}, {"determining": "( Max( PN,ACS ) * Min( Max( MDR,( ARS - Const ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6067634324510424}, {"determining": "( ( ( Const / Max( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( FirstVNF_CPU * ACS ) ) ) ),Max( AMS,FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem ) * MDR )", "choosing": "( ( RMSe - ( MLU / Min( MUR ,Min( RMSe ,( ( ( DS + RCSe ) * RCSe ) / CS ) ) ) ) ) - Min( RCSe ,( DS / ( MLU + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8441984871005789}, {"determining": "( ( CRS * ( ( ( Max( PN,ACS ) * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( CS / ( ( Min( ( MUR - DS ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8183600986052366}, {"determining": "( Max( PN,ACS ) * ( ( ( PN / AMS ) + Min( RRS ,AMS ) ) - CRS ) )", "choosing": "( ( RMSe + RCSe ) / ( MUC * Min( Max( Max( ( MLU - ( Min( MUC ,MUM ) + RRSe ) ),( RCSe - DS ) ),CS ) ,DS ) ) )", "obj1": 0.08661417322834646, "obj2": 0.851345548231684}, {"determining": "( ( CRS * ( ( ( Max( PN,ACS ) * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.22244094488188976, "obj2": 0.6250994362513159}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_RAM - ( ACS - Max( ( ( ( MDR * FirstVNF_CPU ) / ( CRS * FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( CS * ( Max( RMSe,CS ) - Min( MUR ,RCSe ) ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7652290709653714}, {"determining": "( ( Const + Max( ARS,FirstVNF_CPU ) ) * ( ( ( ( FirstVNF_CPU_Server * Max( Min( BR ,( BR + FirstVNF_Mem ) ),FirstVNF_CPU_Server ) ) - MDR ) * ( Max( Const,Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ) ) * AMS ) ) - CRS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MLU ) ) / ( ( ( MLU * ( ( MUM + CS ) + RCSe ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7533066136153196}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * ( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ACS - Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6029593867340056}, {"determining": "Max( ( MDR + ( PN + CRS ) ),( ( FirstVNF_RAM * RRS ) - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) - ( CRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU - Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( RMSe ,RCSe ) ) ,( Min( MUR ,CS ) - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8355228341439892}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5515425295522425}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) * ( ( Const + Max( FirstVNF_CPU,ARS ) ) * AMS ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( MUC / DS ) * Min( RMSe ,RRSe ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29227241777689544}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * Max( FirstVNF_RAM,ARS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - ( Max( Min( ( DS / CS ) ,( Max( ( RRSe / DS ),MLU ) / Max( RRSe,Min( RCSe ,( MUR / MUC ) ) ) ) ),( DS * RCSe ) ) + ( DS - Min( MUR ,DS ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6257508968545864}, {"determining": "( PN + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.9744094488188977, "obj2": 0.010321062864174616}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6617931877770231}, {"determining": "( ( CRS * ( ( ( MDR * MRS ) / FirstVNF_Mem ) * ( DDR * Min( FirstVNF_RAM_Server ,CRS ) ) ) ) * ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe / CS ) + ( RRSe + DS ) ) / ( Min( ( CS + MUR ) ,MUR ) / Min( MUR ,Min( MLU ,( RRSe * MUM ) ) ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7818814787461583}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( BR,RRS ) ) ) ) / FirstVNF_Mem ) * ( DDR * CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Max( RCSe,( ( DS + CS ) * ( Max( Min( DS ,( DS + RMSe ) ),Max( RMSe,MUC ) ) + MUC ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0040808759844103756}, {"determining": "( Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * ( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) ,DDR ) * ( FirstVNF_RAM - ( Max( ( Const / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "( ( ( ( Min( RMSe ,( RMSe / CS ) ) - Min( MUM ,CS ) ) / CS ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - CS ) )", "obj1": 0.2440944881889764, "obj2": 0.5970296452133974}, {"determining": "( Max( Max( ( ( Min( ACS ,AMS ) * ( Const - DDR ) ) / Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU_Server ),ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * ( FirstVNF_Mem_Server - PN ) ) ) ) - CRS ) )", "choosing": "( ( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( ( CS * ( DS - Max( MUR,RCSe ) ) ) - MLU ) / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.9488188976377953, "obj2": 0.01900696303740917}, {"determining": "( Max( ACS,Max( BR,RRS ) ) - Max( Max( FirstVNF_RAM,MRS ),Max( PN,ACS ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,Min( RCSe ,RMSe ) ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.25, "obj2": 0.5969478097400589}, {"determining": "( ACS - Max( Max( ( Min( Max( PN,MRS ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( RRS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * Max( FirstVNF_RAM,BR ) ),MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Min( MUC ,MLU ) + RRSe ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5728346456692913, "obj2": 0.25033905885400887}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( RMSe ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.7519685039370079, "obj2": 0.11033770454017573}, {"determining": "( ( CRS * ( ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * ( PN / ACS ) ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / ( ( ( ( RRSe + DS ) - MUM ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8383367744568094}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * ( ( ACS + Max( FirstVNF_CPU,ARS ) ) * AMS ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / ( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,RCSe ) ) ) ) * Max( RMSe,( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ) ) ) )", "obj1": 0.27755905511811024, "obj2": 0.5568081109822202}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6684157245430851}, {"determining": "( ( ( FirstVNF_Mem * MDR ) / FirstVNF_CPU_Server ) * ( DDR * ARS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( CS * ( Max( MUR,RCSe ) - DS ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6358653964044273}, {"determining": "( ( CRS / ( FirstVNF_Mem * ( RRS * PN ) ) ) * ( RRS * ARS ) )", "choosing": "( Min( ( Max( Min( MUM ,MUR ),Min( MLU ,( RRSe * ( MUC / ( MUR * MUM ) ) ) ) ) / ( ( ( ( RCSe - DS ) * MLU ) / MUR ) - ( RRSe - MLU ) ) ) ,MUM ) - ( RRSe + RRSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7533066136153196}, {"determining": "( Max( Max( PN,FirstVNF_CPU_Server ),ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * ( FirstVNF_Mem_Server - PN ) ) ) ) - CRS ) )", "choosing": "Min( ( Min( RRSe ,( Min( MLU ,MUC ) - Max( MLU,MUR ) ) ) / ( Min( MUC ,CS ) / ( ( RMSe / CS ) + ( MUR + DS ) ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + ( MUM + CS ) ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.02202215727991148}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.8976377952755905, "obj2": 0.044857382062746594}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * ( ( Const + Max( FirstVNF_CPU,ARS ) ) * AMS ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / ( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,RCSe ) ) ) ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5582683067920121}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.7696850393700787, "obj2": 0.09424525227980751}, {"determining": "( ACS - Max( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * ( ( Const + Max( FirstVNF_CPU,ARS ) ) * AMS ) ) - CRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS * MUR ) ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,Max( Min( RMSe ,DS ),RCSe ) ) )", "obj1": 0.5078740157480315, "obj2": 0.2886517150168821}, {"determining": "( ACS - Min( Min( ARS ,( CRS - ( DDR - FirstVNF_CPU_Server ) ) ) ,Max( DDR,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( ( ( DS / ( RRSe - MUR ) ) / MUC ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6149361481395429}, {"determining": "Min( ( ( Const + FirstVNF_CPU_Server ) / AMS ) ,Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( CS * ( DS - Max( CS,RRSe ) ) ) / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6170841188807363}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * Max( FirstVNF_RAM,ARS ) ) ) ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.18503937007874016, "obj2": 0.65836579109981}], "13": [{"determining": "( Max( PN,ACS ) * ( Min( ARS ,Min( Max( ( FirstVNF_Mem_Server - BR ),Max( Min( ACS ,MDR ),MRS ) ) ,( MRS / CRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUM ) / ( Max( MLU,( Max( RCSe,( MUC + MUM ) ) + Min( Min( Min( ( MUM * RRSe ) ,DS ) ,CS ) ,( RCSe - MUR ) ) ) ) / ( MUM / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Max( ( ( FirstVNF_Mem + MDR ) + FirstVNF_Mem ),( ( ( ACS + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) )", "choosing": "( ( ( Max( ( DS * MUM ),DS ) + ( ( DS / MLU ) / RRSe ) ) * Max( MUM,DS ) ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / RCSe ) ,CS ) ) + ( ( RMSe / CS ) * Min( CS ,DS ) ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Max( ( PN * Const ),Min( RRS ,FirstVNF_CPU ) ) / Const ),FirstVNF_CPU_Server ) - ACS ) - ( FirstVNF_Mem_Server * ( CRS + MDR ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Min( ( DS / ( MLU + ( Min( ( ( MUR * RMSe ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) / MUM ) ) ) ,RCSe ) )", "obj1": 0.08070866141732283, "obj2": 0.869045109580726}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6867474752917255}, {"determining": "( Max( FirstVNF_CPU,ARS ) - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3362864336140025}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( DS / MUR ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - ( ( RRSe / RMSe ) + Max( DS,MUM ) ) )", "obj1": 0.3799212598425197, "obj2": 0.441165729635228}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.4881889763779528, "obj2": 0.3018899672224938}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( FirstVNF_Mem_Server - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUC ) ) ) ) ) ) )", "obj1": 0.43503937007874016, "obj2": 0.37135242514011485}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,Min( Const ,PN ) ) ) )", "choosing": "( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7448958363875577}, {"determining": "( Max( PN,ACS ) * ( FirstVNF_RAM - Const ) )", "choosing": "Max( ( Min( RMSe ,MLU ) / RMSe ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) )", "obj1": 0.6437007874015748, "obj2": 0.20015198424996009}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + ( ( MDR - Const ) - ( MRS + FirstVNF_RAM ) ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( ( MRS * AMS ) - Max( DDR,MRS ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - ( ( DS / Min( CS ,DS ) ) * MUM ) ) ) / RMSe ) - Min( ( DS + MUR ) ,RCSe ) )", "obj1": 0.4330708661417323, "obj2": 0.4369963048729528}, {"determining": "Min( ( ( ( DDR - FirstVNF_Mem_Server ) / MRS ) - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( Max( FirstVNF_Mem_Server,ACS ) + ( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( CS * ( DS - MUM ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ,( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( CS ,CS ) / Max( MUC,MUM ) ) ) )", "obj1": 0.5433070866141733, "obj2": 0.2656946085601846}, {"determining": "( ( RRS / FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( Min( ( RMSe / RRSe ) ,CS ) / MUC ) - ( ( RMSe / CS ) * ( CS + MUC ) ) ) ) * DS ) ) )", "obj1": 0.3464566929133858, "obj2": 0.4654482674208326}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2952755905511811, "obj2": 0.5219752315786061}, {"determining": "( Max( FirstVNF_Mem_Server,Const ) - ( BR / DDR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MUM ) ) ,CS ) ) ),( DS + ( RCSe / MUR ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45547443002553445}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.06135305916976219}, {"determining": "( Max( FirstVNF_CPU,ARS ) - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * ( DS - ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ) ) - MLU )", "obj1": 0.4311023622047244, "obj2": 0.4379629227510763}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.13558329106041822}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( MUR / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.8188976377952756, "obj2": 0.0704391923487964}, {"determining": "( ( ( ( FirstVNF_Mem_Server - RRS ) * ( CRS * ARS ) ) * Min( Max( ( AMS / ARS ),Min( ( ( FirstVNF_Mem + ( FirstVNF_RAM / DDR ) ) * PN ) ,MRS ) ) ,( CRS + PN ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( ( RMSe / CS ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,( RMSe + DS ) ) * ( ( MUR / CS ) - RMSe ) ) - Min( ( ( MUM - CS ) + ( MUM * RCSe ) ) ,( Max( RRSe,RRSe ) - Max( MUC,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7709091891030556}, {"determining": "( ( Min( Min( DDR ,ARS ) ,( Min( MDR ,PN ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) * ( ARS + DDR ) )", "choosing": "( RMSe / ( MUC * ( ( ( MLU * MUM ) / ( ( RRSe + RCSe ) * ( Max( DS,( DS * RMSe ) ) + ( RRSe / ( DS / MLU ) ) ) ) ) * DS ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7986338446952419}, {"determining": "( ( CRS * ( ( CRS - ACS ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / Min( ( ( ( CS * RMSe ) * MUC ) / RCSe ) ,( MLU + RMSe ) ) ) * DS ) ) / ( ( RRSe / MUM ) + DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8366198446478492}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.34448818897637795, "obj2": 0.5018365691000797}, {"determining": "( ACS - ( FirstVNF_Mem - Max( ( PN + PN ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( RMSe ,( RMSe / CS ) ) - Min( MUM ,CS ) ) / CS ) * DS ) + ( ( ( DS / Max( CS,Min( ( RCSe + Max( RMSe,MUR ) ) ,RMSe ) ) ) - RRSe ) - CS ) )", "obj1": 0.5688976377952756, "obj2": 0.2519531351354563}, {"determining": "( Max( PN,( ARS * RRS ) ) * ( ( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * Max( Const,MDR ) ) - CRS ) )", "choosing": "( ( RCSe * Max( DS,( RRSe - RMSe ) ) ) - ( RRSe + RCSe ) )", "obj1": 0.6594488188976378, "obj2": 0.1877113496547402}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( FirstVNF_Mem * ( ARS / ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MLU * RMSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.7066929133858267, "obj2": 0.15365429427022495}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6850393700787402, "obj2": 0.15417185294760924}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5515425295522425}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( FirstVNF_Mem_Server - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( MDR + ( PN + CRS ) ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - ( Max( MUR,RMSe ) + Min( DS ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.44291338582677164, "obj2": 0.36089332828846754}, {"determining": "( ( ( Min( BR ,ARS ) - DDR ) * FirstVNF_CPU_Server ) * ( ( ( AMS - Const ) * ( Const - ACS ) ) - CRS ) )", "choosing": "( ( ( Max( DS,MUR ) / RMSe ) + Min( ( ( DS + RCSe ) / ( RRSe / MUM ) ) ,( MUM + ( ( Min( MUM ,DS ) / ( MUR - MLU ) ) - ( Min( ( RRSe * RCSe ) ,Min( MUM ,MUR ) ) / ( DS * RMSe ) ) ) ) ) ) - Min( ( MUM * ( CS + MUM ) ) ,DS ) )", "obj1": 0.6220472440944882, "obj2": 0.2382035488369675}, {"determining": "Min( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( FirstVNF_Mem_Server - PN ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + ( DS - Max( MUR,RCSe ) ) ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.2768147651149885}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ( ( FirstVNF_CPU / Min( MRS ,CRS ) ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / DS ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RRSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.1133506774581114}, {"determining": "( ( DDR * CRS ) * ( Min( ( ( ( MRS + ( ( BR - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) * MDR ) / FirstVNF_Mem ) ,( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / DS ) + ( MUR + DS ) ),RCSe ),( ( DS - RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + ( MUR + ( RCSe * MUR ) ) ) ) ) ) / RMSe ) - ( RMSe / Max( MLU,RCSe ) ) )", "obj1": 0.8759842519685039, "obj2": 0.05222834456080096}, {"determining": "( ACS - Max( Max( ( Min( Max( PN,MRS ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( CRS * ( PN / ACS ) ) ) ) * Max( FirstVNF_RAM,BR ) ),Max( DDR,PN ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( ( DS - Max( RRSe,MUC ) ) + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + ( MUR + DS ) ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.59251968503937, "obj2": 0.23963276916484313}, {"determining": "( ACS - Max( ( ACS * Min( FirstVNF_CPU ,( RRS - CRS ) ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( MUM / ( ( MUC / ( ( RMSe / DS ) * CS ) ) - ( Max( RRSe,( RCSe + MUM ) ) * Min( CS ,MUC ) ) ) ) * ( Max( CS,( MUM / MUC ) ) - MUC ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5710836047267743}, {"determining": "( ACS - Max( Max( ( Min( Max( PN,MRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * Max( FirstVNF_RAM,BR ) ),MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( DS / MLU ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5846456692913385, "obj2": 0.2419237417633837}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( ( Min( ( DS / MUM ) ,RRSe ) - CS ) ,RCSe ) ,MUC ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6259842519685039, "obj2": 0.22701599175885143}, {"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,Const ) ) - Max( RRS,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MLU * MLU ) * ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.452755905511811, "obj2": 0.35522063027873174}, {"determining": "Max( ( MDR + ( PN + CRS ) ),( ( FirstVNF_RAM * RRS ) - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) - ( CRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU - Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( RMSe ,RCSe ) ) ,( Min( MUR ,CS ) - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8355228341439892}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( ( Min( ( DS / MUM ) ,RRSe ) - CS ) ,RCSe ) ,MUC ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6259842519685039, "obj2": 0.22701599175885143}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "( RMSe / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.9035433070866141, "obj2": 0.04025108561687982}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( Min( Min( RCSe ,RMSe ) ,MUC ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.9566929133858267, "obj2": 0.014935463592774137}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_RAM - ( ACS - Max( ( ( ( MDR * FirstVNF_CPU ) / ( CRS * FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( CS * ( Max( RMSe,CS ) - Min( MUR ,RCSe ) ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7652290709653714}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ( CRS * FirstVNF_Mem_Server ) ) - DDR ) ) / FirstVNF_Mem ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( Max( ( MUR + DS ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - RMSe ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.5236220472440944, "obj2": 0.2785390148190225}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ( ( FirstVNF_CPU / Min( MRS ,CRS ) ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / DS ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RRSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.1133506774581114}, {"determining": "( Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * ( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) ,DDR ) * ( FirstVNF_RAM - ( Max( ( Const / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "( ( ( Max( Max( ( MUR + DS ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - RMSe ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.2106299212598425, "obj2": 0.6337186966231731}, {"determining": "( Max( PN,ACS ) * ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + Max( RMSe,RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( ( ( CS / RMSe ) + ( MUR + CS ) ),( ( ( MUM + ( MLU + MUM ) ) - ( DS + MUR ) ) / ( CS - DS ) ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6692913385826772, "obj2": 0.18140203799925578}, {"determining": "( Max( PN,ACS ) * ( ( ( FirstVNF_RAM / ( Max( Const,RRS ) + Const ) ) + FirstVNF_RAM ) - RRS ) )", "choosing": "( ( ( Max( ( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ),Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + ( DS / RMSe ) ) / ( CS - DS ) ) ) ) - RMSe ) - Min( Min( ( MUM - ( RCSe / RRSe ) ) ,DS ) ,RCSe ) ) - RMSe )", "obj1": 0.7952755905511811, "obj2": 0.07668235141998272}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.8976377952755905, "obj2": 0.044857382062746594}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ( CRS * FirstVNF_Mem_Server ) ) - DDR ) ) / FirstVNF_Mem ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( Max( ( MUR + DS ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - RMSe ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.5118110236220472, "obj2": 0.28609081682019516}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / ( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,RCSe ) ) ) ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.081768220106004}, {"determining": "( ( BR / ( AMS - ( DDR - FirstVNF_Mem ) ) ) * BR )", "choosing": "( ( ( ( ( Max( ( ( MUM - MLU ) * ( MLU - MUC ) ),RRSe ) - DS ) / ( Max( RCSe,RCSe ) / Max( MUM,( MUR - ( RCSe / MUC ) ) ) ) ) + MUR ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5918460328902079}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( CS * ( DS - Max( ( ( Max( RRSe,MUM ) / RRSe ) * ( ( ( MUR - RRSe ) - ( RMSe / MUR ) ) / RMSe ) ),RCSe ) ) ) - MLU )", "obj1": 0.6791338582677166, "obj2": 0.17436984197194033}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13592347196449242}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( BR,RRS ) ) ) ) / Const ) * Min( PN ,MDR ) )", "choosing": "( ( Max( Max( ( ( CS / ( ( RCSe / MUC ) + ( MUC * CS ) ) ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) + MUR ) ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.6364808078217272}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( MDR + FirstVNF_RAM ) - CRS ) ),Max( RRS,Const ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) + CS ) ,( DS / ( Min( ( ( ( ( MLU * DS ) * Max( MUC,MUC ) ) * RRSe ) / ( MUC + DS ) ) ,CS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5185922207660704}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( ( ( MUM + CS ) / ( CS - DS ) ) / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) / ( MUC * ( ( CS / ( ( Max( DS,Max( RRSe,DS ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( ( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ,Min( ( DS - RCSe ) ,( MUR / RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.9133858267716536, "obj2": 0.03297031442439794}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),( Min( ( DS / MUR ) ,RCSe ) / ( ( RMSe + RCSe ) + ( RCSe + DS ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.029244610272597726}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( PN ,RRS ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( Max( DS,( DS * RMSe ) ),( MLU / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.011196944938949432}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.7696850393700787, "obj2": 0.09424525227980751}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5130091020233731}, {"determining": "( ( ( Const - FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) * ( CRS * ARS ) ) ) * Max( FirstVNF_CPU_Server,( Max( Const,CRS ) * Max( Max( FirstVNF_Mem_Server,RRS ),( ( Min( ( BR + ACS ) ,CRS ) + Min( Min( PN ,FirstVNF_CPU ) ,MDR ) ) * ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RCSe / ( ( DS * ( CS / ( ( Max( MLU,Max( RRSe,DS ) ) * ( Max( MUR,CS ) - Min( RRSe ,RRSe ) ) ) - ( RRSe - MUC ) ) ) ) * ( ( MLU * ( RMSe - MUM ) ) - ( CS + RRSe ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8207548111044064}, {"determining": "Max( Max( MDR,( PN + CRS ) ),( ( FirstVNF_RAM * AMS ) - ( ( ( FirstVNF_CPU_Server / DDR ) * ( CRS - AMS ) ) - Max( FirstVNF_Mem_Server,( FirstVNF_Mem + CRS ) ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( Min( CS ,( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( ( MLU + RMSe ) + MUC ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6556466733955632}, {"determining": "( Max( FirstVNF_CPU,ARS ) - ( ( CRS * ( ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * ( PN / ACS ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( ACS - Max( ( FirstVNF_RAM / ( MDR / FirstVNF_CPU_Server ) ),Max( FirstVNF_RAM,MRS ) ) )", "choosing": "( ( Max( ( ( ( RMSe / CS ) + ( MUR + DS ) ) * ( ( MUM + CS ) / ( CS - DS ) ) ),Min( ( Max( Max( MLU,MUM ),( ( RCSe + MUM ) * RCSe ) ) - RCSe ) ,MUM ) ) / RMSe ) - ( Max( Min( ( DS / CS ) ,( Max( ( RRSe / DS ),MLU ) / Max( RRSe,Min( RCSe ,( MUR / MUC ) ) ) ) ),( DS * RCSe ) ) + ( DS - Min( MUR ,DS ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.569217628426457}, {"determining": "( PN + ( Min( PN ,RRS ) * FirstVNF_Mem ) )", "choosing": "( ( MLU / ( ( MUM + RRSe ) * RRSe ) ) - ( Max( Min( ( DS / CS ) ,( Max( ( RRSe / DS ),MLU ) / Max( RRSe,Min( RCSe ,( MUR / MUC ) ) ) ) ),( DS * RCSe ) ) + ( MUR - Min( MUR ,DS ) ) ) )", "obj1": 0.9862204724409449, "obj2": 0.0056032495059160515}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( Max( ( RRSe + MUM ),MUR ) - Min( ( DS / ( MLU + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( RMSe ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.7559055118110236, "obj2": 0.10316205180134738}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( Max( RCSe,MUR ) + Min( DS ,RCSe ) ),RCSe ) ) ) - CS ) ,( DS / ( ( MUC / DS ) * Min( RMSe ,RRSe ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2942736470763131}, {"determining": "( ( CRS + MRS ) * Max( Min( MRS ,Max( DDR,( FirstVNF_CPU_Server / PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( DS - RCSe ),Max( DS,RCSe ) ) + ( Max( MUC,CS ) - Min( MUM ,( CS - ( Min( RRSe ,( MLU * MLU ) ) - ( ( MUM * RMSe ) - CS ) ) ) ) ) ) - ( ( MUM / RRSe ) + ( MUC - ( MLU + ( CS + MUC ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.747260154675004}, {"determining": "( Max( Max( ( ( Min( ACS ,( AMS - Const ) ) * ( Const - DDR ) ) / Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU_Server ),ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * ( FirstVNF_Mem_Server - PN ) ) ) ) - CRS ) )", "choosing": "Min( ( Min( RRSe ,( Min( MLU ,MUC ) - Max( MLU,MUR ) ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + MUM ) ) ) ) / RMSe ) - Min( ( MUM * ( CS + MUM ) ) ,DS ) ) )", "obj1": 0.937007874015748, "obj2": 0.026692846194770983}, {"determining": "( ( CRS * ( ( ( MDR * MRS ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * PN ) )", "choosing": "( ( ( RMSe / CS ) + ( RRSe + DS ) ) / ( MUC * ( ( CS / ( Max( MUR,DS ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7704465909996939}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_RAM - ( ACS - Max( ( ( ( MDR * FirstVNF_CPU ) / ( CRS * FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6732271337973889}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + ( MUR + DS ) ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.8011811023622047, "obj2": 0.07492834332227358}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - Const ) * ( ( Const + Max( FirstVNF_CPU,ARS ) ) * Max( BR,ARS ) ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Min( CS ,MUR ) ) ) - CS ) ,( DS / ( ( RCSe / ( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,RCSe ) ) ) ) * ( RMSe * RMSe ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5196139027577872}, {"determining": "( ( CRS * ( ( ( Max( PN,ACS ) * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( ( CS / ( ( Min( ( MUR - DS ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8183600986052366}, {"determining": "( Min( PN ,ACS ) * ( ( ( ( FirstVNF_CPU_Server * Max( Min( BR ,( FirstVNF_Mem + FirstVNF_Mem ) ),FirstVNF_CPU_Server ) ) - MDR ) * ( ( Const + Max( FirstVNF_CPU,Min( BR ,FirstVNF_RAM ) ) ) * AMS ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * RMSe ) / DS ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( ( MUR + RRSe ) / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6459925537749552}, {"determining": "( ACS - Min( Min( ARS ,( CRS - ( DDR - FirstVNF_CPU_Server ) ) ) ,Max( DDR,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( ( ( DS / ( RRSe - MUR ) ) / MUC ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6149361481395429}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( CRS * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( Min( ( Const + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7533066136153196}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * ACS ) + RRS ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUR * MUM ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( CS / RMSe ) * Min( RRSe ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7736220472440944, "obj2": 0.0860813361247434}, {"determining": "( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * ( ( ACS / CRS ) + DDR ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS + RMSe ) ) / Min( ( DS / RRSe ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6732271337973889}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,Max( CS,RCSe ) ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5515425295522425}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( CS * ( DS - Max( ( ( Max( RRSe,MUM ) / RRSe ) * ( ( ( MUR - RRSe ) - ( RMSe / MUR ) ) / RMSe ) ),RCSe ) ) ) - MLU )", "obj1": 0.6751968503937008, "obj2": 0.176986498890021}, {"determining": "( Max( ( ( AMS / ACS ) / ( MDR / AMS ) ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( DS / MUR ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - ( ( RRSe / RMSe ) + Max( DS,MUM ) ) )", "obj1": 0.3405511811023622, "obj2": 0.5058833368383253}, {"determining": "( Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * ( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) ,DDR ) * ( FirstVNF_RAM - ( Max( ( Const / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "( ( ( ( Min( RMSe ,( RMSe / CS ) ) - Min( MUM ,CS ) ) / CS ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - CS ) )", "obj1": 0.2440944881889764, "obj2": 0.5970296452133974}, {"determining": "( ( Max( Max( DDR,PN ),Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * AMS ) ,DDR ) ) * FirstVNF_CPU_Server ) * ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + MUM ) ) ) ) / RMSe ) - Min( ( MUM * ( CS + MUM ) ) ,DS ) )", "obj1": 0.6240157480314961, "obj2": 0.2370885525447895}, {"determining": "( ( CRS * ( ( ( Max( PN,ACS ) * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.22244094488188976, "obj2": 0.6250994362513159}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( MUC / DS ) * Min( RMSe ,RRSe ) ) ) )", "obj1": 0.9173228346456693, "obj2": 0.030455855072011682}, {"determining": "( Max( ACS,Max( BR,RRS ) ) - Max( Max( FirstVNF_RAM,MRS ),Max( PN,ACS ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,Min( RCSe ,RMSe ) ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.25, "obj2": 0.5969478097400589}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( RCSe + DS ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.0727726772565637}, {"determining": "( ( AMS - FirstVNF_RAM ) * ( ( ( ( ( ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) + Max( MDR,( ARS - Const ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( Min( DS ,MUM ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU / ( DS - CS ) ) ) ) ) ),( RMSe / CS ) )", "obj1": 0.8641732283464567, "obj2": 0.05773761178629846}, {"determining": "Max( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( MUR / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * MUC ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6676249813936551}, {"determining": "Max( Min( Min( PN ,FirstVNF_RAM ) ,( FirstVNF_RAM * ( ( BR / Min( PN ,CRS ) ) * MDR ) ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8081604365385994}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6617931877770231}, {"determining": "( FirstVNF_RAM * ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - ACS ) ) - CRS ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU / ( RCSe - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( Min( ( ( MUR - MUC ) / ( ( DS / MUM ) + ( RCSe / MUR ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.8661417322834646, "obj2": 0.056372768853712986}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * ( ( Const + Max( FirstVNF_CPU,ARS ) ) * AMS ) ) - CRS ) ),( ( Const + CRS ) * Max( Max( RRS,( Const - AMS ) ),( ( Min( ( DDR + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / ( ( ( Min( RRSe ,DS ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,RCSe ) ) ) ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6183019328965511}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( ( Min( RRSe ,MUM ) / RRSe ) - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5069365471573983}, {"determining": "( ( Const + Max( ARS,FirstVNF_CPU ) ) * ( ( ( ( FirstVNF_CPU_Server * Max( Min( BR ,( BR + FirstVNF_Mem ) ),FirstVNF_CPU_Server ) ) - MDR ) * ( Max( Const,Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ) ) * AMS ) ) - CRS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MLU ) ) / ( ( ( MLU * ( ( MUM + CS ) + RCSe ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7533066136153196}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + ( MUR + DS ) ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.8740157480314961, "obj2": 0.0533955618859028}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8081604365385994}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.452755905511811, "obj2": 0.35522063027873174}], "14": [{"determining": "( ( BR - FirstVNF_Mem ) * Max( Min( MRS ,( ARS / ( Max( FirstVNF_Mem,Min( BR ,FirstVNF_CPU ) ) + DDR ) ) ),FirstVNF_RAM ) )", "choosing": "( ( CS / DS ) - ( ( Max( MUR,RRSe ) - Max( RRSe,CS ) ) / Min( ( DS - RCSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,ACS ) * ( Min( ARS ,Min( Max( ( FirstVNF_Mem_Server - BR ),Max( Min( ACS ,MDR ),MRS ) ) ,( MRS / CRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUM ) / ( Max( MLU,( Max( RCSe,( MUC + MUM ) ) + Min( Min( Min( ( MUM * RRSe ) ,DS ) ,CS ) ,( RCSe - MUR ) ) ) ) / ( MUM / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Max( ( PN * Const ),Min( RRS ,FirstVNF_CPU ) ) / Const ),FirstVNF_CPU_Server ) - ACS ) - ( FirstVNF_Mem_Server * ( CRS + MDR ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Min( ( DS / ( MLU + ( Min( ( ( MUR * RMSe ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) / MUM ) ) ) ,RCSe ) )", "obj1": 0.08070866141732283, "obj2": 0.869045109580726}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( FirstVNF_Mem_Server,( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,( FirstVNF_Mem * PN ) ) ) - Max( RRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + DS ) / ( MLU * ( ( CS / ( ( MLU / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / Max( MUR,RMSe ) ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.4271653543307087, "obj2": 0.41162619252950655}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,BR ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( MUM * RCSe ),MUR ) ) ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4204076983595796}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,Min( Const ,PN ) ) ) )", "choosing": "( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7448958363875577}, {"determining": "( Max( PN,ACS ) * ( FirstVNF_RAM - Const ) )", "choosing": "Max( ( Min( RMSe ,MLU ) / RMSe ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) )", "obj1": 0.6437007874015748, "obj2": 0.20015198424996009}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( DS / MUR ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - ( ( RRSe / RMSe ) + Max( DS,MUM ) ) )", "obj1": 0.3799212598425197, "obj2": 0.441165729635228}, {"determining": "( ACS - ( FirstVNF_Mem - Max( ( PN + PN ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( RMSe ,( RMSe / CS ) ) - Min( MUM ,CS ) ) / CS ) * DS ) + ( ( ( DS / Max( CS,Min( ( RCSe + Max( RMSe,MUR ) ) ,RMSe ) ) ) - RRSe ) - CS ) )", "obj1": 0.5688976377952756, "obj2": 0.2519531351354563}, {"determining": "Max( ( ( CRS + ( FirstVNF_CPU * FirstVNF_CPU ) ) + MDR ),( MRS - ( FirstVNF_CPU_Server / PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) * DS ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6867474752917255}, {"determining": "( FirstVNF_RAM * ( CRS - ( ( ( Min( ( AMS + DDR ) ,( PN / ACS ) ) * ( ( ( ARS - FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / DDR ) ) - MDR ) / Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUM ),( RRSe * MUC ) ) / CS ) ) - Min( ( Min( DS ,RRSe ) / RCSe ) ,CS ) ) / MLU ) * DS ) + ( Min( RRSe ,( DS / MUM ) ) - Min( ( DS * MUM ) ,Max( ( MUM * ( RCSe + Max( CS,RRSe ) ) ),( MLU * ( Min( RRSe ,MUM ) - RRSe ) ) ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3320188680806898}, {"determining": "( ( RRS / FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( Min( ( RMSe / RRSe ) ,CS ) / MUC ) - ( ( RMSe / CS ) * ( CS + MUC ) ) ) ) * DS ) ) )", "obj1": 0.3464566929133858, "obj2": 0.4654482674208326}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.4881889763779528, "obj2": 0.30174902428265155}, {"determining": "( Max( FirstVNF_Mem_Server,Const ) - ( BR / DDR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MUM ) ) ,CS ) ) ),( DS + ( RCSe / MUR ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45547443002553445}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2952755905511811, "obj2": 0.5219752315786061}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( BR,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.1302316401176673}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( ( Min( ( DS / MUM ) ,RRSe ) - CS ) ,RCSe ) ,MUC ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6259842519685039, "obj2": 0.22701599175885143}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( Min( FirstVNF_RAM ,RRS ) + FirstVNF_CPU ) ) - MRS ) - ACS ) - MRS ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * ( ( MUC - DS ) / ( ( ( ( MUR - MUM ) + MUC ) + ( MUC + ( RMSe / MUC ) ) ) * DS ) ) ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7933196544400228}, {"determining": "( ( CRS * ( ( CRS - ACS ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / Min( ( ( ( CS * RMSe ) * MUC ) / RCSe ) ,( MLU + RMSe ) ) ) * DS ) ) / ( ( RRSe / MUM ) + DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8366198446478492}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5515425295522425}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ( Max( AMS,PN ) * ARS ) ,AMS ) * ( ( RRS + ( FirstVNF_CPU_Server * PN ) ) - DDR ) ) / FirstVNF_Mem ),Min( RRS ,( ( Min( FirstVNF_RAM ,( FirstVNF_Mem + ACS ) ) - Min( MDR ,RRS ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MLU * DS ),( ( MUM + CS ) / Max( CS,DS ) ) ) + ( ( RMSe + MUC ) / RCSe ) )", "obj1": 0.6003937007874016, "obj2": 0.23707863164702567}, {"determining": "( Max( PN,( ARS * RRS ) ) * ( ( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * Max( Const,MDR ) ) - CRS ) )", "choosing": "( ( RCSe * Max( DS,( RRSe - RMSe ) ) ) - ( RRSe + RCSe ) )", "obj1": 0.6594488188976378, "obj2": 0.1877113496547402}, {"determining": "( ( ( ( FirstVNF_Mem_Server - RRS ) * ( CRS * ARS ) ) * Min( Max( ( AMS / ARS ),Min( ( ( FirstVNF_Mem + ( FirstVNF_RAM / DDR ) ) * PN ) ,MRS ) ) ,( CRS + PN ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( ( RMSe / CS ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,( RMSe + DS ) ) * ( ( MUR / CS ) - RMSe ) ) - Min( ( ( MUM - CS ) + ( MUM * RCSe ) ) ,( Max( RRSe,RRSe ) - Max( MUC,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7709091891030556}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.687007874015748, "obj2": 0.15263574712302136}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.34448818897637795, "obj2": 0.5018365691000797}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13592347196449242}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( Max( ( RRSe + MUM ),MUR ) - Min( ( DS / ( MLU + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( RMSe ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.7559055118110236, "obj2": 0.10316205180134738}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.06135305916976219}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) * ( ( ( ( BR + ( MRS - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) - DDR ) * Min( ( DDR + ( ( CRS / Max( FirstVNF_Mem_Server,RRS ) ) / AMS ) ) ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( MUC ,MUM ) / RRSe ) * DS ) - Min( ( MUC / MUM ) ,Min( ( MUM - DS ) ,MUM ) ) )", "obj1": 0.7440944881889764, "obj2": 0.11331081423294692}, {"determining": "( ( PN / ACS ) * ( ( ( ( ( ( Max( Const,FirstVNF_RAM ) / ( FirstVNF_CPU * AMS ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( Min( CS ,Min( MLU ,DS ) ) - ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) )", "obj1": 0.42913385826771655, "obj2": 0.37494163599095154}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,Max( CS,RCSe ) ) ) ) )", "obj1": 0.25, "obj2": 0.5785187613058473}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6043459415710875}, {"determining": "( ACS - Max( Max( ( Min( Max( PN,MRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * Max( FirstVNF_RAM,BR ) ),MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( DS / MLU ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5846456692913385, "obj2": 0.2419237417633837}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.2677165354330709, "obj2": 0.5565427320475657}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( CS * ( DS - Max( ( ( Max( RRSe,MUM ) / RRSe ) * ( ( ( MUR - RRSe ) - ( RMSe / MUR ) ) / RMSe ) ),RCSe ) ) ) - MLU )", "obj1": 0.6791338582677166, "obj2": 0.17436984197194033}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_RAM - ( ACS - Max( ( ( ( MDR * FirstVNF_CPU ) / ( CRS * FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( RMSe / ( MUC * ( CS * ( Max( RMSe,CS ) - Min( MUR ,RCSe ) ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7652290709653714}, {"determining": "( Max( Max( ( ( FirstVNF_CPU - ( DDR - Min( ( PN * ACS ) ,( ARS + MDR ) ) ) ) + Min( Max( ( AMS * MDR ),FirstVNF_CPU ) ,ARS ) ),MRS ),Max( RRS,FirstVNF_Mem_Server ) ) - Max( FirstVNF_CPU,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( Max( ( CS - ( Min( CS ,( MUC * MUC ) ) - ( ( RCSe * MUR ) / ( RCSe * DS ) ) ) ),Max( ( MLU / MUR ),RRSe ) ) ,( MUM - Min( RRSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3362864336140025}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ( CRS * FirstVNF_Mem_Server ) ) - DDR ) ) / ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( Max( ( MUR + DS ),( ( MUM + RCSe ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - RMSe ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.6653543307086615, "obj2": 0.1766740540363899}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.8976377952755905, "obj2": 0.044857382062746594}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,Min( RCSe ,RMSe ) ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.8287401574803149, "obj2": 0.06416447627988225}, {"determining": "( ( DDR * CRS ) * ( Min( ( ( ( MRS + ( ( BR - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) * MDR ) / FirstVNF_Mem ) ,( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / DS ) + ( MUR + DS ) ),RCSe ),( ( DS - RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + ( MUR + ( RCSe * MUR ) ) ) ) ) ) / RMSe ) - ( RMSe / Max( MLU,RCSe ) ) )", "obj1": 0.8759842519685039, "obj2": 0.05222834456080096}, {"determining": "( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * ( Max( PN,ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * ( Const - MDR ) ) - CRS ) ) )", "choosing": "( ( Min( ( DS - RCSe ) ,( MUR / DS ) ) + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.9547244094488189, "obj2": 0.0176003355881655}, {"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,Const ) ) - Max( RRS,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MLU * MLU ) * ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.452755905511811, "obj2": 0.35522063027873174}, {"determining": "( ( CRS * ( ( ( MDR * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( MUC / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7677165354330708, "obj2": 0.0887252668817884}, {"determining": "Max( Max( MDR,( PN + CRS ) ),( ( FirstVNF_RAM * AMS ) - ( ( ( FirstVNF_CPU_Server / DDR ) * ( CRS - AMS ) ) - Max( FirstVNF_Mem_Server,( FirstVNF_Mem + CRS ) ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( Min( CS ,( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( ( MLU + RMSe ) + MUC ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6556466733955632}, {"determining": "( Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * ( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) ,DDR ) * ( FirstVNF_RAM - ( Max( ( Const / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "( ( ( ( Min( RMSe ,( RMSe / CS ) ) - Min( MUM ,CS ) ) / CS ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - CS ) )", "obj1": 0.2440944881889764, "obj2": 0.5970296452133974}, {"determining": "Min( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( FirstVNF_Mem_Server - PN ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + ( DS - Max( MUR,RCSe ) ) ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.2768147651149885}, {"determining": "Max( ( MDR + ( PN + CRS ) ),( ( FirstVNF_RAM * RRS ) - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) - ( CRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU - Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( RMSe ,RCSe ) ) ,( Min( MUR ,CS ) - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8355228341439892}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( ( Min( ( DS / MUM ) ,RRSe ) - CS ) ,RCSe ) ,MUC ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6259842519685039, "obj2": 0.22701599175885143}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( MDR + FirstVNF_RAM ) - CRS ) ),Max( RRS,Const ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) + CS ) ,( DS / ( Min( ( ( ( ( MLU * DS ) * Max( MUC,MUC ) ) * RRSe ) / ( MUC + DS ) ) ,CS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5185922207660704}, {"determining": "( ( CRS * ( ( ( MDR * MRS ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * PN ) )", "choosing": "( ( ( RMSe / CS ) + ( RRSe + DS ) ) / ( MUC * ( ( CS / ( Max( MUR,DS ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7704465909996939}, {"determining": "Min( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.5433070866141733, "obj2": 0.2656946085601846}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) * PN ) - MDR ) * Min( DDR ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( Min( RRSe ,MUM ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),( Min( ( DS / MUR ) ,RCSe ) / ( ( RMSe + RCSe ) + ( RCSe + DS ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.026647306245558125}, {"determining": "( Max( PN,ACS ) * ( ( ( FirstVNF_RAM / ( Max( Const,RRS ) + Const ) ) + FirstVNF_RAM ) - RRS ) )", "choosing": "( ( ( Max( ( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ),Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + ( DS / RMSe ) ) / ( CS - DS ) ) ) ) - RMSe ) - Min( Min( ( MUM - ( RCSe / RRSe ) ) ,DS ) ,RCSe ) ) - RMSe )", "obj1": 0.7952755905511811, "obj2": 0.07668235141998272}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5130091020233731}, {"determining": "( ( ( Const - FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) * ( CRS * ARS ) ) ) * Max( FirstVNF_CPU_Server,( Max( Const,CRS ) * Max( Max( FirstVNF_Mem_Server,RRS ),( ( Min( ( BR + ACS ) ,CRS ) + Min( Min( PN ,FirstVNF_CPU ) ,MDR ) ) * ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RCSe / ( ( DS * ( CS / ( ( Max( MLU,Max( RRSe,DS ) ) * ( Max( MUR,CS ) - Min( RRSe ,RRSe ) ) ) - ( RRSe - MUC ) ) ) ) * ( ( MLU * ( RMSe - MUM ) ) - ( CS + RRSe ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8207548111044064}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6833353539628115}, {"determining": "( ACS - Max( ( ACS * Min( FirstVNF_CPU ,( RRS - CRS ) ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( MUM / ( ( MUC / ( ( RMSe / DS ) * CS ) ) - ( Max( RRSe,( RCSe + MUM ) ) * Min( CS ,MUC ) ) ) ) * ( Max( CS,( MUM / MUC ) ) - MUC ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5710836047267743}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ( CRS * FirstVNF_Mem_Server ) ) - DDR ) ) / FirstVNF_Mem ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( MLU + MUM ) ) ) ) / RMSe ) - Min( ( MUM * ( CS + MUM ) ) ,DS ) )", "obj1": 0.5413385826771654, "obj2": 0.2676146056402842}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - DDR ) * Max( FirstVNF_Mem_Server,BR ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.234251968503937, "obj2": 0.597222157504777}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ACS ) * ( CRS - ( ( ( FirstVNF_CPU_Server * Max( Min( BR ,( BR + FirstVNF_Mem ) ),FirstVNF_CPU_Server ) ) - MDR ) * ( ( Const + Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ) ) * AMS ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - ( Max( Min( ( DS / CS ) ,( Max( ( RRSe / DS ),MLU ) / Max( RRSe,Min( RCSe ,( MUR / MUC ) ) ) ) ),( DS * RCSe ) ) + ( DS * Min( MUR ,DS ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6225957178021294}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),( Min( ( DS / MUR ) ,RCSe ) / ( ( RMSe + RCSe ) + ( RCSe + DS ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.029244610272597726}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( BR,RRS ) ) ) ) / Const ) * Min( PN ,MDR ) )", "choosing": "( ( Max( Max( ( ( CS / ( ( RCSe / MUC ) + ( MUC * CS ) ) ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) + MUR ) ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.6364808078217272}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6850393700787402, "obj2": 0.15417185294760924}, {"determining": "( ACS - Max( ( FirstVNF_RAM / ( MDR / FirstVNF_CPU_Server ) ),Max( FirstVNF_RAM,MRS ) ) )", "choosing": "( ( Max( ( ( ( RMSe / CS ) + ( MUR + DS ) ) * ( ( MUM + CS ) / ( CS - DS ) ) ),Min( ( Max( Max( MLU,MUM ),( ( RCSe + MUM ) * RCSe ) ) - RCSe ) ,MUM ) ) / RMSe ) - ( Max( Min( ( DS / CS ) ,( Max( ( RRSe / DS ),MLU ) / Max( RRSe,Min( RCSe ,( MUR / MUC ) ) ) ) ),( DS * RCSe ) ) + ( DS - Min( MUR ,DS ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.569217628426457}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( RCSe + DS ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.0727726772565637}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ( ( FirstVNF_CPU / Min( MRS ,Max( DDR,PN ) ) ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / DS ) - Min( ( CS / DS ) ,CS ) )", "obj1": 0.7480314960629921, "obj2": 0.11085690227469909}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_CPU_Server * PN ) - MDR ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) / ( ( RCSe / ( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,RCSe ) ) ) ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.08176822010600399}, {"determining": "( ACS - Max( Max( ( Min( Max( PN,( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( CRS * ( PN / ACS ) ) ) ) * Max( FirstVNF_RAM,BR ) ),Max( DDR,PN ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( ( DS - Max( RRSe,MUC ) ) + DS ) ),RCSe ),( ( DS * RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + RCSe ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5078740157480315, "obj2": 0.28736438874291265}, {"determining": "( ( CRS + MRS ) * Max( Min( MRS ,Max( DDR,( FirstVNF_CPU_Server / PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( DS - RCSe ),Max( DS,RCSe ) ) + ( Max( MUC,CS ) - Min( MUM ,( CS - ( Min( RRSe ,( MLU * MLU ) ) - ( ( MUM * RMSe ) - CS ) ) ) ) ) ) - ( ( MUM / RRSe ) + ( MUC - ( MLU + ( CS + MUC ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.747260154675004}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + ( DS - Max( MUR,RCSe ) ) ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.07491035284438832}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ( CRS * FirstVNF_Mem_Server ) ) - DDR ) ) / FirstVNF_Mem ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.5216535433070866, "obj2": 0.2807521746329704}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( ( MRS / CRS ),RRS ) ) ) ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( ( Max( MLU,RRSe ) - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.9960629921259843, "obj2": 0.0040808759844103756}, {"determining": "Max( Min( Min( PN ,FirstVNF_RAM ) ,( FirstVNF_RAM * ( ( BR / Min( PN ,CRS ) ) * MDR ) ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8081604365385994}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.3051181102362205, "obj2": 0.5187253944648462}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( RMSe / CS ) + ( MUR + DS ) ) ) * DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8140748689401227}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) ) )", "choosing": "Min( ( ( CS * ( DS - DS ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.49803149606299213, "obj2": 0.2935503538929344}, {"determining": "( PN + ( ( MDR + ( ( Min( FirstVNF_RAM_Server ,Min( PN ,( RRS - DDR ) ) ) - AMS ) * Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS - BR ) ) ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( DS + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - ( Max( Min( ( Max( ( DS * RMSe ),DS ) + ( ( DS / MLU ) / RRSe ) ) ,( Max( ( RRSe / DS ),MLU ) / Max( RRSe,Min( RCSe ,( RMSe / MUC ) ) ) ) ),( DS * RCSe ) ) + ( DS - Min( MUR ,DS ) ) ) )", "obj1": 0.9862204724409449, "obj2": 0.0055793448802533025}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,Max( CS,RCSe ) ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6429338846938286}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( FirstVNF_Mem_Server - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( MDR + ( PN + CRS ) ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - ( Max( MUR,RMSe ) + Min( DS ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.44291338582677164, "obj2": 0.36089332828846754}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( CRS * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( Min( ( Const + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7533066136153196}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( Max( RCSe,MUR ) + Min( DS ,RCSe ) ),RCSe ) ) ) - CS ) ,( DS / ( ( MUC / DS ) * Min( RMSe ,RRSe ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2942736470763131}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6617931877770231}, {"determining": "( Min( ( ( ( Const - ( CRS * FirstVNF_Mem_Server ) ) / Const ) * ( ( ( FirstVNF_Mem * MDR ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) ,DDR ) * ( FirstVNF_RAM - ( Max( ( Const / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "( ( ( Max( Max( ( MUR + DS ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - RMSe ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.2106299212598425, "obj2": 0.6337186966231731}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,Max( CS,RCSe ) ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5515425295522425}, {"determining": "Min( ( ( ( DDR - FirstVNF_Mem_Server ) / MRS ) - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( Max( FirstVNF_Mem_Server,ACS ) + ( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( CS * ( DS - MUM ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ,( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( CS ,CS ) / Max( MUC,MUM ) ) ) )", "obj1": 0.5433070866141733, "obj2": 0.2656946085601846}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.8188976377952756, "obj2": 0.07024194965356892}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( FirstVNF_Mem_Server - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( MDR + ( PN + CRS ) ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - ( Max( MUR,RMSe ) + Min( DS ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.43700787401574803, "obj2": 0.36557116411482515}, {"determining": "Max( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( MUR / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * MUC ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6667588109782432}, {"determining": "( ( AMS - FirstVNF_RAM ) * ( ( ( ( ( ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) + Max( MDR,( ARS - Const ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( Min( DS ,MUM ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU / ( DS - CS ) ) ) ) ) ),( RMSe / CS ) )", "obj1": 0.8641732283464567, "obj2": 0.05773761178629846}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_RAM - ( ACS - Max( ( ( ( MDR * FirstVNF_CPU ) / ( CRS * FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6732271337973889}, {"determining": "( ( MRS / DDR ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * ( Const - MDR ) ) - ARS ) )", "choosing": "( ( Max( Min( MUM ,MUC ),Min( Min( Min( ( MUR / DS ) ,Min( DS ,RCSe ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.9566929133858267, "obj2": 0.014935463592774137}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( FirstVNF_Mem_Server - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUC ) ) ) ) ) ) )", "obj1": 0.43503937007874016, "obj2": 0.37135242514011485}, {"determining": "( ( CRS * ( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_Mem ) * ( CRS * ARS ) ) ) * Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( Min( ( Const + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MUC ) ) / ( ( ( MLU * ( DS + RCSe ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7533066136153196}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.13558329106041822}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( PN ,RRS ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( Max( DS,( DS * RMSe ) ),( MLU / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( Min( ( ( MUR - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.011196944938949432}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.452755905511811, "obj2": 0.35522063027873174}, {"determining": "Max( Min( Min( PN ,FirstVNF_RAM ) ,( FirstVNF_RAM * ( ( BR / Min( PN ,CRS ) ) * MDR ) ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( ( ( Max( Max( ( MUR + DS ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - RMSe ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.2204724409448819, "obj2": 0.6268155160536955}, {"determining": "( ( Const + Max( ARS,FirstVNF_CPU ) ) * ( ( ( ( FirstVNF_CPU_Server * Max( Min( BR ,( BR + FirstVNF_Mem ) ),FirstVNF_CPU_Server ) ) - MDR ) * ( Max( Const,Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ) ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) ) ) - CRS ) )", "choosing": "( Min( ( Min( ( MLU * RRSe ) ,( RCSe - MLU ) ) / Max( ( ( ( ( MUM + CS ) / ( CS - DS ) ) / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.009016952706033813}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_RAM - ( ACS - Max( ( ( ( MDR * FirstVNF_CPU ) / ( CRS * FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6635107511095604}], "15": [{"determining": "Min( ( ( ( DDR - FirstVNF_Mem_Server ) / MRS ) - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( Max( FirstVNF_Mem_Server,ACS ) + ( ACS - ( CRS - ( ( Min( AMS ,Const ) / MDR ) * ( Const - ACS ) ) ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( CS * ( DS - MUM ) ) * ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ,( Min( Min( MUC ,( ( RRSe + CS ) * RRSe ) ) ,MUC ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) * Max( Min( MRS ,( ARS / ( Max( FirstVNF_Mem,Min( BR ,FirstVNF_CPU ) ) + DDR ) ) ),FirstVNF_RAM ) )", "choosing": "( ( CS / DS ) - ( ( Max( MUR,RRSe ) - Max( RRSe,CS ) ) / Min( ( DS - RCSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Max( ( PN * Const ),Min( RRS ,FirstVNF_CPU ) ) / Const ),FirstVNF_CPU_Server ) - ACS ) - ( FirstVNF_Mem_Server * ( CRS + MDR ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Min( ( DS / ( MLU + ( Min( ( ( MUR * RMSe ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) / MUM ) ) ) ,RCSe ) )", "obj1": 0.08070866141732283, "obj2": 0.869045109580726}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - ( Max( Min( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) ,( Max( ( RRSe / DS ),MLU ) / Max( RRSe,Min( RCSe ,( MUR / MUC ) ) ) ) ),( DS * RCSe ) ) + ( DS - Min( MUR ,DS ) ) ) )", "obj1": 0.41141732283464566, "obj2": 0.4016714160672378}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,Min( Const ,PN ) ) ) )", "choosing": "( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7448958363875577}, {"determining": "Max( ( ( CRS + ( FirstVNF_CPU * FirstVNF_CPU ) ) + MDR ),( MRS - ( FirstVNF_CPU_Server / PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) * DS ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6867474752917255}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.328740157480315, "obj2": 0.49223130832286655}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.4881889763779528, "obj2": 0.30174902428265155}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( Min( ( DS - RCSe ) ,( DS / MUR ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ,MUM ) ) / RMSe ) - ( ( RRSe / RMSe ) + Max( DS,MUM ) ) )", "obj1": 0.3799212598425197, "obj2": 0.441165729635228}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( BR,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.1302316401176673}, {"determining": "( ( CRS * ( ( CRS - ACS ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / Min( ( ( ( CS * RMSe ) * MUC ) / RCSe ) ,( MLU + RMSe ) ) ) * DS ) ) / ( ( RRSe / MUM ) + DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8366198446478492}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5328903251163524}, {"determining": "( PN * ( ( ( ( ( Max( MDR,( BR - Const ) ) + Max( Min( FirstVNF_CPU_Server ,MDR ),( MRS - RRS ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( RCSe ,( MUC / ( CS - Max( MUR,( ( MUC / ( RMSe / RCSe ) ) + Min( ( RRSe + MUR ) ,MUC ) ) ) ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.056966767087541094}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RCSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.37631229875605526}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( Min( ACS ,( Max( Max( DDR,PN ),FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * ( ( ( MRS + FirstVNF_RAM ) * FirstVNF_RAM ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5130091020233731}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ( Max( AMS,PN ) * ARS ) ,AMS ) * ( ( RRS + ( FirstVNF_CPU_Server * PN ) ) - DDR ) ) / FirstVNF_Mem ),Min( RRS ,( ( Min( FirstVNF_RAM ,( FirstVNF_Mem + ACS ) ) - Min( MDR ,RRS ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MLU * DS ),( ( MUM + CS ) / Max( CS,DS ) ) ) + ( ( RMSe + MUC ) / RCSe ) )", "obj1": 0.6003937007874016, "obj2": 0.23707863164702567}, {"determining": "( FirstVNF_RAM * ( CRS - ( ( ( Min( ( AMS + DDR ) ,( PN / ACS ) ) * ( ( ( ARS - FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / DDR ) ) - MDR ) / Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUM ),( RRSe * MUC ) ) / CS ) ) - Min( ( Min( DS ,RRSe ) / RCSe ) ,CS ) ) / MLU ) * DS ) + ( Min( RRSe ,( DS / MUM ) ) - Min( ( DS * MUM ) ,Max( ( MUM * ( RCSe + Max( CS,RRSe ) ) ),( MLU * ( Min( RRSe ,MUM ) - RRSe ) ) ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3320188680806898}, {"determining": "( Max( PN,ACS ) * ( FirstVNF_RAM - Const ) )", "choosing": "Max( ( Min( RMSe ,MLU ) / RMSe ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) )", "obj1": 0.6437007874015748, "obj2": 0.20015198424996009}, {"determining": "( ( DDR * CRS ) * ( Min( ( ( ( MRS + ( ( BR - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) * MDR ) / FirstVNF_Mem ) ,( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / DS ) + ( MUR + DS ) ),RCSe ),( ( DS - RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + ( MUR + ( RCSe * MUR ) ) ) ) ) ) / RMSe ) - ( RMSe / Max( MLU,RCSe ) ) )", "obj1": 0.8759842519685039, "obj2": 0.05222834456080096}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),CS ) ) )", "obj1": 0.6673228346456693, "obj2": 0.16837141193147523}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( Max( RRS,BR ) / FirstVNF_Mem_Server ) + AMS ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - CRS ) )", "choosing": "( Max( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ),DS ) + ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( RRSe + RCSe ) ) )", "obj1": 0.7559055118110236, "obj2": 0.10048741816316316}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.27165354330708663, "obj2": 0.5499672934691088}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.3464566929133858, "obj2": 0.4654482674208326}, {"determining": "( ACS - Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( Min( ( Const + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( ( ( MLU * ( DS + RCSe ) ) / MUR ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.562992125984252, "obj2": 0.25439627629806905}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) * ( ( ( ( BR + ( MRS - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) - DDR ) * Min( ( DDR + ( ( CRS / Max( FirstVNF_Mem_Server,RRS ) ) / AMS ) ) ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( MUC ,MUM ) / RRSe ) * DS ) - Min( ( MUC / MUM ) ,Min( ( MUM - DS ) ,MUM ) ) )", "obj1": 0.7440944881889764, "obj2": 0.11331081423294692}, {"determining": "( ( CRS * ( ( FirstVNF_Mem_Server - RRS ) * ( DDR * ARS ) ) ) * ( FirstVNF_CPU_Server * Max( ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,Const ) ) - Max( RRS,FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe / CS ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MLU / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7643924593545537}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * ( Const - MDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,Max( CS,RCSe ) ) ) ) )", "obj1": 0.6181102362204725, "obj2": 0.22943750609270797}, {"determining": "( ACS - Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,BR ) ),Max( RRS,Max( ( ( DDR / PN ) - ( ARS - FirstVNF_CPU_Server ) ),RRS ) ) ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( ( RMSe * CS ) + ( Min( DS ,RCSe ) + RRSe ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),( ( RCSe * ( DS / MUR ) ) / ( ( RMSe + RCSe ) + ( RCSe - RCSe ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.2113462647222811}, {"determining": "( ACS - Max( Max( ( Min( Max( PN,MRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * Max( FirstVNF_RAM,BR ) ),MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( DS / MLU ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5846456692913385, "obj2": 0.2419237417633837}, {"determining": "( ( CRS * ( ( ( MDR * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( MUC / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7677165354330708, "obj2": 0.0887252668817884}, {"determining": "Max( Min( Min( PN ,FirstVNF_RAM ) ,( FirstVNF_RAM * ( ( BR / Min( FirstVNF_CPU_Server ,CRS ) ) * MDR ) ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( ( ( Max( Max( ( MUR + DS ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - RMSe ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.2204724409448819, "obj2": 0.6260302654336721}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45547443002553445}, {"determining": "( Max( PN,ACS ) * ( ( ( MRS / CRS ) * ( Const - MDR ) ) - CRS ) )", "choosing": "( ( CS * ( DS - Max( ( Max( RCSe,( MUC + MUM ) ) * ( ( ( MUR - RRSe ) - ( RMSe / MUR ) ) / RMSe ) ),RCSe ) ) ) - MLU )", "obj1": 0.6338582677165354, "obj2": 0.22433164291609328}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.3838582677165354, "obj2": 0.4262043628081715}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4204076983595796}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6136042514927428}, {"determining": "Max( Min( Min( PN ,FirstVNF_RAM ) ,( FirstVNF_RAM * ( ( BR / Min( PN ,CRS ) ) * MDR ) ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( ( DDR * FirstVNF_CPU ) + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / RRSe ) * DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8314101463737565}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,Max( CS,RCSe ) ) ) ) )", "obj1": 0.25, "obj2": 0.5785187613058473}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ( CRS * FirstVNF_Mem_Server ) ) - DDR ) ) / ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( Max( ( MUR + DS ),( ( MUM + RCSe ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - RMSe ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.6653543307086615, "obj2": 0.1766740540363899}, {"determining": "( ( RRS / FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( Min( ( RMSe / RRSe ) ,CS ) / MUC ) - ( ( RMSe / CS ) * ( CS + MUC ) ) ) ) * DS ) ) )", "obj1": 0.3464566929133858, "obj2": 0.4654482674208326}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + ( FirstVNF_RAM - Const ) ) + Max( ( FirstVNF_Mem_Server - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( MDR + ( PN + CRS ) ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - ( Max( MLU,RMSe ) + Min( DS ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.4547244094488189, "obj2": 0.34567687441037437}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.3090551181102362, "obj2": 0.5183231837175424}, {"determining": "( Min( AMS ,ACS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe / CS ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * Min( ( ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) / CS ) ,DS ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7709091891030556}, {"determining": "( Max( PN,( ARS * RRS ) ) * ( ( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * Max( Const,MDR ) ) - CRS ) )", "choosing": "( ( RCSe * Max( DS,( RRSe - RMSe ) ) ) - ( RRSe + RCSe ) )", "obj1": 0.6594488188976378, "obj2": 0.1877113496547402}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_RAM - ( ACS - Max( ( ( ( MDR * FirstVNF_CPU ) / ( CRS * FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) * Min( PN ,RRS ) ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6732271337973889}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MDR * ACS ),( MRS - RRS ) ) ) * Min( FirstVNF_RAM_Server ,PN ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( Max( DS,( DS * RMSe ) ),( MLU / ( CS - RRSe ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( Min( ( ( CS - MUC ) / ( MLU + ( RCSe / CS ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.8346456692913385, "obj2": 0.0634494212261995}, {"determining": "Max( Max( MDR,( PN + CRS ) ),( ( FirstVNF_RAM * AMS ) - ( ( ( FirstVNF_CPU_Server / DDR ) * ( CRS - AMS ) ) - Max( FirstVNF_Mem_Server,( FirstVNF_Mem + CRS ) ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( Min( CS ,( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( ( MLU + RMSe ) + MUC ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6556466733955632}, {"determining": "( Max( FirstVNF_Mem_Server,Const ) - ( BR / DDR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MUM ) ) ,CS ) ) ),( DS + ( RCSe / MUR ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45547443002553445}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( Max( PN,ACS ) * ( ( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) ) )", "choosing": "( ( ( Min( RRSe ,Min( ( DS / MUR ) ,RCSe ) ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.030712936643357305}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ( CRS * FirstVNF_Mem_Server ) ) - DDR ) ) / FirstVNF_Mem ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.5767716535433071, "obj2": 0.24816382506896473}, {"determining": "( ACS - Max( Max( Const,( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) * ( DDR / FirstVNF_CPU ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( ( ( CS * ( ( CS * ( RMSe * RRSe ) ) - RMSe ) ) - CS ) ,( DS / MLU ) )", "obj1": 0.265748031496063, "obj2": 0.5643897242098929}, {"determining": "( ( CRS + MRS ) * Max( Min( MRS ,Max( DDR,( FirstVNF_CPU_Server / PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( DS - RCSe ),Max( DS,RCSe ) ) + ( Max( MUC,CS ) - Min( MUM ,( CS - ( Min( RRSe ,( MLU * MLU ) ) - ( ( MUM * RMSe ) - CS ) ) ) ) ) ) - ( ( MUM / RRSe ) + ( MUC - ( MLU + ( CS + MUC ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.747260154675004}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( Min( FirstVNF_RAM ,RRS ) + FirstVNF_CPU ) ) - MRS ) - ACS ) - MRS ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * ( ( MUC - DS ) / ( ( ( ( MUR - MUM ) + MUC ) + ( MUC + ( RMSe / MUC ) ) ) * DS ) ) ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7933196544400228}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,( Min( FirstVNF_RAM ,Const ) * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_CPU_Server * PN ) + MDR ) ) - CRS ) )", "choosing": "Max( ( CS * ( DS - ( ( RRSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),Max( RMSe,( Min( RMSe ,Min( MUC ,RRSe ) ) / RMSe ) ) )", "obj1": 0.9409448818897638, "obj2": 0.022899460186824684}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.687007874015748, "obj2": 0.15263574712302136}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13592347196449242}, {"determining": "( ( ( ( FirstVNF_Mem_Server - RRS ) * ( DDR * ARS ) ) * Min( Max( ( AMS / ARS ),Min( MRS ,( Max( MDR,Max( FirstVNF_Mem,BR ) ) * PN ) ) ) ,( AMS * FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( ( RMSe / CS ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,( RMSe + DS ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( RRSe,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7527097853109137}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),( Min( ( DS / MUR ) ,RCSe ) / ( ( RMSe + RCSe ) + ( RCSe + DS ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.029244610272597726}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,BR ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( MUM * RCSe ),MUR ) ) ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4204076983595796}, {"determining": "( ACS - Max( ( ( ( MDR * MRS ) / FirstVNF_Mem ) * ( DDR * ARS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe )", "obj1": 0.24606299212598426, "obj2": 0.5885700439683642}, {"determining": "( Max( FirstVNF_CPU,ARS ) - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3362864336140025}, {"determining": "( ( Min( ( BR / FirstVNF_CPU ) ,( ( PN + RRS ) - BR ) ) * BR ) * ( ( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) * RRS ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( DDR / ( Max( FirstVNF_CPU_Server,CRS ) + RRS ) ) ) )", "choosing": "Min( ( ( ( DS + DS ) / ( Min( ( ( ( CS * DS ) / Min( MUC ,MUC ) ) - MUR ) ,DS ) - ( MUM - MLU ) ) ) - CS ) ,( MUM / RCSe ) )", "obj1": 0.905511811023622, "obj2": 0.03562666763694015}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( BR,RRS ) ) ) ) / Const ) * Min( PN ,MDR ) )", "choosing": "( ( Max( Max( ( ( CS / ( ( RCSe / MUC ) + ( MUC * CS ) ) ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) + MUR ) ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.6364808078217272}, {"determining": "( ( ( ( FirstVNF_Mem_Server - RRS ) * ( CRS * ARS ) ) * Min( Max( ( AMS / ARS ),Min( ( ( FirstVNF_Mem + ( FirstVNF_RAM / DDR ) ) * PN ) ,MRS ) ) ,( CRS + PN ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( ( RMSe / CS ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,( RMSe + DS ) ) * ( ( MUR / CS ) - RMSe ) ) - Min( ( ( MUM - CS ) + ( MUM * RCSe ) ) ,( Max( RRSe,RRSe ) - Max( MUC,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7527097853109137}, {"determining": "Max( ( MRS * Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( DDR + RRS ) ),MDR ) ),Min( Min( PN ,FirstVNF_RAM ) ,( FirstVNF_RAM * ( ( BR / Min( PN ,CRS ) ) * MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / CS ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6434123683263114}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,Min( RCSe ,RMSe ) ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.8287401574803149, "obj2": 0.06414985351605071}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) * PN ) - MDR ) * Min( DDR ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( Min( RRSe ,MUM ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),( Min( ( DS / MUR ) ,RCSe ) / ( ( RMSe + RCSe ) + ( RCSe + DS ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.026647306245558125}, {"determining": "( ( ( Const - FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) * ( CRS * ARS ) ) ) * Max( FirstVNF_CPU_Server,( Max( Const,CRS ) * Max( Max( FirstVNF_Mem_Server,RRS ),( ( Min( ( BR + ACS ) ,CRS ) + Min( Min( PN ,FirstVNF_CPU ) ,MDR ) ) * ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RCSe / ( ( DS * ( CS / ( ( Max( MLU,Max( RRSe,DS ) ) * ( Max( MUR,CS ) - Min( RRSe ,RRSe ) ) ) - ( RRSe - MUC ) ) ) ) * ( ( MLU * ( RMSe - MUM ) ) - ( CS + RRSe ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8207548111044064}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,RRS ) ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( DS,( DS * RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7933196544400228}, {"determining": "( ACS - Max( ( MRS + ( RRS * BR ) ),Max( Max( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( RMSe ,( MUR / CS ) ) - Min( MUM ,Max( Min( RMSe ,DS ),RCSe ) ) ) / CS ) * DS ) + ( Min( MUR ,MUC ) - CS ) )", "obj1": 0.5196850393700787, "obj2": 0.27947600204806333}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.13503317755270056}, {"determining": "Min( ( ( AMS + ( FirstVNF_RAM + ( FirstVNF_RAM * ( ACS + MDR ) ) ) ) - Max( Max( MRS,FirstVNF_RAM ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + ( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( MLU * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / ( MUM - RMSe ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.5433070866141733, "obj2": 0.2656946085601846}, {"determining": "( FirstVNF_CPU - ( FirstVNF_CPU_Server + AMS ) )", "choosing": "Min( ( ( CS * ( ( MUR + ( Min( MUC ,( MUR + MLU ) ) - RMSe ) ) - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2952755905511811, "obj2": 0.5219752315786061}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( RMSe / CS ) + ( MUR + DS ) ) ) * DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8140748689401227}, {"determining": "( ACS - ( Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),MRS ) - ( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,MLU ) ,MUM ) ) / RMSe ) - ( Max( Min( ( DS / CS ) ,( ( DS - RCSe ) / Max( ( ( RRSe + MLU ) - ( RMSe / RCSe ) ),Min( RCSe ,( MUR / MUC ) ) ) ) ),( DS * RCSe ) ) + ( DS - Min( MUR ,DS ) ) ) )", "obj1": 0.515748031496063, "obj2": 0.2844533310034196}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( FirstVNF_Mem_Server - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( MDR + ( PN + CRS ) ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - ( Max( MUR,RMSe ) + Min( DS ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.44291338582677164, "obj2": 0.35884307094907236}, {"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,Const ) ) - Max( RRS,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MLU * MLU ) * ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.452755905511811, "obj2": 0.35522063027873174}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + ( DS - Max( MUR,RCSe ) ) ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.07491035284438832}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13592347196449242}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.687007874015748, "obj2": 0.15263574712302136}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( MDR * FirstVNF_RAM_Server ) ) ) - CRS ) )", "choosing": "( ( RMSe / RMSe ) - Min( ( DS / ( MLU + Min( MUM ,Min( ( Max( RCSe,MUR ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) ) ) ) ,RCSe ) )", "obj1": 0.8976377952755905, "obj2": 0.044857382062746594}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6850393700787402, "obj2": 0.15417185294760924}, {"determining": "( Max( PN,( MDR * BR ) ) * ( Max( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ),( Const - MDR ) ) - CRS ) )", "choosing": "( Min( ( Min( ( RCSe + MUC ) ,( MLU * RMSe ) ) / ( ( ( MLU * ( DS + Min( MUC ,MLU ) ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.6594488188976378, "obj2": 0.1877113496547402}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.8188976377952756, "obj2": 0.07011553257744471}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - DDR ) * Max( FirstVNF_Mem_Server,BR ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.234251968503937, "obj2": 0.597222157504777}, {"determining": "( ( CRS * ( ( ( MDR * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) / FirstVNF_Mem ) * ( DDR * ARS ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08563263030487651}, {"determining": "( ACS - Max( ( ACS * Min( FirstVNF_CPU ,( RRS - CRS ) ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( MUM / ( ( MUC / ( ( RMSe / DS ) * CS ) ) - ( Max( RRSe,( RCSe + MUM ) ) * Min( CS ,MUC ) ) ) ) * ( Max( CS,( MUM / MUC ) ) - MUC ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5710836047267743}, {"determining": "( Max( ( ACS - Min( ( CRS - CRS ) ,Max( FirstVNF_RAM_Server,MRS ) ) ),FirstVNF_Mem ) * ( ( ( ( ( ( AMS + DDR ) + Max( RRS,FirstVNF_RAM_Server ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( RMSe ,RCSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) + MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3320188680806898}, {"determining": "( ( CRS * ( ( CRS - ACS ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / Min( ( ( ( CS * RMSe ) * MUC ) / RCSe ) ,( MLU + RMSe ) ) ) * DS ) ) / ( ( RRSe / MUM ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8068882342670297}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( ( ( ( MDR + Max( PN,FirstVNF_CPU_Server ) ) * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( DS / ( Min( RRSe ,( MUC * MUM ) ) / RRSe ) ) - Min( ( CS / DS ) ,CS ) )", "obj1": 0.8877952755905512, "obj2": 0.04968123412406644}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6043459415710875}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.3051181102362205, "obj2": 0.5187253944648462}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6850393700787402, "obj2": 0.15417185294760924}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * ( ( Const + Max( FirstVNF_CPU,ARS ) ) * AMS ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,Max( CS,RCSe ) ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5704626062187275}, {"determining": "( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * ( Max( PN,ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * ( Const - MDR ) ) - CRS ) ) )", "choosing": "( ( Min( ( DS - RCSe ) ,( MUR / DS ) ) + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.9547244094488189, "obj2": 0.0176003355881655}, {"determining": "( Max( PN,ACS ) * ( ( ( FirstVNF_RAM / ( Max( Const,RRS ) + Const ) ) + FirstVNF_RAM ) - RRS ) )", "choosing": "( ( ( Max( ( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ),Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + ( DS / RMSe ) ) / ( CS - DS ) ) ) ) - RMSe ) - Min( Min( ( MUM - ( RCSe / RRSe ) ) ,DS ) ,RCSe ) ) - RMSe )", "obj1": 0.7952755905511811, "obj2": 0.07668235141998272}, {"determining": "Max( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( MUR / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * MUC ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6667588109782432}, {"determining": "Min( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) + FirstVNF_RAM ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.5334645669291339, "obj2": 0.2726252543076073}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( ( MRS / CRS ),RRS ) ) ) ) / FirstVNF_Mem ) * ( DDR * ARS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( ( Max( MLU,RRSe ) - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.9960629921259843, "obj2": 0.0040808759844103756}], "16": [{"determining": "( ( ( Const - FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) * ( CRS * ARS ) ) ) * Max( FirstVNF_CPU_Server,( Max( Const,CRS ) * Max( Max( FirstVNF_Mem_Server,RRS ),( ( Min( ( BR + ACS ) ,CRS ) + Min( Min( PN ,FirstVNF_CPU ) ,MDR ) ) * ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS - MUM ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ,( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( CS ,CS ) / Max( MUC,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( DDR - FirstVNF_Mem_Server ) / MRS ) - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( Max( FirstVNF_Mem_Server,ACS ) + ( ACS - ( CRS - ( ( Min( AMS ,Const ) / MDR ) * ( Const - ACS ) ) ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( CS * ( DS - MUM ) ) * ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ,( Min( Min( MUC ,( ( RRSe + CS ) * RRSe ) ) ,MUC ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Max( ( PN * Const ),Min( RRS ,FirstVNF_CPU ) ) / Const ),FirstVNF_CPU_Server ) - ACS ) - ( FirstVNF_Mem_Server * ( CRS + MDR ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Min( ( DS / ( MLU + ( Min( ( ( MUR * RMSe ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) / MUM ) ) ) ,RCSe ) )", "obj1": 0.08070866141732283, "obj2": 0.869045109580726}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4654155679063897}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.2219582556333246}, {"determining": "Max( ( ( ( ( AMS + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( MUM / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.4074803149606299, "obj2": 0.3993073286662074}, {"determining": "( ACS - Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,BR ) ),Max( RRS,Max( ( ( DDR / PN ) - ( ARS - FirstVNF_CPU_Server ) ),RRS ) ) ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( ( RMSe * CS ) + ( Min( DS ,RCSe ) + RRSe ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),( ( RCSe * ( DS / MUR ) ) / ( ( RMSe + RCSe ) + ( RCSe - RCSe ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.2113462647222811}, {"determining": "( ACS - Max( MRS,( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + CRS ) * Max( Max( RRS,FirstVNF_RAM ),( ( Min( CRS ,( Const + ACS ) ) * ( FirstVNF_CPU_Server - BR ) ) + ( FirstVNF_CPU_Server * ACS ) ) ) ) ) )", "choosing": "( ( ( MLU + CS ) / ( ( Min( RRSe ,MUM ) / ( MUR / Min( CS ,Min( MLU ,RMSe ) ) ) ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - MUR ) ,( RMSe + DS ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( RCSe - DS ) ,( MUR / DS ) ) ,( Max( RRSe,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.15551181102362205, "obj2": 0.714075298938711}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( CRS ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( MUC / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7421259842519685, "obj2": 0.10858415486496209}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.4881889763779528, "obj2": 0.30174902428265155}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - Max( ( MDR + ( Max( BR,( BR - FirstVNF_CPU ) ) + PN ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) ) ) )", "choosing": "( Min( ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * ( ( RCSe + MUM ) / MUM ) ) ,DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.9881889763779528, "obj2": 0.004795002059916402}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( FirstVNF_Mem_Server - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( MDR + ( PN + CRS ) ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - ( Max( MUR,RMSe ) + Min( DS ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.44291338582677164, "obj2": 0.35884307094907236}, {"determining": "( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * ( Max( PN,ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * ( Const - MDR ) ) - CRS ) ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( Max( DS,( DS * RMSe ) ),( MLU / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( Min( ( ( CS - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.015097145179631554}, {"determining": "( FirstVNF_RAM * ( CRS - ( ( ( Min( ( AMS + DDR ) ,( PN / ACS ) ) * ( ( ( ARS - FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / DDR ) ) - MDR ) / Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUM ),( RRSe * MUC ) ) / CS ) ) - Min( ( Min( DS ,RRSe ) / RCSe ) ,CS ) ) / MLU ) * DS ) + ( Min( RRSe ,( DS / MUM ) ) - Min( ( DS * MUM ) ,Max( ( MUM * ( RCSe + Max( CS,RRSe ) ) ),( MLU * ( Min( RRSe ,MUM ) - RRSe ) ) ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3320188680806898}, {"determining": "( Max( PN,ACS ) * ( FirstVNF_RAM - Const ) )", "choosing": "Max( ( Min( RMSe ,MLU ) / RMSe ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) )", "obj1": 0.6437007874015748, "obj2": 0.20015198424996009}, {"determining": "( ( DDR * CRS ) * ( Min( ( ( ( MRS + ( ( BR - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) * MDR ) / FirstVNF_Mem ) ,( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / DS ) + ( MUR + DS ) ),RCSe ),( ( DS - RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + ( MUR + ( RCSe * MUR ) ) ) ) ) ) / RMSe ) - ( RMSe / Max( MLU,RCSe ) ) )", "obj1": 0.8759842519685039, "obj2": 0.05222834456080096}, {"determining": "( Max( PN,ACS ) * ( ( ( MDR - ( ( ( AMS + RRS ) / Max( Min( FirstVNF_RAM ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) * ( FirstVNF_Mem - CRS ) ) - CRS ) )", "choosing": "( ( MLU + MUC ) / ( MUC * ( ( Max( Min( RMSe ,DS ),RCSe ) / ( ( Min( ( CS / RMSe ) ,MUM ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) * ( CS * CS ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3864381800906729}, {"determining": "( Max( PN,ACS ) * ( ( Max( BR,ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( RCSe,Min( RMSe ,DS ) ) ) ) - ( MUC / RRSe ) ) ,RRSe )", "obj1": 0.31496062992125984, "obj2": 0.5107569562230536}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * ( ( Const + Max( FirstVNF_CPU,ARS ) ) * AMS ) ) - CRS ) ),( ( MRS * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( ARS * ARS ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( RMSe ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7408465326314996}, {"determining": "( Max( PN,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - Const ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / RRSe ) / RCSe ) - ( MUC * ( ( ( DS / ( MLU + ( RCSe / Max( MUM,CS ) ) ) ) / ( ( Max( DS,( DS - RMSe ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ( Max( AMS,PN ) * ARS ) ,AMS ) * ( ( RRS + ( FirstVNF_CPU_Server * PN ) ) - DDR ) ) / FirstVNF_Mem ),Min( RRS ,( ( Min( FirstVNF_RAM ,( FirstVNF_Mem + ACS ) ) - Min( MDR ,RRS ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MLU * DS ),( ( MUM + CS ) / Max( CS,DS ) ) ) + ( ( RMSe + MUC ) / RCSe ) )", "obj1": 0.6003937007874016, "obj2": 0.23707863164702567}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * DS ) ) / ( Max( ( MUR + DS ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8476793234791293}, {"determining": "( ACS - Max( Max( ( Min( Max( PN,MRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * Max( FirstVNF_RAM,BR ) ),MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( DS / MLU ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5846456692913385, "obj2": 0.2419237417633837}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6867474752917255}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5444288518352349}, {"determining": "Max( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "( MUR / ( MUC * ( ( ( ( Min( RRSe ,CS ) / RRSe ) * MUC ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.664991502168658}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( ( ACS - Max( Max( FirstVNF_RAM,( ( FirstVNF_CPU_Server * PN ) - MDR ) ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,( RMSe + RRSe ) ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,Max( CS,RCSe ) ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.5849839246287125}, {"determining": "( ACS - Max( Max( ( Min( Max( PN,MRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * Max( FirstVNF_RAM,BR ) ),MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( CS * DS ) ),RCSe ),( ( DS * RMSe ) - ( DS / MLU ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5748031496062992, "obj2": 0.24785708975712153}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RCSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.3720578032384499}, {"determining": "( ACS - Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( Min( ( Const + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( ( ( MLU * ( DS + RCSe ) ) / MUR ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.562992125984252, "obj2": 0.25439627629806905}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.8503937007874016, "obj2": 0.05633058497131692}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( Max( ( ACS - Max( Max( Max( PN,ACS ),MRS ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( RMSe + RRSe ) ,( RMSe / CS ) ) - Min( MUM ,Max( Min( RMSe ,DS ),RCSe ) ) ) / CS ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - CS ) )", "obj1": 0.5551181102362205, "obj2": 0.26020850241609644}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( DS,Min( RMSe ,DS ) ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7891188954784989}, {"determining": "( FirstVNF_CPU - ( FirstVNF_CPU_Server + AMS ) )", "choosing": "Min( ( ( CS * ( ( MUR + ( Min( MUC ,( MUR + MLU ) ) - RMSe ) ) - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2952755905511811, "obj2": 0.5219752315786061}, {"determining": "( ( CRS + MRS ) * Max( Min( MRS ,Max( DDR,( FirstVNF_CPU_Server / PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( DS - RCSe ),Max( DS,RCSe ) ) + ( Max( MUC,CS ) - Min( MUM ,( CS - ( Min( RRSe ,( MLU * MLU ) ) - ( ( MUM * RMSe ) - CS ) ) ) ) ) ) - ( ( MUM / RRSe ) + ( MUC - ( MLU + ( CS + MUC ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.747260154675004}, {"determining": "( ( CRS * ( ( CRS - ACS ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / Min( ( ( ( CS * RMSe ) * MUC ) / RCSe ) ,( MLU + RMSe ) ) ) * DS ) ) / ( ( RRSe / MUM ) + DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8366198446478492}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( BR,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.1302316401176673}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.36811023622047245, "obj2": 0.4451412783590466}, {"determining": "Max( Min( Min( PN ,FirstVNF_RAM ) ,( FirstVNF_RAM * ( ( BR / Min( PN ,CRS ) ) * MDR ) ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( ( DDR * FirstVNF_CPU ) + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / RRSe ) * DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8314101463737565}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ( CRS * FirstVNF_Mem_Server ) ) - DDR ) ) / ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( Max( ( MUR + DS ),( ( MUM + RCSe ) / ( CS - DS ) ) ),( ( ( MUM + ( CS / RRSe ) ) - ( DS * CS ) ) - RMSe ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.6653543307086615, "obj2": 0.1766740540363899}, {"determining": "Max( Max( MDR,( PN + CRS ) ),( ( FirstVNF_RAM * AMS ) - ( ( ( FirstVNF_CPU_Server / DDR ) * ( CRS - AMS ) ) - Max( FirstVNF_Mem_Server,( FirstVNF_Mem + CRS ) ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( Min( CS ,( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( ( MLU + RMSe ) + MUC ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6556466733955632}, {"determining": "( Max( PN,( ARS * RRS ) ) * ( ( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * Max( Const,MDR ) ) - CRS ) )", "choosing": "( ( RCSe * Max( DS,( RRSe - RMSe ) ) ) - ( RRSe + RCSe ) )", "obj1": 0.6594488188976378, "obj2": 0.1877113496547402}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6136042514927428}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( MUM - MLU ) ) ,CS ) ) ),CS ) ) )", "obj1": 0.6712598425196851, "obj2": 0.1652780830085321}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MUM ) ) ,CS ) ) ),( DS + ( RCSe / MUR ) ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.43789367211352315}, {"determining": "( ACS - Max( Max( Const,( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) * ( DDR / FirstVNF_CPU ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( ( ( CS * ( ( CS * ( RMSe * RRSe ) ) - RMSe ) ) - CS ) ,( DS / MLU ) )", "obj1": 0.265748031496063, "obj2": 0.5643897242098929}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MUC ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.6988188976377953, "obj2": 0.14406960265027446}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.15623258494084757}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( BR,RRS ) ) ) ) / Const ) * Min( PN ,MDR ) )", "choosing": "( ( Max( Max( ( ( CS / ( ( RCSe / MUC ) + ( MUC * CS ) ) ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) + MUR ) ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.6364808078217272}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - DDR ) * Max( FirstVNF_Mem_Server,BR ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.234251968503937, "obj2": 0.597222157504777}, {"determining": "Max( ( MRS + ( CRS + PN ) ),Min( Min( FirstVNF_RAM ,( Max( Min( ACS ,DDR ),( DDR * DDR ) ) + RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( DS * ( Max( ( DS / DS ),MUC ) / ( ( MUC - Min( ( RRSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6728763008974887}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45547443002553445}, {"determining": "( ACS * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + ( Max( MUR,MUR ) + MLU ) ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.8326771653543307, "obj2": 0.06297804902515741}, {"determining": "( FirstVNF_RAM * ( Min( ACS ,FirstVNF_Mem_Server ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( MUC + DS ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6327901473638563}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4204076983595796}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.4256822244554971}, {"determining": "Max( ( MRS * Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( DDR + RRS ) ),MDR ) ),Min( Min( PN ,FirstVNF_RAM ) ,( FirstVNF_RAM * ( ( BR / Min( PN ,CRS ) ) * MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / CS ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6434123683263114}, {"determining": "( ( ( Const - FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) * ( CRS * ARS ) ) ) * Max( FirstVNF_CPU_Server,( Max( Const,CRS ) * Max( Max( FirstVNF_Mem_Server,RRS ),( ( Min( ( BR + ACS ) ,CRS ) + Min( Min( PN ,FirstVNF_CPU ) ,MDR ) ) * ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RCSe / ( ( DS * ( CS / ( ( Max( MLU,Max( RRSe,DS ) ) * ( Max( MUR,CS ) - Min( RRSe ,RRSe ) ) ) - ( RRSe - MUC ) ) ) ) * ( ( MLU * ( RMSe - MUM ) ) - ( CS + RRSe ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8207548111044064}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - ( Max( Min( ( DS / CS ) ,( ( DS - RCSe ) / Max( RRSe,Min( RCSe ,( MUR / MUC ) ) ) ) ),( DS * RCSe ) ) + ( DS - Min( MUR ,DS ) ) ) )", "obj1": 0.8464566929133859, "obj2": 0.057605027850450054}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5328903251163524}, {"determining": "Min( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) + FirstVNF_RAM ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) )", "obj1": 0.5334645669291339, "obj2": 0.2726252543076073}, {"determining": "( ACS - Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( Min( ( AMS + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( ( ( MLU * ( DS + RCSe ) ) / ( Max( RRSe,RRSe ) - Max( RRSe,CS ) ) ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.5098425196850394, "obj2": 0.28683142903972536}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,BR ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( MUM * RCSe ),MUR ) ) ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4204076983595796}, {"determining": "( ( CRS * ( ( FirstVNF_Mem_Server - RRS ) * ( DDR * ARS ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( ( RMSe / CS ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7709091891030556}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "Min( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - MDR ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( MUM - DS ) ) ) ) ) )", "obj1": 0.5275590551181102, "obj2": 0.27744142801784066}, {"determining": "( ( CRS * ( ( FirstVNF_Mem_Server - RRS ) * ( DDR * ARS ) ) ) * ( FirstVNF_CPU_Server * Max( ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,Const ) ) - Max( RRS,FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6556191644055754}, {"determining": "( Max( FirstVNF_CPU,ARS ) - Max( Max( FirstVNF_RAM,MRS ),( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - ( CS * ( ( ( ( MUM * ( ( MUC / RCSe ) / Min( MUR ,RRSe ) ) ) + ( ( MUC * MUR ) - ( MUM - ( DS / RMSe ) ) ) ) + DS ) / ( RMSe / ( ( ( MUM - Min( MUR ,MUC ) ) - RMSe ) / MUM ) ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3362864336140025}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.8188976377952756, "obj2": 0.07011553257744471}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( MUC * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( RMSe / CS ) + ( MUR + DS ) ) ) * DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8140748689401227}, {"determining": "( ( ( ( FirstVNF_Mem_Server - RRS ) * ( CRS * ARS ) ) * Min( Max( ( AMS / ARS ),Min( ( ( FirstVNF_Mem + ( FirstVNF_RAM / DDR ) ) * PN ) ,MRS ) ) ,( CRS + PN ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( ( RMSe / CS ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,( RMSe + DS ) ) * ( ( MUR / CS ) - RMSe ) ) - Min( ( ( MUM - CS ) + ( MUM * RCSe ) ) ,( Max( RRSe,RRSe ) - Max( MUC,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7527097853109137}, {"determining": "( Max( FirstVNF_Mem_Server,Const ) - ( BR / DDR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MUM ) ) ,CS ) ) ),( DS + ( RCSe / MUR ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45547443002553445}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,FirstVNF_Mem_Server ) ) ),( ACS - FirstVNF_RAM_Server ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( ( MUM - MUR ) * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( ( DS * RMSe ),CS ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7933196544400228}, {"determining": "( Max( PN,ACS ) * ( Min( ( Min( ARS ,MDR ) - MDR ) ,Min( DDR ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( MUC ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( MUC - RRSe ) - Min( ( CS / DS ) ,( Max( CS,CS ) * ( RRSe / MUR ) ) ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.9330708661417323, "obj2": 0.025597590893452427}, {"determining": "( ( ARS - FirstVNF_CPU ) - ( ( MRS - CRS ) * MDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( RCSe,MUC ) ) + MUC ) - Min( CS ,Max( ( ( RMSe + CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4431626064639917}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( CS - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021376887961162955}, {"determining": "Max( ( MRS - ( ( RRS + CRS ) - ACS ) ),Min( Max( FirstVNF_RAM,PN ) ,( ( ( FirstVNF_CPU_Server / Max( FirstVNF_Mem_Server,PN ) ) * ( BR - BR ) ) * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( MUR,Min( RRSe ,( ( DS + DS ) / RMSe ) ) ) ) ) - ( RMSe * ( MUM * Min( MUC ,MUC ) ) ) ) ,Max( ( ( ( DS * MUM ) / DS ) - ( ( RCSe * RRSe ) - RRSe ) ),MLU ) )", "obj1": 0.2204724409448819, "obj2": 0.6243710482397632}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( BR,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.1302316401176673}, {"determining": "( ACS - Max( ( MRS + ( RRS * BR ) ),Max( Max( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( RMSe ,( MUR / CS ) ) - Min( MUM ,Max( Min( RMSe ,DS ),RCSe ) ) ) / CS ) * DS ) + ( Min( MUR ,MUC ) - CS ) )", "obj1": 0.5196850393700787, "obj2": 0.27947600204806333}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6043459415710875}, {"determining": "( FirstVNF_RAM * ( ( ( MDR * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / MUC ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.9133858267716536, "obj2": 0.03323122674657636}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( ( FirstVNF_Mem_Server - RRS ),( ARS - Const ) ) + Max( ( MRS - RRS ),( MDR * FirstVNF_Mem_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( Max( DS,( DS * RMSe ) ),( MLU / ( CS - DS ) ) ) ) ) ),( ( Min( RRSe ,MUM ) / RRSe ) / ( ( RMSe + RCSe ) + ( Min( ( ( CS - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07856728444011224}, {"determining": "( Max( PN,( MDR * BR ) ) * ( Max( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ),( Const - MDR ) ) - CRS ) )", "choosing": "( Min( ( Min( ( RCSe + MUC ) ,( MLU * RMSe ) ) / ( ( ( MLU * ( DS + Min( MUC ,MLU ) ) ) / MUR ) - ( RCSe / RCSe ) ) ) ,MUM ) - ( RRSe + RCSe ) )", "obj1": 0.6594488188976378, "obj2": 0.1877113496547402}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.7204724409448819, "obj2": 0.13354998625454848}, {"determining": "( Max( PN,Const ) * ( ( ( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( CRS + FirstVNF_CPU_Server ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / DS ) - Min( CS ,( MUR + RCSe ) ) )", "obj1": 0.7618110236220472, "obj2": 0.0972666483987256}, {"determining": "( ( ( ( FirstVNF_Mem_Server - RRS ) * ( DDR * ARS ) ) * Min( Max( ( AMS / ARS ),Min( MRS ,( Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) * PN ) ) ) ,( AMS * FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( ( RMSe / CS ) + ( ( Min( RRSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,( RMSe + DS ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( RRSe,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7608109068962317}, {"determining": "Max( ( ( CRS + ( FirstVNF_CPU * FirstVNF_CPU ) ) + MDR ),( MRS - ( FirstVNF_CPU_Server / PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) * DS ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6867474752917255}, {"determining": "( Max( Min( CRS ,ARS ),FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( ( RCSe - ( RCSe * MUM ) ) + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( Min( RMSe ,CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7736220472440944, "obj2": 0.0855584010936142}, {"determining": "( ACS - Max( ( ACS * Min( FirstVNF_CPU ,( RRS - CRS ) ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( MUM / ( ( MUC / ( ( RMSe / DS ) * CS ) ) - ( Max( RRSe,( RCSe + MUM ) ) * Min( CS ,MUC ) ) ) ) * ( Max( CS,( MUM / MUC ) ) - MUC ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5710836047267743}, {"determining": "( FirstVNF_RAM * ( ( ( MDR - ( ( FirstVNF_CPU_Server / AMS ) * ( FirstVNF_Mem_Server / RRS ) ) ) * ( ACS * ARS ) ) - CRS ) )", "choosing": "( ( ( ( ( RMSe / ( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( RRSe / Min( Min( MLU ,RRSe ) ,MUM ) ) ) ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3320188680806898}, {"determining": "( ( CRS * ( ( CRS - ACS ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / Min( ( ( ( CS * RMSe ) * MUC ) / RCSe ) ,( MLU + RMSe ) ) ) * DS ) ) / ( ( RRSe / MUM ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8068882342670297}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5328903251163524}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_CPU_Server ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( DS ,MUR ) + ( ( ( ( MLU * MUR ) - MUC ) * Max( Max( ( DS / Min( DS ,MUC ) ),MLU ),MLU ) ) * MUR ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( MUR,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.905511811023622, "obj2": 0.03562666763694015}, {"determining": "( ACS - ( Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),MRS ) - ( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,MLU ) ,MUM ) ) / RMSe ) - ( Max( Min( ( DS / CS ) ,( ( DS - RCSe ) / Max( ( ( RRSe + MLU ) - ( RMSe / RCSe ) ),Min( RCSe ,( MUR / MUC ) ) ) ) ),( DS * RCSe ) ) + ( DS - Min( MUR ,DS ) ) ) )", "obj1": 0.515748031496063, "obj2": 0.2844533310034196}, {"determining": "( ( CRS * ( ( FirstVNF_Mem_Server - RRS ) * ( DDR * ARS ) ) ) * ( FirstVNF_CPU_Server * Max( ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,Const ) ) - Max( RRS,FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe / CS ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MLU / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7629154796592115}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( Max( RRS,BR ) / FirstVNF_Mem_Server ) + AMS ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - CRS ) )", "choosing": "( Max( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ),DS ) + ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( RRSe + RCSe ) ) )", "obj1": 0.7559055118110236, "obj2": 0.10048741816316316}, {"determining": "Min( ( ACS - Max( Max( ( Max( Max( FirstVNF_Mem,BR ),MDR ) * PN ),MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( AMS - Const ) * ( Const - ( FirstVNF_RAM / AMS ) ) ) - CRS ) ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,Max( ( Min( MLU ,RCSe ) * Max( ( RCSe * ( Min( RMSe ,( RRSe / MUR ) ) / MUR ) ),( ( MUR - RRSe ) - RRSe ) ) ),( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( ( MUR / DS ) - DS ) ) ) ) ) )", "obj1": 0.5393700787401575, "obj2": 0.2684737797522021}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RCSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.37631229875605526}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( DS / ( Min( RRSe ,( MUC * MUM ) ) / RRSe ) ) - Min( ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) / DS ) ,CS ) )", "obj1": 0.8031496062992126, "obj2": 0.07424438679671375}], "17": [{"determining": "( ( FirstVNF_RAM_Server * PN ) * ( CRS * ( ( FirstVNF_RAM_Server + Min( MDR ,MDR ) ) / ( ARS * ARS ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM - ( CS / RMSe ) ) / Min( RMSe ,CS ) ) - Max( RMSe,( ( CS + RRSe ) * RMSe ) ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) * ( CRS * ARS ) ) ) * Max( FirstVNF_CPU_Server,( Max( Const,CRS ) * Max( Max( FirstVNF_Mem_Server,RRS ),( ( Min( ( BR + ACS ) ,CRS ) + Min( Min( PN ,FirstVNF_CPU ) ,MDR ) ) * ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS - MUM ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ,( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( CS ,CS ) / Max( MUC,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Max( ( PN * Const ),Min( RRS ,FirstVNF_CPU ) ) / Const ),FirstVNF_CPU_Server ) - ACS ) - ( FirstVNF_Mem_Server * ( CRS + MDR ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Min( ( DS / ( MLU + ( Min( ( ( MUR * RMSe ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) / MUM ) ) ) ,RCSe ) )", "obj1": 0.08070866141732283, "obj2": 0.869045109580726}, {"determining": "( ( DDR * CRS ) * ( Min( ( ( ( MRS + ( ( BR - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) * MDR ) / FirstVNF_Mem ) ,( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / DS ) + ( MUR + DS ) ),RCSe ),( ( DS - RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + ( MUR + ( RCSe * MUR ) ) ) ) ) ) / RMSe ) - ( RMSe / Max( MLU,RCSe ) ) )", "obj1": 0.8759842519685039, "obj2": 0.05222834456080096}, {"determining": "( ACS - Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,BR ) ),Max( RRS,Max( ( ( DDR / PN ) - ( ARS - FirstVNF_CPU_Server ) ),RRS ) ) ) )", "choosing": "Max( ( CS * ( DS - ( ( RMSe + RRSe ) - Max( ( ( RMSe * CS ) + ( Min( DS ,RCSe ) + RRSe ) ),( ( MUM + DS ) / ( CS - DS ) ) ) ) ) ),( ( RCSe * ( DS / MUR ) ) / ( ( RMSe + RCSe ) + ( RCSe - RCSe ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.2113462647222811}, {"determining": "Max( PN,( ( ARS - MRS ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( ( MUR + ( MUC + RMSe ) ) / RMSe ) ) / ( Max( RCSe,MUR ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) * DS ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7175611086957804}, {"determining": "( ( ( ( FirstVNF_Mem_Server - RRS ) * ( CRS * ARS ) ) * Min( Max( ( AMS / ARS ),Min( ( ( FirstVNF_Mem + ( FirstVNF_RAM / DDR ) ) * PN ) ,MRS ) ) ,( CRS + PN ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( ( RMSe / CS ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,( RMSe + DS ) ) * ( ( MUR / CS ) - RMSe ) ) - Min( ( ( MUM - CS ) + ( MUM * RCSe ) ) ,( Max( RRSe,RRSe ) - Max( MUC,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7527097853109137}, {"determining": "( ACS - Max( MRS,( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + CRS ) * Max( Max( RRS,FirstVNF_RAM ),( ( Min( CRS ,( Const + ACS ) ) * ( FirstVNF_CPU_Server - BR ) ) + ( FirstVNF_CPU_Server * ACS ) ) ) ) ) )", "choosing": "( ( ( MLU + CS ) / ( ( Min( RRSe ,MUM ) / ( MUR / Min( CS ,Min( MLU ,RMSe ) ) ) ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - MUR ) ,( RMSe + DS ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( RCSe - DS ) ,( MUR / DS ) ) ,( Max( RRSe,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.15551181102362205, "obj2": 0.714075298938711}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.2219582556333246}, {"determining": "Max( ( ( ( ( AMS + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MUM ) ) ,CS ) ) ),( DS + ( RCSe / MUR ) ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.3980590131748657}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( FirstVNF_Mem_Server - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( MDR + ( PN + CRS ) ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - ( Max( MUR,RMSe ) + Min( DS ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.44291338582677164, "obj2": 0.35884307094907236}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( Max( PN,ACS ) * ( FirstVNF_RAM - Const ) )", "choosing": "Max( ( Min( RMSe ,MLU ) / RMSe ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) )", "obj1": 0.6437007874015748, "obj2": 0.20015198424996009}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( BR,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - ( FirstVNF_RAM * AMS ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + MLU ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.984251968503937, "obj2": 0.00940486587606326}, {"determining": "( Max( PN,ACS ) * ( ( Max( BR,ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( RCSe,Min( RMSe ,DS ) ) ) ) - ( MUC / RRSe ) ) ,RRSe )", "obj1": 0.31496062992125984, "obj2": 0.5107569562230536}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ( Max( AMS,PN ) * ARS ) ,AMS ) * ( ( RRS + ( FirstVNF_CPU_Server * PN ) ) - DDR ) ) / FirstVNF_Mem ),Min( RRS ,( ( Min( FirstVNF_RAM ,( FirstVNF_Mem + ACS ) ) - Min( MDR ,RRS ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MLU * DS ),( ( MUM + CS ) / Max( CS,DS ) ) ) + ( ( RMSe + MUC ) / RCSe ) )", "obj1": 0.6003937007874016, "obj2": 0.23707863164702567}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( CRS ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RMSe / CS ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.7381889763779528, "obj2": 0.11696695626084729}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - DDR ) * Max( FirstVNF_Mem_Server,BR ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.234251968503937, "obj2": 0.597222157504777}, {"determining": "( ( CRS * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7648218855338158}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( ( ACS - Max( Max( FirstVNF_RAM,( ( FirstVNF_CPU_Server * PN ) - MDR ) ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,( RMSe + RRSe ) ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,Max( CS,RCSe ) ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.5849839246287125}, {"determining": "( ACS - Max( Max( ( Min( Max( PN,MRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * Max( FirstVNF_RAM,BR ) ),MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( DS / MLU ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5846456692913385, "obj2": 0.2419237417633837}, {"determining": "( ( ( ( FirstVNF_Mem_Server - RRS ) * ( DDR * ARS ) ) * Min( Max( ( AMS / ARS ),Min( MRS ,( Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) * PN ) ) ) ,( AMS * FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( ( RMSe / CS ) + ( ( Min( RRSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,( RMSe + DS ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( RRSe,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7816501819879688}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4654155679063897}, {"determining": "( FirstVNF_RAM * ( CRS - ( ( ( Min( ( AMS + DDR ) ,( PN / ACS ) ) * ( ( ( ARS - FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / DDR ) ) - MDR ) / Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUM ),( RRSe * MUC ) ) / CS ) ) - Min( ( Min( DS ,RRSe ) / RCSe ) ,CS ) ) / MLU ) * DS ) + ( Min( RRSe ,( DS / MUM ) ) - Min( ( DS * MUM ) ,Max( ( MUM * ( RCSe + Max( CS,RRSe ) ) ),( MLU * ( Min( RRSe ,MUM ) - RRSe ) ) ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3320188680806898}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MUC ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.6988188976377953, "obj2": 0.14406960265027446}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6867474752917255}, {"determining": "( Max( PN,ACS ) * ( ( ( MDR - ( ( ( AMS + RRS ) / Max( Min( FirstVNF_RAM ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) * ( FirstVNF_Mem - CRS ) ) - CRS ) )", "choosing": "( ( MLU + MUC ) / ( MUC * ( ( Max( Min( RMSe ,DS ),RCSe ) / ( ( Min( ( CS / RMSe ) ,MUM ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) * ( CS * CS ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3864381800906729}, {"determining": "( ( CRS * ( ( CRS - ACS ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / Min( ( ( ( CS * RMSe ) * MUC ) / RCSe ) ,( MLU + RMSe ) ) ) * DS ) ) / ( ( RRSe / MUM ) + DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8366198446478492}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13554869303749117}, {"determining": "( ( Const + ( RRS / ( DDR - Min( FirstVNF_RAM ,DDR ) ) ) ) * ( Max( PN,ACS ) * ( ( ( ( ( MRS + ( ARS * FirstVNF_RAM ) ) - MDR ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * ( Const - MDR ) ) - CRS ) ) )", "choosing": "Max( ( CS * ( ( Max( ( RMSe * RCSe ),DS ) * ( MUR / ( Max( MLU,MUR ) - MUR ) ) ) - ( ( RMSe + RRSe ) - Max( Max( DS,Max( Min( RMSe ,CS ),Max( MUC,MUM ) ) ),( MLU / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( MUC + Min( ( ( CS - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.015097145179631554}, {"determining": "( ( ARS - FirstVNF_CPU ) - ( ( MRS - CRS ) * MDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( RCSe,MUC ) ) + MUC ) - Min( CS ,Max( ( ( RMSe + CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4431626064639917}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_CPU_Server ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( DS ,MUR ) + ( ( ( ( MLU * MUR ) - MUC ) * Max( Max( ( DS / Min( DS ,MUC ) ),MLU ),MLU ) ) * MUR ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( MUR,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.905511811023622, "obj2": 0.03562666763694015}, {"determining": "( Max( FirstVNF_CPU,ARS ) - Max( Max( FirstVNF_RAM,MRS ),( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - ( CS * ( ( ( ( MUM * ( ( MUC / RCSe ) / Min( MUR ,RRSe ) ) ) + ( ( MUC * MUR ) - ( MUM - ( DS / RMSe ) ) ) ) + DS ) / ( RMSe / ( ( ( MUM - Min( MUR ,MUC ) ) - RMSe ) / MUM ) ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3362864336140025}, {"determining": "( Max( PN,ACS ) * ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( DS / ( Min( RRSe ,( MUC * MUM ) ) / RRSe ) ) - Min( ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) / DS ) ,CS ) )", "obj1": 0.8031496062992126, "obj2": 0.07424438679671375}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2952755905511811, "obj2": 0.5219752315786061}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,FirstVNF_Mem_Server ) ) ),( ACS - FirstVNF_RAM_Server ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( ( MUM - MUR ) * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( ( DS * RMSe ),CS ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7933196544400228}, {"determining": "( FirstVNF_RAM * ( Min( ACS ,FirstVNF_Mem_Server ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( MUC + DS ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6327901473638563}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,( Min( CRS ,BR ) / AMS ) ) ) - CRS ) )", "choosing": "Min( ( ( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) * Max( RRSe,DS ) ) - CS ) ,MLU )", "obj1": 0.3228346456692913, "obj2": 0.510011523497531}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( CRS ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( MUC / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7421259842519685, "obj2": 0.10858415486496209}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4204076983595796}, {"determining": "Max( ( MRS + ( CRS + PN ) ),Min( Min( FirstVNF_RAM ,( Max( Min( ACS ,DDR ),( DDR * DDR ) ) + RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( DS * ( Max( ( DS / DS ),MUC ) / ( ( MUC - Min( ( RRSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6728763008974887}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - RRSe ) ) * DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3754581795740123}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server - RRS ) * ( DDR * ARS ) ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * DS ) ) / ( Max( ( MUR + DS ),DS ) + DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8240518478736626}, {"determining": "Max( ( MRS - ( ( RRS + CRS ) - ACS ) ),Min( Max( FirstVNF_RAM,PN ) ,( ( ( FirstVNF_CPU_Server / Max( FirstVNF_Mem_Server,PN ) ) * ( BR - BR ) ) * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( MUR,Min( RRSe ,( ( DS + DS ) / RMSe ) ) ) ) ) - ( RMSe * ( MUM * Min( MUC ,MUC ) ) ) ) ,Max( ( ( ( DS * MUM ) / DS ) - ( ( RCSe * RRSe ) - RRSe ) ),MLU ) )", "obj1": 0.2204724409448819, "obj2": 0.6243710482397632}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12989540562200355}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6136042514927428}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4654155679063897}, {"determining": "( ACS - Max( Max( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ),MRS ),Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( MUR / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.25, "obj2": 0.5771221966843241}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,RRS ) ) * FirstVNF_CPU )", "choosing": "( ( RMSe + Max( Max( ( ( ( Min( MLU ,MLU ) - ( RMSe + RCSe ) ) + MUM ) * MUR ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( Min( MUR ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ),MUM ) ) ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6929133858267716, "obj2": 0.15201711063489096}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.8503937007874016, "obj2": 0.05633058497131692}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RCSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.3720578032384499}, {"determining": "( ( Min( Max( ( AMS / ARS ),Min( MRS ,( ( FirstVNF_RAM * ACS ) * PN ) ) ) ,( AMS * FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server - RRS ) * ( DDR * ARS ) ) ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) / RCSe ) / RCSe ) + ( RMSe / CS ) ) / ( MUC * ( Max( RCSe,( MUR * ( ( CS * MUR ) / RRSe ) ) ) * DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7572044974539978}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.905511811023622, "obj2": 0.03562666763694015}, {"determining": "( ACS - Max( Max( ( ACS - FirstVNF_Mem_Server ),( ( FirstVNF_CPU + ( DDR * ARS ) ) * MDR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,( RMSe * RRSe ) ) ) - ( Max( RMSe,CS ) * Min( CS ,RRSe ) ) ) ) * DS ) ) )", "obj1": 0.4881889763779528, "obj2": 0.30172994499495986}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( ( Min( Const ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - FirstVNF_RAM ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUR - Min( RCSe ,( MUC - ( DS + RCSe ) ) ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4204076983595796}, {"determining": "( Max( PN,( ARS * RRS ) ) * ( ( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * Max( Const,MDR ) ) - CRS ) )", "choosing": "( ( RCSe * Max( DS,( RRSe - RMSe ) ) ) - ( RRSe + RCSe ) )", "obj1": 0.6594488188976378, "obj2": 0.1877113496547402}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( ARS * Min( Max( FirstVNF_CPU_Server,MDR ) ,ARS ) ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( Min( MUC ,Min( DS ,MLU ) ) + RMSe ) ) ) * DS ) ) / ( Max( Max( MUR,DS ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8476793234791293}, {"determining": "( ( ( Const - FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) * ( CRS * ARS ) ) ) * Max( FirstVNF_CPU_Server,( Max( Const,CRS ) * Max( Max( FirstVNF_Mem_Server,RRS ),( ( Min( ( BR + ACS ) ,CRS ) + Min( Min( PN ,FirstVNF_CPU ) ,MDR ) ) * ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( RCSe / ( ( DS * ( CS / ( ( Max( MLU,Max( RRSe,DS ) ) * ( Max( MUR,CS ) - Min( RRSe ,RRSe ) ) ) - ( RRSe - MUC ) ) ) ) * ( ( MLU * ( RMSe - MUM ) ) - ( CS + RRSe ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8207548111044064}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "Max( Max( MDR,( CRS + ( MRS + ( ( ( DDR / FirstVNF_CPU_Server ) * ( FirstVNF_Mem + CRS ) ) * BR ) ) ) ),Min( Min( FirstVNF_RAM ,ACS ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( ( Max( ( DS / DS ),MUC ) / ( ( MUC / Min( ( RMSe / DS ) ,RCSe ) ) - ( RMSe * Min( CS ,( RRSe + DS ) ) ) ) ) * DS ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6583196811854028}, {"determining": "( FirstVNF_RAM * ( CRS - ( ( MDR * ( ( ( FirstVNF_CPU_Server * ( MRS * Const ) ) - MDR ) * ( ACS + FirstVNF_Mem_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( CS * ( MUM + Min( MUC ,MUC ) ) ),CS ) ,( DS / RCSe ) )", "obj1": 0.9192913385826772, "obj2": 0.029804768224765483}, {"determining": "( ACS - Max( ( ACS * Min( FirstVNF_CPU ,( RRS - CRS ) ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( MUM / ( ( MUC / ( ( RMSe / DS ) * CS ) ) - ( Max( RRSe,( RCSe + MUM ) ) * Min( CS ,MUC ) ) ) ) * ( Max( CS,( MUM / MUC ) ) - MUC ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5710836047267743}, {"determining": "( Max( Min( CRS ,ARS ),FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( ( RCSe - ( RCSe * MUM ) ) + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( Min( RMSe ,CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7736220472440944, "obj2": 0.0855584010936142}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( MRS - RRS ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10197104995897997}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( BR,RRS ) ) ) ) / Const ) * Min( PN ,MDR ) )", "choosing": "( ( Max( Max( ( ( CS / ( ( RCSe / MUC ) + ( MUC * CS ) ) ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) + MUR ) ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.6364808078217272}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( MUM - MUC ) ) ,CS ) ) ),CS ) ) )", "obj1": 0.41338582677165353, "obj2": 0.39709844661885724}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( Max( ( ACS - Max( Max( Max( PN,ACS ),MRS ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( RMSe + RRSe ) ,( RMSe / CS ) ) - Min( MUM ,Max( Min( RMSe ,DS ),RCSe ) ) ) / CS ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - CS ) )", "obj1": 0.5551181102362205, "obj2": 0.26020850241609644}, {"determining": "( ( CRS * ( ( CRS - ACS ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / Min( ( ( ( CS * RMSe ) * MUC ) / RCSe ) ,( MLU + RMSe ) ) ) * DS ) ) / ( ( RRSe / MUM ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8068882342670297}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5328903251163524}, {"determining": "( ACS - Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( Min( ( Const + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( ( ( MLU * ( DS + RCSe ) ) / MUR ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.562992125984252, "obj2": 0.25439627629806905}, {"determining": "( ACS - Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( Min( ( Const + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe / ( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( RRSe / Min( Min( MLU ,RRSe ) ,MUM ) ) ) ) ) ) )", "obj1": 0.5236220472440944, "obj2": 0.27665460253644636}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / MUC ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5488726417498894}, {"determining": "Max( ( Min( DDR ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server * CRS ) ),( FirstVNF_Mem_Server / CRS ) )", "choosing": "( ( RCSe / ( RMSe / RCSe ) ) - Max( Min( MLU ,DS ),( CS / ( MUC / CS ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6496102768789648}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.36023622047244097, "obj2": 0.45362380155670223}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( RRSe / ( MUC / ( ( CS / ( ( CS + RRSe ) - ( RRSe + RMSe ) ) ) * DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8083286446895296}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( ( ( MLU * ( DS + RCSe ) ) / ( Max( RRSe,RRSe ) - Max( RRSe,CS ) ) ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.9448818897637795, "obj2": 0.01999999069321093}, {"determining": "( ACS - Max( Max( Const,( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) * ( DDR / FirstVNF_CPU ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( ( ( CS * ( ( CS * ( RMSe * RRSe ) ) - RMSe ) ) - CS ) ,( DS / MLU ) )", "obj1": 0.265748031496063, "obj2": 0.5643897242098929}, {"determining": "Max( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "( MUR / ( MUC * ( ( ( ( Min( RRSe ,CS ) / RRSe ) * MUC ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.664991502168658}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.7204724409448819, "obj2": 0.13354998625454848}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) ) ) )", "choosing": "( ( ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.9881889763779528, "obj2": 0.004795002059916401}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.6751968503937008, "obj2": 0.16266904865915072}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "Max( ( MRS + ( CRS + PN ) ),Min( Min( FirstVNF_RAM ,( Max( Min( ACS ,DDR ),( DDR * DDR ) ) + RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( DS * ( Max( ( DS / DS ),MUC ) / ( ( MUC - Min( ( RRSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6852024137402379}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ( CRS * FirstVNF_Mem_Server ) ) - DDR ) ) / ( Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) - CRS ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( MUM + ( CS / RMSe ) ) / Min( RMSe ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.5039370078740157, "obj2": 0.289397349956564}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( ( FirstVNF_Mem_Server - RRS ),( ARS - Const ) ) + Max( ( MRS - RRS ),( MDR * FirstVNF_Mem_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( Max( DS,( DS * RMSe ) ),( MLU / ( CS - DS ) ) ) ) ) ),( ( Min( RRSe ,MUM ) / RRSe ) / ( ( RMSe + RCSe ) + ( Min( ( ( CS - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07856728444011224}, {"determining": "( ACS - Max( Max( ( Min( Max( PN,MRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) * Max( FirstVNF_RAM,BR ) ),MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( CS * DS ) ),RCSe ),( ( DS * RMSe ) - ( DS / MLU ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5688976377952756, "obj2": 0.25320285711837404}, {"determining": "Min( ( ACS - Max( Max( ( Max( MDR,Max( FirstVNF_Mem,BR ) ) * PN ),MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( MUM + DS ) / ( ( MUR / DS ) - DS ) ) ) ) ) )", "obj1": 0.5393700787401575, "obj2": 0.2684737797522021}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ( ( ( AMS + RRS ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + Max( Min( RMSe ,DS ),RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.9291338582677166, "obj2": 0.026173825170255703}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5328903251163524}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5444288518352349}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * ( Max( PN,ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * ( Const - MDR ) ) - CRS ) ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( Max( DS,( DS * RMSe ) ),( MLU / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( Min( ( ( CS - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.015097145179631554}, {"determining": "( FirstVNF_CPU - ( FirstVNF_CPU_Server + AMS ) )", "choosing": "Min( ( ( CS * ( ( MUR + ( Min( MUC ,( MUR + MLU ) ) - RMSe ) ) - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2952755905511811, "obj2": 0.5219752315786061}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),( FirstVNF_RAM_Server - ( ACS + Max( ( AMS + FirstVNF_RAM ),( ( FirstVNF_CPU - FirstVNF_RAM ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( Max( MUC,RRSe ) * DS ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6043459415710875}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) ),( RRS + ( DDR + CRS ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,RCSe ) + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + RRSe ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.6614173228346457, "obj2": 0.17877735211991858}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.8149606299212598, "obj2": 0.07132476729062234}, {"determining": "( Max( FirstVNF_Mem,Max( ( ACS - Max( Max( FirstVNF_RAM,( ( FirstVNF_Mem * PN ) - Const ) ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) - ACS )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,( Max( RCSe,RCSe ) + CS ) ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,( CS - RCSe ) ) ) ) )", "obj1": 0.2618110236220472, "obj2": 0.566748857139796}], "18": [{"determining": "( ( ( Const - FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) * ( CRS * ARS ) ) ) * Max( FirstVNF_CPU_Server,( Max( Const,CRS ) * Max( Max( FirstVNF_Mem_Server,RRS ),( ( Min( ( BR + ACS ) ,CRS ) + Min( Min( PN ,FirstVNF_CPU ) ,MDR ) ) * ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * PN ) * ( CRS * ( ( FirstVNF_RAM_Server + Min( MDR ,MDR ) ) / ( ARS * ARS ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM - ( CS / RMSe ) ) / Min( RMSe ,CS ) ) - Max( RMSe,( ( CS + RRSe ) * RMSe ) ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Max( ( PN * Const ),Min( RRS ,FirstVNF_CPU ) ) / Const ),FirstVNF_CPU_Server ) - ACS ) - ( FirstVNF_Mem_Server * ( CRS + MDR ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Min( ( DS / ( MLU + ( Min( ( ( MUR * RMSe ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) / MUM ) ) ) ,RCSe ) )", "obj1": 0.08070866141732283, "obj2": 0.869045109580726}, {"determining": "( ( DDR * CRS ) * ( Min( ( ( ( MRS + ( ( BR - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) * MDR ) / FirstVNF_Mem ) ,( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / DS ) + ( MUR + DS ) ),RCSe ),( ( DS - RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + ( MUR + ( RCSe * MUR ) ) ) ) ) ) / RMSe ) - ( RMSe / Max( MLU,RCSe ) ) )", "obj1": 0.8759842519685039, "obj2": 0.05222834456080096}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.8149606299212598, "obj2": 0.07132476729062234}, {"determining": "( Max( ACS,PN ) * ( ARS - ARS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR - DS ) ),RCSe ),( ( DS - RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + ( MUR / Max( CS,MLU ) ) ) ) ) ) / RMSe ) - ( MUC * MUR ) )", "obj1": 0.639763779527559, "obj2": 0.20817939611581315}, {"determining": "( ( ( FirstVNF_CPU / FirstVNF_CPU ) * ( ( MRS * Min( ( Min( ACS ,AMS ) / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem - Max( AMS,ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / ( MUC + MUC ) ) - ( ( DS / MUC ) - ( MLU + RMSe ) ) ) ) * DS ) ) / RRSe )", "obj1": 0.13188976377952755, "obj2": 0.7513182969026277}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RRSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5846456692913385, "obj2": 0.23409151793067162}, {"determining": "Max( ( Max( FirstVNF_Mem,( CRS - PN ) ) + ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * ( ( BR * BR ) / DDR ) ) ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( Max( RMSe,DS ) ,CS ) ) - Max( MUR,RCSe ) ) ) * ( RCSe + DS ) ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7175611086957804}, {"determining": "( Max( ( MRS - ( FirstVNF_CPU_Server * PN ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.2219582556333246}, {"determining": "( ( ARS - FirstVNF_CPU ) - ( ( MRS - CRS ) * MDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( RCSe,MUC ) ) + MUC ) - Min( CS ,Max( ( ( RMSe + CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4431626064639917}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( DS / ( Min( RRSe ,( MUC * MUM ) ) / RRSe ) ) - Min( ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * ( RMSe - RCSe ) ) ) ) / DS ) ,CS ) )", "obj1": 0.9015748031496063, "obj2": 0.036082036927508214}, {"determining": "( ACS - Max( MRS,( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + CRS ) * Max( Max( RRS,FirstVNF_RAM ),( ( Min( CRS ,( Const + ACS ) ) * ( FirstVNF_CPU_Server - BR ) ) + ( FirstVNF_CPU_Server * ACS ) ) ) ) ) )", "choosing": "( ( ( MLU + CS ) / ( ( Min( RRSe ,MUM ) / ( MUR / Min( CS ,Min( MLU ,RMSe ) ) ) ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - MUR ) ,( RMSe + DS ) ) * ( Max( MUR,CS ) - RMSe ) ) - Min( Min( ( RCSe - DS ) ,( MUR / DS ) ) ,( Max( RRSe,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.15551181102362205, "obj2": 0.714075298938711}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * DS ) ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.8223769536825655}, {"determining": "Max( ( ( ( ( Min( ( Min( ACS ,AMS ) / FirstVNF_CPU ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MLU ) ) ,CS ) ) ),( DS + ( RCSe / MUR ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4040094208490245}, {"determining": "( FirstVNF_CPU_Server * ( ( ( ( ( AMS + DDR ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) )", "obj1": 0.6751968503937008, "obj2": 0.16217691649575697}, {"determining": "( FirstVNF_RAM * ( CRS - ( ( ( Min( ( AMS + DDR ) ,( PN / ACS ) ) * ( ( ( ARS - FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / DDR ) ) - MDR ) / Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUM ),( RRSe * MUC ) ) / CS ) ) - Min( ( Min( DS ,RRSe ) / RCSe ) ,CS ) ) / MLU ) * DS ) + ( Min( RRSe ,( DS / MUM ) ) - Min( ( DS * MUM ) ,Max( ( MUM * ( RCSe + Max( CS,RRSe ) ) ),( MLU * ( Min( RRSe ,MUM ) - RRSe ) ) ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3320188680806898}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - ( Max( CRS,FirstVNF_CPU ) * ( Min( Min( BR ,CRS ) ,FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( Max( Min( ( ( RRSe + ( Min( RRSe ,RMSe ) - ( MUR / MUM ) ) ) + RRSe ) ,( MLU / RCSe ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.8503937007874016, "obj2": 0.05633058497131692}, {"determining": "( Max( PN,ACS ) * ( FirstVNF_RAM - Const ) )", "choosing": "Max( ( Min( RMSe ,MLU ) / RMSe ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) )", "obj1": 0.6437007874015748, "obj2": 0.20015198424996009}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,FirstVNF_Mem_Server ) ) ),( ACS - FirstVNF_RAM_Server ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( ( MUM - MUR ) * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( ( DS * RMSe ),CS ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7933196544400228}, {"determining": "( Max( PN,( ARS * RRS ) ) * ( ( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * Max( Const,MDR ) ) - CRS ) )", "choosing": "( ( RCSe * Max( DS,( RRSe - RMSe ) ) ) - ( RRSe + RCSe ) )", "obj1": 0.6594488188976378, "obj2": 0.1877113496547402}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.8503937007874016, "obj2": 0.05633058497131692}, {"determining": "( FirstVNF_RAM * ( ( ( ( Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,CS ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MUC ) ) ) ,Max( ( MUM * ( RCSe + Max( RRSe,CS ) ) ),( MLU * DS ) ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09911912820748627}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - DDR ) * Max( FirstVNF_Mem_Server,BR ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.234251968503937, "obj2": 0.597222157504777}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,RCSe ) + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + RRSe ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.36023622047244097, "obj2": 0.45236257421813264}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6867474752917255}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.5393700787401575, "obj2": 0.26401468673245937}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,RRS ) ) * FirstVNF_CPU )", "choosing": "( ( RMSe + Max( Max( ( ( ( Min( MLU ,MLU ) - ( RMSe + RCSe ) ) + MUM ) * MUR ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( Min( MUR ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ),MUM ) ) ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6929133858267716, "obj2": 0.15201711063489096}, {"determining": "( ( ( AMS + DDR ) * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7722209089412958}, {"determining": "( Max( Min( CRS ,ARS ),FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( ( RCSe - ( RCSe * MUM ) ) + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( Min( RMSe ,CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7736220472440944, "obj2": 0.0855584010936142}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( FirstVNF_Mem_Server - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( MDR + ( PN + CRS ) ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - ( Max( MUR,RMSe ) + Min( DS ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.44291338582677164, "obj2": 0.35884307094907236}, {"determining": "( ACS - Max( Max( ( ACS - FirstVNF_Mem_Server ),( ( FirstVNF_CPU + ( DDR * ARS ) ) * MDR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,( RMSe * RRSe ) ) ) - ( Max( RMSe,CS ) * Min( CS ,RRSe ) ) ) ) * DS ) ) )", "obj1": 0.4881889763779528, "obj2": 0.30172994499495986}, {"determining": "Min( ( ACS - Max( Max( ( Max( MDR,Max( FirstVNF_Mem,BR ) ) * PN ),MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( Max( PN,ACS ) - Const ) * ( Const - MDR ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.5098425196850394, "obj2": 0.2863404497968926}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.2219582556333246}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4654155679063897}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.6673228346456693, "obj2": 0.16837141193147526}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( BR,RRS ) ) ) ) / Const ) * Min( PN ,MDR ) )", "choosing": "( ( Max( Max( ( ( CS / ( ( RCSe / MUC ) + ( MUC * CS ) ) ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) + MUR ) ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.6364808078217272}, {"determining": "( Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( Min( ( Const + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( ( DS + RCSe ) ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2125984251968504, "obj2": 0.6296075659091174}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( ( FirstVNF_Mem_Server - RRS ),( ARS - Const ) ) + Max( ( MRS - RRS ),( MDR * FirstVNF_Mem_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( Max( DS,( DS * RMSe ) ),( MLU / ( CS - DS ) ) ) ) ) ),( ( Min( RRSe ,MUM ) / RRSe ) / ( ( RMSe + RCSe ) + ( Min( ( ( CS - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07856728444011224}, {"determining": "Max( ( MRS + ( CRS + PN ) ),Min( Min( FirstVNF_RAM ,( Max( Min( ACS ,DDR ),( DDR * DDR ) ) + RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( DS * ( Max( ( DS / DS ),MUC ) / ( ( MUC - Min( ( RRSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6728763008974887}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),( FirstVNF_RAM_Server - ( ACS + Max( ( AMS + FirstVNF_RAM ),( ( FirstVNF_CPU - FirstVNF_RAM ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( Max( MUC,RRSe ) * DS ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6043459415710875}, {"determining": "( ACS - Max( Max( ( Min( Max( PN,MRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / Max( PN,ACS ) ) ) ) * Max( FirstVNF_RAM,BR ) ),MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),RCSe ),( ( DS * RMSe ) - ( DS / ( ( MLU * ( DS + RCSe ) ) / ( Max( RRSe,RRSe ) - Max( RRSe,CS ) ) ) ) ) ) / RMSe ) - Min( ( ( MUC - Min( Min( RCSe ,RMSe ) ,MUC ) ) / MUR ) ,RCSe ) )", "obj1": 0.5748031496062992, "obj2": 0.24894209068628134}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( ARS * Min( Max( FirstVNF_CPU_Server,MDR ) ,ARS ) ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( Min( MUC ,Min( DS ,MLU ) ) + RMSe ) ) ) * DS ) ) / ( Max( Max( MUR,DS ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8476793234791293}, {"determining": "( ( CRS * ( ( MRS * Min( ( Min( ACS ,AMS ) / FirstVNF_CPU ) ,ACS ) ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * DS ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) ),( RRS + ( DDR + CRS ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,RCSe ) + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + RRSe ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.6614173228346457, "obj2": 0.17877735211991858}, {"determining": "( ACS - Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( Min( ( Const + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe / ( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( RRSe / Min( Min( MLU ,RRSe ) ,MUM ) ) ) ) ) ) )", "obj1": 0.5236220472440944, "obj2": 0.27665460253644636}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,( Min( CRS ,BR ) / AMS ) ) ) - CRS ) )", "choosing": "Min( ( ( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) * Max( RRSe,DS ) ) - CS ) ,MLU )", "obj1": 0.3228346456692913, "obj2": 0.510011523497531}, {"determining": "Max( ( MRS - ( ( RRS + CRS ) - ACS ) ),Min( Max( FirstVNF_RAM,PN ) ,( ( ( FirstVNF_CPU_Server / Max( FirstVNF_Mem_Server,PN ) ) * ( BR - BR ) ) * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( MUR,Min( RRSe ,( ( DS + DS ) / RMSe ) ) ) ) ) - ( RMSe * ( MUM * Min( MUC ,MUC ) ) ) ) ,Max( ( ( ( DS * MUM ) / DS ) - ( ( RCSe * RRSe ) - RRSe ) ),MLU ) )", "obj1": 0.2204724409448819, "obj2": 0.6243710482397632}, {"determining": "( Max( PN,ACS ) * ( ( ( MDR - ( ( ( AMS + RRS ) / Max( Min( FirstVNF_RAM ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) * ( FirstVNF_Mem - CRS ) ) - CRS ) )", "choosing": "( ( MLU + MUC ) / ( MUC * ( ( Max( Min( RMSe ,DS ),RCSe ) / ( ( Min( ( CS / RMSe ) ,MUM ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) * ( CS * CS ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3864381800906729}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13554869303749117}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe )", "obj1": 0.3051181102362205, "obj2": 0.5139900338785941}, {"determining": "( ACS - Max( FirstVNF_CPU_Server,( ( Const + CRS ) * Max( Max( RRS,FirstVNF_Mem_Server ),( ( Min( ( Const + ACS ) ,CRS ) / FirstVNF_Mem ) + ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe / ( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( RRSe / Min( Min( MLU ,RRSe ) ,MUM ) ) ) ) ) ) )", "obj1": 0.5236220472440944, "obj2": 0.27665460253644636}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( Max( ( ACS - Max( Max( Max( PN,ACS ),MRS ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( RMSe + RRSe ) ,( RMSe / CS ) ) - Min( MUM ,Max( Min( RMSe ,DS ),RCSe ) ) ) / CS ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - CS ) )", "obj1": 0.5551181102362205, "obj2": 0.26020850241609644}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( FirstVNF_Mem_Server + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "Min( ( ( RMSe / RMSe ) - CS ) ,( DS / RCSe ) )", "obj1": 0.9744094488188977, "obj2": 0.00911163703320095}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( MRS - RRS ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.7322834645669292, "obj2": 0.12421370668703066}, {"determining": "Max( ( MDR + ( CRS + PN ) ),Min( Min( FirstVNF_RAM ,ACS ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * DS ) ) / ( Max( ( MUR + DS ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8476793234791293}, {"determining": "( ( CRS * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7550356057409716}, {"determining": "( ACS - Max( Max( Min( CRS ,ARS ),FirstVNF_Mem_Server ),Max( RRS,Max( ( ( DDR / PN ) - ( ARS - FirstVNF_CPU_Server ) ),RRS ) ) ) )", "choosing": "Max( ( CS * ( ( RCSe - ( RCSe * MUM ) ) + DS ) ),( ( RCSe * ( DS / MUR ) ) / ( ( RMSe + RCSe ) + ( RCSe - RCSe ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.01427415301223765}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4654155679063897}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ( CRS * FirstVNF_Mem_Server ) ) - DDR ) ) / ( Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) - CRS ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( MUM + ( CS / RMSe ) ) / Min( RMSe ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) ) - RMSe )", "obj1": 0.5039370078740157, "obj2": 0.289397349956564}, {"determining": "Max( Max( MDR,( CRS + ( MRS + ( ( ( DDR / FirstVNF_CPU_Server ) * ( FirstVNF_Mem + CRS ) ) * BR ) ) ) ),Min( Min( FirstVNF_RAM ,ACS ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( ( Max( ( DS / DS ),MUC ) / ( ( MUC / Min( ( RMSe / DS ) ,RCSe ) ) - ( RMSe * Min( CS ,( RRSe + DS ) ) ) ) ) * DS ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6583196811854028}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( MDR,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.25, "obj2": 0.5764140004669849}, {"determining": "( Max( PN,Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ),ACS ) ) * ( ( ( ( ( ( Max( FirstVNF_RAM,RRS ) - FirstVNF_Mem_Server ) + ( AMS + DDR ) ) * ARS ) - MDR ) * ( ACS - FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( DS + MUC ) / ( MUC * ( ( CS / ( ( ( Max( CS,RMSe ) + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,DS ) ) - RRSe ) ) * ( DS - RMSe ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5344086960656311}, {"determining": "( Max( PN,ACS ) * ( ( Max( BR,ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( RCSe,Min( RMSe ,DS ) ) ) ) - ( MUC / RRSe ) ) ,RRSe )", "obj1": 0.31496062992125984, "obj2": 0.5107569562230536}, {"determining": "( ( CRS * ( ( CRS - ACS ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / Min( ( ( ( CS * RMSe ) * MUC ) / RCSe ) ,( MLU + RMSe ) ) ) * DS ) ) / ( ( RRSe / MUM ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8068882342670297}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.7204724409448819, "obj2": 0.13149640017846595}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / MUC ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5488726417498894}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( ( ( ( ( ( DDR + AMS ) + Max( ( MRS - RRS ),( FirstVNF_CPU_Server + MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( MUM / DS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,( MUR - MUR ) ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RMSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.13981546622347513}, {"determining": "( ( MRS * ( ( ( ( FirstVNF_CPU * ACS ) - ( ( ( FirstVNF_CPU_Server * MDR ) - DDR ) / FirstVNF_Mem ) ) + ( Min( MRS ,ACS ) + MRS ) ) + FirstVNF_Mem_Server ) ) - ( ( Min( RRS ,AMS ) / ( FirstVNF_CPU_Server / BR ) ) - ( FirstVNF_RAM - CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / RRSe ) / RCSe ) - Min( CS ,Min( RRSe ,( MUM - Min( RCSe ,( ( ( CS + RMSe ) / ( RCSe - MUR ) ) / ( MUC / Min( MUC ,DS ) ) ) ) ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3362864336140025}, {"determining": "( ( ( ( FirstVNF_Mem_Server - RRS ) * ( DDR * ARS ) ) * Min( Max( ( AMS / ARS ),Min( MRS ,( Max( MDR,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) * PN ) ) ) ,( AMS * FirstVNF_Mem ) ) ) * ( FirstVNF_RAM * PN ) )", "choosing": "( ( ( RMSe / CS ) + ( ( Min( RRSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) / RRSe ) / RCSe ) ) / RMSe )", "obj1": 0.1968503937007874, "obj2": 0.6441868935458149}, {"determining": "( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * ( Max( PN,ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * ( Const - MDR ) ) - CRS ) ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( Max( DS,( DS * RMSe ) ),( MLU / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( Min( ( ( CS - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.015078504174131683}, {"determining": "( ACS - Max( Max( Const,( ( ( ( ( MDR + FirstVNF_RAM ) * FirstVNF_Mem_Server ) * ( DDR / FirstVNF_CPU ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( ( ( CS * ( ( CS * ( RMSe * RRSe ) ) - RMSe ) ) - CS ) ,( DS / MLU ) )", "obj1": 0.265748031496063, "obj2": 0.5643897242098929}, {"determining": "Max( ( Min( DDR ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server * CRS ) ),( FirstVNF_Mem_Server / CRS ) )", "choosing": "( ( RCSe / ( RMSe / RCSe ) ) - Max( Min( MLU ,DS ),( CS / ( MUC / CS ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6496102768789648}, {"determining": "( FirstVNF_RAM * ( ( ( Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( DS ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.781496062992126, "obj2": 0.081768220106004}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( MRS - RRS ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10197104995897997}, {"determining": "( FirstVNF_RAM * ( ( ( MDR * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / MUC ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.9133858267716536, "obj2": 0.03323122674657636}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5452755905511811, "obj2": 0.26213945394992116}, {"determining": "( FirstVNF_RAM * ( CRS - ( ( ( ( Max( MDR,( ARS - Const ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( ARS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( Max( ( Max( Min( RMSe ,DS ),RCSe ) + ( RMSe - CS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Max( RCSe,MUM ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.9291338582677166, "obj2": 0.026173825170255703}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - RRSe ) ) * DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3754581795740123}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12989540562200355}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + RRS ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.421259842519685, "obj2": 0.3793521765414047}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4204076983595796}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4204076983595796}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RCSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.3720578032384499}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( ( ACS - Max( Max( FirstVNF_RAM,( ( FirstVNF_CPU_Server * PN ) - MDR ) ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,( RMSe + RRSe ) ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,Max( CS,RCSe ) ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.5849839246287125}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( ( ACS - Max( ( FirstVNF_RAM * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( CS ,( RMSe + RRSe ) ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.5849839246287125}, {"determining": "( ( Max( FirstVNF_Mem_Server,AMS ) / MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( DDR ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( CS - ( ( RCSe + DS ) - ( MUM * DS ) ) ) * MLU ) / ( MUC * ( ( CS / ( ( MUC / Min( ( MUC / DS ) ,CS ) ) * ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7421259842519685, "obj2": 0.10796420822178596}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe )", "obj1": 0.9862204724409449, "obj2": 0.00503191498033167}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( RRSe / ( MUC / ( ( CS / ( ( CS + RRSe ) - ( RRSe + RMSe ) ) ) * DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8083286446895296}, {"determining": "( Max( Min( ( AMS - FirstVNF_Mem ) ,( CRS / RRS ) ),FirstVNF_CPU ) - Max( ( PN + ( Min( MDR ,AMS ) * FirstVNF_RAM ) ),MRS ) )", "choosing": "( ( MUC + DS ) / Min( Min( RMSe ,( ( Min( MLU ,MLU ) * MUC ) / MUM ) ) ,MUR ) )", "obj1": 0.297244094488189, "obj2": 0.5190248671239669}, {"determining": "( ACS - ( BR / RRS ) )", "choosing": "Min( ( Max( ( DS - Max( Min( RMSe ,DS ),RCSe ) ),CS ) - CS ) ,( DS / Max( RRSe,MUM ) ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( MUM - MUC ) ) ,CS ) ) ),CS ) ) )", "obj1": 0.41338582677165353, "obj2": 0.39709844661885724}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ( CRS * FirstVNF_Mem_Server ) ) - DDR ) ) / ( Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) - CRS ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RCSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( ( ( MLU * ( DS + RCSe ) ) / ( Max( RRSe,RRSe ) - Max( RRSe,CS ) ) ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.9448818897637795, "obj2": 0.01999999069321093}], "19": [{"determining": "( Max( PN,ACS ) * ( ( ( ( RRS * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUM + RRSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) * ( CRS * ARS ) ) ) * Max( FirstVNF_CPU_Server,( Max( Const,CRS ) * Max( Max( FirstVNF_Mem_Server,RRS ),( ( Min( ( BR + ACS ) ,CRS ) + Min( Min( PN ,FirstVNF_CPU ) ,MDR ) ) * ( CRS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Max( ( PN * Const ),Min( RRS ,FirstVNF_CPU ) ) / Const ),FirstVNF_CPU_Server ) - ACS ) - ( FirstVNF_Mem_Server * ( CRS + MDR ) ) ) ) )", "choosing": "( Max( MUR,CS ) - Min( ( DS / ( MLU + ( Min( ( ( MUR * RMSe ) + Min( DS ,RCSe ) ) ,( MUC - MUR ) ) / MUM ) ) ) ,RCSe ) )", "obj1": 0.08070866141732283, "obj2": 0.869045109580726}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.8149606299212598, "obj2": 0.07132476729062234}, {"determining": "( ( DDR * CRS ) * ( Min( ( ( ( MRS + ( ( BR - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) * MDR ) / FirstVNF_Mem ) ,( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / DS ) + ( MUR + DS ) ),RCSe ),( ( DS - RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + ( MUR + ( RCSe * MUR ) ) ) ) ) ) / RMSe ) - ( RMSe / Max( MLU,RCSe ) ) )", "obj1": 0.8759842519685039, "obj2": 0.05222834456080096}, {"determining": "( Max( ACS,PN ) * ( ARS - ARS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR - DS ) ),RCSe ),( ( DS - RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + ( MUR / Max( CS,MLU ) ) ) ) ) ) / RMSe ) - ( MUC * MUR ) )", "obj1": 0.639763779527559, "obj2": 0.20817939611581315}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,Max( ( ( RMSe / CS ) + Max( Min( RMSe ,DS ),RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.610236220472441, "obj2": 0.22042210711631263}, {"determining": "Max( ( ( ( ( Min( ( Min( ACS ,AMS ) / FirstVNF_CPU ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MLU ) ) ,CS ) ) ),( DS + ( RCSe / MUR ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4040094208490245}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,RCSe ) + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + RRSe ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.5511811023622047, "obj2": 0.254539922423014}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( DS / ( Min( RRSe ,( MUC * MUM ) ) / RRSe ) ) - Min( ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * ( RMSe - RCSe ) ) ) ) / DS ) ,CS ) )", "obj1": 0.8996062992125984, "obj2": 0.03672736469339945}, {"determining": "Max( PN,( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6939582661616142}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),( FirstVNF_RAM_Server - ( ACS + Max( ( AMS + FirstVNF_RAM ),( ( FirstVNF_CPU - FirstVNF_RAM ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( Max( MUC,RRSe ) * DS ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6043459415710875}, {"determining": "( FirstVNF_RAM * ( CRS - ( ( ( Min( ( AMS + DDR ) ,( PN / ACS ) ) * ( ( ( ARS - FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / DDR ) ) - MDR ) / Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUM ),( RRSe * MUC ) ) / CS ) ) - Min( ( Min( DS ,RRSe ) / RCSe ) ,CS ) ) / MLU ) * DS ) + ( Min( RRSe ,( DS / MUM ) ) - Min( ( DS * MUM ) ,Max( ( MUM * ( RCSe + Max( CS,RRSe ) ) ),( MLU * ( Min( RRSe ,MUM ) - RRSe ) ) ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3320188680806898}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( Max( PN,ACS ) * ( ( Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( CS * ( DS - Max( Min( DS ,DS ),RCSe ) ) ) ,RRSe )", "obj1": 0.7913385826771654, "obj2": 0.07851227593027411}, {"determining": "( ( ( AMS + DDR ) * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7323487120738869}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.8503937007874016, "obj2": 0.05633058497131692}, {"determining": "( Max( PN,ACS ) * ( FirstVNF_RAM - Const ) )", "choosing": "Max( ( Min( RMSe ,MLU ) / RMSe ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) )", "obj1": 0.6437007874015748, "obj2": 0.20015198424996009}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( ( Max( ( Const / ( MDR * Min( PN ,FirstVNF_Mem_Server ) ) ),( ACS - FirstVNF_RAM_Server ) ) - ACS ) - ACS ) ) )", "choosing": "( RMSe / ( ( MUM - MUR ) * ( ( ( DS / ( MLU + ( RCSe / MUR ) ) ) / ( ( Max( ( DS * RMSe ),CS ) + ( ( DS / MLU ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7933196544400228}, {"determining": "( Max( PN,( ARS * RRS ) ) * ( ( ( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) / FirstVNF_Mem ) * Max( Const,MDR ) ) - CRS ) )", "choosing": "( ( RCSe * Max( DS,( RRSe - RMSe ) ) ) - ( RRSe + RCSe ) )", "obj1": 0.6594488188976378, "obj2": 0.1877113496547402}, {"determining": "( ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - ( Max( CRS,FirstVNF_CPU ) * ( Min( Min( BR ,CRS ) ,FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( Max( Min( ( ( RRSe + ( Min( RRSe ,RMSe ) - ( MUR / MUM ) ) ) + RRSe ) ,( MLU / RCSe ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.8503937007874016, "obj2": 0.05633058497131692}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( ( ( AMS + DDR ) * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7722209089412958}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}, {"determining": "( ( ARS - FirstVNF_CPU ) - ( ( MRS - CRS ) * MDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( RCSe,MUC ) ) + MUC ) - Min( CS ,Max( ( ( RMSe + CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4431626064639917}, {"determining": "( FirstVNF_CPU_Server * ( ( ( ( ( AMS + DDR ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) )", "obj1": 0.6751968503937008, "obj2": 0.16217691649575697}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4654155679063897}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.265748031496063, "obj2": 0.5588159419506346}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( ( ACS - Max( ( ARS * ( FirstVNF_CPU_Server / ( BR + AMS ) ) ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,( MLU / MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.25393700787401574, "obj2": 0.5739590397947343}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( ( ( FirstVNF_CPU / FirstVNF_CPU ) * ( ( MRS * Min( ( Min( ACS ,AMS ) / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem - Max( AMS,ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / ( MUC + MUC ) ) - ( ( DS / MUC ) - ( MLU + RMSe ) ) ) ) * DS ) ) / RRSe )", "obj1": 0.13188976377952755, "obj2": 0.7513182969026277}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,RRS ) ) * FirstVNF_CPU )", "choosing": "( ( RMSe + Max( Max( ( ( ( Min( MLU ,MLU ) - ( RMSe + RCSe ) ) + MUM ) * MUR ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( Min( MUR ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ),MUM ) ) ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6929133858267716, "obj2": 0.15201711063489096}, {"determining": "( ( CRS * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7550356057409716}, {"determining": "Max( Max( ( MRS + RRS ),Min( FirstVNF_CPU_Server ,MDR ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7120893371898385}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( FirstVNF_Mem_Server - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( MDR + ( PN + CRS ) ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - ( Max( MUR,RMSe ) + Min( DS ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.44291338582677164, "obj2": 0.35884307094907236}, {"determining": "Max( ( Max( FirstVNF_Mem,( CRS - PN ) ) + ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * ( ( BR * BR ) / DDR ) ) ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( Max( RMSe,DS ) ,CS ) ) - Max( MUR,RCSe ) ) ) * ( RCSe + DS ) ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7175611086957804}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * DS ) ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.8223769536825655}, {"determining": "( ( ( AMS + DDR ) * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7642548858611141}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "Max( ( MRS - ( ( RRS + CRS ) - ACS ) ),Min( Max( FirstVNF_RAM,PN ) ,( ( ( FirstVNF_CPU_Server / Max( FirstVNF_Mem_Server,PN ) ) * ( BR - BR ) ) * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( MUR,Min( RRSe ,( ( DS + DS ) / RMSe ) ) ) ) ) - ( RMSe * ( MUM * Min( MUC ,MUC ) ) ) ) ,Max( ( ( ( DS * MUM ) / DS ) - ( ( RCSe * RRSe ) - RRSe ) ),MLU ) )", "obj1": 0.2204724409448819, "obj2": 0.6243710482397632}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( ARS * Min( Max( FirstVNF_CPU_Server,MDR ) ,ARS ) ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( Min( MUC ,Min( DS ,MLU ) ) + RMSe ) ) ) * DS ) ) / ( Max( Max( MUR,DS ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8476793234791293}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RRSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5688976377952756, "obj2": 0.24228302310992003}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RRSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5846456692913385, "obj2": 0.23409151793067162}, {"determining": "( Max( Min( ( AMS - FirstVNF_Mem ) ,( CRS / RRS ) ),FirstVNF_CPU ) - Max( ( PN + ( Min( MDR ,AMS ) * FirstVNF_RAM ) ),MRS ) )", "choosing": "( ( MUC + DS ) / Min( Min( RMSe ,( ( Min( MLU ,MLU ) * MUC ) / MUM ) ) ,MUR ) )", "obj1": 0.297244094488189, "obj2": 0.5190248671239669}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,( Min( CRS ,BR ) / AMS ) ) ) - CRS ) )", "choosing": "Min( ( ( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) * Max( RRSe,DS ) ) - CS ) ,MLU )", "obj1": 0.3228346456692913, "obj2": 0.510011523497531}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4654155679063897}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13554869303749117}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.5846456692913385, "obj2": 0.23409151793067162}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RRSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5688976377952756, "obj2": 0.24228302310992003}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - DDR ) * Max( FirstVNF_Mem_Server,BR ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.234251968503937, "obj2": 0.597222157504777}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.529645609990379}, {"determining": "( ( ( ( FirstVNF_Mem_Server - RRS ) * ( DDR * ARS ) ) * MDR ) * ( FirstVNF_RAM * PN ) )", "choosing": "( ( ( RMSe / CS ) + ( ( Min( RRSe ,( Max( RCSe,( RRSe * MUC ) ) / CS ) ) / RRSe ) / RCSe ) ) / RMSe )", "obj1": 0.1968503937007874, "obj2": 0.6435263839767948}, {"determining": "Max( ( MRS + ( CRS + PN ) ),Min( Min( FirstVNF_RAM ,( Max( Min( ACS ,DDR ),( DDR * DDR ) ) + RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( DS * ( Max( ( DS / DS ),MUC ) / ( ( MUC - Min( ( RRSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6728763008974887}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4204076983595796}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) - ( PN - FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( ( Max( RCSe,MUM ) / ( ( MUC / ( ( RMSe / DS ) * CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.44881889763779526, "obj2": 0.35735937076692403}, {"determining": "Min( Min( CRS ,ARS ) ,( ( Max( Const,( ( FirstVNF_RAM * FirstVNF_RAM ) + MDR ) ) / MRS ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( RRSe + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( ( ( MLU + ( ( MLU / DS ) + MLU ) ) - RMSe ) * RMSe ) * ( DS - Max( CS,RCSe ) ) ) - ( ( MUM + RRSe ) - Max( ( ( RRSe + DS ) + ( CS / RMSe ) ),( MLU + Max( Min( MUR ,( MUM * MUM ) ),MLU ) ) ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.2726289431574951}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8476793234791293}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( FirstVNF_Mem_Server + Max( ( FirstVNF_Mem_Server - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "Min( ( ( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - CS ) / RMSe ) - CS ) ,( DS / RCSe ) )", "obj1": 0.90748031496063, "obj2": 0.03274177383333093}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( ( CRS + PN ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - ( ( Min( RMSe ,RCSe ) + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + RRSe ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.3661417322834646, "obj2": 0.4481301525254655}, {"determining": "( FirstVNF_RAM * ( ( ( MDR * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( ( DS + RCSe ) ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.9192913385826772, "obj2": 0.02980476822476549}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( MUM - MUC ) ) ,CS ) ) ),CS ) ) )", "obj1": 0.41338582677165353, "obj2": 0.39709844661885724}, {"determining": "( Max( PN,Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ),ACS ) ) * ( ( ( ( ( ( Max( FirstVNF_RAM,RRS ) - FirstVNF_Mem_Server ) + ( AMS + DDR ) ) * ARS ) - MDR ) * ( ACS - FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( DS + MUC ) / ( MUC * ( ( CS / ( ( ( Max( CS,RMSe ) + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,DS ) ) - RRSe ) ) * ( DS - RMSe ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5344086960656311}, {"determining": "( FirstVNF_CPU_Server * ( ( ( ( ( AMS + DDR ) / Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,( Const - MDR ) ) ) ) * PN ) - MDR ) * Min( ACS ,Max( ARS,PN ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,Max( ( MUR + RCSe ),RMSe ) ),RCSe ) ) ) - CS ) ,( ( Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,MUM ) / RRSe ) / RCSe ) )", "obj1": 0.7362204724409449, "obj2": 0.11531144224420559}, {"determining": "Max( PN,( MRS - ( Max( FirstVNF_RAM_Server,( AMS * ACS ) ) * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( RRSe / Max( ( MUR * DS ),( MLU / DS ) ) ) * DS ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6641290660530957}, {"determining": "Max( ( MDR + ( CRS + PN ) ),Min( AMS ,FirstVNF_CPU ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( ( Max( MLU,MUC ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.16141732283464566, "obj2": 0.681325048666397}, {"determining": "( Max( Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( Max( ( MUR + DS ),( ( MUM + CS ) / ( CS - DS ) ) ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.5393700787401575, "obj2": 0.2637397263072516}, {"determining": "( FirstVNF_RAM * ( ( ( MDR * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUM ),( RRSe * MUC ) ) / CS ) ) - Min( ( Min( DS ,RRSe ) / RCSe ) ,CS ) ) / MLU ) * DS ) + ( Min( RRSe ,( DS / MUM ) ) - Min( ( DS * MUM ) ,Max( ( MUM * ( RCSe + Max( CS,RRSe ) ) ),( MLU * ( Min( RRSe ,MUM ) - RRSe ) ) ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.024165075284811106}, {"determining": "( Max( DDR,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * CS ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.4862204724409449, "obj2": 0.3034941513622481}, {"determining": "( Max( PN,ACS ) * ( ( Max( BR,ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( RCSe,Min( RMSe ,DS ) ) ) ) - ( MUC / RRSe ) ) ,RRSe )", "obj1": 0.31496062992125984, "obj2": 0.5107569562230536}, {"determining": "( ( CRS * ( ( CRS - ACS ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / Min( ( ( ( CS * RMSe ) * MUC ) / RCSe ) ,( MLU + RMSe ) ) ) * DS ) ) / ( ( RRSe / MUM ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8068882342670297}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( BR,RRS ) ) ) ) / Const ) * Min( PN ,MDR ) )", "choosing": "( ( Max( Max( ( ( CS / ( ( RCSe / MUC ) + ( MUC * CS ) ) ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) + MUR ) ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.6364808078217272}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.7204724409448819, "obj2": 0.13149640017846595}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( Max( ( MRS - ( FirstVNF_CPU_Server * PN ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.5433070866141733, "obj2": 0.25888710027500134}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "( CRS - Max( Max( FirstVNF_RAM,MRS ),( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) ,CS ) ,( CS / CS ) )", "obj1": 0.281496062992126, "obj2": 0.5438869770315833}, {"determining": "Max( ( Min( DDR ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server * CRS ) ),( FirstVNF_Mem_Server / CRS ) )", "choosing": "( ( RCSe / ( RMSe / RCSe ) ) - Max( Min( MLU ,DS ),( CS / ( MUC / CS ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6496102768789648}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) ),( RRS + ( DDR + CRS ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,RCSe ) + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + RRSe ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.6614173228346457, "obj2": 0.17877735211991858}, {"determining": "( ACS - Max( Min( Min( PN ,FirstVNF_RAM ) ,( FirstVNF_RAM * ( ( BR / Min( FirstVNF_CPU_Server ,CRS ) ) * MDR ) ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6704329682689648}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.2219582556333246}, {"determining": "( Max( FirstVNF_CPU,ARS ) - Max( ( Max( Const,CRS ) * Max( Max( FirstVNF_Mem_Server,RRS ),( ( Min( ( BR + ACS ) ,CRS ) + Min( Min( PN ,FirstVNF_CPU ) ,MDR ) ) * ( CRS * FirstVNF_RAM ) ) ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( ( RRSe + RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3362864336140025}, {"determining": "( FirstVNF_RAM * ( ( ( MRS - ( ( Min( CRS ,FirstVNF_Mem ) * FirstVNF_CPU ) + FirstVNF_Mem ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( Min( RRSe ,( ( CS + Min( Max( ( MUC + CS ),RRSe ) ,MLU ) ) + MUC ) ) / ( MUC + ( ( CS / ( ( MUC / Min( ( MUC / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7696850393700787, "obj2": 0.08841053005205292}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6867474752917255}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4204076983595796}, {"determining": "( Max( ( MRS - ( FirstVNF_CPU_Server * PN ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.2219582556333246}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem,( ACS - FirstVNF_Mem_Server ) ) ) + PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + ( Max( MUR,MUR ) + MLU ) ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( RRSe ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / Max( RMSe,DS ) ) ,RCSe ) )", "obj1": 0.6968503937007874, "obj2": 0.15082926777685654}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ( ( ( AMS + RRS ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.9291338582677166, "obj2": 0.026155467298088042}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( FirstVNF_Mem_Server + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "Min( ( ( RMSe / RMSe ) - CS ) ,( DS / RCSe ) )", "obj1": 0.9744094488188977, "obj2": 0.00911163703320095}, {"determining": "( ACS - Max( Max( Min( CRS ,ARS ),FirstVNF_Mem_Server ),Max( RRS,Max( ( ( DDR / PN ) - ( ARS - FirstVNF_CPU_Server ) ),RRS ) ) ) )", "choosing": "Max( ( CS * ( ( RCSe - ( RCSe * MUM ) ) + DS ) ),( ( RCSe * ( DS / MUR ) ) / ( ( RMSe + RCSe ) + ( RCSe - RCSe ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.01427415301223765}, {"determining": "( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * ( Max( PN,ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * ( Const - MDR ) ) - CRS ) ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( Max( DS,( DS * RMSe ) ),( MLU / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( Min( ( ( CS - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.015078504174131683}, {"determining": "( ACS - ( BR / RRS ) )", "choosing": "Min( ( Max( ( DS - Max( Min( RMSe ,DS ),RCSe ) ),CS ) - CS ) ,( DS / Max( RRSe,MUM ) ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( RRSe / ( MUC / ( ( CS / ( ( CS + RRSe ) - ( RRSe + RMSe ) ) ) * DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8083286446895296}, {"determining": "Max( Max( MDR,( CRS + ( MRS + ( ( ( DDR / FirstVNF_CPU_Server ) * ( FirstVNF_Mem + CRS ) ) * BR ) ) ) ),Min( Min( FirstVNF_RAM ,ACS ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( ( Max( ( DS / DS ),MUC ) / ( ( MUC / Min( ( RMSe / DS ) ,RCSe ) ) - ( RMSe * Min( CS ,( RRSe + DS ) ) ) ) ) * DS ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6583196811854028}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / MUC ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5488726417498894}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( ( MRS * BR ) + ( FirstVNF_CPU_Server * PN ) ) + Max( ( MRS - RRS ),( FirstVNF_CPU_Server * MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( Max( Const,Const ) * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( RCSe ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( ( ( MUC * Max( CS,DS ) ) * RMSe ) ,RCSe ) ) / MLU ) * DS ) + ( ( ( DS / MUM ) / RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RCSe ) ) ) ),( MLU * ( Min( RRSe ,RRSe ) / RRSe ) ) ) ) ) )", "obj1": 0.7637795275590551, "obj2": 0.0949794663442886}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RCSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.3720578032384499}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ( CRS * FirstVNF_Mem_Server ) ) - DDR ) ) / ( Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) - CRS ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,( RMSe + RRSe ) ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,Max( CS,RCSe ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.28933853843606605}, {"determining": "( FirstVNF_RAM * ( CRS - Max( ( ( Const * Min( FirstVNF_RAM ,ARS ) ) * ( Max( PN,FirstVNF_RAM ) * CRS ) ),ARS ) ) )", "choosing": "( ( ( ( Min( ( ( ( RMSe / MUC ) * ( RRSe * RRSe ) ) - MUC ) ,( Max( Min( CS ,RRSe ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / Max( Max( MUR,MLU ),DS ) ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( Max( RMSe,CS ) - MLU ) ) ) ,Max( ( MUM * ( ( RCSe * ( MLU + RRSe ) ) + RCSe ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.14133416567766027}, {"determining": "( ACS - Max( ( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * ( ( Const + Max( FirstVNF_CPU,ARS ) ) * AMS ) ) - CRS ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.234251968503937, "obj2": 0.597222157504777}], "20": [{"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8490954441606141}, {"determining": "( ( CRS * ( ( CRS - ACS ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( Min( RRSe ,( ( CS + Min( Max( ( MUC + CS ),RRSe ) ,MLU ) ) + MUC ) ) / ( MUC + ( ( CS / ( ( MUC / Min( ( MUC / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,ACS ) * ( ( ( ( RRS * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUM + RRSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8490954441606141}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( ( ( AMS + DDR ) * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7708736895630423}, {"determining": "( ( DDR * CRS ) * ( Min( ( ( ( MRS + ( ( BR - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) * MDR ) / FirstVNF_Mem ) ,( Const - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / DS ) + ( MUR + DS ) ),RCSe ),( ( DS - RMSe ) - ( Max( MUR,DS ) - ( ( RMSe / CS ) + ( MUR + ( RCSe * MUR ) ) ) ) ) ) / RMSe ) - ( RMSe / Max( MLU,RCSe ) ) )", "obj1": 0.8759842519685039, "obj2": 0.05222834456080096}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( MUM - MUC ) ) ,CS ) ) ),CS ) ) )", "obj1": 0.41338582677165353, "obj2": 0.39709844661885724}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) - ( DS - RRSe ) ) * DS ) ) )", "obj1": 0.33661417322834647, "obj2": 0.48912787380072886}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RCSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.37631229875605526}, {"determining": "( Max( Min( ( AMS - FirstVNF_Mem ) ,( CRS / RRS ) ),FirstVNF_CPU ) - Max( ( PN + ( Min( MDR ,AMS ) * FirstVNF_RAM ) ),MRS ) )", "choosing": "( ( MUC + DS ) / Min( Min( RMSe ,( ( Min( MLU ,MLU ) * MUC ) / MUM ) ) ,MUR ) )", "obj1": 0.297244094488189, "obj2": 0.5190248671239669}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,MRS ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / RCSe ) )", "obj1": 0.234251968503937, "obj2": 0.5902939493574293}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) ),( RRS + ( DDR + CRS ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,RCSe ) + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + RRSe ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.6614173228346457, "obj2": 0.17877735211991858}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.8484251968503937, "obj2": 0.056966767087541094}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.8208661417322834, "obj2": 0.06939191339544522}, {"determining": "( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * ( Max( PN,ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * ( Const - MDR ) ) - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RRSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.014952615294424123}, {"determining": "Max( PN,( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6939582661616142}, {"determining": "( FirstVNF_RAM * ( CRS - ( ( ( Min( ( AMS + DDR ) ,( PN / ACS ) ) * ( ( ( ARS - FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / DDR ) ) - MDR ) / Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUM ),( RRSe * MUC ) ) / CS ) ) - Min( ( Min( DS ,RRSe ) / RCSe ) ,CS ) ) / MLU ) * DS ) + ( Min( RRSe ,( DS / MUM ) ) - Min( ( DS * MUM ) ,Max( ( MUM * ( RCSe + Max( CS,RRSe ) ) ),( MLU * ( Min( RRSe ,MUM ) - RRSe ) ) ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3320188680806898}, {"determining": "( ( ( AMS + DDR ) * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7323487120738869}, {"determining": "Min( ( ACS - Max( Max( ( Max( Const,Min( ARS ,CRS ) ) * PN ),MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( Max( PN,ACS ) - Const ) * ( Const - MDR ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( Min( RCSe ,RCSe ),Min( Max( MLU,RCSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.27684636542213265}, {"determining": "( ( ( FirstVNF_CPU / FirstVNF_CPU ) * ( ( MRS * Min( ( Min( ACS ,AMS ) / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem - Max( AMS,ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / ( MUC + MUC ) ) - ( ( DS / MUC ) - ( MLU + RMSe ) ) ) ) * DS ) ) / RRSe )", "obj1": 0.13188976377952755, "obj2": 0.7513182969026277}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * PN ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( ( MUR / DS ) ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RCSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.937007874015748, "obj2": 0.023318946809100675}, {"determining": "( ( ARS - FirstVNF_CPU ) - ( ( MRS - CRS ) * MDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( RCSe,MUC ) ) + MUC ) - Min( CS ,Max( ( ( RMSe + CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4431626064639917}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ),ACS ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) ) ) ) )", "obj1": 0.5846456692913385, "obj2": 0.23160603678008798}, {"determining": "( FirstVNF_RAM * ( ( ( MDR - ( FirstVNF_CPU - PN ) ) - Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( Min( DS ,RRSe ) / ( MUC * ( ( CS / ( ( Max( Max( MUC,MUC ),MUC ) - MUR ) * RCSe ) ) * DS ) ) )", "obj1": 0.7559055118110236, "obj2": 0.1020121671922865}, {"determining": "( FirstVNF_CPU_Server * ( ( ( ( ( Min( Max( FirstVNF_RAM,DDR ) ,PN ) * FirstVNF_CPU_Server ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,DDR ) ) ) * PN ) - MDR ) * Min( ( AMS + DDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) * CS ) - CS ) ,( ( Min( RRSe ,MUM ) / ( CS / Max( ( RMSe * RCSe ),Min( ( MLU / ( RCSe / DS ) ) ,MUR ) ) ) ) / RCSe ) )", "obj1": 0.6751968503937008, "obj2": 0.16162786700226553}, {"determining": "( Max( PN,ACS ) * ( ( Max( BR,ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( RCSe,Min( RMSe ,DS ) ) ) ) - ( MUC / RRSe ) ) ,RRSe )", "obj1": 0.31496062992125984, "obj2": 0.5107569562230536}, {"determining": "( Max( FirstVNF_CPU,ARS ) - Max( ( Max( Const,CRS ) * Max( Max( FirstVNF_Mem_Server,RRS ),( ( Min( ( BR + ACS ) ,CRS ) + Min( Min( PN ,FirstVNF_CPU ) ,MDR ) ) * ( CRS * FirstVNF_RAM ) ) ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( ( RRSe + RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3362864336140025}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "Max( Max( ( MRS + RRS ),Min( FirstVNF_CPU_Server ,MDR ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7120893371898385}, {"determining": "( FirstVNF_Mem * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( ( RMSe / CS ) - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12987631343689798}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * ( MDR * ( CRS + MRS ) ) ) - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,Max( ( ( RMSe / CS ) + Max( ( RMSe * DS ),RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,Max( CS,CS ) ) ) )", "obj1": 0.6594488188976378, "obj2": 0.18744820578409377}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * PN ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,( RMSe / CS ) ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RCSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.7834645669291339, "obj2": 0.08696957779954581}, {"determining": "Max( ( Max( FirstVNF_Mem,( CRS - PN ) ) + ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * ( ( BR * BR ) / DDR ) ) ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( Max( RMSe,DS ) ,CS ) ) - Max( MUR,RCSe ) ) ) * ( RCSe + DS ) ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7175611086957804}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( ( CRS + PN ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - ( ( Min( RMSe ,RCSe ) + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + RRSe ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.39173228346456695, "obj2": 0.41545417545197294}, {"determining": "( Max( ( DDR + AMS ),ACS ) - ( AMS / DDR ) )", "choosing": "( Min( MUC ,DS ) / ( MUC * ( ( ( ( Min( CS ,MUM ) / RRSe ) * ( RMSe / Max( MLU,( MUR - RRSe ) ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * ( RRSe * RRSe ) ) ) ) * ( DS + MUC ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( Const ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( ( ( ( MUC / Min( MUC ,RRSe ) ) - ( MUM - ( Max( RCSe,MUM ) + RRSe ) ) ) / CS ) * DS ) ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.8223769536825655}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( Max( DS,( DS * RMSe ) ),( MLU / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( Min( ( ( CS - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.21344801987633522}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,( ( RMSe / CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.629886923817313}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,( Min( CRS ,BR ) / AMS ) ) ) - CRS ) )", "choosing": "Min( ( ( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) * Max( RRSe,DS ) ) - CS ) ,MLU )", "obj1": 0.3228346456692913, "obj2": 0.510011523497531}, {"determining": "Min( ( Max( Max( ( Max( MDR,Max( FirstVNF_Mem,BR ) ) * PN ),MRS ),FirstVNF_CPU_Server ) - ACS ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( Max( PN,ACS ) - Const ) * ( Const - PN ) ) - CRS ) ) ) + ( ( RRS / Max( AMS,FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( Max( CS,RCSe ) - DS ) ) - ( ( CS - ( ( MUR * DS ) + ( ( ( DS + RCSe ) * RCSe ) * DS ) ) ) - RMSe ) ) )", "obj1": 0.5098425196850394, "obj2": 0.28707641891714675}, {"determining": "( ( ( ( PN - FirstVNF_Mem ) * ( ( DDR + CRS ) * Max( ACS,Max( BR,RRS ) ) ) ) / Const ) * Min( PN ,MDR ) )", "choosing": "( ( Max( Max( ( ( CS / ( ( RCSe / MUC ) + ( MUC * CS ) ) ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + RRSe ),Max( MUR,DS ) ) ) ) / RMSe ) - Min( ( ( MUC - Max( Min( RCSe ,RMSe ),MUC ) ) + MUR ) ,RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.6364808078217272}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6043459415710875}, {"determining": "( Min( ( MRS + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) * Min( FirstVNF_RAM ,CRS ) )", "choosing": "( ( Max( Max( ( ( CS / RMSe ) + ( MUR + DS ) ),RCSe ),( ( DS - RMSe ) - ( MLU - ( ( RMSe / Min( MUC ,RCSe ) ) * DS ) ) ) ) / RMSe ) - ( RMSe / ( CS * ( DS - MUM ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.19978906379469616}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,RRS ) ) * FirstVNF_CPU )", "choosing": "( ( RMSe + Max( Max( ( ( ( Min( MLU ,MLU ) - ( RMSe + RCSe ) ) + MUM ) * MUR ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( Min( MUR ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ),MUM ) ) ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6929133858267716, "obj2": 0.15201711063489096}, {"determining": "( CRS - Max( Max( FirstVNF_RAM,MRS ),( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) ,CS ) ,( CS / CS ) )", "obj1": 0.281496062992126, "obj2": 0.5438869770315833}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6867474752917255}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "Max( ( Min( RMSe ,MLU ) / RMSe ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) )", "obj1": 0.8877952755905512, "obj2": 0.04413935690139166}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( ARS * Min( Max( FirstVNF_CPU_Server,MDR ) ,ARS ) ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( Min( MUC ,Min( DS ,MLU ) ) + RMSe ) ) ) * DS ) ) / ( Max( Max( MUR,DS ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8476793234791293}, {"determining": "Min( ( ACS - Max( Max( ( Max( MDR,Max( FirstVNF_Mem,BR ) ) - PN ),MRS ),FirstVNF_CPU_Server ) ) ,( Max( MRS,ARS ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - RRSe ) ) * DS ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2943486323791367}, {"determining": "( FirstVNF_CPU_Server * ( ( ( ( ( AMS + DDR ) / Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,( Const - MDR ) ) ) ) * PN ) - MDR ) * Min( ACS ,Max( ARS,PN ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,Max( ( MUR + RCSe ),RMSe ) ),RCSe ) ) ) - CS ) ,( ( Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,MUM ) / RRSe ) / RCSe ) )", "obj1": 0.7362204724409449, "obj2": 0.11531144224420559}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( Max( PN,ACS ) * ( ( ( ARS * ( MRS * DDR ) ) / Min( ( Min( Min( FirstVNF_Mem_Server ,ACS ) ,MRS ) / DDR ) ,FirstVNF_RAM ) ) - BR ) )", "choosing": "Min( ( ( RMSe / RMSe ) - CS ) ,( ( ( RRSe + ( DS - RRSe ) ) + MUC ) / RCSe ) )", "obj1": 0.9153543307086615, "obj2": 0.02918107452357921}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( FirstVNF_CPU_Server + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,Max( ( MUC - Max( ( RRSe + MUM ),MUR ) ),( ( MUM + CS ) / ( CS - DS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.8051181102362205, "obj2": 0.07342847368857115}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.25984251968503935, "obj2": 0.57143123005669}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * CS ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.6771653543307087, "obj2": 0.15988544139207758}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( Max( FirstVNF_RAM,MRS ),Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.265748031496063, "obj2": 0.5588159419506346}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4654155679063897}, {"determining": "Max( ( MRS - ( ( RRS + CRS ) - ACS ) ),Min( Max( FirstVNF_RAM,PN ) ,( ( ( FirstVNF_CPU_Server / Max( FirstVNF_Mem_Server,PN ) ) * ( BR - BR ) ) * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( MUR,Min( RRSe ,( ( DS + DS ) / RMSe ) ) ) ) ) - ( RMSe * ( MUM * Min( MUC ,MUC ) ) ) ) ,Max( ( ( ( DS * MUM ) / DS ) - ( ( RCSe * RRSe ) - RRSe ) ),MLU ) )", "obj1": 0.2204724409448819, "obj2": 0.6243710482397632}, {"determining": "( ( CRS * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7550356057409716}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.529645609990379}, {"determining": "( ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - ( Max( CRS,FirstVNF_CPU ) * ( Min( Min( BR ,CRS ) ,FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( Max( Min( ( ( RRSe + ( Min( RRSe ,RMSe ) - ( MUR / MUM ) ) ) + RRSe ) ,( MLU / RCSe ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.8503937007874016, "obj2": 0.05633058497131692}, {"determining": "( ( ( ( ( AMS + DDR ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,( Const - MDR ) ) ) ) * PN ) - MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem,( ACS - FirstVNF_Mem_Server ) ) ) + PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + ( Max( MUR,MUR ) + MLU ) ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( RRSe ,RRSe ) ,MUM ) ) / RMSe ) - Min( ( DS / Max( RMSe,DS ) ) ,RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11221152336904974}, {"determining": "( FirstVNF_CPU_Server * ( ( ( ( ( AMS + DDR ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.6358267716535433, "obj2": 0.20792522900508292}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) - ( PN - FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( ( Max( RCSe,MUM ) / ( ( MUC / ( ( RMSe / DS ) * CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.44881889763779526, "obj2": 0.35735937076692403}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( ( ACS - Max( ( ARS * ( FirstVNF_CPU_Server / ( BR + AMS ) ) ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,( MLU / MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.25393700787401574, "obj2": 0.5739590397947343}, {"determining": "( FirstVNF_RAM * ( CRS - Max( ( ( Const * Min( FirstVNF_RAM ,ARS ) ) * ( Max( PN,FirstVNF_RAM ) * CRS ) ),ARS ) ) )", "choosing": "( ( ( ( Min( ( ( ( RMSe / MUC ) * ( RRSe * RRSe ) ) - MUC ) ,( Max( Min( CS ,RRSe ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / Max( Max( MUR,MLU ),DS ) ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( Max( RMSe,CS ) - MLU ) ) ) ,Max( ( MUM * ( ( RCSe * ( MLU + RRSe ) ) + RCSe ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.14133416567766027}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( FirstVNF_Mem_Server + Max( ( FirstVNF_Mem_Server - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "Min( ( ( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - CS ) / RMSe ) - CS ) ,( DS / RCSe ) )", "obj1": 0.90748031496063, "obj2": 0.03274177383333093}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - CRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( ACS + FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - ( CS * Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RMSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.5807086614173228, "obj2": 0.23603476175687216}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.4476158728628142}, {"determining": "( Max( PN,Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ),ACS ) ) * ( ( ( ( ( ( Max( FirstVNF_RAM,RRS ) - FirstVNF_Mem_Server ) + ( AMS + DDR ) ) * ARS ) - MDR ) * ( ACS - FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( DS + MUC ) / ( MUC * ( ( CS / ( ( ( Max( CS,RMSe ) + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,DS ) ) - RRSe ) ) * ( DS - RMSe ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5344086960656311}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( DS / ( Min( RRSe ,( MUC * MUM ) ) / RRSe ) ) - Min( ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * ( RMSe - RCSe ) ) ) ) / DS ) ,CS ) )", "obj1": 0.8996062992125984, "obj2": 0.03672736469339945}, {"determining": "Max( ( Min( DDR ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server * CRS ) ),( FirstVNF_Mem_Server / CRS ) )", "choosing": "( ( RCSe / ( RMSe / RCSe ) ) - Max( Min( MLU ,DS ),( CS / ( MUC / CS ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6496102768789648}, {"determining": "Max( Max( MDR,( CRS + ( MRS + ( ( ( DDR / FirstVNF_CPU_Server ) * ( FirstVNF_Mem + CRS ) ) * BR ) ) ) ),Min( Min( FirstVNF_RAM ,ACS ) ,FirstVNF_CPU ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( ( Max( ( DS / DS ),MUC ) / ( ( MUC / Min( ( RMSe / DS ) ,RCSe ) ) - ( RMSe * Min( CS ,( RRSe + DS ) ) ) ) ) * DS ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6583196811854028}, {"determining": "Max( ( MDR + ( CRS + PN ) ),Min( AMS ,FirstVNF_CPU ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( ( Max( MLU,MUC ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.16141732283464566, "obj2": 0.681325048666397}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.7204724409448819, "obj2": 0.13149640017846595}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( MRS / ( FirstVNF_Mem_Server * MDR ) ) ) - ACS ) )", "choosing": "( Max( RRSe,RMSe ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( CS + CS ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.9901574803149606, "obj2": 0.003766749901425516}, {"determining": "( FirstVNF_RAM * ( ( ( MRS - ( ( Min( CRS ,FirstVNF_Mem ) * FirstVNF_CPU ) + FirstVNF_Mem ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( Min( RRSe ,( ( CS + Min( Max( ( MUC + CS ),RRSe ) ,MLU ) ) + MUC ) ) / ( MUC + ( ( CS / ( ( MUC / Min( ( MUC / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7696850393700787, "obj2": 0.08841053005205292}, {"determining": "( ACS - Max( Max( Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ARS ),FirstVNF_Mem_Server ),Max( RRS,Max( ( ( DDR / PN ) - ( ARS - FirstVNF_CPU_Server ) ),RRS ) ) ) )", "choosing": "Max( ( CS * ( ( RCSe - ( RCSe * MUM ) ) + DS ) ),( ( RCSe * ( DS / MUR ) ) / ( ( RMSe + ( ( CS / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * DS ) ) + ( RCSe - RCSe ) ) ) )", "obj1": 0.984251968503937, "obj2": 0.008035289684755878}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),( FirstVNF_RAM_Server - ( ACS + Max( ( AMS + FirstVNF_RAM ),( ( FirstVNF_CPU - FirstVNF_RAM ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( Max( MUC,RRSe ) * DS ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6043459415710875}, {"determining": "( Max( PN,ACS ) * ( FirstVNF_RAM - Const ) )", "choosing": "Max( ( Min( RMSe ,MLU ) / RMSe ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) )", "obj1": 0.6437007874015748, "obj2": 0.20015198424996009}, {"determining": "( Max( PN,ACS ) * ( ( Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( CS * ( DS - Max( Min( DS ,DS ),RCSe ) ) ) ,RRSe )", "obj1": 0.7913385826771654, "obj2": 0.07851227593027411}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( FirstVNF_Mem_Server + Max( ( FirstVNF_Mem_Server - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.8937007874015748, "obj2": 0.041419573487685726}, {"determining": "( ACS - Max( ( MRS + ( RRS * BR ) ),Max( Max( ( ACS - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) )", "choosing": "( MUC / ( MUC * ( ( ( ( RMSe * Min( Max( MLU,MUC ) ,RMSe ) ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.4881889763779528, "obj2": 0.30190113684517966}, {"determining": "( ACS - Max( Max( Min( CRS ,ARS ),FirstVNF_Mem_Server ),Max( RRS,Max( ( ( DDR / PN ) - ( ARS - FirstVNF_CPU_Server ) ),RRS ) ) ) )", "choosing": "Max( ( CS * ( ( RCSe - ( RCSe * MUM ) ) + DS ) ),( ( RCSe * ( DS / MUR ) ) / ( ( RMSe + RCSe ) + ( RCSe - RCSe ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.01427415301223765}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( FirstVNF_Mem_Server - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( MDR + ( PN + CRS ) ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - ( Max( MUR,RMSe ) + Min( DS ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.44291338582677164, "obj2": 0.35884307094907236}, {"determining": "Max( ( ( ( ( Min( ( Min( ACS ,AMS ) / FirstVNF_CPU ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - ( Max( MUR,RMSe ) + Min( DS ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.40153827108194406}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.07748809790397065}, {"determining": "( ACS - Max( Min( Min( PN ,FirstVNF_RAM ) ,( FirstVNF_RAM * ( ( BR / Min( FirstVNF_CPU_Server ,CRS ) ) * MDR ) ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6704329682689648}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.2219582556333246}, {"determining": "( ACS - ( BR / RRS ) )", "choosing": "Min( ( Max( ( DS - Max( Min( RMSe ,DS ),RCSe ) ),CS ) - CS ) ,( DS / Max( RRSe,MUM ) ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( Max( PN,ACS ) * ( ( ( Min( ( ( Const - FirstVNF_RAM_Server ) + ( ( MRS - PN ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) ,PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( Min( MUC ,( RMSe / MUM ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( Max( MUR,MUR ) ,Min( CS ,RCSe ) ) ,( DS - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5708661417322834, "obj2": 0.24092657527703332}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ( CRS * FirstVNF_Mem_Server ) ) - DDR ) ) / ( Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) - CRS ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,( RMSe + RRSe ) ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,Max( CS,RCSe ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.28933853843606605}, {"determining": "Min( Min( CRS ,ARS ) ,( ( Max( Const,( ( FirstVNF_RAM * FirstVNF_RAM ) + MDR ) ) / MRS ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( RRSe + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( ( ( MLU + ( ( MLU / DS ) + MLU ) ) - RMSe ) * RMSe ) * ( DS - Max( CS,RCSe ) ) ) - ( ( MUM + RRSe ) - Max( ( ( RRSe + DS ) + ( CS / RMSe ) ),( MLU + Max( Min( MUR ,( MUM * MUM ) ),MLU ) ) ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.2726289431574951}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RCSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.3720578032384499}, {"determining": "Max( ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( MDR - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( RRSe / RMSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MLU ) ) ,( RMSe - Max( CS,CS ) ) ) ) ),( DS + ( RCSe / RRSe ) ) ) ) )", "obj1": 0.6122047244094488, "obj2": 0.21470655924254145}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}], "21": [{"determining": "( FirstVNF_RAM * ( ( ( MRS - ( ( Min( CRS ,FirstVNF_Mem ) * FirstVNF_CPU ) + FirstVNF_Mem ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8490954441606141}, {"determining": "( ( CRS * ( ( CRS - ACS ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( Min( RRSe ,( ( CS + Min( Max( ( MUC + CS ),RRSe ) ,MLU ) ) + MUC ) ) / ( MUC + ( ( CS / ( ( MUC / Min( ( MUC / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8490954441606141}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,DS ),MUR ) ) ) ) ) ) )", "obj1": 0.5492125984251969, "obj2": 0.2562514034484078}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "Max( ( MDR + Max( FirstVNF_RAM,BR ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( DS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7106713338743792}, {"determining": "( ( ( AMS + DDR ) * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7323487120738869}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8700787401574803, "obj2": 0.04975028406318662}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4654155679063897}, {"determining": "( ( CRS * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7550356057409716}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) - ( DS - RRSe ) ) * DS ) ) )", "obj1": 0.33661417322834647, "obj2": 0.48912787380072886}, {"determining": "( Max( FirstVNF_Mem_Server,CRS ) - ( PN * PN ) )", "choosing": "( Min( MUR ,( Min( RRSe ,MUM ) / ( Min( DS ,RCSe ) + RRSe ) ) ) - ( MUM + DS ) )", "obj1": 0.21850393700787402, "obj2": 0.6186727636447883}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,MRS ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( Max( Min( ( AMS - FirstVNF_Mem ) ,( CRS / RRS ) ),FirstVNF_CPU ) - Max( ( PN + ( Min( MDR ,AMS ) * FirstVNF_RAM ) ),MRS ) )", "choosing": "( ( MUC + DS ) / Min( Min( RMSe ,( ( Min( MLU ,MLU ) * MUC ) / MUM ) ) ,MUR ) )", "obj1": 0.297244094488189, "obj2": 0.5190248671239669}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( Const ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( ( ( ( MUC / Min( MUC ,RRSe ) ) - ( MUM - ( Max( RCSe,MUM ) + RRSe ) ) ) / CS ) * DS ) ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.8223769536825655}, {"determining": "( Max( PN,ACS ) * ( ( Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.7696850393700787, "obj2": 0.08757298381749384}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,RRS ) ) * FirstVNF_CPU )", "choosing": "( ( RMSe + Max( Max( ( ( ( Min( MLU ,MLU ) - ( RMSe + RCSe ) ) + MUM ) * MUR ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( Min( MUR ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ),MUM ) ) ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6929133858267716, "obj2": 0.15201711063489096}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) ),( RRS + ( DDR + CRS ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,RCSe ) + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + RRSe ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.6614173228346457, "obj2": 0.17877735211991858}, {"determining": "( FirstVNF_RAM * ( CRS - ( ( ( Min( ( AMS + DDR ) ,( PN / ACS ) ) * ( ( ( ARS - FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / DDR ) ) - MDR ) / Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUM ),( RRSe * MUC ) ) / CS ) ) - Min( ( Min( DS ,RRSe ) / RCSe ) ,CS ) ) / MLU ) * DS ) + ( Min( RRSe ,( DS / MUM ) ) - Min( ( DS * MUM ) ,Max( ( MUM * ( RCSe + Max( CS,RRSe ) ) ),( MLU * ( Min( RRSe ,MUM ) - RRSe ) ) ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3320188680806898}, {"determining": "( FirstVNF_RAM * ( ( ( MDR - ( FirstVNF_CPU - PN ) ) - Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( Min( DS ,RRSe ) / ( MUC * ( ( CS / ( ( Max( Max( MUC,MUC ),MUC ) - MUR ) * RCSe ) ) * DS ) ) )", "obj1": 0.7559055118110236, "obj2": 0.1020121671922865}, {"determining": "( ( Const + ( ( DDR - FirstVNF_RAM_Server ) / RRS ) ) * ( Max( PN,ACS ) * ( ( ( ( ( MRS + ( DDR * ARS ) ) * MDR ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * ( Const - MDR ) ) - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RRSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.014952615294424123}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( ( ( FirstVNF_CPU / FirstVNF_CPU ) * ( ( MRS * Min( ( Min( ACS ,AMS ) / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem - Max( AMS,ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / ( MUC + MUC ) ) - ( ( DS / MUC ) - ( MLU + RMSe ) ) ) ) * DS ) ) / RRSe )", "obj1": 0.13188976377952755, "obj2": 0.7513182969026277}, {"determining": "( CRS - Max( Max( FirstVNF_RAM,MRS ),( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) ,CS ) ,( CS / CS ) )", "obj1": 0.281496062992126, "obj2": 0.5438869770315833}, {"determining": "( FirstVNF_CPU_Server * ( ( ( ( ( AMS + DDR ) / Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,( Const - MDR ) ) ) ) * PN ) - MDR ) * Min( ACS ,Max( ARS,PN ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,Max( ( MUR + RCSe ),RMSe ) ),RCSe ) ) ) - CS ) ,( ( Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,MUM ) / RRSe ) / RCSe ) )", "obj1": 0.7362204724409449, "obj2": 0.11531144224420559}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ),ACS ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) ) ) ) )", "obj1": 0.5846456692913385, "obj2": 0.23160603678008798}, {"determining": "( ( ( AMS + DDR ) * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7708736895630423}, {"determining": "( Max( ( DDR + AMS ),ACS ) - ( AMS / DDR ) )", "choosing": "( Min( MUC ,DS ) / ( MUC * ( ( ( ( Min( CS ,MUM ) / RRSe ) * ( RMSe / Max( MLU,( MUR - RRSe ) ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * ( RRSe * RRSe ) ) ) ) * ( DS + MUC ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( FirstVNF_CPU_Server * ( ( ( ( ( Min( Max( FirstVNF_RAM,DDR ) ,PN ) * FirstVNF_CPU_Server ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,DDR ) ) ) * PN ) - MDR ) * Min( ( AMS + DDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) * CS ) - CS ) ,( ( Min( RRSe ,MUM ) / ( CS / Max( ( RMSe * RCSe ),Min( ( MLU / ( RCSe / DS ) ) ,MUR ) ) ) ) / RCSe ) )", "obj1": 0.6751968503937008, "obj2": 0.16162786700226553}, {"determining": "( Max( PN,ACS ) * ( ( Max( BR,ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( RCSe,Min( RMSe ,DS ) ) ) ) - ( MUC / RRSe ) ) ,RRSe )", "obj1": 0.31496062992125984, "obj2": 0.5107569562230536}, {"determining": "( Max( FirstVNF_CPU,ARS ) - Max( ( Max( Const,CRS ) * Max( Max( FirstVNF_Mem_Server,RRS ),( ( Min( ( BR + ACS ) ,CRS ) + Min( Min( PN ,FirstVNF_CPU ) ,MDR ) ) * ( CRS * FirstVNF_RAM ) ) ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( ( RRSe + RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3362864336140025}, {"determining": "Max( ( ( ( ( Min( ( Min( ACS ,AMS ) / FirstVNF_CPU ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - ( Max( MUR,RMSe ) + Min( DS ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.40153827108194406}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( FirstVNF_Mem * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( ( RMSe / CS ) - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12987631343689798}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ACS ,( FirstVNF_CPU / FirstVNF_CPU ) ) ) * ( ARS * Min( Max( Min( Max( CRS,FirstVNF_RAM ) ,FirstVNF_CPU_Server ),MDR ) ,ARS ) ) ) ) * ( BR * PN ) )", "choosing": "( Max( MUC,( ( CS / ( ( MUC / DS ) - ( Min( MUC ,Min( DS ,MLU ) ) + Max( ( MUR * MUM ),Min( DS ,MUM ) ) ) ) ) * DS ) ) / ( DS + Max( ( MUR - DS ),( ( MUM + CS ) / ( CS - DS ) ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8474994286470567}, {"determining": "( Max( PN,ACS ) * ( ( ( DDR - MRS ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( Max( RRSe,( ( RMSe - MLU ) / Max( MLU,RCSe ) ) ) - Min( CS ,Max( ( ( ( RRSe - MUC ) - Min( ( CS / ( DS / MLU ) ) ,( RMSe - Max( CS,CS ) ) ) ) - ( RMSe / CS ) ),( DS + ( RCSe / RRSe ) ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.04200374635511295}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * ( MDR * ( CRS + MRS ) ) ) - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,Max( ( ( RMSe / CS ) + Max( ( RMSe * DS ),RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,Max( CS,CS ) ) ) )", "obj1": 0.6594488188976378, "obj2": 0.18744820578409377}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * PN ) ) + Max( ( MRS - RRS ),RRS ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( ( MUR / DS ) ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RCSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.01132288941086521}, {"determining": "( ACS - ( BR / RRS ) )", "choosing": "Min( ( Max( ( DS - Max( Min( RMSe ,DS ),RCSe ) ),CS ) - CS ) ,( DS / Max( RRSe,MUM ) ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,( ( RMSe / CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.629886923817313}, {"determining": "( FirstVNF_RAM * ( CRS - Max( ( ( Const * Min( FirstVNF_RAM ,ARS ) ) * ( Max( PN,FirstVNF_RAM ) * CRS ) ),ARS ) ) )", "choosing": "( ( ( ( Min( ( ( ( RMSe / MUC ) * ( RRSe * RRSe ) ) - MUC ) ,( Max( Min( CS ,RRSe ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / Max( Max( MUR,MLU ),DS ) ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( Max( RMSe,CS ) - MLU ) ) ) ,Max( ( MUM * ( ( RCSe * ( MLU + RRSe ) ) + RCSe ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.14133416567766027}, {"determining": "Min( ( ACS - Max( Max( ( Max( MDR,Max( FirstVNF_Mem,BR ) ) * ( FirstVNF_RAM + ( ACS * BR ) ) ),MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( Const - MDR ) * ( ( FirstVNF_CPU / FirstVNF_CPU ) - AMS ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( ( CS - RRSe ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RRSe + RMSe ) - ( MUM * MUC ) ) ) )", "obj1": 0.5433070866141733, "obj2": 0.26831332855192075}, {"determining": "( FirstVNF_CPU_Server * ( ( ( ( ( AMS + DDR ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,( Const - MDR ) ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( MUC * ( ( CS / RMSe ) * DS ) ) )", "obj1": 0.7125984251968503, "obj2": 0.1408895112365325}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + CRS ) - MDR ) / ARS ) / ACS ) * ( ( ( ( ( Max( MRS,FirstVNF_CPU ) + DDR ) + Min( ( Max( FirstVNF_Mem_Server,RRS ) - RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Max( CS,Max( ( ( CS * MUC ) + Min( RCSe ,( ( DS + DS ) / ( ( MUR + RMSe ) / CS ) ) ) ),CS ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38772408015381205}, {"determining": "Max( PN,( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6939582661616142}, {"determining": "( Min( ( MRS + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) * Min( FirstVNF_RAM ,CRS ) )", "choosing": "( ( Max( Max( ( ( CS / RMSe ) + ( MUR + DS ) ),RCSe ),( ( DS - RMSe ) - ( MLU - ( ( RMSe / Min( MUC ,RCSe ) ) * DS ) ) ) ) / RMSe ) - ( RMSe / ( CS * ( DS - MUM ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.19978906379469616}, {"determining": "( ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - ( Max( CRS,FirstVNF_CPU ) * ( Min( Min( BR ,CRS ) ,FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( Max( Min( ( ( RRSe + ( Min( RRSe ,RMSe ) - ( MUR / MUM ) ) ) + RRSe ) ,( MLU / RCSe ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.8503937007874016, "obj2": 0.05633058497131692}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * PN ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( ( MUR / DS ) ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RCSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.021787488383382708}, {"determining": "Max( ( ( ARS + PN ) + CRS ),( ( RRS * MDR ) - ( ACS * Const ) ) )", "choosing": "( ( RCSe - ( Max( ( ( MUR / RMSe ) - RRSe ),( Min( DS ,( ( RMSe - MUC ) * RCSe ) ) + Max( ( RCSe / MUR ),Max( Min( MUC ,RMSe ),MUM ) ) ) ) - MUR ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) - RRSe ) * ( RRSe / RMSe ) ) / ( ( MUC / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.15748031496062992, "obj2": 0.6870540132610435}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,( Min( CRS ,BR ) / AMS ) ) ) - CRS ) )", "choosing": "Min( ( ( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) * Max( RRSe,DS ) ) - CS ) ,MLU )", "obj1": 0.3228346456692913, "obj2": 0.510011523497531}, {"determining": "Max( Max( ( MRS + RRS ),Min( FirstVNF_CPU_Server ,MDR ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6728763008974887}, {"determining": "Min( Min( CRS ,ARS ) ,( ( Max( Const,( ( FirstVNF_RAM * FirstVNF_RAM ) + MDR ) ) / MRS ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( RRSe + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( ( ( MLU + ( ( MLU / DS ) + MLU ) ) - RMSe ) * RMSe ) * ( DS - Max( CS,RCSe ) ) ) - ( ( MUM + RRSe ) - Max( ( ( RRSe + DS ) + ( CS / RMSe ) ),( MLU + Max( Min( MUR ,( MUM * MUM ) ),MLU ) ) ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.2726289431574951}, {"determining": "Max( ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( MDR - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( RRSe / RMSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MLU ) ) ,( RMSe - Max( CS,CS ) ) ) ) ),( DS + ( RCSe / RRSe ) ) ) ) )", "obj1": 0.6122047244094488, "obj2": 0.21470655924254145}, {"determining": "Min( ( ACS - Max( Max( ( Max( MDR,Max( FirstVNF_Mem,BR ) ) - PN ),MRS ),FirstVNF_CPU_Server ) ) ,( ACS - ( ( ( ( BR / FirstVNF_Mem ) + PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( MUM + RRSe ) - Max( ( ( CS / RMSe ) + ( RRSe + DS ) ),( MLU + ( Max( MUR,Max( DS,RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.5236220472440944, "obj2": 0.2823094088801344}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.3937007874015748, "obj2": 0.41090571470062026}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.529645609990379}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.7204724409448819, "obj2": 0.13149640017846595}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.2219582556333246}, {"determining": "( ( DDR + ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) - Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + DS ) / ( MUR * RMSe ) )", "obj1": 0.1594488188976378, "obj2": 0.681228371036657}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( ( ACS - Max( ( ARS * ( FirstVNF_CPU_Server / ( BR + AMS ) ) ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,( MLU / MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.25393700787401574, "obj2": 0.5739590397947343}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS * ( MRS - CRS ) ) )", "choosing": "( ( MUC * CS ) - Min( CS ,Max( ( ( RMSe / CS ) - ( ( RRSe - ( CS - ( DS / MLU ) ) ) / Max( CS,( CS / ( MUC - MUM ) ) ) ) ),RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44045757987027623}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) * PN ) - MDR ) * ( ACS / FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( DS + MUR ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,( MUR - ( CS / CS ) ) ) ) / MUR ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.844488188976378, "obj2": 0.05829688769335894}, {"determining": "( Max( PN,Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ),ACS ) ) * ( ( ( ( ( ( Max( FirstVNF_RAM,RRS ) - FirstVNF_Mem_Server ) + ( AMS + DDR ) ) * ARS ) - MDR ) * ( ACS - FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( DS + MUC ) / ( MUC * ( ( CS / ( ( ( Max( CS,RMSe ) + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,DS ) ) - RRSe ) ) * ( DS - RMSe ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5344086960656311}, {"determining": "( FirstVNF_CPU_Server * ( ( ( ( ( AMS + DDR ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.6358267716535433, "obj2": 0.20792522900508292}, {"determining": "( ( Max( ( ( ( RRS * DDR ) * FirstVNF_Mem_Server ) * DDR ),AMS ) - DDR ) * Max( PN,ACS ) )", "choosing": "Max( ( Min( RMSe ,MLU ) / RMSe ),( MLU + Max( ( RMSe - RCSe ),MLU ) ) )", "obj1": 0.9251968503937008, "obj2": 0.027719325810039913}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5708661417322834, "obj2": 0.24092657527703332}, {"determining": "Max( ( Min( DDR ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server * CRS ) ),( FirstVNF_Mem_Server / CRS ) )", "choosing": "( ( RCSe / ( RMSe / RCSe ) ) - Max( Min( MLU ,DS ),( CS / ( MUC / CS ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6496102768789648}, {"determining": "Min( ( ACS - Max( Max( ( Max( Const,Min( ARS ,CRS ) ) * PN ),MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( Max( PN,ACS ) - Const ) * ( Const - MDR ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( Min( RCSe ,RCSe ),Min( Max( MLU,RCSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.27684636542213265}, {"determining": "( Max( Min( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - BR ) ,BR ),ACS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.484251968503937, "obj2": 0.30385840562980415}, {"determining": "( ( ( ( ( AMS + DDR ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,( Const - MDR ) ) ) ) * PN ) - MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem,( ACS - FirstVNF_Mem_Server ) ) ) + PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + ( Max( MUR,MUR ) + MLU ) ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( RRSe ,RRSe ) ,MUM ) ) / RMSe ) - Min( ( DS / Max( RMSe,DS ) ) ,RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11221152336904974}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) - ( PN - FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + DS ) / Min( MUC ,( ( Max( RCSe,MUM ) / ( ( MUC / ( ( RMSe / DS ) * CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.44881889763779526, "obj2": 0.35735937076692403}, {"determining": "( Max( PN,ACS ) * ( ( ( Min( ( ( Const - FirstVNF_RAM_Server ) + ( ( MRS - PN ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) ,PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( Min( MUC ,( RMSe / MUM ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( Max( MUR,MUR ) ,Min( CS ,RCSe ) ) ,( DS - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5708661417322834, "obj2": 0.24092657527703332}, {"determining": "( ACS - Max( Min( Min( PN ,FirstVNF_RAM ) ,( FirstVNF_RAM * ( ( BR / Min( FirstVNF_CPU_Server ,CRS ) ) * MDR ) ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6704329682689648}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.4476158728628142}, {"determining": "Max( ( ( ( ( Min( ( Min( ACS ,AMS ) / FirstVNF_CPU ) ,( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - ( RRSe + Min( DS ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.7480314960629921, "obj2": 0.1061656840353526}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.2219582556333246}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.8169291338582677, "obj2": 0.0706850546753985}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / Min( ( MDR / ( BR * ( ARS * ( AMS + DDR ) ) ) ) ,FirstVNF_CPU ) ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,Max( Min( ( DS / DS ) ,RMSe ),( RCSe - MUC ) ) ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / Min( MUM ,MUC ) ) ,CS ) ) ),CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.3931472383684787}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "( Max( Max( ARS,MRS ),( FirstVNF_Mem_Server - ( ( FirstVNF_RAM / ( DDR / ARS ) ) * FirstVNF_RAM_Server ) ) ) - ACS )", "choosing": "( ( DS - DS ) / ( MLU - Min( MLU ,MUC ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5672547200953371}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( FirstVNF_Mem ,AMS ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( ( MUR * DS ) - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RCSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.43700787401574803, "obj2": 0.3675039713671053}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,MRS ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / RCSe ) )", "obj1": 0.234251968503937, "obj2": 0.5902939493574293}, {"determining": "( ACS - Max( FirstVNF_Mem,Max( ( ( Min( ACS ,AMS ) * ( ( RRS + ( CRS * FirstVNF_Mem_Server ) ) - DDR ) ) / ( Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) - CRS ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,( RMSe + RRSe ) ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,Max( CS,RCSe ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.28933853843606605}, {"determining": "Max( ( MRS - ( FirstVNF_CPU_Server * PN ) ),( ( RRS / ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + ( RRS * RRS ) ) ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( CS ,Min( MLU ,( MUM - Min( RCSe ,( MUC - ( Max( MUR,RMSe ) + Min( DS ,RCSe ) ) ) ) ) ) ) - ( ( Min( RRSe ,MUM ) / ( MUR - Max( RRSe,( DS - ( ( RRSe * RMSe ) * RCSe ) ) ) ) ) / RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.6352876614344541}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( MUM - MUC ) ) ,CS ) ) ),CS ) ) )", "obj1": 0.41338582677165353, "obj2": 0.39709844661885724}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - CRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( ACS + FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - ( CS * Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RMSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.5807086614173228, "obj2": 0.23603476175687216}, {"determining": "( ACS - Max( ( Max( FirstVNF_Mem_Server,ACS ) - ( ARS - FirstVNF_CPU ) ),Max( RRS,Max( ( ( DDR / PN ) - ( ARS - FirstVNF_CPU_Server ) ),RRS ) ) ) )", "choosing": "Max( ( CS * ( ( RCSe - ( RCSe * MUM ) ) + DS ) ),( ( RCSe * ( DS / MUR ) ) / ( ( RMSe + ( ( ( MLU + ( RCSe / MUR ) ) / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * DS ) ) + ( RCSe - RCSe ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.008882801526664623}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * CS ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.6771653543307087, "obj2": 0.15988544139207758}, {"determining": "( ( ARS - FirstVNF_CPU ) - ( ( MRS - CRS ) * MDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( RCSe,MUC ) ) + MUC ) - Min( CS ,Max( ( ( RMSe + CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4431626064639917}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + Min( FirstVNF_CPU_Server ,MDR ) ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "Max( ( CS * ( Min( RRSe ,MUM ) - ( ( RMSe + RRSe ) - Max( Max( DS,( DS * RMSe ) ),( MLU / ( CS - DS ) ) ) ) ) ),( MUR / ( ( RMSe + RCSe ) + ( Min( ( ( CS - MUC ) / ( MLU + ( RCSe / MUR ) ) ) ,RCSe ) + DS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.21344801987633522}, {"determining": "( Max( PN,ACS ) * ( ( ( ARS * ( MRS * DDR ) ) / Min( ( Min( Min( FirstVNF_Mem_Server ,ACS ) ,MRS ) / DDR ) ,FirstVNF_RAM ) ) - BR ) )", "choosing": "Min( ( ( RMSe / RMSe ) - CS ) ,( ( ( RRSe + ( DS - RRSe ) ) + MUC ) / RCSe ) )", "obj1": 0.9153543307086615, "obj2": 0.02918107452357921}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.07748809790397065}, {"determining": "( ACS - Max( ( FirstVNF_CPU + Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( MRS - Max( AMS,FirstVNF_RAM ) ) / PN ) ) ) )", "choosing": "Min( ( MUC * MUR ) ,( ( ( RMSe / RMSe ) * ( Min( RRSe ,MUM ) / RRSe ) ) - RCSe ) )", "obj1": 0.234251968503937, "obj2": 0.5902939493574293}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( RCSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.37631229875605526}], "22": [{"determining": "( ( CRS * ( ( CRS - ACS ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( CS * MUC ) + Min( RCSe ,RMSe ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8490954441606141}, {"determining": "( FirstVNF_RAM * ( ( ( MRS - ( ( Min( CRS ,FirstVNF_Mem ) * FirstVNF_CPU ) + FirstVNF_Mem ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8490954441606141}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "Max( ( MDR + Max( FirstVNF_RAM,BR ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( DS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7106713338743792}, {"determining": "( Min( ( MRS + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) * Min( FirstVNF_RAM ,CRS ) )", "choosing": "( ( Max( Max( ( ( CS / RMSe ) + ( MUR + DS ) ),RCSe ),( ( DS - RMSe ) - ( MLU - ( ( RMSe / Min( MUC ,RCSe ) ) * DS ) ) ) ) / RMSe ) - ( RMSe / ( CS * ( DS - MUM ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.19978906379469616}, {"determining": "( ( ( AMS + DDR ) * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7323487120738869}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.8169291338582677, "obj2": 0.0706850546753985}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4654155679063897}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) - ( DS - RRSe ) ) * DS ) ) )", "obj1": 0.33661417322834647, "obj2": 0.48912787380072886}, {"determining": "( Max( PN,ACS ) * ( ( ( DDR - MRS ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( Max( RRSe,( ( RMSe - MLU ) / Max( MLU,RCSe ) ) ) - Min( CS ,Max( ( ( ( RRSe - MUC ) - Min( ( CS / ( DS / MLU ) ) ,( RMSe - Max( CS,CS ) ) ) ) - ( RMSe / CS ) ),( DS + ( RCSe / RRSe ) ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.04200374635511295}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( Min( ( AMS - FirstVNF_Mem ) ,( CRS / RRS ) ),FirstVNF_CPU ) - Max( ( PN + ( Min( MDR ,AMS ) * FirstVNF_RAM ) ),MRS ) )", "choosing": "( ( MUC + DS ) / Min( Min( RMSe ,( ( Min( MLU ,MLU ) * MUC ) / MUM ) ) ,MUR ) )", "obj1": 0.297244094488189, "obj2": 0.5190248671239669}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( Const ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( ( ( ( MUC / Min( MUC ,RRSe ) ) - ( MUM - ( Max( RCSe,MUM ) + RRSe ) ) ) / CS ) * DS ) ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.8223769536825655}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) ),( RRS + ( DDR + CRS ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,RCSe ) + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + RRSe ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.6614173228346457, "obj2": 0.17877735211991858}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.3937007874015748, "obj2": 0.41090571470062026}, {"determining": "( Max( ( Max( FirstVNF_Mem_Server,ACS ) - ( ARS - FirstVNF_CPU ) ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.46653543307086615, "obj2": 0.33085484244711705}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.42913385826771655, "obj2": 0.3669415761759643}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - PN ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( DS ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6259842519685039, "obj2": 0.20510063802369866}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( FirstVNF_Mem_Server + ( Max( PN,ACS ) - Const ) ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,( MLU / MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.9035433070866141, "obj2": 0.03552237822299681}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,( Const - MDR ) ) ) ),FirstVNF_Mem_Server ) - Max( ( PN + ARS ),MRS ) )", "choosing": "( ( MUC + DS ) / ( ( MUR + ( MUR / MUM ) ) * ( ( ( Max( RMSe,DS ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( CS ,( RMSe / RRSe ) ) ) - ( ( MUR / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6620470010189611}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8700787401574803, "obj2": 0.049263736393813276}, {"determining": "( Max( ( DDR + AMS ),ACS ) - ( AMS / DDR ) )", "choosing": "( Min( MUC ,DS ) / ( MUC * ( ( ( ( Min( CS ,MUM ) / RRSe ) * ( RMSe / Max( MLU,( MUR - RRSe ) ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * ( RRSe * RRSe ) ) ) ) * ( DS + MUC ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( Max( Max( ARS,MRS ),( FirstVNF_Mem_Server - ( ( FirstVNF_RAM / ( DDR / ARS ) ) * FirstVNF_RAM_Server ) ) ) - ACS )", "choosing": "( ( DS - DS ) / ( MLU - Min( MLU ,MUC ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5672547200953371}, {"determining": "( FirstVNF_CPU_Server * ( ( ( ( ( Min( Max( FirstVNF_RAM,DDR ) ,PN ) * FirstVNF_CPU_Server ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,DDR ) ) ) * PN ) - MDR ) * Min( ( AMS + DDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) * CS ) - CS ) ,( ( Min( RRSe ,MUM ) / ( CS / Max( ( RMSe * RCSe ),Min( ( MLU / ( RCSe / DS ) ) ,MUR ) ) ) ) / RCSe ) )", "obj1": 0.6751968503937008, "obj2": 0.16162786700226553}, {"determining": "( Max( PN,ACS ) * ( ( Max( BR,ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( RCSe,Min( RMSe ,DS ) ) ) ) - ( MUC / RRSe ) ) ,RRSe )", "obj1": 0.31496062992125984, "obj2": 0.5107569562230536}, {"determining": "( ( ( FirstVNF_CPU / FirstVNF_CPU ) * ( ( MRS * Min( ( Min( ACS ,AMS ) / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem - Max( AMS,ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / ( MUC + MUC ) ) - ( ( DS / MUC ) - ( MLU + RMSe ) ) ) ) * DS ) ) / RRSe )", "obj1": 0.13188976377952755, "obj2": 0.7513182969026277}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,( RMSe + RRSe ) ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,Max( CS,RCSe ) ) ) ) )", "obj1": 0.5531496062992126, "obj2": 0.2523022656331146}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * ( MDR * ( CRS + MRS ) ) ) - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,Max( ( ( RMSe / CS ) + Max( ( RMSe * DS ),RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,Max( CS,CS ) ) ) )", "obj1": 0.6594488188976378, "obj2": 0.18744820578409377}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,RRS ) ) * FirstVNF_CPU )", "choosing": "( ( RMSe + Max( Max( ( ( ( Min( MLU ,MLU ) - ( RMSe + RCSe ) ) + MUM ) * MUR ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( Min( MUR ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ),MUM ) ) ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6929133858267716, "obj2": 0.15201711063489096}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,MRS ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( Max( FirstVNF_Mem_Server,CRS ) - ( PN * PN ) )", "choosing": "( Min( MUR ,( Min( RRSe ,MUM ) / ( Min( DS ,RCSe ) + RRSe ) ) ) - ( MUM + DS ) )", "obj1": 0.21850393700787402, "obj2": 0.6186727636447883}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( ( RRSe + RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6230632007405259}, {"determining": "( FirstVNF_RAM * ( CRS - Max( ( ( Const * Min( FirstVNF_RAM ,ARS ) ) * ( Max( PN,FirstVNF_RAM ) * CRS ) ),ARS ) ) )", "choosing": "( ( ( ( Min( ( ( ( RMSe / MUC ) * ( RRSe * RRSe ) ) - MUC ) ,( Max( Min( CS ,RRSe ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / Max( Max( MUR,MLU ),DS ) ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( Max( RMSe,CS ) - MLU ) ) ) ,Max( ( MUM * ( ( RCSe * ( MLU + RRSe ) ) + RCSe ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.14133416567766027}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7597077939994926}, {"determining": "( ( Max( ( ( ( RRS * DDR ) * FirstVNF_Mem_Server ) * DDR ),AMS ) - DDR ) * Max( PN,ACS ) )", "choosing": "Max( ( Min( RMSe ,MLU ) / RMSe ),( MLU + Max( ( RMSe - RCSe ),MLU ) ) )", "obj1": 0.9251968503937008, "obj2": 0.027719325810039913}, {"determining": "( FirstVNF_CPU_Server * ( ( ( ( ( AMS + DDR ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,( Const - MDR ) ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( MUC * ( ( CS / RMSe ) * DS ) ) )", "obj1": 0.7125984251968503, "obj2": 0.1408895112365325}, {"determining": "Min( ( ACS - Max( Max( ( Max( MDR,Max( FirstVNF_Mem,BR ) ) * PN ),MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( Const - Max( PN,AMS ) ) * ( Const - MDR ) ) - CRS ) ) ) + ( Max( FirstVNF_Mem,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( CS * RCSe ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RRSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( RCSe / MUR ) ),MLU ) ) ) ) ) )", "obj1": 0.5196850393700787, "obj2": 0.27979307924779856}, {"determining": "( ACS - Max( Min( Min( PN ,FirstVNF_RAM ) ,( FirstVNF_RAM * ( ( BR / Min( FirstVNF_CPU_Server ,CRS ) ) * MDR ) ) ),( MRS - ( ( Max( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ),( ( AMS + DDR ) + FirstVNF_CPU ) ) - ACS ) - ACS ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( MUM + ( CS / RMSe ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6704329682689648}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.10034193293465667}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( ( ACS - Max( ( FirstVNF_RAM * ( ACS / FirstVNF_Mem_Server ) ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / MLU ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.573902517059763}, {"determining": "Max( PN,( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6939582661616142}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ACS ,( FirstVNF_CPU / FirstVNF_CPU ) ) ) * ( ARS * Min( Max( Min( Max( CRS,FirstVNF_RAM ) ,FirstVNF_CPU_Server ),MDR ) ,ARS ) ) ) ) * ( BR * PN ) )", "choosing": "( Max( MUC,( ( CS / ( ( MUC / DS ) - ( Min( MUC ,Min( DS ,MLU ) ) + Max( ( MUR * MUM ),Min( DS ,MUM ) ) ) ) ) * DS ) ) / ( DS + Max( ( MUR - DS ),( ( MUM + CS ) / ( CS - DS ) ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8474994286470567}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( ( Max( DS,DS ) - DS ) ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( ( ( ( MDR - ( FirstVNF_CPU_Server * PN ) ) * Min( ACS ,( Max( ( FirstVNF_CPU / CRS ),RRS ) * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Max( MUC,MUM ) / Min( MUC ,CS ) ) ) ,( Max( CS,( DS - Max( RRSe,RCSe ) ) ) - ( RCSe * ( MUC / MUR ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.07748809790397065}, {"determining": "( CRS - Max( Max( FirstVNF_RAM,MRS ),( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) ,CS ) ,( CS / CS ) )", "obj1": 0.281496062992126, "obj2": 0.5438869770315833}, {"determining": "( ( ( AMS + DDR ) * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7708736895630423}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( AMS + DDR ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,( Min( CRS ,BR ) / AMS ) ) ) - CRS ) )", "choosing": "Min( ( ( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) * Max( RRSe,DS ) ) - CS ) ,MLU )", "obj1": 0.3228346456692913, "obj2": 0.510011523497531}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) * PN ) - MDR ) * ( ACS / FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( DS + MUR ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,( MUR - ( CS / CS ) ) ) ) / MUR ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.844488188976378, "obj2": 0.05829688769335894}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( RRSe + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( ( ( ( ( MLU / DS ) + RCSe ) + MLU ) - RMSe ) * RMSe ) * ( DS - Max( CS,RCSe ) ) ) - ( ( MUM + RRSe ) - Max( ( ( RRSe + DS ) + ( CS / RMSe ) ),( MLU + Max( Min( MUR ,Min( CS ,RRSe ) ),MLU ) ) ) ) ) )", "obj1": 0.8622047244094488, "obj2": 0.05605651447123639}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( CRS * PN ) ) + Max( ( MRS - RRS ),RRS ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( MUM - Min( Min( ( MUR / DS ) ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RCSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.9901574803149606, "obj2": 0.0035511467614852705}, {"determining": "Max( ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( MDR - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( RRSe / RMSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MLU ) ) ,( RMSe - Max( CS,CS ) ) ) ) ),( DS + ( RCSe / RRSe ) ) ) ) )", "obj1": 0.6122047244094488, "obj2": 0.21470655924254145}, {"determining": "Max( ( Min( DDR ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server * CRS ) ),( FirstVNF_Mem_Server / CRS ) )", "choosing": "( ( RCSe / ( RMSe / RCSe ) ) - Max( Min( MLU ,DS ),( CS / ( MUC / CS ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6496102768789648}, {"determining": "Min( ( ACS - Max( Max( ( Max( MDR,Max( FirstVNF_Mem,BR ) ) * PN ),MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Const ) * ( Const - MDR ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( ( CS - DS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.2882761418449053}, {"determining": "( FirstVNF_RAM * ( ( ( MDR - ( FirstVNF_CPU - PN ) ) - Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( Min( DS ,RRSe ) / ( MUC * ( ( CS / ( ( Max( Max( MUC,MUC ),MUC ) - MUR ) * RCSe ) ) * DS ) ) )", "obj1": 0.7559055118110236, "obj2": 0.1020121671922865}, {"determining": "( Max( RRS,FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,( MRS / MDR ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / MUM ) * ( RMSe / Max( MUC,CS ) ) ) / ( ( Min( ( RMSe / DS ) ,CS ) / MUC ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.36220472440944884, "obj2": 0.44998262482481005}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + CRS ) - MDR ) / ARS ) / ACS ) * ( ( ( ( ( Max( MRS,FirstVNF_CPU ) + DDR ) + Min( ( Max( FirstVNF_Mem_Server,RRS ) - RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Max( CS,Max( ( ( CS * MUC ) + Min( RCSe ,( ( DS + DS ) / ( ( MUR + RMSe ) / CS ) ) ) ),CS ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38772408015381205}, {"determining": "Max( ( ( ARS + PN ) + CRS ),( ( RRS * MDR ) - ( ACS * Const ) ) )", "choosing": "( ( RCSe - ( Max( ( ( MUR / RMSe ) - RRSe ),( Min( DS ,( ( RMSe - MUC ) * RCSe ) ) + Max( ( RCSe / MUR ),Max( Min( MUC ,RMSe ),MUM ) ) ) ) - MUR ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) - RRSe ) * ( RRSe / RMSe ) ) / ( ( MUC / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.15748031496062992, "obj2": 0.6870540132610435}, {"determining": "( AMS * Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * ( ( ( ( Min( CS ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( DS / Min( ( RMSe / DS ) ,CS ) ) - ( ( ( MLU / RRSe ) / CS ) * Min( MUC ,CS ) ) ) ) * ( DS + MUC ) ) ) / ( MUC + DS ) )", "obj1": 0.6850393700787402, "obj2": 0.15672217945256894}, {"determining": "Max( ( MRS - ( FirstVNF_CPU_Server * PN ) ),( ( RRS / ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + ( RRS * RRS ) ) ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( CS ,Min( MLU ,( MUM - Min( RCSe ,( MUC - ( Max( MUR,RMSe ) + Min( DS ,RCSe ) ) ) ) ) ) ) - ( ( Min( RRSe ,MUM ) / ( MUR - Max( RRSe,( DS - ( ( RRSe * RMSe ) * RCSe ) ) ) ) ) / RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.6352876614344541}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - CRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( ACS + FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - ( CS * Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RMSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.5807086614173228, "obj2": 0.23603476175687216}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5306959663042887}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * PN ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "( Min( MUC ,Min( RMSe ,MUM ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( Max( MUR,MUR ) ,RCSe ) ,( DS - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5708661417322834, "obj2": 0.24092657527703332}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.529645609990379}, {"determining": "( FirstVNF_Mem * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( ( RMSe / CS ) - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12987631343689798}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.594488188976378, "obj2": 0.22648482376876666}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * BR ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( RRSe + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( ( ( ( ( MLU / DS ) + RCSe ) + MLU ) - RMSe ) * RMSe ) * ( DS - Max( CS,RCSe ) ) ) - ( ( MUM + RRSe ) - Max( ( ( RRSe + DS ) + ( CS / RMSe ) ),( MLU + Max( Min( MUR ,Min( CS ,RRSe ) ),MLU ) ) ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.022773968996044995}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5708661417322834, "obj2": 0.24092657527703332}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.4015748031496063, "obj2": 0.405790697428557}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,RCSe ) + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + RRSe ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.8287401574803149, "obj2": 0.06416447627988224}, {"determining": "Min( ( ACS - Max( Max( ( Max( MDR,Max( FirstVNF_Mem,BR ) ) * ( FirstVNF_RAM + ( ACS * BR ) ) ),MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( Const - MDR ) * ( ( FirstVNF_CPU / FirstVNF_CPU ) - AMS ) ) - CRS ) ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( ( CS - RRSe ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RRSe + RMSe ) - ( MUM * MUC ) ) ) )", "obj1": 0.5433070866141733, "obj2": 0.26831332855192075}, {"determining": "( FirstVNF_RAM * ( ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server + ACS ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( MUR + DS ) * ( RMSe / CS ) ),( ( Min( MUR ,RMSe ) + ( MUC + MUC ) ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.8503937007874016, "obj2": 0.05633058497131691}, {"determining": "( Max( PN,ACS ) * ( ( Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.7696850393700787, "obj2": 0.08757298381749384}, {"determining": "Max( Max( Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( ACS - ACS ) ),PN ) ),Min( FirstVNF_RAM ,( Min( AMS ,( MDR / ACS ) ) * RRS ) ) ),( ACS - ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Max( RMSe,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( RRSe + RRSe ) + CS ) ) * Max( ( DS / ( MUC * MLU ) ),RCSe ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.6928129105306182}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,MRS ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / RCSe ) )", "obj1": 0.234251968503937, "obj2": 0.5902939493574293}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.07748809790397065}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - CRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( MUM - Min( RCSe ,( MUC - ( Max( MUR,RMSe ) + Min( DS ,RCSe ) ) ) ) ) - ( ( Min( RMSe ,RCSe ) + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + RRSe ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.781496062992126, "obj2": 0.08175359734217245}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( FirstVNF_Mem_Server + ( Max( AMS,ACS ) - Const ) ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "Min( ( ( RMSe / RMSe ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RRSe ,MUM ) / RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) ) ) ) / RCSe ) )", "obj1": 0.9114173228346457, "obj2": 0.030441201793988435}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS * ( MRS - CRS ) ) )", "choosing": "( ( MUC * CS ) - Min( CS ,Max( ( ( RMSe / CS ) - ( ( RRSe - ( CS - ( DS / MLU ) ) ) / Max( CS,( CS / ( MUC - MUM ) ) ) ) ),RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44045757987027623}, {"determining": "Min( Min( CRS ,ARS ) ,( ( Max( Const,( ( FirstVNF_RAM * FirstVNF_RAM ) + MDR ) ) / MRS ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( RRSe + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( ( ( MLU + ( ( MLU / DS ) + MLU ) ) - RMSe ) * RMSe ) * ( DS - Max( CS,RCSe ) ) ) - ( ( MUM + RRSe ) - Max( ( ( RRSe + DS ) + ( CS / RMSe ) ),( MLU + Max( Min( MUR ,( MUM * MUM ) ),MLU ) ) ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.2726289431574951}, {"determining": "( ( CRS * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7521175565418667}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * PN ) ) + Max( ( MRS - RRS ),RRS ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * Min( Max( MUR,RMSe ) ,RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,Max( MLU,MUM ) ) ) ) * DS ) ) )", "obj1": 0.9645669291338582, "obj2": 0.014915277482807594}, {"determining": "( ( ARS - FirstVNF_CPU ) - ( ( MRS - CRS ) * MDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( RCSe,MUC ) ) + MUC ) - Min( CS ,Max( ( ( RMSe + CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4431626064639917}, {"determining": "Min( Min( CRS ,ARS ) ,( ( ARS / MRS ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6728763008974887}, {"determining": "( FirstVNF_CPU_Server * ( Min( ( ( ( BR / RRS ) - Const ) * MDR ) ,FirstVNF_Mem_Server ) * ( ( ( ( AMS + DDR ) + Max( ( ( BR / FirstVNF_CPU_Server ) - RRS ),Min( FirstVNF_CPU_Server ,( Const - DDR ) ) ) ) * PN ) - MDR ) ) )", "choosing": "( ( Max( RRSe,CS ) + Max( Max( Max( RMSe,MUR ),( Max( ( ( MUR - MUM ) + MUR ),Min( DS ,MUM ) ) - ( CS * MUC ) ) ),( MUM / MUC ) ) ) / ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) )", "obj1": 0.7303149606299213, "obj2": 0.119829758876245}, {"determining": "( Max( PN,ACS ) * ( ( ( ARS * ( MRS * DDR ) ) / Min( ( Min( Min( FirstVNF_Mem_Server ,ACS ) ,MRS ) / DDR ) ,FirstVNF_RAM ) ) - BR ) )", "choosing": "Min( ( ( RMSe / RMSe ) - CS ) ,( ( ( RRSe + ( DS - RRSe ) ) + MUC ) / RCSe ) )", "obj1": 0.9153543307086615, "obj2": 0.02918107452357921}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5452755905511811, "obj2": 0.25682724394978007}, {"determining": "( ACS - Max( ( FirstVNF_CPU + Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( MRS - Max( AMS,FirstVNF_RAM ) ) / PN ) ) ) )", "choosing": "Min( ( MUC * MUR ) ,( ( ( RMSe / RMSe ) * ( Min( RRSe ,MUM ) / RRSe ) ) - RCSe ) )", "obj1": 0.234251968503937, "obj2": 0.5902939493574293}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,MRS ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,( ( RMSe / CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.5797078313603827}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( ( ( RRS * ( CRS / ACS ) ) * FirstVNF_Mem_Server ) + MDR ) ,AMS ) - PN ) - AMS ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( CS / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( CS + DS ),MUR ) ) ) ) ) ) )", "obj1": 0.7204724409448819, "obj2": 0.13149640017846595}], "23": [{"determining": "( FirstVNF_RAM * ( ( Min( ( FirstVNF_RAM_Server - ARS ) ,FirstVNF_Mem_Server ) * Min( MDR ,CRS ) ) - CRS ) )", "choosing": "( ( Max( Max( ( Max( DS,( MUC * ( MUM + RMSe ) ) ) - ( MUR / RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( ( RMSe - MUR ) ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8490954441606141}, {"determining": "( ( CRS * ( ( CRS - ACS ) * ( ARS * ARS ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( CS * MUC ) + Min( RCSe ,RMSe ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8490954441606141}, {"determining": "Max( ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( MDR - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( RRSe / RMSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MLU ) ) ,( RMSe - Max( CS,CS ) ) ) ) ),( DS + ( RCSe / RRSe ) ) ) ) )", "obj1": 0.6122047244094488, "obj2": 0.21470655924254145}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.594488188976378, "obj2": 0.22648482376876666}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,RCSe ) + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + RRSe ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.3090551181102362, "obj2": 0.5072116339345808}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.42913385826771655, "obj2": 0.3669415761759643}, {"determining": "( Min( ( MRS + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) * Min( FirstVNF_RAM ,CRS ) )", "choosing": "( ( Max( Max( ( ( CS / RMSe ) + ( MUR + DS ) ),RCSe ),( ( DS - RMSe ) - ( MLU - ( ( RMSe / Min( MUC ,RCSe ) ) * DS ) ) ) ) / RMSe ) - ( RMSe / ( CS * ( DS - MUM ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.19978906379469616}, {"determining": "( ( ( AMS + DDR ) * FirstVNF_RAM ) * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( RMSe - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7317057483514202}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4654155679063897}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) - ( DS - RRSe ) ) * DS ) ) )", "obj1": 0.33661417322834647, "obj2": 0.48912787380072886}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( Max( ( DDR + AMS ),ACS ) - ( AMS / DDR ) )", "choosing": "( Min( MUC ,DS ) / ( MUC * ( ( ( ( Min( CS ,MUM ) / RRSe ) * ( RMSe / Max( MLU,( MUR - RRSe ) ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * ( RRSe * RRSe ) ) ) ) * ( DS + MUC ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "Min( Min( CRS ,ARS ) ,( ( Max( Const,( ( FirstVNF_RAM * FirstVNF_RAM ) + MDR ) ) / MRS ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( RRSe + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( ( ( MLU + ( ( MLU / DS ) + MLU ) ) - RMSe ) * RMSe ) * ( DS - Max( CS,RCSe ) ) ) - ( ( MUM + RRSe ) - Max( ( ( RRSe + DS ) + ( CS / RMSe ) ),( MLU + Max( Min( MUR ,( MUM * MUM ) ),MLU ) ) ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.2726289431574951}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( Const ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( ( ( ( MUC / Min( MUC ,RRSe ) ) - ( MUM - ( Max( RCSe,MUM ) + RRSe ) ) ) / CS ) * DS ) ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.8223769536825655}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( ( Max( DS,DS ) - DS ) ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( Max( ( MRS * Min( ( Min( ACS ,AMS ) / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem - Max( AMS,ACS ) ) ) ) ),ACS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( ( RRSe + RMSe ),( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6165497288738377}, {"determining": "( CRS - Max( Max( FirstVNF_RAM,MRS ),( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) ,CS ) ,( CS / CS ) )", "obj1": 0.281496062992126, "obj2": 0.5438869770315833}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,( RMSe + RRSe ) ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * Max( RMSe,Max( CS,RCSe ) ) ) ) )", "obj1": 0.5531496062992126, "obj2": 0.2523022656331146}, {"determining": "( ( CRS * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7521175565418667}, {"determining": "( Max( RRS,FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,( MRS / MDR ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / MUM ) * ( RMSe / Max( MUC,CS ) ) ) / ( ( Min( ( RMSe / DS ) ,CS ) / MUC ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.36220472440944884, "obj2": 0.44998262482481005}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + CRS ) - MDR ) / ARS ) / ACS ) * ( ( ( ( ( Max( MRS,FirstVNF_CPU ) + DDR ) + Min( ( Max( FirstVNF_Mem_Server,RRS ) - RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Max( CS,Max( ( ( CS * MUC ) + Min( RCSe ,( ( DS + DS ) / ( ( MUR + RMSe ) / CS ) ) ) ),CS ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38772408015381205}, {"determining": "( Max( Max( ARS,MRS ),( FirstVNF_Mem_Server - ( ( FirstVNF_RAM / ( DDR / ARS ) ) * FirstVNF_RAM_Server ) ) ) - ACS )", "choosing": "( ( DS - DS ) / ( MLU - Min( MLU ,MUC ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5672547200953371}, {"determining": "( ( ( AMS + DDR ) * FirstVNF_Mem_Server ) * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( DDR + ( ( FirstVNF_RAM * BR ) + ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ) / ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - CRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( ( RMSe + Max( ( ( MUC + RMSe ) + MUC ),MLU ) ) + ( MUM - ( RRSe - ( MLU - CS ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( ( MUR / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.6259842519685039, "obj2": 0.20510063802369866}, {"determining": "( Max( FirstVNF_Mem,BR ) - ACS )", "choosing": "( ( ( Min( MUM ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.5893353597859942}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,RRS ) ) * FirstVNF_CPU )", "choosing": "( ( RMSe + Max( Max( ( ( ( Min( MLU ,MLU ) - ( RMSe + RCSe ) ) + MUM ) * MUR ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( Min( MUR ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ),MUM ) ) ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6929133858267716, "obj2": 0.15201711063489096}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( Const - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_RAM ,MDR ) ) ) + ( ACS - AMS ) ) - MDR ) * Max( RRS,Max( Const,( FirstVNF_Mem_Server - ( BR + Const ) ) ) ) ) - CRS ) )", "choosing": "( ( DS + MUC ) / ( MUC * ( RRSe + ( RRSe / Min( CS ,Max( Min( ( MUR + RRSe ) ,CS ),CS ) ) ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.07057701122362248}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ACS ,( FirstVNF_CPU / FirstVNF_CPU ) ) ) * ( ARS * Min( Max( Min( Max( CRS,FirstVNF_RAM ) ,FirstVNF_CPU_Server ),MDR ) ,ARS ) ) ) ) * ( BR * PN ) )", "choosing": "( Max( MUC,( ( CS / ( ( MUC / DS ) - ( Min( MUC ,Min( DS ,MLU ) ) + Max( ( MUR * MUM ),Min( DS ,MUM ) ) ) ) ) * DS ) ) / ( DS + Max( ( MUR - DS ),( ( MUM + CS ) / ( CS - DS ) ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8474994286470567}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,( ACS - ( ( ( AMS - Const ) * ( Const - MDR ) ) - CRS ) ) ) ),( RRS + ( DDR + CRS ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,RCSe ) + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + RRSe ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.6614173228346457, "obj2": 0.17877735211991858}, {"determining": "Max( ( ( ARS + PN ) + CRS ),( ( RRS * MDR ) - ( ACS * Const ) ) )", "choosing": "( ( RCSe - ( Max( ( ( MUR / RMSe ) - RRSe ),( Min( DS ,( ( RMSe - MUC ) * RCSe ) ) + Max( ( RCSe / MUR ),Max( Min( MUC ,RMSe ),MUM ) ) ) ) - MUR ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) - RRSe ) * ( RRSe / RMSe ) ) / ( ( MUC / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.15748031496062992, "obj2": 0.6870540132610435}, {"determining": "( ( ( RRS - MRS ) + FirstVNF_CPU_Server ) - Max( Max( MRS,Max( PN,Max( MRS,( FirstVNF_RAM_Server - Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ),ACS ) )", "choosing": "( ( CS * MUR ) - Min( ( MUC / MUR ) ,RCSe ) )", "obj1": 0.4094488188976378, "obj2": 0.400121285213869}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.7047244094488189, "obj2": 0.14067715202372083}, {"determining": "( ( Max( DDR,AMS ) - ACS ) - Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + Min( ( RRSe + RCSe ) ,RMSe ) ) / ( MUC * ( ( ( ( Min( CS ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / RMSe ) ,CS ) ) - ( ( RMSe / CS ) * Min( MUC ,CS ) ) ) ) * ( DS + MUC ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.42234145999131195}, {"determining": "( Max( FirstVNF_CPU,PN ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( FirstVNF_RAM - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( ACS - FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Min( RCSe ,MUC ) ) - Min( CS ,Min( RMSe ,( MUM - ( Min( RCSe ,Max( MUR,MUR ) ) * ( MUM - Max( Min( RCSe ,DS ),MUR ) ) ) ) ) ) )", "obj1": 0.44291338582677164, "obj2": 0.3567935099687705}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,MRS ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - CRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09973757444213986}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( ( ( RRS * ( CRS / ACS ) ) * FirstVNF_Mem_Server ) + MDR ) ,AMS ) - PN ) - AMS ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( CS / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( CS + DS ),MUR ) ) ) ) ) ) )", "obj1": 0.7204724409448819, "obj2": 0.13149640017846595}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,MRS ),Max( ( ACS - Max( ( FirstVNF_RAM * ( ACS / FirstVNF_Mem_Server ) ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / MLU ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.573902517059763}, {"determining": "Min( ( ACS - Max( Max( ( Max( MDR,Max( FirstVNF_Mem,BR ) ) * PN ),MRS ),FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - ( ( ( Const - Max( PN,AMS ) ) * ( Const - MDR ) ) - CRS ) ) ) + ( Max( FirstVNF_Mem,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( CS * RCSe ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RRSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( RCSe / MUR ) ),MLU ) ) ) ) ) )", "obj1": 0.5196850393700787, "obj2": 0.27979307924779856}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "Max( ( MDR + ( CRS + PN ) ),( ( PN * MDR ) - ( ACS * Const ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7180277731684596}, {"determining": "( Max( ( Max( FirstVNF_Mem_Server,ACS ) - ( ARS - FirstVNF_CPU ) ),ACS ) - FirstVNF_Mem_Server )", "choosing": "( ( ( MLU / RRSe ) / RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.4704724409448819, "obj2": 0.33005560964636993}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8700787401574803, "obj2": 0.049263736393813276}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( MDR - Const ) ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.9625984251968503, "obj2": 0.016963794100715836}, {"determining": "( ( Max( ( ( ( RRS * DDR ) * FirstVNF_Mem_Server ) * DDR ),AMS ) - DDR ) * Max( PN,ACS ) )", "choosing": "Max( ( Min( RMSe ,MLU ) / RMSe ),( MLU + Max( ( RMSe - RCSe ),MLU ) ) )", "obj1": 0.9251968503937008, "obj2": 0.027719325810039913}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.3937007874015748, "obj2": 0.41090571470062026}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) * PN ) - MDR ) * ( ACS / FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( DS + MUR ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,( MUR - ( CS / CS ) ) ) ) / MUR ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.844488188976378, "obj2": 0.05829688769335894}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.41929133858267714, "obj2": 0.39300225831127045}, {"determining": "( Max( ACS,FirstVNF_CPU ) - Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / ( MLU / RCSe ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) + DS ) ) )", "obj1": 0.4881889763779528, "obj2": 0.3018204678138708}, {"determining": "( Max( PN,ACS ) * ( ( ( ( FirstVNF_CPU_Server * ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( DS / MUR ) * RCSe ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( Max( MUC,Min( ( DS / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * DS ) ) )", "obj1": 0.5433070866141733, "obj2": 0.258665662422607}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( RRSe / RMSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MLU ) ) ,( RMSe - Max( CS,CS ) ) ) ) ),( DS + ( RCSe / RRSe ) ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.04149115653837762}, {"determining": "Max( ( Min( DDR ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server * CRS ) ),( FirstVNF_Mem_Server / CRS ) )", "choosing": "( ( RCSe / ( RMSe / RCSe ) ) - Max( Min( MLU ,DS ),( CS / ( MUC / CS ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6496102768789648}, {"determining": "( FirstVNF_RAM * ( BR * ( FirstVNF_Mem / Min( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) ,CRS ) ) ) )", "choosing": "Min( ( ( RRSe * Max( RCSe,RMSe ) ) - MUC ) ,( ( CS * ( MUM - RMSe ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.07748809790397065}, {"determining": "Max( ( MRS - ( Const + ( FirstVNF_CPU_Server + Min( CRS ,( FirstVNF_Mem_Server / AMS ) ) ) ) ),( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Max( BR,MDR ) ) ,ACS ) - ACS ) + CRS ),AMS ) ) )", "choosing": "( ( MUC * DS ) / ( ( CS * MUC ) - RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7061774260790011}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( Const ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * Max( RRS,Const ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / ( ( RCSe * DS ) / CS ) ) - Max( MUR,RCSe ) ) ) * DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6778437459492787}, {"determining": "( ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( Min( Const ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ,FirstVNF_Mem_Server ) ) - CRS ) * ( MRS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Max( RCSe,MUM ) - RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( DS / RMSe ) ,CS ) ) - ( RCSe * RRSe ) ) ) * DS ) ) )", "obj1": 0.452755905511811, "obj2": 0.33929187862405025}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( ( RRSe + RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5177757019664442}, {"determining": "Max( ( ( ( ( Max( ( ( MDR * PN ) - ( MRS - FirstVNF_RAM_Server ) ),Max( DDR,( Const + MDR ) ) ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( RRSe / RMSe ) - Min( CS ,Max( ( ( CS / RMSe ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MLU ) ) ,( RMSe - Max( RCSe,CS ) ) ) ) ),( RMSe + ( RRSe / RRSe ) ) ) ) )", "obj1": 0.6830708661417323, "obj2": 0.15644935628405374}, {"determining": "( Max( PN,ACS ) * ( ( ( DDR - MRS ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( Max( RRSe,( ( RMSe - MLU ) / Max( MLU,RCSe ) ) ) - Min( CS ,Max( ( ( ( RRSe - MUC ) - Min( ( CS / ( DS / MLU ) ) ,( RMSe - Max( CS,CS ) ) ) ) - ( RMSe / CS ) ),( DS + ( RCSe / RRSe ) ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.04200374635511295}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,( Const - MDR ) ) ) ),FirstVNF_Mem_Server ) - Max( ( PN + ARS ),MRS ) )", "choosing": "( ( MUC + DS ) / ( ( MUR + ( MUR / MUM ) ) * ( ( ( Max( RMSe,DS ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( CS ,( RMSe / RRSe ) ) ) - ( ( MUR / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6620470010189611}, {"determining": "( ( ARS - FirstVNF_CPU ) - ( ( MRS - CRS ) * MDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( RCSe,MUC ) ) + MUC ) - Min( CS ,Max( ( ( RMSe + CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4431626064639917}, {"determining": "( FirstVNF_RAM * ( CRS - Max( ( ( Const * Min( FirstVNF_RAM ,ARS ) ) * ( Max( PN,FirstVNF_RAM ) * CRS ) ),ARS ) ) )", "choosing": "( ( ( ( Min( ( ( ( RMSe / MUC ) * ( RRSe * RRSe ) ) - MUC ) ,( Max( Min( CS ,RRSe ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / Max( Max( MUR,MLU ),DS ) ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( Max( RMSe,CS ) - MLU ) ) ) ,Max( ( MUM * ( ( RCSe * ( MLU + RRSe ) ) + RCSe ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.14133416567766027}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5306959663042887}, {"determining": "( FirstVNF_CPU_Server * ( ( ( ( ( AMS + DDR ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ( AMS + DDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Max( ( ( CS * MUC ) + Min( RCSe ,RMSe ) ),CS ) ) )", "obj1": 0.6692913385826772, "obj2": 0.16681418883312}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5708661417322834, "obj2": 0.24092657527703332}, {"determining": "( Max( ( Max( FirstVNF_Mem_Server,ACS ) - ( ARS - FirstVNF_CPU ) ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.33239094827170496}, {"determining": "( Max( Min( ( AMS - FirstVNF_Mem ) ,( CRS / RRS ) ),FirstVNF_CPU ) - Max( ( PN + ( Min( MDR ,AMS ) * FirstVNF_RAM ) ),MRS ) )", "choosing": "( ( MUC + DS ) / Min( Min( RMSe ,( ( Min( MLU ,MLU ) * MUC ) / MUM ) ) ,MUR ) )", "obj1": 0.297244094488189, "obj2": 0.5190248671239669}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.529645609990379}, {"determining": "Max( ( MRS - ( FirstVNF_CPU_Server * PN ) ),( ( RRS / ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + ( RRS * RRS ) ) ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( CS ,Min( MLU ,( MUM - Min( RCSe ,( MUC - ( Max( MUR,RMSe ) + Min( DS ,RCSe ) ) ) ) ) ) ) - ( ( Min( RRSe ,MUM ) / ( MUR - Max( RRSe,( DS - ( ( RRSe * RMSe ) * RCSe ) ) ) ) ) / RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.6352876614344541}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,( ( RMSe / CS ) * Min( CS ,MUC ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6423243746908744}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5708661417322834, "obj2": 0.24092657527703332}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( ( ( AMS + DDR ) * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7708736895630423}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * PN ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "( Min( MUC ,Min( RMSe ,MUM ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( Max( MUR,MUR ) ,RCSe ) ,( DS - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( Max( PN,ACS ) * ( ( Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.7696850393700787, "obj2": 0.08757298381749384}, {"determining": "Max( ( MDR + Max( FirstVNF_RAM,BR ) ),( MRS - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( DS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7106713338743792}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - CRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( ACS + FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - ( CS * Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RMSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.5807086614173228, "obj2": 0.23603476175687216}, {"determining": "( FirstVNF_RAM * ( ( ( ARS / Const ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( MLU * MLU ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( RCSe ,RRSe ) ) ) ) * DS ) ) )", "obj1": 0.7401574803149606, "obj2": 0.11374925986610172}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - PN ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( DS ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6259842519685039, "obj2": 0.20510063802369866}, {"determining": "( ( ( ( MDR - ( FirstVNF_CPU_Server * PN ) ) * Min( ACS ,( Max( ( FirstVNF_CPU / CRS ),RRS ) * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Max( MUC,MUM ) / Min( MUC ,CS ) ) ) ,( Max( CS,( DS - Max( RRSe,RCSe ) ) ) - ( RCSe * ( MUC / MUR ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.07748809790397065}, {"determining": "Max( Max( Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( ACS - ACS ) ),PN ) ),Min( FirstVNF_RAM ,( Min( AMS ,( MDR / ACS ) ) * RRS ) ) ),( ACS - ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Max( RMSe,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( RRSe + RRSe ) + CS ) ) * Max( ( DS / ( MUC * MLU ) ),RCSe ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.6928129105306182}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - FirstVNF_CPU )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6307156656027506}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * PN ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "Min( ( ( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) * CS ) - CS ) ,( ( Min( RRSe ,MUM ) / ( CS / Max( ( RMSe * RCSe ),Min( ( MLU / ( RCSe / DS ) ) ,MUR ) ) ) ) / RCSe ) )", "obj1": 0.937007874015748, "obj2": 0.02343299192647607}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.5807086614173228, "obj2": 0.23603476175687216}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * PN ) ) + Max( ( MRS - RRS ),RRS ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "( MUC / ( MUC * ( ( ( ( RMSe * Min( Max( CS,MUC ) ,RMSe ) ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.9665354330708661, "obj2": 0.013383234877046119}, {"determining": "( Max( ( FirstVNF_CPU / FirstVNF_CPU ),ACS ) * ( ( Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * Max( MUR,RMSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.08374800673298508}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( FirstVNF_Mem_Server + ( Max( PN,ACS ) - Const ) ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,( MLU / MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.9035433070866141, "obj2": 0.03552237822299681}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS * ( MRS - CRS ) ) )", "choosing": "( ( MUC * CS ) - Min( CS ,Max( ( ( RMSe / CS ) - ( ( RRSe - ( CS - ( DS / MLU ) ) ) / Max( CS,( CS / ( MUC - MUM ) ) ) ) ),RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44045757987027623}, {"determining": "( FirstVNF_CPU_Server * ( ( ( ( ( Min( Max( FirstVNF_RAM,DDR ) ,PN ) * FirstVNF_CPU_Server ) + Max( ( ( BR / FirstVNF_CPU ) - RRS ),Min( FirstVNF_CPU_Server ,DDR ) ) ) * PN ) - MDR ) * Min( ( AMS + DDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,( MLU / MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.9763779527559056, "obj2": 0.008999838144554857}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,MRS ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05499914628407308}], "24": [{"determining": "( FirstVNF_RAM * ( ( Min( ( FirstVNF_RAM_Server * ARS ) ,FirstVNF_Mem_Server ) * Max( ACS,Max( FirstVNF_RAM,( AMS + ARS ) ) ) ) - CRS ) )", "choosing": "( Max( MUR,MUM ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8490954441606141}, {"determining": "( FirstVNF_RAM * ( ( Min( ( FirstVNF_RAM_Server - ARS ) ,FirstVNF_Mem_Server ) * Min( MDR ,CRS ) ) - CRS ) )", "choosing": "( ( Max( Max( ( Max( DS,( MUC * ( MUM + RMSe ) ) ) - ( MUR / RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( ( RMSe - MUR ) ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8490954441606141}, {"determining": "( Max( PN,ACS ) * ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( DS / MLU ) ) ) * DS ) ) )", "obj1": 0.6515748031496063, "obj2": 0.18760089351549536}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4654155679063897}, {"determining": "( Max( ( DDR + AMS ),ACS ) - ( AMS / DDR ) )", "choosing": "( Min( MUC ,DS ) / ( MUC * ( ( ( ( Min( CS ,MUM ) / RRSe ) * ( RMSe / Max( MLU,( MUR - RRSe ) ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * ( RRSe * RRSe ) ) ) ) * ( DS + MUC ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( Const ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( ( ( ( MUC / Min( MUC ,RRSe ) ) - ( MUM - ( Max( RCSe,MUM ) + RRSe ) ) ) / CS ) * DS ) ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.8223769536825655}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - PN ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( DS ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6279527559055118, "obj2": 0.20485559154232144}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( ( PN * ( Max( FirstVNF_Mem,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) * ( ( ( MDR - ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) * Max( ( Const + ( FirstVNF_RAM_Server * ARS ) ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( ( ( MUR + DS ) * ( ( MLU + MUC ) - MUC ) ) + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( DS * ( RCSe / MUR ) ),MLU ) ) ) ) - Min( Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ,CS ) )", "obj1": 0.5531496062992126, "obj2": 0.25148903088739455}, {"determining": "( ( ( RRS - MRS ) + FirstVNF_CPU_Server ) - Max( Max( MRS,Max( PN,Max( MRS,( FirstVNF_RAM_Server - Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ),ACS ) )", "choosing": "( ( CS * MUR ) - Min( ( MUC / MUR ) ,RCSe ) )", "obj1": 0.4094488188976378, "obj2": 0.400121285213869}, {"determining": "( Max( RRS,FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,( MRS / MDR ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / MUM ) * ( RMSe / Max( MUC,CS ) ) ) / ( ( Min( ( RMSe / DS ) ,CS ) / MUC ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.36220472440944884, "obj2": 0.44998262482481005}, {"determining": "( CRS - Max( Max( FirstVNF_RAM,MRS ),( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) ,CS ) ,( CS / CS ) )", "obj1": 0.281496062992126, "obj2": 0.5438869770315833}, {"determining": "Min( Min( CRS ,ARS ) ,( ( Max( Const,( ( FirstVNF_RAM * FirstVNF_RAM ) + MDR ) ) / MRS ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( RRSe + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( ( ( MLU + ( ( MLU / DS ) + MLU ) ) - RMSe ) * RMSe ) * ( DS - Max( CS,RCSe ) ) ) - ( ( MUM + RRSe ) - Max( ( ( RRSe + DS ) + ( CS / RMSe ) ),( MLU + Max( Min( MUR ,( MUM * MUM ) ),MLU ) ) ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.2726289431574951}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) - ( DS - RRSe ) ) * DS ) ) )", "obj1": 0.33661417322834647, "obj2": 0.48912787380072886}, {"determining": "( Max( Max( ARS,MRS ),( FirstVNF_Mem_Server - ( ( FirstVNF_RAM / ( DDR / ARS ) ) * FirstVNF_RAM_Server ) ) ) - ACS )", "choosing": "( ( DS - DS ) / ( MLU - Min( MLU ,MUC ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5672547200953371}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,RRS ) ) * FirstVNF_CPU )", "choosing": "( ( RMSe + Max( Max( ( ( ( Min( MLU ,MLU ) - ( RMSe + RCSe ) ) + MUM ) * MUR ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( Min( MUR ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ),MUM ) ) ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6929133858267716, "obj2": 0.15201711063489096}, {"determining": "( ( ( AMS + DDR ) * FirstVNF_RAM ) * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( RMSe - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7347400841445332}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ACS ,( FirstVNF_CPU / FirstVNF_CPU ) ) ) * ( ARS * Min( Max( Min( Max( CRS,FirstVNF_RAM ) ,FirstVNF_CPU_Server ),MDR ) ,ARS ) ) ) ) * ( BR * PN ) )", "choosing": "( Max( MUC,( ( CS / ( ( MUC / DS ) - ( Min( MUC ,Min( DS ,MLU ) ) + Max( ( MUR * MUM ),Min( DS ,MUM ) ) ) ) ) * DS ) ) / ( DS + Max( ( MUR - DS ),( ( MUM + CS ) / ( CS - DS ) ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8474994286470567}, {"determining": "( Max( ( DDR * PN ),( FirstVNF_RAM_Server / AMS ) ) - Max( BR,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / ( ( RMSe / RMSe ) - CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) / ( ( RCSe * ( DS / MUR ) ) + DS ) )", "obj1": 0.1732283464566929, "obj2": 0.6666724780639017}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.594488188976378, "obj2": 0.22648482376876666}, {"determining": "Max( ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( MDR - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( RRSe / RMSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MLU ) ) ,( RMSe - Max( CS,CS ) ) ) ) ),( DS + ( RCSe / RRSe ) ) ) ) )", "obj1": 0.6122047244094488, "obj2": 0.21470655924254145}, {"determining": "( Max( ( MRS * Min( ( Min( ACS ,AMS ) / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem - Max( AMS,ACS ) ) ) ) ),ACS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( ( RRSe + RMSe ),( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6110658711004896}, {"determining": "( ( ( AMS + DDR ) * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7705406545622144}, {"determining": "( ( AMS / Const ) * ( CRS - ( ( ( ( ( PN * ARS ) + Max( ( MRS - RRS ),( FirstVNF_CPU_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * Min( ( CS / ( ( MUR / Min( MLU ,MUR ) ) - ( MUM - ( MUR + CS ) ) ) ) ,DS ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09968821160072751}, {"determining": "( Max( FirstVNF_CPU,ACS ) * ( FirstVNF_RAM * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUC - DS ) + CS ) * ( DS / Max( Min( MLU ,MUR ),( MUC - DS ) ) ) ) / ( MUC + DS ) )", "obj1": 0.5177165354330708, "obj2": 0.27894071163746065}, {"determining": "( ( RRS + DDR ) - Max( Max( Const,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( DS - ( CS - ( RCSe + MLU ) ) ) * CS ) - CS ) ,( DS / MUR ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( Const ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * Max( RRS,Const ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / ( ( RCSe * DS ) / CS ) ) - Max( MUR,RCSe ) ) ) * DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6778437459492787}, {"determining": "( ( Const - RRS ) * ( ( ( ( ( Min( ARS ,Max( MRS,RRS ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) / FirstVNF_Mem_Server ) ) * PN ) - MDR ) + Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + RCSe ) / Max( RMSe,MUC ) )", "obj1": 0.4271653543307087, "obj2": 0.37502913464985554}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( Const - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_RAM ,MDR ) ) ) + ( ACS - AMS ) ) - MDR ) * Max( RRS,Max( Const,( FirstVNF_Mem_Server - ( BR + Const ) ) ) ) ) - CRS ) )", "choosing": "( ( DS + MUC ) / ( MUC * ( RRSe + ( RRSe / Min( CS ,Max( Min( ( MUR + RRSe ) ,CS ),CS ) ) ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.07057701122362248}, {"determining": "( Max( ( FirstVNF_CPU / FirstVNF_CPU ),ACS ) * ( ( Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * Max( MUR,RMSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.08374800673298508}, {"determining": "( Max( ( Max( FirstVNF_Mem_Server,ACS ) - ( ARS - FirstVNF_CPU ) ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.33239094827170496}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8700787401574803, "obj2": 0.049263736393813276}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.40995802435403755}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + CRS ) - MDR ) / ARS ) / ACS ) * ( ( ( ( ( Max( MRS,FirstVNF_CPU ) + DDR ) + Min( ( Max( FirstVNF_Mem_Server,RRS ) - RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Max( CS,Max( ( ( CS * MUC ) + Min( RCSe ,( ( DS + DS ) / ( ( MUR + RMSe ) / CS ) ) ) ),CS ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38772408015381205}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,RCSe ) + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + RRSe ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.3090551181102362, "obj2": 0.5072116339345808}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( Max( ( FirstVNF_CPU + FirstVNF_Mem_Server ),( PN - BR ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ACS,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( Min( MLU ,MUM ),RRSe ) * ( RMSe / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),( CS + MUC ) ) ) ) ) ) ) )", "obj1": 0.7204724409448819, "obj2": 0.13149640017846595}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,RCSe ) + RRSe ) - Max( ( ( RMSe / CS ) + ( DS + RRSe ) ),( ( ( CS - DS ) + DS ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.3090551181102362, "obj2": 0.5072116339345808}, {"determining": "( Max( ( Max( FirstVNF_Mem_Server,ACS ) - ( ARS - FirstVNF_CPU ) ),ACS ) - FirstVNF_Mem_Server )", "choosing": "( ( ( MLU / RRSe ) / RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.4704724409448819, "obj2": 0.33005560964636993}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - BR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) ) * DS ) ) )", "obj1": 0.7145669291338582, "obj2": 0.13772151400944502}, {"determining": "( ( ( AMS + DDR ) * FirstVNF_Mem_Server ) * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "Max( ( ( ARS + PN ) + CRS ),( ( RRS * MDR ) - ( ACS * Const ) ) )", "choosing": "( ( RCSe - ( Max( ( ( MUR / RMSe ) - RRSe ),( Min( DS ,( ( RMSe - MUC ) * RCSe ) ) + Max( ( RCSe / MUR ),Max( Min( MUC ,RMSe ),MUM ) ) ) ) - MUR ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) - RRSe ) * ( RRSe / RMSe ) ) / ( ( MUC / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.15748031496062992, "obj2": 0.6870540132610435}, {"determining": "( Max( Max( ( MDR + ( CRS + PN ) ),( ( PN * MDR ) - ( ACS * Const ) ) ),ACS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( DS,( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.621018783475557}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( ( ( RRS * ( CRS / ACS ) ) * FirstVNF_Mem_Server ) + MDR ) ,AMS ) - PN ) - AMS ) )", "choosing": "( ( ( ( Min( MLU ,MUM ) / RRSe ) * ( CS / RMSe ) ) / ( Max( RCSe,MUR ) - Max( Min( RMSe ,MLU ),( MUR + ( MUR / MUM ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( CS + DS ),MUR ) ) ) ) ) ) )", "obj1": 0.7204724409448819, "obj2": 0.13149640017846595}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + ( BR + FirstVNF_CPU ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( RCSe ,RRSe ) ) ) ) * DS ) ) )", "obj1": 0.7401574803149606, "obj2": 0.11374925986610172}, {"determining": "Max( ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.6771653543307087, "obj2": 0.16012054339099213}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( ( ( ( ( Max( MDR,( ARS - FirstVNF_Mem_Server ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( RRS + ( ( ( FirstVNF_RAM * ( MRS - PN ) ) - FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) ) - CRS ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / Min( MUC ,( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUM / DS ) ) ,( Max( RRSe,CS ) - Min( MUR ,MUR ) ) ) ) ) * DS ) ) )", "obj1": 0.765748031496063, "obj2": 0.09702990575083877}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS * ( MRS - CRS ) ) )", "choosing": "( ( MUC * CS ) - Min( CS ,Max( ( ( RMSe / CS ) - ( ( RRSe - ( CS - ( DS / MLU ) ) ) / Max( CS,( CS / ( MUC - MUM ) ) ) ) ),RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44045757987027623}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "( ( CRS * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7521175565418667}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - Max( ( ( CS / RMSe ) + ( DS + RRSe ) ),( ( ( CS - DS ) + Max( MLU,RMSe ) ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.7480314960629921, "obj2": 0.10798732472821632}, {"determining": "Max( ( ( ( ( Max( ( ( MDR * PN ) - ( MRS - FirstVNF_RAM_Server ) ),Max( DDR,( Const + MDR ) ) ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( RRSe / RMSe ) - Min( CS ,Max( ( ( CS / RMSe ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MLU ) ) ,( RMSe - Max( RCSe,CS ) ) ) ) ),( RMSe + ( RRSe / RRSe ) ) ) ) )", "obj1": 0.6830708661417323, "obj2": 0.15644935628405374}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( ( RRSe + ( MLU * DS ) ) / MUC ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe * MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.23372205571499358}, {"determining": "( ( ARS - FirstVNF_CPU ) - ( ( MRS - CRS ) * MDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( RCSe,MUC ) ) + MUC ) - Min( CS ,Max( ( ( RMSe + CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4431626064639917}, {"determining": "( FirstVNF_RAM * ( CRS - Max( ( ( Const * Min( FirstVNF_RAM ,ARS ) ) * ( Max( PN,FirstVNF_RAM ) * CRS ) ),ARS ) ) )", "choosing": "( ( ( ( Min( ( ( ( RMSe / MUC ) * ( RRSe * RRSe ) ) - MUC ) ,( Max( Min( CS ,RRSe ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / Max( Max( MUR,MLU ),DS ) ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( Max( RMSe,CS ) - MLU ) ) ) ,Max( ( MUM * ( ( RCSe * ( MLU + RRSe ) ) + RCSe ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.14133416567766027}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( MDR - Const ) ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.9625984251968503, "obj2": 0.016963794100715836}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,MRS ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( DS + MUR ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,( MUR - ( CS / CS ) ) ) ) / MUR ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.8208661417322834, "obj2": 0.0644237261226924}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( Min( FirstVNF_CPU_Server ,MDR ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( RRSe / RMSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Min( ( CS / ( DS / MLU ) ) ,( RMSe - Max( RCSe,MUM ) ) ) ) ),( DS + ( RCSe / RRSe ) ) ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07870799278198122}, {"determining": "( Max( Min( ( AMS - FirstVNF_Mem ) ,( CRS / RRS ) ),FirstVNF_CPU ) - Max( ( PN + ( Min( MDR ,AMS ) * FirstVNF_RAM ) ),MRS ) )", "choosing": "( ( MUC + DS ) / Min( Min( RMSe ,( ( Min( MLU ,MLU ) * MUC ) / MUM ) ) ,MUR ) )", "obj1": 0.297244094488189, "obj2": 0.5190248671239669}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.529645609990379}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - PN ),Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( CS + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.9901574803149606, "obj2": 0.003971834115043157}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.2219582556333246}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( CRS ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / RRSe ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * DS ) ) )", "obj1": 0.655511811023622, "obj2": 0.17688570821998406}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * PN ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "( Min( MUC ,Min( RMSe ,MUM ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( Max( MUR,MUR ) ,RCSe ) ,( DS - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( Max( ACS,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.484251968503937, "obj2": 0.3043776942844039}, {"determining": "( FirstVNF_RAM * ( ( ( ARS / Const ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( MLU * MLU ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( RCSe ,RRSe ) ) ) ) * DS ) ) )", "obj1": 0.7401574803149606, "obj2": 0.11374925986610172}, {"determining": "( ( ( AMS + DDR ) * FirstVNF_RAM ) * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( RMSe - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7317057483514202}, {"determining": "( Max( FirstVNF_Mem,BR ) - ACS )", "choosing": "( ( ( Min( MUM ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.5893353597859942}, {"determining": "( FirstVNF_RAM * ( ( ( ( Max( PN,FirstVNF_RAM_Server ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( Min( RRSe ,MUM ) / RRSe ) ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07408202848739333}, {"determining": "Max( Max( AMS,ACS ),( ( PN * MDR ) - ( ACS * Const ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / RCSe ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7099284980051417}, {"determining": "Max( ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.6594488188976378, "obj2": 0.17426876009115277}, {"determining": "( ( Max( ( ( ( RRS * DDR ) * FirstVNF_Mem_Server ) * DDR ),AMS ) - DDR ) * Max( PN,ACS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6939582661616142}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5345204876793684}, {"determining": "( ACS - ( Max( FirstVNF_CPU,Max( ( ( RRS + ( BR * MDR ) ) + ( DDR * ( Const / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) - ( Min( DDR ,ARS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( RRSe / Min( RRSe ,MUM ) ) ) - Min( CS ,( DS - ( Min( Min( Min( ( RMSe + MUM ) ,Max( CS,RMSe ) ) ,RCSe ) ,RCSe ) * RMSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.587235849037345}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.84251968503937, "obj2": 0.059213112678940735}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - FirstVNF_CPU )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6307156656027506}, {"determining": "Max( Max( Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( ACS - ACS ) ),PN ) ),Min( FirstVNF_RAM ,( Min( AMS ,( MDR / ACS ) ) * RRS ) ) ),( ACS - ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Max( RMSe,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( RRSe + RRSe ) + CS ) ) * Max( ( DS / ( MUC * MLU ) ),RCSe ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.6928129105306182}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( ( Const - Max( PN,AMS ) ) + DDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * RCSe ) * ( DS + RMSe ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.00620048340959658}, {"determining": "Max( ( MRS - ( Const + ( FirstVNF_CPU_Server + Min( CRS ,( FirstVNF_Mem_Server / AMS ) ) ) ) ),( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Max( BR,MDR ) ) ,ACS ) - ACS ) + CRS ),AMS ) ) )", "choosing": "( ( MUC * DS ) / ( ( CS * MUC ) - RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7061774260790011}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( RCSe / ( RMSe / RCSe ) ) - Max( Min( MLU ,DS ),( CS / ( MUC / CS ) ) ) )", "obj1": 0.889763779527559, "obj2": 0.03975504550274364}, {"determining": "( Max( PN,( ( Const + ( CRS + FirstVNF_CPU ) ) * FirstVNF_RAM ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + CS ) / ( MUC * ( ( ( ( MLU / ( MUR * MUM ) ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( CS / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.4881889763779528, "obj2": 0.3018092981911849}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5708661417322834, "obj2": 0.24092657527703332}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( Max( Max( ( Max( DS,( MUC / ( MUM + RMSe ) ) ) - ( MUR / RCSe ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.8996062992125984, "obj2": 0.036494944513900035}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05499914628407308}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( MLU * MLU ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( RCSe ,RRSe ) ) ) ) * DS ) ) )", "obj1": 0.5393700787401575, "obj2": 0.26408464768381834}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + CRS ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,( RMSe + RRSe ) ),RCSe ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * RCSe ) ) )", "obj1": 0.6673228346456693, "obj2": 0.16884123591165054}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - PN ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "Min( ( ( RRSe * Max( MUC,RMSe ) ) - MUC ) ,( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( RMSe + RRSe ) - Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( Min( MUR ,RCSe ),MLU ) ) ) ) ) )", "obj1": 0.6082677165354331, "obj2": 0.21851120488706985}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.7047244094488189, "obj2": 0.14067715202372083}, {"determining": "( Max( BR,ACS ) * ( CRS - ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( ACS ,FirstVNF_Mem ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe * ( ( MUC - Min( Min( DS ,MUM ) ,( Min( MLU ,RMSe ) + RCSe ) ) ) + MUR ) ) + DS ) / ( ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.547244094488189, "obj2": 0.25642027869447936}], "25": [{"determining": "( FirstVNF_RAM * ( ( Min( ( FirstVNF_RAM_Server - ARS ) ,FirstVNF_Mem_Server ) * Min( MDR ,CRS ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM * ( ( Min( ( FirstVNF_RAM_Server * ARS ) ,FirstVNF_Mem_Server ) * Max( ACS,Max( FirstVNF_RAM,( AMS + ARS ) ) ) ) - CRS ) )", "choosing": "( Max( MUR,MUM ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU + RRS ),( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( MUC / ( ( ( DS - ( RCSe * MUM ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( ( RCSe + ( CS + MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * CRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( CS * ( ( Max( RMSe,MUC ) * ( Max( ( Max( DS,CS ) / DS ),Max( MUM,MLU ) ) - Max( CS,RMSe ) ) ) * Min( RRSe ,CS ) ) ) )", "obj1": 0.9330708661417323, "obj2": 0.02843563500236721}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( Max( Max( ARS,MRS ),( FirstVNF_Mem_Server - ( ( FirstVNF_RAM / ( DDR / ARS ) ) * FirstVNF_RAM_Server ) ) ) - ACS )", "choosing": "( ( DS - DS ) / ( MLU - Min( MLU ,MUC ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5672547200953371}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) - ( DS - RRSe ) ) * DS ) ) )", "obj1": 0.33661417322834647, "obj2": 0.48912787380072886}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.40995802435403755}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + CRS ) - MDR ) / ARS ) / ACS ) * ( ( ( ( ( Max( MRS,FirstVNF_CPU ) + DDR ) + Min( ( Max( FirstVNF_Mem_Server,RRS ) - RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Max( CS,Max( ( ( CS * MUC ) + Min( RCSe ,( ( DS + DS ) / ( ( MUR + RMSe ) / CS ) ) ) ),CS ) ) )", "obj1": 0.42322834645669294, "obj2": 0.38772408015381205}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( MDR * FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( ( RMSe / CS ) - MLU ) ) ) ) ) )", "obj1": 0.6259842519685039, "obj2": 0.20442246538934347}, {"determining": "( ( PN / FirstVNF_CPU ) * ( FirstVNF_RAM_Server * ( ( ( Min( ( MDR / ( CRS / CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( ( CS * ( DS + MUR ) ) * MUR ) * ( DS - MLU ) ) / Max( ( MUC / Min( ( RMSe / MUM ) ,CS ) ),( DS / MLU ) ) ) * DS ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18914857548383004}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) + FirstVNF_RAM ) + CRS ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,( RMSe + RRSe ) ),( ( CS * MUC ) + Min( RCSe ,RMSe ) ) ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * RCSe ) ) )", "obj1": 0.905511811023622, "obj2": 0.03562666763694015}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( FirstVNF_RAM * ( ( ( PN / ACS ) * ( Const + RRS ) ) - ACS ) )", "choosing": "( ( Max( ( RCSe - RCSe ),Max( RCSe,Min( RMSe ,DS ) ) ) * ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUM,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7949058002370307}, {"determining": "( Max( FirstVNF_CPU,ACS ) * ( FirstVNF_RAM * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUC - DS ) + CS ) * ( DS / Max( Min( MLU ,MUR ),( MUC - DS ) ) ) ) / ( MUC + DS ) )", "obj1": 0.5177165354330708, "obj2": 0.27894071163746065}, {"determining": "( Max( ( DDR + AMS ),ACS ) - ( AMS / DDR ) )", "choosing": "( Min( MUC ,DS ) / ( MUC * ( ( ( ( Min( CS ,MUM ) / RRSe ) * ( RMSe / Max( MLU,( MUR - RRSe ) ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * ( RRSe * RRSe ) ) ) ) * ( DS + MUC ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( CRS - Max( Max( FirstVNF_RAM,MRS ),( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) ,CS ) ,( CS / CS ) )", "obj1": 0.281496062992126, "obj2": 0.5438869770315833}, {"determining": "( Max( PN,ACS ) * ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7078679243115787}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - FirstVNF_CPU )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6307156656027506}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,BR ) - ACS ) - ( ARS - FirstVNF_CPU ) ),ACS ) - FirstVNF_Mem_Server )", "choosing": "( ( Min( MUM ,MUM ) / RRSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.5, "obj2": 0.29224190483704315}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * PN ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "( Min( MUC ,Min( RMSe ,MUM ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( Max( MUR,MUR ) ,RCSe ) ,( DS - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( ( CRS * ( ( FirstVNF_Mem_Server - RRS ) * CRS ) ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( Max( PN,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) ) / ( MUC * ( ( CS / ( ( Min( ( MUR - RCSe ) ,Max( RMSe,DS ) ) * ( Max( MUR,RMSe ) - RMSe ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7521175565418667}, {"determining": "( ( Const - RRS ) * ( ( ( ( ( Min( ARS ,Max( MRS,RRS ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) / FirstVNF_Mem_Server ) ) * PN ) - MDR ) + Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + RCSe ) / Max( RMSe,MUC ) )", "obj1": 0.4271653543307087, "obj2": 0.37502913464985554}, {"determining": "( ( ( AMS + DDR ) * FirstVNF_RAM ) * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( RMSe - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7347400841445332}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4654155679063897}, {"determining": "( Max( ( Max( FirstVNF_Mem_Server,ACS ) - ( ARS - FirstVNF_CPU ) ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.33239094827170496}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "( ( ( AMS + DDR ) * FirstVNF_RAM ) * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( RMSe - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7317057483514202}, {"determining": "Max( ( Min( ( ( ( CRS / FirstVNF_Mem ) + DDR ) + ( RRS / FirstVNF_Mem_Server ) ) ,PN ) - MDR ),( ( ( FirstVNF_RAM + PN ) - ( ARS * DDR ) ) - ( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( ( RCSe + ( ( ( RRSe - CS ) - Max( ( ( RCSe - MUR ) - ( RRSe * Max( RRSe,RRSe ) ) ),DS ) ) + ( RRSe - Min( MLU ,Max( Max( RMSe,( RCSe / MUR ) ),MUC ) ) ) ) ) / ( MUC + DS ) )", "obj1": 0.7224409448818898, "obj2": 0.12462907952431486}, {"determining": "( ( ( AMS + DDR ) * FirstVNF_Mem_Server ) * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + ( ACS - AMS ) ) - MDR ) * Max( RRS,Max( Const,( FirstVNF_Mem_Server - ( BR + Const ) ) ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Min( ( RMSe / DS ) ,CS ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,DS ),MUR ) ) ) ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6464975893974542}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ACS ,( FirstVNF_CPU / FirstVNF_CPU ) ) ) * ( ARS * Min( Max( Min( Max( CRS,FirstVNF_RAM ) ,FirstVNF_CPU_Server ),MDR ) ,ARS ) ) ) ) * ( BR * PN ) )", "choosing": "( Max( MUC,( ( CS / ( ( MUC / DS ) - ( Min( MUC ,Min( DS ,MLU ) ) + Max( ( MUR * MUM ),Min( DS ,MUM ) ) ) ) ) * DS ) ) / ( DS + Max( ( MUR - DS ),( ( MUM + CS ) / ( CS - DS ) ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8474994286470567}, {"determining": "Max( ( ( ARS + PN ) + CRS ),( ( RRS * MDR ) - ( ACS * Const ) ) )", "choosing": "( ( RCSe - ( Max( ( ( MUR / RMSe ) - RRSe ),( Min( DS ,( ( RMSe - MUC ) * RCSe ) ) + Max( ( RCSe / MUR ),Max( Min( MUC ,RMSe ),MUM ) ) ) ) - MUR ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) - RRSe ) * ( RRSe / RMSe ) ) / ( ( MUC / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.15748031496062992, "obj2": 0.6870540132610435}, {"determining": "( Max( RRS,FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,( MRS / MDR ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / MUM ) * ( RMSe / Max( MUC,CS ) ) ) / ( ( Min( ( RMSe / DS ) ,CS ) / MUC ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.36220472440944884, "obj2": 0.44998262482481005}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server - Min( ( BR * ARS ) ,ARS ) ) ) )", "choosing": "( ( Min( ( ( ( Min( RRSe ,MUM ) * RRSe ) - ( Max( Max( RCSe,RCSe ),MUR ) - MLU ) ) / RRSe ) ,( MUM + DS ) ) - MLU ) - Min( DS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5041676765482012}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( ARS * Min( Max( FirstVNF_CPU_Server,MDR ) ,ARS ) ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * DS ) ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.8223769536825655}, {"determining": "( ( BR * ( ( ( CRS / AMS ) * ARS ) * Min( FirstVNF_Mem ,AMS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( DS,( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6512852990609552}, {"determining": "Min( Min( CRS ,ARS ) ,( ( Max( Const,( ( FirstVNF_RAM * FirstVNF_RAM ) + MDR ) ) / MRS ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( RRSe + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( ( ( MLU + ( ( MLU / DS ) + MLU ) ) - RMSe ) * RMSe ) * ( DS - Max( CS,RCSe ) ) ) - ( ( MUM + RRSe ) - Max( ( ( RRSe + DS ) + ( CS / RMSe ) ),( MLU + Max( Min( MUR ,( MUM * MUM ) ),MLU ) ) ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.2726289431574951}, {"determining": "( Max( ( DDR * PN ),( FirstVNF_RAM_Server / AMS ) ) - Max( BR,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / ( ( RMSe / RMSe ) - CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) / ( ( RCSe * ( DS / MUR ) ) + DS ) )", "obj1": 0.1732283464566929, "obj2": 0.6666724780639017}, {"determining": "( ( ACS * PN ) * Max( MDR,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe / ( MUC + ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) ) ) / RRSe )", "obj1": 0.17913385826771652, "obj2": 0.6640518197401264}, {"determining": "( ( ( Min( ( Max( ( FirstVNF_CPU + ( BR - ARS ) ),BR ) / Const ) ,Const ) * ( CRS * Min( FirstVNF_RAM_Server ,ACS ) ) ) - CRS ) * Max( ( PN + Const ),ACS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC * Min( ( MUM - MUM ) ,CS ) ) - Max( MUR,RCSe ) ) ) * Max( ( Max( MLU,( MUM - RMSe ) ) * ( CS * DS ) ),( ( ( RMSe / RMSe ) - RRSe ) * MUC ) ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.0490188597304437}, {"determining": "( Max( ( MRS * Min( ( Min( ACS ,AMS ) / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem - Max( AMS,ACS ) ) ) ) ),ACS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( ( RRSe + RMSe ),( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6110658711004896}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5708661417322834, "obj2": 0.24092657527703332}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + ( BR + FirstVNF_CPU ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( CS / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7362204724409449, "obj2": 0.11554824058707239}, {"determining": "( Min( Max( BR,ACS ) ,FirstVNF_RAM ) * Max( Max( FirstVNF_CPU_Server,MRS ),FirstVNF_Mem ) )", "choosing": "( ( Max( ( Max( ( MLU + ( CS + ( RRSe / MLU ) ) ),( ( DS * Min( MUC ,MUR ) ) + ( MUR - Max( MUR,RRSe ) ) ) ) / ( ( MUM + CS ) - ( CS - DS ) ) ),( ( RRSe * Max( RMSe,CS ) ) - Max( DS,( MLU * RMSe ) ) ) ) / MUR ) - ( MUM + MLU ) )", "obj1": 0.5669291338582677, "obj2": 0.24645365845099454}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( Max( Max( ( MDR + ( CRS + PN ) ),( ( PN * MDR ) - ( ACS * Const ) ) ),ACS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( DS,( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.621018783475557}, {"determining": "( ( AMS / Const ) * ( CRS - ( ( ( ( ( PN * ARS ) + Max( ( MRS - RRS ),( FirstVNF_CPU_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * Min( ( CS / ( ( MUR / Min( MLU ,MUR ) ) - ( MUM - ( MUR + CS ) ) ) ) ,DS ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09968821160072751}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( ( RRSe + ( MLU * DS ) ) / MUC ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe * MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.23372205571499358}, {"determining": "( FirstVNF_CPU - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Min( ARS ,( RRS * ( MDR * Const ) ) ) ) )", "choosing": "( ( ( DS + ( Max( CS,MUR ) + ( ( RMSe * RCSe ) / ( DS / MUM ) ) ) ) + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6128881334119178}, {"determining": "( Max( ( Max( FirstVNF_Mem_Server,ACS ) - ( ARS - FirstVNF_CPU ) ),ACS ) - FirstVNF_Mem_Server )", "choosing": "( ( ( MLU / RRSe ) / RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.4704724409448819, "obj2": 0.33005560964636993}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( RCSe / ( MUC + CS ) ) / RRSe )", "obj1": 0.3031496062992126, "obj2": 0.5140566257868513}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS * ( MRS - CRS ) ) )", "choosing": "( ( MUC * CS ) - Min( CS ,Max( ( ( RMSe / CS ) - ( ( RRSe - ( CS - ( DS / MLU ) ) ) / Max( CS,( CS / ( MUC - MUM ) ) ) ) ),RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44045757987027623}, {"determining": "( Max( Min( ( AMS - FirstVNF_Mem ) ,( CRS / RRS ) ),FirstVNF_CPU ) - Max( ( PN + ( Min( MDR ,AMS ) * FirstVNF_RAM ) ),MRS ) )", "choosing": "( ( MUC + DS ) / Min( Min( RMSe ,( ( Min( MLU ,MLU ) * MUC ) / MUM ) ) ,MUR ) )", "obj1": 0.297244094488189, "obj2": 0.5190248671239669}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( Max( MDR,FirstVNF_RAM ) + RRS ),FirstVNF_CPU_Server ) / ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - PN ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.5216535433070866, "obj2": 0.2763353921716492}, {"determining": "Max( ( ( ( ( Max( ( RRS + MDR ),Max( DDR,( Const + MDR ) ) ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU * PN ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Min( RCSe ,RRSe ),MUR ) ) ) ) ) ) )", "obj1": 0.4035433070866142, "obj2": 0.40482768654958695}, {"determining": "( ( Max( CRS,( PN + MRS ) ) / FirstVNF_RAM ) * ( ( ( ( ( ( ACS + Const ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC * ( Min( MLU ,MUM ) * DS ) ) / ( MUC + DS ) )", "obj1": 0.9606299212598425, "obj2": 0.02075626673481117}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,RRS ) ) * FirstVNF_CPU )", "choosing": "( ( RMSe + Max( Max( ( ( ( Min( MLU ,MLU ) - ( RMSe + RCSe ) ) + MUM ) * MUR ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( Min( MUR ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ),MUM ) ) ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6929133858267716, "obj2": 0.15201711063489096}, {"determining": "( ( ARS - FirstVNF_CPU ) - ( ( MRS - CRS ) * MDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( RCSe,MUC ) ) + MUC ) - Min( CS ,Max( ( ( RMSe + CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4431626064639917}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( ( ( ( ( Max( MDR,( ARS - FirstVNF_Mem_Server ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( RRS + ( ( ( FirstVNF_RAM * ( MRS - PN ) ) - FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) ) - CRS ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / Min( MUC ,( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUM / DS ) ) ,( Max( RRSe,CS ) - Min( MUR ,MUR ) ) ) ) ) * DS ) ) )", "obj1": 0.765748031496063, "obj2": 0.09702990575083877}, {"determining": "( ( PN * ( Max( FirstVNF_Mem,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) * ( ( ( MDR - ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) * Max( ( Const + ( FirstVNF_RAM_Server * ARS ) ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( ( ( MUR + DS ) * ( ( MLU + MUC ) - MUC ) ) + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( DS * ( RCSe / MUR ) ),MLU ) ) ) ) - Min( Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ,CS ) )", "obj1": 0.5531496062992126, "obj2": 0.25148903088739455}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,RRS ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - ( Max( Min( BR ,( FirstVNF_Mem_Server - ARS ) ),FirstVNF_CPU ) - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,Min( ( RRSe / RCSe ) ,Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( Max( PN,ACS ) * ( ( ( ( Max( ( Const + RRS ),FirstVNF_CPU_Server ) * ( Max( AMS,DDR ) * DDR ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( MLU * MLU ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RCSe - ( RMSe - RMSe ) ) * RMSe ) ) ) * DS ) ) )", "obj1": 0.7696850393700787, "obj2": 0.08838560875600482}, {"determining": "( Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,MRS ) ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.4409448818897638, "obj2": 0.36429903594240354}, {"determining": "( Max( PN,Min( ACS ,FirstVNF_Mem_Server ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + CRS ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - ( CS * MUC ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * RCSe ) ) )", "obj1": 0.6673228346456693, "obj2": 0.16880797272539}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.3090551181102362, "obj2": 0.5066213754188635}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( CRS ,MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / RRSe ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * DS ) ) )", "obj1": 0.655511811023622, "obj2": 0.17688570821998406}, {"determining": "( ACS - Max( Min( MRS ,( BR * RRS ) ),Max( Max( ( ACS - Max( Min( ACS ,Max( RRS,PN ) ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( CS ,( RMSe / RRSe ) ) ) - ( ( MUR / CS ) * Min( CS ,MUC ) ) ) ) * DS ) )", "obj1": 0.484251968503937, "obj2": 0.30410556302464486}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( Max( FirstVNF_Mem,BR ) - ACS )", "choosing": "( ( ( Min( MUM ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.5893353597859942}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( RCSe / ( MUC + CS ) ) / RRSe )", "obj1": 0.8838582677165354, "obj2": 0.04196678434590954}, {"determining": "( Max( PN,ACS ) * ( ( ( ( Max( MDR,( ARS - Const ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( DS * ( DS * RMSe ) ) + RRSe ) * MUC ) ) * DS ) ) )", "obj1": 0.9744094488188977, "obj2": 0.00867997898422065}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( MDR - Const ) ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,AMS ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.8779527559055118, "obj2": 0.04875610347810035}, {"determining": "( Max( PN,ACS ) * ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( DS / MLU ) ) ) * DS ) ) )", "obj1": 0.6515748031496063, "obj2": 0.18760089351549536}, {"determining": "Max( ( MRS - ( Const + ( FirstVNF_CPU_Server + Min( CRS ,( FirstVNF_Mem_Server / AMS ) ) ) ) ),( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Max( BR,MDR ) ) ,ACS ) - ACS ) + CRS ),AMS ) ) )", "choosing": "( ( MUC * DS ) / ( ( CS * MUC ) - RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7061774260790011}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( ( FirstVNF_Mem_Server * AMS ) ,ACS ),RRS ) * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Max( RCSe,( MUC - ( RMSe + RMSe ) ) ) ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.07149789557620523}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "Max( ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.6594488188976378, "obj2": 0.17426876009115277}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05499914628407308}, {"determining": "( ACS - ( Max( FirstVNF_CPU,Max( ( ( RRS + ( BR * MDR ) ) + ( DDR * ( Const / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) - ( Min( DDR ,ARS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( RRSe / Min( RRSe ,MUM ) ) ) - Min( CS ,( DS - ( Min( Min( Min( ( RMSe + MUM ) ,Max( CS,RMSe ) ) ,RCSe ) ,RCSe ) * RMSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.587235849037345}, {"determining": "( ( CRS * ( CRS - MRS ) ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( DS / RMSe ) ) / ( ( Min( ( RMSe / DS ) ,Min( MLU ,RRSe ) ) / MUC ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6778437459492787}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.23096450683923594}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( Const - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_RAM ,MDR ) ) ) + ( ACS - AMS ) ) - MDR ) * Max( RRS,Max( Const,( FirstVNF_Mem_Server - ( BR + Const ) ) ) ) ) - CRS ) )", "choosing": "( ( DS + MUC ) / ( MUC * ( RRSe + ( RRSe / Min( CS ,Max( Min( ( MUR + RRSe ) ,CS ),CS ) ) ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.07057701122362248}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( BR * FirstVNF_Mem_Server ) ) ) - ( MDR + PN ) ) )", "choosing": "( ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + MUC ) ) ) ),( MLU + ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) + ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) )", "obj1": 0.6988188976377953, "obj2": 0.1462393123072416}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * CS ) ) ) * DS ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5276487374025228}, {"determining": "( ( ( RRS - MRS ) + FirstVNF_CPU_Server ) - Max( Max( MRS,Max( PN,Max( MRS,( FirstVNF_RAM_Server - Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ),ACS ) )", "choosing": "( ( CS * MUR ) - Min( ( MUC / MUR ) ,RCSe ) )", "obj1": 0.4094488188976378, "obj2": 0.400121285213869}, {"determining": "Max( Max( Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( ACS - ACS ) ),PN ) ),Min( FirstVNF_RAM ,( Min( AMS ,( MDR / ACS ) ) * RRS ) ) ),( ACS - ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Max( RMSe,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( RRSe + RRSe ) + CS ) ) * Max( ( DS / ( MUC * MLU ) ),RCSe ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.6928129105306182}, {"determining": "Max( ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.6712598425196851, "obj2": 0.164327871858259}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4543995613116928}, {"determining": "( Max( Max( DDR,AMS ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),Min( Min( MUR ,RCSe ) ,MUM ) ) / RMSe ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.4094488188976378, "obj2": 0.400121285213869}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - Max( ( ( CS / RMSe ) + ( DS + RRSe ) ),( ( ( CS - DS ) + Max( MLU,RMSe ) ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.75, "obj2": 0.10729240745984016}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( RCSe / ( RMSe / RCSe ) ) - Max( Min( MLU ,DS ),( CS / ( MUC / CS ) ) ) )", "obj1": 0.889763779527559, "obj2": 0.03975504550274364}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - PN ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( DS ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,RCSe ),MUR ) ) ) ) ) ) )", "obj1": 0.6240157480314961, "obj2": 0.20852401927462547}], "26": [{"determining": "( Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - Max( ( ( ACS - CRS ) * ( AMS * CRS ) ),FirstVNF_CPU_Server ) )", "choosing": "( Min( RRSe ,RRSe ) / Max( MUC,( ( ( ( RRSe / ( RRSe + MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM * ( ( Min( ( FirstVNF_RAM_Server - ARS ) ,FirstVNF_Mem_Server ) * Min( MDR ,CRS ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU + RRS ),( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( MUC / ( ( ( DS - ( RCSe * MUM ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( ( RCSe + ( CS + MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.23096450683923594}, {"determining": "Max( ( Min( ( ( ( CRS / FirstVNF_Mem ) + DDR ) + ( RRS / FirstVNF_Mem_Server ) ) ,PN ) - MDR ),( ( ( FirstVNF_RAM + PN ) - ( ARS * DDR ) ) - ( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( ( RCSe + ( ( ( RRSe - CS ) - Max( ( ( RCSe - MUR ) - ( RRSe * Max( RRSe,RRSe ) ) ),DS ) ) + ( RRSe - Min( MLU ,Max( Max( RMSe,( RCSe / MUR ) ),MUC ) ) ) ) ) / ( MUC + DS ) )", "obj1": 0.7224409448818898, "obj2": 0.12462907952431486}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05485921148696636}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( Max( Max( ARS,MRS ),( FirstVNF_Mem_Server - ( ( FirstVNF_RAM / ( DDR / ARS ) ) * FirstVNF_RAM_Server ) ) ) - ACS )", "choosing": "( ( DS - DS ) / ( MLU - Min( MLU ,MUC ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5672547200953371}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,RRS ) ) * FirstVNF_CPU )", "choosing": "( ( RMSe + Max( Max( ( ( ( Min( MLU ,MLU ) - ( RMSe + RCSe ) ) + MUM ) * MUR ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( Min( MUR ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ),MUM ) ) ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6929133858267716, "obj2": 0.15201711063489096}, {"determining": "( ( Min( MDR ,CRS ) * Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - FirstVNF_Mem_Server ),Min( MDR ,FirstVNF_CPU_Server ) ) ) / PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUM ) ) / CS ) ) - Min( RCSe ,MUM ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( Max( MUR,Min( MUC ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.7047244094488189, "obj2": 0.13934719789784789}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( MDR * FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( ( RMSe / CS ) - MLU ) ) ) ) ) )", "obj1": 0.6259842519685039, "obj2": 0.20442246538934347}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3840614642046068}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - PN ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( DS ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,RCSe ),MUR ) ) ) ) ) ) )", "obj1": 0.6240157480314961, "obj2": 0.20852401927462547}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) - ( DS - RRSe ) ) * DS ) ) )", "obj1": 0.33661417322834647, "obj2": 0.48912787380072886}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Max( MDR,FirstVNF_RAM_Server ) ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( RCSe / ( MUC + CS ) ) / RRSe )", "obj1": 0.7834645669291339, "obj2": 0.08107682415543388}, {"determining": "Max( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( MLU * DS ) )", "obj1": 0.8149606299212598, "obj2": 0.06719909576406231}, {"determining": "( ( CRS * ( CRS - MRS ) ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( DS / RMSe ) ) / ( ( Min( ( RMSe / DS ) ,Min( MLU ,RRSe ) ) / MUC ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6778437459492787}, {"determining": "( ( Max( CRS,( PN + MRS ) ) / FirstVNF_RAM ) * ( ( ( ( ( ( ACS + Const ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC * ( Min( MLU ,MUM ) * DS ) ) / ( MUC + DS ) )", "obj1": 0.9606299212598425, "obj2": 0.02075626673481117}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + ( BR + FirstVNF_CPU ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( CS / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.7362204724409449, "obj2": 0.11554824058707239}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,Max( DDR,( Const + MDR ) ) ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( MLU - MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39827932086040907}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * PN ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "( Min( MUC ,Min( RMSe ,MUM ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( Max( MUR,MUR ) ,RCSe ) ,( DS - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( Max( PN,( PN + FirstVNF_CPU_Server ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * RRS ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - DDR ) )", "choosing": "( ( Min( CS ,( MUC - Max( Min( RCSe ,RRSe ),MUR ) ) ) / ( MUC + CS ) ) / ( MUC + MUM ) )", "obj1": 0.9173228346456693, "obj2": 0.03507758942877588}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( Max( ( Max( FirstVNF_Mem_Server,ACS ) - ( ARS - FirstVNF_CPU ) ),ACS ) - FirstVNF_Mem_Server )", "choosing": "( ( ( MLU / RRSe ) / RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.4704724409448819, "obj2": 0.33005560964636993}, {"determining": "( Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) / ARS ) ) * Max( MDR,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * DDR ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * ( MLU * RRSe ) ) + DS ) / Min( MUC ,( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7078679243115787}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( CRS - Max( Max( FirstVNF_RAM,MRS ),( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) ,CS ) ,( CS / CS ) )", "obj1": 0.281496062992126, "obj2": 0.5438869770315833}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ACS ,( FirstVNF_CPU / FirstVNF_CPU ) ) ) * ( ARS * Min( Max( Min( Max( CRS,FirstVNF_RAM ) ,FirstVNF_CPU_Server ),MDR ) ,ARS ) ) ) ) * ( BR * PN ) )", "choosing": "( Max( MUC,( ( CS / ( ( MUC / DS ) - ( Min( MUC ,Min( DS ,MLU ) ) + Max( ( MUR * MUM ),Min( DS ,MUM ) ) ) ) ) * DS ) ) / ( DS + Max( ( MUR - DS ),( ( MUM + CS ) / ( CS - DS ) ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8474994286470567}, {"determining": "( Max( RRS,FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,( MRS / MDR ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / MUM ) * ( RMSe / Max( MUC,CS ) ) ) / ( ( Min( ( RMSe / DS ) ,CS ) / MUC ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.36220472440944884, "obj2": 0.44998262482481005}, {"determining": "( Max( FirstVNF_CPU,ACS ) * ( FirstVNF_RAM * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUC - DS ) + CS ) * ( DS / Max( Min( MLU ,MUR ),( MUC - DS ) ) ) ) / ( MUC + DS ) )", "obj1": 0.5177165354330708, "obj2": 0.27894071163746065}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( ( CRS * ( ( Const * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( ARS * Min( Max( FirstVNF_CPU_Server,MDR ) ,ARS ) ) ) ) * ( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * Max( ( MUC + DS ),CS ) ) / ( ( CS / ( ( MLU + RMSe ) - ( MUC / RRSe ) ) ) * DS ) ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.8223769536825655}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.40995802435403755}, {"determining": "( ( PN / FirstVNF_CPU ) * ( FirstVNF_RAM_Server * ( ( ( Min( ( MDR / ( CRS / CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( ( CS * ( DS + MUR ) ) * MUR ) * ( DS - MLU ) ) / Max( ( MUC / Min( ( RMSe / MUM ) ,CS ) ),( DS / MLU ) ) ) * DS ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18914857548383004}, {"determining": "Min( Min( CRS ,ARS ) ,( ( Max( Const,( ( FirstVNF_RAM * FirstVNF_RAM ) + MDR ) ) / MRS ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( RRSe + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( ( ( MLU + ( ( MLU / DS ) + MLU ) ) - RMSe ) * RMSe ) * ( DS - Max( CS,RCSe ) ) ) - ( ( MUM + RRSe ) - Max( ( ( RRSe + DS ) + ( CS / RMSe ) ),( MLU + Max( Min( MUR ,( MUM * MUM ) ),MLU ) ) ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.2726289431574951}, {"determining": "( ( ACS * PN ) * Max( MDR,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe / ( MUC + ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) ) ) / RRSe )", "obj1": 0.17913385826771652, "obj2": 0.6640518197401264}, {"determining": "Max( ( MRS - ( Const + ( FirstVNF_CPU_Server + Min( CRS ,( FirstVNF_Mem_Server / AMS ) ) ) ) ),( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Max( BR,MDR ) ) ,ACS ) - ACS ) + CRS ),AMS ) ) )", "choosing": "( ( MUC * DS ) / ( ( CS * MUC ) - RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7061774260790011}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( Max( ( MRS * Min( ( Min( ACS ,AMS ) / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem - Max( AMS,ACS ) ) ) ) ),ACS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( ( RRSe + RMSe ),( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6110658711004896}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( FirstVNF_RAM / BR ),( FirstVNF_CPU_Server * MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,( RRSe - RCSe ) ) ) ,( MUM - Max( Min( RCSe ,RRSe ),MUR ) ) ) ) ) ) )", "obj1": 0.5708661417322834, "obj2": 0.24077735630322647}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( PN * ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) - MDR ) * Max( FirstVNF_RAM_Server,CRS ) ) - FirstVNF_Mem ) )", "choosing": "( ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / ( ( RMSe / RMSe ) - CS ) ) - Max( MUM,( RMSe / RCSe ) ) ) ) * DS ) ) / ( ( RCSe * ( DS / MUR ) ) + RMSe ) )", "obj1": 0.9881889763779528, "obj2": 0.007357855172403456}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,BR ) - ACS ) - ( ARS - FirstVNF_CPU ) ),ACS ) - FirstVNF_Mem_Server )", "choosing": "( ( Min( MUM ,MUM ) / RRSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,BR ) - FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,MRS ) ),ACS ) - FirstVNF_Mem_Server )", "choosing": "( ( Min( MUM ,MUM ) / RRSe ) - Min( CS ,( MLU + ( RCSe / ( MUC / Min( ( RMSe / DS ) ,Min( RRSe ,MUC ) ) ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2893403936861738}, {"determining": "( ( ( Min( ( Max( ( FirstVNF_CPU + ( BR - ARS ) ),BR ) / Const ) ,Const ) * ( CRS * Min( FirstVNF_RAM_Server ,ACS ) ) ) - CRS ) * Max( ( PN + Const ),ACS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC * Min( ( MUM - MUM ) ,CS ) ) - Max( MUR,RCSe ) ) ) * Max( ( Max( MLU,( MUM - RMSe ) ) * ( CS * DS ) ),( ( ( RMSe / RMSe ) - RRSe ) * MUC ) ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.0490188597304437}, {"determining": "( ( ( AMS + DDR ) * FirstVNF_RAM ) * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( RMSe - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7317057483514202}, {"determining": "( Max( PN,ACS ) * ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * ( Min( ( PN * MDR ) ,( ( ARS / AMS ) * ( FirstVNF_RAM / BR ) ) ) + DDR ) ) - MDR ) )", "choosing": "( ( MUC + ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( RMSe + Min( MUC ,RMSe ) ) ) ) ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( DS / MLU ) ) ) * DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.751024386149643}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - FirstVNF_CPU )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6307156656027506}, {"determining": "( Max( Max( ( MDR + ( CRS + PN ) ),( ( PN * MDR ) - ( ACS * Const ) ) ),ACS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( DS,( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.621018783475557}, {"determining": "( ( AMS / Const ) * ( CRS - ( ( ( ( ( PN * ARS ) + Max( ( MRS - RRS ),( FirstVNF_CPU_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * Min( ( CS / ( ( MUR / Min( MLU ,MUR ) ) - ( MUM - ( MUR + CS ) ) ) ) ,DS ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09968821160072751}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( Max( FirstVNF_Mem_Server,ACS ) - ( ARS - FirstVNF_CPU ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( MLU + ( RCSe / MUR ) ) ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.01357557078043964}, {"determining": "( ( BR * ( ( ( CRS / AMS ) * ARS ) * Min( FirstVNF_Mem ,AMS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( DS,( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6512852990609552}, {"determining": "Max( ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.6712598425196851, "obj2": 0.164327871858259}, {"determining": "Max( ( ( ( ( Max( ( ( MDR * PN ) - ( MRS - FirstVNF_RAM_Server ) ),Max( DDR,( Const + MDR ) ) ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.4035433070866142, "obj2": 0.40195998574099795}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - PN ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( DS ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,RCSe ),MUR ) ) ) ) ) ) )", "obj1": 0.6240157480314961, "obj2": 0.20852401927462547}, {"determining": "Max( Max( Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( ACS - ACS ) ),PN ) ),Min( FirstVNF_RAM ,( Min( AMS ,( MDR / ACS ) ) * RRS ) ) ),( ACS - ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Max( RMSe,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( RRSe + RRSe ) + CS ) ) * Max( ( DS / ( MUC * MLU ) ),RCSe ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.6928129105306182}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( BR * FirstVNF_Mem_Server ) ) ) - ( MDR + PN ) ) )", "choosing": "( ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + MUC ) ) ) ),( MLU + ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) + ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) )", "obj1": 0.6988188976377953, "obj2": 0.1462393123072416}, {"determining": "( ( ( AMS + DDR ) * FirstVNF_RAM ) * ( AMS + DDR ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - Max( ( ( CS / RMSe ) + ( DS + RRSe ) ),( ( ( CS - DS ) + Max( MLU,RMSe ) ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6389663092342344}, {"determining": "( Min( Max( BR,ACS ) ,FirstVNF_RAM ) * Max( Max( FirstVNF_CPU_Server,MRS ),FirstVNF_Mem ) )", "choosing": "( ( Max( ( Max( ( MLU + ( CS + ( RRSe / MLU ) ) ),( ( DS * Min( MUC ,MUR ) ) + ( MUR - Max( MUR,RRSe ) ) ) ) / ( ( MUM + CS ) - ( CS - DS ) ) ),( ( RRSe * Max( RMSe,CS ) ) - Max( DS,( MLU * RMSe ) ) ) ) / MUR ) - ( MUM + MLU ) )", "obj1": 0.5669291338582677, "obj2": 0.24645365845099454}, {"determining": "( Max( ( Max( FirstVNF_Mem_Server,ACS ) - ( ARS - FirstVNF_CPU ) ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3362864336140025}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe * DS ) ,CS ) ) - ( ( RMSe / CS ) * ( ( MUR - MUC ) + ( MUM + MLU ) ) ) ) ) * DS ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5255207473849449}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS * ( MRS - CRS ) ) )", "choosing": "( ( MUC * CS ) - Min( CS ,Max( ( ( RMSe / CS ) - ( ( RRSe - ( CS - ( DS / MLU ) ) ) / Max( CS,( CS / ( MUC - MUM ) ) ) ) ),RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44045757987027623}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( ( ( ( FirstVNF_Mem_Server / DDR ) + Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * FirstVNF_Mem ) ) ) - CRS ) * ( FirstVNF_CPU_Server / Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,( DS - ( CS / Min( ( DS + CS ) ,MUC ) ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.07149789557620523}, {"determining": "( ( ARS - FirstVNF_CPU ) - ( ( MRS - CRS ) * MDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( RCSe,MUC ) ) + MUC ) - Min( CS ,Max( ( ( RMSe + CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4431626064639917}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( ( ( ( ( Max( MDR,( ARS - FirstVNF_Mem_Server ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( RRS + ( ( ( FirstVNF_RAM * ( MRS - PN ) ) - FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) ) - CRS ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / Min( MUC ,( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUM / DS ) ) ,( Max( RRSe,CS ) - Min( MUR ,MUR ) ) ) ) ) * DS ) ) )", "obj1": 0.765748031496063, "obj2": 0.09702990575083877}, {"determining": "( Max( ( DDR + AMS ),ACS ) - ( AMS / DDR ) )", "choosing": "( Min( MUC ,DS ) / ( MUC * ( ( ( ( Min( CS ,MUM ) / RRSe ) * ( RMSe / Max( MLU,( MUR - RRSe ) ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * ( RRSe * RRSe ) ) ) ) * ( DS + MUC ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * CRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( CS * ( ( Max( RMSe,MUC ) * ( Max( ( Max( DS,CS ) / DS ),Max( MUM,MLU ) ) - Max( CS,RMSe ) ) ) * Min( RRSe ,CS ) ) ) )", "obj1": 0.9330708661417323, "obj2": 0.02843563500236721}, {"determining": "( Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,MRS ) ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.4409448818897638, "obj2": 0.36429903594240354}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,( DS * MUR ) ) / Max( ( CS + Max( RRSe,( CS - CS ) ) ),MUR ) ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Max( ( CS / ( MUM - MUC ) ),CS ) ) ),RRSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4967185162536914}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( MUC + CS ) ) / RRSe )", "obj1": 0.38976377952755903, "obj2": 0.41798917423788007}, {"determining": "( Max( PN,Min( ACS ,FirstVNF_Mem_Server ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + CRS ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - ( CS * MUC ) ) ) - CS ) ,( DS / ( ( RCSe / DS ) * RCSe ) ) )", "obj1": 0.6673228346456693, "obj2": 0.16880797272539}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server - Min( ( BR * ARS ) ,ARS ) ) ) )", "choosing": "( ( Min( ( ( ( Min( RRSe ,MUM ) * RRSe ) - ( Max( Max( RCSe,RCSe ),MUR ) - MLU ) ) / RRSe ) ,( MUM + DS ) ) - MLU ) - Min( DS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5041676765482012}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.3090551181102362, "obj2": 0.5066213754188635}, {"determining": "( Max( PN,ACS ) * ( ( ( ( Max( MDR,( ARS - Const ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( ( DS * ( DS * RMSe ) ) + RRSe ) * MUC ) ) * DS ) ) )", "obj1": 0.9744094488188977, "obj2": 0.008679978984220649}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( ( FirstVNF_Mem_Server * AMS ) ,ACS ),RRS ) * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Max( RCSe,( MUC - ( RMSe + RMSe ) ) ) ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.07149789557620523}, {"determining": "( Max( Min( ( AMS - FirstVNF_Mem ) ,( CRS / RRS ) ),FirstVNF_CPU ) - Max( ( PN + ( Min( MDR ,AMS ) * FirstVNF_RAM ) ),MRS ) )", "choosing": "( ( MUC + DS ) / Min( Min( RMSe ,( ( Min( MLU ,MLU ) * MUC ) / MUM ) ) ,MUR ) )", "obj1": 0.297244094488189, "obj2": 0.5190248671239669}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4654155679063897}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2854330708661417, "obj2": 0.5310393628971785}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Min( ACS ,FirstVNF_Mem_Server ) ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * Min( ( RMSe / DS ) ,CS ) ) ) )", "obj1": 0.7755905511811023, "obj2": 0.08504734229589452}, {"determining": "( ( Const - RRS ) * ( ( ( ( ( Min( ARS ,Max( MRS,RRS ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) / FirstVNF_Mem_Server ) ) * PN ) - MDR ) + Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + RCSe ) / Max( RMSe,MUC ) )", "obj1": 0.4271653543307087, "obj2": 0.37502913464985554}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8740157480314961, "obj2": 0.046954156446372804}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( CRS ,MDR ) ) ) * FirstVNF_Mem_Server ) - MDR ) * Max( ( Const + ACS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / ( RCSe / ( MUC + CS ) ) ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) * RRSe ) * ( DS / RMSe ) ) / Max( MUC,CS ) ) * DS ) ) )", "obj1": 0.6496062992125984, "obj2": 0.18055041228246468}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "Max( ( ( ARS + PN ) + CRS ),( ( RRS * MDR ) - ( ACS * Const ) ) )", "choosing": "( ( RCSe - ( Max( ( ( MUR / RMSe ) - RRSe ),( Min( DS ,( ( RMSe - MUC ) * RCSe ) ) + Max( ( RCSe / MUR ),Max( Min( MUC ,RMSe ),MUM ) ) ) ) - MUR ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) - RRSe ) * ( RRSe / RMSe ) ) / ( ( MUC / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.15748031496062992, "obj2": 0.6870540132610435}, {"determining": "Max( ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.6594488188976378, "obj2": 0.17426876009115277}, {"determining": "( ACS - ( Max( FirstVNF_CPU,Max( ( ( RRS + ( BR * MDR ) ) + ( DDR * ( Const / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) - ( Min( DDR ,ARS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( RRSe / Min( RRSe ,MUM ) ) ) - Min( CS ,( DS - ( Min( Min( Min( ( RMSe + MUM ) ,Max( CS,RMSe ) ) ,RCSe ) ,RCSe ) * RMSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.587235849037345}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / RRSe ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * DS ) ) )", "obj1": 0.7440944881889764, "obj2": 0.11031895594251474}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "( ACS - Max( Min( ACS ,( Min( CRS ,FirstVNF_CPU ) / FirstVNF_RAM ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUC ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( CS ,( RMSe / RRSe ) ) ) - ( Min( Max( Min( MUM ,MUM ),MUM ) ,MUR ) + RCSe ) ) ) * DS ) )", "obj1": 0.484251968503937, "obj2": 0.30410556302464486}, {"determining": "( ( ( AMS + DDR ) * FirstVNF_RAM ) * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( RMSe - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7347400841445332}, {"determining": "( Max( PN,( Max( FirstVNF_Mem,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) * ( ( ( ( ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) + ( AMS + ( AMS + ACS ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / ( RCSe - MUC ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( Min( RCSe ,MUC ) / MUR ) ) ) ) ) ) )", "obj1": 0.5551181102362205, "obj2": 0.24942655958006418}], "27": [{"determining": "( ( BR * ( Max( ( CRS / ( ( MRS + ( BR + ACS ) ) * FirstVNF_CPU_Server ) ),ARS ) * ( MRS - ( Const + ( FirstVNF_CPU_Server + Min( CRS ,( FirstVNF_Mem_Server / AMS ) ) ) ) ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( CS * MUC ) - RCSe ) / RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server / DDR ),( DDR / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - Max( ( ( ACS - CRS ) * ( AMS * CRS ) ),FirstVNF_CPU_Server ) )", "choosing": "( Min( RRSe ,RRSe ) / Max( MUC,( ( ( ( RRSe / ( RRSe + MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU + RRS ),( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( MUC / ( ( ( DS - ( RCSe * MUM ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( ( RCSe + ( CS + MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - PN ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( DS ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,RCSe ),MUR ) ) ) ) ) ) )", "obj1": 0.6240157480314961, "obj2": 0.20812215093296493}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - DDR ) )", "choosing": "( ( Min( RCSe ,( MUC - Max( Min( RCSe ,RRSe ),MUR ) ) ) / ( MUC + CS ) ) / RRSe )", "obj1": 0.9173228346456693, "obj2": 0.03494019438688305}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / ( MRS / MRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC / ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( Max( RCSe,MUR ) - ( MUC / Min( ( MUC / DS ) ,CS ) ) ) ) * DS ) ) )", "obj1": 0.8759842519685039, "obj2": 0.046025151011938124}, {"determining": "Min( Min( CRS ,ARS ) ,( ( Max( Const,( ( FirstVNF_RAM * FirstVNF_RAM ) + MDR ) ) / MRS ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( RRSe + RMSe ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( ( ( MLU + ( ( MLU / DS ) + MLU ) ) - RMSe ) * RMSe ) * ( DS - Max( CS,RCSe ) ) ) - ( ( MUM + RRSe ) - Max( ( ( RRSe + DS ) + ( CS / RMSe ) ),( MLU + Max( Min( MUR ,( MUM * MUM ) ),MLU ) ) ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.2726289431574951}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( Max( FirstVNF_CPU,ACS ) * ( FirstVNF_RAM * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUC - DS ) + CS ) * ( DS / Max( Min( MLU ,MUR ),( MUC - DS ) ) ) ) / ( MUC + DS ) )", "obj1": 0.5177165354330708, "obj2": 0.27894071163746065}, {"determining": "( ( PN / FirstVNF_CPU ) * ( FirstVNF_RAM_Server * ( ( ( Min( ( MDR / ( CRS / CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( ( CS * ( DS + MUR ) ) * MUR ) * ( DS - MLU ) ) / Max( ( MUC / Min( ( RMSe / MUM ) ,CS ) ),( DS / MLU ) ) ) * DS ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18914857548383004}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * PN ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "( Min( MUC ,Min( RMSe ,MUM ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( Max( MUR,MUR ) ,RCSe ) ,( DS - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( MDR * FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( ( RMSe / CS ) - MLU ) ) ) ) ) )", "obj1": 0.6259842519685039, "obj2": 0.20442246538934347}, {"determining": "( ( ACS * PN ) * Max( MDR,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe / ( MUC + ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) ) ) / RRSe )", "obj1": 0.17913385826771652, "obj2": 0.6640518197401264}, {"determining": "Max( ( Min( ( ( ( CRS / FirstVNF_Mem ) + DDR ) + ( RRS / FirstVNF_Mem_Server ) ) ,PN ) - MDR ),( ( ( FirstVNF_RAM + PN ) - ( ARS * DDR ) ) - ( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( ( RCSe + ( ( ( RRSe - CS ) - Max( ( ( RCSe - MUR ) - ( RRSe * Max( RRSe,RRSe ) ) ),DS ) ) + ( RRSe - Min( MLU ,Max( Max( RMSe,( RCSe / MUR ) ),MUC ) ) ) ) ) / ( MUC + DS ) )", "obj1": 0.7224409448818898, "obj2": 0.12462907952431486}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( CRS - Max( Max( FirstVNF_RAM,MRS ),( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) ,CS ) ,( CS / CS ) )", "obj1": 0.281496062992126, "obj2": 0.5438869770315833}, {"determining": "( Max( BR,ACS ) - Max( FirstVNF_Mem,Max( MRS,( Min( AMS ,ACS ) * ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ACS ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( Min( DS ,CS ) + ( CS + MUR ) ) / MUC ) - MLU ),DS ) / RRSe ) - RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48382707297104055}, {"determining": "( ( ( Max( MDR,( ARS - Const ) ) * PN ) - MDR ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.026450860571012657}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.23096450683923594}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( ACS - Max( Min( ACS ,( Min( CRS ,FirstVNF_CPU ) / FirstVNF_RAM ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUC ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( CS ,( RMSe / RRSe ) ) ) - ( Min( Max( Min( MUM ,MUM ),MUM ) ,MUR ) + RCSe ) ) ) * DS ) )", "obj1": 0.484251968503937, "obj2": 0.30410556302464486}, {"determining": "( ACS - ( Max( FirstVNF_CPU,Max( ( ( RRS + ( BR * MDR ) ) + ( DDR * ( Const / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) - ( Min( DDR ,ARS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( RRSe / Min( RRSe ,MUM ) ) ) - Min( CS ,( DS - ( Min( Min( Min( ( RMSe + MUM ) ,Max( CS,RMSe ) ) ,RCSe ) ,RCSe ) * RMSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.587235849037345}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( Max( Max( ARS,MRS ),( FirstVNF_Mem_Server - ( ( FirstVNF_RAM / ( DDR / ARS ) ) * FirstVNF_RAM_Server ) ) ) - ACS )", "choosing": "( ( DS - DS ) / ( MLU - Min( MLU ,MUC ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5672547200953371}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( ( ACS * PN ) * Max( MDR,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7078679243115787}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "( ( Const - RRS ) * ( ( ( ( ( Min( ARS ,Max( MRS,RRS ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) / FirstVNF_Mem_Server ) ) * PN ) - MDR ) + Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + RCSe ) / Max( RMSe,MUC ) )", "obj1": 0.4271653543307087, "obj2": 0.37502913464985554}, {"determining": "( ( ACS * PN ) * Max( MDR,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6728763008974887}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( FirstVNF_RAM / BR ),( FirstVNF_CPU_Server * MDR ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,( RRSe - RCSe ) ) ) ,( MUM - Max( Min( RCSe ,RRSe ),MUR ) ) ) ) ) ) )", "obj1": 0.5708661417322834, "obj2": 0.24077735630322647}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( ( AMS + FirstVNF_RAM ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( ( RMSe + MLU ) * MLU ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,Max( MUR,MUR ) ) + RRSe ) - Max( ( ( CS / RMSe ) + ( DS + RRSe ) ),( ( ( CS - DS ) + Max( MLU,RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.6850393700787402, "obj2": 0.16017582368700953}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ACS ,( FirstVNF_CPU / FirstVNF_CPU ) ) ) * ( ARS * Min( Max( Min( Max( CRS,FirstVNF_RAM ) ,FirstVNF_CPU_Server ),MDR ) ,ARS ) ) ) ) * ( BR * PN ) )", "choosing": "( Max( MUC,( ( CS / ( ( MUC / DS ) - ( Min( MUC ,Min( DS ,MLU ) ) + Max( ( MUR * MUM ),Min( DS ,MUM ) ) ) ) ) * DS ) ) / ( DS + Max( ( MUR - DS ),( ( MUM + CS ) / ( CS - DS ) ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8474994286470567}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2854330708661417, "obj2": 0.5310393628971785}, {"determining": "( Max( ( MRS * Min( ( Min( ACS ,AMS ) / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem - Max( AMS,ACS ) ) ) ) ),ACS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( ( RRSe + RMSe ),( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6110658711004896}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( Max( Min( RMSe ,DS ),RCSe ) + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.25676285513244695}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( MUC + CS ) ) / RRSe )", "obj1": 0.38976377952755903, "obj2": 0.41798917423788007}, {"determining": "Max( ( ( ARS + PN ) + CRS ),( ( RRS * MDR ) - ( ACS * Const ) ) )", "choosing": "( ( RCSe - ( Max( ( ( MUR / RMSe ) - RRSe ),( Min( DS ,( ( RMSe - MUC ) * RCSe ) ) + Max( ( RCSe / MUR ),Max( Min( MUC ,RMSe ),MUM ) ) ) ) - MUR ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) - RRSe ) * ( RRSe / RMSe ) ) / ( ( MUC / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.15748031496062992, "obj2": 0.6870540132610435}, {"determining": "( ( ( AMS + DDR ) * FirstVNF_RAM ) * ( AMS + DDR ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - Max( ( ( CS / RMSe ) + ( DS + RRSe ) ),( ( ( CS - DS ) + Max( MLU,RMSe ) ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6389663092342344}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05485921148696636}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( Min( BR ,DDR ) ,ACS ) ) * ( AMS * Min( Max( FirstVNF_CPU_Server,MDR ) ,ARS ) ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( Max( RMSe,MLU ) - ( MLU + RCSe ) ) ) * DS ) ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.8223769536825655}, {"determining": "( ( BR * ( ( ( CRS / AMS ) * ARS ) * Min( FirstVNF_Mem ,AMS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( DS,( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6512852990609552}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,RRS ) ) * FirstVNF_CPU )", "choosing": "( ( RMSe + Max( Max( ( ( ( Min( MLU ,MLU ) - ( RMSe + RCSe ) ) + MUM ) * MUR ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( Min( MUR ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ),MUM ) ) ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6929133858267716, "obj2": 0.15201711063489096}, {"determining": "( Max( RRS,FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,( MRS / MDR ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / MUM ) * ( RMSe / Max( MUC,CS ) ) ) / ( ( Min( ( RMSe / DS ) ,CS ) / MUC ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.36220472440944884, "obj2": 0.44998262482481005}, {"determining": "( ( ( Min( ( Max( ( FirstVNF_CPU + ( BR - ARS ) ),BR ) / Const ) ,Const ) * ( CRS * Min( FirstVNF_RAM_Server ,ACS ) ) ) - CRS ) * Max( ( PN + Const ),ACS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC * Min( ( MUM - MUM ) ,CS ) ) - Max( MUR,RCSe ) ) ) * Max( ( Max( MLU,( MUM - RMSe ) ) * ( CS * DS ) ),( ( ( RMSe / RMSe ) - RRSe ) * MUC ) ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.0490188597304437}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07895427376609054}, {"determining": "( ( ( AMS + DDR ) * FirstVNF_RAM ) * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( RMSe - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7317057483514202}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( Max( ( DDR + AMS ),ACS ) - ( AMS / DDR ) )", "choosing": "( Min( MUC ,DS ) / ( MUC * ( ( ( ( Min( CS ,MUM ) / RRSe ) * ( RMSe / Max( MLU,( MUR - RRSe ) ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * ( RRSe * RRSe ) ) ) ) * ( DS + MUC ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( Max( PN,ACS ) * ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * ( Min( ( PN * MDR ) ,( ( ARS / AMS ) * ( FirstVNF_RAM / BR ) ) ) + DDR ) ) - MDR ) )", "choosing": "( ( MUC + ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( RMSe + Min( MUC ,RMSe ) ) ) ) ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( DS / MLU ) ) ) * DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.751024386149643}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( Max( FirstVNF_Mem,BR ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * Min( ( RMSe / DS ) ,Max( MUR,MUC ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6297640825967258}, {"determining": "Max( ( MRS - ( Const + ( FirstVNF_CPU_Server + Min( CRS ,( FirstVNF_Mem_Server / AMS ) ) ) ) ),( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Max( BR,MDR ) ) ,ACS ) - ACS ) + CRS ),AMS ) ) )", "choosing": "( ( MUC * DS ) / ( ( CS * MUC ) - RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7061774260790011}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.23096450683923594}, {"determining": "( Max( PN,ACS ) * ( ( ( ( Min( ( MDR / Max( FirstVNF_Mem,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * ( Min( ( PN * MDR ) ,( ( ARS / AMS ) * ( FirstVNF_RAM / Const ) ) ) + DDR ) ) - MDR ) )", "choosing": "( ( MUC + ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( RMSe + Min( MUC ,RMSe ) ) ) ) ) / ( ( DS * DS ) * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( CS ,( RMSe / DS ) ) ) - ( DS / MLU ) ) ) * MUM ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7587060295709954}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - PN ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + PN ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - DS ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,RCSe ),MUR ) ) ) ) ) ) )", "obj1": 0.5846456692913385, "obj2": 0.23280900572485216}, {"determining": "Max( ( ( ( ( Max( ( ( MDR * PN ) - ( MRS - FirstVNF_RAM_Server ) ),Max( DDR,( Const + MDR ) ) ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39814887905454405}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * Max( PN,ACS ) )", "choosing": "( ( ( ( ( ( Min( RRSe ,MUM ) / MUM ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.16141732283464566, "obj2": 0.6777023837026588}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05485921148696636}, {"determining": "( Min( Max( BR,ACS ) ,FirstVNF_RAM ) * Max( Max( FirstVNF_CPU_Server,MRS ),FirstVNF_Mem ) )", "choosing": "( ( Max( ( Max( ( MLU + ( CS + ( RRSe / MLU ) ) ),( ( DS * Min( MUC ,MUR ) ) + ( MUR - Max( MUR,RRSe ) ) ) ) / ( ( MUM + CS ) - ( CS - DS ) ) ),( ( RRSe * Max( RMSe,CS ) ) - Max( DS,( MLU * RMSe ) ) ) ) / MUR ) - ( MUM + MLU ) )", "obj1": 0.5669291338582677, "obj2": 0.24645365845099454}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe * DS ) ,CS ) ) - ( ( RMSe / CS ) * ( ( MUR - MUC ) + ( MUM + MLU ) ) ) ) ) * DS ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5255207473849449}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS * ( MRS - CRS ) ) )", "choosing": "( ( MUC * CS ) - Min( CS ,Max( ( ( RMSe / CS ) - ( ( RRSe - ( CS - ( DS / MLU ) ) ) / Max( CS,( CS / ( MUC - MUM ) ) ) ) ),RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44045757987027623}, {"determining": "( Max( PN,( Max( FirstVNF_Mem,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) * ( ( ( ( ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) + ( AMS + ( AMS + ACS ) ) ) * PN ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / ( RCSe - MUC ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( Min( RCSe ,MUC ) / MUR ) ) ) ) ) ) )", "obj1": 0.5551181102362205, "obj2": 0.24942655958006418}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( FirstVNF_CPU - CRS ) ) + Max( ( CRS * ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / CS ) ) / ( Min( ( RMSe / MLU ) ,( Min( CS ,RRSe ) + MLU ) ) - ( ( RMSe / CS ) * ( MUM * Min( CS ,RCSe ) ) ) ) ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.08963033803873457}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "( ( ( FirstVNF_CPU_Server - ( FirstVNF_CPU - ( FirstVNF_Mem_Server / ARS ) ) ) + ACS ) - FirstVNF_Mem_Server )", "choosing": "( ( ( MLU / RRSe ) / RCSe ) - Min( CS ,( CS + ( ( RCSe * Max( DS,( Min( MUR ,MLU ) + Max( MUM,MUM ) ) ) ) / ( ( MUC / Min( CS ,( RMSe / DS ) ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3262901029364462}, {"determining": "( ( ARS - FirstVNF_CPU ) - ( ( MRS - CRS ) * MDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( RCSe,MUC ) ) + MUC ) - Min( CS ,Max( ( ( RMSe + CS ) + ( ( RRSe - MUC ) - Min( ( CS / DS ) ,CS ) ) ),( MLU + ( RCSe / MUR ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4431626064639917}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3840614642046068}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( DS - DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe * RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,Max( MUR,MUC ) ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.9901574803149606, "obj2": 0.005368970542735002}, {"determining": "( Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,MRS ) ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.4409448818897638, "obj2": 0.36429903594240354}, {"determining": "( Max( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ),ACS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( DS,( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6165497288738377}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) + CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC / ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( ( RMSe / CS ) * CS ) - ( RCSe + MUR ) ) ) * DS ) ) )", "obj1": 0.6673228346456693, "obj2": 0.16701508557522848}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server - Min( ( BR * ARS ) ,ARS ) ) ) )", "choosing": "( ( Min( ( ( ( Min( RRSe ,MUM ) * RRSe ) - ( Max( Max( RCSe,RCSe ),MUR ) - MLU ) ) / RRSe ) ,( MUM + DS ) ) - MLU ) - Min( DS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5041676765482012}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( Min( MUM ,MUM ) / RRSe ) - Min( CS ,( MLU + ( RCSe / ( MUC / Min( ( RMSe / DS ) ,Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.07149789557620523}, {"determining": "( ( Max( CRS,( PN + MRS ) ) / FirstVNF_RAM ) * ( ( ( ( ( ( ACS + Const ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC * ( Min( MLU ,MUM ) * DS ) ) / ( MUC + DS ) )", "obj1": 0.9606299212598425, "obj2": 0.02075626673481117}, {"determining": "( Max( Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + PN ) ) ),Max( RRS,MDR ) ) - CRS )", "choosing": "Min( ( ( CS - ( DS - Max( ( CS / CS ),Max( RMSe,DS ) ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS * CS ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5660552381065543}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( BR * FirstVNF_Mem_Server ) ) ) - ( MDR + PN ) ) )", "choosing": "( ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + MUC ) ) ) ),( MLU + ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) + ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) )", "obj1": 0.7145669291338582, "obj2": 0.13511635913444298}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( ( AMS / Const ) * ( CRS - ( ( ( ( ( PN * ARS ) + Max( ( MRS - RRS ),( FirstVNF_CPU_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * Min( ( CS / ( ( MUR / Min( MLU ,MUR ) ) - ( MUM - ( MUR + CS ) ) ) ) ,DS ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09968821160072751}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5123263040565089}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "Max( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( MLU * DS ) )", "obj1": 0.8149606299212598, "obj2": 0.06719909576406231}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( Const ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6939582661616142}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( ( ( AMS + DDR ) * FirstVNF_RAM ) * ( AMS + DDR ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - Max( ( ( CS / RMSe ) + ( DS + RRSe ) ),( ( ( CS - DS ) + Max( MLU,RMSe ) ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6466188684889714}, {"determining": "( Const * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / RRSe ) ) ,( RMSe - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7347400841445332}, {"determining": "( ( BR / ( ( ( ( Max( FirstVNF_Mem_Server,ACS ) - ( ARS - FirstVNF_CPU ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / ( RRSe - CS ) ) + ( ( Min( RRSe ,Max( Max( ( MUM - RCSe ),MUC ),( DS + ( MUC / RCSe ) ) ) ) * RRSe ) / ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) + DS ) ) ) / ( RRSe - DS ) )", "obj1": 0.968503937007874, "obj2": 0.017159444183787124}, {"determining": "Max( ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.6594488188976378, "obj2": 0.17426876009115277}, {"determining": "Max( Max( Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( ACS - ACS ) ),PN ) ),Min( FirstVNF_RAM ,( Min( AMS ,( MDR / ACS ) ) * RRS ) ) ),( ACS - ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Max( RMSe,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( RRSe + RRSe ) + CS ) ) * Max( ( DS / ( MUC * MLU ) ),RCSe ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.6928129105306182}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - Max( ( FirstVNF_CPU_Server / CRS ),MRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) - RCSe ) - ( RCSe - ( RMSe + RMSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45471034087191214}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + DDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUM ) / RRSe ) - Min( CS ,( MLU + ( RCSe / ( MUC / Min( ( RMSe / DS ) ,Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.3892884856550773}, {"determining": "( ( Min( MDR ,CRS ) * Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - FirstVNF_Mem_Server ),Min( MDR ,FirstVNF_CPU_Server ) ) ) / PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUM ) ) / CS ) ) - Min( RCSe ,MUM ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( Max( MUR,Min( MUC ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.7047244094488189, "obj2": 0.13934719789784789}, {"determining": "( ( ( ( FirstVNF_Mem_Server / DDR ) + Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * FirstVNF_Mem ) ) ) - CRS ) * ( FirstVNF_CPU_Server / Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,( DS - ( CS / Min( ( DS + CS ) ,MUC ) ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.07149789557620523}, {"determining": "Max( ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( ACS,FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * ( ( RRS * ARS ) - ( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( ( RMSe * ( ( RRSe * ( DS + RCSe ) ) - Max( ( MLU / RCSe ),Min( MUM ,MUC ) ) ) ) * Max( RCSe,MUC ) ) + MUC ) / RCSe ) )", "obj1": 0.6732283464566929, "obj2": 0.16363323714014422}], "28": [{"determining": "( ( BR / ( ( CRS * PN ) - MDR ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / ( RRSe - CS ) ) + ( ( Min( RRSe ,Max( Max( ( MUM - RCSe ),MUC ),( DS + ( MUC / RCSe ) ) ) ) * RRSe ) / ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) + DS ) ) ) / ( ( Max( CS,( Max( Min( RMSe ,DS ),RCSe ) + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( Max( ( CRS / ( ( MRS + ( BR + ACS ) ) * FirstVNF_CPU_Server ) ),ARS ) * ( MRS - ( Const + ( FirstVNF_CPU_Server + Min( CRS ,( FirstVNF_Mem_Server / AMS ) ) ) ) ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( CS * MUC ) - RCSe ) / RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU + RRS ),( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( MUC / ( ( ( DS - ( RCSe * MUM ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( ( RCSe + ( CS + MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( ( PN / FirstVNF_CPU ) * ( FirstVNF_RAM_Server * ( ( ( Min( ( MDR / ( CRS / CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( ( CS * ( DS + MUR ) ) * MUR ) * ( DS - MLU ) ) / Max( ( MUC / Min( ( RMSe / MUM ) ,CS ) ),( DS / MLU ) ) ) * DS ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18914857548383004}, {"determining": "( Max( ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU ) ),ACS ) - FirstVNF_Mem_Server )", "choosing": "( ( ( MLU / RRSe ) / RCSe ) - Min( CS ,( MLU + ( RCSe / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) ) ) )", "obj1": 0.4704724409448819, "obj2": 0.32889988748896687}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( Min( BR ,DDR ) ,ACS ) ) * ( AMS * Min( Max( FirstVNF_CPU_Server,MDR ) ,ARS ) ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( Max( RMSe,MLU ) - ( MLU + RCSe ) ) ) * DS ) ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.8223769536825655}, {"determining": "Max( ( Min( ( ( ( CRS / FirstVNF_Mem ) + DDR ) + ( RRS / FirstVNF_Mem_Server ) ) ,PN ) - MDR ),( ( ( FirstVNF_RAM + PN ) - ( ARS * DDR ) ) - ( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( ( RCSe + ( ( ( RRSe - CS ) - Max( ( ( RCSe - MUR ) - ( RRSe * Max( RRSe,RRSe ) ) ),DS ) ) + ( RRSe - Min( MLU ,Max( Max( RMSe,( RCSe / MUR ) ),MUC ) ) ) ) ) / ( MUC + DS ) )", "obj1": 0.7224409448818898, "obj2": 0.12462907952431486}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),RMSe ) ) ) ) ) ) )", "obj1": 0.6161417322834646, "obj2": 0.2214438546061385}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( Max( ( DDR + AMS ),ACS ) - ( AMS / DDR ) )", "choosing": "( Min( MUC ,DS ) / ( MUC * ( ( ( ( Min( CS ,MUM ) / RRSe ) * ( RMSe / Max( MLU,( MUR - RRSe ) ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * ( RRSe * RRSe ) ) ) ) * ( DS + MUC ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( CRS - Max( Max( FirstVNF_RAM,MRS ),( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) ,CS ) ,( CS / CS ) )", "obj1": 0.281496062992126, "obj2": 0.5438869770315833}, {"determining": "( Max( BR,ACS ) - Max( FirstVNF_Mem,Max( MRS,( Min( AMS ,ACS ) * ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ACS ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( Min( DS ,CS ) + ( CS + MUR ) ) / MUC ) - MLU ),DS ) / RRSe ) - RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48382707297104055}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( PN * Const ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.9015748031496063, "obj2": 0.03572429329604677}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Max( MRS,FirstVNF_CPU ) * PN ) - MDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( ( CS - ( ( ( MUR * ( DS / DS ) ) / Min( ( CS + MUR ) ,DS ) ) + DS ) ) * ( DS + MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.7362204724409449, "obj2": 0.11559108507653294}, {"determining": "( Max( FirstVNF_CPU,ACS ) * ( FirstVNF_RAM * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUC - DS ) + CS ) * ( DS / Max( Min( MLU ,MUR ),( MUC - DS ) ) ) ) / ( MUC + DS ) )", "obj1": 0.5177165354330708, "obj2": 0.27894071163746065}, {"determining": "( Max( Min( ( Min( Max( ARS,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) - BR ) ,BR ),ACS ) - Max( Min( MRS ,MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.28934288576912875}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5119812587152925}, {"determining": "( ( AMS / Const ) * ( CRS - ( ( ( ( ( PN * ARS ) + Max( ( MRS - RRS ),( FirstVNF_CPU_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * Min( ( CS / ( ( MUR / Min( MLU ,MUR ) ) - ( MUM - ( MUR + CS ) ) ) ) ,DS ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09968821160072751}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( Max( Max( ARS,MRS ),( FirstVNF_Mem_Server - ( ( FirstVNF_RAM / ( DDR / ARS ) ) * FirstVNF_RAM_Server ) ) ) - ACS )", "choosing": "( ( DS - DS ) / ( MLU - Min( MLU ,MUC ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5672547200953371}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,RRS ) ) * FirstVNF_CPU )", "choosing": "( ( RMSe + Max( Max( ( ( ( Min( MLU ,MLU ) - ( RMSe + RCSe ) ) + MUM ) * MUR ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( Min( MUR ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ),MUM ) ) ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6929133858267716, "obj2": 0.15201711063489096}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( BR * FirstVNF_Mem_Server ) ) ) - ( MDR + PN ) ) )", "choosing": "( ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + MUC ) ) ) ),( MLU + ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) + ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) )", "obj1": 0.7145669291338582, "obj2": 0.13511635913444298}, {"determining": "( ( Min( MDR ,CRS ) * Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - Max( PN,( Max( FirstVNF_Mem,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,RRSe ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( MUC ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.010150531901431668}, {"determining": "( ( ( AMS + DDR ) * FirstVNF_RAM ) * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( RMSe - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7317057483514202}, {"determining": "( ( Const - RRS ) * ( ( ( ( ( Min( ARS ,Max( MRS,RRS ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) / FirstVNF_Mem_Server ) ) * PN ) - MDR ) + Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + RCSe ) / Max( RMSe,MUC ) )", "obj1": 0.4271653543307087, "obj2": 0.37502913464985554}, {"determining": "( ( ( ( FirstVNF_CPU + Const ) + FirstVNF_CPU_Server ) * ( ( FirstVNF_Mem + PN ) * FirstVNF_Mem ) ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( ACS * Min( CRS ,Const ) ) ) ) - CRS ) )", "choosing": "Min( ( Max( CS,( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - ( ( MUM - ( MUM - MLU ) ) / Min( MUM ,( ( RRSe - ( ( MUM - RMSe ) / ( DS * RMSe ) ) ) * ( RCSe / CS ) ) ) ) ) ,( ( ( ( RMSe * ( ( ( DS + RCSe ) * RRSe ) - Max( ( MLU / RMSe ),MLU ) ) ) * Max( RCSe,MUC ) ) + MUC ) / RCSe ) )", "obj1": 0.6791338582677166, "obj2": 0.15922223051120604}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ACS ,( FirstVNF_CPU / FirstVNF_CPU ) ) ) * ( ARS * Min( Max( Min( Max( CRS,FirstVNF_RAM ) ,FirstVNF_CPU_Server ),MDR ) ,ARS ) ) ) ) * ( BR * PN ) )", "choosing": "( Max( MUC,( ( CS / ( ( MUC / DS ) - ( Min( MUC ,Min( DS ,MLU ) ) + Max( ( MUR * MUM ),Min( DS ,MUM ) ) ) ) ) * DS ) ) / ( DS + Max( ( MUR - DS ),( ( MUM + CS ) / ( CS - DS ) ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8474994286470567}, {"determining": "( ( ACS * PN ) * Max( MDR,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7078679243115787}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( ACS + Const ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.5984251968503937, "obj2": 0.2236921199654938}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.27529307350107873}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.8503937007874016, "obj2": 0.05639251556441261}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.15551181102362205, "obj2": 0.6844559535631731}, {"determining": "( Max( PN,ACS ) * ( ( ( Const / Const ) * ( ACS - FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) + ( Min( ( RRSe + ( MUC + MUM ) ) ,DS ) + Min( ( RRSe / ( RMSe - RMSe ) ) ,RRSe ) ) ) - DS ) ) )", "obj1": 0.5334645669291339, "obj2": 0.26556076769878545}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( Const * ( AMS + DDR ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / RRSe ) ) ,( RMSe - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7347400841445332}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + ( ( DDR / BR ) / ( FirstVNF_Mem_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe / Min( ( MUC + ( CS * ( MLU * MUM ) ) ) ,MUM ) ) / RRSe )", "obj1": 0.297244094488189, "obj2": 0.5205533348835764}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.6535433070866141, "obj2": 0.18050681071313676}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - PN ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( DS ,RMSe ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,RCSe ),MUR ) ) ) ) ) ) )", "obj1": 0.6240157480314961, "obj2": 0.20812215093296493}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Min( ( Max( ( ( CRS + PN ) - ( ( AMS * FirstVNF_Mem_Server ) / BR ) ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ,( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / RRSe ) / RCSe ) - ( Max( ( Max( MUM,( ( RCSe - ( MUR - MUC ) ) + Max( Max( MUR,MUM ),Min( MUM ,DS ) ) ) ) - DS ),MLU ) / MUR ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( Max( PN,ACS ) * ( ( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * ( Min( ( PN * MDR ) ,( ( ARS / AMS ) * ( FirstVNF_RAM / BR ) ) ) + DDR ) ) - MDR ) )", "choosing": "( ( MUC + ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( RMSe + Min( MUC ,RMSe ) ) ) ) ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( DS / MLU ) ) ) * DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.751024386149643}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( FirstVNF_CPU - CRS ) ) + Max( ( CRS * ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / CS ) ) / ( Min( ( RMSe / MLU ) ,( Min( CS ,RRSe ) + MLU ) ) - ( ( RMSe / CS ) * ( MUM * Min( CS ,RCSe ) ) ) ) ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.08963033803873457}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3840614642046068}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( MRS - RRS ) ) )", "choosing": "( ( DS - DS ) / ( MUC * ( ( ( MUC - Max( ( RRSe + MUM ),MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,Max( MUR,MUC ) ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4122803739469721}, {"determining": "( ( ACS * PN ) * Max( MDR,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7051422014522156}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( ( Max( CRS,( PN + MRS ) ) / FirstVNF_RAM ) * ( ( ( ( ( ( ACS + Const ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC * ( Min( MLU ,MUM ) * DS ) ) / ( MUC + DS ) )", "obj1": 0.9606299212598425, "obj2": 0.02075626673481117}, {"determining": "( ( Max( ( PN * Const ),BR ) / Const ) * ( AMS + DDR ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( Min( ( RMSe / DS ) ,CS ) - Max( ( ( CS / RMSe ) + ( DS + RRSe ) ),( ( ( CS - DS ) + Max( MLU,RMSe ) ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.2106299212598425, "obj2": 0.6281474080887965}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( MDR * FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( ( RMSe / CS ) - MLU ) ) ) ) ) )", "obj1": 0.6259842519685039, "obj2": 0.20442246538934347}, {"determining": "( ( Min( MDR ,CRS ) * Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( RCSe / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6968503937007874, "obj2": 0.14389697227951223}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - Min( ARS ,ACS ) ) / ARS ),ACS ) * ( ( ( ( ( AMS + MDR ) - Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS - ( MLU + ( RCSe / ( MUC / Min( Min( ( MUR * MUC ) ,CS ) ,Max( MUR,MUC ) ) ) ) ) ) - ( Min( MUM ,MUM ) / RRSe ) )", "obj1": 0.4744094488188976, "obj2": 0.3188475381440051}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS * ( MRS - CRS ) ) )", "choosing": "( ( MUC * CS ) - Min( CS ,Max( ( ( RMSe / CS ) - ( ( RRSe - ( CS - ( DS / MLU ) ) ) / Max( CS,( CS / ( MUC - MUM ) ) ) ) ),RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44045757987027623}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07895427376609054}, {"determining": "( Max( PN,ACS ) * Max( CRS,( PN - ( FirstVNF_CPU_Server * MRS ) ) ) )", "choosing": "Min( ( ( CS * Min( MUM ,( RCSe * MLU ) ) ) - CS ) ,( ( ( CS * ( DS - Max( RCSe,CS ) ) ) - ( ( Min( CS ,Min( DS ,( RMSe + MLU ) ) ) + RRSe ) - Max( ( ( ( CS - DS ) + Max( MLU,RMSe ) ) / ( CS - DS ) ),( ( CS / RMSe ) + ( DS + RRSe ) ) ) ) ) / RCSe ) )", "obj1": 0.8858267716535433, "obj2": 0.04131569749866335}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * Max( PN,ACS ) )", "choosing": "( ( ( ( ( ( Min( RRSe ,MUM ) / MUM ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.16141732283464566, "obj2": 0.6777023837026588}, {"determining": "( ( ACS * PN ) * Max( MDR,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe / ( MUC + ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) ) ) / RRSe )", "obj1": 0.17913385826771652, "obj2": 0.6640518197401264}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_Mem * ( RRS - MDR ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.7716535433070866, "obj2": 0.08718377446481282}, {"determining": "Max( ( ( ( ( Max( ( ( MDR * PN ) - ( MRS - FirstVNF_RAM_Server ) ),Max( DDR,( Const + MDR ) ) ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39814887905454405}, {"determining": "( Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,MRS ) ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( CS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RMSe * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.4409448818897638, "obj2": 0.36429903594240354}, {"determining": "( ( Const / ( ( ( FirstVNF_RAM * ( ARS - DDR ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( MLU ,MUC ),Max( RCSe,CS ) ) / RCSe ) - Min( CS ,Min( RMSe ,Min( MLU ,Max( MUR,( CS / MLU ) ) ) ) ) )", "obj1": 0.9645669291338582, "obj2": 0.016547808942620375}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe * DS ) ,CS ) ) - ( ( RMSe / CS ) * ( ( MUR - MUC ) + ( MUM + MLU ) ) ) ) ) * DS ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5255207473849449}, {"determining": "( ( Const - ( MRS - PN ) ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( FirstVNF_Mem_Server ,MRS ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RRSe ) ) ) - CS ) ,( RMSe * ( ( ( Max( DS,MUR ) / RMSe ) - RCSe ) - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.9881889763779528, "obj2": 0.007357855172403456}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.8622047244094488, "obj2": 0.052936642033752375}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.39173228346456695, "obj2": 0.4141367186729978}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.797244094488189, "obj2": 0.07364235232531217}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( MLU * DS ) )", "obj1": 0.2854330708661417, "obj2": 0.5310393628971785}, {"determining": "( ( FirstVNF_Mem / ( RRS * PN ) ) - Max( ( ( ( ( ( AMS + DDR ) + Max( ( MRS + RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( FirstVNF_Mem_Server ,ACS ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( RCSe / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6532060607875315}, {"determining": "( ( ( Min( ( Max( ( FirstVNF_CPU + ( BR - ARS ) ),BR ) / Const ) ,Const ) * ( CRS * Min( FirstVNF_RAM_Server ,ACS ) ) ) - CRS ) * Max( ( PN + Const ),ACS ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( Min( CS ,MLU ) ,CS ) ) ) / ( ( MUC * Min( ( MUM - MUM ) ,CS ) ) - Max( MUR,RCSe ) ) ) * Max( ( Max( MLU,( MUM - RMSe ) ) * ( CS * DS ) ),( ( ( RMSe / RMSe ) - RRSe ) * MUC ) ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.0490188597304437}, {"determining": "( Min( Max( BR,ACS ) ,FirstVNF_RAM ) * Max( Max( FirstVNF_CPU_Server,MRS ),FirstVNF_Mem ) )", "choosing": "( ( Max( ( Max( ( MLU + ( CS + ( RRSe / MLU ) ) ),( ( DS * Min( MUC ,MUR ) ) + ( MUR - Max( MUR,RRSe ) ) ) ) / ( ( MUM + CS ) - ( CS - DS ) ) ),( ( RRSe * Max( RMSe,CS ) ) - Max( DS,( MLU * RMSe ) ) ) ) / MUR ) - ( MUM + MLU ) )", "obj1": 0.5669291338582677, "obj2": 0.24645365845099454}, {"determining": "( Max( Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + PN ) ) ),Max( RRS,MDR ) ) - CRS )", "choosing": "Min( ( ( CS - ( DS - Max( ( CS / CS ),Max( RMSe,DS ) ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS * CS ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5660552381065543}, {"determining": "( ( ( Max( MDR,( ARS - Const ) ) * PN ) - MDR ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.023953904724264785}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( Const ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6939582661616142}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server - Min( ( BR * ARS ) ,ARS ) ) ) )", "choosing": "( ( Min( ( ( ( Min( RRSe ,MUM ) * RRSe ) - ( Max( Max( RCSe,RCSe ),MUR ) - MLU ) ) / RRSe ) ,( MUM + DS ) ) - MLU ) - Min( DS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5041676765482012}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "Max( Max( Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( ACS - ACS ) ),PN ) ),Min( FirstVNF_RAM ,( Min( AMS ,( MDR / ACS ) ) * RRS ) ) ),( ACS - ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Max( RMSe,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( RRSe + RRSe ) + CS ) ) * Max( ( DS / ( MUC * MLU ) ),RCSe ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.6928129105306182}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( Max( PN,ACS ) * Min( Min( DDR ,MRS ) ,ARS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( DS * ( ( MUC - MUR ) / ( ( Min( Min( RRSe ,MUM ) ,RRSe ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,DS ) ) ) ) ) ) ) )", "obj1": 0.5393700787401575, "obj2": 0.26103049474520795}, {"determining": "( ACS - ( Max( FirstVNF_CPU,Max( ( ( RRS + ( BR * MDR ) ) + ( DDR * ( Const / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) - ( Min( DDR ,ARS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( RRSe / Min( RRSe ,MUM ) ) ) - Min( CS ,( DS - ( Min( Min( Min( ( RMSe + MUM ) ,Max( CS,RMSe ) ) ,RCSe ) ,RCSe ) * RMSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.587235849037345}, {"determining": "( Max( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( ( RRSe * ( DS + RCSe ) ) - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.59251968503937, "obj2": 0.2279571477078909}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( MDR,( ARS - Const ) ) * PN ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.032564794911568114}, {"determining": "( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) + CRS ) )", "choosing": "( ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * CS ) ) ) * DS ) ) / ( MUC / ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( ( RMSe / CS ) * CS ) - ( RCSe + MUR ) ) ) * DS ) ) )", "obj1": 0.4074803149606299, "obj2": 0.4036910717940548}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - Max( ( FirstVNF_CPU_Server / CRS ),MRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) - RCSe ) - ( RCSe - ( RMSe + RMSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45471034087191214}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * PN ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Const,CRS ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "( Min( MUC ,Min( RMSe ,MUM ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( Max( MUR,MUR ) ,RCSe ) ,( DS - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.022187459287707247}, {"determining": "Max( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.8149606299212598, "obj2": 0.06719909576406231}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( MDR * FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( ( RMSe / CS ) - MLU ) ) ) ) ) )", "obj1": 0.6259842519685039, "obj2": 0.20442246538934347}, {"determining": "( Max( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ),ACS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( DS,( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6165497288738377}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) / ( DDR / FirstVNF_RAM ) ) ) + ( FirstVNF_RAM_Server / AMS ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( Min( ( MLU / MUR ) ,RRSe ) * ( MUM - Min( Min( RCSe ,Max( MUM,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.8090551181102362, "obj2": 0.06986634761349184}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.5041676765482012}], "29": [{"determining": "( Max( PN,ACS ) * ( ( FirstVNF_Mem * ( RRS - MDR ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( ( CRS * PN ) - MDR ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / ( RRSe - CS ) ) + ( ( Min( RRSe ,Max( Max( ( MUM - RCSe ),MUC ),( DS + ( MUC / RCSe ) ) ) ) * RRSe ) / ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) + DS ) ) ) / ( ( Max( CS,( Max( Min( RMSe ,DS ),RCSe ) + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU + RRS ),( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( MUC / ( ( ( DS - ( RCSe * MUM ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( ( RCSe + ( CS + MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( ( ACS * PN ) * Max( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7070882416122153}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "( Min( Max( BR,ACS ) ,FirstVNF_RAM ) * Max( Max( FirstVNF_CPU_Server,MRS ),FirstVNF_Mem ) )", "choosing": "( ( Max( ( Max( ( MLU + ( CS + ( RRSe / MLU ) ) ),( ( DS * Min( MUC ,MUR ) ) + ( MUR - Max( MUR,RRSe ) ) ) ) / ( ( MUM + CS ) - ( CS - DS ) ) ),( ( RRSe * Max( RMSe,CS ) ) - Max( DS,( MLU * RMSe ) ) ) ) / MUR ) - ( MUM + MLU ) )", "obj1": 0.5669291338582677, "obj2": 0.24645365845099454}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS * ( MRS - CRS ) ) )", "choosing": "( ( MUC * CS ) - Min( CS ,Max( ( ( RMSe / CS ) - ( ( RRSe - ( CS - ( DS / MLU ) ) ) / Max( CS,( CS / ( MUC - MUM ) ) ) ) ),RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44045757987027623}, {"determining": "( ( PN / FirstVNF_CPU ) * ( FirstVNF_RAM_Server * ( ( ( Min( ( MDR / ( CRS / CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( ( CS * ( DS + MUR ) ) * MUR ) * ( DS - MLU ) ) / Max( ( MUC / Min( ( RMSe / MUM ) ,CS ) ),( DS / MLU ) ) ) * DS ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18914857548383004}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( Min( ( MUC - MUR ) ,( RMSe - ( ( CS - RMSe ) + MUR ) ) ) ,RRSe ) / RRSe ) / DS ) - ( MUC * Min( DS ,Max( ( MUC * RRSe ),RCSe ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.17841533088542716}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Max( MRS,FirstVNF_CPU ) * PN ) - MDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( ( CS - ( ( ( MUR * ( DS / DS ) ) / Min( ( CS + MUR ) ,DS ) ) + DS ) ) * ( DS + MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.7362204724409449, "obj2": 0.11559108507653294}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( ( ( ( FirstVNF_CPU + Const ) + FirstVNF_CPU_Server ) * ( ( FirstVNF_Mem + PN ) * FirstVNF_Mem ) ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( ACS * Min( CRS ,Const ) ) ) ) - CRS ) )", "choosing": "Min( ( Max( CS,( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - ( ( MUM - ( MUM - MLU ) ) / Min( MUM ,( ( RRSe - ( ( MUM - RMSe ) / ( DS * RMSe ) ) ) * ( RCSe / CS ) ) ) ) ) ,( ( ( ( RMSe * ( ( ( DS + RCSe ) * RRSe ) - Max( ( MLU / RMSe ),MLU ) ) ) * Max( RCSe,MUC ) ) + MUC ) / RCSe ) )", "obj1": 0.6791338582677166, "obj2": 0.15922223051120604}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( CRS - Max( Max( FirstVNF_RAM,MRS ),( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) ,CS ) ,( CS / CS ) )", "obj1": 0.281496062992126, "obj2": 0.5438869770315833}, {"determining": "( Max( BR,ACS ) - Max( FirstVNF_Mem,Max( MRS,( Min( AMS ,ACS ) * ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ACS ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( Min( DS ,CS ) + ( CS + MUR ) ) / MUC ) - MLU ),DS ) / RRSe ) - RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48382707297104055}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.39173228346456695, "obj2": 0.4141367186729978}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( MRS * ( ( CRS - ARS ) + CRS ) )", "choosing": "( ( MUC * ( ( CS / ( DS - Min( Min( ( DS - MUR ) ,( MUR / DS ) ) ,Min( MLU ,CS ) ) ) ) * DS ) ) / ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.20340108957553305}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( MUC + ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( RMSe + Min( MUC ,RMSe ) ) ) ) ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( DS / MLU ) ) ) * DS ) ) )", "obj1": 0.4625984251968504, "obj2": 0.33920404524769315}, {"determining": "( ACS - ( Max( FirstVNF_CPU,Max( ( ( RRS + ( BR * MDR ) ) + ( DDR * ( Const / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) - ( Min( DDR ,ARS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( RRSe / Min( RRSe ,MUM ) ) ) - Min( CS ,( DS - ( Min( Min( Min( ( RMSe + MUM ) ,Max( CS,RMSe ) ) ,RCSe ) ,RCSe ) * RMSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.587235849037345}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.8503937007874016, "obj2": 0.05639251556441261}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( MLU * DS ) )", "obj1": 0.2854330708661417, "obj2": 0.5310393628971785}, {"determining": "( ( AMS / Const ) * ( CRS - ( ( ( ( ( PN * ARS ) + Max( ( MRS - RRS ),( FirstVNF_CPU_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * Min( ( CS / ( ( MUR / Min( MLU ,MUR ) ) - ( MUM - ( MUR + CS ) ) ) ) ,DS ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09968821160072751}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( ( FirstVNF_Mem * ACS ) * ( ( ( ( ( AMS + MDR ) + Max( Max( ( ARS - BR ),FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR * ( ( RCSe / RMSe ) + DS ) ) - ( ( Max( CS,( DS + ( Max( MLU,( RCSe * CS ) ) / Min( ( MUC / DS ) ,Max( MUM,RRSe ) ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) )", "obj1": 0.4862204724409449, "obj2": 0.3080714136305302}, {"determining": "Max( ( Min( ( ( ( CRS / FirstVNF_Mem ) + DDR ) + ( RRS / FirstVNF_Mem_Server ) ) ,PN ) - MDR ),( ( ( FirstVNF_RAM + PN ) - ( ARS * DDR ) ) - ( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( ( RCSe + ( ( ( RRSe - CS ) - Max( ( ( RCSe - MUR ) - ( RRSe * Max( RRSe,RRSe ) ) ),DS ) ) + ( RRSe - Min( MLU ,Max( Max( RMSe,( RCSe / MUR ) ),MUC ) ) ) ) ) / ( MUC + DS ) )", "obj1": 0.7224409448818898, "obj2": 0.12462907952431486}, {"determining": "( Max( FirstVNF_CPU,ACS ) * ( FirstVNF_RAM * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUC - DS ) + CS ) * ( DS / Max( Min( MLU ,MUR ),( MUC - DS ) ) ) ) / ( MUC + DS ) )", "obj1": 0.5177165354330708, "obj2": 0.27894071163746065}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + MDR ) + ( Max( ( PN * FirstVNF_Mem ),Min( PN ,RRS ) ) / FirstVNF_Mem_Server ) ) * PN ) - MDR ) * Min( ACS ,CRS ) ) )", "choosing": "( ( ( Max( CS,( Max( Min( RMSe ,DS ),RCSe ) - Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( ( MUR + ( ( MUR * ( RMSe / MUC ) ) / MUR ) ) - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.468503937007874, "obj2": 0.32392348563600104}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "( ( Const - RRS ) * ( ( ( ( ( Min( ARS ,Max( MRS,RRS ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) / FirstVNF_Mem_Server ) ) * PN ) - MDR ) + Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + RCSe ) / Max( RMSe,MUC ) )", "obj1": 0.4271653543307087, "obj2": 0.37502913464985554}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ACS ,( FirstVNF_CPU / FirstVNF_CPU ) ) ) * ( ARS * Min( Max( Min( Max( CRS,FirstVNF_RAM ) ,FirstVNF_CPU_Server ),MDR ) ,ARS ) ) ) ) * ( BR * PN ) )", "choosing": "( Max( MUC,( ( CS / ( ( MUC / DS ) - ( Min( MUC ,Min( DS ,MLU ) ) + Max( ( MUR * MUM ),Min( DS ,MUM ) ) ) ) ) * DS ) ) / ( DS + Max( ( MUR - DS ),( ( MUM + CS ) / ( CS - DS ) ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8474994286470567}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( Max( MDR,DDR ),BR ) ),FirstVNF_RAM ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( MUC / ( RMSe + RMSe ) ) + Max( RRSe,( CS - CS ) ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5722748113253374}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( ARS * Min( Max( FirstVNF_CPU_Server,MDR ) ,ARS ) ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * DS ) ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.8223769536825655}, {"determining": "( Max( ( DDR + AMS ),ACS ) - ( AMS / DDR ) )", "choosing": "( Min( MUC ,DS ) / ( MUC * ( ( ( ( Min( CS ,MUM ) / RRSe ) * ( RMSe / Max( MLU,( MUR - RRSe ) ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * ( RRSe * RRSe ) ) ) ) * ( DS + MUC ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( DDR + Max( ( MRS - DDR ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) / RCSe ) - ( MUC * ( ( CS / ( DS - Min( Min( ( DS - RCSe ) ,( MUR / RRSe ) ) ,( RMSe - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 0.9822834645669292, "obj2": 0.006482346076598517}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.27529307350107873}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - CRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.670191535766576}, {"determining": "( ( Min( MDR ,CRS ) * Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( ( AMS - FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( RRSe * MUC ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( RMSe + Max( ( MUC * ( RCSe / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,( RMSe / DS ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.14135509909880534}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( MRS - RRS ) ) )", "choosing": "( ( DS - DS ) / ( MUC * ( ( ( MUC - Max( ( RRSe + MUM ),MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,Max( MUR,MUC ) ) ) - ( ( RMSe / CS ) * Min( CS ,MUC ) ) ) ) * DS ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4122803739469721}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( MDR * FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( ( RMSe / CS ) - MLU ) ) ) ) ) )", "obj1": 0.6122047244094488, "obj2": 0.21368414188216048}, {"determining": "( Max( PN,ACS ) * ( ( ( Const / Const ) * ( ACS - FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) + ( Min( ( RRSe + ( MUC + MUM ) ) ,DS ) + Min( ( RRSe / ( RMSe - RMSe ) ) ,RRSe ) ) ) - DS ) ) )", "obj1": 0.5334645669291339, "obj2": 0.26556076769878545}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( BR * FirstVNF_Mem_Server ) ) ) - ( MDR + PN ) ) )", "choosing": "( ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + MUC ) ) ) ),( MLU + ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) + ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) )", "obj1": 0.7145669291338582, "obj2": 0.13250984584916162}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * Max( PN,ACS ) )", "choosing": "( ( ( ( ( ( Min( RRSe ,MUM ) / MUM ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.16141732283464566, "obj2": 0.6777023837026588}, {"determining": "( Max( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ),ACS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( DS,( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6165497288738377}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MLU - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.17885143830603129}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( FirstVNF_CPU - CRS ) ) + Max( ( CRS * ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / CS ) ) / ( Min( ( RMSe / MLU ) ,( Min( CS ,RRSe ) + MLU ) ) - ( ( RMSe / CS ) * ( MUM * Min( CS ,RCSe ) ) ) ) ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.08963033803873457}, {"determining": "( ( Max( CRS,( PN + MRS ) ) / FirstVNF_RAM ) * ( ( ( ( ( ( ACS + Const ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC * ( Min( MLU ,MUM ) * DS ) ) / ( MUC + DS ) )", "obj1": 0.9606299212598425, "obj2": 0.02075626673481117}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5119812587152925}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + ( ( DDR / BR ) / ( FirstVNF_Mem_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( RCSe / Min( ( MUC + ( CS * ( MLU * MUM ) ) ) ,MUM ) ) / RRSe )", "obj1": 0.297244094488189, "obj2": 0.5205533348835764}, {"determining": "( Max( Min( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ) - BR ) ,BR ),ACS ) - Max( Min( MRS ,MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,Max( MUR,MUC ) ) ) ) ) )", "obj1": 0.5059055118110236, "obj2": 0.2886437733370183}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,RRS ) ) * FirstVNF_CPU )", "choosing": "( ( RMSe + Max( Max( ( ( ( Min( MLU ,MLU ) - ( RMSe + RCSe ) ) + MUM ) * MUR ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( Min( MUR ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ),MUM ) ) ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6929133858267716, "obj2": 0.15201711063489096}, {"determining": "( ( BR / ( ( FirstVNF_CPU_Server * PN ) - MDR ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( CS,( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08241930695325018}, {"determining": "( ( ACS * PN ) * Max( MDR,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / CRS ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7039528431410385}, {"determining": "( ACS - Max( Min( MRS ,( BR * RRS ) ),Max( Max( ( ACS - Max( Min( AMS ,Max( RRS,ACS ) ),FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU + RMSe ) ) ) + DS ) / Min( MUC ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe * Min( CS ,MUC ) ) - ( MUC / Min( ( RRSe / DS ) ,CS ) ) ) ) * DS ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2958420397973543}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4980451399247768}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( MDR * FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( ( DS / MUC ) ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( ( RMSe / CS ) - MLU ) ) ) ) ) )", "obj1": 0.5551181102362205, "obj2": 0.2529225319271124}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_Mem * ( RRS - MDR ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.7716535433070866, "obj2": 0.08718377446481282}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( Max( ( ARS - RRS ),Min( FirstVNF_CPU_Server ,BR ) ) + ( AMS + FirstVNF_RAM ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( RMSe * DS ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) - RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( CS ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5225381777090339}, {"determining": "( Max( ( ( Min( ( MDR / Max( ARS,( ARS + MDR ) ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( ( RMSe + ( MUM - Min( RCSe ,( ( RRSe * ( RRSe - RRSe ) ) - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ,CS ) )", "obj1": 0.5866141732283464, "obj2": 0.23096450683923594}, {"determining": "( Max( ( ( Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( ( RRSe * ( DS + RCSe ) ) - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.23096450683923594}, {"determining": "( Max( Max( Min( FirstVNF_CPU_Server ,MDR ),( MRS - ( BR + BR ) ) ),RRS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Max( MUC,Min( Max( ( ( MUR + ( Max( MUC,CS ) + ( MUM / RCSe ) ) ) - ( MUR - RRSe ) ),MUM ) ,MLU ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6165497288738377}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.15551181102362205, "obj2": 0.6844559535631731}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) / ( DDR / FirstVNF_RAM ) ) ) + ( FirstVNF_RAM_Server / AMS ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( Min( ( MLU / MUR ) ,RRSe ) * ( MUM - Min( Min( RCSe ,Max( MUM,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.8090551181102362, "obj2": 0.06986634761349184}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( PN * Const ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( CS + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8937007874015748, "obj2": 0.03898169503390661}, {"determining": "( Min( ACS ,Max( CRS,FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - ( RMSe * Max( Max( ( ( MLU + MLU ) / ( DS / Max( RCSe,( CS * DS ) ) ) ),Max( MLU,MLU ) ),( MUM / ( Min( Max( RCSe,Max( MLU,MUM ) ) ,Min( RMSe ,CS ) ) / RMSe ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45471034087191214}, {"determining": "( FirstVNF_RAM * ( ( ( Min( ( FirstVNF_Mem_Server - MRS ) ,BR ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( ( ( RMSe / CS ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.6830708661417323, "obj2": 0.1575235378642846}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.797244094488189, "obj2": 0.07364235232531217}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - Min( ARS ,ACS ) ) / ARS ),ACS ) * ( ( ( ( ( AMS + MDR ) - Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS - ( MLU + ( RCSe / ( MUC / Min( Min( ( MUR * MUC ) ,CS ) ,Max( MUR,MUC ) ) ) ) ) ) - ( Min( MUM ,MUM ) / RRSe ) )", "obj1": 0.4744094488188976, "obj2": 0.3188475381440051}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - Max( ( FirstVNF_CPU_Server / CRS ),MRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) - RCSe ) - ( RCSe - ( RMSe + RMSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45471034087191214}, {"determining": "( Max( Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + PN ) ) ),Max( RRS,MDR ) ) - CRS )", "choosing": "Min( ( ( CS - ( DS - Max( ( CS / CS ),Max( RMSe,DS ) ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS * CS ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5660552381065543}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( FirstVNF_CPU * ( MRS - RRS ) ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( ( ( ( RMSe / CS ) * Min( CS ,MUC ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.027845447247642055}, {"determining": "( ( ACS * PN ) * Max( MDR,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / Min( ( MDR / Max( ACS,CRS ) ) ,ACS ) ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6347280787722859}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "Max( Max( Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( ACS - ACS ) ),PN ) ),Min( FirstVNF_RAM ,( Min( AMS ,( MDR / ACS ) ) * RRS ) ) ),( ACS - ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Max( RMSe,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( RRSe + RRSe ) + CS ) ) * Max( ( DS / ( MUC * MLU ) ),RCSe ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.6928129105306182}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( Const ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6939582661616142}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Min( ( Max( ( ( CRS + PN ) - ( ( AMS * FirstVNF_Mem_Server ) / BR ) ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ,( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / RRSe ) / RCSe ) - ( Max( ( Max( MUM,( ( RCSe - ( MUR - MUC ) ) + Max( Max( MUR,MUM ),Min( MUM ,DS ) ) ) ) - DS ),MLU ) / MUR ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,( ( RMSe / CS ) - MLU ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( ( RMSe / CS ) - MLU ) ) ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.25861762378912745}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.5030208910060845}, {"determining": "Max( ( Max( ( ( ( AMS + Max( Min( FirstVNF_CPU ,Const ),PN ) ) + Max( ( FirstVNF_RAM_Server - RRS ),Max( Max( FirstVNF_RAM,MDR ),FirstVNF_RAM ) ) ) * PN ),MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "Min( ( ( DS * ( ( ( CS * DS ) + MUC ) * MUM ) ) - CS ) ,( RCSe - DS ) )", "obj1": 0.8169291338582677, "obj2": 0.06656223492153039}, {"determining": "Max( ( ( ( ( Max( ( ( MDR * PN ) - ( MRS - FirstVNF_RAM_Server ) ),Max( DDR,( Const + MDR ) ) ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.4012097999962229}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( MDR,( ARS - Const ) ) * PN ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.032564794911568114}, {"determining": "( ( Max( ( PN * Const ),BR ) / Const ) * ( AMS + DDR ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( Min( ( RMSe / DS ) ,CS ) - Max( ( ( CS / RMSe ) + ( DS + RRSe ) ),( ( ( CS - DS ) + Max( MLU,RMSe ) ) / ( CS - DS ) ) ) ) ) / RCSe ) )", "obj1": 0.2106299212598425, "obj2": 0.6281474080887965}, {"determining": "( ( MRS - RRS ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6454663750183764}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( ACS + Const ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.5984251968503937, "obj2": 0.2236921199654938}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( MDR * FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( ( RMSe / CS ) - MLU ) ,( ( RMSe / CS ) - MLU ) ) ) ) ) )", "obj1": 0.6141732283464567, "obj2": 0.21122838444533615}], "30": [{"determining": "Max( ( FirstVNF_CPU + RRS ),( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( MUC / ( ( ( DS - ( RCSe * MUM ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( ( RCSe + ( CS + MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) * Max( ( MRS - RRS ),Min( FirstVNF_Mem ,CRS ) ) ) ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "Min( ( ( Max( Min( MLU ,MUC ),( ( RCSe + ( MLU + ( RRSe * MUC ) ) ) / MUC ) ) * ( DS - Min( ( DS / RMSe ) ,CS ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_Mem * ( RRS - MDR ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ACS ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( PN * Const ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( CS + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8937007874015748, "obj2": 0.03898169503390661}, {"determining": "( ( PN * ACS ) * Max( ( CRS * ( Min( FirstVNF_Mem ,AMS ) * ( ARS * ARS ) ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUC * ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) ) + DS ) / ( MUC * RCSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7070882416122153}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS * ( MRS - CRS ) ) )", "choosing": "( ( MUC * CS ) - Min( CS ,Max( ( ( RMSe / CS ) - ( ( RRSe - ( CS - ( DS / MLU ) ) ) / Max( CS,( CS / ( MUC - MUM ) ) ) ) ),RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44045757987027623}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - MDR ) - Min( ACS ,( DDR * FirstVNF_Mem ) ) ) - Min( MDR ,MRS ) ) * ( Max( Min( FirstVNF_CPU ,Const ),ARS ) * AMS ) )", "choosing": "( ( ( RCSe * Min( DS ,MUR ) ) + DS ) / ( MUC * ( ( ( ( RMSe * Max( Min( MUR ,MUM ),( DS / RCSe ) ) ) * RCSe ) / MLU ) * DS ) ) )", "obj1": 0.8641732283464567, "obj2": 0.04840264463739185}, {"determining": "( Min( Max( BR,ACS ) ,FirstVNF_RAM ) * Max( Max( FirstVNF_CPU_Server,MRS ),FirstVNF_Mem ) )", "choosing": "( ( Max( ( Max( ( MLU + ( CS + ( RRSe / MLU ) ) ),( ( DS * Min( MUC ,MUR ) ) + ( MUR - Max( MUR,RRSe ) ) ) ) / ( ( MUM + CS ) - ( CS - DS ) ) ),( ( RRSe * Max( RMSe,CS ) ) - Max( DS,( MLU * RMSe ) ) ) ) / MUR ) - ( MUM + MLU ) )", "obj1": 0.5669291338582677, "obj2": 0.24645365845099454}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "Max( ( ( DDR / DDR ) - MDR ),( ( Max( MDR,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( RCSe / Max( CS,CS ) ) - Min( CS ,Min( RCSe ,( MUM - Min( MUC ,( MUC - Max( DS,MUR ) ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.3974304199983952}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( RMSe / CS ) - MLU ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.9606299212598425, "obj2": 0.0178988007550439}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17300515614282092}, {"determining": "( ( Const - RRS ) * ( ( ( ( ( Min( ARS ,Max( MRS,RRS ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) / FirstVNF_Mem_Server ) ) * PN ) - MDR ) + Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + RCSe ) / Max( RMSe,MUC ) )", "obj1": 0.4271653543307087, "obj2": 0.37502913464985554}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - CRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6641288722745468}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( Max( CRS,AMS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,( RMSe - ( MUM - Min( RCSe ,( MUC - Max( Min( RCSe ,RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.23038680998451702}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,ACS ) ) * ( ARS * Min( Max( FirstVNF_CPU_Server,MDR ) ,ARS ) ) ) ) * ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * DS ) ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.820481911352113}, {"determining": "( Max( BR,ACS ) - Max( FirstVNF_Mem,Max( MRS,( Min( AMS ,ACS ) * ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ACS ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( Min( DS ,CS ) + ( CS + MUR ) ) / MUC ) - MLU ),DS ) / RRSe ) - RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48382707297104055}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "( ( BR * ( Min( AMS ,FirstVNF_Mem ) * Max( ( CRS / ( ( MRS + ( PN / ACS ) ) * FirstVNF_CPU_Server ) ),ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS - CS ) ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6451970315195223}, {"determining": "Max( ( Min( ( ( ( CRS / FirstVNF_Mem ) + DDR ) + ( RRS / FirstVNF_Mem_Server ) ) ,PN ) - MDR ),( ( ( FirstVNF_RAM + PN ) - ( ARS * DDR ) ) - ( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( ( RCSe + ( ( ( RRSe - CS ) - Max( ( ( RCSe - MUR ) - ( RRSe * Max( RRSe,RRSe ) ) ),DS ) ) + ( RRSe - Min( MLU ,Max( Max( RMSe,( RCSe / MUR ) ),MUC ) ) ) ) ) / ( MUC + DS ) )", "obj1": 0.7224409448818898, "obj2": 0.12462907952431486}, {"determining": "( MRS * ( ( CRS - ARS ) + CRS ) )", "choosing": "( ( MUC * ( ( CS / ( DS - Min( Min( ( DS - MUR ) ,( MUR / DS ) ) ,Min( MLU ,CS ) ) ) ) * DS ) ) / ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.20340108957553305}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( RMSe / CS ) * Min( CS ,MUC ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.6791338582677166, "obj2": 0.1584280831781363}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Max( MRS,FirstVNF_CPU ) * PN ) - MDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( ( CS - ( ( ( MUR * ( DS / DS ) ) / Min( ( CS + MUR ) ,DS ) ) + DS ) ) * ( DS + MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.7362204724409449, "obj2": 0.11559108507653294}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.8503937007874016, "obj2": 0.05639251556441261}, {"determining": "( CRS - Max( Max( FirstVNF_RAM,MRS ),( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) ,CS ) ,( CS / CS ) )", "obj1": 0.281496062992126, "obj2": 0.5438869770315833}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( ( MDR * PN ) + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + RRSe ),( MLU + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6377952755905512, "obj2": 0.19016851663018514}, {"determining": "( ACS - ( Max( FirstVNF_CPU,Max( ( ( RRS + ( BR * MDR ) ) + ( DDR * ( Const / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) - ( Min( DDR ,ARS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( RRSe / Min( RRSe ,MUM ) ) ) - Min( CS ,( DS - ( Min( Min( Min( ( RMSe + MUM ) ,Max( CS,RMSe ) ) ,RCSe ) ,RCSe ) * RMSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.587235849037345}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( ( AMS / Const ) * ( CRS - ( ( ( ( ( PN * ARS ) + Max( ( MRS - RRS ),( FirstVNF_CPU_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * Min( ( CS / ( ( MUR / Min( MLU ,MUR ) ) - ( MUM - ( MUR + CS ) ) ) ) ,DS ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09968821160072751}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( Max( MDR,DDR ),BR ) ),FirstVNF_RAM ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( MUC / ( RMSe + RMSe ) ) + Max( RRSe,( CS - CS ) ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5722748113253374}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ( ( FirstVNF_CPU_Server * PN ) - MDR ) ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8452089442672981}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + MDR ) + ( Max( ( PN * FirstVNF_Mem ),Min( PN ,RRS ) ) / FirstVNF_Mem_Server ) ) * PN ) - MDR ) * Min( ACS ,CRS ) ) )", "choosing": "( ( ( Max( CS,( Max( Min( RMSe ,DS ),RCSe ) - Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( ( MUR + ( ( MUR * ( RMSe / MUC ) ) / MUR ) ) - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.468503937007874, "obj2": 0.32392348563600104}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Min( ( Max( ( ( CRS + PN ) - ( ( AMS * FirstVNF_Mem_Server ) / BR ) ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ,( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / RRSe ) / RCSe ) - ( Max( ( Max( MUM,( ( RCSe - ( MUR - MUC ) ) + Max( Max( MUR,MUM ),Min( MUM ,DS ) ) ) ) - DS ),MLU ) / MUR ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5095963641934865}, {"determining": "( Max( Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + PN ) ) ),Max( RRS,MDR ) ) - CRS )", "choosing": "Min( ( ( CS - ( DS - Max( ( CS / CS ),Max( RMSe,DS ) ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS * CS ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5660552381065543}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( Max( ( DDR + AMS ),ACS ) - ( AMS / DDR ) )", "choosing": "( Min( MUC ,DS ) / ( MUC * ( ( ( ( Min( CS ,MUM ) / RRSe ) * ( RMSe / Max( MLU,( MUR - RRSe ) ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * ( RRSe * RRSe ) ) ) ) * ( DS + MUC ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + ( ( DDR / BR ) / ( FirstVNF_Mem_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6993550290770556}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.27529307350107873}, {"determining": "( ( MRS - RRS ) * ( CRS * ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4035515755005584}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( FirstVNF_CPU * ( MRS - RRS ) ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - Max( ( ACS / ARS ),FirstVNF_CPU ) ) ) - CRS ) )", "choosing": "( ( ( MLU / RRSe ) / RCSe ) - ( ( CS - ( MUC / MLU ) ) + MUM ) )", "obj1": 0.9291338582677166, "obj2": 0.02473580874977438}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * PN ) - ( FirstVNF_Mem_Server * BR ) ) * Min( ACS ,( Max( MDR,( ARS - MDR ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Max( Min( MUC ,RCSe ),( DS * Max( Max( RRSe,CS ),Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * Max( ( MUR - ( RMSe - Min( RMSe ,RMSe ) ) ),MUC ) ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / ( ( RMSe / DS ) - CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.9094488188976378, "obj2": 0.034710558763289975}, {"determining": "Max( ( Max( ( ( ( AMS + Max( Min( FirstVNF_CPU ,Const ),PN ) ) + Max( ( FirstVNF_RAM_Server - RRS ),Max( Max( FirstVNF_RAM,MDR ),FirstVNF_RAM ) ) ) * PN ),MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "Min( ( ( DS * ( ( ( CS * DS ) + MUC ) * MUM ) ) - CS ) ,( RCSe - DS ) )", "obj1": 0.8169291338582677, "obj2": 0.06656223492153039}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( MUC + ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( RMSe + Min( MUC ,RMSe ) ) ) ) ) / ( MUC * ( ( ( RRSe * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( DS / MLU ) ) ) * DS ) ) )", "obj1": 0.4625984251968504, "obj2": 0.33920404524769315}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( Max( ( ( AMS + DDR ) + Max( BR,Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( MDR - ( ( Min( AMS ,FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - Max( RRS,Const ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Max( RCSe,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( Min( ( CS / ( Max( ( ( RCSe / RRSe ) * MUC ),RMSe ) * ( Max( DS,RRSe ) / CS ) ) ) ,DS ) ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5192369929826559}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) / ( DDR / FirstVNF_RAM ) ) ) + ( FirstVNF_RAM_Server / AMS ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( Min( ( MLU / MUR ) ,RRSe ) * ( MUM - Min( Min( RCSe ,Max( MUM,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.8090551181102362, "obj2": 0.06986634761349184}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - CRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.670191535766576}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.39173228346456695, "obj2": 0.4141367186729978}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( MDR * FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.2565351983637503}, {"determining": "( Max( PN,ACS ) * ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20876858120715863}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( FirstVNF_CPU - CRS ) ) + Max( ( CRS * ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / CS ) ) / ( Min( ( RMSe / MLU ) ,( Min( CS ,RRSe ) + MLU ) ) - ( ( RMSe / CS ) * ( MUM * Min( CS ,RCSe ) ) ) ) ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.08963033803873457}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Max( MRS,FirstVNF_CPU ) * PN ) - MDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( ( CS - ( ( ( MUR * ( DS / DS ) ) / Min( ( CS + MUR ) ,DS ) ) + DS ) ) * ( DS + MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.9803149606299213, "obj2": 0.011360721714645573}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18387703145621279}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - PN ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + PN ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5334645669291339, "obj2": 0.26556076769878545}, {"determining": "( ( BR / ( ( FirstVNF_CPU_Server * PN ) - MDR ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( CS,( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08241930695325018}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( DS / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / RRSe ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Max( MLU,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5526195640229706}, {"determining": "( ( ( ( ( ( ( ( ARS + FirstVNF_Mem ) + AMS ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) / MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + ( ( Max( RRS,RRS ) + ACS ) - PN ) ),ACS ) )", "choosing": "( Min( ( ( ( MUR + RCSe ) * MUC ) - DS ) ,( MUC - ( MLU / MLU ) ) ) - Min( CS ,Min( RMSe ,( ( ( ( MUR - Max( MUM,MUC ) ) - MUC ) / Min( ( ( MLU / RMSe ) / ( MUR - RMSe ) ) ,MLU ) ) - Min( Min( MUC ,Max( MUR,MUR ) ) ,( CS - Max( Min( RRSe ,CS ),MUR ) ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.4970670849387067}, {"determining": "( Max( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ),ACS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( DS,( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6165497288738377}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( Max( ( ( AMS + DDR ) + ACS ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( ( MUC - Max( ( RRSe + MUM ),MUR ) ),( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.502925514619397}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( BR * FirstVNF_Mem_Server ) ) ) - ( MDR + PN ) ) )", "choosing": "( ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + MUC ) ) ) ),( MLU + ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) + ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) )", "obj1": 0.7125984251968503, "obj2": 0.13360317991120949}, {"determining": "( Max( PN,ACS ) * ( ( ( MDR - ( ( ( MRS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) * ( MRS - Const ) ) - CRS ) )", "choosing": "( Min( ( CS * DS ) ,MUC ) - Min( CS ,Min( RMSe ,( MUM - ( RCSe / ( ( RRSe * ( DS + RRSe ) ) - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.5905511811023622, "obj2": 0.2286872526184404}, {"determining": "( ( FirstVNF_Mem * ACS ) * ( ( ( ( ( AMS + MDR ) + Max( Max( ( ARS - BR ),FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR * ( ( RCSe / RMSe ) + DS ) ) - ( ( Max( CS,( DS + ( Max( MLU,( RCSe * CS ) ) / Min( ( MUC / DS ) ,Max( MUM,RRSe ) ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) )", "obj1": 0.4862204724409449, "obj2": 0.3080714136305302}, {"determining": "Max( ( ( ARS + MRS ) - MDR ),( ( Const + RRS ) - Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( DS / RMSe ) ,( Min( ( MUC - CS ) ,( ( DS / ( Max( RRSe,CS ) / ( RRSe + RCSe ) ) ) * MUC ) ) / RCSe ) )", "obj1": 0.8582677165354331, "obj2": 0.054490509348446806}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( Max( Max( ( FirstVNF_CPU - RRS ),( DDR + RRS ) ),ACS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - ( Min( RRSe ,DS ) - RCSe ) ) ,( MUC - Max( DS,( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6165497288738377}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( ( Max( ( PN * FirstVNF_Mem ),Min( PN ,RRS ) ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( RRSe + MUM ) ,RMSe ) ) - ( ( MUC / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( ( MUC * MUC ) * ( Min( CS ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.515748031496063, "obj2": 0.2803751451349733}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( Max( ( FirstVNF_CPU * ( MRS - RRS ) ),BR ) / Const ) ,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( ( ( ( RMSe / CS ) * Min( CS ,MUC ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.027845447247642048}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45471034087191214}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( MLU * DS ) )", "obj1": 0.2854330708661417, "obj2": 0.5310393628971785}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - Min( ARS ,ACS ) ) / ARS ),ACS ) * ( ( ( ( ( AMS + MDR ) - Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS - ( MLU + ( RCSe / ( MUC / Min( Min( ( MUR * MUC ) ,CS ) ,Max( MUR,MUC ) ) ) ) ) ) - ( Min( MUM ,MUM ) / RRSe ) )", "obj1": 0.4744094488188976, "obj2": 0.3188475381440051}, {"determining": "( Min( ACS ,Max( CRS,FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - ( RMSe * Max( Max( ( ( MLU + MLU ) / ( DS / Max( RCSe,( CS * DS ) ) ) ),Max( MLU,MLU ) ),( MUM / ( Min( Max( RCSe,Max( MLU,MUM ) ) ,Min( RMSe ,CS ) ) / RMSe ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45471034087191214}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( MDR * FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( ( DS / MUC ) ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( ( RMSe / CS ) - MLU ) ) ) ) ) )", "obj1": 0.5551181102362205, "obj2": 0.2529225319271124}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "Max( Max( Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( ACS - ACS ) ),PN ) ),Min( FirstVNF_RAM ,( Min( AMS ,( MDR / ACS ) ) * RRS ) ) ),( ACS - ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Max( RMSe,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( RRSe + RRSe ) + CS ) ) * Max( ( DS / ( MUC * MLU ) ),RCSe ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.6928129105306182}, {"determining": "( ( ACS * PN ) * Max( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( ( DDR / BR ) ,( MRS + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ),( ( FirstVNF_CPU_Server + ( AMS * DDR ) ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RMSe - ( ( MUM / RRSe ) * ( RMSe / Max( RMSe,( MUC / ( RCSe + MLU ) ) ) ) ) ) ,Min( RRSe ,RCSe ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS * RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6744067499232205}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( BR * FirstVNF_Mem_Server ) ) ) - ( MDR + PN ) ) )", "choosing": "( ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + MUC ) ) ) ),( MLU + ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) + ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) )", "obj1": 0.7145669291338582, "obj2": 0.13250984584916162}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + ( FirstVNF_Mem * ( RRS - MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6948818897637795, "obj2": 0.14672956264251774}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( DDR,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,RCSe ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07973361365702437}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( MDR * FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( RRSe / ( CS / Max( MUC,Max( Max( RRSe,MUR ),DS ) ) ) ) / RRSe )", "obj1": 0.6062992125984252, "obj2": 0.21751058643825213}, {"determining": "( ACS - Max( Min( MRS ,( BR * CRS ) ),Max( Max( ( ACS - ( AMS - ( CRS * FirstVNF_CPU_Server ) ) ),FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,( MUC + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) + DS ) / Min( MUC ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe * Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.3858267716535433, "obj2": 0.42336564262077997}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( Const ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6939582661616142}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) / ( DDR / FirstVNF_RAM ) ) ) + ( FirstVNF_RAM_Server / AMS ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( MUC / ( RMSe + RMSe ) ) + Max( RRSe,( CS - CS ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6281154169410739}, {"determining": "( ( ACS * PN ) * Max( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7070882416122153}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,RRS ) ) * FirstVNF_CPU )", "choosing": "( ( RMSe + Max( Max( ( ( ( Min( MLU ,MLU ) - ( RMSe + RCSe ) ) + MUM ) * MUR ),( ( MUM + CS ) / ( CS - DS ) ) ),Max( Min( MUR ,( ( RRSe / RRSe ) * Max( ( MUC * MUC ),Min( DS ,DS ) ) ) ),MUM ) ) ) - Min( ( DS / MUR ) ,RCSe ) )", "obj1": 0.6929133858267716, "obj2": 0.15201711063489096}], "31": [{"determining": "Max( ( FirstVNF_CPU + RRS ),( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( MUC / ( ( ( DS - ( RCSe * MUM ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( ( RCSe + ( CS + MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( MDR * Max( ( CRS * Min( BR ,( FirstVNF_RAM / MDR ) ) ),ARS ) )", "choosing": "( ( ( CS / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + Max( ( RRSe / RMSe ),MUR ) ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( Max( RMSe,MUC ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) * Max( ( MRS - RRS ),Min( FirstVNF_Mem ,CRS ) ) ) ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "Min( ( ( Max( Min( MLU ,MUC ),( ( RCSe + ( MLU + ( RRSe * MUC ) ) ) / MUC ) ) * ( DS - Min( ( DS / RMSe ) ,CS ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ACS ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "( ( Const - RRS ) * ( ( ( ( ( Min( ARS ,Max( MRS,RRS ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) / FirstVNF_Mem_Server ) ) * PN ) - MDR ) + Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + RCSe ) / Max( RMSe,MUC ) )", "obj1": 0.4271653543307087, "obj2": 0.37502913464985554}, {"determining": "( ( ACS * PN ) * Max( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7070882416122153}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS * ( MRS - CRS ) ) )", "choosing": "( ( MUC * CS ) - Min( CS ,Max( ( ( RMSe / CS ) - ( ( RRSe - ( CS - ( DS / MLU ) ) ) / Max( CS,( CS / ( MUC - MUM ) ) ) ) ),RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44045757987027623}, {"determining": "( Min( Max( BR,ACS ) ,FirstVNF_RAM ) * Max( Max( FirstVNF_CPU_Server,MRS ),FirstVNF_Mem ) )", "choosing": "( ( Max( ( Max( ( MLU + ( CS + ( RRSe / MLU ) ) ),( ( DS * Min( MUC ,MUR ) ) + ( MUR - Max( MUR,RRSe ) ) ) ) / ( ( MUM + CS ) - ( CS - DS ) ) ),( ( RRSe * Max( RMSe,CS ) ) - Max( DS,( MLU * RMSe ) ) ) ) / MUR ) - ( MUM + MLU ) )", "obj1": 0.5669291338582677, "obj2": 0.24645365845099454}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( Max( ( ( AMS + DDR ) + Max( BR,Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( MDR - ( ( Min( AMS ,FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - Max( RRS,Const ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Max( RCSe,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( Min( ( CS / ( Max( ( ( RCSe / RRSe ) * MUC ),RMSe ) * ( Max( DS,RRSe ) / CS ) ) ) ,DS ) ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5192369929826559}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Max( MRS,FirstVNF_CPU ) * PN ) - MDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( ( CS - ( ( ( MUR * ( DS / DS ) ) / Min( ( CS + MUR ) ,DS ) ) + DS ) ) * ( DS + MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.7362204724409449, "obj2": 0.11559108507653294}, {"determining": "( Max( CRS,AMS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,( RMSe - ( MUM - Min( RCSe ,( MUC - Max( Min( RCSe ,RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.23038680998451702}, {"determining": "( Max( BR,ACS ) - Max( FirstVNF_Mem,Max( MRS,( Min( AMS ,ACS ) * ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ACS ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( Min( DS ,CS ) + ( CS + MUR ) ) / MUC ) - MLU ),DS ) / RRSe ) - RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48382707297104055}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "Max( ( Min( ( ( ( CRS / FirstVNF_Mem ) + DDR ) + ( RRS / FirstVNF_Mem_Server ) ) ,PN ) - MDR ),( ( ( FirstVNF_RAM + PN ) - ( ARS * DDR ) ) - ( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( ( RCSe + ( ( ( RRSe - CS ) - Max( ( ( RCSe - MUR ) - ( RRSe * Max( RRSe,RRSe ) ) ),DS ) ) + ( RRSe - Min( MLU ,Max( Max( RMSe,( RCSe / MUR ) ),MUC ) ) ) ) ) / ( MUC + DS ) )", "obj1": 0.7224409448818898, "obj2": 0.12462907952431486}, {"determining": "( MRS * ( ( CRS - ARS ) + CRS ) )", "choosing": "( ( MUC * ( ( CS / ( DS - Min( Min( ( DS - MUR ) ,( MUR / DS ) ) ,Min( MLU ,CS ) ) ) ) * DS ) ) / ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.20340108957553305}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( DDR * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.8681102362204725, "obj2": 0.0465274692864734}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( ARS - CRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6641288722745468}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( PN * Const ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( CS + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8937007874015748, "obj2": 0.03898169503390661}, {"determining": "( ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_RAM,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ) + ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / MLU ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,( MLU * CS ) ) ) ) ) * DS ) ) )", "obj1": 0.4625984251968504, "obj2": 0.3273570501556404}, {"determining": "Max( Max( ( Max( Max( FirstVNF_CPU_Server,RRS ),FirstVNF_Mem ) - Min( AMS ,AMS ) ),AMS ),( MRS - ( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( CS / ( RMSe / MUR ) ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / ( CS + ( RRSe / MLU ) ) ) ) / Max( ( MUC / Min( ( RMSe / DS ) ,CS ) ),Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6875050240567923}, {"determining": "( Max( PN,ACS ) * ( ( ( MDR - ( ( ( MRS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) * ( MRS - Const ) ) - CRS ) )", "choosing": "( Min( ( CS * DS ) ,MUC ) - Min( CS ,Min( RMSe ,( MUM - ( RCSe / ( ( RRSe * ( DS + RRSe ) ) - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.5905511811023622, "obj2": 0.2286872526184404}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.39173228346456695, "obj2": 0.4141367186729978}, {"determining": "( CRS - Max( Max( FirstVNF_RAM,MRS ),( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) ,CS ) ,( CS / CS ) )", "obj1": 0.281496062992126, "obj2": 0.5438869770315833}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( ( MDR * PN ) + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + RRSe ),( MLU + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6377952755905512, "obj2": 0.19016851663018514}, {"determining": "( ( MRS - RRS ) * ( CRS * ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4035515755005584}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( RMSe / CS ) * Min( CS ,MUC ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.6791338582677166, "obj2": 0.1584280831781363}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( ( ACS * PN ) * Max( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( ( DDR / BR ) ,( MRS + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ),( ( FirstVNF_CPU_Server + ( AMS * DDR ) ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RMSe - ( ( MUM / RRSe ) * ( RMSe / Max( RMSe,( MUC / ( RCSe + MLU ) ) ) ) ) ) ,Min( RRSe ,RCSe ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS * RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6744067499232205}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ( ( FirstVNF_CPU_Server * PN ) - MDR ) ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8452089442672981}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}, {"determining": "( ( FirstVNF_Mem * ACS ) * ( ( ( ( ( AMS + MDR ) + Max( Max( ( ARS - BR ),FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR * ( ( RCSe / RMSe ) + DS ) ) - ( ( Max( CS,( DS + ( Max( MLU,( RCSe * CS ) ) / Min( ( MUC / DS ) ,Max( MUM,RRSe ) ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) )", "obj1": 0.4862204724409449, "obj2": 0.3080714136305302}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) / ( DDR / FirstVNF_RAM ) ) ) + ( FirstVNF_RAM_Server / AMS ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( Min( ( MLU / MUR ) ,RRSe ) * ( MUM - Min( Min( RCSe ,Max( MUM,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.8090551181102362, "obj2": 0.06986634761349184}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( Max( Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + PN ) ) ),Max( RRS,MDR ) ) - CRS )", "choosing": "Min( ( ( CS - ( DS - Max( ( CS / CS ),Max( RMSe,DS ) ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS * CS ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5660552381065543}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + ( FirstVNF_Mem * ( RRS - MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6948818897637795, "obj2": 0.14672956264251774}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( Max( ( PN * FirstVNF_Mem ),Min( PN ,RRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.7952755905511811, "obj2": 0.07762424002251844}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( FirstVNF_Mem_Server / DDR ) * Max( ( MDR - RRS ),( MRS - RRS ) ) ) * FirstVNF_Mem_Server ) - MDR ) * Max( ( Const + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / ( Min( RRSe ,MUM ) / RRSe ) ) / ( DS / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / RRSe ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6496276061286167}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "Max( ( ( DDR / DDR ) - MDR ),( ( Max( MDR,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( RCSe / Max( CS,CS ) ) - Min( CS ,Min( RCSe ,( MUM - Min( MUC ,( MUC - Max( DS,MUR ) ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.3974304199983952}, {"determining": "( Max( ( DDR + AMS ),ACS ) - ( AMS / DDR ) )", "choosing": "( Min( MUC ,DS ) / ( MUC * ( ( ( ( Min( CS ,MUM ) / RRSe ) * ( RMSe / Max( MLU,( MUR - RRSe ) ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( ( RMSe / CS ) * ( RRSe * RRSe ) ) ) ) * ( DS + MUC ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4918998849810062}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + ( ( DDR / BR ) / ( FirstVNF_Mem_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6993550290770556}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13828188928376114}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "Max( Max( ( FirstVNF_CPU_Server / ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - ( Max( RRS,( ARS - RRS ) ) * Max( ( FirstVNF_Mem - ( DDR + CRS ) ),DDR ) ) ) ),AMS ),( MRS - ( PN - FirstVNF_CPU_Server ) ) )", "choosing": "( RRSe / ( MLU + ( Min( Min( MUC ,RRSe ) ,RCSe ) * DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.820481911352113}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( BR * FirstVNF_Mem_Server ) ) ) - ( MDR + PN ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.6889763779527559, "obj2": 0.15185898974841344}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + ( FirstVNF_Mem * ( RRS - ACS ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) + ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.8484251968503937, "obj2": 0.059973048404847094}, {"determining": "( Max( FirstVNF_Mem_Server,( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) / ( Const - ( MRS - Max( MDR,DDR ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6650843976777163}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS - CS ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5310393628971785}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - PN ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + PN ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5334645669291339, "obj2": 0.26556076769878545}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( ( Max( ( PN * FirstVNF_Mem ),Min( PN ,RRS ) ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( RRSe + MUM ) ,RMSe ) ) - ( ( MUC / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( ( MUC * MUC ) * ( Min( CS ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.29649607448274007}, {"determining": "Max( ( ( ( ( Max( ( ( MDR * PN ) - ( MRS - FirstVNF_RAM_Server ) ),RRS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( DS,MUR ) ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.3974304199983952}, {"determining": "( ACS - Max( Min( MRS ,( BR * CRS ) ),Max( Max( ( ACS - ( AMS - ( CRS * FirstVNF_CPU_Server ) ) ),FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,( MUC + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) + DS ) / Min( MUC ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe * Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.3858267716535433, "obj2": 0.42336564262077997}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( ( Max( ( PN * FirstVNF_Mem ),Min( PN ,RRS ) ) / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Min( ( RMSe / DS ) ,CS ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.5098425196850394, "obj2": 0.28651591332784965}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( DS / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / RRSe ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Max( MLU,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5526195640229706}, {"determining": "( ( ( ( ( ( ( ( ARS + FirstVNF_Mem ) + AMS ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) / MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + ( ( Max( RRS,RRS ) + ACS ) - PN ) ),ACS ) )", "choosing": "( Min( ( ( ( MUR + RCSe ) * MUC ) - DS ) ,( MUC - ( MLU / MLU ) ) ) - Min( CS ,Min( RMSe ,( ( ( ( MUR - Max( MUM,MUC ) ) - MUC ) / Min( ( ( MLU / RMSe ) / ( MUR - RMSe ) ) ,MLU ) ) - Min( Min( MUC ,Max( MUR,MUR ) ) ,( CS - Max( Min( RRSe ,CS ),MUR ) ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.4970670849387067}, {"determining": "( Max( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ),ACS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( DS,( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6165497288738377}, {"determining": "( Max( ( ( AMS + DDR ) + ACS ),ACS ) * ( ( Min( ( ( ( AMS + FirstVNF_RAM ) + Const ) * PN ) ,MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( DDR + ARS ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / ( ( MUC - Max( ( RRSe + MUM ),MUR ) ) + ( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( Min( RRSe ,MUM ) - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe + DS ) - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.2599375641654547}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.27529307350107873}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( Max( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ),ACS ) - FirstVNF_CPU )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ,( MUC - Max( DS,( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6165497288738377}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( ( MDR * PN ) + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.1698066363049591}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( FirstVNF_CPU - CRS ) ) + Max( ( CRS * ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / CS ) ) / ( Min( ( RMSe / MLU ) ,( Min( CS ,RRSe ) + MLU ) ) - ( ( RMSe / CS ) * ( MUM * Min( CS ,RCSe ) ) ) ) ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.08963033803873457}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( Max( MDR,DDR ),BR ) ),FirstVNF_RAM ) )", "choosing": "( ( RCSe / ( MUC + CS ) ) / RRSe )", "obj1": 0.23622047244094488, "obj2": 0.5899766422504878}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45471034087191214}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Max( MRS,FirstVNF_CPU ) * PN ) - MDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.9763779527559056, "obj2": 0.015276565544110946}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17300515614282092}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18387703145621279}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - Min( ARS ,ACS ) ) / ARS ),ACS ) * ( ( ( ( ( AMS + MDR ) - Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS - ( MLU + ( RCSe / ( MUC / Min( Min( ( MUR * MUC ) ,CS ) ,Max( MUR,MUC ) ) ) ) ) ) - ( Min( MUM ,MUM ) / RRSe ) )", "obj1": 0.4744094488188976, "obj2": 0.3188475381440051}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.45471034087191214}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ACS + FirstVNF_CPU_Server ) * PN ) - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( RMSe / CS ) - MLU ) * RRSe ) / RCSe ) - Min( CS ,Max( DS,CS ) ) )", "obj1": 0.9586614173228346, "obj2": 0.018622093938422665}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + MDR ) + ( Max( ( PN * FirstVNF_Mem ),Min( PN ,RRS ) ) / FirstVNF_Mem_Server ) ) * PN ) - MDR ) * Min( ACS ,CRS ) ) )", "choosing": "( ( ( Max( CS,( Max( Min( RMSe ,DS ),RCSe ) - Min( RCSe ,RMSe ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( ( MUR + ( ( MUR * ( RMSe / MUC ) ) / MUR ) ) - Min( RCSe ,( MUC - Max( ( RRSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.468503937007874, "obj2": 0.32392348563600104}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( ( Max( ( PN * FirstVNF_Mem ),Min( PN ,RRS ) ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( RRSe + MUM ) ,RMSe ) ) - ( ( MUC / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( ( MUC * MUC ) * ( Min( CS ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.515748031496063, "obj2": 0.2803751451349733}, {"determining": "Max( Max( Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( ACS - ACS ) ),PN ) ),Min( FirstVNF_RAM ,( Min( AMS ,( MDR / ACS ) ) * RRS ) ) ),( ACS - ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Max( RMSe,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( RRSe + RRSe ) + CS ) ) * Max( ( DS / ( MUC * MLU ) ),RCSe ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.6928129105306182}, {"determining": "( ( AMS / Const ) * ( CRS - ( ( ( ( ( PN * ARS ) + Max( ( MRS - RRS ),( FirstVNF_CPU_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * Min( ( CS / ( ( MUR / Min( MLU ,MUR ) ) - ( MUM - ( MUR + CS ) ) ) ) ,DS ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09968821160072751}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18387703145621279}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "Max( ( Max( ( ( ( AMS + Max( Min( FirstVNF_CPU ,Const ),PN ) ) + Max( ( FirstVNF_RAM_Server - RRS ),Max( Max( FirstVNF_RAM,MDR ),FirstVNF_RAM ) ) ) * PN ),MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "Min( ( ( DS * ( ( ( CS * DS ) + MUC ) * MUM ) ) - CS ) ,( RCSe - DS ) )", "obj1": 0.8169291338582677, "obj2": 0.06656223492153039}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( BR * FirstVNF_Mem_Server ) ) ) - ( MDR + PN ) ) )", "choosing": "( ( Min( ( DS / MUM ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + MUC ) ) ) ),( MLU + ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) + ( ( ( Min( RMSe ,( Max( Min( CS ,MUC ),( RRSe * MUC ) ) / CS ) ) - Min( MUM ,RCSe ) ) / MLU ) * DS ) )", "obj1": 0.7145669291338582, "obj2": 0.13250984584916162}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Max( RRS,FirstVNF_Mem_Server ) ) * FirstVNF_Mem ) - MDR ) * Max( MRS,FirstVNF_Mem ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( MUC,MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( MUR ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( RRSe + MUM ) ,RMSe ) ) - ( ( MUC / CS ) - MLU ) ) ) ,Max( ( ( MUC * MUC ) * ( Min( CS ,MUM ) / RRSe ) ),( MUM * ( Max( Max( MUR,RMSe ),DS ) + ( RCSe * ( MLU + RRSe ) ) ) ) ) ) ) )", "obj1": 0.5, "obj2": 0.2932713428113053}, {"determining": "( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( Const ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ) * ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6939582661616142}, {"determining": "( ACS - ( Max( FirstVNF_CPU,Max( ( ( RRS + ( BR * MDR ) ) + ( DDR * ( Const / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) - ( Min( DDR ,ARS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( RRSe / Min( RRSe ,MUM ) ) ) - Min( CS ,( DS - ( Min( Min( Min( ( RMSe + MUM ) ,Max( CS,RMSe ) ) ,RCSe ) ,RCSe ) * RMSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.587235849037345}, {"determining": "( ( FirstVNF_RAM + ( ACS * ( FirstVNF_Mem + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * PN ) * MDR ) )", "choosing": "( ( ( ( MUM + ( RMSe + MLU ) ) * ( DS / Min( MUC ,Max( ( Max( RRSe,DS ) + MUC ),MUR ) ) ) ) + ( MUC - Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( RCSe - MUR ) * ( Min( RRSe ,MUR ) / RRSe ) ) / ( ( ( ( MUM * CS ) * ( CS * MLU ) ) * RCSe ) - ( RCSe * MUR ) ) ) * DS ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20876858120715863}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "Min( ( DS / RMSe ) ,( DS / RCSe ) )", "obj1": 0.9665354330708661, "obj2": 0.0170342121841372}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( Max( MDR,DDR ),BR ) ),FirstVNF_RAM ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( MUC / ( RMSe + RMSe ) ) + Max( RRSe,( CS - CS ) ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5722748113253374}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - MDR ) - Min( ACS ,( DDR * FirstVNF_Mem ) ) ) - Min( MDR ,MRS ) ) * ( Max( Min( FirstVNF_CPU ,Const ),ARS ) * AMS ) )", "choosing": "( ( ( RCSe * Min( DS ,MUR ) ) + DS ) / ( MUC * ( ( ( ( RMSe * Max( Min( MUR ,MUM ),( DS / RCSe ) ) ) * RCSe ) / MLU ) * DS ) ) )", "obj1": 0.8641732283464567, "obj2": 0.04840264463739185}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( RCSe * ( MLU + RRSe ) ) ) ),( MLU * ( Min( RRSe ,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.2716191057264927}, {"determining": "( ( PN * ACS ) * Max( ( CRS * ( Min( FirstVNF_Mem ,AMS ) * ( ARS * ARS ) ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUC * ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) ) + DS ) / ( MUC * RCSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7070882416122153}], "32": [{"determining": "Max( ( FirstVNF_CPU + RRS ),( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( MUC / ( ( ( DS - ( RCSe * MUM ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( ( RCSe + ( CS + MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,( ( ( BR * Min( FirstVNF_RAM_Server ,AMS ) ) + FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ),( MRS * MDR ) ) )", "choosing": "( ( ( Min( MUM ,MUM ) / RRSe ) / RCSe ) - Min( CS ,( ( ( ( MUR + RRSe ) - Min( MLU ,Min( ( CS - MUC ) ,MUC ) ) ) * ( CS + MUM ) ) / Min( ( ( MUM + ( DS / DS ) ) * DS ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR * Max( ( CRS * Min( BR ,( FirstVNF_RAM / MDR ) ) ),ARS ) )", "choosing": "( ( ( CS / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + Max( ( RRSe / RMSe ),MUR ) ) ) ) / ( MUC * ( ( CS / ( DS - Min( Min( Max( RMSe,MUC ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Max( FirstVNF_Mem_Server,ACS ) ) ,ACS ) - ACS ) + CRS ),AMS ) ),( MRS - ( ACS + PN ) ) )", "choosing": "( ( RCSe / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( MLU + DS ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( MUC + MUC ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( ( FirstVNF_RAM + ( ACS * ( FirstVNF_Mem + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * PN ) * MDR ) )", "choosing": "( ( ( ( MUM + ( RMSe + MLU ) ) * ( DS / Min( MUC ,Max( ( Max( RRSe,DS ) + MUC ),MUR ) ) ) ) + ( MUC - Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( RCSe - MUR ) * ( Min( RRSe ,MUR ) / RRSe ) ) / ( ( ( ( MUM * CS ) * ( CS * MLU ) ) * RCSe ) - ( RCSe * MUR ) ) ) * DS ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20876858120715863}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "( Min( Max( BR,ACS ) ,FirstVNF_RAM ) * Max( Max( FirstVNF_CPU_Server,MRS ),FirstVNF_Mem ) )", "choosing": "( ( Max( ( Max( ( MLU + ( CS + ( RRSe / MLU ) ) ),( ( DS * Min( MUC ,MUR ) ) + ( MUR - Max( MUR,RRSe ) ) ) ) / ( ( MUM + CS ) - ( CS - DS ) ) ),( ( RRSe * Max( RMSe,CS ) ) - Max( DS,( MLU * RMSe ) ) ) ) / MUR ) - ( MUM + MLU ) )", "obj1": 0.5669291338582677, "obj2": 0.24645365845099454}, {"determining": "( ( AMS + FirstVNF_CPU_Server ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) * PN ) * MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( RMSe / CS ) * Min( CS ,MUC ) ) * ( DS / MUR ) ) + DS ) / ( Min( RRSe ,RRSe ) * ( ( ( ( Min( MUM ,RRSe ) / RRSe ) * ( DS / RMSe ) ) - ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5905511811023622, "obj2": 0.2249516499920966}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ( ( FirstVNF_CPU_Server * PN ) - MDR ) ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7070882416122153}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS * ( MRS - CRS ) ) )", "choosing": "( ( MUC * CS ) - Min( CS ,Max( ( ( RMSe / CS ) - ( ( RRSe - ( CS - ( DS / MLU ) ) ) / Max( CS,( CS / ( MUC - MUM ) ) ) ) ),RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44045757987027623}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Max( MRS,FirstVNF_CPU ) * PN ) - MDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( ( CS - ( ( ( MUR * ( DS / DS ) ) / Min( ( CS + MUR ) ,DS ) ) + DS ) ) * ( DS + MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.7362204724409449, "obj2": 0.11559108507653294}, {"determining": "( ( Const - RRS ) * ( ( ( ( ( Min( ARS ,Max( MRS,RRS ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) / FirstVNF_Mem_Server ) ) * PN ) - MDR ) + Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + RCSe ) / Max( RMSe,MUC ) )", "obj1": 0.4271653543307087, "obj2": 0.37502913464985554}, {"determining": "Max( Max( ( FirstVNF_CPU_Server / ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - ( Max( RRS,( ARS - RRS ) ) * Max( ( FirstVNF_Mem - ( DDR + CRS ) ),DDR ) ) ) ),AMS ),( MRS - ( PN - FirstVNF_CPU_Server ) ) )", "choosing": "( RRSe / ( MLU + ( Min( Min( MUC ,RRSe ) ,RCSe ) * DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.820481911352113}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS - CS ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5310393628971785}, {"determining": "( ( MRS - RRS ) * ( CRS * ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3932881842593813}, {"determining": "( MRS * ( ( CRS - ARS ) + CRS ) )", "choosing": "( ( MUC * ( ( CS / ( DS - Min( Min( ( DS - MUR ) ,( MUR / DS ) ) ,Min( MLU ,CS ) ) ) ) * DS ) ) / ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.20340108957553305}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "( Max( PN,Const ) * ( CRS - ( ( ( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + FirstVNF_RAM ) + Max( Min( FirstVNF_Mem ,MDR ),( MRS - MRS ) ) ) * PN ) - MDR ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),( CRS / MDR ) ) ) ) )", "choosing": "( Min( ( Min( ( RMSe / DS ) ,RMSe ) / ( DS * CS ) ) ,Max( RCSe,MUR ) ) + ( Max( MUM,Min( RCSe ,Max( RCSe,RRSe ) ) ) * Min( MLU ,RCSe ) ) )", "obj1": 0.5492125984251969, "obj2": 0.2561151924652883}, {"determining": "Max( ( Min( ( ( ( CRS / FirstVNF_Mem ) + DDR ) + ( RRS / FirstVNF_Mem_Server ) ) ,PN ) - MDR ),( ( ( FirstVNF_RAM + PN ) - ( ARS * DDR ) ) - ( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( ( RCSe + ( ( ( RRSe - CS ) - Max( ( ( RCSe - MUR ) - ( RRSe * Max( RRSe,RRSe ) ) ),DS ) ) + ( RRSe - Min( MLU ,Max( Max( RMSe,( RCSe / MUR ) ),MUC ) ) ) ) ) / ( MUC + DS ) )", "obj1": 0.7224409448818898, "obj2": 0.12462907952431486}, {"determining": "( Max( ( ( AMS + DDR ) + Max( BR,Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.508097617326823}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + ( FirstVNF_Mem * ( RRS - ACS ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) + ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.8484251968503937, "obj2": 0.059973048404847094}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( PN * Const ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( CS + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8937007874015748, "obj2": 0.03898169503390661}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( CRS - Max( Max( FirstVNF_RAM,MRS ),( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) ,CS ) ,( CS / CS ) )", "obj1": 0.281496062992126, "obj2": 0.5438869770315833}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + ( ( DDR / BR ) / ( FirstVNF_Mem_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6297211078114824}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( RRS * ( RRS - RRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) * PN ) - Const ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + CRS ) )", "choosing": "( ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( ( MUR + CS ) * ( MLU + RRSe ) ) ) ),( MLU * ( Max( RRSe,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.9114173228346457, "obj2": 0.03365126120547858}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13828188928376114}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( ( ( ( ( ( ( ( ARS + FirstVNF_Mem ) + AMS ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) / MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + ( ( Max( RRS,RRS ) + ACS ) - PN ) ),ACS ) )", "choosing": "( Min( ( ( ( MUR + RCSe ) * MUC ) - DS ) ,( MUC - ( MLU / MLU ) ) ) - Min( CS ,Min( RMSe ,( ( ( ( MUR - Max( MUM,MUC ) ) - MUC ) / Min( ( ( MLU / RMSe ) / ( MUR - RMSe ) ) ,MLU ) ) - Min( Min( MUC ,Max( MUR,MUR ) ) ,( CS - Max( Min( RRSe ,CS ),MUR ) ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.4970670849387067}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( ACS,( Const / DDR ) ) )", "choosing": "Min( Min( CS ,( ( RRSe - MLU ) - ( CS - MLU ) ) ) ,( DS / ( CS + Max( RRSe,( CS - CS ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.45236257421813264}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( Max( MDR,DDR ),BR ) ),Max( RRS,( ACS * PN ) ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( CS + Max( ( ( DS / DS ) / RRSe ),( CS - CS ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6151510913013347}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) / ( DDR / FirstVNF_RAM ) ) ) + ( FirstVNF_RAM_Server / AMS ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( Min( ( MLU / MUR ) ,RRSe ) * ( MUM - Min( Min( RCSe ,Max( MUM,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.8090551181102362, "obj2": 0.06986634761349184}, {"determining": "( PN - ( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( MUR * ( ( RCSe / RMSe ) - Max( DS,MUM ) ) ) ) + DS ) / ( MUC * ( ( ( ( ( Min( DS ,MUM ) + MUM ) / RRSe ) * Max( DS,( CS + ( RRSe / MLU ) ) ) ) / ( ( MUC / ( ( RMSe / DS ) / CS ) ) - Max( MUR,RCSe ) ) ) * DS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6084806348126973}, {"determining": "( Max( FirstVNF_Mem_Server,( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) / ( Const - ( MRS - Max( MDR,DDR ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6650843976777163}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ( ( FirstVNF_CPU_Server * PN ) - MDR ) ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8452089442672981}, {"determining": "Max( ( Max( ( ( ( AMS + Max( Min( FirstVNF_CPU ,Const ),PN ) ) + Max( ( FirstVNF_RAM_Server - RRS ),Max( Max( FirstVNF_RAM,MDR ),FirstVNF_RAM ) ) ) * PN ),MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "Min( ( ( DS * ( ( ( CS * DS ) + MUC ) * MUM ) ) - CS ) ,( RCSe - DS ) )", "obj1": 0.8169291338582677, "obj2": 0.06656223492153039}, {"determining": "( ( AMS * Max( PN,FirstVNF_RAM_Server ) ) * ( ( ( ( ( MRS * RRS ) - Max( AMS,AMS ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( MUR + ( RRSe / CS ) ) * DS ) ) )", "obj1": 0.4566929133858268, "obj2": 0.33038202407275635}, {"determining": "( Max( ( ( AMS + DDR ) + Max( BR,Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( MDR - ( ( Min( AMS ,FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - Max( RRS,Const ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Max( RCSe,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( Min( ( CS / ( Max( ( ( RCSe / RRSe ) * MUC ),RMSe ) * ( Max( DS,RRSe ) / CS ) ) ) ,DS ) ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5192369929826559}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( Max( FirstVNF_CPU_Server,CRS ) - Max( FirstVNF_RAM,( DDR + Min( RRS ,( RRS / FirstVNF_CPU_Server ) ) ) ) ) * ( Max( RRS,Min( Max( MRS,Min( FirstVNF_CPU ,AMS ) ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "Min( ( ( ( MLU - ( MUR * ( MUC * RMSe ) ) ) - ( DS / MUR ) ) / MUM ) ,( ( CS * ( Min( Max( Min( ( MLU * MUR ) ,CS ),Max( MUR,DS ) ) ,MLU ) * MLU ) ) - CS ) )", "obj1": 0.8622047244094488, "obj2": 0.05587562846371622}, {"determining": "( ( ( ( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( FirstVNF_Mem / ( MDR * FirstVNF_Mem_Server ) ) ) - CRS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUC ) / RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.9901574803149606, "obj2": 0.0037500484909091837}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( DDR * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.8681102362204725, "obj2": 0.0465274692864734}, {"determining": "( Max( PN,ACS ) * FirstVNF_RAM_Server )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( ( MUC * RRSe ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1594488188976378, "obj2": 0.680553654679735}, {"determining": "( MRS * ( ( CRS - ARS ) + CRS ) )", "choosing": "( ( MUC * ( ( CS / ( DS - Min( Min( ( DS - MUR ) ,( MUR / DS ) ) ,Min( MLU ,CS ) ) ) ) * DS ) ) / ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.03187538035742938}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / MLU ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,( MLU * CS ) ) ) ) ) * DS ) ) )", "obj1": 0.6377952755905512, "obj2": 0.18868896722581385}, {"determining": "( Max( BR,ACS ) - Max( FirstVNF_Mem,Max( MRS,( Min( AMS ,ACS ) * ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ACS ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( Min( DS ,CS ) + ( CS + MUR ) ) / MUC ) - MLU ),DS ) / RRSe ) - RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48382707297104055}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( ( ACS * PN ) * Max( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,( MRS - ( ACS * PN ) ) ) ) * ( ARS * ARS ) ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( CS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6735751079918327}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( Max( MDR,DDR ),BR ) ),FirstVNF_RAM ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( MUC / ( RMSe + RMSe ) ) + Max( RRSe,( CS - CS ) ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5722748113253374}, {"determining": "( Max( ( ( AMS + DDR ) + ACS ),ACS ) * ( ( Min( ( ( ( AMS + FirstVNF_RAM ) + Const ) * PN ) ,MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( DDR + ARS ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / ( ( MUC - Max( ( RRSe + MUM ),MUR ) ) + ( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( Min( RRSe ,MUM ) - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe + DS ) - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.2599375641654547}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Min( RCSe ,RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.23038680998451702}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.15551181102362205, "obj2": 0.6898718200822302}, {"determining": "( Max( PN,ACS ) * ( ( Min( ( ( ( AMS + FirstVNF_RAM ) + BR ) * ( MRS - ( RRS - PN ) ) ) ,MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) / Min( ( RMSe / MUM ) ,CS ) ) - Max( MUC,MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( MUR ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( RMSe + MUM ) ,RMSe ) ) - ( ( MUC / CS ) - MLU ) ) ) ,Max( ( ( MUC * MUC ) * ( Min( CS ,MUM ) / RRSe ) ),( MUM * ( Max( Max( MUR,RMSe ),DS ) + ( RCSe * ( MLU + RRSe ) ) ) ) ) ) ) )", "obj1": 0.655511811023622, "obj2": 0.17813828540254784}, {"determining": "( ACS - Max( Min( MRS ,( BR * CRS ) ),Max( Max( ( ACS - ( AMS - ( CRS * FirstVNF_CPU_Server ) ) ),FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,( MUC + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) + DS ) / Min( MUC ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe * Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.3858267716535433, "obj2": 0.42336564262077997}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( Max( ( PN * FirstVNF_Mem ),Min( PN ,RRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.7952755905511811, "obj2": 0.07762424002251844}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18315043999061625}, {"determining": "( Max( ( ( AMS + DDR ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - FirstVNF_Mem_Server ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( DDR - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( ( RMSe - RRSe ) + ( RCSe - Min( MLU ,RCSe ) ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,( MUR * MUR ) ) ,( DS - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5175546590534066}, {"determining": "( FirstVNF_RAM * ( ( ( PN - MDR ) * Max( MRS,FirstVNF_Mem ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( MUC,MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( MUR ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( RRSe + MUM ) ,RMSe ) ) - ( ( MUC / CS ) - MLU ) ) ) ,Max( ( ( MUC * MUC ) * ( Min( CS ,MUM ) / RRSe ) ),( MUM * ( Max( Max( MUR,RMSe ),DS ) + ( RCSe * ( RRSe + RRSe ) ) ) ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08246743347815157}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( DS / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / RRSe ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Max( MLU,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5526195640229706}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( PN * Const ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( CS + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8976377952755905, "obj2": 0.03765633777626772}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( ( AMS / Const ) * ( CRS - ( ( ( ( ( PN * ARS ) + Max( ( MRS - RRS ),( FirstVNF_CPU_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * Min( ( CS / ( ( MUR / Min( MLU ,MUR ) ) - ( MUM - ( MUR + CS ) ) ) ) ,DS ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09968821160072751}, {"determining": "( ( ACS * PN ) * Max( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( ( DDR / BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6594364064130998}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( Max( ( PN * FirstVNF_Mem ),( MDR * Const ) ) + Max( ( MRS - RRS ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( DS / ( RMSe - MLU ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( Min( RCSe ,( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) ) - MUM ) ) ) )", "obj1": 0.797244094488189, "obj2": 0.0765755722149357}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17300515614282086}, {"determining": "( Max( Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + PN ) ) ),Max( RRS,MDR ) ) - CRS )", "choosing": "Min( ( ( CS - ( DS - Max( ( CS / CS ),Max( RMSe,DS ) ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS * CS ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5660552381065543}, {"determining": "( ( FirstVNF_Mem * ACS ) * ( ( ( ( ( AMS + MDR ) + Max( Max( ( ARS - BR ),FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR * ( ( RCSe / RMSe ) + DS ) ) - ( ( Max( CS,( DS + ( Max( MLU,( RCSe * CS ) ) / Min( ( MUC / DS ) ,Max( MUM,RRSe ) ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) )", "obj1": 0.4862204724409449, "obj2": 0.3080714136305302}, {"determining": "Max( ( MDR + ( ACS * Max( PN,RRS ) ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * RMSe ) + DS ) / ( MUC * ( ( ( ( CS * ( ( DS * MUR ) * MUM ) ) * Min( DS ,RMSe ) ) / Min( Min( MUR ,RRSe ) ,Min( MLU ,DS ) ) ) * DS ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6615270758457085}, {"determining": "( Max( CRS,AMS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,( RMSe - ( MUM - Min( RCSe ,( MUC - Max( Min( RCSe ,RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.23038680998451702}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "( FirstVNF_Mem - Max( ( BR / FirstVNF_RAM_Server ),Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,( MUC + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RCSe ) ) ) ) + DS ) / Min( MUC ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe * Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / CS ) ) ) ) ) * DS ) ) )", "obj1": 0.49015748031496065, "obj2": 0.3038265225429819}, {"determining": "( Max( PN,ACS ) * ( Max( ( ( ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( CRS ,MDR ) ) ) * PN ) - MDR ),Max( ( Const + RRS ),( Min( ( FirstVNF_CPU_Server + MRS ) ,RRS ) + ( AMS + FirstVNF_CPU_Server ) ) ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( Max( ( Min( RRSe ,Min( RCSe ,MUM ) ) / RRSe ),( DS / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / RRSe ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,DS ) ) ) ) ) * DS ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6411444684238917}, {"determining": "( ACS - Max( AMS,( ( MDR / FirstVNF_CPU ) * ACS ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( ( RMSe * ( RRSe - RCSe ) ) + Max( DS,( CS - CS ) ) ) ) )", "obj1": 0.25, "obj2": 0.5777777340941942}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( Min( MRS ,MRS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RMSe + MUM ),MUR ) ) ) ) ) ) )", "obj1": 0.39173228346456695, "obj2": 0.4141367186729978}, {"determining": "( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_RAM,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( MDR,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( RCSe / ( Max( RCSe,Max( RCSe,( MLU * CS ) ) ) + CS ) ) / RRSe )", "obj1": 0.5255905511811023, "obj2": 0.272533228161354}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4625984251968504, "obj2": 0.32732709025109724}, {"determining": "( Max( ( ( AMS + DDR ) * Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + AMS ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,( DS / MUR ) ) ) ) ) / Max( ( ( RMSe / CS ) + RRSe ),( DS + Max( ( ( ( MLU + MUR ) / MUR ) * MUC ),MLU ) ) ) ) - Min( CS ,Min( ( DS + MUR ) ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6712598425196851, "obj2": 0.16680474058460296}, {"determining": "( ( MRS - RRS ) * ( CRS * ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MRS ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,Min( RCSe ,RMSe ) ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4035515755005584}, {"determining": "( ACS - ( Max( FirstVNF_CPU,Max( ( ( RRS + ( BR * MDR ) ) + ( DDR * ( Const / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) - ( Min( DDR ,ARS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( RRSe / Min( RRSe ,MUM ) ) ) - Min( CS ,( DS - ( Min( Min( Min( ( RMSe + MUM ) ,Max( CS,RMSe ) ) ,RCSe ) ,RCSe ) * RMSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.587235849037345}, {"determining": "( Max( ( ( Min( Max( BR,ACS ) ,FirstVNF_RAM ) * Max( Max( FirstVNF_CPU_Server,MRS ),FirstVNF_Mem ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MLU + MUM ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.4914792631290989}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( FirstVNF_CPU - CRS ) ) + Max( ( CRS * ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / CS ) ) / ( Min( ( RMSe / MLU ) ,( Min( CS ,RRSe ) + MLU ) ) - ( ( RMSe / CS ) * ( MUM * Min( CS ,RCSe ) ) ) ) ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.08963033803873457}, {"determining": "Max( ( ( ( ( Max( ( ( MDR * PN ) - ( MRS - FirstVNF_RAM_Server ) ),RRS ) + DDR ) + Max( RRS,FirstVNF_Mem_Server ) ) * PN ) - MDR ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( DS,MUR ) ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.3974304199983952}, {"determining": "( ( ( ACS * PN ) + FirstVNF_Mem_Server ) * ( ( ( ( Max( MRS,FirstVNF_CPU ) * PN ) - MDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( CS + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.9763779527559056, "obj2": 0.012572699547289807}, {"determining": "( ( ACS * PN ) * Max( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7070882416122153}, {"determining": "( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) * ( ( ( ( ( ( PN + FirstVNF_RAM ) + ( ( DDR / BR ) / ( FirstVNF_Mem_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( RMSe * DS ) ) + ( ( DS / DS ) - RRSe ) ) * MUC ) + DS ) / ( MUC * ( Max( ( Max( DS,DS ) + MUR ),RMSe ) * DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6993550290770556}, {"determining": "( ACS - Max( Min( MRS ,( BR * CRS ) ),( ( PN * ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) * Max( ( MRS - RRS ),Min( FirstVNF_Mem ,CRS ) ) ) ) - MDR ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( MUC ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe * Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * ( RRSe * MUC ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6424899925516853}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( RRS * ( RRS - RRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) + CRS ) )", "choosing": "( ( MUC * ( ( CS / ( DS - Min( Min( ( DS - MUR ) ,( MUR / DS ) ) ,( ( MLU / RRSe ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) / ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.03187538035742938}], "33": [{"determining": "Max( ( FirstVNF_CPU + RRS ),( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( MUC / ( ( ( DS - ( RCSe * MUM ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( ( RCSe + ( CS + MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( ( DDR / ( ( FirstVNF_CPU / ( Min( BR ,( FirstVNF_RAM_Server + RRS ) ) + CRS ) ) - MRS ) ) - ACS )", "choosing": "Min( ( CS - ( CS * ( CS - Max( Min( RCSe ,RMSe ),RCSe ) ) ) ) ,( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,( ( ( BR * Min( FirstVNF_RAM_Server ,AMS ) ) + FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ),( MRS * MDR ) ) )", "choosing": "( ( ( Min( MUM ,MUM ) / RRSe ) / RCSe ) - Min( CS ,( ( ( ( MUR + RRSe ) - Min( MLU ,Min( ( CS - MUC ) ,MUC ) ) ) * ( CS + MUM ) ) / Min( ( ( MUM + ( DS / DS ) ) * DS ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ACS ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13828188928376114}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( RCSe * Min( ( MUM + RRSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.1634033906167332}, {"determining": "( ( FirstVNF_RAM + ( ACS * ( FirstVNF_Mem + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * PN ) * MDR ) )", "choosing": "( ( ( ( MUM + ( RMSe + MLU ) ) * ( DS / Min( MUC ,Max( ( Max( RRSe,DS ) + MUC ),MUR ) ) ) ) + ( MUC - Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( RCSe - MUR ) * ( Min( RRSe ,MUR ) / RRSe ) ) / ( ( ( ( MUM * CS ) * ( CS * MLU ) ) * RCSe ) - ( RCSe * MUR ) ) ) * DS ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20876858120715863}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "( ( Const - RRS ) * ( ( ( ( ( Min( ARS ,Max( MRS,RRS ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) / FirstVNF_Mem_Server ) ) * PN ) - MDR ) + Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7070882416122153}, {"determining": "( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_RAM,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( MDR,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( RCSe / ( Max( RCSe,Max( RCSe,( MLU * CS ) ) ) + CS ) ) / RRSe )", "obj1": 0.5255905511811023, "obj2": 0.272533228161354}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ( ( DDR + PN ) / ( MRS - CRS ) ) - CRS ) ) ) ) * ( ( ( ( Min( ( AMS + FirstVNF_RAM ) ,Max( ( MRS - RRS ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,( ( ( ( Min( Min( RRSe ,MUM ) ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / ( CS * ( RMSe / DS ) ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.5610236220472441, "obj2": 0.24609021786114849}, {"determining": "Max( ( Min( ( ( ( CRS / FirstVNF_Mem ) + DDR ) + ( RRS / FirstVNF_Mem_Server ) ) ,PN ) - MDR ),( ( ( FirstVNF_RAM + PN ) - ( ARS * DDR ) ) - ( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( ( RCSe + ( ( ( RRSe - CS ) - Max( ( ( RCSe - MUR ) - ( RRSe * Max( RRSe,RRSe ) ) ),DS ) ) + ( RRSe - Min( MLU ,Max( Max( RMSe,( RCSe / MUR ) ),MUC ) ) ) ) ) / ( MUC + DS ) )", "obj1": 0.7224409448818898, "obj2": 0.12462907952431486}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS * ( MRS - CRS ) ) )", "choosing": "( ( MUC * CS ) - Min( CS ,Max( ( ( RMSe / CS ) - ( ( RRSe - ( CS - ( DS / MLU ) ) ) / Max( CS,( CS / ( MUC - MUM ) ) ) ) ),RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44045757987027623}, {"determining": "Max( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( DDR / FirstVNF_CPU ) ) ) * MRS ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( CS * ( DS - ( RMSe + MUC ) ) ) - CS ) ,( RCSe / DS ) )", "obj1": 0.5019685039370079, "obj2": 0.29083519183241036}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) * ( ARS * ( CRS * FirstVNF_CPU_Server ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( RMSe / CS ) * Min( CS ,MUC ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( MUR * Min( DS ,MUM ) ) ) * DS ) ) )", "obj1": 0.59251968503937, "obj2": 0.22342340565989885}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( RRS * ( RRS - RRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) + CRS ) )", "choosing": "( ( ( Min( RRSe ,( DS * MUR ) ) / Max( ( CS + Max( RRSe,( CS - CS ) ) ),MUR ) ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Max( ( CS / ( MUM - MUC ) ),CS ) ) ),RRSe ) ) )", "obj1": 0.9251968503937008, "obj2": 0.028422143888481098}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( ACS,( Const / DDR ) ) )", "choosing": "Min( Min( CS ,( ( RRSe - MLU ) - ( CS - MLU ) ) ) ,( DS / ( CS + Max( RRSe,( CS - CS ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.45236257421813264}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( Min( ARS ,Max( MRS,RRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) / Max( ( ( RMSe / CS ) + RRSe ),( MLU + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.19767727142575578}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "( ( MRS - ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,MRS ) )", "choosing": "( ( ( RRSe - MUM ) / Max( ( ( RMSe / RCSe ) + ( RCSe + DS ) ),( ( DS + ( MUC / ( ( CS * RRSe ) * DS ) ) ) + Max( ( MUC * ( ( DS + RCSe ) / MUR ) ),MLU ) ) ) ) - Max( Min( CS ,MLU ),MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.39365171170179203}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),ACS ) * ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4625984251968504, "obj2": 0.32732709025109724}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( ( ( ( FirstVNF_Mem_Server / DDR ) * Max( ( MDR - RRS ),Min( MDR ,CRS ) ) ) * FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),( DS + ( RCSe * ( DS / MUR ) ) ) ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS - CS ) ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3842321074436265}, {"determining": "( Max( BR,ACS ) - Max( FirstVNF_Mem,Max( MRS,( Min( AMS ,ACS ) * ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ACS ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( Min( DS ,CS ) + ( CS + MUR ) ) / MUC ) - MLU ),DS ) / RRSe ) - RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48382707297104055}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( RRS * ( RRS - RRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) * PN ) - Const ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + CRS ) )", "choosing": "( ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( ( MUR + CS ) * ( MLU + RRSe ) ) ) ),( MLU * ( Max( RRSe,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.9114173228346457, "obj2": 0.03365126120547858}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( CRS - Max( Max( FirstVNF_RAM,MRS ),( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) ,CS ) ,( CS / CS ) )", "obj1": 0.281496062992126, "obj2": 0.5438869770315833}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( FirstVNF_CPU - CRS ) ) + Max( ( CRS * ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / CS ) ) / ( Min( ( RMSe / MLU ) ,( Min( CS ,RRSe ) + MLU ) ) - ( ( RMSe / CS ) * ( MUM * Min( CS ,RCSe ) ) ) ) ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.08963033803873457}, {"determining": "( ACS - ( Max( FirstVNF_CPU,Max( ( ( RRS + ( BR * MDR ) ) + ( DDR * ( Const / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) - ( Min( DDR ,ARS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( RRSe / Min( RRSe ,MUM ) ) ) - Min( CS ,( DS - ( Min( Min( Min( ( RMSe + MUM ) ,Max( CS,RMSe ) ) ,RCSe ) ,RCSe ) * RMSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.587235849037345}, {"determining": "( ( ( ( ( ( ( ( ARS + FirstVNF_Mem ) + AMS ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) / MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + ( ( Max( RRS,RRS ) + ACS ) - PN ) ),ACS ) )", "choosing": "( Min( ( ( ( MUR + RCSe ) * MUC ) - DS ) ,( MUC - ( MLU / MLU ) ) ) - Min( CS ,Min( RMSe ,( ( ( ( MUR - Max( MUM,MUC ) ) - MUC ) / Min( ( ( MLU / RMSe ) / ( MUR - RMSe ) ) ,MLU ) ) - Min( Min( MUC ,Max( MUR,MUR ) ) ,( CS - Max( Min( RRSe ,CS ),MUR ) ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.4970670849387067}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( Max( CRS,AMS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.5787401574803149, "obj2": 0.2338822574929253}, {"determining": "( ( AMS / Const ) * ( CRS - ( ( ( ( ( PN * ARS ) + Max( ( MRS - RRS ),( FirstVNF_CPU_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) / ( MUC * Min( ( CS / ( ( MUR / Min( MLU ,MUR ) ) - ( MUM - ( MUR + CS ) ) ) ) ,DS ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09968821160072751}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ( ( FirstVNF_CPU_Server * PN ) - MDR ) ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8452089442672981}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_CPU_Server ) * Min( ACS ,( ( ( ( DDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ) - AMS ) * FirstVNF_Mem ) ) ) - CRS ) )", "choosing": "( Min( Max( MUM,MUC ) ,MLU ) / ( Min( MUM ,RCSe ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.04235727086380719}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / MLU ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,( MLU * CS ) ) ) ) ) * DS ) ) )", "obj1": 0.6377952755905512, "obj2": 0.18868896722581385}, {"determining": "( ( Const - RRS ) * ( ( ( ( ( Min( ARS ,Max( MRS,RRS ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) / FirstVNF_Mem_Server ) ) * PN ) - MDR ) + Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + RCSe ) / Max( RMSe,MUC ) )", "obj1": 0.4271653543307087, "obj2": 0.37502913464985554}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( Max( Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + PN ) ) ),Max( RRS,MDR ) ) - CRS )", "choosing": "Min( ( ( CS - ( DS - Max( ( CS / CS ),Max( RMSe,DS ) ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS * CS ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5660552381065543}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( DDR * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.8681102362204725, "obj2": 0.0465274692864734}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( ( CRS - ( ( ( ( RRS + FirstVNF_CPU_Server ) - MDR ) - ( ACS - FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem / ( MRS + Max( RRS,CRS ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUC ) / RCSe ) - ( ( ( ( ( RCSe + RMSe ) + Max( CS,Max( MUM,Min( RRSe ,MUR ) ) ) ) / RRSe ) * ( MUR - RCSe ) ) / ( ( MUC - Min( ( RMSe / DS ) ,MUR ) ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01876630724433797}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ( ( FirstVNF_CPU_Server * PN ) - MDR ) ) + CRS ),AMS ) ),( MRS - ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * Min( CS ,( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.14960629921259844, "obj2": 0.6861742304097324}, {"determining": "( Max( PN,Const ) * ( CRS - ( ( ( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + FirstVNF_RAM ) + Max( Min( FirstVNF_Mem ,MDR ),( MRS - MRS ) ) ) * PN ) - MDR ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),( CRS / MDR ) ) ) ) )", "choosing": "( Min( ( Min( ( RMSe / DS ) ,RMSe ) / ( DS * CS ) ) ,Max( RCSe,MUR ) ) + ( Max( MUM,Min( RCSe ,Max( RCSe,RRSe ) ) ) * Min( MLU ,RCSe ) ) )", "obj1": 0.5492125984251969, "obj2": 0.2561151924652883}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + ( ( DDR / BR ) / ( FirstVNF_Mem_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( CS + Max( ( ( DS / DS ) / RRSe ),( CS - CS ) ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6347490463159795}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( ( ( Max( MRS,Min( FirstVNF_Mem ,MRS ) ) + MDR ) - ( FirstVNF_CPU * ( BR / ( PN * BR ) ) ) ) - Max( Max( ACS,Max( Max( MDR,DDR ),BR ) ),( FirstVNF_Mem_Server * DDR ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( ( MLU * Min( Min( Max( ( ( RRSe * MLU ) - CS ),DS ) ,MUR ) ,( ( ( Min( MUR ,DS ) * RCSe ) + Max( ( RRSe * MUR ),RRSe ) ) - ( MUC - Max( CS,( RRSe * MUM ) ) ) ) ) ) * MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.6181098641056284}, {"determining": "Max( ( ACS / Max( CRS,RRS ) ),( MRS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RCSe / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * Max( Min( RCSe ,RMSe ),( MUR * Min( ( ( RMSe / RCSe ) * CS ) ,RMSe ) ) ) ) / MUC ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.820481911352113}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) / ( DDR / FirstVNF_RAM ) ) ) + ( FirstVNF_RAM_Server / AMS ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( Min( ( MLU / MUR ) ,RRSe ) * ( MUM - Min( Min( RCSe ,Max( MUM,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.8090551181102362, "obj2": 0.06986634761349184}, {"determining": "( Max( ( ( AMS + DDR ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - FirstVNF_Mem_Server ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( DDR - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5162830978727674}, {"determining": "( PN - ( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( MUR * ( ( RCSe / RMSe ) - Max( DS,MUM ) ) ) ) + DS ) / ( MUC * ( ( ( ( ( Min( DS ,MUM ) + MUM ) / RRSe ) * Max( DS,( CS + ( RRSe / MLU ) ) ) ) / ( ( MUC / ( ( RMSe / DS ) / CS ) ) - Max( MUR,RCSe ) ) ) * DS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6084806348126973}, {"determining": "( Max( PN,ACS ) * FirstVNF_RAM_Server )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( ( MUC * RRSe ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1594488188976378, "obj2": 0.680553654679735}, {"determining": "( Max( ( Max( DDR,( FirstVNF_CPU + Max( ( FirstVNF_RAM_Server + PN ),Min( ( ACS / RRS ) ,DDR ) ) ) ) + ACS ),ACS ) * ( ( ( ( ( ( AMS + CRS ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Min( RCSe ,( Min( ( RCSe + RMSe ) ,MUM ) / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5334645669291339, "obj2": 0.2701676074349236}, {"determining": "( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) * ( ( ( ( ( ( PN + FirstVNF_RAM ) + ( ( DDR / BR ) / ( FirstVNF_Mem_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( RMSe * DS ) ) + ( ( DS / DS ) - RRSe ) ) * MUC ) + DS ) / ( MUC * ( Max( ( Max( DS,DS ) + MUR ),RMSe ) * DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6993550290770556}, {"determining": "Max( ( Max( ( ( ( AMS + Max( Min( FirstVNF_CPU ,Const ),PN ) ) + Max( ( FirstVNF_RAM_Server - RRS ),Max( Max( FirstVNF_RAM,MDR ),FirstVNF_RAM ) ) ) * PN ),MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "Min( ( ( DS * ( ( ( CS * DS ) + MUC ) * MUM ) ) - CS ) ,( RCSe - DS ) )", "obj1": 0.8169291338582677, "obj2": 0.06656223492153039}, {"determining": "( ( AMS * Max( PN,FirstVNF_RAM_Server ) ) * ( ( ( ( ( MRS * RRS ) - Max( AMS,AMS ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( MUR + ( RRSe / CS ) ) * DS ) ) )", "obj1": 0.4566929133858268, "obj2": 0.33038202407275635}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( Max( ( ( AMS + DDR ) * Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + AMS ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,( DS / MUR ) ) ) ) ) / Max( ( ( RMSe / CS ) + RRSe ),( DS + Max( ( ( ( MLU + MUR ) / MUR ) * MUC ),MLU ) ) ) ) - Min( CS ,Min( ( DS + MUR ) ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6712598425196851, "obj2": 0.16680474058460296}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),RRS ) * ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( DS / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6969202981483741}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( RRS * ( RRS - RRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) + Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) ) )", "choosing": "( ( MUC * ( ( CS / ( DS - Min( Min( ( DS - MUR ) ,( MUR / DS ) ) ,( ( CS - DS ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) / ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.015240575819869748}, {"determining": "( MDR * Max( ( CRS * Min( BR ,( FirstVNF_RAM / MDR ) ) ),ARS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6512444639050498}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "( ACS - Max( Max( DDR,Max( FirstVNF_RAM,BR ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( Max( ( MLU - RRSe ),Max( MUM,DS ) ) ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17300515614282086}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Max( MRS,FirstVNF_CPU ) * PN ) - MDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( ( CS - ( ( ( MUR * ( DS / DS ) ) / Min( ( CS + MUR ) ,DS ) ) + DS ) ) * ( DS + MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.7362204724409449, "obj2": 0.11559108507653294}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS - CS ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5310393628971785}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( ( Max( MDR,( FirstVNF_CPU_Server - Const ) ) + ( Max( ARS,MRS ) + FirstVNF_Mem_Server ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( MUM,Max( CS,RMSe ) ) / Min( Max( MUR,RRSe ) ,RRSe ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( Min( ( RMSe / DS ) ,CS ) / MUC ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.734251968503937, "obj2": 0.1172135546817453}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( AMS + Const ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,( DS / MUR ) ) ) ) ) / Max( ( ( RMSe / CS ) + RRSe ),( MLU + Max( ( RMSe * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.08394355719163195}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( PN * Const ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( CS + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8976377952755905, "obj2": 0.03765633777626772}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( PN * Const ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( CS + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8937007874015748, "obj2": 0.03898169503390661}, {"determining": "( Max( ( ( AMS + DDR ) + Max( BR,Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.508097617326823}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}, {"determining": "( ( FirstVNF_Mem * ACS ) * ( ( ( ( ( AMS + MDR ) + Max( Max( ( ARS - BR ),FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR * ( ( RCSe / RMSe ) + DS ) ) - ( ( Max( CS,( DS + ( Max( MLU,( RCSe * CS ) ) / Min( ( MUC / DS ) ,Max( MUM,RRSe ) ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) )", "obj1": 0.4862204724409449, "obj2": 0.3080714136305302}, {"determining": "Max( ( MDR + ( ACS * Max( PN,RRS ) ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * RMSe ) + DS ) / ( MUC * ( ( ( ( CS * ( ( DS * MUR ) * MUM ) ) * Min( DS ,RMSe ) ) / Min( Min( MUR ,RRSe ) ,Min( MLU ,DS ) ) ) * DS ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6615270758457085}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) * ( ( ( ( ( ( FirstVNF_RAM_Server + DDR ) + Max( ( FirstVNF_CPU + BR ),Min( FirstVNF_RAM ,MDR ) ) ) * ( CRS / FirstVNF_Mem_Server ) ) - MDR ) * ( Max( RRS,Min( Max( Min( FirstVNF_CPU ,AMS ),CRS ) ,AMS ) ) * PN ) ) - CRS ) )", "choosing": "( ( ( ( ( DS / MLU ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( CS - ( MUC + MUR ) ) - MLU ) * DS ) ) )", "obj1": 0.8464566929133859, "obj2": 0.06343513128890024}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server * MDR ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( ( DS - Max( RCSe,Min( ( RRSe - RMSe ) ,MUC ) ) ) - ( ( MUC * ( Max( ( ( MUM / RMSe ) / MUM ),( MUR - CS ) ) + MUM ) ) - MLU ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4131093649238282}, {"determining": "( Max( ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( FirstVNF_RAM + AMS ) + Max( ( MRS * RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * ( ( Const - ( ( FirstVNF_Mem_Server * Min( CRS ,Const ) ) * PN ) ) / AMS ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * RMSe ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * MUC ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5158685862964082}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS - CS ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5310393628971785}, {"determining": "( ( ACS * PN ) * Max( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( ( DDR / BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6594364064130998}, {"determining": "( Max( FirstVNF_Mem_Server,( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) / ( Const - ( MRS - Max( MDR,DDR ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6650843976777163}, {"determining": "( FirstVNF_RAM * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( RMSe ,MUM ),RCSe ) - Min( RCSe ,RMSe ) ) + ( Min( ( ( Min( MUR ,( CS / ( DS - MUC ) ) ) * DS ) + CS ) ,CS ) - Max( MUC,MLU ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07993902547484133}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( Max( FirstVNF_CPU_Server,CRS ) - Max( FirstVNF_RAM,( DDR + Min( RRS ,( RRS / FirstVNF_CPU_Server ) ) ) ) ) * ( Max( RRS,Min( Max( MRS,Min( FirstVNF_CPU ,AMS ) ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "Min( ( ( ( MLU - ( MUR * ( MUC * RMSe ) ) ) - ( DS / MUR ) ) / MUM ) ,( ( CS * ( Min( Max( Min( ( MLU * MUR ) ,CS ),Max( MUR,DS ) ) ,MLU ) * MLU ) ) - CS ) )", "obj1": 0.8622047244094488, "obj2": 0.05587562846371622}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ( PN - AMS ) + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( Min( ( RCSe * ( DS / MUR ) ) ,DS ) / ( MUC * ( ( RRSe * DS ) * RRSe ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18303222874753225}, {"determining": "( Max( ( ( Const + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_Mem_Server ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( DS ,RMSe ) ) ) ) / Max( ( ( ( RRSe * ( ( CS - RRSe ) * MLU ) ) / CS ) + ( RRSe + DS ) ),( MLU + Max( ( ( ( MLU + CS ) / MUR ) * MUC ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( RRSe - MUR ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5086073321251161}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ( ( FirstVNF_CPU_Server * PN ) - MDR ) ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7070882416122153}, {"determining": "( Max( ( ( Min( Max( BR,ACS ) ,FirstVNF_RAM ) * Max( Max( FirstVNF_CPU_Server,MRS ),FirstVNF_Mem ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MLU + MUM ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.4914792631290989}, {"determining": "( FirstVNF_Mem - Max( ( BR / FirstVNF_RAM_Server ),Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,( MUC + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RCSe ) ) ) ) + DS ) / Min( MUC ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe * Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / CS ) ) ) ) ) * DS ) ) )", "obj1": 0.49015748031496065, "obj2": 0.3038265225429819}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( MUC + ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( RMSe + Min( MUC ,RMSe ) ) ) ) ) / ( MUC * ( ( ( RRSe * ( RMSe / ( CS - ( MUM / MUM ) ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( DS / MLU ) ) ) * DS ) ) )", "obj1": 0.9881889763779528, "obj2": 0.007357855172403456}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ,CS ) ,( ( Min( RCSe ,RMSe ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( ( ACS * PN ) * Max( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,( MRS - ( ACS * PN ) ) ) ) * ( ARS * ARS ) ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( CS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6735751079918327}, {"determining": "( ( AMS + FirstVNF_CPU_Server ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) * PN ) * MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( RMSe / CS ) * Min( CS ,MUC ) ) * ( DS / MUR ) ) + DS ) / ( Min( RRSe ,RRSe ) * ( ( ( ( Min( MUM ,RRSe ) / RRSe ) * ( DS / RMSe ) ) - ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5905511811023622, "obj2": 0.2249516499920966}], "34": [{"determining": "Max( ( FirstVNF_CPU + RRS ),( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( MUC / ( ( ( DS - ( RCSe * MUM ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( ( RCSe + ( CS + MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( ACS - Max( Min( ( ( FirstVNF_Mem_Server - BR ) * ACS ) ,AMS ),Max( AMS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUM ,( DS / ( MUC - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / ( ( FirstVNF_CPU / ( Min( BR ,( FirstVNF_RAM_Server + RRS ) ) + CRS ) ) - MRS ) ) - ACS )", "choosing": "Min( ( CS - ( CS * ( CS - Max( Min( RCSe ,RMSe ),RCSe ) ) ) ) ,( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ACS ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13828188928376114}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( RCSe * Min( ( MUM + RRSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.1634033906167332}, {"determining": "( ( FirstVNF_RAM + ( ACS * ( FirstVNF_Mem + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * PN ) * MDR ) )", "choosing": "( ( ( ( MUM + ( RMSe + MLU ) ) * ( DS / Min( MUC ,Max( ( Max( RRSe,DS ) + MUC ),MUR ) ) ) ) + ( MUC - Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( RCSe - MUR ) * ( Min( RRSe ,MUR ) / RRSe ) ) / ( ( ( ( MUM * CS ) * ( CS * MLU ) ) * RCSe ) - ( RCSe * MUR ) ) ) * DS ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20876858120715863}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "( ( FirstVNF_Mem / ARS ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7070882416122153}, {"determining": "( Max( Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + PN ) ) ),Max( RRS,MDR ) ) - CRS )", "choosing": "Min( ( ( CS - ( DS - Max( ( CS / CS ),Max( RMSe,DS ) ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS * CS ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5660552381065543}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}, {"determining": "( Max( CRS,AMS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.5787401574803149, "obj2": 0.2338822574929253}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) * ( ARS * ( CRS * FirstVNF_CPU_Server ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( RMSe / CS ) * Min( CS ,MUC ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( MUR * Min( DS ,MUM ) ) ) * DS ) ) )", "obj1": 0.59251968503937, "obj2": 0.22342340565989885}, {"determining": "Max( ( Min( ( ( ( CRS / FirstVNF_Mem ) + DDR ) + ( RRS / FirstVNF_Mem_Server ) ) ,PN ) - MDR ),( ( ( FirstVNF_RAM + PN ) - ( ARS * DDR ) ) - ( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( ( RCSe + ( ( ( RRSe - CS ) - Max( ( ( RCSe - MUR ) - ( RRSe * Max( RRSe,RRSe ) ) ),DS ) ) + ( RRSe - Min( MLU ,Max( Max( RMSe,( RCSe / MUR ) ),MUC ) ) ) ) ) / ( MUC + DS ) )", "obj1": 0.7224409448818898, "obj2": 0.12462907952431486}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.44734666474896567}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS * ( MRS - CRS ) ) )", "choosing": "( ( MUC * CS ) - Min( CS ,Max( ( ( RMSe / CS ) - ( ( RRSe - ( CS - ( DS / MLU ) ) ) / Max( CS,( CS / ( MUC - MUM ) ) ) ) ),RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44045757987027623}, {"determining": "Max( ( ACS / Max( CRS,RRS ) ),( MRS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RCSe / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * Max( Min( RCSe ,RMSe ),( MUR * Min( ( ( RMSe / RCSe ) * CS ) ,RMSe ) ) ) ) / MUC ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.820481911352113}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ,CS ) ,( ( Min( RCSe ,RMSe ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( CRS - Max( Max( FirstVNF_RAM,MRS ),( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) ,CS ) ,( CS / CS ) )", "obj1": 0.281496062992126, "obj2": 0.5438869770315833}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( Min( ARS ,Max( MRS,RRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) / Max( ( ( RMSe / CS ) + RRSe ),( MLU + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.19767727142575578}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) / ( DDR / FirstVNF_RAM ) ) ) + ( FirstVNF_RAM_Server / AMS ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( Min( ( MLU / MUR ) ,RRSe ) * ( MUM - Min( Min( RCSe ,Max( MUM,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.8090551181102362, "obj2": 0.06986634761349184}, {"determining": "( Max( BR,ACS ) - Max( FirstVNF_Mem,Max( MRS,( Min( AMS ,ACS ) * ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ACS ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( Min( DS ,CS ) + ( CS + MUR ) ) / MUC ) - MLU ),DS ) / RRSe ) - RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48382707297104055}, {"determining": "( Max( ARS,ACS ) - Max( ( MRS / ACS ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( DS - Max( Min( RMSe ,DS ),( DS + ( RCSe * ( DS / MUR ) ) ) ) ) * CS ) - CS ) ,( DS / ( Min( MUM ,( ( ( Min( CS ,RCSe ) - Min( MUM ,MLU ) ) * ( ( MUR / RMSe ) * ( RCSe - MLU ) ) ) - Min( MUC ,RMSe ) ) ) + Max( RRSe,( MUC - CS ) ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3838345635337794}, {"determining": "( FirstVNF_RAM * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( RMSe ,MUM ),RCSe ) - Min( RCSe ,RMSe ) ) + ( Min( ( ( Min( MUR ,( CS / ( DS - MUC ) ) ) * DS ) + CS ) ,CS ) - Max( MUC,MLU ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07993902547484133}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server * MDR ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( ( DS - Max( RCSe,Min( ( RRSe - RMSe ) ,MUC ) ) ) - ( ( MUC * ( Max( ( ( MUM / RMSe ) / MUM ),( MUR - CS ) ) + MUM ) ) - MLU ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4131093649238282}, {"determining": "( ACS - ( Max( FirstVNF_CPU,Max( ( ( RRS + ( BR * MDR ) ) + ( DDR * ( Const / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) - ( Min( DDR ,ARS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( RRSe / Min( RRSe ,MUM ) ) ) - Min( CS ,( DS - ( Min( Min( Min( ( RMSe + MUM ) ,Max( CS,RMSe ) ) ,RCSe ) ,RCSe ) * RMSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.587235849037345}, {"determining": "( ( ( ( ( ( ( ( ARS + FirstVNF_Mem ) + AMS ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) / MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + ( ( Max( RRS,RRS ) + ACS ) - PN ) ),ACS ) )", "choosing": "( Min( ( ( ( MUR + RCSe ) * MUC ) - DS ) ,( MUC - ( MLU / MLU ) ) ) - Min( CS ,Min( RMSe ,( ( ( ( MUR - Max( MUM,MUC ) ) - MUC ) / Min( ( ( MLU / RMSe ) / ( MUR - RMSe ) ) ,MLU ) ) - Min( Min( MUC ,Max( MUR,MUR ) ) ,( CS - Max( Min( RRSe ,CS ),MUR ) ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.4970670849387067}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( ( ACS - RRS ) * ( CRS * ( ( ( ( ( Max( ACS,FirstVNF_RAM_Server ) + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( MUM / ( MUM - ( Max( MUR,MUM ) - DS ) ) ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUM ) ) ) ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.39365171170179203}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * ( ( Min( ACS ,FirstVNF_RAM ) + ( ( PN * ( ( ( MDR * Const ) - FirstVNF_CPU ) / MRS ) ) - MDR ) ) - PN ) )", "choosing": "( ( ( ( ( DS * ( DS / RMSe ) ) + ( RRSe / ( ( Min( MUR ,DS ) / CS ) / MUR ) ) ) * MUC ) + DS ) / ( MLU * Max( ( ( Max( ( CS / MLU ),MUC ) + ( RMSe + ( ( MUM * MLU ) * MUC ) ) ) + Min( MUR ,CS ) ),( RMSe / MLU ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09747186101385884}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_CPU_Server ) * Min( ACS ,( ( ( ( DDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ) - AMS ) * FirstVNF_Mem ) ) ) - CRS ) )", "choosing": "( Min( Max( MUM,MUC ) ,MLU ) / ( Min( MUM ,RCSe ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.04235727086380719}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( Max( ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( FirstVNF_RAM + AMS ) + Max( ( MRS * RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * ( ( Const - ( ( FirstVNF_Mem_Server * Min( CRS ,Const ) ) * PN ) ) / AMS ) ) - CRS ) )", "choosing": "( ( CS + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.42322834645669294, "obj2": 0.37240245997371807}, {"determining": "( Max( ( Max( DDR,( FirstVNF_CPU + Max( ( FirstVNF_RAM_Server + PN ),Min( ( ACS / RRS ) ,DDR ) ) ) ) + ACS ),ACS ) * ( ( ( ( ( ( AMS + CRS ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Min( RCSe ,( Min( ( RCSe + RMSe ) ,MUM ) / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5334645669291339, "obj2": 0.2701676074349236}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( DDR * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.8681102362204725, "obj2": 0.0465274692864734}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( Max( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5196850393700787, "obj2": 0.2803087045280223}, {"determining": "( Max( PN,Const ) * ( CRS - ( ( ( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + FirstVNF_RAM ) + Max( Min( FirstVNF_Mem ,MDR ),( MRS - MRS ) ) ) * PN ) - MDR ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),( CRS / MDR ) ) ) ) )", "choosing": "( Min( ( Min( ( RMSe / DS ) ,RMSe ) / ( DS * CS ) ) ,Max( RCSe,MUR ) ) + ( Max( MUM,Min( RCSe ,Max( RCSe,RRSe ) ) ) * Min( MLU ,RCSe ) ) )", "obj1": 0.5492125984251969, "obj2": 0.2561151924652883}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( RRS - MRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( MUM,MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5433070866141733, "obj2": 0.25880576699440283}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "( Max( ( ( AMS + DDR ) + ACS ),ACS ) * ( ( ( ( ( ( ( AMS + MDR ) + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3210089726232184}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( Max( MDR,Min( CRS ,AMS ) ),BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( ( RMSe + DS ),( MUM + ( DS / MUC ) ) ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.5039370078740157, "obj2": 0.2900233879908612}, {"determining": "( Max( FirstVNF_Mem_Server,( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) / ( Const - ( MRS - Max( MDR,DDR ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6650843976777163}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ( ( FirstVNF_CPU_Server * PN ) - MDR ) ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8452089442672981}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.5610236220472441, "obj2": 0.24609021786114849}, {"determining": "Max( ( Max( ( ( ( AMS + Max( Min( FirstVNF_CPU ,Const ),PN ) ) + Max( ( FirstVNF_RAM_Server - RRS ),Max( Max( FirstVNF_RAM,MDR ),FirstVNF_RAM ) ) ) * PN ),MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "Min( ( ( DS * ( ( ( CS * DS ) + MUC ) * MUM ) ) - CS ) ,( RCSe - DS ) )", "obj1": 0.8169291338582677, "obj2": 0.06656223492153039}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( RRS * ( RRS - RRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) + Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) ) )", "choosing": "( ( MUC * ( ( CS / ( DS - Min( Min( ( DS - MUR ) ,( MUR / DS ) ) ,( ( CS - DS ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) / ( ( RMSe / ( RRSe + CS ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.015163413462602637}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),RRS ) * ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( DS / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6969202981483741}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( ( ( Max( MRS,Min( FirstVNF_Mem ,MRS ) ) + MDR ) - ( FirstVNF_CPU * ( BR / ( PN * BR ) ) ) ) - Max( Max( ACS,Max( Max( MDR,DDR ),BR ) ),( FirstVNF_Mem_Server * DDR ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( ( MLU * Min( Min( Max( ( ( RRSe * MLU ) - CS ),DS ) ,MUR ) ,( ( ( Min( MUR ,DS ) * RCSe ) + Max( ( RRSe * MUR ),RRSe ) ) - ( MUC - Max( CS,( RRSe * MUM ) ) ) ) ) ) * MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.6181098641056284}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( DS / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / RRSe ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4131093649238282}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( RRS * ( RRS - RRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) * PN ) - Const ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + CRS ) )", "choosing": "( ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( ( MUR + CS ) * ( MLU + RRSe ) ) ) ),( MLU * ( Max( RRSe,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.9114173228346457, "obj2": 0.03365126120547858}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ( ( DDR + PN ) / ( MRS - CRS ) ) - CRS ) ) ) ) * ( ( ( ( Min( ( AMS + FirstVNF_RAM ) ,Max( ( MRS - RRS ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,( ( ( ( Min( Min( RRSe ,MUM ) ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / ( CS * ( RMSe / DS ) ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.5610236220472441, "obj2": 0.24609021786114849}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( FirstVNF_CPU - CRS ) ) + Max( ( CRS * ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / CS ) ) / ( Min( ( RMSe / MLU ) ,( Min( CS ,RRSe ) + MLU ) ) - ( ( RMSe / CS ) * ( MUM * Min( CS ,RCSe ) ) ) ) ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.08963033803873457}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Min( FirstVNF_CPU ,AMS ),CRS ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.8503937007874016, "obj2": 0.06007964903875232}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + ( ( DDR / BR ) / ( FirstVNF_Mem_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / ( CS + Max( ( ( DS / DS ) / RRSe ),( CS - CS ) ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6347490463159795}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( PN * Const ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * RMSe ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * MUC ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.036413939430311244}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) * ( ( ( ( ( ( FirstVNF_RAM_Server + DDR ) + Max( ( FirstVNF_CPU + BR ),Min( FirstVNF_RAM ,MDR ) ) ) * ( CRS / FirstVNF_Mem_Server ) ) - MDR ) * ( Max( RRS,Min( Max( Min( FirstVNF_CPU ,AMS ),CRS ) ,AMS ) ) * PN ) ) - CRS ) )", "choosing": "( ( ( ( ( DS / MLU ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( CS - ( MUC + MUR ) ) - MLU ) * DS ) ) )", "obj1": 0.8464566929133859, "obj2": 0.06343513128890024}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4625984251968504, "obj2": 0.3260513130211592}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( RRS * ( RRS - RRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) + CRS ) )", "choosing": "( ( ( Min( RRSe ,( DS * MUR ) ) / Max( ( CS + Max( RRSe,( CS - CS ) ) ),MUR ) ) / RCSe ) - Min( CS ,Max( ( ( RMSe / CS ) + ( ( RRSe - MUC ) - Max( ( CS / ( MUM - MUC ) ),CS ) ) ),RRSe ) ) )", "obj1": 0.9251968503937008, "obj2": 0.028422143888481098}, {"determining": "( ( MRS - ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,MRS ) )", "choosing": "( ( ( RRSe - MUM ) / Max( ( ( RMSe / RCSe ) + ( RCSe + DS ) ),( ( DS + ( MUC / ( ( CS * RRSe ) * DS ) ) ) + Max( ( MUC * ( ( DS + RCSe ) / MUR ) ),MLU ) ) ) ) - Max( Min( CS ,MLU ),MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.39365171170179203}, {"determining": "( Max( ( ( AMS + DDR ) + Max( BR,Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.508097617326823}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( Max( FirstVNF_CPU_Server,CRS ) - Max( FirstVNF_RAM,( DDR + Min( RRS ,( RRS / FirstVNF_CPU_Server ) ) ) ) ) * ( Max( RRS,Min( Max( MRS,Min( FirstVNF_CPU ,AMS ) ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "Min( ( ( ( MLU - ( MUR * ( MUC * RMSe ) ) ) - ( DS / MUR ) ) / MUM ) ,( ( CS * ( Min( Max( Min( ( MLU * MUR ) ,CS ),Max( MUR,DS ) ) ,MLU ) * MLU ) ) - CS ) )", "obj1": 0.8622047244094488, "obj2": 0.05587562846371622}, {"determining": "( ( FirstVNF_Mem * ACS ) * ( ( ( ( ( AMS + MDR ) + Max( Max( ( ARS - BR ),FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR * ( ( RCSe / RMSe ) + DS ) ) - ( ( Max( CS,( DS + ( Max( MLU,( RCSe * CS ) ) / Min( ( MUC / DS ) ,Max( MUM,RRSe ) ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) )", "obj1": 0.4862204724409449, "obj2": 0.3080714136305302}, {"determining": "Max( ( MDR + ( ACS * Max( PN,RRS ) ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * RMSe ) + DS ) / ( MUC * ( ( ( ( CS * ( ( DS * MUR ) * MUM ) ) * Min( DS ,RMSe ) ) / Min( Min( MUR ,RRSe ) ,Min( MLU ,DS ) ) ) * DS ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6615270758457085}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( ( ( DDR * ( CRS * Const ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * ( PN * Max( RRS,Min( ( Min( FirstVNF_CPU ,AMS ) / CRS ) ,ARS ) ) ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * Max( ( ( MUC / MUR ) / ( RCSe / DS ) ),RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.5885826771653543, "obj2": 0.2270438351254451}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) + ( ACS + Const ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * Min( CS ,( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.14960629921259844, "obj2": 0.6861742304097324}, {"determining": "( PN - ( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( MUR * ( ( RCSe / RMSe ) - Max( DS,MUM ) ) ) ) + DS ) / ( MUC * ( ( ( ( ( Min( DS ,MUM ) + MUM ) / RRSe ) * Max( DS,( CS + ( RRSe / MLU ) ) ) ) / ( ( MUC / ( ( RMSe / DS ) / CS ) ) - Max( MUR,RCSe ) ) ) * DS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6084806348126973}, {"determining": "( ( ( FirstVNF_Mem + ( FirstVNF_RAM_Server * PN ) ) / ( Const + FirstVNF_Mem ) ) * ( ( ( MDR - ( ( ( FirstVNF_CPU - ARS ) * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,RRS ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ) * Max( CRS,( ( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),FirstVNF_RAM ) + MRS ) / FirstVNF_CPU_Server ) ) ) - CRS ) )", "choosing": "( ( RCSe / ( RRSe / ( Min( MUC ,MLU ) - CS ) ) ) - Min( ( MUC * ( RMSe * MUC ) ) ,Min( Min( MUM ,CS ) ,( MUM - Min( ( ( ( CS + DS ) + CS ) + Max( Max( MUR,DS ),Max( MUR,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.11314071514731507}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( Max( MDR,DDR ),BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / ( CS + ( RRSe / MLU ) ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6136683893954428}, {"determining": "( ( CRS - ( ( ( ( RRS + FirstVNF_CPU_Server ) - MDR ) - ( ACS - FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem / ( MRS + Max( RRS,CRS ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUC ) / RCSe ) - ( ( ( ( ( RCSe + RMSe ) + Max( CS,Max( MUM,Min( RRSe ,MUR ) ) ) ) / RRSe ) * ( MUR - RCSe ) ) / ( ( MUC - Min( ( RMSe / DS ) ,MUR ) ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01876630724433797}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5199729037857015}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5274418150156002}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.7303149606299213, "obj2": 0.11934514806162001}, {"determining": "Max( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( DDR / BR ) ) ) * MRS ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( CS * ( ( CS + Max( ( ( DS / DS ) / RRSe ),( CS - CS ) ) ) - ( RMSe + MUC ) ) ) - CS ) ,( RCSe / DS ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( FirstVNF_RAM * ( CRS - CRS ) )", "choosing": "( ( ( ( MUC * ( RMSe - MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,Max( Max( Min( CS ,MLU ),MUC ),( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( DS + MUC ) ) ) / ( RRSe - DS ) )", "obj1": 0.9192913385826772, "obj2": 0.032922945016310066}, {"determining": "( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_RAM,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( MDR,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( RCSe / ( Max( RCSe,Max( RCSe,( MLU * CS ) ) ) + CS ) ) / RRSe )", "obj1": 0.5255905511811023, "obj2": 0.272533228161354}, {"determining": "( ( ACS * PN ) * Max( ( CRS * ( ( FirstVNF_RAM * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Min( ( DDR / BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) * ( ARS * ARS ) ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6594364064130998}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18303222874753225}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ( PN - AMS ) + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( Min( ( RCSe * ( DS / MUR ) ) ,DS ) / ( MUC * ( ( RRSe * DS ) * RRSe ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18303222874753225}, {"determining": "( Max( ( ( Const + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_Mem_Server ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( DS ,RMSe ) ) ) ) / Max( ( ( ( RRSe * ( ( CS - RRSe ) * MLU ) ) / CS ) + ( RRSe + DS ) ),( MLU + Max( ( ( ( MLU + CS ) / MUR ) * MUC ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( RRSe - MUR ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5086073321251161}, {"determining": "( ( Const - RRS ) * ( ( ( ( ( Min( ARS ,Max( MRS,RRS ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) / FirstVNF_Mem_Server ) ) * PN ) - MDR ) + Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7070882416122153}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + ( ( DDR / BR ) / ( FirstVNF_Mem_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6993550290770556}, {"determining": "( Max( ( ( Min( Max( BR,ACS ) ,FirstVNF_RAM ) * Max( Max( FirstVNF_CPU_Server,MRS ),FirstVNF_Mem ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MLU + MUM ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.4914792631290989}, {"determining": "( ACS - Max( Max( DDR,Max( FirstVNF_RAM,BR ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( Max( ( MLU - RRSe ),Max( MUM,DS ) ) ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17300515614282086}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( RRS * ( RRS - RRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MDR ,PN ) ) ) * PN ) ) ) + Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) ) )", "choosing": "( ( MUC * ( ( CS / ( DS - Min( Min( ( DS - MUR ) ,( MUR / DS ) ) ,( ( CS - DS ) - Max( RRSe,CS ) ) ) ) ) * DS ) ) / ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.010817718283414733}], "35": [{"determining": "Max( ( FirstVNF_CPU + RRS ),( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( MUC / ( ( ( DS - ( RCSe * MUM ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( ( RCSe + ( CS + MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( ( AMS + FirstVNF_CPU_Server ),BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC + Max( MUC,RMSe ) ) / ( CS * ( RCSe / ( ( RRSe * MLU ) * CS ) ) ) ) / RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Max( Min( ( ( FirstVNF_Mem_Server - BR ) * ACS ) ,AMS ),Max( AMS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUM ,( DS / ( MUC - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ACS ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( RCSe * Min( ( MUM + RRSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.1634033906167332}, {"determining": "( ( FirstVNF_RAM + ( ACS * ( FirstVNF_Mem + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * PN ) * MDR ) )", "choosing": "( ( ( ( MUM + ( RMSe + MLU ) ) * ( DS / Min( MUC ,Max( ( Max( RRSe,DS ) + MUC ),MUR ) ) ) ) + ( MUC - Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( RCSe - MUR ) * ( Min( RRSe ,MUR ) / RRSe ) ) / ( ( ( ( MUM * CS ) * ( CS * MLU ) ) * RCSe ) - ( RCSe * MUR ) ) ) * DS ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20876858120715863}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) + ( ACS + Const ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * Min( CS ,( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.14960629921259844, "obj2": 0.6861742304097324}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13828188928376114}, {"determining": "( ( Const - RRS ) * ( ( ( ( ( Min( ARS ,Max( MRS,RRS ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) / FirstVNF_Mem_Server ) ) * PN ) - MDR ) + Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7070882416122153}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) * ( ARS * ( CRS * FirstVNF_CPU_Server ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( RMSe / CS ) * Min( CS ,MUC ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( MUR * Min( DS ,MUM ) ) ) * DS ) ) )", "obj1": 0.59251968503937, "obj2": 0.22342340565989885}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5390133088198928}, {"determining": "( ( FirstVNF_RAM_Server + Min( AMS ,Min( FirstVNF_CPU ,ACS ) ) ) - Max( Max( DDR,Max( FirstVNF_RAM,BR ) ),( ( ( RRS / DDR ) - Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),FirstVNF_CPU_Server ) ) - ( PN * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MLU - CS ) + RCSe ) - Min( CS ,( DS * Max( ( MUM / MUR ),CS ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6293065905130435}, {"determining": "Max( ( ACS / Max( CRS,RRS ) ),( MRS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RCSe / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * Max( Min( RCSe ,RMSe ),( MUR * Min( ( ( RMSe / RCSe ) * CS ) ,RMSe ) ) ) ) / MUC ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.820481911352113}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_CPU_Server ) * Min( ACS ,( ( ( ( DDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ) - AMS ) * FirstVNF_Mem ) ) ) - CRS ) )", "choosing": "( Min( Max( MUM,MUC ) ,MLU ) / ( Min( MUM ,RCSe ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.04235727086380719}, {"determining": "( Max( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5196850393700787, "obj2": 0.2803087045280223}, {"determining": "( Max( Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + PN ) ) ),Max( RRS,MDR ) ) - CRS )", "choosing": "Min( ( ( CS - ( DS - Max( ( CS / CS ),Max( RMSe,DS ) ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS * CS ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5660552381065543}, {"determining": "( Max( BR,ACS ) - Max( FirstVNF_Mem,Max( MRS,( Min( AMS ,ACS ) * ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ACS ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( Min( DS ,CS ) + ( CS + MUR ) ) / MUC ) - MLU ),DS ) / RRSe ) - RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48382707297104055}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5274418150156002}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server * MDR ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( ( DS - Max( RCSe,Min( ( RRSe - RMSe ) ,MUC ) ) ) - ( ( MUC * ( Max( ( ( MUM / RMSe ) / MUM ),( MUR - CS ) ) + MUM ) ) - MLU ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4131093649238282}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * BR ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / RCSe ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( RCSe * Min( ( MUM + RRSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.9212598425196851, "obj2": 0.026927696927667777}, {"determining": "( ACS - ( Max( FirstVNF_CPU,Max( ( ( RRS + ( BR * MDR ) ) + ( DDR * ( Const / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) - ( Min( DDR ,ARS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( RRSe / Min( RRSe ,MUM ) ) ) - Min( CS ,( DS - ( Min( Min( Min( ( RMSe + MUM ) ,Max( CS,RMSe ) ) ,RCSe ) ,RCSe ) * RMSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.587235849037345}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * ( ( Min( ACS ,FirstVNF_RAM ) + ( ( PN * ( ( ( MDR * Const ) - FirstVNF_CPU ) / MRS ) ) - MDR ) ) - PN ) )", "choosing": "( ( ( ( ( DS * ( DS / RMSe ) ) + ( RRSe / ( ( Min( MUR ,DS ) / CS ) / MUR ) ) ) * MUC ) + DS ) / ( MLU * Max( ( ( Max( ( CS / MLU ),MUC ) + ( RMSe + ( ( MUM * MLU ) * MUC ) ) ) + Min( MUR ,CS ) ),( RMSe / MLU ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09747186101385884}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( Max( FirstVNF_Mem_Server,( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) / ( Const - ( MRS - Max( MDR,DDR ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6650843976777163}, {"determining": "( PN - ( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( MUR * ( ( RCSe / RMSe ) - Max( DS,MUM ) ) ) ) + DS ) / ( MUC * ( ( ( ( ( Min( DS ,MUM ) + MUM ) / RRSe ) * Max( DS,( CS + ( RRSe / MLU ) ) ) ) / ( ( MUC / ( ( RMSe / DS ) / CS ) ) - Max( MUR,RCSe ) ) ) * DS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6084806348126973}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ( ( FirstVNF_CPU_Server * PN ) - MDR ) ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8452089442672981}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS * ( MRS - CRS ) ) )", "choosing": "( ( MUC * CS ) - Min( CS ,Max( ( ( RMSe / CS ) - ( ( RRSe - ( CS - ( DS / MLU ) ) ) / Max( CS,( CS / ( MUC - MUM ) ) ) ) ),RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.44045757987027623}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( Max( Max( FirstVNF_CPU,Max( Max( MDR,DDR ),( BR * Max( Max( ARS,MRS ),MDR ) ) ) ),Max( RRS,FirstVNF_Mem_Server ) ) - CRS )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6460492789009376}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( Max( FirstVNF_CPU_Server,CRS ) - Max( FirstVNF_RAM,( DDR + Min( RRS ,( RRS / FirstVNF_CPU_Server ) ) ) ) ) * ( Max( RRS,Min( Max( MRS,Min( FirstVNF_CPU ,AMS ) ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "Min( ( ( ( MLU - ( MUR * ( MUC * RMSe ) ) ) - ( DS / MUR ) ) / MUM ) ,( ( CS * ( Min( Max( Min( ( MLU * MUR ) ,CS ),Max( MUR,DS ) ) ,MLU ) * MLU ) ) - CS ) )", "obj1": 0.8622047244094488, "obj2": 0.05587562846371622}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( FirstVNF_RAM * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( RMSe ,MUM ),RCSe ) - Min( RCSe ,RMSe ) ) + ( Min( ( ( Min( MUR ,( CS / ( DS - MUC ) ) ) * DS ) + CS ) ,CS ) - Max( MUC,MLU ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07993902547484133}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( RMSe / CS ) * Min( CS ,MUC ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( Min( RMSe ,MLU ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2358510043930376}, {"determining": "( ( MRS - ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,MRS ) )", "choosing": "( ( ( RRSe - MUM ) / Max( ( ( RMSe / RCSe ) + ( RCSe + DS ) ),( ( DS + ( MUC / ( ( CS * RRSe ) * DS ) ) ) + Max( ( MUC * ( ( DS + RCSe ) / MUR ) ),MLU ) ) ) ) - Max( Min( CS ,MLU ),MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.39365171170179203}, {"determining": "( ( ARS * CRS ) - Max( MDR,DDR ) )", "choosing": "( ( ( ( ( Min( ( CS - CS ) ,CS ) / Max( DS,( CS - Min( CS ,MLU ) ) ) ) / ( Max( ( RRSe + Max( MUM,RCSe ) ),RMSe ) * RRSe ) ) * DS ) * MUC ) / CS )", "obj1": 0.35236220472440943, "obj2": 0.458480007366489}, {"determining": "( ( ( ( PN * ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MRS ,FirstVNF_CPU_Server ) ) ) ) - MDR ) * ( ACS / MDR ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( ( RCSe + Max( ( RCSe * ( ( MUR * DS ) / DS ) ),( RRSe - ( MUR + DS ) ) ) ) ,Max( MUM,Min( RCSe ,( MUC - Max( RMSe,MUR ) ) ) ) ) ) )", "obj1": 0.25, "obj2": 0.5735245645656469}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( ( AMS * Max( FirstVNF_RAM_Server,MDR ) ) * ( MRS - AMS ) )", "choosing": "( ( ( ( ( DS * ( ( MUM + Min( CS ,CS ) ) * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( RMSe * ( ( DS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4625984251968504, "obj2": 0.32522613375749043}, {"determining": "Max( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( DDR / BR ) ) ) * MRS ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( CS * ( ( CS + Max( ( ( DS / DS ) / RRSe ),( CS - CS ) ) ) - ( RMSe + MUC ) ) ) - CS ) ,( RCSe / DS ) )", "obj1": 0.5039370078740157, "obj2": 0.28954893747006305}, {"determining": "( Max( ( ( AMS + DDR ) + ACS ),ACS ) * ( ( ( ( ( ( ( AMS + MDR ) + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3210089726232184}, {"determining": "( ( FirstVNF_Mem * ACS ) * ( ( ( ( ( AMS + MDR ) + Max( Max( ( ARS - BR ),FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR * ( ( RCSe / RMSe ) + DS ) ) - ( ( Max( CS,( DS + ( Max( MLU,( RCSe * CS ) ) / Min( ( MUC / DS ) ,Max( MUM,RRSe ) ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) )", "obj1": 0.4862204724409449, "obj2": 0.3080714136305302}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( PN * FirstVNF_Mem_Server ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * MUC ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * MUC ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.8070866141732284, "obj2": 0.07117958225283491}, {"determining": "Max( ( Max( ( ( ( AMS + Max( Min( FirstVNF_CPU ,Const ),PN ) ) + Max( ( FirstVNF_RAM_Server - RRS ),Max( Max( FirstVNF_RAM,MDR ),FirstVNF_RAM ) ) ) * PN ),MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "Min( ( ( DS * ( ( ( CS * DS ) + MUC ) * MUM ) ) - CS ) ,( RCSe - DS ) )", "obj1": 0.8169291338582677, "obj2": 0.06656223492153039}, {"determining": "( ( MRS - RRS ) * ( CRS * ( ( ( ( ( AMS + DDR ) + Max( Const,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * ( ( MLU + RRSe ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.17032928634636058}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),RRS ) * ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( DS / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6969202981483741}, {"determining": "( Max( PN,Const ) * ( CRS - ( ( ( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + FirstVNF_RAM ) + Max( Min( FirstVNF_Mem ,MDR ),( MRS - MRS ) ) ) * PN ) - MDR ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),( CRS / MDR ) ) ) ) )", "choosing": "( Min( ( Min( ( RMSe / DS ) ,RMSe ) / ( DS * CS ) ) ,Max( RCSe,MUR ) ) + ( Max( MUM,Min( RCSe ,Max( RCSe,RRSe ) ) ) * Min( MLU ,RCSe ) ) )", "obj1": 0.5492125984251969, "obj2": 0.2561151924652883}, {"determining": "( Max( ( ( Min( Max( BR,ACS ) ,FirstVNF_RAM ) * Max( Max( FirstVNF_CPU_Server,MRS ),FirstVNF_Mem ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MLU + MUM ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.4914792631290989}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( MDR - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.718503937007874, "obj2": 0.12841926562072925}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( PN * Const ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * RMSe ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * MUC ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.036413939430311244}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Min( ( ACS - CRS ) ,( PN * FirstVNF_CPU ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( FirstVNF_RAM + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * Min( ( ( RMSe + RMSe ) - RRSe ) ,MUC ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( CS ,( RMSe / DS ) ) ) - Max( RCSe,Max( RCSe,( RMSe / RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.297244094488189, "obj2": 0.5187063980258032}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * ( FirstVNF_Mem - Const ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( RMSe * DS ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * Min( RRSe ,MLU ) ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,( RMSe / RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6377952755905512, "obj2": 0.18791323475430105}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( DS / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / RRSe ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4131093649238282}, {"determining": "( Max( ( ( Const + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_Mem_Server ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( DS ,RMSe ) ) ) ) / Max( ( ( ( RRSe * ( ( CS - RRSe ) * MLU ) ) / CS ) + ( RRSe + DS ) ),( MLU + Max( ( ( ( MLU + CS ) / MUR ) * MUC ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( RRSe - MUR ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5086073321251161}, {"determining": "( ( ( Max( MRS,Min( FirstVNF_Mem ,MRS ) ) + MDR ) - ( FirstVNF_CPU * ( BR / ( PN * BR ) ) ) ) - Max( Max( ACS,Max( Max( MDR,DDR ),BR ) ),( FirstVNF_Mem_Server * DDR ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( ( MLU * Min( Min( Max( ( ( RRSe * MLU ) - CS ),DS ) ,MUR ) ,( ( ( Min( MUR ,DS ) * RCSe ) + Max( ( RRSe * MUR ),RRSe ) ) - ( MUC - Max( CS,( RRSe * MUM ) ) ) ) ) ) * MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.6181098641056284}, {"determining": "( ACS - Max( Max( DDR,Max( FirstVNF_RAM,BR ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( Max( ( MLU - RRSe ),Max( MUM,DS ) ) ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.1803039905192385}, {"determining": "( Max( Max( ( ( MDR + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + Max( ( Max( Const,FirstVNF_Mem_Server ) - RRS ),Min( MDR ,FirstVNF_CPU_Server ) ) ),( MDR / Max( AMS,AMS ) ) ),CRS ) * Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - ( CS / RRSe ) ) / RCSe ) - ( ( Min( DS ,MUM ) - CS ) / DS ) )", "obj1": 0.5610236220472441, "obj2": 0.24609021786114849}, {"determining": "( ( ( FirstVNF_Mem + ( FirstVNF_RAM_Server * PN ) ) / ( Const + FirstVNF_Mem ) ) * ( ( ( MDR - ( ( ( FirstVNF_CPU - ARS ) * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,RRS ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ) * Max( CRS,( ( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),FirstVNF_RAM ) + MRS ) / FirstVNF_CPU_Server ) ) ) - CRS ) )", "choosing": "( ( RCSe / ( RRSe / ( Min( MUC ,MLU ) - CS ) ) ) - Min( ( MUC * ( RMSe * MUC ) ) ,Min( Min( MUM ,CS ) ,( MUM - Min( ( ( ( CS + DS ) + CS ) + Max( Max( MUR,DS ),Max( MUR,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.11314071514731507}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * PN ) - MDR ) * Max( FirstVNF_CPU,AMS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( Max( ( Min( RRSe ,Min( RCSe ,MUM ) ) / RRSe ),( DS / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / RRSe ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,DS ) ) ) ) ) * DS ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08416483581714312}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.4921259842519685, "obj2": 0.29927073094429013}, {"determining": "( Max( FirstVNF_Mem_Server,( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) / ( Const - ( MRS - Max( MDR,DDR ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6650843976777163}, {"determining": "( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_RAM,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( MDR,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( ( FirstVNF_Mem / PN ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( Min( ( MLU / MUR ) ,RRSe ) * ( MUM - Min( Min( RCSe ,Max( MUM,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.5393700787401575, "obj2": 0.26871112853697593}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) * ( ( ( ( ( ( FirstVNF_RAM_Server + DDR ) + Max( ( FirstVNF_CPU + BR ),Min( FirstVNF_RAM ,MDR ) ) ) * ( CRS / FirstVNF_Mem_Server ) ) - MDR ) * ( Max( RRS,Min( Max( Min( FirstVNF_CPU ,AMS ),CRS ) ,AMS ) ) * PN ) ) - CRS ) )", "choosing": "( ( ( ( ( DS / MLU ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( CS - ( MUC + MUR ) ) - MLU ) * DS ) ) )", "obj1": 0.8464566929133859, "obj2": 0.06343513128890024}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.3641732283464567, "obj2": 0.44259901375018545}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.5610236220472441, "obj2": 0.24609021786114849}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) ,( ( ( AMS + FirstVNF_RAM ) + Min( AMS ,Const ) ) * PN ) ) ) - MDR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( CS / Min( MUC ,RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( ( MUC + CS ) + MUM ) + ( MUM - Min( RCSe ,( MUC - Max( ( RMSe / CS ),MUR ) ) ) ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.13735198966928233}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( RRS * ( RRS - RRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) * PN ) - Const ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + CRS ) )", "choosing": "( ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( ( MUR + CS ) * ( MLU + RRSe ) ) ) ),( MLU * ( Max( RRSe,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.9114173228346457, "obj2": 0.03365126120547858}, {"determining": "( ( ( ( ( ( ( ( ARS + FirstVNF_Mem ) + AMS ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) / MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + ( ( Max( RRS,RRS ) + ACS ) - PN ) ),ACS ) )", "choosing": "( Min( ( ( ( MUR + RCSe ) * MUC ) - DS ) ,( MUC - ( MLU / MLU ) ) ) - Min( CS ,Min( RMSe ,( ( ( ( MUR - Max( MUM,MUC ) ) - MUC ) / Min( ( ( MLU / RMSe ) / ( MUR - RMSe ) ) ,MLU ) ) - Min( Min( MUC ,Max( MUR,MUR ) ) ,( CS - Max( Min( RRSe ,CS ),MUR ) ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.4970670849387067}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( FirstVNF_Mem_Server - ARS ) ) * ( ( ( ( ( Max( Const,( BR / DDR ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RCSe + DS ) ),( MLU + ( ( ( RCSe + CS ) * RRSe ) / MLU ) ) ) ) - Min( CS ,Min( RMSe ,( Min( Min( RCSe ,Max( MLU,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) - MUM ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5064550571203311}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( FirstVNF_CPU - CRS ) ) + Max( ( CRS * ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / CS ) ) / ( Min( ( RMSe / MLU ) ,( Min( CS ,RRSe ) + MLU ) ) - ( ( RMSe / CS ) * ( MUM * Min( CS ,RCSe ) ) ) ) ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.08963033803873457}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( DDR * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.8681102362204725, "obj2": 0.0465274692864734}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( FirstVNF_RAM,BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,( DS / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / PN ) - MDR ) * Max( ( ACS + FirstVNF_Mem_Server ),Const ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( Max( DS,DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.7696850393700787, "obj2": 0.08801693903561551}, {"determining": "Max( ( Min( ( ( ( CRS / FirstVNF_Mem ) + DDR ) + ( RRS / FirstVNF_Mem_Server ) ) ,PN ) - MDR ),( ( ( FirstVNF_RAM + PN ) - ( ARS * DDR ) ) - ( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( ( RCSe + ( ( ( RRSe - CS ) - Max( ( ( RCSe - MUR ) - ( RRSe * Max( RRSe,RRSe ) ) ),DS ) ) + ( RRSe - Min( MLU ,Max( Max( RMSe,( RCSe / MUR ) ),MUC ) ) ) ) ) / ( MUC + DS ) )", "obj1": 0.7224409448818898, "obj2": 0.12462907952431486}, {"determining": "Max( ( MDR + ( ACS * Max( PN,RRS ) ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * RMSe ) + DS ) / ( MUC * ( ( ( ( CS * ( ( DS * MUR ) * MUM ) ) * Min( DS ,RMSe ) ) / Min( Min( MUR ,RRSe ) ,Min( MLU ,DS ) ) ) * DS ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6615270758457085}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( Max( MDR,DDR ),BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( ( RRSe + MUM ) / RRSe ) * ( DS / ( CS + ( RRSe / MLU ) ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6136683893954428}, {"determining": "( Max( ARS,ACS ) - Max( ( MRS / ACS ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( DS - Max( Min( RMSe ,DS ),( DS + ( RCSe * ( DS / MUR ) ) ) ) ) * CS ) - CS ) ,( DS / ( Min( MUM ,( ( ( Min( CS ,RCSe ) - Min( MUM ,MLU ) ) * ( ( MUR / RMSe ) * ( RCSe - MLU ) ) ) - Min( MUC ,RMSe ) ) ) + Max( RRSe,( MUC - CS ) ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3838345635337794}, {"determining": "( ( CRS - ( ( ( ( RRS + FirstVNF_CPU_Server ) - MDR ) - ( ACS - FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem / ( MRS + Max( RRS,CRS ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUC ) / RCSe ) - ( ( ( ( ( RCSe + RMSe ) + Max( CS,Max( MUM,Min( RRSe ,MUR ) ) ) ) / RRSe ) * ( MUR - RCSe ) ) / ( ( MUC - Min( ( RMSe / DS ) ,MUR ) ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01876630724433797}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.7303149606299213, "obj2": 0.11934514806162001}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ,CS ) ,( ( Min( RCSe ,RMSe ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4566929133858268, "obj2": 0.3319642072853448}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( ( ( ( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( PN * Const ),BR ) / Const ) ) * Max( ( MDR - RRS ),Min( MDR ,ACS ) ) ) * FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),( DS + ( RCSe * ( DS / MUR ) ) ) ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( RCSe - CS ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3878114953127151}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( ( Max( MDR,( ARS - Const ) ) + Max( ( BR + FirstVNF_CPU ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.734251968503937, "obj2": 0.11725761519434137}, {"determining": "( Max( ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( FirstVNF_RAM + AMS ) + Max( ( MRS * RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * ( ( Const - ( ( FirstVNF_Mem_Server * Min( CRS ,Const ) ) * PN ) ) / AMS ) ) - CRS ) )", "choosing": "( ( CS + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.4271653543307087, "obj2": 0.371797229683961}, {"determining": "( ( FirstVNF_Mem / ARS ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7070882416122153}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + ( ( DDR / BR ) / ( FirstVNF_Mem_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6993550290770556}, {"determining": "( ( ARS / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ACS )", "choosing": "( ( MUC + DS ) / ( ( ( Max( RCSe,MUM ) / ( ( Min( CS ,MUM ) * RMSe ) - ( MUC / Min( ( RMSe / RMSe ) ,( DS - MUM ) ) ) ) ) * DS ) * MUC ) )", "obj1": 0.2440944881889764, "obj2": 0.5798385408662273}], "36": [{"determining": "Max( ( FirstVNF_CPU + RRS ),( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( MUC / ( ( ( DS - ( RCSe * MUM ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( ( RCSe + ( CS + MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * ( ( ( PN * FirstVNF_Mem ) / ( FirstVNF_CPU_Server / PN ) ) - FirstVNF_CPU_Server ) ) - MDR ) * ( PN * FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( Min( MLU ,Max( MUR,MUC ) ) / ( MUR - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Max( Max( FirstVNF_CPU,Max( ( AMS + FirstVNF_CPU_Server ),BR ) ),Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC + Max( MUC,RMSe ) ) / ( CS * ( RCSe / ( ( RRSe * MLU ) * CS ) ) ) ) / RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ACS ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( ( DS * ( ( MUR + MUC ) * MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "( ( CRS - ( ( ( ( RRS + FirstVNF_CPU_Server ) - MDR ) - ( ACS - FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem / ( MRS + Max( RRS,CRS ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUC ) / RCSe ) - ( ( ( ( ( RCSe + RMSe ) + Max( CS,Max( MUM,Min( RRSe ,MUR ) ) ) ) / RRSe ) * ( MUR - RCSe ) ) / ( ( MUC - Min( ( RMSe / DS ) ,MUR ) ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01876630724433797}, {"determining": "( Max( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.2665560454526611}, {"determining": "Max( Max( ( Min( ( FirstVNF_Mem_Server - MRS ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) - FirstVNF_Mem_Server ),AMS ),( MRS - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7070882416122153}, {"determining": "( Max( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5196850393700787, "obj2": 0.2803087045280223}, {"determining": "( ( FirstVNF_RAM + ( ACS * ( FirstVNF_Mem + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * PN ) * MDR ) )", "choosing": "( ( ( ( MUM + ( RMSe + MLU ) ) * ( DS / Min( MUC ,Max( ( Max( RRSe,DS ) + MUC ),MUR ) ) ) ) + ( MUC - Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( RCSe - MUR ) * ( Min( RRSe ,MUR ) / RRSe ) ) / ( ( ( ( MUM * CS ) * ( CS * MLU ) ) * RCSe ) - ( RCSe * MUR ) ) ) * DS ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20876858120715863}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) + ( AMS + DDR ) ) * ACS ) - MDR ) * Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem_Server ,AMS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( DS + Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( MUR ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.9881889763779528, "obj2": 0.007161011707476357}, {"determining": "( ( MRS - ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,MRS ) )", "choosing": "( ( ( RRSe - MUM ) / Max( ( ( RMSe / RCSe ) + ( RCSe + DS ) ),( ( DS + ( MUC / ( ( CS * RRSe ) * DS ) ) ) + Max( ( MUC * ( ( DS + RCSe ) / MUR ) ),MLU ) ) ) ) - Max( Min( CS ,MLU ),MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.39365171170179203}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * ( FirstVNF_Mem - Const ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( RMSe * DS ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * Min( RRSe ,MLU ) ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,( RMSe / RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6377952755905512, "obj2": 0.18791323475430105}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * BR ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / RCSe ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( RCSe * Min( ( MUM + RRSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.9212598425196851, "obj2": 0.026874279772816156}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) * ( ARS * ( CRS * FirstVNF_CPU_Server ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( RMSe / CS ) * Min( CS ,MUC ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( MUR * Min( DS ,MUM ) ) ) * DS ) ) )", "obj1": 0.59251968503937, "obj2": 0.22342340565989885}, {"determining": "Max( ( ACS / Max( CRS,RRS ) ),( MRS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RCSe / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * Max( Min( RCSe ,RMSe ),( MUR * Min( ( ( RMSe / RCSe ) * CS ) ,RMSe ) ) ) ) / MUC ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.820481911352113}, {"determining": "( ACS - Max( Max( DDR,Max( FirstVNF_RAM,BR ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( Max( ( MLU - RRSe ),Max( MUM,DS ) ) ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( ( PN / AMS ) ,MDR ) ) ) / ACS ) * ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUM ,RRSe ) ) - Max( RCSe,Max( RCSe,DS ) ) ) ) - DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6761728365252176}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( MDR + ( ACS * Max( PN,RRS ) ) ),( MRS - ( ACS * PN ) ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.1519332001439142}, {"determining": "( Max( BR,ACS ) - Max( FirstVNF_Mem,Max( MRS,( Min( AMS ,ACS ) * ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ACS ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( Min( DS ,CS ) + ( CS + MUR ) ) / MUC ) - MLU ),DS ) / RRSe ) - RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48382707297104055}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "Max( ( MDR + ( ACS * Max( PN,RRS ) ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * RMSe ) + DS ) / ( MUC * ( ( ( ( CS * ( ( DS * MUR ) * MUM ) ) * Min( DS ,RMSe ) ) / Min( Min( MUR ,RRSe ) ,Min( MLU ,DS ) ) ) * DS ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6615270758457085}, {"determining": "( ACS - ( Max( FirstVNF_CPU,Max( ( ( RRS + ( BR * MDR ) ) + ( DDR * ( Const / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) - ( Min( DDR ,ARS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( RRSe / Min( RRSe ,MUM ) ) ) - Min( CS ,( DS - ( Min( Min( Min( ( RMSe + MUM ) ,Max( CS,RMSe ) ) ,RCSe ) ,RCSe ) * RMSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.587235849037345}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * ( ( Min( ACS ,FirstVNF_RAM ) + ( ( PN * ( ( ( MDR * Const ) - FirstVNF_CPU ) / MRS ) ) - MDR ) ) - PN ) )", "choosing": "( ( ( ( ( DS * ( DS / RMSe ) ) + ( RRSe / ( ( Min( MUR ,DS ) / CS ) / MUR ) ) ) * MUC ) + DS ) / ( MLU * Max( ( ( Max( ( CS / MLU ),MUC ) + ( RMSe + ( ( MUM * MLU ) * MUC ) ) ) + Min( MUR ,CS ) ),( RMSe / MLU ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09747186101385884}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( PN - ( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( MUR * ( ( RCSe / RMSe ) - Max( DS,MUM ) ) ) ) + DS ) / ( MUC * ( ( ( ( ( Min( DS ,MUM ) + MUM ) / RRSe ) * Max( DS,( CS + ( RRSe / MLU ) ) ) ) / ( ( MUC / ( ( RMSe / DS ) / CS ) ) - Max( MUR,RCSe ) ) ) * DS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6084806348126973}, {"determining": "( FirstVNF_RAM * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( RMSe ,MUM ),RCSe ) - Min( RCSe ,RMSe ) ) + ( Min( ( ( Min( MUR ,( CS / ( DS - MUC ) ) ) * DS ) + CS ) ,CS ) - Max( MUC,MLU ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07993902547484133}, {"determining": "( Max( PN,Const ) * ( CRS - ( ( ( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + FirstVNF_RAM ) + Max( Min( FirstVNF_Mem ,MDR ),( MRS - MRS ) ) ) * PN ) - MDR ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),( CRS / MDR ) ) ) ) )", "choosing": "( Min( ( Min( ( RMSe / DS ) ,RMSe ) / ( DS * CS ) ) ,Max( RCSe,MUR ) ) + ( Max( MUM,Min( RCSe ,Max( RCSe,RRSe ) ) ) * Min( MLU ,RCSe ) ) )", "obj1": 0.5492125984251969, "obj2": 0.2561151924652883}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ( ( FirstVNF_CPU_Server * PN ) - MDR ) ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8452089442672981}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( ( MUR + MUR ) ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4353187838832936}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( ( RRS * ( RRS - RRS ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) * PN ) - Const ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + CRS ) )", "choosing": "( ( ( Min( RCSe ,MUR ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) + ( Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) - CS ) ,RRSe ) - Min( Min( CS ,( ( MUR * Min( ( MUM + RRSe ) ,RMSe ) ) - ( ( RMSe / CS ) - MLU ) ) ) ,Max( ( MUM * ( RCSe + ( ( MUR + CS ) * ( MLU + RRSe ) ) ) ),( MLU * ( Max( RRSe,MUM ) / RRSe ) ) ) ) ) )", "obj1": 0.9114173228346457, "obj2": 0.03365126120547858}, {"determining": "( ( ( ( ( ( ( ( ARS + FirstVNF_Mem ) + AMS ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) / MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + ( ( Max( RRS,RRS ) + ACS ) - PN ) ),ACS ) )", "choosing": "( Min( ( ( ( MUR + RCSe ) * MUC ) - DS ) ,( MUC - ( MLU / MLU ) ) ) - Min( CS ,Min( RMSe ,( ( ( ( MUR - Max( MUM,MUC ) ) - MUC ) / Min( ( ( MLU / RMSe ) / ( MUR - RMSe ) ) ,MLU ) ) - Min( Min( MUC ,Max( MUR,MUR ) ) ,( CS - Max( Min( RRSe ,CS ),MUR ) ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.4970670849387067}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_CPU_Server ) * Min( ACS ,( ( ( ( DDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ) - AMS ) * FirstVNF_Mem ) ) ) - CRS ) )", "choosing": "( Min( Max( MUM,MUC ) ,MLU ) / ( Min( MUM ,RCSe ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.04235727086380719}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( Max( ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( FirstVNF_RAM + AMS ) + Max( ( MRS * RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * ( ( Const - ( ( FirstVNF_Mem_Server * Min( CRS ,Const ) ) * PN ) ) / AMS ) ) - CRS ) )", "choosing": "( ( CS + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.4271653543307087, "obj2": 0.371797229683961}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "Max( ( Max( ( ( ( AMS + Max( Min( FirstVNF_CPU ,Const ),PN ) ) + Max( ( FirstVNF_RAM_Server - RRS ),Max( Max( FirstVNF_RAM,MDR ),FirstVNF_RAM ) ) ) * PN ),MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "Min( ( ( DS * ( ( ( CS * DS ) + MUC ) * MUM ) ) - CS ) ,( RCSe - DS ) )", "obj1": 0.8169291338582677, "obj2": 0.06656223492153039}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,MDR ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,Max( MUM,RRSe ) ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4566929133858268, "obj2": 0.3319298283314023}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) * ( ( ( ( ( ( FirstVNF_RAM_Server + DDR ) + Max( ( FirstVNF_CPU + BR ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) - MDR ) * ( Max( RRS,Min( Max( Min( FirstVNF_CPU ,AMS ),CRS ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.7047244094488189, "obj2": 0.15010466058695754}, {"determining": "( ( AMS * Max( FirstVNF_RAM_Server,MDR ) ) * ( MRS - AMS ) )", "choosing": "( ( ( ( ( DS * ( ( MUM + Min( CS ,CS ) ) * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( RMSe * ( ( DS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4625984251968504, "obj2": 0.32522613375749043}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) * ( ( ( ( ( ( FirstVNF_RAM_Server + DDR ) + Max( ( FirstVNF_CPU + BR ),Min( FirstVNF_RAM ,MDR ) ) ) * ( CRS / FirstVNF_Mem_Server ) ) - MDR ) * ( Max( RRS,Min( Max( Min( FirstVNF_CPU ,AMS ),CRS ) ,AMS ) ) * PN ) ) - CRS ) )", "choosing": "( ( ( ( ( DS / MLU ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( CS - ( MUC + MUR ) ) - MLU ) * DS ) ) )", "obj1": 0.8464566929133859, "obj2": 0.06343513128890024}, {"determining": "( ( MDR - AMS ) - Max( Max( ( ARS * AMS ),FirstVNF_CPU ),FirstVNF_Mem ) )", "choosing": "( ( ( ( RRSe + MUM ) / RRSe ) / MUM ) - Min( CS ,( RMSe / ( MUM - Min( DS ,MLU ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4204076983595796}, {"determining": "( Max( Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + PN ) ) ),Max( RRS,MDR ) ) - CRS )", "choosing": "Min( ( ( CS - ( DS - Max( ( CS / CS ),Max( RMSe,DS ) ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS * CS ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5660552381065543}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( Max( FirstVNF_CPU_Server,MDR ) + FirstVNF_RAM ) + Max( ( CRS - RRS ),( FirstVNF_CPU_Server * PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS - ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / Max( RRSe,( DS - MUM ) ) )", "obj1": 0.5787401574803149, "obj2": 0.23317073564796617}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server * MDR ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( ( DS - Max( RCSe,Min( ( RRSe - RMSe ) ,MUC ) ) ) - ( ( MUC * ( Max( ( ( MUM / RMSe ) / MUM ),( MUR - CS ) ) + MUM ) ) - MLU ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4131093649238282}, {"determining": "( Max( ( ( AMS + DDR ) + ACS ),ACS ) * ( ( ( ( ( ( ( AMS + MDR ) + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3210089726232184}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + ( ( DDR / BR ) / ( FirstVNF_Mem_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6993550290770556}, {"determining": "( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * MUC ) + ( RRSe + DS ) ),( MLU + Max( Min( RMSe ,RRSe ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6477493020471721}, {"determining": "( ( MRS - RRS ) * ( CRS * ( ( ( ( ( AMS + DDR ) + Max( Const,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * ( ( MLU + RRSe ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.17032928634636058}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5274418150156002}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( MDR - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.718503937007874, "obj2": 0.12841926562072925}, {"determining": "( Max( ARS,ACS ) - Max( ( MRS / ACS ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( DS - Max( Min( RMSe ,DS ),( DS + ( RCSe * ( DS / MUR ) ) ) ) ) * CS ) - CS ) ,( DS / ( Min( MUM ,( ( ( Min( CS ,RCSe ) - Min( MUM ,MLU ) ) * ( ( MUR / RMSe ) * ( RCSe - MLU ) ) ) - Min( MUC ,RMSe ) ) ) + Max( RRSe,( MUC - CS ) ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3838345635337794}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5390133088198928}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( ( ( ( ( Max( Min( Min( FirstVNF_Mem_Server ,CRS ) ,RRS ),ARS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,Max( ACS,ARS ) ) ) ) * FirstVNF_Mem ) - MDR ) * Min( ACS ,Max( DDR,( ( FirstVNF_CPU + DDR ) + PN ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( RRSe * ( ( ( ( Max( RRSe,MUM ) + RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RCSe / CS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( MUC ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5755353999536376}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( Max( FirstVNF_CPU_Server,CRS ) - Max( FirstVNF_RAM,( DDR + Min( RRS ,( RRS / FirstVNF_CPU_Server ) ) ) ) ) * ( Max( RRS,Min( Max( MRS,Min( FirstVNF_CPU ,AMS ) ) ,ARS ) ) * PN ) ) - CRS ) )", "choosing": "Min( ( ( ( MLU - ( MUR * ( MUC * RMSe ) ) ) - ( DS / MUR ) ) / MUM ) ,( ( CS * ( Min( Max( Min( ( MLU * MUR ) ,CS ),Max( MUR,DS ) ) ,MLU ) * MLU ) ) - CS ) )", "obj1": 0.8622047244094488, "obj2": 0.05587562846371622}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) + ( ACS + Const ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * Min( CS ,( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.14960629921259844, "obj2": 0.6861742304097324}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.1803039905192385}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( PN * BR ),BR ) - Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( CS / CS ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RMSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07262787083389699}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.4921259842519685, "obj2": 0.29927073094429013}, {"determining": "( Max( ( ( Const + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_Mem_Server ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( DS ,RMSe ) ) ) ) / Max( ( ( ( RRSe * ( ( CS - RRSe ) * MLU ) ) / CS ) + ( RRSe + DS ) ),( MLU + Max( ( ( ( MLU + CS ) / MUR ) * MUC ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( RRSe - MUR ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5086073321251161}, {"determining": "( ( ( Max( MRS,Min( FirstVNF_Mem ,MRS ) ) + MDR ) - ( FirstVNF_CPU * ( BR / ( PN * BR ) ) ) ) - Max( Max( ACS,Max( Max( MDR,DDR ),BR ) ),( FirstVNF_Mem_Server * DDR ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( ( MLU * Min( Min( Max( ( ( RRSe * MLU ) - CS ),DS ) ,MUR ) ,( ( ( Min( MUR ,DS ) * RCSe ) + Max( ( RRSe * MUR ),RRSe ) ) - ( MUC - Max( CS,( RRSe * MUM ) ) ) ) ) ) * MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.6181098641056284}, {"determining": "( ( ( FirstVNF_Mem + ( FirstVNF_RAM_Server * PN ) ) / ( Const + FirstVNF_Mem ) ) * ( ( ( MDR - ( ( ( FirstVNF_CPU - ARS ) * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,RRS ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ) * Max( CRS,( ( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),FirstVNF_RAM ) + MRS ) / FirstVNF_CPU_Server ) ) ) - CRS ) )", "choosing": "( ( RCSe / ( RRSe / ( Min( MUC ,MLU ) - CS ) ) ) - Min( ( MUC * ( RMSe * MUC ) ) ,Min( Min( MUM ,CS ) ,( MUM - Min( ( ( ( CS + DS ) + CS ) + Max( Max( MUR,DS ),Max( MUR,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.11314071514731507}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) - Max( ( ( ( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( PN * Const ),BR ) / Const ) ) * Max( ( MDR - RRS ),Min( MDR ,ACS ) ) ) * FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( CS * ( DS - Max( Min( RMSe ,DS ),( DS + ( RCSe * ( DS / MUR ) ) ) ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( RCSe - CS ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3878114953127151}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.5905511811023622, "obj2": 0.2236128652314265}, {"determining": "( Max( PN,ACS ) * ( ( ( CRS + FirstVNF_Mem ) * Min( ACS ,BR ) ) - MDR ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * MUC ) / ( ( Min( ( RCSe / MUM ) ,( MUR - RCSe ) ) / ( ( RMSe / DS ) - CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8956692913385826, "obj2": 0.040856237188203304}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( ( AMS / FirstVNF_CPU ) ,FirstVNF_Mem_Server ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * ( ( RMSe + MLU ) * MLU ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - Max( ( ( CS / RMSe ) + ( DS + RRSe ) ),( ( MLU + RMSe ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8543307086614174, "obj2": 0.05806850300749832}, {"determining": "( Max( FirstVNF_Mem_Server,( ( AMS * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / ( Const - ( MRS - Max( DDR,MDR ) ) ) ) ) - ( Const - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( ( ( MLU - MLU ) / CS ),MLU ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RCSe * Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6650843976777163}, {"determining": "( ( FirstVNF_Mem * ACS ) * ( ( ( ( ( AMS + MDR ) + Max( Max( ( ARS - BR ),FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR * ( ( RCSe / RMSe ) + DS ) ) - ( ( Max( CS,( DS + ( Max( MLU,( RCSe * CS ) ) / Min( ( MUC / DS ) ,Max( MUM,RRSe ) ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) )", "obj1": 0.4862204724409449, "obj2": 0.3080714136305302}, {"determining": "( ( FirstVNF_RAM_Server + Min( AMS ,Min( FirstVNF_CPU ,ACS ) ) ) - Max( Max( DDR,Max( FirstVNF_RAM,BR ) ),( ( ( RRS / DDR ) - Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),FirstVNF_CPU_Server ) ) - ( PN * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MLU - CS ) + RCSe ) - Min( CS ,( DS * Max( ( MUM / MUR ),CS ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6293065905130435}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ACS ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6383156339076617}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.44708679765770115}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( CRS - RRS ),MDR ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( RMSe / CS ) * Min( CS ,MUC ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( Min( RMSe ,MUM ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5511811023622047, "obj2": 0.253210747219714}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.3641732283464567, "obj2": 0.44259901375018545}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) ,( ( ( AMS + FirstVNF_RAM ) + Min( AMS ,Const ) ) * PN ) ) ) - MDR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( CS / Min( MUC ,RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( ( MUC + CS ) + MUM ) + ( MUM - Min( RCSe ,( MUC - Max( ( RMSe / CS ),MUR ) ) ) ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.13735198966928233}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( FirstVNF_Mem_Server - ARS ) ) * ( ( ( ( ( Max( Const,( BR / DDR ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RCSe + DS ) ),( MLU + ( ( ( RCSe + CS ) * RRSe ) / MLU ) ) ) ) - Min( CS ,Min( RMSe ,( Min( Min( RCSe ,Max( MLU,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) - MUM ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5064550571203311}, {"determining": "Max( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( DDR / BR ) ) ) * ( ACS + Const ) ),ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( CS * ( ( CS + Max( ( ( DS / RCSe ) / RRSe ),( CS - CS ) ) ) - ( RMSe + MUC ) ) ) - CS ) ,( RCSe / DS ) )", "obj1": 0.5019685039370079, "obj2": 0.2904037682094049}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( RCSe * Min( ( MUM + RRSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.1634033906167332}, {"determining": "( ( ( ( PN * ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MRS ,FirstVNF_CPU_Server ) ) ) ) - MDR ) * ( ACS / MDR ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( ( RCSe + Max( ( RCSe * ( ( MUR * DS ) / DS ) ),( RRSe - ( MUR + DS ) ) ) ) ,Max( MUM,Min( RCSe ,( MUC - Max( RMSe,MUR ) ) ) ) ) ) )", "obj1": 0.6220472440944882, "obj2": 0.20277065373384237}, {"determining": "( ( ( ( ( ( AMS + ACS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( Const + MRS ) ) - MDR ) * Min( FirstVNF_Mem_Server ,( Max( ARS,ACS ) - Max( ( DDR + CRS ),FirstVNF_CPU_Server ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) + RRSe ) / RCSe ) - Min( CS ,Min( RCSe ,( MUM - Min( ( RMSe - RRSe ) ,Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.45632169842439957}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( FirstVNF_CPU - CRS ) ) + Max( ( CRS * ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / CS ) ) / ( Min( ( RMSe / MLU ) ,( Min( CS ,RRSe ) + MLU ) ) - ( ( RMSe / CS ) * ( MUM * Min( CS ,RCSe ) ) ) ) ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.08963033803873457}, {"determining": "( Max( Max( FirstVNF_CPU,Max( Max( MDR,DDR ),( BR * Max( Max( ARS,MRS ),MDR ) ) ) ),Max( RRS,FirstVNF_Mem_Server ) ) - CRS )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6460492789009376}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( DDR * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.8681102362204725, "obj2": 0.0465274692864734}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ,CS ) ,( ( Min( RCSe ,RMSe ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( DS / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / RRSe ) / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.2578740157480315, "obj2": 0.5710470822866496}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MRS ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - Min( RCSe ,( RRSe + Min( MUR ,RRSe ) ) ) ) / RCSe ) - Min( CS ,( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,RRSe ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.5610236220472441, "obj2": 0.24609021786114849}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),RRS ) * ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( DS / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6969202981483741}, {"determining": "( Max( Max( ( ( MDR + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + Max( ( Max( Const,FirstVNF_Mem_Server ) - RRS ),Min( MDR ,FirstVNF_CPU_Server ) ) ),( MDR / Max( AMS,AMS ) ) ),CRS ) * Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - ( CS / RRSe ) ) / RCSe ) - ( ( Min( DS ,MUM ) - CS ) / DS ) )", "obj1": 0.5610236220472441, "obj2": 0.24609021786114849}, {"determining": "( Max( RRS,MRS ) * ( ( ( FirstVNF_CPU_Server * MDR ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( Max( FirstVNF_CPU_Server,MRS ) * Const ),BR ) / Const ) ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / RRSe ) / RCSe ) - Min( MUM ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,MUR ),( MUM - MUR ) ) ) ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08241930695325018}], "37": [{"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) * ( ARS * ( CRS * FirstVNF_CPU_Server ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU + RRS ),( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( MUC / ( ( ( DS - ( RCSe * MUM ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( ( RCSe + ( CS + MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * ( ( ( PN * FirstVNF_Mem ) / ( FirstVNF_CPU_Server / PN ) ) - FirstVNF_CPU_Server ) ) - MDR ) * ( PN * FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( Min( MLU ,Max( MUR,MUC ) ) / ( MUR - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM_Server / Max( FirstVNF_RAM,MDR ) ) ) + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ACS ) + CRS ),AMS ) ),( MRS + ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * RMSe ) ) / ( Max( ( ( DS * ( ( MUR + MUC ) * MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( MLU * RMSe ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "Max( Max( ( Min( ( FirstVNF_Mem_Server - MRS ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) - FirstVNF_Mem_Server ),AMS ),( MRS - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7070882416122153}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( MDR - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.718503937007874, "obj2": 0.12841926562072925}, {"determining": "( Max( BR,ACS ) - Max( FirstVNF_Mem,Max( MRS,( Min( AMS ,ACS ) * ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ACS ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( Min( DS ,CS ) + ( CS + MUR ) ) / MUC ) - MLU ),DS ) / RRSe ) - RCSe ) - Min( CS ,( MLU + ( RCSe / MUR ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48382707297104055}, {"determining": "( ( ( FirstVNF_Mem + ( FirstVNF_RAM_Server * PN ) ) / ( Const + FirstVNF_Mem ) ) * ( ( ( MDR - ( ( ( FirstVNF_CPU - ARS ) * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,RRS ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ) * Max( CRS,( ( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),FirstVNF_RAM ) + MRS ) / FirstVNF_CPU_Server ) ) ) - CRS ) )", "choosing": "( ( RCSe / ( RRSe / ( Min( MUC ,MLU ) - CS ) ) ) - Min( ( MUC * ( RMSe * MUC ) ) ,Min( Min( MUM ,CS ) ,( MUM - Min( ( ( ( CS + DS ) + CS ) + Max( Max( MUR,DS ),Max( MUR,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.11314071514731507}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * ( FirstVNF_Mem - Const ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( RMSe * DS ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * Min( RRSe ,MLU ) ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,( RMSe / RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6377952755905512, "obj2": 0.18791323475430105}, {"determining": "( Max( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5196850393700787, "obj2": 0.2803087045280223}, {"determining": "( ( ( ( ( ( ( ( ARS + FirstVNF_Mem ) + AMS ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) / MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + ( ( Max( RRS,RRS ) + ACS ) - PN ) ),ACS ) )", "choosing": "( Min( ( ( ( MUR + RCSe ) * MUC ) - DS ) ,( MUC - ( MLU / MLU ) ) ) - Min( CS ,Min( RMSe ,( ( ( ( MUR - Max( MUM,MUC ) ) - MUC ) / Min( ( ( MLU / RMSe ) / ( MUR - RMSe ) ) ,MLU ) ) - Min( Min( MUC ,Max( MUR,MUR ) ) ,( CS - Max( Min( RRSe ,CS ),MUR ) ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.4970670849387067}, {"determining": "( ( FirstVNF_RAM + ( ACS * ( FirstVNF_Mem + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * PN ) * MDR ) )", "choosing": "( ( ( ( MUM + ( RMSe + MLU ) ) * ( DS / Min( MUC ,Max( ( Max( RRSe,DS ) + MUC ),MUR ) ) ) ) + ( MUC - Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( RCSe - MUR ) * ( Min( RRSe ,MUR ) / RRSe ) ) / ( ( ( ( MUM * CS ) * ( CS * MLU ) ) * RCSe ) - ( RCSe * MUR ) ) ) * DS ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20876858120715863}, {"determining": "( Max( PN,ACS ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,RCSe ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.4074803149606299, "obj2": 0.3910078283538264}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) * ( ARS * ( CRS * FirstVNF_CPU_Server ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( RMSe / CS ) * Min( CS ,MUC ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( MUR * Min( DS ,MUM ) ) ) * DS ) ) )", "obj1": 0.59251968503937, "obj2": 0.22342340565989885}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server * MDR ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( ( DS - Max( RCSe,Min( ( RRSe - RMSe ) ,MUC ) ) ) - ( ( MUC * ( Max( ( ( MUM / RMSe ) / MUM ),( MUR - CS ) ) + MUM ) ) - MLU ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4131093649238282}, {"determining": "( ACS - Max( Max( DDR,Max( FirstVNF_RAM,BR ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( Max( ( MLU - RRSe ),Max( MUM,DS ) ) ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "Max( ( ACS / Max( CRS,RRS ) ),( MRS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RCSe / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * Max( Min( RCSe ,RMSe ),( MUR * Min( ( ( RMSe / RCSe ) * CS ) ,RMSe ) ) ) ) / MUC ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.820481911352113}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "( PN - ( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( MUR * ( ( RCSe / RMSe ) - Max( DS,MUM ) ) ) ) + DS ) / ( MUC * ( ( ( ( ( Min( DS ,MUM ) + MUM ) / RRSe ) * Max( DS,( CS + ( RRSe / MLU ) ) ) ) / ( ( MUC / ( ( RMSe / DS ) / CS ) ) - Max( MUR,RCSe ) ) ) * DS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6084806348126973}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ,CS ) ,( ( Min( RCSe ,RMSe ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - ( Min( RRS ,Max( MDR,MDR ) ) * FirstVNF_RAM_Server ) ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) - ( Max( ( PN * PN ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( ( RMSe / DS ) ,CS ) + Min( RCSe ,( MUR * MUR ) ) ) ) ) / Max( ( ( CS * MUC ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * MUC ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) / ( RRSe - RRSe ) ) ) ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.0326725946270519}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) ,( ( ( AMS + FirstVNF_RAM ) + Min( AMS ,Const ) ) * PN ) ) ) - MDR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( CS / Min( MUC ,RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( ( MUC + CS ) + MUM ) + ( MUM - Min( RCSe ,( MUC - Max( ( RMSe / CS ),MUR ) ) ) ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.13735198966928233}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( ( MUR + MUR ) ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5118903668505268}, {"determining": "( ( ( Max( MRS,Min( FirstVNF_Mem ,MRS ) ) + MDR ) - ( FirstVNF_CPU * ( BR / ( PN * BR ) ) ) ) - Max( Max( ACS,Max( Max( MDR,DDR ),BR ) ),( FirstVNF_Mem_Server * DDR ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( ( MLU * Min( Min( Max( ( ( RRSe * MLU ) - CS ),DS ) ,MUR ) ,( ( ( Min( MUR ,DS ) * RCSe ) + Max( ( RRSe * MUR ),RRSe ) ) - ( MUC - Max( CS,( RRSe * MUM ) ) ) ) ) ) * MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.6181098641056284}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( FirstVNF_CPU - CRS ) ) + Max( ( CRS * ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / CS ) ) / ( Min( ( RMSe / MLU ) ,( Min( CS ,RRSe ) + MLU ) ) - ( ( RMSe / CS ) * ( MUM * Min( CS ,RCSe ) ) ) ) ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.08963033803873457}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "( ( ( ( ( Max( Max( ( DDR / FirstVNF_Mem_Server ),FirstVNF_CPU ),AMS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - BR ) * Max( FirstVNF_Mem,( ( PN + FirstVNF_RAM ) + CRS ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( MUC / MUC ) * MUC ) - DS ) / ( MUC * ( ( ( MLU - ( Max( MLU,RCSe ) * CS ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5851198582832301}, {"determining": "( ( CRS - ( ( ( ( RRS + FirstVNF_CPU_Server ) - MDR ) - ( ACS - FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem / ( MRS + Max( RRS,CRS ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUC ) / RCSe ) - ( ( ( ( ( RCSe + RMSe ) + Max( CS,Max( MUM,Min( RRSe ,MUR ) ) ) ) / RRSe ) * ( MUR - RCSe ) ) / ( ( MUC - Min( ( RMSe / DS ) ,MUR ) ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01876630724433797}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * ( ( Min( ACS ,FirstVNF_RAM ) + ( ( PN * ( ( ( MDR * Const ) - FirstVNF_CPU ) / MRS ) ) - MDR ) ) - PN ) )", "choosing": "( ( ( ( ( DS * ( DS / RMSe ) ) + ( RRSe / ( ( Min( MUR ,DS ) / CS ) / MUR ) ) ) * MUC ) + DS ) / ( MLU * Max( ( ( Max( ( CS / MLU ),MUC ) + ( RMSe + ( ( MUM * MLU ) * MUC ) ) ) + Min( MUR ,CS ) ),( RMSe / MLU ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09747186101385884}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( Const - ACS ) + FirstVNF_Mem ) ) - DDR ) * ( FirstVNF_Mem_Server - ARS ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,( MUM - Max( ( ( RMSe - MUC ) + MUM ),MLU ) ) ) / RRSe ) / RCSe ) - Min( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - Max( ( ( CS / RMSe ) + ( DS + RRSe ) ),( ( ( MUR - DS ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) ,Min( RMSe ,( DS - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.013439454963671155}, {"determining": "( FirstVNF_RAM * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( RMSe ,MUM ),RCSe ) - Min( RCSe ,RMSe ) ) + ( Min( ( ( Min( MUR ,( CS / ( DS - MUC ) ) ) * DS ) + CS ) ,CS ) - Max( MUC,MLU ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07993902547484133}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + MRS ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / ( RMSe + MLU ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.05580858088293814}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ( ( FirstVNF_CPU_Server * PN ) - MDR ) ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8452089442672981}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( RCSe * Min( ( MUM + RRSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.1634033906167332}, {"determining": "( Max( RRS,( ( FirstVNF_RAM_Server + DDR ) + Max( ( FirstVNF_CPU + BR ),Min( FirstVNF_RAM ,MDR ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( MDR + ( ACS * Max( PN,RRS ) ) ),( MRS - ( ACS * PN ) ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,DS ),MUR ) ) ) ) ) ) )", "obj1": 0.6968503937007874, "obj2": 0.14558844128179174}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5274418150156002}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( ( FirstVNF_RAM_Server + Min( AMS ,Min( FirstVNF_CPU ,ACS ) ) ) - Max( Max( DDR,Max( FirstVNF_RAM,BR ) ),( ( ( RRS / DDR ) - Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),FirstVNF_CPU_Server ) ) - ( PN * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MLU - CS ) + RCSe ) - Min( CS ,( DS * Max( ( MUM / MUR ),CS ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6293065905130435}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( DDR * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * MUC ) + ( RRSe + DS ) ),( MLU + Max( Min( RMSe ,RRSe ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.8641732283464567, "obj2": 0.048294958276765755}, {"determining": "( Max( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.2665560454526611}, {"determining": "( ( AMS * Max( FirstVNF_RAM_Server,MDR ) ) * ( MRS - AMS ) )", "choosing": "( ( ( ( ( DS * ( ( MUM + Min( CS ,CS ) ) * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( RMSe * ( ( DS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4625984251968504, "obj2": 0.32522613375749043}, {"determining": "( Max( Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + PN ) ) ),Max( RRS,MDR ) ) - CRS )", "choosing": "Min( ( ( CS - ( DS - Max( ( CS / CS ),Max( RMSe,DS ) ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS * CS ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5660552381065543}, {"determining": "( Max( ( ( AMS + DDR ) + ACS ),ACS ) * ( ( ( ( ( ( ( AMS + MDR ) + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3210089726232184}, {"determining": "( ( FirstVNF_Mem * ACS ) * ( ( ( ( ( AMS + MDR ) + Max( Max( ( ARS - BR ),FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR * ( ( RCSe / RMSe ) + DS ) ) - ( ( Max( CS,( DS + ( Max( MLU,( RCSe * CS ) ) / Min( ( MUC / DS ) ,Max( MUM,RRSe ) ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) )", "obj1": 0.4862204724409449, "obj2": 0.3080714136305302}, {"determining": "( ( ( ( ( ( AMS + ACS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( Const + MRS ) ) - MDR ) * Min( FirstVNF_Mem_Server ,( Max( ARS,ACS ) - Max( ( DDR + CRS ),FirstVNF_CPU_Server ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) + RRSe ) / RCSe ) - Min( CS ,Min( RCSe ,( MUM - Min( ( RMSe - RRSe ) ,Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.45632169842439957}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( Max( FirstVNF_CPU_Server,MDR ) + FirstVNF_RAM ) + Max( ( CRS - RRS ),( FirstVNF_CPU_Server * PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS - ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / Max( RRSe,( DS - MUM ) ) )", "obj1": 0.5787401574803149, "obj2": 0.23317073564796617}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( Max( ACS,( ( AMS + DDR ) + Max( ( ( ( Const + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ) - RRS ),Min( PN ,AMS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * BR ) - CRS ) )", "choosing": "( ( ( Max( ( DS + Min( CS ,Min( Min( MLU ,MUC ) ,CS ) ) ),CS ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( RCSe * Min( ( MUM + RRSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.9330708661417323, "obj2": 0.02543029038446557}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_CPU_Server ) * Min( ACS ,( ( ( ( DDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ) - AMS ) * FirstVNF_Mem ) ) ) - CRS ) )", "choosing": "( Min( Max( MUM,MUC ) ,MLU ) / ( Min( MUM ,RCSe ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.04235727086380719}, {"determining": "( ( ( ( ( Max( Min( Min( FirstVNF_Mem_Server ,CRS ) ,RRS ),ARS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,Max( ACS,ARS ) ) ) ) * FirstVNF_Mem ) - MDR ) * Min( ACS ,Max( DDR,( ( FirstVNF_CPU + DDR ) + PN ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( RRSe * ( ( ( ( Max( RRSe,MUM ) + RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RCSe / CS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( MUC ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5755353999536376}, {"determining": "( Max( Max( AMS,FirstVNF_CPU ),FirstVNF_Mem ) - ( MDR - AMS ) )", "choosing": "( ( ( ( RRSe + MUM ) / RRSe ) / RCSe ) - Min( CS ,( RMSe / ( MUM - Min( RCSe ,( MUC - Max( ( RRSe * MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6548670810287726}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) * ( ( ( ( ( ( FirstVNF_RAM_Server + DDR ) + Max( ( FirstVNF_CPU + BR ),Min( FirstVNF_RAM ,MDR ) ) ) * ( CRS / FirstVNF_Mem_Server ) ) - MDR ) * ( Max( RRS,Min( Max( Min( FirstVNF_CPU ,AMS ),CRS ) ,AMS ) ) * PN ) ) - CRS ) )", "choosing": "( ( ( ( ( DS / MLU ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( CS - ( MUC + MUR ) ) - MLU ) * DS ) ) )", "obj1": 0.8464566929133859, "obj2": 0.06343513128890024}, {"determining": "Max( ( Max( ( ( ( AMS + Max( Min( FirstVNF_CPU ,Const ),PN ) ) + Max( ( FirstVNF_RAM_Server - RRS ),Max( Max( FirstVNF_RAM,MDR ),FirstVNF_RAM ) ) ) * PN ),MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "Min( ( ( DS * ( ( ( CS * DS ) + MUC ) * MUM ) ) - CS ) ,( RCSe - DS ) )", "obj1": 0.8169291338582677, "obj2": 0.06656223492153039}, {"determining": "( Max( RRS,ACS ) * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( ( ARS / FirstVNF_RAM ) + FirstVNF_Mem_Server ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( MUC,RRSe ) / RMSe ) - ( Max( ( MLU - RRSe ),Max( MUM,DS ) ) - Min( RMSe ,( MUM - Min( RCSe ,( Max( ( RRSe / RMSe ),MUR ) - MUC ) ) ) ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28967732362079407}, {"determining": "( ACS - ( Min( MRS ,( BR * CRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ACS - ( AMS - ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,( ( MLU / RMSe ) / ( MLU * RMSe ) ) ) + DS ) / Min( Min( RRSe ,RCSe ) ,( ( Max( ( DS / DS ),MUC ) + ( ( RMSe / Min( CS ,MUC ) ) - ( MUC / Min( CS ,( CS / DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4763779527559055, "obj2": 0.31131578460621323}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.5787401574803149, "obj2": 0.23317073564796617}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6429233018887116}, {"determining": "( Max( Max( ( ( MDR + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + Max( ( Max( Const,FirstVNF_Mem_Server ) - RRS ),Min( MDR ,FirstVNF_CPU_Server ) ) ),( MDR / Max( AMS,AMS ) ) ),CRS ) * Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - ( CS / RRSe ) ) / RCSe ) - ( ( Min( DS ,MUM ) - CS ) / DS ) )", "obj1": 0.5610236220472441, "obj2": 0.24609021786114849}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5390133088198928}, {"determining": "( ( Max( CRS,MDR ) + ( ACS + ( Max( RRS,Min( Max( ( PN * RRS ),Const ) ,AMS ) ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + Min( ( ( RCSe / RMSe ) - Min( RRSe ,RRSe ) ) ,CS ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( ( DS / MLU ) / RMSe ) ) / ( ( MUC - Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * Min( CS ,( MLU + ( RCSe - MUR ) ) ) ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6861454821919503}, {"determining": "( Max( PN,ACS ) * ( ( ( CRS + FirstVNF_Mem ) * Min( ACS ,BR ) ) - MDR ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * MUC ) / ( ( Min( ( RCSe / MUM ) ,( MUR - RCSe ) ) / ( ( RMSe / DS ) - CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8956692913385826, "obj2": 0.040856237188203304}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( Max( MDR,DDR ) + Max( ( CRS - RRS ),MDR ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( RMSe / CS ) * Min( CS ,MUC ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) * DS ) ) )", "obj1": 0.9803149606299213, "obj2": 0.008601868195266985}, {"determining": "( Max( ( ( ( CRS * ACS ) - Min( BR ,MDR ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5279469416051673}, {"determining": "( Max( ARS,ACS ) - Max( ( MRS / ACS ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( DS - Max( Min( RMSe ,DS ),( DS + ( RCSe * ( DS / MUR ) ) ) ) ) * CS ) - CS ) ,( DS / ( Min( MUM ,( ( ( Min( CS ,RCSe ) - Min( MUM ,MLU ) ) * ( ( MUR / RMSe ) * ( RCSe - MLU ) ) ) - Min( MUC ,RMSe ) ) ) + Max( RRSe,( MUC - CS ) ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3838345635337794}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( MDR + ( ACS * Max( PN,RRS ) ) ),( MRS - ( ACS * PN ) ) ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.1554990192191329}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.4921259842519685, "obj2": 0.29927073094429013}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MRS ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - Min( RCSe ,( RRSe + Min( MUR ,RRSe ) ) ) ) / RCSe ) - Min( CS ,( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,RRSe ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.5610236220472441, "obj2": 0.24609021786114849}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * RRSe ) ) ) ) ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.4436884151674006}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ),( MRS - ( ACS * PN ) ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUR / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17393388996500114}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,Min( BR ,FirstVNF_RAM_Server ) ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( Min( RCSe ,RMSe ) + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) + ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.25, "obj2": 0.573515807392448}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Max( FirstVNF_RAM_Server,MRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( RMSe,MUR ) ) ) ) ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2575853661751257}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( FirstVNF_Mem_Server - ARS ) ) * ( ( ( ( ( Max( Const,( BR / DDR ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RCSe + DS ) ),( MLU + ( ( ( RCSe + CS ) * RRSe ) / MLU ) ) ) ) - Min( CS ,Min( RMSe ,( Min( Min( RCSe ,Max( MLU,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) - MUM ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5064550571203311}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Max( RRSe,RMSe ) ) ),( RMSe - MUR ) ) + Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( ( Max( CS,RRSe ) + ( MUR * MUR ) ) ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6496062992125984, "obj2": 0.18085488873690764}, {"determining": "( ( MDR - AMS ) - Max( Max( ( ARS * AMS ),FirstVNF_CPU ),FirstVNF_Mem ) )", "choosing": "( ( ( ( RRSe + MUM ) / RRSe ) / MUM ) - Min( CS ,( RMSe / ( MUM - Min( DS ,MLU ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4204076983595796}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) + ( ACS + Const ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * Min( CS ,( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.14960629921259844, "obj2": 0.6861742304097324}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),RRS ) * ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( DS / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6969202981483741}, {"determining": "( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( ( PN / AMS ) ,MDR ) ) ) / ACS ) * ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUM ,RRSe ) ) - Max( RCSe,Max( RCSe,DS ) ) ) ) - DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6761728365252176}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + ( ( DDR / BR ) / ( FirstVNF_Mem_Server / MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6993550290770556}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Min( Const ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe + DS ) ) ) ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.2641029627426673}, {"determining": "( Max( FirstVNF_Mem_Server,( ( AMS * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / ( Const - ( MRS - Max( DDR,MDR ) ) ) ) ) - ( Const - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( ( ( MLU - MLU ) / CS ),MLU ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RCSe * Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6650843976777163}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,MDR ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,Max( MUM,RRSe ) ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4566929133858268, "obj2": 0.3319298283314023}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5390133088198928}, {"determining": "( ( MRS - RRS ) * ( FirstVNF_Mem * ( ( ( ( ( AMS + DDR ) + Max( Min( FirstVNF_Mem_Server ,MDR ),Const ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * ( ( MLU + RRSe ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.17032928634636058}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ACS ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6383156339076617}, {"determining": "( Max( RRS,MRS ) * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( PN * Const ),BR ) / Const ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( RMSe,MUR ) ) ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08241930695325018}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + BR ) * PN ) - Max( ( ( RRS + ( BR * MDR ) ) + ( DDR * ( Const / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * MUC ) / RMSe ) * DS ) ) )", "obj1": 0.9901574803149606, "obj2": 0.0037546314891176665}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.1803039905192385}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) - Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( DDR * Max( CRS,Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "( ( CS + CS ) / ( Max( ( CS + ( MLU * MUR ) ),RMSe ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( CS / DS ) ) / ( ( MUC / ( MLU * DS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3726374908160192}], "38": [{"determining": "Max( ( FirstVNF_CPU + RRS ),( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( MUC / ( ( ( DS - ( RCSe * MUM ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( ( RCSe + ( CS + MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( ( ( ( ( Min( Min( ACS ,CRS ) ,FirstVNF_RAM_Server ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server * PN ) ) * Max( PN,ACS ) )", "choosing": "( ( MUC * ( MUR * DS ) ) / ( ( ( ( DS * ( DS / RMSe ) ) + ( ( ( ( RMSe - MLU ) / CS ) / DS ) / RRSe ) ) * MUC ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) * ( ARS * ( CRS * FirstVNF_CPU_Server ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM_Server / Max( FirstVNF_RAM,MDR ) ) ) + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ACS ) + CRS ),AMS ) ),( MRS + ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * RMSe ) ) / ( Max( ( ( DS * ( ( MUR + MUC ) * MUM ) ) + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( MLU * RMSe ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8483196834223496}, {"determining": "( ( FirstVNF_RAM + ( ACS * ( FirstVNF_Mem + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * PN ) * MDR ) )", "choosing": "( ( ( ( MUM + ( RMSe + MLU ) ) * ( DS / Min( MUC ,Max( ( Max( RRSe,DS ) + MUC ),MUR ) ) ) ) + ( MUC - Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( RCSe - MUR ) * ( Min( RRSe ,MUR ) / RRSe ) ) / ( ( ( ( MUM * CS ) * ( CS * MLU ) ) * RCSe ) - ( RCSe * MUR ) ) ) * DS ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20876858120715863}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) * ( ARS * ( CRS * FirstVNF_CPU_Server ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( RMSe / CS ) * Min( CS ,MUC ) ) * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( MUR * Min( DS ,MUM ) ) ) * DS ) ) )", "obj1": 0.59251968503937, "obj2": 0.22342340565989885}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + FirstVNF_Mem_Server ) ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - BR ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) - ( DS / RMSe ) ) / ( ( MUC + ( ( MLU * MLU ) + CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7138329183836766}, {"determining": "Max( ( Max( ( ( ( AMS + Max( Min( FirstVNF_CPU ,Const ),PN ) ) + Max( ( FirstVNF_RAM_Server - RRS ),Max( Max( FirstVNF_RAM,MDR ),FirstVNF_RAM ) ) ) * PN ),MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "Min( ( ( DS * ( ( ( CS * DS ) + MUC ) * MUM ) ) - CS ) ,( RCSe - DS ) )", "obj1": 0.8169291338582677, "obj2": 0.06656223492153039}, {"determining": "( Max( ( Min( AMS ,DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( MDR - ( ( ( AMS + FirstVNF_RAM ) + Max( ACS,BR ) ) * PN ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( ( DS / RCSe ) - ( ( CS * MUM ) / RRSe ) ) ) ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.48358615908729397}, {"determining": "( FirstVNF_RAM * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( RMSe ,MUM ),RCSe ) - Min( RCSe ,RMSe ) ) + ( Min( ( ( Min( MUR ,( CS / ( DS - MUC ) ) ) * DS ) + CS ) ,CS ) - Max( MUC,MLU ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07993902547484133}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * ( FirstVNF_Mem - Const ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( RMSe * DS ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * Min( RRSe ,MLU ) ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,( RMSe / RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6377952755905512, "obj2": 0.18791323475430105}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server * MDR ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( ( DS - Max( RCSe,Min( ( RRSe - RMSe ) ,MUC ) ) ) - ( ( MUC * ( Max( ( ( MUM / RMSe ) / MUM ),( MUR - CS ) ) + MUM ) ) - MLU ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4131093649238282}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( DDR * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * MUC ) + ( RRSe + DS ) ),( MLU + Max( Min( RMSe ,RRSe ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.8641732283464567, "obj2": 0.04825988402841709}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( MDR - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.718503937007874, "obj2": 0.12841926562072925}, {"determining": "Max( ( ACS / Max( CRS,RRS ) ),( MRS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RCSe / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * Max( Min( RCSe ,RMSe ),( MUR * Min( ( ( RMSe / RCSe ) * CS ) ,RMSe ) ) ) ) / MUC ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.820481911352113}, {"determining": "( PN - ( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( MUR * ( ( RCSe / RMSe ) - Max( DS,MUM ) ) ) ) + DS ) / ( MUC * ( ( ( ( ( Min( DS ,MUM ) + MUM ) / RRSe ) * Max( DS,( CS + ( RRSe / MLU ) ) ) ) / ( ( MUC / ( ( RMSe / DS ) / CS ) ) - Max( MUR,RCSe ) ) ) * DS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6084806348126973}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ,CS ) ,( ( Min( RCSe ,RMSe ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "( ( CRS - ( ( ( ( ( ( FirstVNF_RAM / MDR ) * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( ( ( FirstVNF_Mem_Server * ( Const + FirstVNF_Mem_Server ) ) * ARS ) / ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ACS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * PN ) ) ) ) * Max( RRS,MRS ) )", "choosing": "( Min( CS ,Min( RMSe ,( MUM - Min( ( ( MUR - RCSe ) - Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( DS + MUC ) ) ) ) ) ) ) - ( MUC - CS ) )", "obj1": 0.7322834645669292, "obj2": 0.11820470773948184}, {"determining": "( Max( Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + PN ) ) ),Max( RRS,MDR ) ) - CRS )", "choosing": "Min( ( ( CS - ( DS - Max( ( CS / CS ),Max( RMSe,DS ) ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS * CS ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5660552381065543}, {"determining": "( ( FirstVNF_RAM_Server + Min( AMS ,Min( FirstVNF_CPU ,ACS ) ) ) - Max( Max( DDR,Max( FirstVNF_RAM,BR ) ),( ( ( RRS / DDR ) - Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),FirstVNF_CPU_Server ) ) - ( PN * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MLU - CS ) + RCSe ) - Min( CS ,( DS * Max( ( MUM / MUR ),CS ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6293065905130435}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_CPU_Server ) * Min( ACS ,( ( ( ( DDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ) - AMS ) * FirstVNF_Mem ) ) ) - CRS ) )", "choosing": "( Min( Max( MUM,MUC ) ,MLU ) / ( Min( MUM ,RCSe ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.04235727086380719}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( ( ( Max( MRS,Min( FirstVNF_Mem ,MRS ) ) + MDR ) - ( FirstVNF_CPU * ( BR / ( PN * BR ) ) ) ) - Max( Max( ACS,Max( Max( MDR,DDR ),BR ) ),( FirstVNF_Mem_Server * DDR ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( ( MLU * Min( Min( Max( ( ( RRSe * MLU ) - CS ),DS ) ,MUR ) ,( ( ( Min( MUR ,DS ) * RCSe ) + Max( ( RRSe * MUR ),RRSe ) ) - ( MUC - Max( CS,( RRSe * MUM ) ) ) ) ) ) * MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.6181098641056284}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) - Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( DDR * Max( CRS,Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "( ( CS + CS ) / ( Max( ( CS + ( MLU * MUR ) ),RMSe ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( CS / DS ) ) / ( ( MUC / ( MLU * DS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3726374908160192}, {"determining": "( Max( PN,PN ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( ( MDR - MDR ) ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( RRSe / ( DS / DS ) ) + ( DS * ( DS * RMSe ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( ( DS / DS ) ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / MUM ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * ( CS / ( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38357140851882826}, {"determining": "( Max( ACS,( ( AMS + DDR ) + Max( ( ( ( Const + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ) - RRS ),Min( PN ,AMS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * BR ) - CRS ) )", "choosing": "( ( ( Max( ( DS + Min( CS ,Min( Min( MLU ,MUC ) ,CS ) ) ),CS ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( RCSe * Min( ( MUM + RRSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.9330708661417323, "obj2": 0.02543029038446557}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( ( AMS * Max( FirstVNF_RAM_Server,MDR ) ) * ( MRS - AMS ) )", "choosing": "( ( ( ( ( DS * ( ( MUM + Min( CS ,CS ) ) * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( RMSe * ( ( DS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4625984251968504, "obj2": 0.32522613375749043}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) ,( ( ( AMS + FirstVNF_RAM ) + Min( AMS ,Const ) ) * PN ) ) ) - MDR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( CS / Min( MUC ,RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( ( MUC + CS ) + MUM ) + ( MUM - Min( RCSe ,( MUC - Max( ( RMSe / CS ),MUR ) ) ) ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.13735198966928233}, {"determining": "( Max( FirstVNF_Mem_Server,( ( AMS * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / ( Const - ( MRS - Max( DDR,MDR ) ) ) ) ) - ( Const - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( ( ( MLU - MLU ) / CS ),MLU ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RCSe * Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6650843976777163}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Min( BR ,MDR ) ) ,ACS ) - ( ( FirstVNF_CPU_Server * PN ) - MDR ) ) + CRS ),AMS ) ),( MRS - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8452089442672981}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,Min( BR ,FirstVNF_RAM_Server ) ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( Min( RCSe ,RMSe ) + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) + ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.25, "obj2": 0.573515807392448}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( RCSe * Min( ( MUM + RRSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.1634033906167332}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Max( FirstVNF_RAM_Server,MRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5452755905511811, "obj2": 0.25698147900049245}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) * ( Max( ( PN * PN ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( Min( MLU ,Max( MUC,MUR ) ) / ( ( ( Min( CS ,Min( ( RCSe + Max( RMSe,MUM ) ) ,( ( RCSe / MUC ) + CS ) ) ) * RCSe ) / MUC ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.9173228346456693, "obj2": 0.031959072258495286}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / RCSe ) - Min( CS ,( RMSe * ( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.355824208870075}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( ( ( ( ( ( ( ( ARS + FirstVNF_Mem ) + AMS ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) / MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + ( ( Max( RRS,RRS ) + ACS ) - PN ) ),ACS ) )", "choosing": "( Min( ( ( ( MUR + RCSe ) * MUC ) - DS ) ,( MUC - ( MLU / MLU ) ) ) - Min( CS ,Min( RMSe ,( ( ( ( MUR - Max( MUM,MUC ) ) - MUC ) / Min( ( ( MLU / RMSe ) / ( MUR - RMSe ) ) ,MLU ) ) - Min( Min( MUC ,Max( MUR,MUR ) ) ,( CS - Max( Min( RRSe ,CS ),MUR ) ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.4970670849387067}, {"determining": "( ( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( ( PN / AMS ) ,MDR ) ) ) / ACS ) * ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUM ,RRSe ) ) - Max( RCSe,Max( RCSe,DS ) ) ) ) - DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6761728365252176}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( Max( PN,ACS ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,RCSe ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.4074803149606299, "obj2": 0.3910078283538264}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( ARS - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,ACS ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) / Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / Min( ( MUC / RRSe ) ,( RRSe + RMSe ) ) ) - Min( CS ,( Min( DS ,MUC ) * ( MUM / RRSe ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.4436884151674006}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6382701834328621}, {"determining": "( Max( Max( ( ( MDR + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + Max( ( Max( Const,FirstVNF_Mem_Server ) - RRS ),Min( MDR ,FirstVNF_CPU_Server ) ) ),( MDR / Max( AMS,AMS ) ) ),CRS ) * Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - ( CS / RRSe ) ) / RCSe ) - ( ( Min( DS ,MUM ) - CS ) / DS ) )", "obj1": 0.5610236220472441, "obj2": 0.24609021786114849}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MRS ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - Min( RCSe ,( RRSe + Min( MUR ,RRSe ) ) ) ) / RCSe ) - Min( CS ,( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,RRSe ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.5610236220472441, "obj2": 0.24609021786114849}, {"determining": "( Max( PN,ACS ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.38779527559055116, "obj2": 0.420309440716813}, {"determining": "( ( MRS - RRS ) * ( FirstVNF_Mem * ( ( ( ( ( AMS + DDR ) + Max( Min( FirstVNF_Mem_Server ,MDR ),Const ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * ( ( MLU + RRSe ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.17032928634636058}, {"determining": "( ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * ( MLU - RRSe ) ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4744094488188976, "obj2": 0.31267716059701395}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5241887184025232}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( Max( FirstVNF_CPU_Server,MDR ) + FirstVNF_RAM ) + Max( ( CRS - RRS ),( FirstVNF_CPU_Server * PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS - ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / Max( RRSe,( DS - MUM ) ) )", "obj1": 0.5787401574803149, "obj2": 0.23317073564796617}, {"determining": "( Max( MDR,ACS ) * ( CRS - ( Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( DS * ( RMSe * DS ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / ( RMSe / CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RRSe / ( RRSe + MUR ) ) ) ) ) * DS ) ) )", "obj1": 0.13976377952755906, "obj2": 0.6944811143868714}, {"determining": "( Max( PN,DDR ) * ( ( ACS + BR ) * ACS ) )", "choosing": "( ( ( ( Min( DS ,MLU ) + Max( ( DS / DS ),RRSe ) ) * RMSe ) + DS ) / ( MUC * ( ( MUR * ( ( RMSe * DS ) * Min( ( RMSe - ( DS - MUR ) ) ,RRSe ) ) ) * DS ) ) )", "obj1": 0.5787401574803149, "obj2": 0.23317073564796617}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( FirstVNF_Mem_Server - ARS ) ) * ( ( ( ( ( Max( Const,( BR / DDR ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RCSe + DS ) ),( MLU + ( ( ( RCSe + CS ) * RRSe ) / MLU ) ) ) ) - Min( CS ,Min( RMSe ,( Min( Min( RCSe ,Max( MLU,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) - MUM ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5064550571203311}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ARS ),RRS ) * ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * ACS ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) / ( ( MUC / Min( ( DS / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6607530294848785}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( Max( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) / RRSe ) * ( DS / RMSe ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5255905511811023, "obj2": 0.2750255297203233}, {"determining": "( FirstVNF_RAM * ( ( ( ( ( Max( MDR,( FirstVNF_CPU - CRS ) ) + Max( ( CRS * ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) / PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ARS / RRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / CS ) ) / ( Min( ( RMSe / MLU ) ,( Min( CS ,RRSe ) + MLU ) ) - ( ( RMSe / CS ) * ( MUM * Min( CS ,RCSe ) ) ) ) ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.08963033803873457}, {"determining": "( ( ( ( ( Max( Min( Min( FirstVNF_Mem_Server ,CRS ) ,RRS ),ARS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,Max( ACS,ARS ) ) ) ) * FirstVNF_Mem ) - MDR ) * Min( ACS ,Max( DDR,( ( FirstVNF_CPU + DDR ) + PN ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( RRSe * ( ( ( ( Max( RRSe,MUM ) + RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RCSe / CS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( MUC ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5755353999536376}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) * ( ( ( ( ( ( FirstVNF_RAM_Server + DDR ) + Max( ( FirstVNF_CPU + BR ),Min( FirstVNF_RAM ,MDR ) ) ) * ( CRS / FirstVNF_Mem_Server ) ) - MDR ) * ( Max( RRS,Min( Max( Min( FirstVNF_CPU ,AMS ),CRS ) ,AMS ) ) * PN ) ) - CRS ) )", "choosing": "( ( ( ( ( DS / MLU ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( CS - ( MUC + MUR ) ) - MLU ) * DS ) ) )", "obj1": 0.8464566929133859, "obj2": 0.06343513128890024}, {"determining": "( ACS - Max( Max( DDR,Max( FirstVNF_RAM,BR ) ),( ( Max( FirstVNF_Mem_Server,ACS ) - Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( Max( ( MLU - RRSe ),Max( MUM,DS ) ) ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.596490190497557}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( Const - ACS ) + FirstVNF_Mem ) ) - DDR ) * ( FirstVNF_Mem_Server - ARS ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,( MUM - Max( ( ( RMSe - MUC ) + MUM ),MLU ) ) ) / RRSe ) / RCSe ) - Min( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - Max( ( ( CS / RMSe ) + ( DS + RRSe ) ),( ( ( MUR - DS ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) ,Min( RMSe ,( DS - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.013439454963671155}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * RRSe ) ) ) ) ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.4436884151674006}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * ( ( Min( ACS ,FirstVNF_RAM ) + ( ( PN * ( ( ( MDR * Const ) - FirstVNF_CPU ) / MRS ) ) - MDR ) ) - PN ) )", "choosing": "( ( ( ( ( DS * ( DS / RMSe ) ) + ( RRSe / ( ( Min( MUR ,DS ) / CS ) / MUR ) ) ) * MUC ) + DS ) / ( MLU * Max( ( ( Max( ( CS / MLU ),MUC ) + ( RMSe + ( ( MUM * MLU ) * MUC ) ) ) + Min( MUR ,CS ) ),( RMSe / MLU ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09747186101385884}, {"determining": "( ( Max( CRS,MDR ) + ( ACS + ( Max( RRS,Min( Max( ( PN * RRS ),Const ) ,AMS ) ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + Min( ( ( RCSe / RMSe ) - Min( RRSe ,RRSe ) ) ,CS ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( ( DS / MLU ) / RMSe ) ) / ( ( MUC - Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * Min( CS ,( MLU + ( RCSe - MUR ) ) ) ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6861454821919503}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "( Max( ( FirstVNF_Mem_Server - MRS ),MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( MDR + ( ACS * Max( PN,RRS ) ) ),( MRS - ( ACS * PN ) ) ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( MLU,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.1497552560494999}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + MRS ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / ( RMSe + MLU ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.05580858088293814}, {"determining": "( ( FirstVNF_Mem * ACS ) * ( ( ( ( ( AMS + MDR ) + Max( Max( ( ARS - BR ),FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,MDR ) ) ) + PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR * ( ( RCSe / RMSe ) + DS ) ) - ( ( Max( CS,( DS + ( Max( MLU,( RCSe * CS ) ) / Min( ( MUC / DS ) ,Max( MUM,RRSe ) ) ) ) ) - Min( RCSe ,RRSe ) ) / RCSe ) )", "obj1": 0.4862204724409449, "obj2": 0.3080714136305302}, {"determining": "( ( CRS - ( ( ( ( RRS + FirstVNF_CPU_Server ) - MDR ) - ( ACS - FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem / ( MRS + Max( RRS,CRS ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUC ) / RCSe ) - ( ( ( ( ( RCSe + RMSe ) + Max( CS,Max( MUM,Min( RRSe ,MUR ) ) ) ) / RRSe ) * ( MUR - RCSe ) ) / ( ( MUC - Min( ( RMSe / DS ) ,MUR ) ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01876630724433797}, {"determining": "( Max( RRS,MRS ) * ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( PN * Const ),BR ) / Const ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,DS ),MUR ) ) ) ) ) ) )", "obj1": 0.7755905511811023, "obj2": 0.08517332112165221}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( ( MUR + MUR ) ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / ( ( MUC / DS ) - ( ( MUM - Max( Min( RCSe ,MUC ),MUR ) ) + RMSe ) ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.43700787401574803, "obj2": 0.36087274740852965}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5390133088198928}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ( AMS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5936968729727383}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( ARS ,PN ) ) ) ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( Min( AMS ,FirstVNF_RAM_Server ),AMS ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * ( MUR - MUC ) ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RRSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5316302205801141}, {"determining": "( Max( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.2665560454526611}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5120412824422957}, {"determining": "( Max( PN,ACS ) * ( Min( ( ( ( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + BR ) * PN ) - MDR ) ,Min( FirstVNF_Mem_Server ,ACS ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( ( ( RRSe - MLU ) - Max( MUM,DS ) ) ,Min( RMSe ,( MUM - Min( ( ( ( MUR + CS ) / MUC ) + Min( MLU ,( RMSe / RCSe ) ) ) ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28967732362079407}, {"determining": "( ( ( FirstVNF_Mem + ( FirstVNF_RAM_Server * PN ) ) / ( Const + FirstVNF_Mem ) ) * ( ( ( MDR - ( ( ( FirstVNF_CPU - ARS ) * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,RRS ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ) * Max( CRS,( ( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),FirstVNF_RAM ) + MRS ) / FirstVNF_CPU_Server ) ) ) - CRS ) )", "choosing": "( ( RCSe / ( RRSe / ( Min( MUC ,MLU ) - CS ) ) ) - Min( ( MUC * ( RMSe * MUC ) ) ,Min( Min( MUM ,CS ) ,( MUM - Min( ( ( ( CS + DS ) + CS ) + Max( Max( MUR,DS ),Max( MUR,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.11314071514731507}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( Max( ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( FirstVNF_RAM + AMS ) + Max( ( MRS * RRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * PN ) - MDR ) * ( ( Const + ( ( FirstVNF_Mem_Server * Min( CRS ,Const ) ) * PN ) ) / AMS ) ) - ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( CS + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,MUR ) ) - Max( RCSe,MUR ) ) ) * Min( ( Max( MUM,CS ) + ( ( RCSe - MLU ) - ( RMSe + RMSe ) ) ) ,MLU ) ) ) )", "obj1": 0.6988188976377953, "obj2": 0.14245111879172184}, {"determining": "( Max( RRS,ACS ) * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( ( ARS / FirstVNF_RAM ) + FirstVNF_Mem_Server ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( Max( MUC,RRSe ) / RMSe ) - ( Max( ( MLU - RRSe ),Max( MUM,DS ) ) - Min( RMSe ,( MUM - Min( RCSe ,( Max( ( RRSe / RMSe ),MUR ) - MUC ) ) ) ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28967732362079407}, {"determining": "( Max( PN,ACS ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,RCSe ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.4074803149606299, "obj2": 0.3910078283538264}, {"determining": "( ( ( ( ( ( AMS + ACS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( Const + MRS ) ) - MDR ) * Min( FirstVNF_Mem_Server ,( Max( ARS,ACS ) - Max( ( DDR + CRS ),FirstVNF_CPU_Server ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) + RRSe ) / RCSe ) - Min( CS ,Min( RCSe ,( MUM - Min( ( RMSe - RRSe ) ,Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.45632169842439957}, {"determining": "( Max( RRS,( ( FirstVNF_RAM_Server + DDR ) + Max( ( FirstVNF_CPU + BR ),Min( FirstVNF_RAM ,MDR ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + ( CRS * ACS ) ) * PN ) - MDR ) * Max( ( MDR + ( ACS * Max( PN,RRS ) ) ),( MRS - ( ACS * PN ) ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( RRSe / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,DS ),MUR ) ) ) ) ) ) )", "obj1": 0.9606299212598425, "obj2": 0.015518792462642927}, {"determining": "( Max( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5196850393700787, "obj2": 0.2803087045280223}, {"determining": "( ( ( MRS - FirstVNF_RAM_Server ) + ( ACS + Const ) ) - Max( FirstVNF_Mem,( DDR - CRS ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) * ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( MUC - MUM ) * Min( CS ,( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.14960629921259844, "obj2": 0.6861742304097324}, {"determining": "( Max( PN,ACS ) * ( ( ( CRS + FirstVNF_Mem ) * Min( ACS ,BR ) ) - MDR ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * MUC ) / ( ( Min( ( RCSe / MUM ) ,( MUR - RCSe ) ) / ( ( RMSe / DS ) - CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8956692913385826, "obj2": 0.040856237188203304}, {"determining": "( ( ( ( ( Max( Max( ( DDR / FirstVNF_Mem_Server ),FirstVNF_CPU ),AMS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - BR ) * Max( FirstVNF_Mem,( ( PN + FirstVNF_RAM ) + CRS ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( MUC / MUC ) * MUC ) - DS ) / ( MUC * ( ( ( MLU - ( Max( MLU,RCSe ) * CS ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5851198582832301}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * FirstVNF_RAM ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.31299212598425197, "obj2": 0.49743647744115427}, {"determining": "( Max( RRS,( ( FirstVNF_RAM_Server + ( Max( Min( FirstVNF_Mem ,ACS ),RRS ) * ( Max( ( PN * Const ),BR ) / Const ) ) ) + Max( ( FirstVNF_CPU + BR ),Min( FirstVNF_RAM ,MDR ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Max( ( MDR + ( ACS * Max( PN,RRS ) ) ),( MRS - ( ACS * PN ) ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( MUM,MUR ) ) ) ) ) ) )", "obj1": 0.6968503937007874, "obj2": 0.14522328686886574}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + BR ) * PN ) - MDR ) * Min( Min( FirstVNF_CPU_Server ,BR ) ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( Max( RCSe,( RMSe / ( RRSe + CS ) ) ) / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( RCSe - MUR ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.9015748031496063, "obj2": 0.03822289116572447}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( DS / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6429233018887116}], "39": [{"determining": "( PN - Max( ( Const + FirstVNF_Mem_Server ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Min( Min( ACS ,CRS ) ,FirstVNF_RAM_Server ) * PN ) - MDR ) * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server * PN ) ) * Max( PN,ACS ) )", "choosing": "( ( MUC * ( MUR * DS ) ) / ( ( ( ( DS * ( DS / RMSe ) ) + ( ( ( ( RMSe - MLU ) / CS ) / DS ) / RRSe ) ) * MUC ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + Min( MRS ,MDR ) ),( RRS / ( ARS - MRS ) ) )", "choosing": "( ( MUC / ( Min( ( Min( Max( RRSe,( DS * DS ) ) ,CS ) + ( MUM / ( MUM + CS ) ) ) ,CS ) * DS ) ) / ( Max( ( DS - MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( Min( ( MLU / ( MUR / Min( Max( RCSe,RCSe ) ,( CS / CS ) ) ) ) ,RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8473084721343253}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),( MDR - RRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / ( RMSe / ( RRSe + CS ) ) ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.59251968503937, "obj2": 0.22209909865221045}, {"determining": "Max( ( Max( ( ( ( AMS + Max( Min( FirstVNF_CPU ,Const ),PN ) ) + Max( ( FirstVNF_RAM_Server - RRS ),Max( Max( FirstVNF_RAM,MDR ),FirstVNF_RAM ) ) ) * PN ),MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "Min( ( ( DS * ( ( ( CS * DS ) + MUC ) * MUM ) ) - CS ) ,( RCSe - DS ) )", "obj1": 0.8169291338582677, "obj2": 0.06656223492153039}, {"determining": "( ( FirstVNF_RAM + ( ACS * ( FirstVNF_Mem + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * PN ) * MDR ) )", "choosing": "( ( ( ( MUM + ( RMSe + MLU ) ) * ( DS / Min( MUC ,Max( ( Max( RRSe,DS ) + MUC ),MUR ) ) ) ) + ( MUC - Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( RCSe - MUR ) * ( Min( RRSe ,MUR ) / RRSe ) ) / ( ( ( ( MUM * CS ) * ( CS * MLU ) ) * RCSe ) - ( RCSe * MUR ) ) ) * DS ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20876858120715863}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + PN ) ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( BR ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7138329183836766}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "( FirstVNF_RAM * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( RMSe ,MUM ),RCSe ) - Min( RCSe ,RMSe ) ) + ( Min( ( ( Min( MUR ,( CS / ( DS - MUC ) ) ) * DS ) + CS ) ,CS ) - Max( MUC,MLU ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07993902547484133}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MRS ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.6496062992125984, "obj2": 0.18668623273050727}, {"determining": "( Max( ( ( Const - RRS ) * MDR ),FirstVNF_CPU ) * ( Min( MDR ,( FirstVNF_RAM / FirstVNF_CPU ) ) - ( ( ( ( Max( MDR,( ARS - CRS ) ) / FirstVNF_RAM_Server ) * PN ) - RRS ) * Max( FirstVNF_CPU,Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( Min( ( MUR + MUC ) ,( Min( RCSe ,RCSe ) - RCSe ) ) / ( MUC * RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.012194458505720889}, {"determining": "( ( DDR + MRS ) * ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( Max( ( CS * ( MLU * MUM ) ),( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Min( RCSe ,Max( RCSe,Min( RCSe ,DS ) ) ) ) ) * ( RCSe * RRSe ) ) ) )", "obj1": 0.5196850393700787, "obj2": 0.2741887782786079}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ,CS ) ,( ( Min( RCSe ,RMSe ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "Max( ( ACS / Max( CRS,RRS ) ),( MRS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RCSe / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * Max( Min( RCSe ,RMSe ),( MUR * Min( ( ( RMSe / RCSe ) * CS ) ,RMSe ) ) ) ) / MUC ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.820481911352113}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( DDR * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * MUC ) + ( RRSe + DS ) ),( MLU + Max( Min( RMSe ,RRSe ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.8641732283464567, "obj2": 0.04825988402841709}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) - Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( DDR * Max( CRS,Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "( ( CS + CS ) / ( Max( ( CS + ( MLU * MUR ) ),RMSe ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( CS / DS ) ) / ( ( MUC / ( MLU * DS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3726374908160192}, {"determining": "( ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * ( MLU - RRSe ) ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4744094488188976, "obj2": 0.31267716059701395}, {"determining": "( ( ( Max( MRS,Min( FirstVNF_Mem ,MRS ) ) + MDR ) - ( FirstVNF_CPU * ( BR / ( PN * BR ) ) ) ) - Max( Max( ACS,Max( Max( MDR,DDR ),BR ) ),( FirstVNF_Mem_Server * DDR ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( ( MLU * Min( Min( Max( ( ( RRSe * MLU ) - CS ),DS ) ,MUR ) ,( ( ( Min( MUR ,DS ) * RCSe ) + Max( ( RRSe * MUR ),RRSe ) ) - ( MUC - Max( CS,( RRSe * MUM ) ) ) ) ) ) * MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.6181098641056284}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( MDR - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.718503937007874, "obj2": 0.12841926562072925}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( PN - ( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( MUR * ( ( RCSe / RMSe ) - Max( DS,MUM ) ) ) ) + DS ) / ( MUC * ( ( ( ( ( Min( DS ,MUM ) + MUM ) / RRSe ) * Max( DS,( CS + ( RRSe / MLU ) ) ) ) / ( ( MUC / ( ( RMSe / DS ) / CS ) ) - Max( MUR,RCSe ) ) ) * DS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6084806348126973}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) ,( ( ( AMS + FirstVNF_RAM ) + Min( AMS ,Const ) ) * PN ) ) ) - MDR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( CS / Min( MUC ,RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( ( MUC + CS ) + MUM ) + ( MUM - Min( RCSe ,( MUC - Max( ( RMSe / CS ),MUR ) ) ) ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.13735198966928233}, {"determining": "( Max( PN,PN ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( ( MDR - MDR ) ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( RRSe / ( DS / DS ) ) + ( DS * ( DS * RMSe ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( ( DS / DS ) ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / MUM ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * ( CS / ( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38357140851882826}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) * ( Max( ( PN * PN ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( Min( MLU ,Max( MUC,MUR ) ) / ( ( ( Min( CS ,Min( ( RCSe + Max( RMSe,MUM ) ) ,( ( RCSe / MUC ) + CS ) ) ) * RCSe ) / MUC ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.9173228346456693, "obj2": 0.031959072258495286}, {"determining": "( Max( PN,ACS ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4038772324442251}, {"determining": "( Max( ( ( DDR + AMS ) + Max( ( Min( Min( ( MDR * Const ) ,( PN - MDR ) ) ,Min( RRS ,AMS ) ) * ( ( AMS - ARS ) / BR ) ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) ) ) - CRS ) )", "choosing": "( ( MUC - DS ) - ( CS / ( ( RRSe - DS ) * ( ( CS + ( MUM - ( RRSe / ( CS * MUM ) ) ) ) - MUM ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.3549551372186988}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Max( FirstVNF_RAM_Server,RRS ) ) ,ACS ) - Min( ( FirstVNF_CPU_Server * PN ) ,MDR ) ) + CRS ),AMS ) ),( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ) - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( DS / MUM ) - ( CS + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + Min( MUR ,MUR ) ) / ( CS - DS ) ) ) + ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8432782116452626}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( ( ( ( ( ( ( ( ARS + FirstVNF_Mem ) + AMS ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) / MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + ( ( Max( RRS,RRS ) + ACS ) - PN ) ),ACS ) )", "choosing": "( Min( ( ( ( MUR + RCSe ) * MUC ) - DS ) ,( MUC - ( MLU / MLU ) ) ) - Min( CS ,Min( RMSe ,( ( ( ( MUR - Max( MUM,MUC ) ) - MUC ) / Min( ( ( MLU / RMSe ) / ( MUR - RMSe ) ) ,MLU ) ) - Min( Min( MUC ,Max( MUR,MUR ) ) ,( CS - Max( Min( RRSe ,CS ),MUR ) ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.4970670849387067}, {"determining": "( Max( ( Min( AMS ,DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( MDR - ( ( ( AMS + FirstVNF_RAM ) + Max( ACS,BR ) ) * PN ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( ( DS / RCSe ) - ( ( CS * MUM ) / RRSe ) ) ) ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.48358615908729397}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( ( ( ( ( ( AMS + ACS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( Const + MRS ) ) - MDR ) * Min( FirstVNF_Mem_Server ,( Max( ARS,ACS ) - Max( ( DDR + CRS ),FirstVNF_CPU_Server ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) + RRSe ) / RCSe ) - Min( CS ,Min( RCSe ,( MUM - Min( ( RMSe - RRSe ) ,Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.45632169842439957}, {"determining": "( ( ( ( ( Max( Max( ( DDR / FirstVNF_Mem_Server ),FirstVNF_CPU ),AMS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - BR ) * Max( FirstVNF_Mem,( ( PN + FirstVNF_RAM ) + CRS ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( MUC / MUC ) * MUC ) - DS ) / ( MUC * ( ( ( MLU - ( Max( MLU,RCSe ) * CS ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5851198582832301}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Max( FirstVNF_RAM_Server,MRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5452755905511811, "obj2": 0.25698147900049245}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( ARS - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3270290741677939}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + MRS ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / ( RMSe + MLU ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.05580858088293814}, {"determining": "( Max( ( ( AMS * FirstVNF_RAM_Server ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( RRSe / ( DS / DS ) ) ) * MUC ) + RMSe ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / RRSe ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5118196131471576}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * ( ( Min( ACS ,FirstVNF_RAM ) + ( ( PN * ( ( ( MDR * Const ) - FirstVNF_CPU ) / MRS ) ) - MDR ) ) - PN ) )", "choosing": "( ( ( ( ( DS * ( DS / RMSe ) ) + ( RRSe / ( ( Min( MUR ,DS ) / CS ) / MUR ) ) ) * MUC ) + DS ) / ( MLU * Max( ( ( Max( ( CS / MLU ),MUC ) + ( RMSe + ( ( MUM * MLU ) * MUC ) ) ) + Min( MUR ,CS ) ),( RMSe / MLU ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09747186101385884}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( FirstVNF_Mem_Server - ARS ) ) * ( ( ( ( ( Max( Const,( BR / DDR ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RCSe + DS ) ),( MLU + ( ( ( RCSe + CS ) * RRSe ) / MLU ) ) ) ) - Min( CS ,Min( RMSe ,( Min( Min( RCSe ,Max( MLU,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) - MUM ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5064550571203311}, {"determining": "( ( AMS * Max( FirstVNF_RAM_Server,MDR ) ) * ( MRS - AMS ) )", "choosing": "( ( ( ( ( DS * ( ( MUM + Min( CS ,CS ) ) * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( RMSe * ( ( DS / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4625984251968504, "obj2": 0.32522613375749043}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + FirstVNF_Mem_Server ) ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - BR ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) - ( DS / RMSe ) ) / ( ( MUC + ( ( MLU * MLU ) + CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7138329183836766}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( Max( PN,ACS ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4109449179298463}, {"determining": "( Max( Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + PN ) ) ),Max( RRS,MDR ) ) - CRS )", "choosing": "Min( ( ( CS - ( DS - Max( ( CS / CS ),Max( RMSe,DS ) ) ) ) - CS ) ,( DS / ( CS + Max( RRSe,( CS * CS ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5660552381065543}, {"determining": "( ( ( FirstVNF_Mem + ( FirstVNF_RAM_Server * PN ) ) / ( Const + FirstVNF_Mem ) ) * ( ( ( MDR - ( ( ( FirstVNF_CPU - ARS ) * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,RRS ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ) * Max( CRS,( ( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),FirstVNF_RAM ) + MRS ) / FirstVNF_CPU_Server ) ) ) - CRS ) )", "choosing": "( ( RCSe / ( RRSe / ( Min( MUC ,MLU ) - CS ) ) ) - Min( ( MUC * ( RMSe * MUC ) ) ,Min( Min( MUM ,CS ) ,( MUM - Min( ( ( ( CS + DS ) + CS ) + Max( Max( MUR,DS ),Max( MUR,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.11314071514731507}, {"determining": "( ( MRS - RRS ) * ( FirstVNF_Mem * ( ( ( ( ( FirstVNF_Mem + DDR ) + Max( Min( MDR ,FirstVNF_Mem_Server ),Const ) ) * PN ) - MDR ) * Min( ACS ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) / ( RRSe + DS ) ),( MUM + DS ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.17031487137645837}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( ( RMSe / DS ) ,CS ) + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * MUC ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * MUC ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.6240157480314961, "obj2": 0.20084811431410776}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( MRS - ARS ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.281496062992126, "obj2": 0.5292234507192295}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( DS / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6429233018887116}, {"determining": "( ( ( ( ( Max( Min( Min( FirstVNF_Mem_Server ,CRS ) ,RRS ),ARS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,Max( ACS,ARS ) ) ) ) * FirstVNF_Mem ) - MDR ) * Min( ACS ,Max( DDR,( ( FirstVNF_CPU + DDR ) + PN ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( RRSe * ( ( ( ( Max( RRSe,MUM ) + RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RCSe / CS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( MUC ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5755353999536376}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( Max( ( MLU - RRSe ),Max( MUM,DS ) ) ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.29720308746706564}, {"determining": "( Max( PN,ACS ) * ( ( ( CRS + FirstVNF_Mem ) * Min( ACS ,BR ) ) - MDR ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * MUC ) / ( ( Min( ( RCSe / MUM ) ,( MUR - RCSe ) ) / ( ( RMSe / DS ) - CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8956692913385826, "obj2": 0.040856237188203304}, {"determining": "( ( ( ( ( Max( Min( Min( FirstVNF_Mem_Server ,CRS ) ,RRS ),ARS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,Max( DDR,( ( FirstVNF_CPU + DDR ) + PN ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Max( RRSe,MUM ) + RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RCSe / CS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RCSe ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4862204724409449, "obj2": 0.3022300109832848}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS / RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * Min( ACS ,( AMS + ( RRS + Min( MRS ,Min( MDR ,AMS ) ) ) ) ) ) - CRS ) )", "choosing": "( ( MUC * ( ( ( Max( Min( RRSe ,MUM ),RRSe ) * ( DS / ( CS / RMSe ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) / ( ( MUR - CS ) + DS ) )", "obj1": 0.13976377952755906, "obj2": 0.6944811143868714}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( MDR - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.7283464566929134, "obj2": 0.12213027276485401}, {"determining": "( ( MRS - RRS ) * ( CRS * ( ( ( ( ( AMS + DDR ) + Max( Const,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( ( DS / MLU ) / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * Min( CS ,( MLU + ( RCSe - MUR ) ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.15663109858260266}, {"determining": "( ( CRS - ( ( ( ( RRS + FirstVNF_CPU_Server ) - MDR ) - ( ACS - FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem / ( MRS + Max( RRS,CRS ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUC ) / RCSe ) - ( ( ( ( ( RCSe + RMSe ) + Max( CS,Max( MUM,Min( RRSe ,MUR ) ) ) ) / RRSe ) * ( MUR - RCSe ) ) / ( ( MUC - Min( ( RMSe / DS ) ,MUR ) ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01876630724433797}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,Min( BR ,FirstVNF_RAM_Server ) ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( Min( RCSe ,RMSe ) + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) + ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.25, "obj2": 0.573515807392448}, {"determining": "( ( FirstVNF_RAM_Server + Min( AMS ,Min( FirstVNF_CPU ,ACS ) ) ) - Max( Max( DDR,Max( FirstVNF_RAM,BR ) ),( ( ( RRS / DDR ) - Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),FirstVNF_CPU_Server ) ) - ( PN * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MLU - CS ) + RCSe ) - Min( CS ,( DS * Max( ( MUM / MUR ),CS ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6293065905130435}, {"determining": "( ( CRS - ( ( ( ( ( ( FirstVNF_RAM / MDR ) * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( ( ( FirstVNF_Mem_Server * ( Const + FirstVNF_Mem_Server ) ) * ARS ) / ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ACS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * PN ) ) ) ) * Max( RRS,MRS ) )", "choosing": "( Min( CS ,Min( RMSe ,( MUM - Min( ( ( MUR - RCSe ) - Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( DS + MUC ) ) ) ) ) ) ) - ( MUC - CS ) )", "obj1": 0.7322834645669292, "obj2": 0.11820470773948184}, {"determining": "( ( Max( CRS,MRS ) + ( ACS + ( Max( RRS,Min( Max( Const,( MDR * RRS ) ) ,AMS ) ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * ( ( MLU + RRSe ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6554983145355154}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_CPU_Server ) * Min( ACS ,( ( ( ( DDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ) - AMS ) * FirstVNF_Mem ) ) ) - CRS ) )", "choosing": "( Min( Max( MUM,MUC ) ,MLU ) / ( Min( MUM ,RCSe ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.04235727086380719}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * ( FirstVNF_Mem - Const ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( RMSe * DS ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * Min( RRSe ,MLU ) ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,( RMSe / RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6377952755905512, "obj2": 0.18791323475430105}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.4822834645669291, "obj2": 0.30960050916300297}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( Max( Max( ( ( MDR + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + Max( ( Max( Const,FirstVNF_Mem_Server ) - RRS ),Min( MDR ,FirstVNF_CPU_Server ) ) ),( MDR / Max( AMS,AMS ) ) ),CRS ) * Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - ( CS / RRSe ) ) / RCSe ) - ( ( Min( DS ,MUM ) - CS ) / DS ) )", "obj1": 0.5610236220472441, "obj2": 0.24609021786114849}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ACS,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.48358615908729397}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( DDR * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( MUC + Max( MUC,RMSe ) ) / ( CS * ( RCSe / ( ( RRSe * MLU ) * CS ) ) ) ) / RRSe )", "obj1": 0.8779527559055118, "obj2": 0.046051635969228746}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ( AMS + FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( DS / DS ) / RRSe ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5662697485727847}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5241887184025232}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ACS + FirstVNF_RAM ) + Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * Min( RCSe ,Max( MUR,MUR ) ) ) ) )", "obj1": 0.5688976377952756, "obj2": 0.23960297100394745}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( ARS - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,ACS ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) / Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / Min( ( MUC / RRSe ) ,( RRSe + RMSe ) ) ) - Min( CS ,( Min( DS ,MUC ) * ( MUM / RRSe ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.4436884151674006}, {"determining": "( CRS * ( ( ( ( AMS + DDR ) + Max( Max( Const,( FirstVNF_Mem / FirstVNF_Mem_Server ) ),Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) * MDR ) )", "choosing": "( ( ( RCSe * ( Min( RRSe ,MUM ) / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( DS * ( ( ( Min( RRSe ,MUR ) / RRSe ) * Max( MUM,DS ) ) / ( ( MUC / Min( ( RMSe / MUC ) ,CS ) ) - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4175384681202002}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ( AMS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6000982900272923}, {"determining": "( Max( PN,ACS ) * ( Min( ( ( ( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + BR ) * PN ) - MDR ) ,Min( FirstVNF_Mem_Server ,ACS ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( ( ( RRSe - MLU ) - Max( MUM,DS ) ) ,Min( RMSe ,( MUM - Min( ( ( ( MUR + CS ) / MUC ) + Min( MLU ,( RMSe / RCSe ) ) ) ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28967732362079407}, {"determining": "( Max( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,DS ),MUR ) ) ) ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.2640106540289849}, {"determining": "( Max( ACS,( ( AMS + DDR ) + Max( ( ( ( Const + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ) - RRS ),Min( PN ,AMS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * BR ) - CRS ) )", "choosing": "( ( ( Max( ( DS + Min( CS ,Min( Min( MLU ,MUC ) ,CS ) ) ),CS ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( RCSe * Min( ( MUM + RRSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.9330708661417323, "obj2": 0.02543029038446557}, {"determining": "( Max( ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( FirstVNF_RAM + AMS ) + Max( ( MRS * RRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * PN ) - MDR ) * ( ( Const + ( ( FirstVNF_Mem_Server * Min( CRS ,Const ) ) * PN ) ) / AMS ) ) - ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( CS + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,MUR ) ) - Max( RCSe,MUR ) ) ) * Min( ( Max( MUM,CS ) + ( ( RCSe - MLU ) - ( RMSe + RMSe ) ) ) ,MLU ) ) ) )", "obj1": 0.6988188976377953, "obj2": 0.14245111879172184}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * RRSe ) ) ) ) ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.4436884151674006}, {"determining": "( Max( ( ( ( CRS + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / CS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5275590551181102, "obj2": 0.2709917933546493}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( Max( ( MLU - RRSe ),Max( MUM,DS ) ) ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( RRSe,MUR ) ) ) ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29250224733777186}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MRS ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - Min( RCSe ,( RRSe + Min( MUR ,RRSe ) ) ) ) / RCSe ) - Min( CS ,( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,RRSe ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.5610236220472441, "obj2": 0.24609021786114849}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.36023622047244097, "obj2": 0.44596089605964134}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( Const - ACS ) + FirstVNF_Mem ) ) - DDR ) * ( FirstVNF_Mem_Server - ARS ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,( MUM - Max( ( ( RMSe - MUC ) + MUM ),MLU ) ) ) / RRSe ) / RCSe ) - Min( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - Max( ( ( CS / RMSe ) + ( DS + RRSe ) ),( ( ( MUR - DS ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) ,Min( RMSe ,( DS - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.013439454963671155}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) / RRSe ) * ( DS / RMSe ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.297244094488189, "obj2": 0.5236784627829185}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5390133088198928}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ( FirstVNF_Mem + Max( DDR,Const ) ) ),RRS ) * ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * ACS ) - FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,ACS ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( ( ( ( MLU + Max( MUC,( RCSe - CS ) ) ) / ( ( ( DS - RRSe ) - RCSe ) / RRSe ) ) + CS ),MUR ) + ( ( ( ( MUR / Min( MUR ,RCSe ) ) * RRSe ) + RRSe ) / RCSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.6942292145269524}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "( ( FirstVNF_CPU_Server - Max( ARS,FirstVNF_Mem ) ) * Max( ( ( AMS + DDR ) + Max( ( Const - RRS ),Min( ( FirstVNF_RAM_Server - Const ) ,FirstVNF_CPU_Server ) ) ),ACS ) )", "choosing": "( ( ( Max( ( DS + Min( RCSe ,RMSe ) ),CS ) - Min( RCSe ,RRSe ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - Min( ( DS * MUR ) ,( MUR / MUC ) ) ) ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6621065699055066}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * FirstVNF_RAM ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.31299212598425197, "obj2": 0.49743647744115427}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6292393547279752}, {"determining": "( ( Max( CRS,MRS ) + ( ACS + ( Max( RRS,Min( Max( Const,( MDR * RRS ) ) ,AMS ) ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) - Max( FirstVNF_Mem,Max( MRS,( DDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( ( DS / MLU ) / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * MUM ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6689915161474291}], "40": [{"determining": "( Max( PN,ACS ) * Max( PN,( PN + FirstVNF_CPU ) ) )", "choosing": "( ( MUC * ( MUR * DS ) ) / ( ( ( ( DS * ( DS / RMSe ) ) + ( RRSe / ( ( ( RMSe - MLU ) / ( MLU * MUC ) ) / DS ) ) ) * MUC ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - Max( ( Const + FirstVNF_Mem_Server ),Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + Min( MRS ,MDR ) ),( RRS / ( ARS - MRS ) ) )", "choosing": "( ( MUC / ( Min( ( Min( Max( RRSe,( DS * DS ) ) ,CS ) + ( MUM / ( MUM + CS ) ) ) ,CS ) * DS ) ) / ( Max( ( DS - MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( Min( ( MLU / ( MUR / Min( Max( RCSe,RCSe ) ,( CS / CS ) ) ) ) ,RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8473084721343253}, {"determining": "( ( FirstVNF_RAM + ( ACS * ( FirstVNF_Mem + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * PN ) * MDR ) )", "choosing": "( ( ( ( MUM + ( RMSe + MLU ) ) * ( DS / Min( MUC ,Max( ( Max( RRSe,DS ) + MUC ),MUR ) ) ) ) + ( MUC - Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( RCSe - MUR ) * ( Min( RRSe ,MUR ) / RRSe ) ) / ( ( ( ( MUM * CS ) * ( CS * MLU ) ) * RCSe ) - ( RCSe * MUR ) ) ) * DS ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20876858120715863}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "( Max( PN,PN ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( ( MDR - MDR ) ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( RRSe / ( DS / DS ) ) + ( DS * ( DS * RMSe ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( ( DS / DS ) ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / MUM ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * ( CS / ( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38357140851882826}, {"determining": "( Max( FirstVNF_Mem_Server,ACS ) * ( ( ( ( ( ( AMS + CRS ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / RCSe ) - Min( Max( ( MLU - RRSe ),Max( MUM,DS ) ) ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( RRSe,MUR ) ) ) ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.08173689593165612}, {"determining": "( ( FirstVNF_RAM_Server + Min( AMS ,Min( FirstVNF_CPU ,ACS ) ) ) - Max( Max( DDR,Max( FirstVNF_RAM,BR ) ),( ( ( RRS / DDR ) - Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),FirstVNF_CPU_Server ) ) - ( PN * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6879671788605316}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + FirstVNF_Mem_Server ) ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - BR ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) - ( DS / RMSe ) ) / ( ( MUC + ( ( MLU * MLU ) + CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7138329183836766}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * ( ( Min( ACS ,FirstVNF_RAM ) + ( ( PN * ( ( ( MDR * Const ) - FirstVNF_CPU ) / MRS ) ) - MDR ) ) - PN ) )", "choosing": "( ( ( ( ( DS * ( DS / RMSe ) ) + ( RRSe / ( ( Min( MUR ,DS ) / CS ) / MUR ) ) ) * MUC ) + DS ) / ( MLU * Max( ( ( Max( ( CS / MLU ),MUC ) + ( RMSe + ( ( MUM * MLU ) * MUC ) ) ) + Min( MUR ,CS ) ),( RMSe / MLU ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09747186101385884}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ( AMS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6000982900272923}, {"determining": "Max( ( Max( ( ( ( AMS + Max( Min( FirstVNF_CPU ,Const ),PN ) ) + Max( ( FirstVNF_RAM_Server - RRS ),Max( Max( FirstVNF_RAM,MDR ),FirstVNF_RAM ) ) ) * PN ),MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "Min( ( ( DS * ( ( ( CS * DS ) + MUC ) * MUM ) ) - CS ) ,( RCSe - DS ) )", "obj1": 0.8169291338582677, "obj2": 0.06656223492153039}, {"determining": "( ( ( ( ( Max( Max( ( DDR / FirstVNF_Mem_Server ),FirstVNF_CPU ),AMS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - BR ) * Max( FirstVNF_Mem,( ( PN + FirstVNF_RAM ) + CRS ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( MUC / MUC ) * MUC ) - DS ) / ( MUC * ( ( ( MLU - ( Max( MLU,RCSe ) * CS ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5851198582832301}, {"determining": "( ( DDR + MRS ) * ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( Max( ( CS * ( MLU * MUM ) ),( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Min( RCSe ,Max( RCSe,Min( RCSe ,DS ) ) ) ) ) * ( RCSe * RRSe ) ) ) )", "obj1": 0.5196850393700787, "obj2": 0.2741887782786079}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "Max( ( ACS / Max( CRS,RRS ) ),( MRS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RCSe / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * Max( Min( RCSe ,RMSe ),( MUR * Min( ( ( RMSe / RCSe ) * CS ) ,RMSe ) ) ) ) / MUC ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.820481911352113}, {"determining": "( Max( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( Min( FirstVNF_CPU_Server ,PN ) + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.7992125984251969, "obj2": 0.07408132046590768}, {"determining": "( ( Max( CRS,MRS ) + ( ACS + ( Max( RRS,Min( Max( Const,( MDR * RRS ) ) ,AMS ) ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) - Max( FirstVNF_Mem,Max( MRS,( DDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( ( DS / MLU ) / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * MUM ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6689915161474291}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - AMS ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( ( RMSe / DS ) ,CS ) + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * MUC ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * MUC ),Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.5767716535433071, "obj2": 0.23477524635876215}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5390133088198928}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),( MDR - RRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / ( RMSe / ( RRSe + CS ) ) ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.59251968503937, "obj2": 0.22209909865221045}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) - Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( DDR * Max( CRS,Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "( ( CS + CS ) / ( Max( ( CS + ( MLU * MUR ) ),RMSe ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( CS / DS ) ) / ( ( MUC / ( MLU * DS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3726374908160192}, {"determining": "( Max( PN,ACS ) * ( Min( ( ( ( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + BR ) * PN ) - MDR ) ,Min( FirstVNF_Mem_Server ,ACS ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( ( ( RRSe - MLU ) - Max( MUM,DS ) ) ,Min( RMSe ,( MUM - Min( ( ( ( MUR + CS ) / MUC ) + Min( MLU ,( RMSe / RCSe ) ) ) ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28967732362079407}, {"determining": "( Max( PN,ACS ) * ( Max( ( MRS - ( ( AMS * ARS ) / ( DDR - Const ) ) ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * Const ) )", "choosing": "( ( ( ( ( DS / ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Min( MUM ,( DS + CS ) ) - RCSe ) )", "obj1": 0.33070866141732286, "obj2": 0.47984870971098587}, {"determining": "( Max( PN,ACS ) * ( ( ( CRS + FirstVNF_Mem ) * Min( ACS ,BR ) ) - MDR ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * MUC ) / ( ( Min( ( RCSe / MUM ) ,( MUR - RCSe ) ) / ( ( RMSe / DS ) - CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8956692913385826, "obj2": 0.040856237188203304}, {"determining": "( ( CRS - ( ( ( ( RRS + FirstVNF_CPU_Server ) - MDR ) - ( ACS - FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem / ( MRS + Max( RRS,CRS ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUC ) / RCSe ) - ( ( ( ( ( RCSe + RMSe ) + Max( CS,Max( MUM,Min( RRSe ,MUR ) ) ) ) / RRSe ) * ( MUR - RCSe ) ) / ( ( MUC - Min( ( RMSe / DS ) ,MUR ) ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01876630724433797}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( Max( ( ( Const - RRS ) * MDR ),FirstVNF_CPU ) * ( Min( MDR ,( FirstVNF_RAM / FirstVNF_CPU ) ) - ( ( ( ( Max( MDR,( ARS - CRS ) ) / FirstVNF_RAM_Server ) * PN ) - RRS ) * Max( FirstVNF_CPU,Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( Min( ( MUR + MUC ) ,( Min( RCSe ,RCSe ) - RCSe ) ) / ( MUC * RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.012194458505720889}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) ,( ( ( AMS + FirstVNF_RAM ) + Min( AMS ,Const ) ) * PN ) ) ) - MDR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( CS / Min( MUC ,RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( ( MUC + CS ) + MUM ) + ( MUM - Min( RCSe ,( MUC - Max( ( RMSe / CS ),MUR ) ) ) ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.13735198966928233}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ,CS ) ,( ( Min( RCSe ,RMSe ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + BR ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * ( MLU - RRSe ) ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( RCSe ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.3113394833658467}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Max( FirstVNF_RAM_Server,RRS ) ) ,ACS ) - Min( ( FirstVNF_CPU_Server * PN ) ,MDR ) ) + CRS ),AMS ) ),( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ) - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( DS / MUM ) - ( CS + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + Min( MUR ,MUR ) ) / ( CS - DS ) ) ) + ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8432782116452626}, {"determining": "( Max( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,DS ),MUR ) ) ) ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.2640106540289849}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( ( ( ( ( ( AMS + ACS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( Const + MRS ) ) - MDR ) * Min( FirstVNF_Mem_Server ,( Max( ARS,ACS ) - Max( ( DDR + CRS ),FirstVNF_CPU_Server ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) + RRSe ) / RCSe ) - Min( CS ,Min( RCSe ,( MUM - Min( ( RMSe - RRSe ) ,Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.45632169842439957}, {"determining": "( Max( PN,ACS ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4038772324442251}, {"determining": "( CRS * ( ( ( ( AMS + DDR ) + Max( Max( Const,( FirstVNF_Mem / FirstVNF_Mem_Server ) ),Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) * MDR ) )", "choosing": "( ( ( RCSe * ( Min( RRSe ,MUM ) / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( DS * ( ( ( Min( RRSe ,MUR ) / RRSe ) * Max( MUM,DS ) ) / ( ( MUC / Min( ( RMSe / MUC ) ,CS ) ) - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4175384681202002}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( ARS - AMS ) ) + ( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,ACS ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,( FirstVNF_Mem / ( Const + MDR ) ) ) ) - ( ( CRS * ACS ) / Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( ( CS / Max( Max( MUM,RMSe ),( MUC + MUR ) ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ),CS ) ) / Min( ( MUC / RRSe ) ,( RRSe + RMSe ) ) ) - Min( CS ,( Min( DS ,MUC ) * ( MUM / RRSe ) ) ) )", "obj1": 0.905511811023622, "obj2": 0.032807224234632455}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( ARS - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3270290741677939}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ( FirstVNF_Mem + Max( DDR,Const ) ) ),RRS ) * ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * ACS ) - FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,ACS ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( ( ( ( MLU + Max( MUC,( RCSe - CS ) ) ) / ( ( ( DS - RRSe ) - RCSe ) / RRSe ) ) + CS ),MUR ) + ( ( ( ( MUR / Min( MUR ,RCSe ) ) * RRSe ) + RRSe ) / RCSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.6942292145269524}, {"determining": "( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ,CS ) ,( ( Min( RCSe ,Min( RMSe ,RCSe ) ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0026551538654737057}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),( MDR - RRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / ( RMSe / ( RRSe + CS ) ) ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.59251968503937, "obj2": 0.22209909865221045}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) * ( Max( ( PN * PN ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( Min( MLU ,Max( MUC,MUR ) ) / ( ( ( Min( CS ,Min( ( RCSe + Max( RMSe,MUM ) ) ,( ( RCSe / MUC ) + CS ) ) ) * RCSe ) / MUC ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.9173228346456693, "obj2": 0.031959072258495286}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ACS,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.488546327496048}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5203881469321057}, {"determining": "( Max( ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( FirstVNF_RAM + AMS ) + Max( ( MRS * RRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * PN ) - MDR ) * ( ( Const + ( ( FirstVNF_Mem_Server * Min( CRS ,Const ) ) * PN ) ) / AMS ) ) - ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( CS + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,MUR ) ) - Max( RCSe,MUR ) ) ) * Min( ( Max( MUM,CS ) + ( ( RCSe - MLU ) - ( RMSe + RMSe ) ) ) ,MLU ) ) ) )", "obj1": 0.6988188976377953, "obj2": 0.14245111879172184}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( Const - ACS ) + FirstVNF_Mem ) ) - DDR ) * ( FirstVNF_Mem_Server - ARS ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,( MUM - Max( ( ( RMSe - MUC ) + MUM ),MLU ) ) ) / RRSe ) / RCSe ) - Min( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - Max( ( ( CS / RMSe ) + ( DS + RRSe ) ),( ( ( MUR - DS ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) ,Min( RMSe ,( DS - Min( RCSe ,( MUC - Max( ( RRSe / RMSe ),MUR ) ) ) ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.013439454963671155}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( Max( ( ( ( CRS + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / CS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5275590551181102, "obj2": 0.2709917933546493}, {"determining": "( ( ( ( ( Max( Min( Min( FirstVNF_Mem_Server ,CRS ) ,RRS ),ARS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,Max( ACS,ARS ) ) ) ) * FirstVNF_Mem ) - MDR ) * Min( ACS ,Max( DDR,( ( FirstVNF_CPU + DDR ) + PN ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( RRSe * ( ( ( ( Max( RRSe,MUM ) + RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RCSe / CS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( MUC ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5755353999536376}, {"determining": "( FirstVNF_RAM * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( RMSe ,MUM ),RCSe ) - Min( RCSe ,RMSe ) ) + ( Min( ( ( Min( MUR ,( CS / ( DS - MUC ) ) ) * DS ) + CS ) ,CS ) - Max( MUC,MLU ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07993902547484133}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( ARS - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3244937873013086}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( ( MUR + MUR ) ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / ( ( MUC / DS ) - ( ( MUM - Max( Min( RCSe ,MUC ),MUR ) ) + RMSe ) ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.434031810213089}, {"determining": "( ( Max( CRS,MRS ) + ( ACS + ( Max( RRS,Min( Max( Const,( MDR * RRS ) ) ,( PN * BR ) ) ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * Max( CS,( RRSe * MUM ) ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6396482660288625}, {"determining": "( Max( ( ( AMS * FirstVNF_RAM_Server ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( RRSe / ( DS / DS ) ) ) * MUC ) + RMSe ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / RRSe ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5118196131471576}, {"determining": "( ( ( FirstVNF_RAM / Min( DDR ,DDR ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) * RRSe ) * ( DS / RMSe ) ) / ( DS + MUC ) ) * DS ) ) )", "obj1": 0.860236220472441, "obj2": 0.051195406671942924}, {"determining": "( ( CRS - ( ( ( ( ( ( FirstVNF_RAM / MDR ) * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( ( ( FirstVNF_Mem_Server * ( Const + FirstVNF_Mem_Server ) ) * ARS ) / ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ACS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * PN ) ) ) ) * Max( RRS,MRS ) )", "choosing": "( Min( CS ,Min( RMSe ,( MUM - Min( ( ( MUR - RCSe ) - Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( DS + MUC ) ) ) ) ) ) ) - ( MUC - CS ) )", "obj1": 0.7322834645669292, "obj2": 0.11820470773948184}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * FirstVNF_RAM ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.3169291338582677, "obj2": 0.4943192221555767}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Max( FirstVNF_RAM_Server,MRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5452755905511811, "obj2": 0.25698147900049245}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_CPU_Server ) * Min( ACS ,( ( ( ( DDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ) - AMS ) * FirstVNF_Mem ) ) ) - CRS ) )", "choosing": "( Min( Max( MUM,MUC ) ,MLU ) / ( Min( MUM ,RCSe ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.04235727086380719}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( DDR * FirstVNF_Mem_Server ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( MUC + Max( MUC,RMSe ) ) / ( CS * ( RCSe / ( ( RMSe * MLU ) * CS ) ) ) ) / RRSe )", "obj1": 0.844488188976378, "obj2": 0.06213276997103173}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * ( FirstVNF_Mem - Const ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( RMSe * DS ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * Min( RRSe ,MLU ) ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,( RMSe / RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6377952755905512, "obj2": 0.18791323475430105}, {"determining": "( PN - ( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( MUR * ( ( RCSe / RMSe ) - Max( DS,MUM ) ) ) ) + DS ) / ( MUC * ( ( ( ( ( Min( DS ,MUM ) + MUM ) / RRSe ) * Max( DS,( CS + ( RRSe / MLU ) ) ) ) / ( ( MUC / ( ( RMSe / DS ) / CS ) ) - Max( MUR,RCSe ) ) ) * DS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6084806348126973}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + BR ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * MUC ) / ( ( MUC / Min( ( MLU * MUM ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.9291338582677166, "obj2": 0.02740477386729176}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( FirstVNF_Mem_Server,( ARS - CRS ) ) ) ) * ( ( ( MDR - ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MRS ,DDR ) ) ) * PN ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( Max( MLU,RCSe ) / ( MUC * Min( ( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) / ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) ) ,DS ) ) )", "obj1": 0.655511811023622, "obj2": 0.18083073035675154}, {"determining": "( ( ( FirstVNF_Mem + ( FirstVNF_RAM_Server * PN ) ) / ( Const + FirstVNF_Mem ) ) * ( ( ( MDR - ( ( ( FirstVNF_CPU - ARS ) * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,RRS ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ) * Max( CRS,( ( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),FirstVNF_RAM ) + MRS ) / FirstVNF_CPU_Server ) ) ) - CRS ) )", "choosing": "( ( RCSe / ( RRSe / ( Min( MUC ,MLU ) - CS ) ) ) - Min( ( MUC * ( RMSe * MUC ) ) ,Min( Min( MUM ,CS ) ,( MUM - Min( ( ( ( CS + DS ) + CS ) + Max( Max( MUR,DS ),Max( MUR,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.11314071514731507}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS / RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * Min( ACS ,( AMS + ( RRS + Min( MRS ,Min( MDR ,AMS ) ) ) ) ) ) - CRS ) )", "choosing": "( ( MUC * ( ( ( Max( Min( RRSe ,MUM ),RRSe ) * ( DS / ( CS / RMSe ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) / ( ( MUR - CS ) + DS ) )", "obj1": 0.13976377952755906, "obj2": 0.6944811143868714}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MRS ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.6496062992125984, "obj2": 0.18668623273050727}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Max( FirstVNF_RAM_Server,MRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5452755905511811, "obj2": 0.25698147900049245}, {"determining": "( Max( Max( ( ( MDR + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + Max( ( Max( Const,FirstVNF_Mem_Server ) - RRS ),Min( MDR ,FirstVNF_CPU_Server ) ) ),( MDR / Max( AMS,AMS ) ) ),CRS ) * Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - ( CS / RRSe ) ) / RCSe ) - ( ( Min( DS ,MUM ) - CS ) / DS ) )", "obj1": 0.5610236220472441, "obj2": 0.24609021786114849}, {"determining": "( ( MRS - RRS ) * ( FirstVNF_Mem * ( ( ( ( ( AMS + DDR ) + Max( Min( RRS ,MDR ),Const ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * ( ( MLU + RRSe ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RRSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6889763779527559, "obj2": 0.1506679987896767}, {"determining": "( Max( ( ( DDR + AMS ) + Max( ( Min( Min( ( MDR * Const ) ,( PN - MDR ) ) ,Min( RRS ,AMS ) ) * ( ( AMS - ARS ) / BR ) ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) ) ) - CRS ) )", "choosing": "( ( MUC - DS ) - ( CS / ( ( RRSe - DS ) * ( ( CS + ( MUM - ( RRSe / ( CS * MUM ) ) ) ) - MUM ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.3549551372186988}, {"determining": "( Max( ACS,( ( AMS + DDR ) + Max( ( ( ( Const + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ) - RRS ),Min( PN ,AMS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * BR ) - CRS ) )", "choosing": "( ( ( Max( ( DS + Min( CS ,Min( Min( MLU ,MUC ) ,CS ) ) ),CS ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( RCSe * Min( ( MUM + RRSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.9330708661417323, "obj2": 0.02543029038446557}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ACS * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.09907111182916836}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( ( DS / MLU ) / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * MUM ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6121990883521672}, {"determining": "( ( Max( CRS,MRS ) + ( ACS + ( Max( RRS,Min( Max( Const,( MDR * RRS ) ) ,AMS ) ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * ( ( MLU + RRSe ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6554983145355154}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( DS + Min( RCSe ,RMSe ) ),CS ) ) / ( ( MUC / DS ) - ( RRSe + RMSe ) ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * RRSe ) ) ) ) ) ) ) )", "obj1": 0.43700787401574803, "obj2": 0.3613885433878122}, {"determining": "( BR * ( Max( Max( PN,ARS ),( ( RRS + Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),Const ) ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RCSe ) ) + ( Max( MUR,Max( Max( CS,MUM ),( DS * MUC ) ) ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( DS * ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( DS / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.705489645136341}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + MRS ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / ( RMSe + MLU ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.05580858088293814}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( MDR - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.718503937007874, "obj2": 0.12841926562072925}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( ACS - ARS ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5281864924065398}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) * ( ( ( ( ( Min( ( ARS + MRS ) ,FirstVNF_RAM ) + AMS ) * Max( ( CRS - RRS ),Min( ( AMS + DDR ) ,PN ) ) ) - MDR ) * Min( ACS ,( RRS - MDR ) ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( MUC * ( ( ( MLU / MUM ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS + CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) / ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / MLU ) ) * Max( DS,MUC ) ) + DS ) )", "obj1": 0.3700787401574803, "obj2": 0.4395773761814482}, {"determining": "( ( RRS / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) * ACS ) ) * ( ( ( ( ( ( AMS + DDR ) + Min( RRS ,( RRS + FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( MDR ,Min( FirstVNF_CPU ,AMS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - ( ( DS + ( RCSe * ( RRSe - RMSe ) ) ) + CS ) ) / Min( ( RMSe / DS ) ,CS ) ) - ( ( Max( ( MLU - RCSe ),RCSe ) + MUC ) / RRSe ) )", "obj1": 0.4330708661417323, "obj2": 0.36464390799879187}, {"determining": "( ( MRS - RRS ) * ( FirstVNF_Mem / ( ( ( ( Max( MDR,RRS ) * RRS ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) / Max( CS,( DS + ( RMSe * DS ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * ( ( MLU + RRSe ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( ( RCSe * MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6929133858267716, "obj2": 0.14796135365956833}, {"determining": "( ( ( Max( MRS,Min( FirstVNF_Mem ,MRS ) ) + MDR ) - ( FirstVNF_CPU * ( BR / ( PN * BR ) ) ) ) - Max( Max( ACS,Max( Max( MDR,DDR ),BR ) ),( FirstVNF_Mem_Server * DDR ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( ( MLU * Min( Min( Max( ( ( RRSe * MLU ) - CS ),DS ) ,MUR ) ,( ( ( Min( MUR ,DS ) * RCSe ) + Max( ( RRSe * MUR ),RRSe ) ) - ( MUC - Max( CS,( RRSe * MUM ) ) ) ) ) ) * MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.6181098641056284}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( MRS - ARS ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.281496062992126, "obj2": 0.5292234507192295}, {"determining": "( ( ( ( PN * ( ( AMS + FirstVNF_RAM ) + ( RRS + FirstVNF_CPU_Server ) ) ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( ( RRS - ACS ) ,FirstVNF_Mem ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * Min( RCSe ,RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( DS + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / RRSe ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.265748031496063, "obj2": 0.561382343793996}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( FirstVNF_Mem_Server - ARS ) ) * ( ( ( ( ( Max( Const,( BR / DDR ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RCSe + DS ) ),( MLU + ( ( ( RCSe + CS ) * RRSe ) / MLU ) ) ) ) - Min( CS ,Min( RMSe ,( Min( Min( RCSe ,Max( MLU,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) - MUM ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5064550571203311}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,Min( BR ,FirstVNF_RAM_Server ) ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( Min( RCSe ,RMSe ) + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) + ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.25, "obj2": 0.573515807392448}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ( AMS + FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( DS / DS ) / RRSe ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5662697485727847}, {"determining": "( ( MRS - RRS ) * ( FirstVNF_Mem * ( ( ( ( ( AMS + DDR ) + Max( Min( FirstVNF_Mem_Server ,MDR ),Const ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * ( MLU - RRSe ) ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6673228346456693, "obj2": 0.16634079950960073}], "41": [{"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ( RRS + PN ) / DDR ) * Max( ( MDR - RRS ),Min( MDR ,CRS ) ) ) * FirstVNF_Mem_Server ) - MDR ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,DS ),MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,ACS ) * Max( PN,( PN + FirstVNF_CPU ) ) )", "choosing": "( ( MUC * ( MUR * DS ) ) / ( ( ( ( DS * ( DS / RMSe ) ) + ( RRSe / ( ( ( RMSe - MLU ) / ( MLU * MUC ) ) / DS ) ) ) * MUC ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + Min( MRS ,MDR ) ),( RRS / ( ARS - MRS ) ) )", "choosing": "( ( MUC / ( Min( ( Min( Max( RRSe,( DS * DS ) ) ,CS ) + ( MUM / ( MUM + CS ) ) ) ,CS ) * DS ) ) / ( Max( ( DS - MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( Min( ( MLU / ( MUR / Min( Max( RCSe,RCSe ) ,( CS / CS ) ) ) ) ,RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8473084721343253}, {"determining": "( ( FirstVNF_RAM + ( ACS * ( FirstVNF_Mem + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * PN ) * MDR ) )", "choosing": "( ( ( ( MUM + ( RMSe + MLU ) ) * ( DS / Min( MUC ,Max( ( Max( RRSe,DS ) + MUC ),MUR ) ) ) ) + ( MUC - Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( RCSe - MUR ) * ( Min( RRSe ,MUR ) / RRSe ) ) / ( ( ( ( MUM * CS ) * ( CS * MLU ) ) * RCSe ) - ( RCSe * MUR ) ) ) * DS ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20876858120715863}, {"determining": "( Max( PN,ACS ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4015748031496063, "obj2": 0.39924084431425494}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + FirstVNF_Mem_Server ) ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - BR ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) - ( DS / RMSe ) ) / ( ( MUC + ( ( MLU * MLU ) + CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7138329183836766}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "( Max( PN,PN ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( ( MDR - MDR ) ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( RRSe / ( DS / DS ) ) + ( DS * ( DS * RMSe ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( ( DS / DS ) ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / MUM ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * ( CS / ( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38357140851882826}, {"determining": "( CRS * ( ( ( ( AMS + DDR ) + Max( Max( Const,( FirstVNF_Mem / FirstVNF_Mem_Server ) ),Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) * MDR ) )", "choosing": "( ( ( RCSe * ( Min( RRSe ,MUM ) / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( DS * ( ( ( Min( RRSe ,MUR ) / RRSe ) * Max( MUM,DS ) ) / ( ( MUC / Min( ( RMSe / MUC ) ,CS ) ) - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4175384681202002}, {"determining": "( Max( Max( ( ( MDR + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + Max( ( Max( Const,FirstVNF_Mem_Server ) - RRS ),Min( MDR ,FirstVNF_CPU_Server ) ) ),( MDR / Max( AMS,AMS ) ) ),CRS ) * Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( ( Max( CS,( DS + ( MUC / ( MUM - MUM ) ) ) ) - ( CS / RRSe ) ) / RCSe ) - ( ( Min( DS ,MUM ) - CS ) / DS ) )", "obj1": 0.5610236220472441, "obj2": 0.24609021786114849}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_CPU_Server ) * Min( ACS ,( ( ( ( DDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ) - AMS ) * FirstVNF_Mem ) ) ) - CRS ) )", "choosing": "( Min( Max( MUM,MUC ) ,MLU ) / ( Min( MUM ,RCSe ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.04235727086380719}, {"determining": "( ( ( FirstVNF_RAM / Min( DDR ,DDR ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) * RRSe ) * ( DS / RMSe ) ) / ( DS + MUC ) ) * DS ) ) )", "obj1": 0.860236220472441, "obj2": 0.051195406671942924}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( MDR - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.718503937007874, "obj2": 0.12841926562072925}, {"determining": "Max( ( MDR + ( DDR - MDR ) ),( RRS - ( PN * ACS ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6623060484522048}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.642631688467603}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "Max( ( ACS / Max( CRS,RRS ) ),( MRS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RCSe / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * Max( Min( RCSe ,RMSe ),( MUR * Min( ( ( RMSe / RCSe ) * CS ) ,RMSe ) ) ) ) / MUC ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.820481911352113}, {"determining": "( Min( MRS ,PN ) * ( ( ( ( ( ( AMS + ( DDR - MDR ) ) + Max( Min( MDR ,PN ),( MRS - AMS ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) + Max( CS,( Min( ( RMSe / DS ) ,CS ) + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * MUC ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * MUC ),( RRSe * ( DS * DS ) ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08648375965241524}, {"determining": "( ( CRS - ( ( ( ( ( ( FirstVNF_RAM / MDR ) * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( ( ( FirstVNF_Mem_Server * ( Const + FirstVNF_Mem_Server ) ) * ARS ) / ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ACS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * PN ) ) ) ) * Max( RRS,MRS ) )", "choosing": "( Min( CS ,Min( RMSe ,( MUM - Min( ( ( MUR - RCSe ) - Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( DS + MUC ) ) ) ) ) ) ) - ( MUC - CS ) )", "obj1": 0.7322834645669292, "obj2": 0.11820470773948184}, {"determining": "( ( ( Max( MRS,Min( FirstVNF_Mem ,MRS ) ) + MDR ) - ( FirstVNF_CPU * ( BR / ( PN * BR ) ) ) ) - Max( Max( ACS,Max( Max( MDR,DDR ),BR ) ),( FirstVNF_Mem_Server * DDR ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( ( MLU * Min( Min( Max( ( ( RRSe * MLU ) - CS ),DS ) ,MUR ) ,( ( ( Min( MUR ,DS ) * RCSe ) + Max( ( RRSe * MUR ),RRSe ) ) - ( MUC - Max( CS,( RRSe * MUM ) ) ) ) ) ) * MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.6181098641056284}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) - Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( DDR * Max( CRS,Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "( ( CS + CS ) / ( Max( ( CS + ( MLU * MUR ) ),RMSe ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( CS / DS ) ) / ( ( MUC / ( MLU * DS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3726374908160192}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( ( CRS - ( ( ( ( RRS + FirstVNF_CPU_Server ) - MDR ) - ( ACS - FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem / ( MRS + Max( RRS,CRS ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUC ) / RCSe ) - ( ( ( ( ( RCSe + RMSe ) + Max( CS,Max( MUM,Min( RRSe ,MUR ) ) ) ) / RRSe ) * ( MUR - RCSe ) ) / ( ( MUC - Min( ( RMSe / DS ) ,MUR ) ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01876630724433797}, {"determining": "( Max( PN,ACS ) * ( Max( ( MRS - ( ( AMS * ARS ) / ( DDR - Const ) ) ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * Const ) )", "choosing": "( ( ( ( ( DS / ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Min( MUM ,( DS + CS ) ) - RCSe ) )", "obj1": 0.33070866141732286, "obj2": 0.47984870971098587}, {"determining": "( ( MRS - RRS ) * ( FirstVNF_Mem * ( ( ( ( ( AMS + DDR ) + Max( Min( FirstVNF_Mem_Server ,MDR ),Const ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * ( MLU - RRSe ) ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6673228346456693, "obj2": 0.16634079950960073}, {"determining": "( Max( PN,ACS ) * ( ( ( CRS + FirstVNF_Mem ) * Min( ACS ,BR ) ) - MDR ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * MUC ) / ( ( Min( ( RCSe / MUM ) ,( MUR - RCSe ) ) / ( ( RMSe / DS ) - CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8956692913385826, "obj2": 0.040856237188203304}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( Max( FirstVNF_Mem_Server,Const ) * ( ( ( ( AMS + DDR ) + Max( Max( Const,Min( Min( Const ,ACS ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ),Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( RCSe * ( Min( RRSe ,MUM ) / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( MUR ,RCSe ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / RMSe ) ,CS ) ) - Max( RCSe,MLU ) ) ) * DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.15755553288975546}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) ,( ( ( AMS + FirstVNF_RAM ) + Min( AMS ,Const ) ) * PN ) ) ) - MDR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( CS / Min( MUC ,RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( ( MUC + CS ) + MUM ) + ( MUM - Min( RCSe ,( MUC - Max( ( RMSe / CS ),MUR ) ) ) ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.13735198966928233}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) * ( ( ( ( ( Min( ( ARS + MRS ) ,FirstVNF_RAM ) + AMS ) * Max( ( CRS - RRS ),Min( ( AMS + DDR ) ,PN ) ) ) - MDR ) * Min( ACS ,( RRS - MDR ) ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( MUC * ( ( ( MLU / MUM ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS + CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) / ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / MLU ) ) * Max( DS,MUC ) ) + DS ) )", "obj1": 0.3700787401574803, "obj2": 0.4395773761814482}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ,CS ) ,( ( Min( RCSe ,RMSe ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( Max( ( ( DDR + AMS ) + Max( ( Min( Min( ( MDR * Const ) ,( PN - MDR ) ) ,Min( RRS ,AMS ) ) * ( ( AMS - ARS ) / BR ) ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) ) ) - CRS ) )", "choosing": "( ( MUC - DS ) - ( CS / ( ( RRSe - DS ) * ( ( CS + ( MUM - ( RRSe / ( CS * MUM ) ) ) ) - MUM ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.3549551372186988}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * ( ( Min( ACS ,FirstVNF_RAM ) + ( ( PN * ( ( ( MDR * Const ) - FirstVNF_CPU ) / MRS ) ) - MDR ) ) - PN ) )", "choosing": "( ( ( ( ( DS * ( DS / RMSe ) ) + ( RRSe / ( ( Min( MUR ,DS ) / CS ) / MUR ) ) ) * MUC ) + DS ) / ( MLU * Max( ( ( Max( ( CS / MLU ),MUC ) + ( RMSe + ( ( MUM * MLU ) * MUC ) ) ) + Min( MUR ,CS ) ),( RMSe / MLU ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09747186101385884}, {"determining": "( CRS * ( ( ( ( AMS + DDR ) + Max( Min( ACS ,MDR ),Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) * MDR ) )", "choosing": "( ( ( RCSe * ( Min( RRSe ,MUM ) / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * MUC ) )", "obj1": 0.20275590551181102, "obj2": 0.636858466723499}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( Max( ( ( Const - RRS ) * MDR ),FirstVNF_CPU ) * ( Min( MDR ,( FirstVNF_RAM / FirstVNF_CPU ) ) - ( ( ( ( Max( MDR,( ARS - CRS ) ) / FirstVNF_RAM_Server ) * PN ) - RRS ) * Max( FirstVNF_CPU,Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( Min( ( MUR + MUC ) ,( Min( RCSe ,RCSe ) - RCSe ) ) / ( MUC * RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.012194458505720889}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( Max( RRS,MRS ) * ( ( RRS * DDR ) - CRS ) )", "choosing": "( ( ( Min( ( ( ( ( MUC - RRSe ) * DS ) * MUM ) / RRSe ) ,( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RMSe + DS ) ),( Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) + MLU ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5118110236220472, "obj2": 0.28213294246736265}, {"determining": "( ( ( ( ( ( AMS + ACS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ( Max( FirstVNF_Mem_Server,ACS ) - Max( ( DDR + CRS ),FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RCSe ,( MUM - Min( ( RMSe - RRSe ) ,( MUC - Max( RMSe,MUR ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4548704748856436}, {"determining": "( ( ( ( ( Max( Max( ( DDR / FirstVNF_Mem_Server ),FirstVNF_CPU ),AMS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - BR ) * Max( FirstVNF_Mem,( ( PN + FirstVNF_RAM ) + CRS ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( MUC / MUC ) * MUC ) - DS ) / ( MUC * ( ( ( MLU - ( Max( MLU,RCSe ) * CS ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5851198582832301}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( ARS - AMS ) ) + ( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,ACS ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,( FirstVNF_Mem / ( Const + MDR ) ) ) ) - ( ( CRS * ACS ) / Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( ( CS / Max( Max( MUM,RMSe ),( MUC + MUR ) ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ),CS ) ) / Min( ( MUC / RRSe ) ,( RRSe + RMSe ) ) ) - Min( CS ,( Min( DS ,MUC ) * ( MUM / RRSe ) ) ) )", "obj1": 0.905511811023622, "obj2": 0.032807224234632455}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ,CS ) ,( ( Min( RCSe ,Min( RMSe ,RCSe ) ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0026551538654737057}, {"determining": "( ( MRS - RRS ) * ( FirstVNF_Mem * ( ( ( ( ( AMS + DDR ) + Max( Min( FirstVNF_Mem_Server ,MDR ),Const ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,DS ),MUR ) ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.17262773438024975}, {"determining": "( Max( ( MDR + DDR ),PN ) * ( ( ( MDR - ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - AMS ),Min( MDR ,PN ) ) ) * PN ) ) * ( ACS - FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( DS * RRSe ) - Min( CS ,Min( CS ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.5905511811023622, "obj2": 0.22526867655144947}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) * ( Max( ( PN * PN ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( Min( MLU ,Max( MUC,MUR ) ) / ( ( ( Min( CS ,Min( ( RCSe + Max( RMSe,MUM ) ) ,( ( RCSe / MUC ) + CS ) ) ) * RCSe ) / MUC ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.9173228346456693, "obj2": 0.031959072258495286}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * ( ( Min( ACS ,FirstVNF_RAM ) + ( ( PN * ( ( ( MDR * Const ) - FirstVNF_CPU ) / MRS ) ) - MDR ) ) - PN ) )", "choosing": "( ( ( ( ( DS * ( DS / RMSe ) ) + ( RRSe / ( ( Min( MUR ,DS ) / CS ) / MUR ) ) ) * MUC ) + DS ) / ( MLU * Max( ( ( Max( ( CS / MLU ),MUC ) + ( RMSe + ( ( MUM * MLU ) * MUC ) ) ) + Min( MUR ,CS ) ),( RMSe / MLU ) ) ) )", "obj1": 0.484251968503937, "obj2": 0.30332218641890035}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),( MDR - RRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / ( RMSe / ( RRSe + CS ) ) ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.59251968503937, "obj2": 0.22209909865221045}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ( AMS + FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( DS / DS ) / RRSe ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5662697485727847}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) / ( FirstVNF_Mem + Max( DDR,Const ) ) ),RRS ) * ( ( ( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * ACS ) - FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,ACS ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( ( ( ( MLU + Max( MUC,( RCSe - CS ) ) ) / ( ( ( DS - RRSe ) - RCSe ) / RRSe ) ) + CS ),MUR ) + ( ( ( ( MUR / Min( MUR ,RCSe ) ) * RRSe ) + RRSe ) / RCSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.6942292145269524}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( Min( ( RMSe / DS ) ,CS ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( ( DS / MLU ) / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * MUM ) ) )", "obj1": 0.234251968503937, "obj2": 0.5992959815797666}, {"determining": "( ( DDR + MRS ) * ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( Max( ( CS * ( MLU * MUM ) ),( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Min( RCSe ,Max( RCSe,Min( RCSe ,DS ) ) ) ) ) * ( RCSe * RRSe ) ) ) )", "obj1": 0.5196850393700787, "obj2": 0.2741887782786079}, {"determining": "( ( ( FirstVNF_Mem + ( FirstVNF_RAM_Server * PN ) ) / ( Const + FirstVNF_Mem ) ) * ( ( ( MDR - ( ( ( FirstVNF_CPU - ARS ) * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,RRS ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ) * Max( CRS,( ( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),FirstVNF_RAM ) + MRS ) / FirstVNF_CPU_Server ) ) ) - CRS ) )", "choosing": "( ( RCSe / ( RRSe / ( Min( MUC ,MLU ) - CS ) ) ) - Min( ( MUC * ( RMSe * MUC ) ) ,Min( Min( MUM ,CS ) ,( MUM - Min( ( ( ( CS + DS ) + CS ) + Max( Max( MUR,DS ),Max( MUR,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.11314071514731507}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + MRS ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( PN - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.05552473259212544}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Max( FirstVNF_RAM_Server,MRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5492125984251969, "obj2": 0.25472021406257234}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ACS,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.488546327496048}, {"determining": "( Max( ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( FirstVNF_RAM + AMS ) + Max( ( MRS * RRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * PN ) - MDR ) * ( ( Const + ( ( FirstVNF_Mem_Server * Min( CRS ,Const ) ) * PN ) ) / AMS ) ) - ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( CS + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( MUC ,MUR ) ) - Max( RCSe,MUR ) ) ) * Min( ( Max( MUM,CS ) + ( ( RCSe - MLU ) - ( RMSe + RMSe ) ) ) ,MLU ) ) ) )", "obj1": 0.6988188976377953, "obj2": 0.14245111879172184}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * ( FirstVNF_Mem - Const ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( RMSe * DS ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * Min( RRSe ,MLU ) ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,( RMSe / RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6377952755905512, "obj2": 0.18791323475430105}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( ARS - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4566929133858268, "obj2": 0.3310299695114505}, {"determining": "( ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + BR ) * PN ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * ( MLU - RRSe ) ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( RCSe ,CS ) ) - Max( RCSe,Max( RCSe,RMSe ) ) ) ) * DS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.31073243987632415}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Max( FirstVNF_RAM_Server,RRS ) ) ,ACS ) - Min( ( FirstVNF_CPU_Server * PN ) ,MDR ) ) + CRS ),AMS ) ),( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ) - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( DS / MUM ) - ( CS + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + Min( MUR ,MUR ) ) / ( CS - DS ) ) ) + ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8432782116452626}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( FirstVNF_RAM + RRS ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( FirstVNF_RAM + Const ) / PN ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( MUC * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( Min( MUC ,Min( ( RMSe / DS ) ,CS ) ) - Max( ( ( MUR / MLU ) * MLU ),Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6739726779301969}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( DDR * FirstVNF_Mem_Server ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( MUC + Max( MUC,RMSe ) ) / ( CS * ( RCSe / ( ( RMSe * MLU ) * CS ) ) ) ) / RRSe )", "obj1": 0.844488188976378, "obj2": 0.06213276997103173}, {"determining": "( ( ( ( ( Max( Min( Min( FirstVNF_Mem_Server ,CRS ) ,RRS ),ARS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,Max( ACS,ARS ) ) ) ) * FirstVNF_Mem ) - MDR ) * Min( ACS ,Max( DDR,( ( FirstVNF_CPU + DDR ) + PN ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( RRSe * ( ( ( ( Max( RRSe,MUM ) + RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RCSe / CS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( MUC ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5755353999536376}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - AMS ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( ( RMSe / DS ) ,CS ) + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * MUC ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * MUC ),Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.5767716535433071, "obj2": 0.23477524635876215}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Min( FirstVNF_RAM ,AMS ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - AMS ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( ( RMSe / DS ) ,CS ) + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * MUC ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * MUC ),Max( RCSe,Max( Max( CS,MUM ),Min( RMSe ,RRSe ) ) ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.5767716535433071, "obj2": 0.23477524635876215}, {"determining": "( FirstVNF_RAM * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( RMSe ,MUM ),RCSe ) - Min( RCSe ,RMSe ) ) + ( Min( ( ( Min( MUR ,( CS / ( DS - MUC ) ) ) * DS ) + CS ) ,CS ) - Max( MUC,MLU ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07993902547484133}, {"determining": "( ( Max( CRS,MRS ) + ( ACS + ( Max( RRS,Min( Max( Const,( MDR * RRS ) ) ,( PN * BR ) ) ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * Max( CS,( RRSe * MUM ) ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6396482660288625}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( MRS - ARS ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.281496062992126, "obj2": 0.5292234507192295}, {"determining": "Max( ( Max( ( ( ( AMS + Max( Min( FirstVNF_CPU ,Const ),PN ) ) + Max( ( FirstVNF_RAM_Server - RRS ),Max( Max( FirstVNF_RAM,MDR ),FirstVNF_RAM ) ) ) * PN ),MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "Min( ( ( DS * ( ( ( CS * DS ) + MUC ) * MUM ) ) - CS ) ,( RCSe - DS ) )", "obj1": 0.8169291338582677, "obj2": 0.06656223492153039}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( BR * ( Max( Max( PN,ARS ),( ( RRS + Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),Const ) ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RCSe ) ) + ( Max( MUR,Max( Max( CS,MUM ),( DS * MUC ) ) ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( DS * ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( DS / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.705489645136341}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,Min( BR ,FirstVNF_RAM_Server ) ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( Min( RCSe ,RMSe ) + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) + ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.25, "obj2": 0.573515807392448}, {"determining": "( Max( ( ( AMS * FirstVNF_RAM_Server ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( RRSe / ( DS / DS ) ) ) * MUC ) + RMSe ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / RRSe ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5118196131471576}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MRS ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.6496062992125984, "obj2": 0.18310862077342296}, {"determining": "( ( MRS - RRS ) * ( FirstVNF_Mem * ( ( ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + DDR ) + Max( Min( FirstVNF_Mem_Server ,MDR ),Const ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * ( MLU - RRSe ) ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( MUC / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6515748031496063, "obj2": 0.17912074276464862}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * FirstVNF_RAM ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.3169291338582677, "obj2": 0.4943192221555767}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( FirstVNF_Mem_Server - ARS ) ) * ( ( ( ( ( Max( Const,( BR / DDR ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RCSe + DS ) ),( MLU + ( ( ( RCSe + CS ) * RRSe ) / MLU ) ) ) ) - Min( CS ,Min( RMSe ,( Min( Min( RCSe ,Max( MLU,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) - MUM ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5064550571203311}, {"determining": "( PN - ( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( MUR * ( ( RCSe / RMSe ) - Max( DS,MUM ) ) ) ) + DS ) / ( MUC * ( ( ( ( ( Min( DS ,MUM ) + MUM ) / RRSe ) * Max( DS,( CS + ( RRSe / MLU ) ) ) ) / ( ( MUC / ( ( RMSe / DS ) / CS ) ) - Max( MUR,RCSe ) ) ) * DS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6084806348126973}, {"determining": "( Max( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( RRS - AMS ) ) - FirstVNF_Mem_Server ),ACS ) * ( CRS - ( ( ( ( ( Min( FirstVNF_CPU_Server ,PN ) + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC - RMSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Max( RCSe,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / Min( CS ,Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.06817806344204237}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( AMS + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + BR ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * MUC ) / ( ( MUC / Min( ( MLU * MUM ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.9291338582677166, "obj2": 0.02740477386729176}, {"determining": "( ( ( Min( MRS ,FirstVNF_RAM ) * ( PN / BR ) ) * Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server * ( MDR - Max( Const,PN ) ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( MUR + ( MUR * MUC ) ) / RRSe ) ) * MUC ) + DS ) / ( ( CS * ( DS + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( ( MLU * RMSe ) ,RMSe ) / RRSe ) * ( Min( MUC ,Min( MUM ,RRSe ) ) / RMSe ) ) / ( ( MUC / Min( Min( RRSe ,RRSe ) ,MUR ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4704724409448819, "obj2": 0.3153311577926612}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ( Const + DDR ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + BR ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / MUM ) * MUC ) / ( ( MUC / Min( ( MLU * MUM ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.9704724409448819, "obj2": 0.012619022445446965}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS / RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * Min( ACS ,( AMS + ( RRS + Min( MRS ,Min( MDR ,AMS ) ) ) ) ) ) - CRS ) )", "choosing": "( ( MUC * ( ( ( Max( Min( RRSe ,MUM ),RRSe ) * ( DS / ( CS / RMSe ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) / ( ( MUR - CS ) + DS ) )", "obj1": 0.13976377952755906, "obj2": 0.6944811143868714}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( ( Max( FirstVNF_Mem_Server,RRS ) * ARS ) / ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( MUC - RMSe ) - Min( CS ,Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) )", "obj1": 0.6338582677165354, "obj2": 0.19365629879865023}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( DDR - FirstVNF_RAM_Server ) * Min( ACS ,PN ) ) - CRS ) )", "choosing": "( ( DS * MUR ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5390133088198928}, {"determining": "Max( ( Max( ( ( ( ( DDR - FirstVNF_RAM ) + Max( Min( FirstVNF_CPU ,Const ),PN ) ) + Max( Max( Max( FirstVNF_RAM,MDR ),FirstVNF_RAM ),( FirstVNF_RAM_Server - RRS ) ) ) * PN ),MDR ) - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - ( DDR / FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) - ( ( RRSe + MUR ) / Min( ( RMSe / DS ) ,CS ) ) ) ) * DS ) ) )", "obj1": 0.15551181102362205, "obj2": 0.6825366667825453}, {"determining": "( ( ( ( PN * ( ( AMS + FirstVNF_RAM ) + ( RRS + FirstVNF_CPU_Server ) ) ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( ( RRS - ACS ) ,FirstVNF_Mem ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * Min( RCSe ,RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( DS + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / RRSe ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.265748031496063, "obj2": 0.561382343793996}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( MRS - ARS ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) ) ),ACS ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( Min( ( RMSe / DS ) ,CS ) * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.15551181102362205, "obj2": 0.6825366667825453}, {"determining": "( Max( ACS,( ( AMS + DDR ) + Max( ( ( ( Const + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ) - RRS ),Min( PN ,AMS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * BR ) - CRS ) )", "choosing": "( ( ( Max( ( DS + Min( CS ,Min( Min( MLU ,MUC ) ,CS ) ) ),CS ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( RCSe * Min( ( MUM + RRSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.9330708661417323, "obj2": 0.02543029038446557}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( ( Max( FirstVNF_Mem_Server,RRS ) * ARS ) / ( ( ( AMS + FirstVNF_RAM ) + Max( ( DDR - ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( MUC - RMSe ) - Min( CS ,Min( RMSe ,( RCSe - Min( Max( RCSe,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.6338582677165354, "obj2": 0.19365629879865023}, {"determining": "( ( ( ( ( ( AMS + ACS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( Const + MRS ) ) - MDR ) * Min( FirstVNF_Mem_Server ,( Max( ARS,ACS ) - Max( ( DDR + CRS ),FirstVNF_CPU_Server ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) + RRSe ) / RCSe ) - Min( CS ,Min( RCSe ,( MUM - Min( ( RMSe - RRSe ) ,Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.45632169842439957}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( ( DS / MLU ) / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * MUM ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6121990883521672}, {"determining": "( Max( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,DS ),MUR ) ) ) ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.2640106540289849}], "42": [{"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS / RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * Min( ACS ,( AMS + ( RRS - FirstVNF_Mem_Server ) ) ) ) - CRS ) )", "choosing": "( ( ( MUR - CS ) + DS ) / ( MUC * ( ( ( Max( Min( RRSe ,MUM ),RRSe ) * ( DS / ( CS / RMSe ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ( RRS + PN ) / DDR ) * Max( ( MDR - RRS ),Min( MDR ,CRS ) ) ) * FirstVNF_Mem_Server ) - MDR ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,DS ),MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + Min( MRS ,MDR ) ),( RRS / ( ARS - MRS ) ) )", "choosing": "( ( MUC / ( Min( ( Min( Max( RRSe,( DS * DS ) ) ,CS ) + ( MUM / ( MUM + CS ) ) ) ,CS ) * DS ) ) / ( Max( ( DS - MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( Min( ( MLU / ( MUR / Min( Max( RCSe,RCSe ) ,( CS / CS ) ) ) ) ,RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8473084721343253}, {"determining": "( ( FirstVNF_RAM + ( ACS * ( FirstVNF_Mem + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * PN ) * MDR ) )", "choosing": "( ( ( ( MUM + ( RMSe + MLU ) ) * ( DS / Min( MUC ,Max( ( Max( RRSe,DS ) + MUC ),MUR ) ) ) ) + ( MUC - Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( RCSe - MUR ) * ( Min( RRSe ,MUR ) / RRSe ) ) / ( ( ( ( MUM * CS ) * ( CS * MLU ) ) * RCSe ) - ( RCSe * MUR ) ) ) * DS ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20876858120715863}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + FirstVNF_Mem_Server ) ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - BR ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) - ( DS / RMSe ) ) / ( ( MUC + ( ( MLU * MLU ) + CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7138329183836766}, {"determining": "( Max( PN,ACS ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4015748031496063, "obj2": 0.39924084431425494}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) * ( ( ( ( ( Min( ( ARS + MRS ) ,FirstVNF_RAM ) + AMS ) * Max( ( CRS - RRS ),Min( ( AMS + DDR ) ,PN ) ) ) - MDR ) * Min( ACS ,( RRS - MDR ) ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( MUC * ( ( ( MLU / MUM ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS + CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) / ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / MLU ) ) * Max( DS,MUC ) ) + DS ) )", "obj1": 0.3700787401574803, "obj2": 0.4395773761814482}, {"determining": "( Max( PN,PN ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( ( MDR - MDR ) ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( RRSe / ( DS / DS ) ) + ( DS * ( DS * RMSe ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( ( DS / DS ) ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / MUM ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * ( CS / ( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38357140851882826}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( ARS - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4547244094488189, "obj2": 0.33016352683526456}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.642631688467603}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( RCSe * ( Min( RRSe ,MUM ) / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * MUC ) )", "obj1": 0.234251968503937, "obj2": 0.5958350028575667}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( DDR - FirstVNF_RAM_Server ) * Min( ACS ,PN ) ) - CRS ) )", "choosing": "( ( DS * MUR ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5390133088198928}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "Max( ( ACS / Max( CRS,RRS ) ),( MRS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RCSe / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * Max( Min( RCSe ,RMSe ),( MUR * Min( ( ( RMSe / RCSe ) * CS ) ,RMSe ) ) ) ) / MUC ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.820481911352113}, {"determining": "Max( ( MDR + ( DDR - MDR ) ),( RRS - ( PN * ACS ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6623060484522048}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) - Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( DDR * Max( CRS,Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "( ( CS + CS ) / ( Max( ( CS + ( MLU * MUR ) ),RMSe ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( CS / DS ) ) / ( ( MUC / ( MLU * DS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3726374908160192}, {"determining": "( Max( RRS,MRS ) * ( ( RRS * DDR ) - CRS ) )", "choosing": "( ( ( Min( ( ( ( ( MUC - RRSe ) * DS ) * MUM ) / RRSe ) ,( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RMSe + DS ) ),( Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) + MLU ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5118110236220472, "obj2": 0.28213294246736265}, {"determining": "( ( DDR + MRS ) * ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( Max( ( CS * ( MLU * MUM ) ),( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Min( RCSe ,Max( RCSe,Min( RCSe ,DS ) ) ) ) ) * ( RCSe * RRSe ) ) ) )", "obj1": 0.5196850393700787, "obj2": 0.2741887782786079}, {"determining": "( Max( ( ( DDR + AMS ) + Max( ( Min( Min( ( MDR * Const ) ,( PN - MDR ) ) ,Min( RRS ,AMS ) ) * ( ( AMS - ARS ) / BR ) ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) ) ) - CRS ) )", "choosing": "( ( MUC - DS ) - ( CS / ( ( RRSe - DS ) * ( ( CS + ( MUM - ( RRSe / ( CS * MUM ) ) ) ) - MUM ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.3549551372186988}, {"determining": "( ( ( Min( MRS ,FirstVNF_RAM ) * ( PN / BR ) ) * Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server * ( MDR - Max( Const,PN ) ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( MUR + ( MUR * MUC ) ) / RRSe ) ) * MUC ) + DS ) / ( ( CS * ( DS + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( ( MLU * RMSe ) ,RMSe ) / RRSe ) * ( Min( MUC ,Min( MUM ,RRSe ) ) / RMSe ) ) / ( ( MUC / Min( Min( RRSe ,RRSe ) ,MUR ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4704724409448819, "obj2": 0.3153311577926612}, {"determining": "( ( ( Max( MRS,Min( FirstVNF_Mem ,MRS ) ) + MDR ) - ( FirstVNF_CPU * ( BR / ( PN * BR ) ) ) ) - Max( Max( ACS,Max( Max( MDR,DDR ),BR ) ),( FirstVNF_Mem_Server * DDR ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( ( MLU * Min( Min( Max( ( ( RRSe * MLU ) - CS ),DS ) ,MUR ) ,( ( ( Min( MUR ,DS ) * RCSe ) + Max( ( RRSe * MUR ),RRSe ) ) - ( MUC - Max( CS,( RRSe * MUM ) ) ) ) ) ) * MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.6181098641056284}, {"determining": "( PN - ( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( MUR * ( ( RCSe / RMSe ) - Max( DS,MUM ) ) ) ) + DS ) / ( MUC * ( ( ( ( ( Min( DS ,MUM ) + MUM ) / RRSe ) * Max( DS,( CS + ( RRSe / MLU ) ) ) ) / ( ( MUC / ( ( RMSe / DS ) / CS ) ) - Max( MUR,RCSe ) ) ) * DS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6084806348126973}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( Max( PN,ACS ) * ( Max( ( MRS - ( ( AMS * ARS ) / ( DDR - Const ) ) ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * Const ) )", "choosing": "( ( ( ( ( DS / ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Min( MUM ,( DS + CS ) ) - RCSe ) )", "obj1": 0.33070866141732286, "obj2": 0.47984870971098587}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_CPU_Server ) * Min( ACS ,( ( ( ( DDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ) - AMS ) * FirstVNF_Mem ) ) ) - CRS ) )", "choosing": "( Min( Max( MUM,MUC ) ,MLU ) / ( Min( MUM ,RCSe ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.04235727086380719}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_RAM ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( RRSe / ( DS / DS ) ) ) * MUC ) + ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) ) / ( MUC * ( ( ( ( CS * Max( MLU,MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4822834645669291, "obj2": 0.30263103503288163}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) ,( ( ( AMS + FirstVNF_RAM ) + Min( AMS ,Const ) ) * PN ) ) ) - MDR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( CS / Min( MUC ,RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( ( MUC + CS ) + MUM ) + ( MUM - Min( RCSe ,( MUC - Max( ( RMSe / CS ),MUR ) ) ) ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.13735198966928233}, {"determining": "( Max( ( Max( ( RRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) + ( AMS + DDR ) ),( DDR * PN ) ) * ( ( ( MDR - ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ARS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) ) / Min( Const ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( RMSe * MLU ) + MLU ) ) * RMSe ) + ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RCSe / ( Max( MUM,DS ) / ( MLU / CS ) ) ) ) ) * DS ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( RMSe / ( MUC - ( ( MUM - MUM ) + ( MUR * DS ) ) ) ) ) * DS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.52422093769799}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ,CS ) ,( ( Min( RCSe ,RMSe ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( Max( PN,PN ) * ( ( Max( Max( FirstVNF_Mem_Server,Min( Min( ( FirstVNF_RAM_Server * MRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,BR ) ),( AMS + DDR ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( ( DS / DS ) / RRSe ) + ( ( DS * ( CS - Min( MUC ,MLU ) ) ) * ( ( ( DS * RCSe ) + RMSe ) - ( Min( MUR ,RCSe ) / RMSe ) ) ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( Min( ( RMSe / DS ) ,CS ) * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) + Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.38976377952755903, "obj2": 0.4117523187823042}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( ( ( MRS - MDR ) * Min( ( Max( FirstVNF_Mem_Server,ACS ) - Max( ( DDR + CRS ),FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RCSe ,( MUM - Min( ( RMSe - RRSe ) ,( MLU * DS ) ) ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6362317887997502}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Max( FirstVNF_RAM_Server,RRS ) ) ,ACS ) - Min( ( FirstVNF_CPU_Server * PN ) ,MDR ) ) + CRS ),AMS ) ),( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ) - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( DS / MUM ) - ( CS + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + Min( MUR ,MUR ) ) / ( CS - DS ) ) ) + ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8432782116452626}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * MDR ) ) ) * PN ) - MDR ) * ( ( Max( FirstVNF_Mem_Server,RRS ) * ARS ) / ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - ( DDR * Max( CRS,Min( ( Max( PN,ARS ) / Const ) ,CRS ) ) ) ) )", "choosing": "( Min( MUC ,RMSe ) - Min( CS ,Min( ( Max( RCSe,MUM ) / RRSe ) ,( MUM - Min( Max( RCSe,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( MUC / ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.6279527559055118, "obj2": 0.1979281156276059}, {"determining": "( ( ( ( ( ( AMS + ACS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ( Max( FirstVNF_Mem_Server,ACS ) - Max( ( DDR + CRS ),FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RCSe ,( MUM - Min( ( RMSe - RRSe ) ,( MUC - Max( RMSe,MUR ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4548704748856436}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( ARS - AMS ) ) + ( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,ACS ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,( FirstVNF_Mem / ( Const + MDR ) ) ) ) - ( ( CRS * ACS ) / Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( ( CS / Max( Max( MUM,RMSe ),( MUC + MUR ) ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ),CS ) ) / Min( ( MUC / RRSe ) ,( RRSe + RMSe ) ) ) - Min( CS ,( Min( DS ,MUC ) * ( MUM / RRSe ) ) ) )", "obj1": 0.905511811023622, "obj2": 0.032807224234632455}, {"determining": "( ( CRS - ( ( ( ( ( ( FirstVNF_RAM / MDR ) * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( ( ( FirstVNF_Mem_Server * ( Const + FirstVNF_Mem_Server ) ) * ARS ) / ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ACS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * PN ) ) ) ) * Max( RRS,MRS ) )", "choosing": "( Min( CS ,Min( RMSe ,( MUM - Min( ( ( MUR - RCSe ) - Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( DS + MUC ) ) ) ) ) ) ) - ( MUC - CS ) )", "obj1": 0.7322834645669292, "obj2": 0.11820470773948184}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * ( ( Min( ACS ,FirstVNF_RAM ) + ( ( PN * ( ( ( MDR * Const ) - FirstVNF_CPU ) / MRS ) ) - MDR ) ) - PN ) )", "choosing": "( ( ( ( ( DS * ( DS / RMSe ) ) + ( RRSe / ( ( Min( MUR ,DS ) / CS ) / MUR ) ) ) * MUC ) + DS ) / ( MLU * Max( ( ( Max( ( CS / MLU ),MUC ) + ( RMSe + ( ( MUM * MLU ) * MUC ) ) ) + Min( MUR ,CS ) ),( RMSe / MLU ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09747186101385884}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( MRS - ARS ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) ) ),ACS ) * Max( Max( BR,FirstVNF_RAM ),Const ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * MUM ) ) )", "obj1": 0.281496062992126, "obj2": 0.5276402612345418}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * ( ( Min( ACS ,FirstVNF_RAM ) * ( ( PN * ( ( ( MDR * MRS ) - FirstVNF_CPU ) / MRS ) ) - MDR ) ) - PN ) )", "choosing": "( ( ( ( ( DS * ( DS / RMSe ) ) + ( RRSe / ( ( Min( MUR ,DS ) / CS ) / DS ) ) ) * MUC ) + DS ) / ( Min( ( ( MUR * ( RMSe * MUC ) ) * RMSe ) ,MUC ) - ( Max( ( RCSe + RMSe ),Min( MUR ,Min( CS ,MUR ) ) ) * RRSe ) ) )", "obj1": 0.5, "obj2": 0.2930656615302583}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),( MDR - RRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / ( RMSe / ( RRSe + CS ) ) ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.59251968503937, "obj2": 0.22209909865221045}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( MDR - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.718503937007874, "obj2": 0.12841926562072925}, {"determining": "Max( ( FirstVNF_RAM - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6656114806164882}, {"determining": "( ( ( ( ( Max( Max( ( DDR / FirstVNF_Mem_Server ),FirstVNF_CPU ),AMS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - BR ) * Max( FirstVNF_Mem,( ( PN + FirstVNF_RAM ) + CRS ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( MUC / MUC ) * MUC ) - DS ) / ( MUC * ( ( ( MLU - ( Max( MLU,RCSe ) * CS ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5851198582832301}, {"determining": "( ( ( FirstVNF_Mem + ( FirstVNF_RAM_Server * PN ) ) / ( Const + FirstVNF_Mem ) ) * ( ( ( MDR - ( ( ( FirstVNF_CPU - ARS ) * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,RRS ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ) * Max( CRS,( ( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),FirstVNF_RAM ) + MRS ) / FirstVNF_CPU_Server ) ) ) - CRS ) )", "choosing": "( ( RCSe / ( RRSe / ( Min( MUC ,MLU ) - CS ) ) ) - Min( ( MUC * ( RMSe * MUC ) ) ,Min( Min( MUM ,CS ) ,( MUM - Min( ( ( ( CS + DS ) + CS ) + Max( Max( MUR,DS ),Max( MUR,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.11314071514731507}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * FirstVNF_RAM ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.3169291338582677, "obj2": 0.4943192221555767}, {"determining": "( ( ( ( MDR - ( ( ( AMS + FirstVNF_RAM ) + Max( ( FirstVNF_CPU_Server - RRS ),Min( MRS ,PN ) ) ) * PN ) ) * Min( ACS ,( DDR * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * ( MUC / Min( ( RMSe * DS ) ,CS ) ) ) + DS ) / ( MUC * Min( RCSe ,MUR ) ) )", "obj1": 0.6968503937007874, "obj2": 0.14713412050493282}, {"determining": "( Min( FirstVNF_Mem_Server ,Const ) * ( ( ACS * ( FirstVNF_CPU - CRS ) ) - MDR ) )", "choosing": "( ( ( RCSe * ( Min( RRSe ,MUM ) / MUR ) ) + ( ( RRSe + ( CS + MUM ) ) / Min( ( RMSe / DS ) ,( DS / DS ) ) ) ) / ( MUC * ( ( ( ( Min( MUR ,RCSe ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + MLU ) ) ) / ( ( MUC / Min( ( RMSe / RMSe ) ,CS ) ) - Max( RCSe,MLU ) ) ) * DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.15469300250798898}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( Max( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC - RMSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS * RMSe ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.5334645669291339, "obj2": 0.26562382680270646}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) * ( Max( ( PN * PN ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( Min( MLU ,Max( MUC,MUR ) ) / ( ( ( Min( CS ,Min( ( RCSe + Max( RMSe,MUM ) ) ,( ( RCSe / MUC ) + CS ) ) ) * RCSe ) / MUC ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.9173228346456693, "obj2": 0.031959072258495286}, {"determining": "( ( Max( CRS,MRS ) + ( ACS + ( Max( RRS,Min( Max( Const,( MDR * RRS ) ) ,( PN * BR ) ) ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( ( DS + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) + Max( ( MUC * Max( CS,( RRSe * MUM ) ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,Min( RCSe ,RRSe ) ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6396482660288625}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( DDR * FirstVNF_Mem_Server ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( MUC + Max( MUC,RMSe ) ) / ( CS * ( RCSe / ( ( RMSe * MLU ) * CS ) ) ) ) / RRSe )", "obj1": 0.844488188976378, "obj2": 0.06213276997103173}, {"determining": "( ( ( ( ( Max( Min( Min( FirstVNF_Mem_Server ,CRS ) ,RRS ),ARS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,Max( ACS,ARS ) ) ) ) * FirstVNF_Mem ) - MDR ) * Min( ACS ,Max( DDR,( ( FirstVNF_CPU + DDR ) + PN ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( RRSe * ( ( ( ( Max( RRSe,MUM ) + RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RCSe / CS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( MUC ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5755353999536376}, {"determining": "( BR * ( Max( Max( PN,ARS ),( ( RRS + Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),Const ) ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RCSe ) ) + ( Max( MUR,Max( Max( CS,MUM ),( DS * MUC ) ) ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( DS * ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( DS / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.705489645136341}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( FirstVNF_RAM + RRS ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( FirstVNF_RAM + Const ) / PN ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( MUC * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( Min( MUC ,Min( ( RMSe / DS ) ,CS ) ) - Max( ( ( MUR / MLU ) * MLU ),Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6739726779301969}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( FirstVNF_Mem_Server - ARS ) ) * ( ( ( ( ( Max( Const,( BR / DDR ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RCSe + DS ) ),( MLU + ( ( ( RCSe + CS ) * RRSe ) / MLU ) ) ) ) - Min( CS ,Min( RMSe ,( Min( Min( RCSe ,Max( MLU,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) - MUM ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5064550571203311}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * ( FirstVNF_Mem - Const ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( RMSe * DS ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * Min( RRSe ,MLU ) ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,( RMSe / RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6377952755905512, "obj2": 0.18791323475430105}, {"determining": "( Min( MRS ,PN ) * ( ( ( ( ( ( AMS + ( DDR - MDR ) ) + Max( Min( MDR ,AMS ),( MRS - AMS ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) + Max( CS,( Min( ( RMSe / DS ) ,CS ) + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * MUC ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * MUC ),( RRSe * ( DS * DS ) ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RMSe ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09671365759318461}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( MDR - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.7244094488188977, "obj2": 0.1256644533545887}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( Max( MDR,( ARS - CRS ) ) * PN ) - MDR ) * ( ( Max( FirstVNF_Mem_Server,RRS ) * ARS ) / ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( MUC - RMSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Max( RCSe,Max( MUR,MUR ) ) ,Min( RCSe ,RRSe ) ) ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.0829073062226755}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - AMS ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUR ) / RRSe ) * ( ( RMSe / CS ) + ( RRSe + DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.5669291338582677, "obj2": 0.2432374004524146}, {"determining": "( ( CRS - ( ( ( ( RRS + FirstVNF_CPU_Server ) - MDR ) - ( ACS - FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem / ( MRS + Max( RRS,CRS ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUC ) / RCSe ) - ( ( ( ( ( RCSe + RMSe ) + Max( CS,Max( MUM,Min( RRSe ,MUR ) ) ) ) / RRSe ) * ( MUR - RCSe ) ) / ( ( MUC - Min( ( RMSe / DS ) ,MUR ) ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01876630724433797}, {"determining": "( Max( PN,ACS ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ) ) - MDR ) )", "choosing": "( ( ( MLU * MLU ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.6913123192366332}, {"determining": "( Max( PN,ACS ) * ( ( ( CRS + FirstVNF_Mem ) * Min( ACS ,BR ) ) - MDR ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * MUC ) / ( ( Min( ( RCSe / MUM ) ,( MUR - RCSe ) ) / ( ( RMSe / DS ) - CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8956692913385826, "obj2": 0.040856237188203304}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,Min( BR ,FirstVNF_RAM_Server ) ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( Min( RCSe ,RMSe ) + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) + ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.25, "obj2": 0.573515807392448}, {"determining": "( ( ( ( PN * ( ( AMS + FirstVNF_RAM ) + ( RRS + FirstVNF_CPU_Server ) ) ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( ( RRS - ACS ) ,FirstVNF_Mem ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * Min( RCSe ,RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( DS + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / RRSe ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.265748031496063, "obj2": 0.561382343793996}, {"determining": "( ( MRS * RRS ) * ( FirstVNF_Mem * ( ( ( ( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,MRS ) ) + Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / Max( DS,Max( Min( ( Min( MLU ,CS ) - RCSe ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( ( DS * RMSe ) * DS ) + ( ( DS / DS ) / RRSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.16137864197526555}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5118196131471576}, {"determining": "( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( Max( MLU,Max( MLU,RRSe ) ) ,CS ) ,( ( Min( RCSe ,Min( RMSe ,RCSe ) ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.9862204724409449, "obj2": 0.006570719652771117}, {"determining": "( Max( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( Min( FirstVNF_CPU_Server ,PN ) + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( MUC * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07257770260418142}, {"determining": "( ( ( ( ( CRS - Min( MRS ,ARS ) ) / ( ( RRS * ( DDR * DDR ) ) - Max( ( AMS * FirstVNF_CPU ),FirstVNF_CPU_Server ) ) ) * Min( ( Max( Min( FirstVNF_Mem ,ACS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) * ( Max( ( PN * PN ),DDR ) / Const ) ) ,ACS ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( Min( MLU ,Max( MUC,MUR ) ) / ( ( ( Min( CS ,Min( ( RCSe + Max( RMSe,MUM ) ) ,( ( RCSe / MUC ) + CS ) ) ) * Max( ( RMSe + CS ),DS ) ) / MUC ) - ( MUM - ( RMSe / ( ( MUM - RRSe ) / MUC ) ) ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07990143735136722}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ( Const + DDR ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + BR ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,DS ),MUR ) ) ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011130737109416419}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( Max( PN,ACS ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),( MDR - RRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / ( RMSe / ( RRSe + CS ) ) ) + ( ( RMSe / DS ) + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.05094438866239016}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) * ( ( Min( ACS ,FirstVNF_RAM ) * ( ( PN * ( ( ( MDR * MRS ) - FirstVNF_CPU ) / MRS ) ) - MDR ) ) - PN ) )", "choosing": "( ( ( ( ( DS * ( DS / RMSe ) ) + ( RRSe / ( ( Min( MUR ,DS ) / CS ) / DS ) ) ) * MUC ) + DS ) / ( Min( ( ( MUR * ( RMSe * MUC ) ) * RMSe ) ,MUC ) - ( Max( ( RCSe + RMSe ),Min( MUR ,Min( CS ,MUR ) ) ) * RRSe ) ) )", "obj1": 0.5, "obj2": 0.2930656615302583}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS / RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * Min( ACS ,( AMS + ( RRS + Min( MRS ,Min( MDR ,AMS ) ) ) ) ) ) - CRS ) )", "choosing": "( ( MUC * ( ( ( Max( Min( RRSe ,MUM ),RRSe ) * ( DS / ( CS / RMSe ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) / ( ( MUR - CS ) + DS ) )", "obj1": 0.13976377952755906, "obj2": 0.6944811143868714}, {"determining": "( Max( ( MDR + DDR ),PN ) * ( ( ( MDR - ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - AMS ),Min( MDR ,PN ) ) ) * PN ) ) * ( ACS - FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( DS * RRSe ) - Min( CS ,Min( CS ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.5905511811023622, "obj2": 0.22526867655144947}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( Min( FirstVNF_RAM_Server ,RRS ) * ( ( Max( ( MDR * MDR ),( ACS / MDR ) ) - ARS ) + ARS ) )", "choosing": "( Max( MUC,MUM ) / ( MUC - ( ( CS / ( ( ( ( CS - MUM ) / MUC ) * MUM ) * ( RMSe + ( MUR / Min( CS ,MUR ) ) ) ) ) - DS ) ) )", "obj1": 0.5590551181102362, "obj2": 0.2512495070379408}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * FirstVNF_RAM ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.3110236220472441, "obj2": 0.499399455440135}, {"determining": "( Max( BR,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( Min( FirstVNF_Mem ,MRS ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS - RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( Max( RCSe,( ( CS * CS ) / ( MUR + CS ) ) ) - ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) * DS ) ) )", "obj1": 0.5807086614173228, "obj2": 0.23107324724640982}, {"determining": "( Max( ACS,( ( AMS + DDR ) + Max( ( ( ( Const + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ) - RRS ),Min( PN ,AMS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * BR ) - CRS ) )", "choosing": "( ( ( Max( ( DS + Min( CS ,Min( Min( MLU ,MUC ) ,CS ) ) ),CS ) - Min( RCSe ,RRSe ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( RCSe * Min( ( MUM + RRSe ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.9330708661417323, "obj2": 0.02543029038446557}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( Max( ( FirstVNF_Mem_Server * ACS ),Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( ACS - RRS ),Max( FirstVNF_RAM_Server,MRS ) ) ) * ACS ) ) ) - CRS ) )", "choosing": "( ( MUM - ( MUM - MLU ) ) - Min( Min( RMSe ,( MUM - Min( ( MLU / Min( CS ,MLU ) ) ,( MUM - ( Min( RCSe ,MUC ) * MUR ) ) ) ) ) ,CS ) )", "obj1": 0.5452755905511811, "obj2": 0.256955686613975}, {"determining": "( ( ( ( ( ( AMS + ACS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( Const + MRS ) ) - MDR ) * Min( FirstVNF_Mem_Server ,( Max( ARS,ACS ) - Max( ( DDR + CRS ),FirstVNF_CPU_Server ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) + RRSe ) / RCSe ) - Min( CS ,Min( RCSe ,( MUM - Min( ( RMSe - RRSe ) ,Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.45632169842439957}, {"determining": "( Max( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( RRS - AMS ) ) - FirstVNF_Mem_Server ),ACS ) * ( CRS - ( ( ( ( ( Min( FirstVNF_CPU_Server ,PN ) + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC - RMSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Max( RCSe,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / Min( CS ,Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.06817806344204237}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( ( DS / MLU ) / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * MUM ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6121990883521672}, {"determining": "( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_Mem ,Min( FirstVNF_Mem ,CRS ) ) ,BR ) ) ) * PN ) - MDR ) * Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( ( ( ( ( DS / DS ) / RRSe ) + ( DS * ( DS * RMSe ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( ( DS / DS ) ,MUM ) / RRSe ) * ( DS / Min( Max( DS,MUC ) ,DS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( MUM,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * Min( CS ,( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.43503937007874016, "obj2": 0.3643417805433821}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) * ( Max( ( PN * FirstVNF_Mem ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( Min( MLU ,Max( MUC,MUR ) ) / ( ( ( Min( CS ,Min( ( RCSe + Max( RMSe,MUM ) ) ,( ( RRSe / MUC ) + CS ) ) ) * RCSe ) / MUC ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.797244094488189, "obj2": 0.0767712602126942}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ACS,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.488546327496048}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - AMS ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC - RMSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Max( RCSe,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.5748031496062992, "obj2": 0.23618537661766503}, {"determining": "( Max( PN,PN ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_Mem ,Min( FirstVNF_Mem ,CRS ) ) ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( ( DS / DS ) / RRSe ) + ( DS * ( DS * RMSe ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( ( DS / DS ) ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * Min( CS ,( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.43503937007874016, "obj2": 0.3643417805433821}], "43": [{"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - Max( ( PN * FirstVNF_Mem ),BR ) ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS / RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * Min( ACS ,( AMS + ( RRS - FirstVNF_Mem_Server ) ) ) ) - CRS ) )", "choosing": "( ( ( MUR - CS ) + DS ) / ( MUC * ( ( ( Max( Min( RRSe ,MUM ),RRSe ) * ( DS / ( CS / RMSe ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + Min( MRS ,MDR ) ),( RRS / ( ARS - MRS ) ) )", "choosing": "( ( MUC / ( Min( ( Min( Max( RRSe,( DS * DS ) ) ,CS ) + ( MUM / ( MUM + CS ) ) ) ,CS ) * DS ) ) / ( Max( ( DS - MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( Min( ( MLU / ( MUR / Min( Max( RCSe,RCSe ) ,( CS / CS ) ) ) ) ,RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8473084721343253}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * ( FirstVNF_Mem - Const ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( RMSe * DS ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * Min( RRSe ,MLU ) ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,( RMSe / RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6377952755905512, "obj2": 0.18791323475430105}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + FirstVNF_Mem_Server ) ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - BR ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) - ( DS / RMSe ) ) / ( ( MUC + ( ( MLU * MLU ) + CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7138329183836766}, {"determining": "( ( FirstVNF_RAM + ( ACS * ( FirstVNF_Mem + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * PN ) * MDR ) )", "choosing": "( ( ( ( MUM + ( RMSe + MLU ) ) * ( DS / Min( MUC ,Max( ( Max( RRSe,DS ) + MUC ),MUR ) ) ) ) + ( MUC - Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( RCSe - MUR ) * ( Min( RRSe ,MUR ) / RRSe ) ) / ( ( ( ( MUM * CS ) * ( CS * MLU ) ) * RCSe ) - ( RCSe * MUR ) ) ) * DS ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20876858120715863}, {"determining": "( ( ( Min( MRS ,FirstVNF_RAM ) * ( PN / BR ) ) * Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server * ( MDR - Max( Const,PN ) ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( MUR + ( MUR * MUC ) ) / RRSe ) ) * MUC ) + DS ) / ( ( CS * ( DS + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( ( MLU * RMSe ) ,RMSe ) / RRSe ) * ( Min( MUC ,Min( MUM ,RRSe ) ) / RMSe ) ) / ( ( MUC / Min( Min( RRSe ,RRSe ) ,MUR ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4704724409448819, "obj2": 0.3153311577926612}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "( ( ( ( ( ( ( MRS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( ( ( ( Const - RRS ) + ( DDR - MDR ) ) + Max( Min( MDR ,AMS ),( MRS - AMS ) ) ) * PN ) - MDR ),ACS ) )", "choosing": "( ( Max( CS,( MUM - MLU ) ) + DS ) / ( MUC * ( ( ( Min( CS ,( RMSe / DS ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * RRSe ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6322840796186063}, {"determining": "( ( MRS * RRS ) * ( FirstVNF_Mem * ( ( ( ( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,MRS ) ) + Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / Max( DS,Max( Min( ( Min( MLU ,CS ) - RCSe ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( ( DS * RMSe ) * DS ) + ( ( DS / DS ) / RRSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.16137864197526555}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( DDR * FirstVNF_Mem_Server ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( MUC - RMSe ) - Min( CS ,Min( RMSe ,( MUM - Min( Max( RCSe,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / Min( CS ,Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 0.84251968503937, "obj2": 0.0572135681416797}, {"determining": "( Max( RRS,MRS ) * ( ( ( MDR - ( ( ( FirstVNF_Mem_Server - ACS ) + Max( FirstVNF_Mem_Server,Min( MDR ,FirstVNF_CPU_Server ) ) ) * PN ) ) * Min( ACS ,Min( FirstVNF_Mem_Server ,( DDR / ACS ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RMSe ,RCSe ) ) ) ) / Max( ( ( RMSe / ( RMSe / ( RRSe + CS ) ) ) + Min( RRSe ,DS ) ),( MLU + Max( ( ( ( MUR + MUR ) / MUR ) * MUC ),Max( MUR,MUR ) ) ) ) ) - ( MUR * Min( ( ( MUR * RRSe ) - ( Min( RCSe ,MUC ) / Min( RRSe ,MUM ) ) ) ,RRSe ) ) )", "obj1": 0.6259842519685039, "obj2": 0.19700466469661235}, {"determining": "( Max( PN,PN ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( ( MDR - MDR ) ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( RRSe / ( DS / DS ) ) + ( DS * ( DS * RMSe ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( ( DS / DS ) ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / MUM ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * ( CS / ( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38357140851882826}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( DDR - FirstVNF_RAM_Server ) * Min( ACS ,PN ) ) - CRS ) )", "choosing": "( ( DS * MUR ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5390133088198928}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,Min( BR ,FirstVNF_RAM_Server ) ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( Min( RCSe ,RMSe ) + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) + ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.25, "obj2": 0.573515807392448}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "Max( ( ACS / Max( CRS,RRS ) ),( MRS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RCSe / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * Max( Min( RCSe ,RMSe ),( MUR * Min( ( ( RMSe / RCSe ) * CS ) ,RMSe ) ) ) ) / MUC ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.820481911352113}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) - Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( DDR * Max( CRS,Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "( ( CS + CS ) / ( Max( ( CS + ( MLU * MUR ) ),RMSe ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( CS / DS ) ) / ( ( MUC / ( MLU * DS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3726374908160192}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) * ( ( ( ( ( Min( ( ARS + MRS ) ,FirstVNF_RAM ) + AMS ) * Max( ( CRS - RRS ),Min( ( AMS + DDR ) ,PN ) ) ) - MDR ) * Min( ACS ,( RRS - MDR ) ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( MUC * ( ( ( MLU / MUM ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS + CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) / ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / MLU ) ) * Max( DS,MUC ) ) + DS ) )", "obj1": 0.3700787401574803, "obj2": 0.4395773761814482}, {"determining": "( ( ( ( PN * ( ( AMS + FirstVNF_RAM ) + ( RRS + FirstVNF_CPU_Server ) ) ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( ( RRS - ACS ) ,FirstVNF_Mem ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * Min( RCSe ,RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( DS + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / RRSe ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.265748031496063, "obj2": 0.561382343793996}, {"determining": "( ( DDR + MRS ) * ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( Max( ( CS * ( MLU * MUM ) ),( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Min( RCSe ,Max( RCSe,Min( RCSe ,DS ) ) ) ) ) * ( RCSe * RRSe ) ) ) )", "obj1": 0.5196850393700787, "obj2": 0.2741887782786079}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( ( ( Max( MRS,Min( FirstVNF_Mem ,MRS ) ) + MDR ) - ( FirstVNF_CPU * ( BR / ( PN * BR ) ) ) ) - Max( Max( ACS,Max( Max( MDR,DDR ),BR ) ),( FirstVNF_Mem_Server * DDR ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( ( MLU * Min( Min( Max( ( ( RRSe * MLU ) - CS ),DS ) ,MUR ) ,( ( ( Min( MUR ,DS ) * RCSe ) + Max( ( RRSe * MUR ),RRSe ) ) - ( MUC - Max( CS,( RRSe * MUM ) ) ) ) ) ) * MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.6181098641056284}, {"determining": "( PN - ( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( MUR * ( ( RCSe / RMSe ) - Max( DS,MUM ) ) ) ) + DS ) / ( MUC * ( ( ( ( ( Min( DS ,MUM ) + MUM ) / RRSe ) * Max( DS,( CS + ( RRSe / MLU ) ) ) ) / ( ( MUC / ( ( RMSe / DS ) / CS ) ) - Max( MUR,RCSe ) ) ) * DS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6084806348126973}, {"determining": "( Max( PN,ACS ) * ( Max( ( MRS - ( ( AMS * ARS ) / ( DDR - Const ) ) ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * Const ) )", "choosing": "( ( ( ( ( DS / ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Min( MUM ,( DS + CS ) ) - RCSe ) )", "obj1": 0.33070866141732286, "obj2": 0.47984870971098587}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.642631688467603}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( Min( FirstVNF_RAM_Server ,RRS ) * ( ( Max( ( MDR * MDR ),( ACS / MDR ) ) - ARS ) + ARS ) )", "choosing": "( Max( MUC,MUM ) / ( MUC - ( ( CS / ( ( ( ( CS - MUM ) / MUC ) * MUM ) * ( RMSe + ( MUR / Min( CS ,MUR ) ) ) ) ) - DS ) ) )", "obj1": 0.5590551181102362, "obj2": 0.2512495070379408}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_CPU_Server ) * Min( ACS ,( ( ( ( DDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ) - AMS ) * FirstVNF_Mem ) ) ) - CRS ) )", "choosing": "( Min( Max( MUM,MUC ) ,MLU ) / ( Min( MUM ,RCSe ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.04235727086380719}, {"determining": "( BR * ( Max( Max( PN,ARS ),( ( RRS + Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),Const ) ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RCSe ) ) + ( Max( MUR,Max( Max( CS,MUM ),( DS * MUC ) ) ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( DS * ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( DS / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.705489645136341}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) ,( ( ( AMS + FirstVNF_RAM ) + Min( AMS ,Const ) ) * PN ) ) ) - MDR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( CS / Min( MUC ,RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( ( MUC + CS ) + MUM ) + ( MUM - Min( RCSe ,( MUC - Max( ( RMSe / CS ),MUR ) ) ) ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.13735198966928233}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ,CS ) ,( ( Min( RCSe ,RMSe ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( Max( MLU,Max( MLU,RRSe ) ) ,CS ) ,( ( Min( RCSe ,Min( RMSe ,RCSe ) ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.9862204724409449, "obj2": 0.006570719652771117}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( Max( ( ( DDR + AMS ) + Max( ( Min( Min( ( MDR * Const ) ,( PN - MDR ) ) ,Min( RRS ,AMS ) ) * ( ( AMS - ARS ) / BR ) ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) ) ) - CRS ) )", "choosing": "( ( MUC - DS ) - ( CS / ( ( RRSe - DS ) * ( ( CS + ( MUM - ( RRSe / ( CS * MUM ) ) ) ) - MUM ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.3549551372186988}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Max( FirstVNF_RAM_Server,RRS ) ) ,ACS ) - Min( ( FirstVNF_CPU_Server * PN ) ,MDR ) ) + CRS ),AMS ) ),( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ) - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( DS / MUM ) - ( CS + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + Min( MUR ,MUR ) ) / ( CS - DS ) ) ) + ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8432782116452626}, {"determining": "( ( MRS - RRS ) * ( FirstVNF_Mem * ( ( ( ( ( AMS + DDR ) + Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.16137864197526555}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( Max( ( FirstVNF_Mem_Server * ACS ),Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( ACS - RRS ),Max( FirstVNF_RAM_Server,MRS ) ) ) * ACS ) ) ) - CRS ) )", "choosing": "( ( MUM - ( MUM - MLU ) ) - Min( Min( RMSe ,( MUM - Min( ( MLU / Min( CS ,MLU ) ) ,( MUM - ( Min( RCSe ,MUC ) * MUR ) ) ) ) ) ,CS ) )", "obj1": 0.5452755905511811, "obj2": 0.256955686613975}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( Max( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC - RMSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS * RMSe ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.5334645669291339, "obj2": 0.26562382680270646}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_Mem ,Min( FirstVNF_Mem ,CRS ) ) ,BR ) ) ) * PN ) - MDR ) * Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Min( RCSe ,Max( RCSe,Min( DS ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39629927938736864}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( MRS - ARS ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) ) ),ACS ) * Max( Max( BR,FirstVNF_RAM ),Const ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * MUM ) ) )", "obj1": 0.281496062992126, "obj2": 0.5276402612345418}, {"determining": "( Max( PN,ACS ) * ( ( ( MRS - ( ( AMS * ARS ) / ( DDR - Const ) ) ) / ( ( ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - Const ),Min( CRS ,MDR ) ) ) * PN ) - MDR ) ) * CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,Max( RMSe,MLU ) ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4841545550243651}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( ARS - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4547244094488189, "obj2": 0.33016352683526456}, {"determining": "( ( ( ( MDR - ( ( ( AMS + FirstVNF_RAM ) + Max( ( FirstVNF_CPU_Server - RRS ),Min( MRS ,PN ) ) ) * PN ) ) * Min( ACS ,( DDR * FirstVNF_Mem ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * ( MUC / Min( ( RMSe * DS ) ,CS ) ) ) + DS ) / ( MUC * Min( RCSe ,MUR ) ) )", "obj1": 0.6968503937007874, "obj2": 0.14713412050493282}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS / RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * Min( ACS ,( AMS + ( RRS + Min( MRS ,Min( MDR ,AMS ) ) ) ) ) ) - CRS ) )", "choosing": "( ( MUC * ( ( ( Max( Min( RRSe ,MUM ),RRSe ) * ( DS / ( CS / RMSe ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) / ( ( MUR - CS ) + DS ) )", "obj1": 0.13976377952755906, "obj2": 0.6944811143868714}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),( MDR - RRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / ( RMSe / ( RRSe + CS ) ) ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.59251968503937, "obj2": 0.22209909865221045}, {"determining": "( ( ( ( ( ( FirstVNF_CPU + RRS ) * PN ) - MDR ) * Min( ( Max( Min( FirstVNF_Mem ,ACS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) * ( Max( ( PN * PN ),BR ) / Const ) ) ,ACS ) ) + CRS ) * FirstVNF_RAM )", "choosing": "( Min( MLU ,Max( MUC,MUR ) ) / ( ( ( Min( CS ,Min( ( RCSe + Max( RMSe,MLU ) ) ,( ( RCSe / MUC ) + CS ) ) ) * RCSe ) / MUC ) - ( MUM - ( Max( Min( ( ( CS + MUM ) / Min( MLU ,MUC ) ) ,RRSe ),( MUR * RRSe ) ) / ( MUM / MUC ) ) ) ) )", "obj1": 0.8681102362204725, "obj2": 0.04823950154091913}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + ( FirstVNF_CPU + PN ) ) + Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ),( MRS + CRS ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + Max( DDR,Const ) ) ) )", "choosing": "( Max( MUR,MLU ) / ( MUC * ( ( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( MUM + CS ) ) ) ) / ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) ) * DS ) ) )", "obj1": 0.15354330708661418, "obj2": 0.6815367558610935}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( ( ( ( ( ( AMS + ACS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ( Max( FirstVNF_Mem_Server,ACS ) - Max( ( DDR + CRS ),FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RCSe ,( MUM - Min( ( RMSe - RRSe ) ,( MUC - Max( RMSe,MUR ) ) ) ) ) ) )", "obj1": 0.3641732283464567, "obj2": 0.447992570459349}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( ACS - RRS ),Max( FirstVNF_RAM_Server,MRS ) ) ) * ACS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( Min( RMSe ,( MUM - Min( ( MLU / Min( CS ,MLU ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ,CS ) )", "obj1": 0.49606299212598426, "obj2": 0.29515453131794556}, {"determining": "( ( ( ( ( Max( Max( ( DDR / FirstVNF_Mem_Server ),FirstVNF_CPU ),AMS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - BR ) * Max( FirstVNF_Mem,( ( PN + FirstVNF_RAM ) + CRS ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( MUC / MUC ) * MUC ) - DS ) / ( MUC * ( ( ( MLU - ( Max( MLU,RCSe ) * CS ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5851198582832301}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( FirstVNF_CPU_Server + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * FirstVNF_RAM ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4822834645669291, "obj2": 0.30263103503288163}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( RCSe * ( Min( RRSe ,MUM ) / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * MUC ) )", "obj1": 0.234251968503937, "obj2": 0.5958350028575667}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) * ( Max( ( PN * FirstVNF_Mem ),BR ) / Const ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.7716535433070866, "obj2": 0.08687193735384907}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( Max( BR,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( Min( FirstVNF_Mem ,MRS ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS - RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( Max( RCSe,( ( CS * CS ) / ( MUR + CS ) ) ) - ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) * DS ) ) )", "obj1": 0.5807086614173228, "obj2": 0.23107324724640982}, {"determining": "( ( ( ( ( Max( Min( Min( FirstVNF_Mem_Server ,CRS ) ,RRS ),ARS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,Max( ACS,ARS ) ) ) ) * FirstVNF_Mem ) - MDR ) * Min( ACS ,Max( DDR,( ( FirstVNF_CPU + DDR ) + PN ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( RRSe * ( ( ( ( Max( RRSe,MUM ) + RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RCSe / CS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( MUC ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5755353999536376}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( ARS - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( DDR * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,( DS / DS ) ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.9311023622047244, "obj2": 0.030571534731387715}, {"determining": "( Max( ACS,( ( AMS + DDR ) + Max( ( ( ( Const + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ) - RRS ),Min( PN ,AMS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) - MDR ) * BR ) - CRS ) )", "choosing": "( ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.9133858267716536, "obj2": 0.03135097867999136}, {"determining": "( Max( PN,PN ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_Mem ,Min( FirstVNF_Mem ,CRS ) ) ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( Min( ( RMSe / DS ) ,CS ) * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.39960629921259844, "obj2": 0.40949595442911213}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( Max( MDR,( ARS - CRS ) ) * PN ) - MDR ) * ( ( Max( FirstVNF_Mem_Server,RRS ) * ARS ) / ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08241930695325018}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( FirstVNF_Mem_Server - ARS ) ) * ( ( ( ( ( Max( Const,( BR / DDR ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RCSe + DS ) ),( MLU + ( ( ( RCSe + CS ) * RRSe ) / MLU ) ) ) ) - Min( CS ,Min( RMSe ,( Min( Min( RCSe ,Max( MLU,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) - MUM ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5064550571203311}, {"determining": "Max( ( MDR + ( DDR - MDR ) ),( RRS - ( PN * ACS ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6623060484522048}, {"determining": "( ( ( ( ( ( AMS + ACS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ( Max( FirstVNF_Mem_Server,ACS ) - Max( ( DDR + CRS ),FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) / RRSe ) / RCSe ) - Min( CS ,Min( RCSe ,( MUM - Min( ( RMSe - RRSe ) ,( MUC - Max( RMSe,MUR ) ) ) ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.4204076983595796}, {"determining": "( Max( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) + RRS ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( Min( FirstVNF_CPU_Server ,PN ) + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( Max( RCSe,MUR ) - Min( CS ,Min( RMSe ,( MUM - Min( Max( RCSe,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.8188976377952756, "obj2": 0.0659435573958059}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ( Const + DDR ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + BR ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,DS ),MUR ) ) ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011130737109416419}, {"determining": "( Max( PN,ACS ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4015748031496063, "obj2": 0.39924084431425494}, {"determining": "( ( CRS - ( ( ( ( RRS + FirstVNF_CPU_Server ) - MDR ) - ( ACS - FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem / ( MRS + Max( RRS,CRS ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUC ) / RCSe ) - ( ( ( ( ( RCSe + RMSe ) + Max( CS,Max( MUM,Min( RRSe ,MUR ) ) ) ) / RRSe ) * ( MUR - RCSe ) ) / ( ( MUC - Min( ( RMSe / DS ) ,MUR ) ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01876630724433797}, {"determining": "( Max( PN,PN ) * ( ( Max( Max( FirstVNF_Mem_Server,Min( Min( ( FirstVNF_RAM_Server * MRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,BR ) ),( AMS + DDR ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( ( DS / DS ) / RRSe ) + ( ( DS * ( CS - Min( MUC ,MLU ) ) ) * ( ( ( DS * RCSe ) + RMSe ) - ( Min( MUR ,RCSe ) / RMSe ) ) ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( Min( ( RMSe / DS ) ,CS ) * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) + Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.38976377952755903, "obj2": 0.4117523187823042}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( Max( PN,ACS ) + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * FirstVNF_RAM ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RRSe ) ) ) ) ) * DS ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5193435833612241}, {"determining": "( Max( PN,ACS ) * ( ( ( CRS + FirstVNF_Mem ) * Min( ACS ,BR ) ) - MDR ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * MUC ) / ( ( Min( ( RCSe / MUM ) ,( MUR - RCSe ) ) / ( ( RMSe / DS ) - CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8956692913385826, "obj2": 0.040856237188203304}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( ( ( FirstVNF_Mem + ( FirstVNF_RAM_Server * PN ) ) / ( Const + FirstVNF_Mem ) ) * ( ( ( MDR - ( ( ( FirstVNF_CPU - ARS ) * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,RRS ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ) * Max( CRS,( ( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),FirstVNF_RAM ) + MRS ) / FirstVNF_CPU_Server ) ) ) - CRS ) )", "choosing": "( ( RCSe / ( RRSe / ( Min( MUC ,MLU ) - CS ) ) ) - Min( ( MUC * ( RMSe * MUC ) ) ,Min( Min( MUM ,CS ) ,( MUM - Min( ( ( ( CS + DS ) + CS ) + Max( Max( MUR,DS ),Max( MUR,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.11314071514731507}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "Max( ( FirstVNF_RAM - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6656114806164882}, {"determining": "( Max( ( MDR + DDR ),PN ) * ( ( ( MDR - ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - AMS ),Min( MDR ,PN ) ) ) * PN ) ) * ( ACS - FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( DS * RRSe ) - Min( CS ,Min( CS ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.5905511811023622, "obj2": 0.22526867655144947}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + ( AMS + DDR ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( ( DS / DS ) + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5393700787401575, "obj2": 0.2628787663142208}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ( Max( FirstVNF_Mem_Server,RRS ) * ARS ) ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_RAM ,MDR ) ) ) * PN ) ) ) - MDR ) )", "choosing": "( ( ( Min( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( ( MUC + CS ) + MUM ) + ( MUM - Min( RCSe ,( MUC - Max( Max( MUR,MLU ),MUR ) ) ) ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.002208222515738711}, {"determining": "( Max( ( Max( ( RRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) + ( AMS + DDR ) ),( DDR * PN ) ) * ( ( ( MDR - ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ARS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) ) / Min( Const ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( RMSe * MLU ) + MLU ) ) * RMSe ) + ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RCSe / ( Max( MUM,DS ) / ( MLU / CS ) ) ) ) ) * DS ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( RMSe / ( MUC - ( ( MUM - MUM ) + ( MUR * DS ) ) ) ) ) * DS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.52422093769799}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( Max( PN,ACS ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),( MDR - RRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / ( RMSe / ( RRSe + CS ) ) ) + ( ( RMSe / DS ) + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.05094438866239016}, {"determining": "( ( CRS - ( ( ( ( ( ( FirstVNF_RAM / MDR ) * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( ( ( FirstVNF_Mem_Server * ( Const + FirstVNF_Mem_Server ) ) * ARS ) / ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ACS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * PN ) ) ) ) * Max( RRS,MRS ) )", "choosing": "( Min( CS ,Min( RMSe ,( MUM - Min( ( ( MUR - RCSe ) - Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( DS + MUC ) ) ) ) ) ) ) - ( MUC - CS ) )", "obj1": 0.7322834645669292, "obj2": 0.11820470773948184}, {"determining": "( Min( MRS ,PN ) * ( ( ( ( ( ( AMS + ( DDR - MDR ) ) + Max( Min( MDR ,AMS ),( MRS - AMS ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) + Max( CS,( Min( ( RMSe / DS ) ,CS ) + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * MUC ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * MUC ),( RRSe * ( DS * DS ) ) ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RMSe ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09671365759318461}, {"determining": "( Min( MRS ,PN ) * ( ( ( ( ( ( AMS + ( DDR - MDR ) ) + Max( Min( MDR ,AMS ),BR ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) + Max( CS,( Min( ( RMSe / DS ) ,CS ) + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * MUC ) + ( RRSe + DS ) ),DS ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RMSe ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.7559055118110236, "obj2": 0.0996808590590549}, {"determining": "( ( ( ( ( ( AMS + ACS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( Const + MRS ) ) - MDR ) * Min( FirstVNF_Mem_Server ,( Max( ARS,ACS ) - Max( ( DDR + CRS ),FirstVNF_CPU_Server ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) + RRSe ) / RCSe ) - Min( CS ,Min( RCSe ,( MUM - Min( ( RMSe - RRSe ) ,Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.45632169842439957}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( ARS - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4547244094488189, "obj2": 0.33016352683526456}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_Mem ,Min( FirstVNF_Mem ,CRS ) ) ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( ( DS / DS ) / RRSe ) + ( DS * ( DS * RMSe ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( ( DS / DS ) ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * Min( CS ,( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.43700787401574803, "obj2": 0.36051985816036003}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( DDR - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,MUM ) ) ) ) * DS ) ) )", "obj1": 0.6909448818897638, "obj2": 0.14804083333767204}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_RAM ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( RRSe / ( DS / DS ) ) ) * MUC ) + ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) ) / ( MUC * ( ( ( ( CS * Max( MLU,MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,DS ) ) ) ) ) * DS ) ) )", "obj1": 0.4822834645669291, "obj2": 0.30263103503288163}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_Mem * MDR ) + FirstVNF_RAM ) + Max( ( MRS - AMS ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( CRS,( ( ( AMS + MDR ) + ( ( Max( FirstVNF_Mem_Server,Const ) - RRS ) * Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) )", "choosing": "( ( ( ( ( ( DS / DS ) / RRSe ) + ( DS * ( DS * RMSe ) ) ) * MUC ) + DS ) / Min( MUR ,CS ) )", "obj1": 0.5748031496062992, "obj2": 0.23544934672585327}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( MDR - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.7244094488188977, "obj2": 0.1256644533545887}, {"determining": "( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( MDR - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( RMSe * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.7145669291338582, "obj2": 0.13163247104811412}, {"determining": "( Max( RRS,MRS ) * ( CRS - ( ( ( ( ( ARS - ARS ) + MDR ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_CPU ) + ( AMS + FirstVNF_RAM ) ) * PN ) ) ) ) )", "choosing": "( ( ( Min( RCSe ,( ( ( RMSe - MUM ) / MLU ) / Min( ( RMSe / DS ) ,CS ) ) ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MLU * RMSe ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( Max( MUR,MUR ) ,RCSe ) ,( MUM - Max( ( RCSe * MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5098425196850394, "obj2": 0.2836578786692646}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Max( ( ( ARS / PN ) / FirstVNF_CPU ),BR ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( Min( MLU ,Max( MUC,MUR ) ) / ( ( ( Min( CS ,Min( ( RCSe + MLU ) ,( ( RCSe / MUC ) + CS ) ) ) * RCSe ) / MUC ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.7893700787401575, "obj2": 0.0798643263429432}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM - ACS ) ) + ( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,ACS ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,( FirstVNF_Mem / ( Const + MDR ) ) ) ) - ( ( CRS * ACS ) / Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) - Max( ( ( CS / Max( Max( MUM,RMSe ),( MUC + MUR ) ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ),CS ) ) / Min( ( CS * CS ) ,( RRSe + RMSe ) ) ) - Min( CS ,( Min( DS ,MUC ) * ( MUM / RRSe ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.03960045507427075}], "44": [{"determining": "( Max( FirstVNF_RAM_Server,AMS ) * ( ( ( ( ( Min( ( ARS + MRS ) ,FirstVNF_RAM ) + AMS ) * Max( ( AMS + DDR ),Min( ( AMS + DDR ) ,PN ) ) ) - MDR ) * Min( ACS ,( CRS - MDR ) ) ) - ( ( Min( ACS ,FirstVNF_Mem ) * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( MUC * ( ( ( MLU / MUM ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( MUM / MUR ) / ( RRSe + CS ) ) ) ) ) * DS ) ) / ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / MLU ) ) * ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - Max( ( PN * FirstVNF_Mem ),BR ) ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + Min( MRS ,MDR ) ),( RRS / ( ARS - MRS ) ) )", "choosing": "( ( MUC / ( Min( ( Min( Max( RRSe,( DS * DS ) ) ,CS ) + ( MUM / ( MUM + CS ) ) ) ,CS ) * DS ) ) / ( Max( ( DS - MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( Min( ( MLU / ( MUR / Min( Max( RCSe,RCSe ) ,( CS / CS ) ) ) ) ,RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8473084721343253}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + FirstVNF_Mem_Server ) ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - BR ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) - ( DS / RMSe ) ) / ( ( MUC + ( ( MLU * MLU ) + CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7138329183836766}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( FirstVNF_Mem_Server - ARS ) ) * ( ( ( ( ( Max( Const,( BR / DDR ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RCSe + DS ) ),( MLU + ( ( ( RCSe + CS ) * RRSe ) / MLU ) ) ) ) - Min( CS ,Min( RMSe ,( Min( Min( RCSe ,Max( MLU,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) - MUM ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5064550571203311}, {"determining": "( ( FirstVNF_RAM + ( ACS * ( FirstVNF_Mem + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * PN ) * MDR ) )", "choosing": "( ( ( ( MUM + ( RMSe + MLU ) ) * ( DS / Min( MUC ,Max( ( Max( RRSe,DS ) + MUC ),MUR ) ) ) ) + ( MUC - Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( RCSe - MUR ) * ( Min( RRSe ,MUR ) / RRSe ) ) / ( ( ( ( MUM * CS ) * ( CS * MLU ) ) * RCSe ) - ( RCSe * MUR ) ) ) * DS ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20876858120715863}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "( PN - ( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( MUR * ( ( RCSe / RMSe ) - Max( DS,MUM ) ) ) ) + DS ) / ( MUC * ( ( ( ( ( Min( DS ,MUM ) + MUM ) / RRSe ) * Max( DS,( CS + ( RRSe / MLU ) ) ) ) / ( ( MUC / ( ( RMSe / DS ) / CS ) ) - Max( MUR,RCSe ) ) ) * DS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6084806348126973}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),( MDR - RRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / ( RMSe / ( RRSe + CS ) ) ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.59251968503937, "obj2": 0.22209909865221045}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( RCSe * ( Min( RRSe ,MUM ) / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * MUC ) )", "obj1": 0.234251968503937, "obj2": 0.5958350028575667}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) - Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( DDR * Max( CRS,Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "( ( CS + CS ) / ( Max( ( CS + ( MLU * MUR ) ),RMSe ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( CS / DS ) ) / ( ( MUC / ( MLU * DS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3726374908160192}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ( Const + DDR ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + BR ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,DS ),MUR ) ) ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011130737109416419}, {"determining": "( ( ( Min( MRS ,FirstVNF_RAM ) * ( PN / BR ) ) * Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server * ( MDR - Max( Const,PN ) ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( MUR + ( MUR * MUC ) ) / RRSe ) ) * MUC ) + DS ) / ( ( CS * ( DS + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( ( MLU * RMSe ) ,RMSe ) / RRSe ) * ( Min( MUC ,Min( MUM ,RRSe ) ) / RMSe ) ) / ( ( MUC / Min( Min( RRSe ,RRSe ) ,MUR ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4704724409448819, "obj2": 0.3153311577926612}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( DDR - FirstVNF_RAM_Server ) * Min( ACS ,PN ) ) - CRS ) )", "choosing": "( ( DS * MUR ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5390133088198928}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "Max( ( ACS / Max( CRS,RRS ) ),( MRS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RCSe / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * Max( Min( RCSe ,RMSe ),( MUR * Min( ( ( RMSe / RCSe ) * CS ) ,RMSe ) ) ) ) / MUC ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.820481911352113}, {"determining": "( ( CRS - ( ( ( ( RRS + FirstVNF_CPU_Server ) - MDR ) - ( ACS - FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem / ( MRS + Max( RRS,CRS ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUC ) / RCSe ) - ( ( ( ( ( RCSe + RMSe ) + Max( CS,Max( MUM,Min( RRSe ,MUR ) ) ) ) / RRSe ) * ( MUR - RCSe ) ) / ( ( MUC - Min( ( RMSe / DS ) ,MUR ) ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01876630724433797}, {"determining": "( Max( PN,ACS ) * ( ( ( MRS - ( ( AMS * ARS ) / ( DDR - Const ) ) ) / ( ( ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - Const ),Min( CRS ,MDR ) ) ) * PN ) - MDR ) ) * CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,Max( RMSe,MLU ) ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4841545550243651}, {"determining": "( ( ( ( PN * ( ( AMS + FirstVNF_RAM ) + ( RRS + FirstVNF_CPU_Server ) ) ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( ( RRS - ACS ) ,FirstVNF_Mem ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * Min( RCSe ,RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( DS + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / RRSe ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.265748031496063, "obj2": 0.561382343793996}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_Mem ,Min( FirstVNF_Mem ,CRS ) ) ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( ( DS / DS ) / RRSe ) + ( DS * ( DS * RMSe ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( ( DS / DS ) ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * Min( CS ,( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.43700787401574803, "obj2": 0.36051985816036003}, {"determining": "( Min( FirstVNF_RAM_Server ,RRS ) * ( ( Max( ( MDR * MDR ),( ACS / MDR ) ) - ARS ) + ARS ) )", "choosing": "( Max( MUC,MUM ) / ( MUC - ( ( CS / ( ( ( ( CS - MUM ) / MUC ) * MUM ) * ( RMSe + ( MUR / Min( CS ,MUR ) ) ) ) ) - DS ) ) )", "obj1": 0.5590551181102362, "obj2": 0.2512495070379408}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) ,( ( ( AMS + FirstVNF_RAM ) + Min( AMS ,Const ) ) * PN ) ) ) - MDR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( CS / Min( MUC ,RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( ( MUC + CS ) + MUM ) + ( MUM - Min( RCSe ,( MUC - Max( ( RMSe / CS ),MUR ) ) ) ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.13735198966928233}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS / RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * Min( ACS ,( AMS + ( RRS + Min( MRS ,Min( MDR ,AMS ) ) ) ) ) ) - CRS ) )", "choosing": "( ( MUC * ( ( ( Max( Min( RRSe ,MUM ),RRSe ) * ( DS / ( CS / RMSe ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) / ( ( MUR - CS ) + DS ) )", "obj1": 0.13976377952755906, "obj2": 0.6944811143868714}, {"determining": "( ( ( Max( MRS,Min( FirstVNF_Mem ,MRS ) ) + MDR ) - ( FirstVNF_CPU * ( BR / ( PN * BR ) ) ) ) - Max( Max( ACS,Max( Max( MDR,DDR ),BR ) ),( FirstVNF_Mem_Server * DDR ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( ( MLU * Min( Min( Max( ( ( RRSe * MLU ) - CS ),DS ) ,MUR ) ,( ( ( Min( MUR ,DS ) * RCSe ) + Max( ( RRSe * MUR ),RRSe ) ) - ( MUC - Max( CS,( RRSe * MUM ) ) ) ) ) ) * MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.6181098641056284}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * BR )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6423978959566059}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * ( FirstVNF_Mem - Const ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( RMSe * DS ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * Min( RRSe ,MLU ) ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,( RMSe / RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6377952755905512, "obj2": 0.18791323475430105}, {"determining": "( Min( MRS ,PN ) * ( ( ( ( ( ( AMS + ( DDR - MDR ) ) + Max( Min( MDR ,AMS ),BR ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) + Max( CS,( Min( ( RMSe / DS ) ,CS ) + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * MUC ) + ( RRSe + DS ) ),DS ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RMSe ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.7559055118110236, "obj2": 0.09966456343019849}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_CPU_Server ) * Min( ACS ,( ( ( ( DDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ) - AMS ) * FirstVNF_Mem ) ) ) - CRS ) )", "choosing": "( Min( Max( MUM,MUC ) ,MLU ) / ( Min( MUM ,RCSe ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.04235727086380719}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) * ( ( ( ( ( Min( ( ARS + MRS ) ,FirstVNF_RAM ) + AMS ) * Max( ( CRS - RRS ),Min( ( AMS + DDR ) ,PN ) ) ) - MDR ) * Min( ACS ,( RRS - MDR ) ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( MUC * ( ( ( MLU / MUM ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS + CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) / ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / MLU ) ) * Max( DS,MUC ) ) + DS ) )", "obj1": 0.3700787401574803, "obj2": 0.4395773761814482}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,( FirstVNF_Mem / ( Const + MDR ) ) ) ) - ( ( CRS * ACS ) / Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ,MUM ) - Max( ( ( CS / Max( Max( MUM,RMSe ),( MUC + MUR ) ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ),CS ) ) / Min( ( CS * CS ) ,( RRSe + RMSe ) ) ) - Min( CS ,( Min( DS ,MUC ) * ( MUM / RRSe ) ) ) )", "obj1": 0.9212598425196851, "obj2": 0.026860152332222515}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MRS ,PN ) ) ) * PN ) - MDR ) ) )", "choosing": "( ( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7023688876936485}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ,CS ) ,( ( Min( RCSe ,RMSe ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( ( ( ( ( ( AMS + ACS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( Const + MRS ) ) - MDR ) * Min( FirstVNF_Mem_Server ,( Max( ARS,ACS ) - Max( ( DDR + CRS ),FirstVNF_CPU_Server ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) + RRSe ) / RCSe ) - Min( CS ,Min( RCSe ,( MUM - Min( ( RMSe - RRSe ) ,Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.45632169842439957}, {"determining": "( Max( ( ( DDR + AMS ) + Max( ( Min( Min( ( MDR * Const ) ,( PN - MDR ) ) ,Min( RRS ,AMS ) ) * ( ( AMS - ARS ) / BR ) ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) ) ) - CRS ) )", "choosing": "( ( MUC - DS ) - ( CS / ( ( RRSe - DS ) * ( ( CS + ( MUM - ( RRSe / ( CS * MUM ) ) ) ) - MUM ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.3549551372186988}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Max( FirstVNF_RAM_Server,RRS ) ) ,ACS ) - Min( ( FirstVNF_CPU_Server * PN ) ,MDR ) ) + CRS ),AMS ) ),( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ) - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( DS / MUM ) - ( CS + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + Min( MUR ,MUR ) ) / ( CS - DS ) ) ) + ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8432782116452626}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( Max( FirstVNF_CPU,DDR ),Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( CRS - ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - FirstVNF_RAM ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( ( ( MUC - Min( ( DS - ( MLU * MLU ) ) ,Max( DS,RRSe ) ) ) + RCSe ) * ( ( ( ( Min( MUM ,RRSe ) / RRSe ) * ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.5728346456692913, "obj2": 0.23715888498456245}, {"determining": "( Max( PN,ACS ) * ( Max( ( MRS - ( ( AMS * ARS ) / ( DDR - Const ) ) ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * Const ) )", "choosing": "( ( ( ( ( DS / ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Min( MUM ,( DS + CS ) ) - RCSe ) )", "obj1": 0.33070866141732286, "obj2": 0.47984870971098587}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( ACS - RRS ),Max( FirstVNF_RAM_Server,MRS ) ) ) * ACS ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( Min( RMSe ,( MUM - Min( ( MLU / Min( CS ,MLU ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ,CS ) )", "obj1": 0.49606299212598426, "obj2": 0.29515453131794556}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( ARS - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.45866141732283466, "obj2": 0.33008142857089434}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( ( CRS - ( ( ( ( ( ( FirstVNF_RAM / MDR ) * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( ( ( FirstVNF_Mem_Server * ( Const + FirstVNF_Mem_Server ) ) * ARS ) / ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ACS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * PN ) ) ) ) * Max( RRS,MRS ) )", "choosing": "( Min( CS ,Min( RMSe ,( MUM - Min( ( ( MUR - RCSe ) - Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( DS + MUC ) ) ) ) ) ) ) - ( MUC - CS ) )", "obj1": 0.7322834645669292, "obj2": 0.11820470773948184}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + CRS ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.6496062992125984, "obj2": 0.18090270156066127}, {"determining": "( ( DDR + MRS ) * ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( Max( ( CS * ( MLU * MUM ) ),( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Min( RCSe ,Max( RCSe,Min( RCSe ,DS ) ) ) ) ) * ( RCSe * RRSe ) ) ) )", "obj1": 0.5196850393700787, "obj2": 0.2741887782786079}, {"determining": "( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_Mem ,Min( FirstVNF_Mem ,CRS ) ) ,BR ) ) ) * PN ) - MDR ) * Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Min( RCSe ,Max( RCSe,Min( DS ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39629927938736864}, {"determining": "( ( MRS - RRS ) * ( FirstVNF_Mem * ( ( ( ( ( AMS + DDR ) + Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.16635887368310628}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( DDR + FirstVNF_RAM ) ),PN ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( CS,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( ( MUC - ( CS / DS ) ),CS ) ) ) * ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5183844984917613}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( DDR - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,MUM ) ) ) ) * DS ) ) )", "obj1": 0.6909448818897638, "obj2": 0.14804083333767204}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( DDR - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6929133858267716, "obj2": 0.14678351496866837}, {"determining": "( ( ( ( ( ( FirstVNF_CPU + RRS ) * PN ) - MDR ) * Min( ( Max( Min( FirstVNF_Mem ,ACS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) * ( Max( ( PN * PN ),BR ) / Const ) ) ,ACS ) ) + CRS ) * FirstVNF_RAM )", "choosing": "( Min( MLU ,Max( MUC,MUR ) ) / ( ( ( Min( CS ,Min( ( RCSe + Max( RMSe,MLU ) ) ,( ( RCSe / MUC ) + CS ) ) ) * RCSe ) / MUC ) - ( MUM - ( Max( Min( ( ( CS + MUM ) / Min( MLU ,MUC ) ) ,RRSe ),( MUR * RRSe ) ) / ( MUM / MUC ) ) ) ) )", "obj1": 0.8681102362204725, "obj2": 0.04823950154091913}, {"determining": "Max( ( FirstVNF_RAM - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6656114806164882}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( Min( RCSe ,RMSe ) + DS ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( Max( ( RCSe - Max( RMSe,Min( RRSe ,RMSe ) ) ),( RMSe - MUR ) ) / Max( ( ( RCSe - RRSe ) * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Max( RMSe,Min( Min( Max( Min( MUM ,MUM ),MLU ) ,DS ) ,CS ) ) )", "obj1": 0.7480314960629921, "obj2": 0.10726496101599887}, {"determining": "( ( ( ( ( Max( Max( ( DDR / FirstVNF_Mem_Server ),FirstVNF_CPU ),AMS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - BR ) * Max( FirstVNF_Mem,( ( PN + FirstVNF_RAM ) + CRS ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( MUC / MUC ) * MUC ) - DS ) / ( MUC * ( ( ( MLU - ( Max( MLU,RCSe ) * CS ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5851198582832301}, {"determining": "( ( ( ( ( ( AMS + ( Max( PN,ACS ) * ( ACS * ARS ) ) ) + ( RRS + PN ) ) * PN ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( RCSe * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( DS + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,MUR ) ) - Max( RCSe,Max( RCSe,Min( DS ,RCSe ) ) ) ) ) * MUC ) ) )", "obj1": 0.1515748031496063, "obj2": 0.6841793749831686}, {"determining": "( ( ( FirstVNF_Mem + ( FirstVNF_RAM_Server * PN ) ) / ( Const + FirstVNF_Mem ) ) * ( ( ( MDR - ( ( ( FirstVNF_CPU - ARS ) * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,RRS ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ) * Max( CRS,( ( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),FirstVNF_RAM ) + MRS ) / FirstVNF_CPU_Server ) ) ) - CRS ) )", "choosing": "( ( RCSe / ( RRSe / ( Min( MUC ,MLU ) - CS ) ) ) - Min( ( MUC * ( RMSe * MUC ) ) ,Min( Min( MUM ,CS ) ,( MUM - Min( ( ( ( CS + DS ) + CS ) + Max( Max( MUR,DS ),Max( MUR,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.11314071514731507}, {"determining": "( ( MRS - RRS ) * ( FirstVNF_Mem * ( ( ( ( ( AMS + DDR ) + Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.17461177753617593}, {"determining": "( ( ( ( ( Max( Min( Min( FirstVNF_Mem_Server ,CRS ) ,RRS ),ARS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,Max( ACS,ARS ) ) ) ) * FirstVNF_Mem ) - MDR ) * Min( ACS ,Max( DDR,( DDR + PN ) ) ) ) * FirstVNF_RAM )", "choosing": "( DS / ( RRSe * ( ( ( ( Max( RRSe,MUM ) + RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RCSe / CS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( MUC ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.17913385826771652, "obj2": 0.659187094512851}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( Min( MRS ,MDR ) - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( ( MUM + CS ) ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.639742059008125}, {"determining": "( ( ( ( ( Max( Min( Min( FirstVNF_Mem_Server ,CRS ) ,RRS ),ARS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,Max( ACS,ARS ) ) ) ) * FirstVNF_Mem ) - MDR ) * Min( ACS ,Max( DDR,( ( FirstVNF_CPU + DDR ) + PN ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( RRSe * ( ( ( ( Max( RRSe,MUM ) + RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RCSe / CS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( MUC ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5755353999536376}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( Const + PN ) * ( ( ( FirstVNF_RAM / CRS ) + Max( BR,Min( RRS ,ACS ) ) ) * Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),FirstVNF_RAM ) ) ) * FirstVNF_Mem_Server ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) / Min( RCSe ,RRSe ) ) / Max( ( ( RMSe / CS ) + ( RRSe * DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - ( DS / ( ( ( MUC - CS ) - Min( DS ,RRSe ) ) + Max( MUC,MLU ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.2909402115216}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( FirstVNF_CPU_Server + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * FirstVNF_RAM ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( Min( ( RMSe / DS ) ,CS ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.47834645669291337, "obj2": 0.30898355691285545}, {"determining": "( Max( PN,PN ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_Mem ,Min( FirstVNF_Mem ,CRS ) ) ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( Min( ( RMSe / DS ) ,CS ) * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.39960629921259844, "obj2": 0.40949595442911213}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( ( Max( Min( MDR ,AMS ),( MRS - AMS ) ) + ( AMS + ( DDR - ( Const + FirstVNF_CPU_Server ) ) ) ) * PN ) - MDR ),MRS ) )", "choosing": "( ( Min( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) ,MUC ) + ( ( CS * ( MLU * MUM ) ) * ( ( MLU + RCSe ) / Max( RMSe,MLU ) ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.20275590551181102, "obj2": 0.628043223938032}, {"determining": "( Max( PN,ACS ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.3858267716535433, "obj2": 0.414629393440067}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + MDR ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Max( RRSe,MUM ) + RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RCSe / CS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( MUC ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.37598425196850394, "obj2": 0.4263480972678622}, {"determining": "( Max( RRS,MRS ) * ( ( Max( RRS,MDR ) * Min( ACS ,( Min( ( AMS + FirstVNF_RAM ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( RMSe + MLU ) - Min( ( RRSe + MUR ) ,Max( ( MUR / ( ( ( ( MLU / RMSe ) + MUR ) / Min( CS ,MUR ) ) - MUM ) ),( Max( MUM,RMSe ) + ( ( RMSe + MUC ) * MUC ) ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.07707115290664376}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( Max( ( FirstVNF_Mem_Server * ACS ),Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( ACS - RRS ),Max( FirstVNF_RAM_Server,MRS ) ) ) * ACS ) ) ) - CRS ) )", "choosing": "( ( MUM - ( MUM - MLU ) ) - Min( Min( RMSe ,( MUM - Min( ( MLU / Min( CS ,MLU ) ) ,( MUM - ( Min( RCSe ,MUC ) * MUR ) ) ) ) ) ,CS ) )", "obj1": 0.5452755905511811, "obj2": 0.256955686613975}, {"determining": "( Max( PN,PN ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( ( MDR - MDR ) ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( RRSe / ( DS / DS ) ) + ( DS * ( DS * RMSe ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( ( DS / DS ) ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / MUM ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * ( CS / ( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38357140851882826}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + ( CRS - RRS ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * DS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.765748031496063, "obj2": 0.09023274677574006}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,Min( BR ,FirstVNF_RAM_Server ) ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( Min( RCSe ,RMSe ) + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) + ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.25, "obj2": 0.573515807392448}, {"determining": "( Max( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) + RRS ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( Min( FirstVNF_CPU_Server ,PN ) + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( Max( RCSe,MUR ) - Min( CS ,Min( RMSe ,( MUM - Min( Max( RCSe,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.8188976377952756, "obj2": 0.0659435573958059}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( MDR - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.7244094488188977, "obj2": 0.1256644533545887}, {"determining": "( Max( PN,PN ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( ( MDR - MDR ) ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.38200574362650586}, {"determining": "( Max( RRS,MRS ) * ( ( Min( ACS ,( ( ( Const + FirstVNF_Mem_Server ) * Max( ( ARS - AMS ),( MDR - RRS ) ) ) * PN ) ) * ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( Min( ( CS / ( MUC / RRSe ) ) ,( DS / MUC ) ),MUC ) ) - Min( CS ,Min( RMSe ,Min( MUM ,Min( Min( RCSe ,( RRSe + MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6279527559055118, "obj2": 0.19472973534533417}, {"determining": "( Max( ( MDR + DDR ),PN ) * ( ( ( MDR - ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - AMS ),Min( MDR ,PN ) ) ) * PN ) ) * ( ACS - FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( DS * RRSe ) - Min( CS ,Min( CS ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.5905511811023622, "obj2": 0.22526867655144947}, {"determining": "( Max( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC - RMSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS * RMSe ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2627581546484601}, {"determining": "( Max( ( Max( ( RRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) + ( AMS + DDR ) ),( DDR * PN ) ) * ( ( ( MDR - ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ARS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) ) / Min( Const ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( RMSe * MLU ) + MLU ) ) * RMSe ) + ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RCSe / ( Max( MUM,DS ) / ( MLU / CS ) ) ) ) ) * DS ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( RMSe / ( MUC - ( ( MUM - MUM ) + ( MUR * DS ) ) ) ) ) * DS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.52422093769799}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) ) ),ACS ) * ( ( ( ( ( FirstVNF_CPU_Server + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * FirstVNF_RAM ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( CS ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4822834645669291, "obj2": 0.30263103503288163}, {"determining": "( ( MRS - RRS ) * ( FirstVNF_Mem * ( ( ( ( ( AMS + DDR ) + Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.655511811023622, "obj2": 0.1754779891099216}, {"determining": "( ( ( ( ( ( ( MRS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( ( ( ( Const - RRS ) + ( DDR - MDR ) ) + Max( Min( MDR ,AMS ),( MRS - AMS ) ) ) * PN ) - MDR ),ACS ) )", "choosing": "( ( Max( CS,( MUM - MLU ) ) + DS ) / ( MUC * ( ( ( Min( CS ,( RMSe / DS ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * RRSe ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6322840796186063}, {"determining": "( ( MRS * RRS ) * ( FirstVNF_Mem * ( ( ( ( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,MRS ) ) + Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / Max( DS,Max( Min( ( Min( MLU ,CS ) - RCSe ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( ( DS * RMSe ) * DS ) + ( ( DS / DS ) / RRSe ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.16137864197526555}, {"determining": "( Max( BR,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( Min( FirstVNF_Mem ,MRS ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS - RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( Max( RCSe,( ( CS * CS ) / ( MUR + CS ) ) ) - ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) * DS ) ) )", "obj1": 0.5807086614173228, "obj2": 0.23107324724640982}, {"determining": "( Max( ( ( AMS + DDR ) + ( ( MRS - RRS ) * Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem + FirstVNF_RAM ) + Max( ( MRS - ARS ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) ) ),ACS ) * ( PN / ( FirstVNF_CPU + BR ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + Min( DS ,Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( MUC / RMSe ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.281496062992126, "obj2": 0.5276402612345418}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Min( ACS ,( Max( Min( FirstVNF_Mem ,ACS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) * ( Max( ( PN * PN ),BR ) / MDR ) ) ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( Min( MLU ,Max( MUC,MUR ) ) / ( ( ( Min( CS ,Min( ( ( DS / DS ) / RRSe ) ,( ( RCSe / MUC ) + CS ) ) ) * RCSe ) / MUC ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.0701029047829376}, {"determining": "( Max( PN,ACS ) * ( ( ( CRS + FirstVNF_Mem ) * Min( ACS ,BR ) ) - MDR ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * MUC ) / ( ( Min( ( RCSe / MUM ) ,( MUR - RCSe ) ) / ( ( RMSe / DS ) - CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8956692913385826, "obj2": 0.040856237188203304}, {"determining": "( Max( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( CS / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( ( MUC + CS ) + MUM ) + ( MUM - Min( RCSe ,( MUC - Max( Max( MUR,MLU ),MUR ) ) ) ) ) ) )", "obj1": 0.5551181102362205, "obj2": 0.2565637036144873}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server * PN ) - MDR ) * Max( ( ( ARS / PN ) / FirstVNF_CPU ),BR ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( Min( MLU ,Max( MUC,MUR ) ) / ( ( ( Min( CS ,Min( ( RCSe + MLU ) ,( ( RCSe / MUC ) + CS ) ) ) * RCSe ) / MUC ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.7893700787401575, "obj2": 0.0798643263429432}, {"determining": "( Max( PN,PN ) * ( ( Max( Max( FirstVNF_Mem_Server,Min( Min( ( FirstVNF_RAM_Server * MRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,BR ) ),( AMS + DDR ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( ( DS / DS ) / RRSe ) + ( ( DS * ( CS - Min( MUC ,MLU ) ) ) * ( ( ( DS * RCSe ) + RMSe ) - ( Min( MUR ,RCSe ) / RMSe ) ) ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( Min( ( RMSe / DS ) ,CS ) * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) + Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.38976377952755903, "obj2": 0.4117523187823042}, {"determining": "( Max( PN,ACS ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4015748031496063, "obj2": 0.39924084431425494}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( Max( MDR,( ARS - CRS ) ) * PN ) - MDR ) * ( ( Max( FirstVNF_Mem_Server,RRS ) * ARS ) / ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ACS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,MUR ) ) - Min( CS ,( RMSe * ( MUM - Min( CS ,( MUM - ( RRSe / ( CS * MUM ) ) ) ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08241930695325018}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( Max( PN,DDR ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),( MDR - RRS ) ) ) * PN ) ) ) - ( Max( CRS,PN ) * ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUR - CS ) + DS ) / ( MUC * ( ( ( Max( Min( RRSe ,( MLU * DS ) ),RRSe ) * ( DS / ( CS * RMSe ) ) ) / ( Max( RCSe,( RMSe / ( RRSe + CS ) ) ) - ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) * DS ) ) )", "obj1": 0.8405511811023622, "obj2": 0.05948195951154214}], "45": [{"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,DS ),MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) * ( ( ( ( ( Min( ( ARS + MRS ) ,FirstVNF_RAM ) + AMS ) * Max( ( AMS + DDR ),Min( ( AMS + DDR ) ,PN ) ) ) - MDR ) * Min( ACS ,( CRS - MDR ) ) ) - ( ( Min( ACS ,FirstVNF_Mem ) * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( MUC * ( ( ( MLU / MUM ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( MUM / MUR ) / ( RRSe + CS ) ) ) ) ) * DS ) ) / ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / MLU ) ) * ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + Min( MRS ,MDR ) ),( RRS / ( ARS - MRS ) ) )", "choosing": "( ( MUC / ( Min( ( Min( Max( RRSe,( DS * DS ) ) ,CS ) + ( MUM / ( MUM + CS ) ) ) ,CS ) * DS ) ) / ( Max( ( DS - MLU ),( ( MUM + CS ) / ( CS - DS ) ) ) + ( Min( ( MLU / ( MUR / Min( Max( RCSe,RCSe ) ,( CS / CS ) ) ) ) ,RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8473084721343253}, {"determining": "( ( ( ( ( ( ( MRS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( ( ( ( Const - RRS ) + ( DDR - MDR ) ) + Max( Min( MDR ,AMS ),( MRS - AMS ) ) ) * PN ) - MDR ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.5196850393700787, "obj2": 0.27309941533094056}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( FirstVNF_CPU,Max( Max( MDR,RRS ),( AMS + FirstVNF_Mem_Server ) ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - BR ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) - ( DS / RMSe ) ) / ( ( MUC + ( ( MLU * MLU ) + CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7138329183836766}, {"determining": "( Max( PN,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + RRS ) )", "choosing": "( ( ( DS + ( ( ( RRSe - CS ) - Max( ( ( MUR - RCSe ) - RRSe ),DS ) ) + ( MUC + Min( MUC ,( Max( MUM,MLU ) / RCSe ) ) ) ) ) + MUC ) / ( Min( DS ,( RRSe * CS ) ) + ( ( ( ( Max( ( CS * MUM ),MUM ) / ( DS + CS ) ) * DS ) - Min( ( Min( Max( MLU,MUR ) ,( DS + MUR ) ) + RCSe ) ,RRSe ) ) - Max( Max( ( RRSe + RMSe ),RRSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7508174439093815}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( Const + PN ) * ( ( ( FirstVNF_RAM / CRS ) + Max( BR,Min( RRS ,ACS ) ) ) * Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),FirstVNF_RAM ) ) ) * FirstVNF_Mem_Server ) - CRS ) )", "choosing": "( ( ( Max( CS,( DS + Min( RCSe ,RMSe ) ) ) / Min( RCSe ,RRSe ) ) / Max( ( ( RMSe / CS ) + ( RRSe * DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - ( DS / ( ( ( MUC - CS ) - Min( DS ,RRSe ) ) + Max( MUC,MLU ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.2909402115216}, {"determining": "( BR * ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( ( Max( Const,ARS ) + RRS ) * Max( RRS,Min( ARS ,Max( Min( FirstVNF_RAM ,AMS ),CRS ) ) ) ) ) - CRS ) )", "choosing": "( ( ( DS / Max( MLU,Max( MLU,RRSe ) ) ) + ( DS - Min( ( Max( RRSe,RMSe ) / ( ( Min( MUM ,RRSe ) / Min( MUR ,RMSe ) ) - MUR ) ) ,RRSe ) ) ) - Min( RMSe ,Min( RMSe ,MUM ) ) )", "obj1": 0.9429133858267716, "obj2": 0.021173655202461898}, {"determining": "( Max( ( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ),ACS ) * ( ( ( ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + FirstVNF_RAM ) + Const ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( MUC - RMSe ) - Min( CS ,Min( RMSe ,( MUM - Min( ( DS * RMSe ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2627581546484601}, {"determining": "( Max( ( ( ( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) + BR ) * PN ) - MDR ) + DDR ) - Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( DDR * Max( CRS,Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "( ( CS + CS ) / ( Max( ( CS + ( MLU * MUR ) ),RMSe ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( CS / DS ) ) / ( ( MUC / ( MLU * DS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3726374908160192}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) ,( ( ( AMS + FirstVNF_RAM ) + Min( AMS ,Const ) ) * PN ) ) ) - MDR ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( CS / Min( MUC ,RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,( ( ( MUC + CS ) + MUM ) + ( MUM - Min( RCSe ,( MUC - Max( ( RMSe / CS ),MUR ) ) ) ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.13735198966928233}, {"determining": "( Max( RRS,MRS ) * ( ( Min( ACS ,( ( ( Const + FirstVNF_Mem_Server ) * Max( ( ARS - AMS ),( MDR - RRS ) ) ) * PN ) ) * ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( Min( ( CS / ( MUC / RRSe ) ) ,( DS / MUC ) ),MUC ) ) - Min( CS ,Min( RMSe ,Min( MUM ,Min( Min( RCSe ,( RRSe + MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6279527559055118, "obj2": 0.19472973534533417}, {"determining": "( Max( PN,ACS ) * ( ( ( MRS - ( ( AMS * ARS ) / ( DDR - Const ) ) ) / ( ( ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - Const ),Min( CRS ,MDR ) ) ) * PN ) - MDR ) ) * CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,Max( RMSe,MLU ) ) / RRSe ) * ( RMSe / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4841545550243651}, {"determining": "( ( ( MDR * Min( CRS ,FirstVNF_RAM_Server ) ) - ( ( ( ( Const / Min( MDR ,FirstVNF_RAM ) ) * PN ) - RRS ) * Max( ( CRS - PN ),Const ) ) ) * ( ( ACS + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( RRSe * MUM ) ) / Min( Max( MUR,MUC ) ,( ( MUC / MUC ) - CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.7931761038727725}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( RRS / PN ) ) ) - ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS + ( DS - RMSe ) ) / RRSe ) / DS ) - ( MUC - Min( DS ,Max( ( MUC - ( CS / DS ) ),RCSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3427612310238057}, {"determining": "Max( ( ACS / Max( CRS,RRS ) ),( MRS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RCSe / ( ( MUC / DS ) - ( MLU + RMSe ) ) ) * Max( Min( RCSe ,RMSe ),( MUR * Min( ( ( RMSe / RCSe ) * CS ) ,RMSe ) ) ) ) / MUC ) / RRSe )", "obj1": 0.08464566929133858, "obj2": 0.820481911352113}, {"determining": "( ( CRS - ( ( ( ( RRS + FirstVNF_CPU_Server ) - MDR ) - ( ACS - FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem / ( MRS + Max( RRS,CRS ) ) ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,MUC ) / RCSe ) - ( ( ( ( ( RCSe + RMSe ) + Max( CS,Max( MUM,Min( RRSe ,MUR ) ) ) ) / RRSe ) * ( MUR - RCSe ) ) / ( ( MUC - Min( ( RMSe / DS ) ,MUR ) ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01876630724433797}, {"determining": "( ( FirstVNF_RAM + ( ACS * ( FirstVNF_Mem + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * PN ) * MDR ) )", "choosing": "( ( ( ( MUM + ( RMSe + MLU ) ) * ( DS / Min( MUC ,Max( ( Max( RRSe,DS ) + MUC ),MUR ) ) ) ) + ( MUC - Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * ( ( ( ( RCSe - MUR ) * ( Min( RRSe ,MUR ) / RRSe ) ) / ( ( ( ( MUM * CS ) * ( CS * MLU ) ) * RCSe ) - ( RCSe * MUR ) ) ) * DS ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20876858120715863}, {"determining": "( ( ( ( PN * ( ( AMS + FirstVNF_RAM ) + ( RRS + FirstVNF_CPU_Server ) ) ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( ( RRS - ACS ) ,FirstVNF_Mem ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * Min( RCSe ,RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( DS + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / RRSe ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.265748031496063, "obj2": 0.561382343793996}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,BR ) ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_Mem ,Min( FirstVNF_Mem ,CRS ) ) ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( ( DS / DS ) / RRSe ) + ( DS * ( DS * RMSe ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( ( DS / DS ) ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * Min( CS ,( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.43700787401574803, "obj2": 0.36051985816036003}, {"determining": "( ( ( ( ( ( AMS + ACS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( Const + MRS ) ) - MDR ) * Min( FirstVNF_Mem_Server ,( Max( ARS,ACS ) - Max( ( DDR + CRS ),FirstVNF_CPU_Server ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( Min( RRSe ,MUM ) + RRSe ) / RCSe ) - Min( CS ,Min( RCSe ,( MUM - Min( ( RMSe - RRSe ) ,Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.45632169842439957}, {"determining": "Max( ( FirstVNF_RAM - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6653302002000261}, {"determining": "( ( ( Max( MRS,Min( FirstVNF_Mem ,MRS ) ) + MDR ) - ( FirstVNF_CPU * ( BR / ( PN * BR ) ) ) ) - Max( Max( ACS,Max( Max( MDR,DDR ),BR ) ),( FirstVNF_Mem_Server * DDR ) ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( DS / MUR ) ) + DS ) / ( ( MLU * Min( Min( Max( ( ( RRSe * MLU ) - CS ),DS ) ,MUR ) ,( ( ( Min( MUR ,DS ) * RCSe ) + Max( ( RRSe * MUR ),RRSe ) ) - ( MUC - Max( CS,( RRSe * MUM ) ) ) ) ) ) * MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.6181098641056284}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + BR ) * ( FirstVNF_Mem - Const ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( RMSe * DS ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * Min( RRSe ,MLU ) ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,( RMSe / RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6377952755905512, "obj2": 0.18791323475430105}, {"determining": "( ( ( Min( MRS ,FirstVNF_RAM ) * ( PN / BR ) ) * Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server * ( MDR - Max( Const,PN ) ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( MUR + ( MUR * MUC ) ) / RRSe ) ) * MUC ) + DS ) / ( ( CS * ( DS + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( ( MLU * RMSe ) ,RMSe ) / RRSe ) * ( Min( MUC ,Min( MUM ,RRSe ) ) / RMSe ) ) / ( ( MUC / Min( Min( RRSe ,RRSe ) ,MUR ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4704724409448819, "obj2": 0.3153311577926612}, {"determining": "( Max( PN,ACS ) * ( ( ( CRS + FirstVNF_Mem ) * Min( ACS ,BR ) ) - MDR ) )", "choosing": "( ( ( RCSe * ( DS / MUR ) ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * MUC ) / ( ( Min( ( RCSe / MUM ) ,( MUR - RCSe ) ) / ( ( RMSe / DS ) - CS ) ) - Max( RCSe,MUR ) ) ) * DS ) ) )", "obj1": 0.8956692913385826, "obj2": 0.040856237188203304}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),( FirstVNF_Mem_Server - ARS ) ) * ( ( ( ( ( Max( Const,( BR / DDR ) ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RCSe + DS ) ),( MLU + ( ( ( RCSe + CS ) * RRSe ) / MLU ) ) ) ) - Min( CS ,Min( RMSe ,( Min( Min( RCSe ,Max( MLU,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) - MUM ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5064550571203311}, {"determining": "( Max( ( ( AMS + DDR ) + ( AMS + ( Max( PN,ACS ) * ( AMS / FirstVNF_RAM ) ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( DS / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.31299212598425197, "obj2": 0.5013983850528856}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + RRS ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / ( RMSe / ( RRSe + CS ) ) ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,RMSe ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.6062992125984252, "obj2": 0.2119505480275594}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_CPU_Server ) * Min( ACS ,( ( ( ( DDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ) - AMS ) * FirstVNF_Mem ) ) ) - CRS ) )", "choosing": "( ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6789539486027786}, {"determining": "( PN - ( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( RCSe ,MUC ),( DS * Max( DS,Min( Min( RMSe ,RMSe ) ,Min( RRSe ,MUR ) ) ) ) ) * ( MUR * ( ( RCSe / RMSe ) - Max( DS,MUM ) ) ) ) + DS ) / ( MUC * ( ( ( ( ( Min( DS ,MUM ) + MUM ) / RRSe ) * Max( DS,( CS + ( RRSe / MLU ) ) ) ) / ( ( MUC / ( ( RMSe / DS ) / CS ) ) - Max( MUR,RCSe ) ) ) * DS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6084806348126973}, {"determining": "( ( BR / ( ( ( CRS - AMS ) / Min( FirstVNF_Mem ,( ( ( AMS - MDR ) * ( AMS / FirstVNF_RAM ) ) * ( FirstVNF_CPU / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) * ( ( Min( DDR ,PN ) / AMS ) * ARS ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( MUC * ( RMSe + MUC ) ) / ( RRSe - CS ) ) + ( ( Min( RRSe ,( Max( MUM,( CS + DS ) ) + ( RRSe + ( RCSe / MUC ) ) ) ) * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7696742180349676}, {"determining": "( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server * BR ) - FirstVNF_CPU_Server ) * Min( ACS ,( ( ( ( DDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ) - AMS ) * FirstVNF_Mem ) ) ) - CRS ) )", "choosing": "( Min( Max( MUM,MUC ) ,MLU ) / ( Min( MUM ,RCSe ) - ( MUM - ( RMSe / ( MUM / MUC ) ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.04235727086380719}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * BR )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6423978959566059}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,( FirstVNF_Mem / ( Const + MDR ) ) ) ) - ( ( CRS * ACS ) / Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ,MUM ) - Max( ( ( CS / Max( Max( MUM,RMSe ),( MUC + MUR ) ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ),CS ) ) / Min( ( CS * CS ) ,( RRSe + RMSe ) ) ) - Min( CS ,( Min( DS ,MUC ) * ( MUM / RRSe ) ) ) )", "obj1": 0.905511811023622, "obj2": 0.032533696632607675}, {"determining": "( ACS - Max( Max( FirstVNF_RAM,Max( FirstVNF_RAM,BR ) ),Max( RRS,( ( RRS - Const ) * PN ) ) ) )", "choosing": "Min( Min( ( CS * ( DS - Max( Min( RMSe ,DS ),RCSe ) ) ) ,CS ) ,( ( Min( RCSe ,RMSe ) / ( Min( RCSe ,( MUR - MLU ) ) + ( DS * Max( RMSe,( MUM + ( MUC * RCSe ) ) ) ) ) ) / RCSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5531013592102648}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,( FirstVNF_Mem / ( Const + MDR ) ) ) ) - ( ( CRS * ACS ) / Min( BR ,MDR ) ) ) )", "choosing": "( ( ( Min( ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ,MUM ) - Max( ( ( CS / Max( Max( MUM,RMSe ),( MUC + MUR ) ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ),CS ) ) / Min( ( CS * CS ) ,( RRSe + RMSe ) ) ) - Min( CS ,( Min( DS ,MUC ) * ( MUM / RRSe ) ) ) )", "obj1": 0.9212598425196851, "obj2": 0.026860152332222515}, {"determining": "( ( ( ( ( ( FirstVNF_CPU + RRS ) * PN ) - MDR ) * Min( ( Max( Min( FirstVNF_Mem ,ACS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) * ( Max( ( PN * PN ),BR ) / Const ) ) ,ACS ) ) + CRS ) * FirstVNF_RAM )", "choosing": "( Min( MLU ,Max( MUC,MUR ) ) / ( ( ( Min( CS ,Min( ( RCSe + Max( RMSe,MLU ) ) ,( ( RCSe / MUC ) + CS ) ) ) * RCSe ) / MUC ) - ( MUM - ( Max( Min( ( ( CS + MUM ) / Min( MLU ,MUC ) ) ,RRSe ),( MUR * RRSe ) ) / ( MUM / MUC ) ) ) ) )", "obj1": 0.8681102362204725, "obj2": 0.04823950154091913}, {"determining": "( Max( ( ( DDR + AMS ) + Max( ( Min( Min( ( MDR * Const ) ,( PN - MDR ) ) ,Min( RRS ,AMS ) ) * ( ( AMS - ARS ) / BR ) ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + BR ) * PN ) ) ) - CRS ) )", "choosing": "( ( MUC - DS ) - ( CS / ( ( RRSe - DS ) * ( ( CS + ( MUM - ( RRSe / ( CS * MUM ) ) ) ) - MUM ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.3549551372186988}, {"determining": "Max( ( MDR + Max( ( ( Min( ( ( CRS * ACS ) - Max( FirstVNF_RAM_Server,RRS ) ) ,ACS ) - Min( ( FirstVNF_CPU_Server * PN ) ,MDR ) ) + CRS ),AMS ) ),( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( AMS ,MDR ) ) ) - ( ACS * PN ) ) )", "choosing": "( ( MUC / ( ( CS / ( ( DS / MUM ) - ( CS + RMSe ) ) ) * DS ) ) / ( Max( ( DS + MLU ),( ( MUM + Min( MUR ,MUR ) ) / ( CS - DS ) ) ) + ( Max( Min( RMSe ,MUM ),RCSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8432782116452626}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),( MDR - RRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / ( RMSe / ( RRSe + CS ) ) ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( ( DS / DS ) / RRSe ) ) ) )", "obj1": 0.8070866141732284, "obj2": 0.07153951865428913}, {"determining": "( ( FirstVNF_Mem / ( Const + MDR ) ) * ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Max( ( MLU + MLU ),( ( CS / Max( Max( MUM,RMSe ),DS ) ) * ( ( RRSe - RMSe ) / ( MLU * DS ) ) ) ) ) + ( ( Min( RRSe ,MUM ) / RRSe ) / ( MLU + ( ( Min( RRSe ,MUM ) / RRSe ) * ( RMSe / RMSe ) ) ) ) ) / ( MUC * ( ( CS / ( ( ( ( RCSe - MUM ) / MUC ) * MUM ) * MUM ) ) - DS ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7524661604779175}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe * MUC ) + ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.4479617265570358}, {"determining": "( ( Min( ( DDR + AMS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server - RRS ) / BR ) ) * ( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,Min( Min( ( Const + ( Min( AMS ,DDR ) / ( DDR / FirstVNF_CPU ) ) ) ,CRS ) ,Max( Const,CRS ) ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe + CS ) ) + ( ( ( Min( RCSe ,MUC ) / DS ) / RRSe ) * ( MUC + DS ) ) ) / Max( MUC,( Min( ( ( DS / ( Min( MUM ,CS ) / MUR ) ) + RMSe ) ,( MLU - RCSe ) ) - ( Min( CS ,MUR ) + CS ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7743997409336887}, {"determining": "( Max( BR,( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ( ( RRS * Min( ( MRS + AMS ) ,( FirstVNF_RAM + RRS ) ) ) / PN ) * FirstVNF_Mem ) ) ) * ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC + ( MUC * RMSe ) ) / ( CS * ( RCSe / ( ( ( DS - MLU ) * Max( MUM,RCSe ) ) * CS ) ) ) ) / RRSe )", "obj1": 0.09645669291338582, "obj2": 0.806663227071022}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) * ( ( ( ( ( Min( ( ARS + MRS ) ,FirstVNF_RAM ) + AMS ) * Max( ( CRS - RRS ),Min( ( AMS + DDR ) ,PN ) ) ) - MDR ) * Min( ACS ,( RRS - MDR ) ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( MUC * ( ( ( MLU / MUM ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS + CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) / ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / MLU ) ) * Max( DS,MUC ) ) + DS ) )", "obj1": 0.3700787401574803, "obj2": 0.4395773761814482}, {"determining": "( ( CRS - ( ( ( ( ( ( FirstVNF_RAM / MDR ) * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * ( ( ( FirstVNF_Mem_Server * ( Const + FirstVNF_Mem_Server ) ) * ARS ) / ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ACS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * PN ) ) ) ) * Max( RRS,MRS ) )", "choosing": "( Min( CS ,Min( RMSe ,( MUM - Min( ( ( MUR - RCSe ) - Max( MUR,MUR ) ) ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( DS + MUC ) ) ) ) ) ) ) - ( MUC - CS ) )", "obj1": 0.7322834645669292, "obj2": 0.11820470773948184}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( DDR - FirstVNF_RAM_Server ) * Min( ACS ,PN ) ) - CRS ) )", "choosing": "( ( DS * MUR ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5390133088198928}, {"determining": "( Min( FirstVNF_RAM_Server ,RRS ) * ( ( Max( ( MDR * MDR ),( ACS / MDR ) ) - ARS ) + ARS ) )", "choosing": "( Max( MUC,MUM ) / ( MUC - ( ( CS / ( ( ( ( CS - MUM ) / MUC ) * MUM ) * ( RMSe + ( MUR / Min( CS ,MUR ) ) ) ) ) - DS ) ) )", "obj1": 0.5590551181102362, "obj2": 0.2512495070379408}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + CRS ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.6496062992125984, "obj2": 0.18090270156066127}, {"determining": "( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_Mem ,Min( FirstVNF_Mem ,CRS ) ) ,BR ) ) ) * PN ) - MDR ) * Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Min( RCSe ,Max( RCSe,Min( DS ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.4094488188976378, "obj2": 0.39629927938736864}, {"determining": "( ( ( ( ( Max( Min( Min( FirstVNF_Mem_Server ,CRS ) ,RRS ),ARS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,Max( ACS,ARS ) ) ) ) * FirstVNF_Mem ) - MDR ) * Min( ACS ,Max( DDR,( DDR + PN ) ) ) ) * FirstVNF_RAM )", "choosing": "( DS / ( RRSe * ( ( ( ( Max( RRSe,MUM ) + RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RCSe / CS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( MUC ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.17913385826771652, "obj2": 0.659187094512851}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + ( RRS + FirstVNF_CPU_Server ) ) * PN ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.22440944881889763, "obj2": 0.599637396744493}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( Max( PN,DDR ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),( MDR - RRS ) ) ) * PN ) ) ) - ( Max( CRS,PN ) * ( MDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUR - CS ) + DS ) / ( MUC * ( ( ( Max( Min( RRSe ,( MLU * DS ) ),RRSe ) * ( DS / ( CS * RMSe ) ) ) / ( Max( RCSe,( RMSe / ( RRSe + CS ) ) ) - ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) ) * DS ) ) )", "obj1": 0.8405511811023622, "obj2": 0.05948195951154214}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( FirstVNF_Mem_Server,Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - BR ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / Min( ( RMSe / DS ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2404567458996321}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS + RRS ),FirstVNF_CPU_Server ) * Min( ( ( ( ( RRS + PN ) / DDR ) * ( FirstVNF_RAM_Server * ( MDR - ACS ) ) ) * FirstVNF_Mem_Server ) ,MDR ) ) - CRS ) )", "choosing": "( ( DS + ( RCSe * ( DS / MUR ) ) ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) / ( ( ( MUR - MUR ) - MUR ) / RMSe ) ) / ( ( ( Min( MLU ,RRSe ) / RRSe ) / ( ( RMSe / DS ) / CS ) ) - Max( RCSe,( MUM * MUR ) ) ) ) * DS ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4609039304799878}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( MDR - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.718503937007874, "obj2": 0.12839838623085215}, {"determining": "( ( ( ( ( ( AMS + ( Max( PN,ACS ) * ( AMS / FirstVNF_RAM ) ) ) + ( RRS + FirstVNF_CPU_Server ) ) * PN ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( RCSe * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( DS + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * MUC ) ) )", "obj1": 0.1515748031496063, "obj2": 0.683930681774876}, {"determining": "( Max( PN,ACS ) * ( Max( ( MRS - ( ( AMS * ARS ) / ( DDR - Const ) ) ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * Const ) )", "choosing": "( ( ( ( ( DS / ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Min( MUM ,( DS + CS ) ) - RCSe ) )", "obj1": 0.33070866141732286, "obj2": 0.47984870971098587}, {"determining": "( ( ( ( ( Max( Max( ( DDR / FirstVNF_Mem_Server ),FirstVNF_CPU ),AMS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - BR ) * Max( FirstVNF_Mem,( ( PN + FirstVNF_RAM ) + CRS ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( MUC / MUC ) * MUC ) - DS ) / ( MUC * ( ( ( MLU - ( Max( MLU,RCSe ) * CS ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5851198582832301}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - Const ) ) ) ),ACS ) )", "choosing": "( ( ( RCSe * ( Min( RRSe ,MUM ) / MUR ) ) + ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( MUC * MUC ) )", "obj1": 0.234251968503937, "obj2": 0.5958350028575667}, {"determining": "( ( BR * ( ( ACS * DDR ) * ( Min( CRS ,( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + Const ) ) ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / Min( ( ( RCSe / MLU ) / ( RCSe / RRSe ) ) ,( ( ( Max( MUM,CS ) / RMSe ) - MUM ) / DS ) ) ) / RRSe )", "obj1": 0.08858267716535433, "obj2": 0.8111955912840696}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * ( AMS + ( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / RRSe ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6374542885259885}, {"determining": "( Max( PN,ACS ) * ( ( Max( ( MRS / RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * Min( ACS ,( AMS + ( RRS + Min( MRS ,Min( MDR ,AMS ) ) ) ) ) ) - CRS ) )", "choosing": "( ( MUC * ( ( ( Max( Min( RRSe ,MUM ),RRSe ) * ( DS / ( CS / RMSe ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) / ( ( MUR - CS ) + DS ) )", "obj1": 0.13976377952755906, "obj2": 0.6944811143868714}, {"determining": "( ( ( ( ( Max( Min( Min( FirstVNF_Mem_Server ,CRS ) ,RRS ),ARS ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,Max( ACS,ARS ) ) ) ) * FirstVNF_Mem ) - MDR ) * Min( ACS ,Max( DDR,( ( FirstVNF_CPU + DDR ) + PN ) ) ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( RRSe * ( ( ( ( Max( RRSe,MUM ) + RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RCSe / CS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( MUC ,RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5755353999536376}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( DDR - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( RCSe + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( DS + Min( RCSe ,RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.6948818897637795, "obj2": 0.1458457768958529}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( ARS - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.45866141732283466, "obj2": 0.33008142857089434}, {"determining": "( ( ( ( ( ( ( AMS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( ( Max( Min( MDR ,AMS ),( MRS - AMS ) ) + ( AMS + ( DDR - ( Const + FirstVNF_CPU_Server ) ) ) ) * PN ) - MDR ),MRS ) )", "choosing": "( ( Min( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) ,MUC ) + ( ( CS * ( MLU * MUM ) ) * ( ( MLU + RCSe ) / Max( RMSe,MLU ) ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.20275590551181102, "obj2": 0.628043223938032}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + Max( ( MDR - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.7244094488188977, "obj2": 0.1256644533545887}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( RRS - RRS ),( MDR - RRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / ( RMSe / ( RRSe + CS ) ) ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MLU + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.594488188976378, "obj2": 0.22015530937899241}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MRS ,PN ) ) ) * PN ) - MDR ) ) )", "choosing": "( ( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7023688876936485}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( Max( ( FirstVNF_Mem_Server * ACS ),Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( ACS - RRS ),Max( FirstVNF_RAM_Server,MRS ) ) ) * ACS ) ) ) - CRS ) )", "choosing": "( ( MUM - ( MUM - MLU ) ) - Min( Min( RMSe ,( MUM - Min( ( MLU / Min( CS ,MLU ) ) ,( MUM - ( Min( RCSe ,MUC ) * MUR ) ) ) ) ) ,CS ) )", "obj1": 0.5452755905511811, "obj2": 0.256955686613975}, {"determining": "( Min( MRS ,PN ) * ( ( ( ( ( ( AMS + ( DDR - MDR ) ) + Max( Min( MDR ,AMS ),BR ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) + Max( CS,( Min( ( RMSe / DS ) ,CS ) + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( CS * MUC ) + ( RRSe + DS ) ),DS ) ) - Min( CS ,Min( RMSe ,( MUM - Min( RMSe ,( ( RRSe - RRSe ) / ( ( RCSe - RCSe ) + ( RMSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.7559055118110236, "obj2": 0.09966456343019849}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( ARS - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.45866141732283466, "obj2": 0.33008142857089434}, {"determining": "( Max( ( Max( ( RRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) + ( AMS + DDR ) ),( DDR * PN ) ) * ( ( ( MDR - ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - ARS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) ) / Min( Const ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( RMSe * MLU ) + MLU ) ) * RMSe ) + ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - ( RCSe / ( Max( MUM,DS ) / ( MLU / CS ) ) ) ) ) * DS ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( RMSe / ( MUC - ( ( MUM - MUM ) + ( MUR * DS ) ) ) ) ) * DS ) ) )", "obj1": 0.28937007874015747, "obj2": 0.52422093769799}, {"determining": "( ( AMS * Max( MDR,FirstVNF_RAM_Server ) ) * ( ( ( ( ( AMS + MDR ) + ( CRS - RRS ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( DS * DS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.765748031496063, "obj2": 0.09023274677574006}, {"determining": "( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_Mem ,Min( FirstVNF_Mem ,CRS ) ) ,BR ) ) ) * PN ) - MDR ) * Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Min( RCSe ,Max( RCSe,Min( DS ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4026414197885835}, {"determining": "( Max( PN,PN ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( ( MDR - MDR ) ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( RRSe / ( DS / DS ) ) + ( DS * ( DS * RMSe ) ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( ( DS / DS ) ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / MUM ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * ( CS / ( MLU + ( RCSe / MUR ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38357140851882826}, {"determining": "( ( ( FirstVNF_Mem + ( FirstVNF_RAM_Server * PN ) ) / ( Const + FirstVNF_Mem ) ) * ( ( ( MDR - ( ( ( FirstVNF_CPU - ARS ) * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,RRS ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ) * Max( CRS,( ( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),FirstVNF_RAM ) + MRS ) / FirstVNF_CPU_Server ) ) ) - CRS ) )", "choosing": "( ( RCSe / ( RRSe / ( Min( MUC ,MLU ) - CS ) ) ) - Min( ( MUC * ( RMSe * MUC ) ) ,Min( Min( MUM ,CS ) ,( MUM - Min( ( ( ( CS + DS ) + CS ) + Max( Max( MUR,DS ),Max( MUR,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.11314071514731507}, {"determining": "Max( ( FirstVNF_RAM - MDR ),Min( ( Max( ( Min( ( FirstVNF_RAM / BR ) ,( ( AMS - ACS ) * ( FirstVNF_CPU / DDR ) ) ) * MRS ),ACS ) - Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( MRS - RRS ),( ACS / ( ACS - MDR ) ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6887501852543693}, {"determining": "( ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ( ( FirstVNF_Mem_Server + Min( AMS ,Min( Const ,Min( BR ,FirstVNF_RAM_Server ) ) ) ) - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( Max( CS,( Min( RCSe ,RMSe ) + Min( DS ,RMSe ) ) ) * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) + ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.25, "obj2": 0.573515807392448}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_RAM_Server * ( DDR - BR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU ,BR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - Max( ( DDR / FirstVNF_Mem_Server ),FirstVNF_CPU ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) - ( ( CRS * ACS ) - Min( BR ,MDR ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,MUM ) ) ) ) * ( ( MLU - ( Max( MLU,RCSe ) * CS ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.9862204724409449, "obj2": 0.005071868725376368}, {"determining": "( ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_Mem ,Min( FirstVNF_Mem ,CRS ) ) ,BR ) ) ) * PN ) - MDR ) * Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Min( RCSe ,Max( RCSe,Min( DS ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.38976377952755903, "obj2": 0.41013119188139413}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( Max( PN,ACS ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),( MDR - RRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( Min( Max( MUR,MUC ) ,MUR ) / ( CS / ( RRSe * MUM ) ) )", "obj1": 0.8582677165354331, "obj2": 0.05319808842048525}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - Const ),Min( CRS ,MDR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( Min( RCSe ,( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / CS ) + ( RRSe + DS ) ),( MLU + Max( DS,MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,RCSe ),MUR ) ) ) ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.47103035139606125}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( MRS + ( DDR - Const ) ) ) )", "choosing": "( ( RCSe / MUC ) / ( MUC - ( MUR + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.42569975080148653}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ( Const + DDR ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + BR ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,DS ),MUR ) ) ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011130737109416419}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) ) ),ACS ) * ( ( ( ( ( FirstVNF_CPU_Server + ( MRS - RRS ) ) * PN ) - MDR ) * FirstVNF_RAM ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( ( CS * ( MLU * Min( RRSe ,MLU ) ) ) * ( DS / RMSe ) ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( CS ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.7677165354330708, "obj2": 0.08875258222890288}, {"determining": "( Max( PN,ACS ) * ( ( ( ( ( ( ( Const + DDR ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + BR ) * PN ) - MDR ) * Min( ACS ,BR ) ) - CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) / ( DS - Max( Min( ( DS / MUC ) ,( MUR / ( MUC / RRSe ) ) ),MUC ) ) ) / RCSe ) - Min( CS ,Min( RMSe ,( MUM - Min( RCSe ,( MUC - Max( Max( RRSe,DS ),MUR ) ) ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011130737109416419}, {"determining": "( ( ( ( ( ( ( MRS + ( ARS + FirstVNF_Mem ) ) + ( ( MRS - RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) * Max( ( ( ( ( ( Const - RRS ) + ( DDR - MDR ) ) + Max( Min( MDR ,AMS ),( MRS - AMS ) ) ) * PN ) - MDR ),ACS ) )", "choosing": "( ( Max( CS,( MUM - MLU ) ) + DS ) / ( MUC * ( ( ( Min( CS ,( RMSe / DS ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * RRSe ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6322840796186063}, {"determining": "( Max( CRS,( ( ( AMS + MDR ) + Max( ( Max( Max( FirstVNF_CPU,DDR ),Const ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( MDR,( ARS - CRS ) ) ) ) * ( CRS - ( ( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - FirstVNF_RAM ),Min( MDR ,PN ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( ( ( MUC - Min( ( DS - ( MLU * MLU ) ) ,Max( DS,RRSe ) ) ) + RCSe ) * ( ( ( ( Min( MUM ,RRSe ) / RRSe ) * ( MUC / Min( ( RMSe / DS ) ,CS ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( ( CS * CS ) / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.5728346456692913, "obj2": 0.23715888498456245}, {"determining": "( Max( FirstVNF_RAM_Server,MDR ) * ( ( ( ( ( ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,MDR ) ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * Max( ( CRS - RRS ),Min( FirstVNF_CPU_Server ,PN ) ) ) - MDR ) * Min( ACS ,( FirstVNF_Mem / ( Const + MDR ) ) ) ) - ( ( CRS * ACS ) / Min( BR ,MDR ) ) ) )", "choosing": "( ( ( MUR - CS ) + DS ) / ( MUC * ( ( ( Max( Min( RRSe ,MUM ),RRSe ) * ( DS / ( CS / RMSe ) ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.9173228346456693, "obj2": 0.028864761970519667}, {"determining": "( Max( PN,PN ) * ( ( ( ( AMS + DDR ) + Max( FirstVNF_Mem_Server,Min( ( MDR - MDR ) ,BR ) ) ) * PN ) - MDR ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.38200574362650586}, {"determining": "( Max( RRS,MRS ) * ( ( ( ( ( ( FirstVNF_Mem_Server * ACS ) + Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,MDR ) ) ) * PN ) - MDR ) * Min( ACS ,( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),( MDR - RRS ) ) ) * PN ) ) ) - CRS ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Max( CS,( DS + Min( RCSe ,RMSe ) ) ) ) / Max( ( ( RMSe / ( RMSe / ( RRSe + CS ) ) ) + ( RRSe + DS ) ),( MLU + Max( ( MUC * ( ( MUR + MUR ) / MUR ) ),MLU ) ) ) ) - Min( CS ,Min( RMSe ,( MUM - Min( Min( RCSe ,Max( MUR,MUR ) ) ,( MUM - Max( Min( RCSe ,MUC ),MUR ) ) ) ) ) ) )", "obj1": 0.5905511811023622, "obj2": 0.22362403485411242}, {"determining": "( Max( PN,ACS ) * ( ( ( ( PN * ( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) + Max( ( MRS - RRS ),Min( ACS ,MDR ) ) ) ) - MDR ) * ( MRS - ( ( AMS * ARS ) / ( BR / FirstVNF_Mem_Server ) ) ) ) * CRS ) )", "choosing": "( ( DS - RCSe ) / ( ( RCSe + ( ( MUR - MUC ) - Min( Max( MUM,CS ) ,( MUR + Min( RMSe ,Max( MUC,MUR ) ) ) ) ) ) * ( ( Max( ( Min( CS ,Min( RCSe ,MUM ) ) / RRSe ),( MUC / RMSe ) ) / ( ( ( Min( RRSe ,MUM ) / CS ) / Min( ( RCSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( DS ,MUC ) ) ) ) ) * DS ) ) )", "obj1": 0.33858267716535434, "obj2": 0.46620498036652247}, {"determining": "( ( MRS - RRS ) * ( FirstVNF_Mem * ( ( ( ( ( AMS + DDR ) + Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / DS ) ,CS ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) )", "obj1": 0.655511811023622, "obj2": 0.1754779891099216}, {"determining": "( ( FirstVNF_Mem + ( RRS * ( Max( ( FirstVNF_Mem - RRS ),ACS ) + FirstVNF_CPU ) ) ) - Max( ( ( MDR - ( ( ( DDR + FirstVNF_CPU ) + Max( ( MRS + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,ACS ) ),( ( ( ( AMS + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( MRS ,PN ) ) ) * PN ) - MDR ) ) )", "choosing": "( ( ( ( ( ( ( ( RCSe - RCSe ) + ( RMSe + MUC ) ) * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + DS ) / ( MUC * ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,( RMSe / ( RRSe + CS ) ) ) ) ) * DS ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7100158027319694}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( ( ( ( Min( Max( ( FirstVNF_CPU_Server * CRS ),FirstVNF_Mem ) ,( FirstVNF_CPU + ( FirstVNF_RAM_Server - Const ) ) ) * PN ) - MDR ) * Min( ACS ,DDR ) ) - CRS ) )", "choosing": "Min( ( ( CS * Max( MUC,MUM ) ) - CS ) ,( ( ( CS * ( DS - Max( CS,RCSe ) ) ) - ( ( Min( RMSe ,DS ) + RRSe ) - ( ( ( CS / RMSe ) + ( DS + RRSe ) ) * ( ( ( DS - MUR ) + ( MLU + RMSe ) ) / ( CS - DS ) ) ) ) ) / MUM ) )", "obj1": 0.8307086614173228, "obj2": 0.06351141082799344}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) * ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5183844984917613}, {"determining": "( Max( ( ( AMS + DDR ) + Max( ( Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( DDR + FirstVNF_RAM ) ),PN ) - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ),ACS ) * ( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) - MDR ) * Min( ACS ,FirstVNF_Mem_Server ) ) - CRS ) )", "choosing": "( ( ( ( ( DS * ( DS * RMSe ) ) + ( ( DS / DS ) / RRSe ) ) * MUC ) + ( ( ( ( Min( RRSe ,MUM ) / RRSe ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( CS,Min( RMSe ,RCSe ) ) ) ) ) * DS ) ) / ( MUC * ( ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( ( MUC - ( CS / DS ) ),CS ) ) ) * ( ( ( CS * ( MLU * MUM ) ) * ( DS / RMSe ) ) / ( ( MUC / Min( ( RMSe / DS ) ,CS ) ) - Max( RCSe,Max( RCSe,Min( RMSe ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5183844984917613}]}